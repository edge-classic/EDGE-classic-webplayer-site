{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/index.tsx","webpack:///./components/player/style.css","webpack:///./edge-classic.js","webpack:///./components/licenses/style.css","webpack:///./components/licenses/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","Preact","render","hydrate","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","init","u","v","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","_","k","this","context","b","indexOf","g","base","push","w","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","x","a","Array","isArray","A","C","$","nextSibling","S","O","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","P","H","contextType","__E","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","some","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","current","unmount","componentWillUnmount","B","firstChild","D","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","__V","__N","filter","every","F","clearTimeout","cancelAnimationFrame","requestAnimationFrame","Error","U","useSignal","__$f","__$u","peek","getCookie","cname","ca","window","cookie","split","charAt","substring","subscribe","valueOf","toString","set","displayName","defineProperties","configurable","__np","_scriptDir","createEdgeModule","currentScript","src","undefined","assert","condition","text","abort","updateMemoryViews","wasmMemory","buffer","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAP32","Int32Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","addRunDependency","_Module$monitorRunDep","_Module","runDependencies","removeRunDependency","_Module$monitorRunDep2","_Module2","runDependencyWatcher","clearInterval","dependenciesFulfilled","callback","what","_Module$onAbort","_Module3","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","getBinarySync","file","wasmBinaryFile","wasmBinary","readBinary","instantiateArrayBuffer","binaryFile","imports","receiver","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","fetch","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","concat","ExitStatus","status","message","setValue","ptr","endsWith","intArrayFromString","stringy","dontAddNull","len","lengthBytesUTF8","u8array","numBytesWritten","stringToUTF8Array","_glGenVertexArrays","arrays","__glGenObject","GL","vaos","run","doRun","calledRun","FS","initialized","ignorePermissions","TTY","callRuntimeCallbacks","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","args","entryFunction","_main","unshift","thisProgram","argc","argv","stackAlloc","argv_ptr","arg","stringToUTF8OnStack","ret","exitJS","handleException","callMain","cb","__ATPOSTRUN__","postRun","arguments_","__ATPRERUN__","preRun","_this","moduleArg","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","open","responseType","onprogress","size","total","loaded","addedTotal","dataFileDownloads","num","download","Math","ceil","onerror","onload","statusText","responseURL","send","runWithFS","check","msg","stack","processPackageData","arrayBuffer","ArrayBuffer","byteArray","compressedData","_typeof","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","indexedDB","PACKAGE_UUID","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","onupgradeneeded","db","target","result","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","byteLength","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","put","putMetadataRequest","uuid","cacheRemotePackage","lastIndexOf","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","moduleOverrides","_extends","quit_","toThrow","scriptDirectory","href","substr","responseText","out","log","path","tempDouble","tempI64","__ATEXIT__","dataURIPrefix","isDataURI","filename","startsWith","_emscripten_get_now","ASM_CONSTS","edgePostInit","$0","$1","UTF8ToString","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","str","reply","prompt","allocate","ALLOC_NORMAL","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","SDL2","capture","audio","audioContext","autoResumeAudioContext","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","dynCall","connect","destination","no_microphone","silenceBuffer","createBuffer","video","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","pixels","ctxCanvas","ctx","imageCtx","image","createImageData","dst","CanvasPixelArray","val","data32Data","data32","data8","subarray","putImageData","$4","hot_x","hot_y","canvas","width","height","getContext","toDataURL","urlBuf","_malloc","stringToUTF8","innerWidth","innerHeight","alert","elements","element","func","listenOnce","resume","callbacks","sig","rtn","apply","dynCallLegacy","noExitRuntime","PATH","isAbs","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","join","dirname","dir","basename","lastSlash","paths","join2","randomFill","view","crypto","getRandomValues","initRandomFill","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","min","samePartsLength","outputParts","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","u0","u1","u2","String","fromCharCode","ch","FS_stdin_getChar_buffer","charCodeAt","heap","outIdx","maxBytesToWrite","startIdx","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","readline","FS_stdin_getChar","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","ioctl_tiocgwinsz","default_tty1_ops","mmapAlloc","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","id","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","_i2","_Object$keys","keys","newname","oldpath","position","canOwn","whence","prot","flags","allocated","preloadPlugins","FS_getMode","canRead","canWrite","dbs","_indexedDB","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","values","getDB","req","fileStore","indexNames","createIndex","unique","preventDefault","isRealDir","toAbsolute","mountpoint","map","stat","pop","index","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","e2","getTime","remove","oncomplete","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","Browser","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","floor","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd","getStreamChecked","getStream","createStream","FSStream","shared","isRead","isWrite","isAppend","closeStream","_stream$stream_ops$op","_stream$stream_ops","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","next","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","FS_modeStringToFlags","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","buf","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","code","staticInit","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","_output$buffer","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","fn","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","abs","doMsync","addr","varargs","getp","getStr","setErrNo","___errno_location","outPtr","convertI32PairToI53Checked","lo","hi","NaN","isLeapYear","year","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","getFullYear","getMonth","getDate","stringToNewUTF8","_emscripten_set_main_loop_timing","mainLoop","timingMode","timingValue","running","scheduler","timeUntilNextTick","tickStartTime","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","stopPropagation","postMessage","performance","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","_SDL$audio","_SDL$audio$queueNewAu","queue","blocker","remainingBlockers","remaining","counted","updateStatus","currentFrameNumber","newRenderingFrameStarted","runIter","SDL","queueNewAudioData","runtimeKeepaliveCounter","keepRuntimeAlive","_Module$onExit","_Module4","_exit","callUserCallback","maybeExit","safeSetTimeout","timeout","pause","expected","expectedBlockers","_Module$postMainLoop","_Module5","isFullscreen","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","imagePlugin","noImageDecoding","Blob","getMimetype","URL","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","requestPointerLock","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","GLctx","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","requestFullscreen","fullscreenChange","_Module$onFullScreen","_Module6","_Module$onFullscreen","_Module7","canvasContainer","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","setWindowedCanvasSize","Element","nextRAF","fakeRequestAnimationFrame","delay","_requestAnimationFrame","_x","RAF","safeRequestAnimationFrame","_window","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","touches","lastTouches","calculateMouseCoords","pageX","pageY","rect","getBoundingClientRect","scrollX","pageXOffset","scrollY","pageYOffset","adjustedX","left","adjustedY","top","setMouseCoords","_Browser$calculateMou","calculateMouseEvent","touch","coords","identifier","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","screen","wNative","hNative","widthNative","heightNative","round","factor","removeProperty","EGL","errorCode","defaultDisplayInitialized","currentContext","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","param","lowLatency","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","contexts","offscreenCanvases","queries","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","unpackAlignment","recordError","lastError","getNewId","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","clz32","generateTempBuffers","quads","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","bindBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","getParameter","getTempIndexBuffer","ibo","prevIBO","vb","getSource","shader","string","source","calcBufLength","stride","usedTempBuffers","preDrawHandleClientVertexAttribBindings","resetBufferBinding","maxVertexAttribs","clientBuffers","clientside","enabled","bufferSubData","vertexAttribPointerAdaptor","normalized","postDrawHandleClientVertexAttribBindings","currentArrayBufferBinding","getContextSafariWebGL2Fixed","ver","attrs","gl","WebGLRenderingContext","handle","registerContext","_allSupportedExtensions","getSupportedExtensions","supportedExtensionsForGetProcAddress","ext","version","GLctxObject","enableExtensionsByDefault","initExtensions","_GL$currentContext","deleteContext","JSEvents","removeAllHandlersOnTarget","initExtensionsDone","getExtension","divisor","first","primcount","indices","webgl_enable_ANGLE_instanced_arrays","vao","webgl_enable_OES_vertex_array_object","bufs","webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","disjointTimerQueryExt","multiDrawWebgl","webgl_enable_WEBGL_multi_draw","getExtensions","exts","_eglWaitGL","readEmAsmArgsArray","readEmAsmArgs","sigPtr","wide","withStackSave","stackSave","stackRestore","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","userActivation","isActive","currentEventHandler","allowsDeferredCalls","runDeferredCalls","eventTypeString","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","handlerFunc","callbackfunc","getNodeNameForTarget","nodeName","fullscreenEnabled","webkitFullscreenEnabled","setLetterbox","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","restoreOldWindowedStyle","specialHTMLTargets","findEventTarget","cString","findCanvasEventTarget","getCanvasElementSize","_emscripten_get_canvas_element_size","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","targetInt","currentFullscreenStrategy","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","screenHeight","canvasSize","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","cssHeight","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","webkitRequestFullscreen","ALLOW_KEYBOARD_INPUT","fillGamepadEventData","eventStruct","axes","buttons","pressed","connected","mapping","_emscripten_glActiveTexture","x0","activeTexture","_emscripten_glAttachShader","program","attachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","currentElementArrayBufferBinding","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","_emscripten_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_glBindVertexArray","bindVertexArray","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_emscripten_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendEquation","blendEquation","_emscripten_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_emscripten_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBufferData","usage","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_emscripten_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","convertI32PairToI53","_emscripten_glClientWaitSync","sync","timeout_low","timeout_high","clientWaitSync","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","format","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_emscripten_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","uniformIdCounter","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","cullFace","_emscripten_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteQueries","ids","query","deleteQuery","_emscripten_glDeleteQueriesEXT","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteSamplers","deleteSampler","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteSync","deleteSync","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_glDeleteVertexArrays","deleteVertexArray","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_emscripten_glDepthFunc","depthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","disable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDrawArrays","drawArrays","_glDrawArraysInstanced","drawArraysInstanced","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","tempFixedLengthArray","_glDrawBuffers","bufArray","drawBuffers","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_glDrawElements","drawElements","_emscripten_glDrawElements","_glDrawElementsInstanced","drawElementsInstanced","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_emscripten_glEnable","enable","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_emscripten_glFrontFace","frontFace","createFunction","objectTable","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_emscripten_glGenRenderbuffers","_emscripten_glGenSamplers","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_emscripten_glGenVertexArrays","_glGenVertexArraysOES","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","__glGetActiveAttribOrUniform","funcName","bufSize","info","numBytesWrittenExclNull","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","pname","params","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","writeI53ToI64","emscriptenWebGLGet","name_","formats","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_glGetFloatv","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","getProgramParameter","getActiveUniform","getActiveAttrib","_glGetQueryObjecti64vEXT","getQueryParameter","_emscripten_glGetQueryObjecti64vEXT","_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectivEXT","_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_glGetQueryObjectuivEXT","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","getShaderParameter","_emscripten_glGetString","glVersion","glslVersion","ver_num","match","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","webglGetLeftBracePos","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","nm","sz","lb","arrayName","_emscripten_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","getUniformLocation","webglGetUniformLocation","currentProgram","webglLoc","emscriptenWebGLGetUniform","getUniform","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","emscriptenWebGLGetVertexAttrib","getVertexAttrib","fround","_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIiv","_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_emscripten_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_glIsVertexArray","array","isVertexArray","_emscripten_glIsVertexArray","_glIsVertexArrayOES","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_emscripten_glPixelStorei","pixelStorei","_emscripten_glPolygonOffset","polygonOffset","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_emscripten_glReadBuffer","readBuffer","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","byteSize","sizePerPixel","colorChannelsInGlTextureFormat","bytes","alignment","alignedRowSize","roundedToNextMultipleOf","computeUnpackAlignedImageSize","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_emscripten_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterfv","_emscripten_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteriv","_emscripten_glScissor","scissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","stencilFunc","_emscripten_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilMask","stencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_emscripten_glStencilOp","stencilOp","_emscripten_glStencilOpSeparate","stencilOpSeparate","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","texImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_emscripten_glTexParameteri","texParameteri","_emscripten_glTexParameteriv","_emscripten_glTexStorage2D","texStorage2D","_emscripten_glTexStorage3D","texStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","texSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","miniTempWebGLFloatBuffers","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","miniTempWebGLIntBuffers","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_glVertexAttribDivisor","vertexAttribDivisor","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","vertexAttribPointer","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","growMemory","pages","grow","disableGamepadApiIfItThrows","getGamepads","registerFocusEventCallback","userData","eventTypeId","focusEvent","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","et","isChanged","onTarget","changedTouches","targetTouches","targetRect","numTouches","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","Asyncify","handleSleep","wakeUp","isAsync","ENV","getEnvStrings","strings","env","languages","doReadv","iov","iovcnt","doWritev","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","runAndAbortIfError","instrumentWasmImports","importPattern","_i3","_Object$entries","_Object$entries$_i","_slicedToArray","original","instrumentWasmExports","_loop","_Object$entries2$_i","_Object$entries2","_i4","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","wasmExports","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","readMode","writeMode","createPreloadedFile","dontCreateFile","preFinish","processData","fileData","FS_createDataFile","FS_handledByPreloadPlugin","noRunDep","dep","asyncLoad","miniTempWebGLFloatBuffersStorage","miniTempWebGLIntBuffersStorage","wasmImports","__syscall_chdir","__syscall_dup3","newfd","old","existing","__syscall_faccessat","amode","__syscall_fcntl64","__syscall_fstat64","__syscall_getcwd","cwdLengthInBytes","__syscall_getdents64","dirp","struct_size","off","child","__syscall_ioctl","op","termios","argp","winsize","__syscall_lstat64","__syscall_mkdirat","__syscall_newfstatat","nofollow","__syscall_openat","__syscall_readlinkat","bufsize","endChar","__syscall_renameat","olddirfd","newdirfd","__syscall_rmdir","__syscall_stat64","__syscall_unlinkat","_emscripten_get_now_is_monotonic","_emscripten_throw_longjmp","Infinity","_gmtime_js","time_low","time_high","tmPtr","time","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","yday","_localtime_js","getSeconds","getMinutes","getHours","getDay","getTimezoneOffset","summerOffset","winterOffset","_mktime_js","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timeMs","isNaN","setTempRet0","_tzset_js","timezone","daylight","tzname","extractZone","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","eglBindAPI","api","eglChooseConfig","attrib_list","configs","eglCreateContext","hmm","contextAttribs","glesContextVersion","minorVersion","eglCreateWindowSurface","eglDestroyContext","eglDestroySurface","surface","eglGetConfigAttrib","eglGetDisplay","nativeDisplayType","eglGetError","eglInitialize","eglMakeCurrent","draw","eglQueryString","eglSwapBuffers","isContextLost","eglSwapInterval","interval","eglTerminate","eglWaitGL","eglWaitNative","emscripten_asm_const_int","argbuf","runEmAsmFunction","emscripten_asm_const_int_sync_on_main_thread","runMainThreadEmAsm","emscripten_date_now","emscripten_enter_soft_fullscreen","fullscreenStrategy","hiddenElements","onlyVisibleElement","displayState","hideEverythingExceptGivenElement","restoreHiddenElements","emscripten_exit_fullscreen","webkitExitFullscreen","emscripten_exit_pointerlock","emscripten_exit_soft_fullscreen","_restoreOldWindowedSt","emscripten_get_device_pixel_ratio","emscripten_get_element_css_size","emscripten_get_gamepad_status","gamepadState","lastGamepadState","emscripten_get_now","emscripten_get_num_gamepads","emscripten_get_screen_size","emscripten_glActiveTexture","emscripten_glAttachShader","emscripten_glBeginQuery","emscripten_glBeginQueryEXT","emscripten_glBeginTransformFeedback","emscripten_glBindAttribLocation","emscripten_glBindBuffer","emscripten_glBindBufferBase","emscripten_glBindBufferRange","emscripten_glBindFramebuffer","emscripten_glBindRenderbuffer","emscripten_glBindSampler","emscripten_glBindTexture","emscripten_glBindTransformFeedback","emscripten_glBindVertexArray","emscripten_glBindVertexArrayOES","emscripten_glBlendColor","emscripten_glBlendEquation","emscripten_glBlendEquationSeparate","emscripten_glBlendFunc","emscripten_glBlendFuncSeparate","emscripten_glBlitFramebuffer","emscripten_glBufferData","emscripten_glBufferSubData","emscripten_glCheckFramebufferStatus","emscripten_glClear","emscripten_glClearBufferfi","emscripten_glClearBufferfv","emscripten_glClearBufferiv","emscripten_glClearBufferuiv","emscripten_glClearColor","emscripten_glClearDepthf","emscripten_glClearStencil","emscripten_glClientWaitSync","emscripten_glColorMask","emscripten_glCompileShader","emscripten_glCompressedTexImage2D","emscripten_glCompressedTexImage3D","emscripten_glCompressedTexSubImage2D","emscripten_glCompressedTexSubImage3D","emscripten_glCopyBufferSubData","emscripten_glCopyTexImage2D","emscripten_glCopyTexSubImage2D","emscripten_glCopyTexSubImage3D","emscripten_glCreateProgram","emscripten_glCreateShader","emscripten_glCullFace","emscripten_glDeleteBuffers","emscripten_glDeleteFramebuffers","emscripten_glDeleteProgram","emscripten_glDeleteQueries","emscripten_glDeleteQueriesEXT","emscripten_glDeleteRenderbuffers","emscripten_glDeleteSamplers","emscripten_glDeleteShader","emscripten_glDeleteSync","emscripten_glDeleteTextures","emscripten_glDeleteTransformFeedbacks","emscripten_glDeleteVertexArrays","emscripten_glDeleteVertexArraysOES","emscripten_glDepthFunc","emscripten_glDepthMask","emscripten_glDepthRangef","emscripten_glDetachShader","emscripten_glDisable","emscripten_glDisableVertexAttribArray","emscripten_glDrawArrays","emscripten_glDrawArraysInstanced","emscripten_glDrawArraysInstancedANGLE","emscripten_glDrawArraysInstancedARB","emscripten_glDrawArraysInstancedEXT","emscripten_glDrawArraysInstancedNV","emscripten_glDrawBuffers","emscripten_glDrawBuffersEXT","emscripten_glDrawBuffersWEBGL","emscripten_glDrawElements","emscripten_glDrawElementsInstanced","emscripten_glDrawElementsInstancedANGLE","emscripten_glDrawElementsInstancedARB","emscripten_glDrawElementsInstancedEXT","emscripten_glDrawElementsInstancedNV","emscripten_glDrawRangeElements","emscripten_glEnable","emscripten_glEnableVertexAttribArray","emscripten_glEndQuery","emscripten_glEndQueryEXT","emscripten_glEndTransformFeedback","emscripten_glFenceSync","emscripten_glFinish","emscripten_glFlush","emscripten_glFramebufferRenderbuffer","emscripten_glFramebufferTexture2D","emscripten_glFramebufferTextureLayer","emscripten_glFrontFace","emscripten_glGenBuffers","emscripten_glGenFramebuffers","emscripten_glGenQueries","emscripten_glGenQueriesEXT","emscripten_glGenRenderbuffers","emscripten_glGenSamplers","emscripten_glGenTextures","emscripten_glGenTransformFeedbacks","emscripten_glGenVertexArrays","emscripten_glGenVertexArraysOES","emscripten_glGenerateMipmap","emscripten_glGetActiveAttrib","emscripten_glGetActiveUniform","emscripten_glGetActiveUniformBlockName","emscripten_glGetActiveUniformBlockiv","emscripten_glGetActiveUniformsiv","emscripten_glGetAttachedShaders","emscripten_glGetAttribLocation","emscripten_glGetBooleanv","emscripten_glGetBufferParameteri64v","emscripten_glGetBufferParameteriv","emscripten_glGetError","emscripten_glGetFloatv","emscripten_glGetFragDataLocation","emscripten_glGetFramebufferAttachmentParameteriv","emscripten_glGetInteger64i_v","emscripten_glGetInteger64v","emscripten_glGetIntegeri_v","emscripten_glGetIntegerv","emscripten_glGetInternalformativ","emscripten_glGetProgramBinary","emscripten_glGetProgramInfoLog","emscripten_glGetProgramiv","emscripten_glGetQueryObjecti64vEXT","emscripten_glGetQueryObjectivEXT","emscripten_glGetQueryObjectui64vEXT","emscripten_glGetQueryObjectuiv","emscripten_glGetQueryObjectuivEXT","emscripten_glGetQueryiv","emscripten_glGetQueryivEXT","emscripten_glGetRenderbufferParameteriv","emscripten_glGetSamplerParameterfv","emscripten_glGetSamplerParameteriv","emscripten_glGetShaderInfoLog","emscripten_glGetShaderPrecisionFormat","emscripten_glGetShaderSource","emscripten_glGetShaderiv","emscripten_glGetString","emscripten_glGetStringi","emscripten_glGetSynciv","emscripten_glGetTexParameterfv","emscripten_glGetTexParameteriv","emscripten_glGetTransformFeedbackVarying","emscripten_glGetUniformBlockIndex","emscripten_glGetUniformIndices","emscripten_glGetUniformLocation","emscripten_glGetUniformfv","emscripten_glGetUniformiv","emscripten_glGetUniformuiv","emscripten_glGetVertexAttribIiv","emscripten_glGetVertexAttribIuiv","emscripten_glGetVertexAttribPointerv","emscripten_glGetVertexAttribfv","emscripten_glGetVertexAttribiv","emscripten_glHint","emscripten_glInvalidateFramebuffer","emscripten_glInvalidateSubFramebuffer","emscripten_glIsBuffer","emscripten_glIsEnabled","emscripten_glIsFramebuffer","emscripten_glIsProgram","emscripten_glIsQuery","emscripten_glIsQueryEXT","emscripten_glIsRenderbuffer","emscripten_glIsSampler","emscripten_glIsShader","emscripten_glIsSync","emscripten_glIsTexture","emscripten_glIsTransformFeedback","emscripten_glIsVertexArray","emscripten_glIsVertexArrayOES","emscripten_glLineWidth","emscripten_glLinkProgram","emscripten_glPauseTransformFeedback","emscripten_glPixelStorei","emscripten_glPolygonOffset","emscripten_glProgramBinary","emscripten_glProgramParameteri","emscripten_glQueryCounterEXT","emscripten_glReadBuffer","emscripten_glReadPixels","emscripten_glReleaseShaderCompiler","emscripten_glRenderbufferStorage","emscripten_glRenderbufferStorageMultisample","emscripten_glResumeTransformFeedback","emscripten_glSampleCoverage","emscripten_glSamplerParameterf","emscripten_glSamplerParameterfv","emscripten_glSamplerParameteri","emscripten_glSamplerParameteriv","emscripten_glScissor","emscripten_glShaderBinary","emscripten_glShaderSource","emscripten_glStencilFunc","emscripten_glStencilFuncSeparate","emscripten_glStencilMask","emscripten_glStencilMaskSeparate","emscripten_glStencilOp","emscripten_glStencilOpSeparate","emscripten_glTexImage2D","emscripten_glTexImage3D","emscripten_glTexParameterf","emscripten_glTexParameterfv","emscripten_glTexParameteri","emscripten_glTexParameteriv","emscripten_glTexStorage2D","emscripten_glTexStorage3D","emscripten_glTexSubImage2D","emscripten_glTexSubImage3D","emscripten_glTransformFeedbackVaryings","emscripten_glUniform1f","emscripten_glUniform1fv","emscripten_glUniform1i","emscripten_glUniform1iv","emscripten_glUniform1ui","emscripten_glUniform1uiv","emscripten_glUniform2f","emscripten_glUniform2fv","emscripten_glUniform2i","emscripten_glUniform2iv","emscripten_glUniform2ui","emscripten_glUniform2uiv","emscripten_glUniform3f","emscripten_glUniform3fv","emscripten_glUniform3i","emscripten_glUniform3iv","emscripten_glUniform3ui","emscripten_glUniform3uiv","emscripten_glUniform4f","emscripten_glUniform4fv","emscripten_glUniform4i","emscripten_glUniform4iv","emscripten_glUniform4ui","emscripten_glUniform4uiv","emscripten_glUniformBlockBinding","emscripten_glUniformMatrix2fv","emscripten_glUniformMatrix2x3fv","emscripten_glUniformMatrix2x4fv","emscripten_glUniformMatrix3fv","emscripten_glUniformMatrix3x2fv","emscripten_glUniformMatrix3x4fv","emscripten_glUniformMatrix4fv","emscripten_glUniformMatrix4x2fv","emscripten_glUniformMatrix4x3fv","emscripten_glUseProgram","emscripten_glValidateProgram","emscripten_glVertexAttrib1f","emscripten_glVertexAttrib1fv","emscripten_glVertexAttrib2f","emscripten_glVertexAttrib2fv","emscripten_glVertexAttrib3f","emscripten_glVertexAttrib3fv","emscripten_glVertexAttrib4f","emscripten_glVertexAttrib4fv","emscripten_glVertexAttribDivisor","emscripten_glVertexAttribDivisorANGLE","emscripten_glVertexAttribDivisorARB","emscripten_glVertexAttribDivisorEXT","emscripten_glVertexAttribDivisorNV","emscripten_glVertexAttribI4i","emscripten_glVertexAttribI4iv","emscripten_glVertexAttribI4ui","emscripten_glVertexAttribI4uiv","emscripten_glVertexAttribIPointer","emscripten_glVertexAttribPointer","emscripten_glViewport","emscripten_glWaitSync","emscripten_has_asyncify","emscripten_memcpy_js","dest","copyWithin","emscripten_request_fullscreen_strategy","deferUntilInEventHandler","doRequestFullscreen","emscripten_request_pointerlock","emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","emscripten_sample_gamepad_data","emscripten_set_beforeunload_callback_on_thread","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","emscripten_set_blur_callback_on_thread","emscripten_set_canvas_element_size","emscripten_set_element_css_size","emscripten_set_focus_callback_on_thread","emscripten_set_fullscreenchange_callback_on_thread","emscripten_set_gamepadconnected_callback_on_thread","emscripten_set_gamepaddisconnected_callback_on_thread","emscripten_set_keydown_callback_on_thread","emscripten_set_keypress_callback_on_thread","emscripten_set_keyup_callback_on_thread","emscripten_set_main_loop","dynCall_v","emscripten_set_mousedown_callback_on_thread","emscripten_set_mouseenter_callback_on_thread","emscripten_set_mouseleave_callback_on_thread","emscripten_set_mousemove_callback_on_thread","emscripten_set_mouseup_callback_on_thread","emscripten_set_pointerlockchange_callback_on_thread","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","emscripten_set_resize_callback_on_thread","uiEvent","outerWidth","outerHeight","registerUiEventCallback","emscripten_set_touchcancel_callback_on_thread","emscripten_set_touchend_callback_on_thread","emscripten_set_touchmove_callback_on_thread","emscripten_set_touchstart_callback_on_thread","emscripten_set_visibilitychange_callback_on_thread","emscripten_set_wheel_callback_on_thread","onwheel","wheelEvent","registerWheelEventCallback","emscripten_set_window_title","title","emscripten_sleep","environ_get","__environ","environ_buf","stringToAscii","environ_sizes_get","penviron_count","penviron_buf_size","exit","fd_close","fd_read","pnum","fd_seek","offset_low","offset_high","newOffset","fd_write","glGetFloatv","invoke_vii","a1","a2","sp","dynCall_vii","_setThrew","strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getWeekBasedYear","thisDate","days","newDate","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","twelveHour","sum","arraySum","jan1","dec31","ahead","system","command","receiveInstance","instantiateStreaming","createWasm","a0","a3","a4","a5","a6","a7","a8","a9","a10","a11","runCaller","ready","license","LicenseModal","_ref","onClose","class","onClick","overflowY","overflowX","fontFamily","whiteSpace","fontSize","defaultDoomIWad","defaultHereticIWad","indexDBName","WadHandler","_defineProperty","signal","_openDatabase","_uploadWads","trace","wads","wadState","_asyncToGenerator","database","_database","upload","reader","FileReader","readAsArrayBuffer","iwad","trans","wadName","isIWAD","_database2","wad","_database3","_ret","setWads","_this2","dbrequest","projects","WadChooser","_getCookie$trim","_getCookie","_useState2","useState","showLicense","setShowLicense","pelements","flex","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","singleton","click","placeholder","spellcheck","onChange","_ev$target","_ev$target$value","_ev$target2","badFile","find","uploadWads","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","_useState4","loading","useEffect","syncCanvasSize","offsetWidth","offsetHeight","doSyncTimeout","canvasSync","_WebSyncScreenSize","iwadPath","customCommandLine","_toConsumableArray","_WebOpenGameMenu","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","preInit","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_ref2","_canvasRef$current","_x2","Player","App"],"mappings":"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AW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAA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W,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAA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U,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,4CAA6C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,4CAA6C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,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DAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gDAAiD,MAAS,SAAU,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AAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oC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AY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CA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AW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,M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","file":"bundle.3bcb6.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n","import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","import { Signal, signal } from '@preact/signals';\r\nimport { h } from 'preact';\r\nimport style from './style.css';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\nimport createEdgeModule from '../../edge-classic';\r\nimport LicenseModal from '../licenses';\r\n\r\nconst defaultDoomIWad = \"/freedoom2.wad\"\r\nconst defaultHereticIWad = \"/blasphem.wad\";\r\n\r\ntype PlayerConfig = {\r\n\tindexDBName: string;\r\n}\r\n\r\ntype WadState = {\r\n\terror?: string;\r\n\twadName?: string;\r\n\tisIWAD?: boolean;\r\n}\r\n\r\nconst config: PlayerConfig = {\r\n\tindexDBName: '/edge-classic'\r\n}\r\n\r\nfunction getCookie(cname: string): string {\r\n\tlet name = cname + \"=\";\r\n\tlet ca;\r\n\t// prerender guard\r\n\tif (typeof window !== 'undefined') {\r\n\t\tca = document.cookie.split(';');\r\n\t}\r\n\tif (!ca) {\r\n\t\treturn \"\";\r\n\t}\r\n\tfor (let i = 0; i < ca.length; i++) {\r\n\t\tlet c = ca[i];\r\n\t\twhile (c.charAt(0) == ' ') {\r\n\t\t\tc = c.substring(1);\r\n\t\t}\r\n\t\tif (c.indexOf(name) == 0) {\r\n\t\t\treturn c.substring(name.length, c.length);\r\n\t\t}\r\n\t}\r\n\treturn \"\";\r\n}\r\n\r\nclass WadHandler {\r\n\r\n\tconstructor(config: PlayerConfig) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tprivate error(message: string) {\r\n\t\talert(message);\r\n\t\tconsole.error(message);\r\n\t\tconsole.trace();\r\n\t}\r\n\r\n\tsetWads(wads: WadState[] | undefined) {\r\n\t\tthis.wadState.value = wads;\r\n\t}\r\n\r\n\tasync uploadWads(files: File[]) {\r\n\r\n\t\tconst wads: WadState[] = [];\r\n\r\n\t\tfor (let i = 0; i < files.length; i++) {\r\n\r\n\t\t\tconst file = files[i];\r\n\r\n\t\t\tlet database: IDBDatabase | undefined;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tdatabase = await this.openDatabase();\r\n\t\t\t\tif (!database) {\r\n\t\t\t\t\tthis.error(\"Unable to open database\")\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.error(e);\r\n\t\t\t\tdatabase?.close();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst upload = new Promise<WadState>((resolve, reject) => {\r\n\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.readAsArrayBuffer(file);\r\n\r\n\t\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\t\tconst bits = e.target.result;\r\n\t\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\r\n\r\n\t\t\t\t\tconst iwad = contents[0] === 73;\r\n\r\n\t\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\r\n\t\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\r\n\t\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\r\n\r\n\t\t\t\t\taddReq.onerror = (e) => {\r\n\t\t\t\t\t\treject(\"Error storing wad data\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttrans.oncomplete = (e) => {\r\n\t\t\t\t\t\tresolve({ wadName: file.name, isIWAD: iwad });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treader.onerror = (e) => {\r\n\t\t\t\t\treject(\"Error reading wad\");\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst wad = await upload;\r\n\t\t\t\tdatabase?.close();\r\n\t\t\t\tdatabase = undefined;\r\n\t\t\t\twads.push(wad)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.error(e);\r\n\t\t\t} finally {\r\n\t\t\t\tdatabase?.close();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setWads(wads.length ? wads : undefined);\r\n\r\n\t}\r\n\r\n\tprivate async openDatabase() {\r\n\r\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\r\n\r\n\t\t\t// build pre-render guard\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\r\n\r\n\t\t\t\tdbrequest.onerror = (e) => {\r\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\r\n\r\n\t\t\t\t\tconsole.log(\"upgrade needed\");\r\n\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\r\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\r\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\r\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdbrequest.onsuccess = (e) => {\r\n\t\t\t\t\tconsole.log(\"db open\");\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tresolve(db);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twadState: Signal<WadState[] | undefined> = signal(undefined);\r\n\r\n\tconfig: PlayerConfig;\r\n\r\n\tstatic get singleton(): WadHandler {\r\n\t\tif (!WadHandler.instance) {\r\n\t\t\tWadHandler.instance = new WadHandler(config);\r\n\t\t}\r\n\t\treturn WadHandler.instance;\r\n\t}\r\n\r\n\tprivate static instance?: WadHandler;\r\n}\r\n\r\ntype Project = {\r\n\tname: string;\r\n\timage: string;\r\n\tlink: string;\r\n}\r\n\r\nconst projects: Project[] = [\r\n\r\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\r\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\r\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\r\n]\r\n\r\nconst WadChooser = () => {\r\n\r\n\tconst [showLicense, setShowLicense] = useState(false);\r\n\r\n\tconst pelements = projects.map(p => {\r\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\r\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\r\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\r\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t});\r\n\r\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\r\n\t\t{showLicense && <LicenseModal onClose={() => setShowLicense(false)} />}\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\r\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\r\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below:\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWads([{ wadName: defaultDoomIWad, isIWAD: true }])\r\n\t\t\t\t\t\t}}>Play Freedoom 2</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWads([{ wadName: defaultHereticIWad, isIWAD: true }])\r\n\t\t\t\t\t\t}}>Play Blasphemer</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\r\n\t\t\t\t\t\t}}>Play Wad, EPK, or Zip files</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\r\n\t\t\t\t\t<textarea style=\"font-size:12px;width:292px;height:48px\" placeholder=\"Enter custom command line\" spellcheck={false} onChange={(ev: any) => {\r\n\r\n\t\t\t\t\t\tconst value = (ev?.target?.value?.length ? ev?.target?.value : undefined)?.trim().replace(\"\\n\", \" \");\r\n\t\t\t\t\t\tif (value?.length) {\r\n\t\t\t\t\t\t\tdocument.cookie = `customCommandLineCookie=${value}; SameSite=None; Secure`;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdocument.cookie = `customCommandLineCookie=; SameSite=None; Secure`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}}>{getCookie(\"customCommandLineCookie\")?.trim() ?? \"\"}</textarea>\r\n\r\n\r\n\t\t\t\t\t<div style={{ paddingTop: 128 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tsetShowLicense(true);\r\n\t\t\t\t\t\t}}>Show Licenses</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" multiple onChange={(e) => {\r\n\t\t\t\t\tconst files = Array.from((e.target as any).files as File[]);\r\n\t\t\t\t\tif (files.length === 0) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst badFile = files.find(f => {\r\n\t\t\t\t\t\tconst check = f.name.toLowerCase();\r\n\t\t\t\t\t\tif (!check.endsWith(\".wad\") && !check.endsWith(\".zip\") && !check.endsWith(\".epk\") && !check.endsWith(\".7z\")) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tif (badFile) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(`Please select wad, epk, or zip files, ${badFile.name} is invalid`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\r\n\t\t\t\t\twadHandler.uploadWads(files);\r\n\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\r\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\r\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\r\n\t\t\t\t{pelements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n}\r\n\r\nconst EdgeClassic = () => {\r\n\r\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\r\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\r\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\r\n\tconst wadState = WadHandler.singleton.wadState.value;\r\n\r\n\r\n\tconst pointerLockChange = () => {\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst lock = canvas === document.pointerLockElement;\r\n\r\n\t\t// disabled for embedded classic site\r\n\t\t//Module._WebSetFullscreen(lock ? 1 : 0);\r\n\r\n\t\t/*\r\n\t\t// It feels good to open the menu when releasing pointer lock\r\n\t\t// though, it makes the interaction tricky to close the menu\r\n\t\tif (!lock) {\r\n\t\t\tModule._WebOpenGameMenu(1);\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst canvasContainer = canvasContainerRef?.current;\r\n\r\n\t\tlet iwad = wadState?.find(w => w.isIWAD);\r\n\r\n\t\tif (!iwad) {\r\n\t\t\tiwad = { wadName: defaultDoomIWad, isIWAD: true };\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(\"WadState\", wadState);\r\n\r\n\t\t/*\r\n\t\tlet iwad = defaultDoomIWad;\r\n\t\tif (wadState.wadName === defaultHereticIWad) {\r\n\t\t\tiwad = defaultHereticIWad;\r\n\t\t}\r\n\r\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\r\n\t\t\tiwad = `edge-classic/${wadName}`;\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\tif (!iwad) {\r\n\t\t\tthrow \"Unable to get iwad\";\r\n\t\t}\r\n\r\n\r\n\t\tif (!canvasContainer) {\r\n\t\t\tthrow \"Unable to get canvas container\";\r\n\t\t}\r\n\r\n\t\tif (!canvas) {\r\n\t\t\tthrow \"Unable to get canvas\";\r\n\t\t}\r\n\r\n\t\tconst syncCanvasSize = () => {\r\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\r\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\r\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\r\n\t\t\tcanvas.style.width = `${w}px`;\r\n\t\t\tcanvas.style.height = `${h}px`;\r\n\t\t\tcanvas.width = w;\r\n\t\t\tcanvas.height = h;\r\n\t\t}\r\n\r\n\t\t// initial update\r\n\t\tsyncCanvasSize();\r\n\r\n\t\tconst canvasSync = () => {\r\n\t\t\tsyncCanvasSize();\r\n\t\t\tModule._WebSyncScreenSize();\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\r\n\r\n\t\tlet doSyncTimeout;\r\n\t\twindow.addEventListener(\"resize\", (ev) => {\r\n\r\n\t\t\tclearTimeout(doSyncTimeout);\r\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\r\n\r\n\t\t});\r\n\r\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\r\n\r\n\t\tlet iwadPath = iwad.wadName!;\r\n\t\tif (iwadPath !== defaultDoomIWad && iwadPath !== defaultHereticIWad) {\r\n\t\t\tiwadPath = `edge-classic/${iwadPath}`;\r\n\t\t}\r\n\r\n\t\tconst args = [\"-home\", \"/edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwadPath];\r\n\r\n\t\twadState.forEach(w => {\r\n\t\t\tif (w.isIWAD) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\targs.push(\"-file\")\r\n\t\t\targs.push(`edge-classic/${w.wadName}`);\r\n\t\t})\r\n\r\n\t\tlet customCommandLine = getCookie(\"customCommandLineCookie\");\r\n\t\tif (customCommandLine?.length) {\r\n\t\t\targs.push(...customCommandLine.split(\" \"));\r\n\t\t}\r\n\r\n\r\n\r\n\t\tcreateEdgeModule({\r\n\t\t\tedgePostInit: () => {\r\n\t\t\t\tconsole.log(\"Post-Init!\");\r\n\t\t\t\t// jump\r\n\t\t\t\tif (!args.find(a => a.startsWith(\"-warp\"))) {\r\n\t\t\t\t\tModule._WebOpenGameMenu(1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetState({ ...state, loading: false });\r\n\t\t\t},\r\n\t\t\tonFullscreen: () => {\r\n\t\t\t\t/*\r\n\t\t\t\tconsole.log(\"On fullscreen\");\r\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\r\n\t\t\t\telements?.forEach(e => {\r\n\t\t\t\t\t(e as any).style.display = \"flex\";\r\n\t\t\t\t});\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\tpreEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\tpostEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\targuments: args,\r\n\t\t\tpreInit: () => {\r\n\t\t\t\tconsole.log(\"Pre-Init\");\r\n\t\t\t},\r\n\t\t\tpreRun: [],\r\n\t\t\tpostRun: [],\r\n\t\t\tprint: (function () {\r\n\t\t\t\treturn function (text) {\r\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\t\tconsole.log(text);\r\n\t\t\t\t};\r\n\t\t\t})(),\r\n\t\t\tprintErr: function (text) {\r\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\tconsole.error(text);\r\n\t\t\t},\r\n\t\t\tcanvas: canvas,\r\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\r\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\r\n\t\t}).then(module => {\r\n\t\t\tglobalThis.Module = module;\r\n\t\t\tmodule.canvas = canvas;\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\r\n\t}, []);\r\n\r\n\r\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\r\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\r\n\t\t\tonClick={async (ev) => {\r\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\r\n\t\t\t\tif (!lock) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}} />\r\n\r\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\t\t\t<div class={style.loading}>\r\n\t\t\t\t<span style=\"--i:1\">L</span>\r\n\t\t\t\t<span style=\"--i:2\">O</span>\r\n\t\t\t\t<span style=\"--i:3\">A</span>\r\n\t\t\t\t<span style=\"--i:4\">D</span>\r\n\t\t\t\t<span style=\"--i:5\">I</span>\r\n\t\t\t\t<span style=\"--i:6\">N</span>\r\n\t\t\t\t<span style=\"--i:7\">G</span>\r\n\t\t\t\t<span style=\"--i:8\">.</span>\r\n\t\t\t\t<span style=\"--i:9\">.</span>\r\n\t\t\t\t<span style=\"--i:10\">.</span>\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\r\n\t</div>\r\n}\r\n// floating player controls, not currently used\r\n// {!state.loading && <PlayerControls />}\r\n\r\nconst PlayerControls = () => {\r\n\tconst [fullscreen, setFullscreen] = useState(false);\r\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\r\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Player = () => {\r\n\r\n\tconst wadHandler = WadHandler.singleton;\r\n\tconst wadState = wadHandler.wadState.value;\r\n\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\r\n\t\t\t{!wadState?.length && <WadChooser />}\r\n\t\t\t{!!wadState?.length && <EdgeClassic />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","\nvar createEdgeModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(moduleArg = {}) {\n\n// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = moduleArg;\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\nModule['ready'] = new Promise((resolve, reject) => {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n  var Module = typeof Module !== 'undefined' ? Module : {};\n\n  if (!Module.expectedDataFileDownloads) {\n    Module.expectedDataFileDownloads = 0;\n  }\n\n  Module.expectedDataFileDownloads++;\n  (function() {\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\n    var loadPackage = function(metadata) {\n\n      var PACKAGE_PATH = '';\n      if (typeof window === 'object') {\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\n        // web worker\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\n      }\n      var PACKAGE_NAME = '/mnt/c/Code/edge-classic/web/site/edge-classic.data';\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\n        Module['locateFile'] = Module['locateFilePackage'];\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\n      }\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\n\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\n        \n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', packageName, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onprogress = function(event) {\n          var url = packageName;\n          var size = packageSize;\n          if (event.total) size = event.total;\n          if (event.loaded) {\n            if (!xhr.addedTotal) {\n              xhr.addedTotal = true;\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\n              Module.dataFileDownloads[url] = {\n                loaded: event.loaded,\n                total: size\n              };\n            } else {\n              Module.dataFileDownloads[url].loaded = event.loaded;\n            }\n            var total = 0;\n            var loaded = 0;\n            var num = 0;\n            for (var download in Module.dataFileDownloads) {\n            var data = Module.dataFileDownloads[download];\n              total += data.total;\n              loaded += data.loaded;\n              num++;\n            }\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\n            if (Module['setStatus']) Module['setStatus'](`Downloading data... (${loaded}/${total})`);\n          } else if (!Module.dataFileDownloads) {\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\n          }\n        };\n        xhr.onerror = function(event) {\n          throw new Error(\"NetworkError for: \" + packageName);\n        }\n        xhr.onload = function(event) {\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n            var packageData = xhr.response;\n            callback(packageData);\n          } else {\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\n          }\n        };\n        xhr.send(null);\n      };\n\n      function handleError(error) {\n        console.error('package error:', error);\n      };\n\n    function runWithFS() {\n\n      function assert(check, msg) {\n        if (!check) throw msg + new Error().stack;\n      }\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer/graphics\", \"tome\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex1\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex3v\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3v\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3v/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3v\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex3vm\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3vm\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3vm/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3vm\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"harmonyc\", true, true);\nModule['FS_createPath'](\"/edge_base/harmonyc\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/harmonyc\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/harmonyc/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"skull\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"tome\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"wings\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"strife\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"crosshairs\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"overlays\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"movies\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_defs/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_defs/scripts/lua\", \"core\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\n\n        var PACKAGE_UUID = metadata['package_uuid'];\n        var indexedDB;\n        if (typeof window === 'object') {\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        } else if (typeof location !== 'undefined') {\n          // worker\n          indexedDB = self.indexedDB;\n        } else {\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\n        }\n        var IDB_RO = \"readonly\";\n        var IDB_RW = \"readwrite\";\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\n        var DB_VERSION = 1;\n        var METADATA_STORE_NAME = 'METADATA';\n        var PACKAGE_STORE_NAME = 'PACKAGES';\n        function openDatabase(callback, errback) {\n          try {\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\n          } catch (e) {\n            return errback(e);\n          }\n          openRequest.onupgradeneeded = function(event) {\n            var db = /** @type {IDBDatabase} */ (event.target.result);\n\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\n            }\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\n\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\n              db.deleteObjectStore(METADATA_STORE_NAME);\n            }\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\n          };\n          openRequest.onsuccess = function(event) {\n            var db = /** @type {IDBDatabase} */ (event.target.result);\n            callback(db);\n          };\n          openRequest.onerror = function(error) {\n            errback(error);\n          };\n        };\n\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\n        // We set the chunk size to 64MB to stay well-below the limit\n        var CHUNK_SIZE = 64 * 1024 * 1024;\n\n        function cacheRemotePackage(\n          db,\n          packageName,\n          packageData,\n          packageMeta,\n          callback,\n          errback\n        ) {\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\n          var chunkSliceStart = 0;\n          var nextChunkSliceStart = 0;\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\n          var finishedChunks = 0;\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\n            nextChunkSliceStart += CHUNK_SIZE;\n            var putPackageRequest = packages.put(\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\n              `package/${packageName}/${chunkId}`\n            );\n            chunkSliceStart = nextChunkSliceStart;\n            putPackageRequest.onsuccess = function(event) {\n              finishedChunks++;\n              if (finishedChunks == chunkCount) {\n                var transaction_metadata = db.transaction(\n                  [METADATA_STORE_NAME],\n                  IDB_RW\n                );\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\n                var putMetadataRequest = metadata.put(\n                  {\n                    'uuid': packageMeta.uuid,\n                    'chunkCount': chunkCount\n                  },\n                  `metadata/${packageName}`\n                );\n                putMetadataRequest.onsuccess = function(event) {\n                  callback(packageData);\n                };\n                putMetadataRequest.onerror = function(error) {\n                  errback(error);\n                };\n              }\n            };\n            putPackageRequest.onerror = function(error) {\n              errback(error);\n            };\n          }\n        }\n\n        /* Check if there's a cached package, and if so whether it's the latest available */\n        function checkCachedPackage(db, packageName, callback, errback) {\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\n          var getRequest = metadata.get(`metadata/${packageName}`);\n          getRequest.onsuccess = function(event) {\n            var result = event.target.result;\n            if (!result) {\n              return callback(false, null);\n            } else {\n              return callback(PACKAGE_UUID === result['uuid'], result);\n            }\n          };\n          getRequest.onerror = function(error) {\n            errback(error);\n          };\n        }\n\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\n\n          var chunksDone = 0;\n          var totalSize = 0;\n          var chunkCount = metadata['chunkCount'];\n          var chunks = new Array(chunkCount);\n\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\n            var getRequest = packages.get(`package/${packageName}/${chunkId}`);\n            getRequest.onsuccess = function(event) {\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\n              if (chunkCount == 1) {\n                callback(event.target.result);\n              } else {\n                chunksDone++;\n                totalSize += event.target.result.byteLength;\n                chunks.push(event.target.result);\n                if (chunksDone == chunkCount) {\n                  if (chunksDone == 1) {\n                    callback(event.target.result);\n                  } else {\n                    var tempTyped = new Uint8Array(totalSize);\n                    var byteOffset = 0;\n                    for (var chunkId in chunks) {\n                      var buffer = chunks[chunkId];\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\n                      byteOffset += buffer.byteLength;\n                      buffer = undefined;\n                    }\n                    chunks = undefined;\n                    callback(tempTyped.buffer);\n                    tempTyped = undefined;\n                  }\n                }\n              }\n            };\n            getRequest.onerror = function(error) {\n              errback(error);\n            };\n          }\n        }\n\n      function processPackageData(arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file failed.');\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\n        var byteArray = new Uint8Array(arrayBuffer);\n        var curr;\n        var compressedData = {\"data\":null,\"cachedOffset\":55333160,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,1641,3123,4598,6082,7575,9057,10533,12016,13496,14972,16446,17922,19399,20880,22354,23846,25307,26785,28261,29745,31222,32717,34199,35677,37164,38649,39781,40340,40906,41609,41980,42578,42887,43420,43930,44396,44846,45440,45939,46344,46564,46870,47122,47372,47635,47908,48128,48444,48766,49011,49162,49300,49529,49669,49766,49856,50222,50718,51073,51342,51663,51907,52438,52889,53310,53548,53877,54323,54822,55268,55838,56027,56413,56961,57577,57900,58046,58338,58794,59114,59387,59691,60041,60297,60596,60906,60988,61073,61179,61447,61705,61939,62464,62979,63389,63689,63795,64139,64515,64809,65168,65643,66022,66313,66707,67197,67713,68161,68614,70666,72686,74734,76790,78821,80849,82903,84956,86778,88498,90222,91959,93657,95386,97108,98831,100552,102252,103959,105678,107397,109095,110793,112497,114174,115874,117611,119246,120917,122592,124286,126018,127737,129470,131200,132940,134664,136316,138053,139770,141507,143252,144978,146701,148406,150195,152243,154291,156339,158387,160435,162434,164168,165869,167555,169273,171021,172852,174625,176486,178136,179887,181674,183360,185110,186813,188504,190177,191769,193473,195151,196868,198544,200165,201860,203605,205295,206974,208700,210427,212198,213818,215475,217124,218859,220617,222352,224064,225798,227435,229191,230883,232596,233318,233765,234332,234973,236049,236874,237755,238612,239589,240610,241685,243128,244952,246822,248659,250533,252392,254263,255820,257298,258799,260254,261701,263143,264585,266027,267458,268899,270335,271811,273281,274744,276192,277663,279119,280594,282065,283531,285014,286480,287954,289377,290829,292302,293776,295247,296707,298186,299627,301082,302536,304005,305471,306940,308415,309893,311354,312815,314267,315737,317204,318650,320099,321555,323009,324455,325912,327393,328855,330329,331776,333250,334713,336160,337629,339090,340561,342035,343513,345000,346464,347942,349417,350876,352340,353803,355245,356683,358138,359597,361066,362533,363492,364086,364542,365081,365443,365774,366130,366517,366990,367516,368045,368473,369020,369547,369945,370404,370862,371336,371782,372230,372708,373139,373576,374159,374755,375238,375678,376288,376846,377202,377721,378358,378814,379407,380040,380506,380971,381321,381745,382129,382558,383034,383426,383847,384319,384708,385131,385439,385640,385891,386429,386922,387317,387680,388283,388724,389184,389738,390304,390925,391500,391997,392465,393012,393484,393987,394465,394936,395431,395828,396362,396737,397081,397411,397921,398404,398855,399366,399955,400586,401059,401552,402096,402467,402972,403487,404022,404360,404947,405545,406117,406717,407303,407884,408484,408975,409487,409947,410477,410938,411382,411826,412301,412865,413316,413852,414398,414895,415493,415947,416493,417028,417618,418231,418718,419209,419662,420121,420586,420965,421393,421736,422233,422684,423180,423649,424086,424492,424963,425441,425993,426606,427171,427658,428026,428445,428794,429358,429861,430484,430827,431036,431204,431310,431515,431880,432333,432599,432869,433176,433648,434057,434471,434885,435272,435703,436144,436492,436941,437489,438078,438478,439001,439518,439964,440377,440868,441377,441881,442417,443033,443632,444297,444921,445537,446116,446653,447140,447698,448270,448841,449258,449840,450380,450896,451414,451958,452481,452895,453412,453963,454462,454914,455414,455935,456450,456927,457507,458069,458481,458890,459332,459847,460479,461001,461486,461961,462427,462885,463203,463693,463927,464292,464741,465004,465350,465747,466090,466478,466983,467390,467730,468221,468730,469248,469761,470254,470789,471255,471711,472216,472675,473140,473609,474059,474487,474911,475320,475759,476216,476673,477128,477555,477978,478439,478748,479105,479537,479978,480358,480724,481125,481632,482035,482452,482886,483263,483711,484045,484484,485001,485460,485923,486448,488139,490084,492109,494096,496095,498094,500016,501998,504048,506094,508148,510190,512207,514234,516260,518290,520345,522400,524448,526327,528053,529776,531478,533200,534914,536628,538360,540081,541786,543523,545246,546939,548648,550348,552061,553781,555485,557181,558866,560571,562294,563985,565660,567359,569026,570711,572390,574087,575774,577469,579176,580875,582557,584250,585940,587628,589306,591007,592735,594439,596170,597897,599604,601270,602950,604650,606388,608114,609831,611525,613178,614858,616522,618219,619906,621601,623284,624968,626663,628392,630144,631869,633534,635194,636892,638605,640322,642024,643729,645429,647124,648832,650521,652218,653932,655629,657339,659040,660729,662425,664147,665847,667548,669241,670939,672633,674353,676033,677743,679483,681226,682975,684724,686487,688220,689987,691723,693394,695068,696729,698418,700122,701803,703486,705159,706834,708564,710304,712036,713771,715459,717129,718796,720485,722323,724371,726419,728467,730515,732563,734611,736659,738707,740755,742803,744851,746899,748947,750995,752714,754466,756172,757921,759727,761415,763132,764886,766524,768305,770049,771711,773448,775195,776935,778631,780220,781890,783580,785201,786828,788512,790065,791635,793218,794854,796462,798131,799754,801391,803030,804652,806305,808032,809759,811454,813231,814948,816696,818345,820153,822039,823882,825628,827335,828986,830630,832365,834104,835818,837467,839241,841091,842964,844623,846294,847937,849454,850975,852508,853987,855479,857019,858627,860287,861953,863507,865027,866660,868327,869961,871644,873328,875040,876618,878145,879805,881337,883106,884950,886746,888540,890332,892111,893890,895726,897521,899207,900861,902539,904238,905912,907560,909272,911044,912815,914565,916291,917904,919583,921210,921692,922168,922723,923238,923822,924523,925171,925781,926368,926837,927175,927793,928459,929078,929837,930441,930958,931671,932311,932931,933476,933914,934423,934970,935543,936106,936238,936379,936814,937340,937619,937859,937989,938737,939383,939928,940236,940692,941250,941638,942235,942593,943015,943159,943275,943423,943570,943780,944149,944791,945536,946211,946828,947379,947891,948604,949426,950206,951181,952233,953261,954132,954921,955676,956525,956823,957137,957573,957915,958276,958410,958544,958698,959161,959567,959817,960062,960287,960491,960802,961208,961460,962212,962711,962989,963484,963903,964140,964343,964567,964979,965394,965660,966002,966270,966580,966837,967458,967938,968409,969066,969586,970094,970736,971549,972466,973242,973990,974851,975755,976501,977182,977910,978664,979338,980044,980853,981543,982179,982684,983201,983695,984224,984756,985257,985799,986420,987250,988059,988880,989679,990471,991255,991834,992519,993485,994292,995186,995728,996511,997517,998454,999258,1000191,1001157,1002013,1002942,1003811,1004672,1005484,1006204,1006895,1007825,1008625,1009374,1010160,1010933,1011584,1012351,1013201,1013580,1013755,1013880,1013994,1014247,1015215,1016211,1017192,1018199,1019271,1020186,1021149,1022107,1023049,1023966,1024736,1025527,1026202,1026757,1027269,1028118,1028959,1029726,1030467,1031311,1032018,1032583,1033055,1033613,1034447,1035448,1036487,1037567,1038622,1039719,1040695,1041790,1042909,1044051,1045144,1046031,1046752,1047255,1047676,1048059,1048425,1048777,1049118,1049713,1050557,1051504,1052519,1053466,1054292,1055027,1055552,1056220,1057000,1057890,1058669,1059403,1060214,1061018,1061925,1062859,1063842,1064838,1065627,1066462,1067504,1068569,1069673,1070856,1071980,1072999,1074135,1075216,1076056,1076926,1077985,1079050,1080245,1081492,1082544,1083519,1084698,1085886,1086989,1087970,1089008,1090024,1090846,1091890,1093146,1094330,1096116,1097722,1099567,1101441,1103275,1105151,1107042,1108881,1110709,1112580,1114517,1116498,1118427,1120319,1122205,1124156,1126112,1127969,1129667,1131260,1132900,1134388,1135874,1137378,1138871,1140388,1141895,1143390,1144890,1146393,1147917,1149397,1150894,1152404,1153884,1155372,1156866,1158341,1159830,1161340,1162800,1164291,1165785,1167276,1168795,1170320,1171809,1173304,1174808,1176260,1177730,1179228,1180732,1182236,1183746,1185246,1186763,1188266,1189409,1189941,1190452,1191033,1191474,1192020,1192520,1193054,1193620,1194130,1194703,1195238,1195874,1196474,1197076,1197698,1198109,1198727,1199351,1199855,1200374,1200963,1201495,1202042,1202608,1203316,1203929,1204446,1204939,1205389,1205932,1206365,1206929,1207520,1208130,1208718,1209341,1209971,1210548,1211030,1211524,1211944,1212397,1212883,1213442,1214004,1214580,1215115,1215683,1216216,1216689,1217043,1217637,1218000,1218198,1218540,1218775,1219263,1219733,1220143,1220759,1221065,1221674,1222209,1222630,1223196,1223684,1224137,1224539,1224975,1225518,1226033,1226543,1226999,1227320,1227693,1228199,1228871,1229332,1229980,1230578,1231032,1231455,1231952,1232362,1232768,1233008,1233053,1233215,1233539,1233867,1234156,1234579,1234837,1235088,1235443,1235828,1236112,1236434,1236879,1237194,1237599,1237915,1238505,1239056,1239629,1240155,1240575,1240918,1241269,1241758,1242113,1242688,1243228,1243760,1244287,1244778,1245336,1245734,1246302,1246774,1247108,1247533,1248020,1248487,1248989,1249495,1250083,1250616,1251071,1251770,1253792,1255810,1257849,1259866,1261859,1263883,1265869,1267923,1269968,1272010,1273972,1275670,1277351,1279076,1280766,1282411,1284103,1285820,1287516,1289188,1290894,1292602,1294321,1296048,1297763,1299489,1301199,1302910,1304626,1306353,1308057,1309778,1311481,1313177,1314880,1316572,1318286,1319994,1321707,1323416,1325103,1326804,1328474,1330175,1331887,1333605,1335311,1337036,1338743,1340482,1342195,1343921,1345651,1347380,1349099,1350820,1352531,1354261,1355984,1357714,1359442,1361083,1362763,1364476,1366188,1367903,1369606,1371594,1373642,1375690,1377738,1379786,1381834,1383871,1385514,1387197,1388850,1390559,1392327,1394003,1395675,1397472,1399206,1400947,1402668,1404455,1406247,1408047,1409876,1411640,1413403,1415183,1416915,1418600,1420344,1422048,1423756,1425532,1427233,1429005,1430714,1432399,1434128,1435882,1437652,1439364,1441151,1442936,1444715,1446488,1448271,1450052,1451808,1453567,1455326,1457129,1458741,1460457,1462220,1463869,1464984,1465740,1466572,1467467,1468364,1469279,1470009,1470953,1472132,1473573,1474837,1475774,1476885,1478054,1479330,1480435,1481558,1482643,1483580,1484493,1485559,1486692,1487596,1488689,1489762,1490882,1492816,1494803,1496810,1498819,1500812,1502819,1504811,1506407,1508003,1509510,1510971,1512430,1513868,1515367,1516844,1518305,1519320,1519941,1520339,1520800,1521373,1521860,1522464,1523077,1523660,1524217,1524767,1525268,1525764,1526190,1526674,1526799,1527369,1527707,1528296,1528744,1529303,1529843,1531473,1533490,1535242,1536951,1538662,1540370,1542071,1543791,1545500,1547214,1548923,1550700,1552749,1554540,1556327,1558224,1560042,1561772,1563510,1565009,1565643,1566230,1566606,1566631,1566656,1566681,1568611,1569624,1571043,1572487,1573895,1575278,1576787,1578283,1579742,1581196,1582661,1584119,1585560,1587005,1588486,1589925,1591395,1592867,1594339,1595800,1597262,1598751,1599499,1599848,1600274,1600630,1600963,1601456,1601870,1602373,1602826,1603091,1603508,1603823,1604322,1604661,1605313,1605874,1606509,1607060,1607595,1608177,1608539,1609033,1609542,1610072,1610577,1611060,1611564,1612124,1612566,1613108,1613559,1614001,1614513,1614933,1615424,1615921,1616405,1616913,1617270,1617773,1618246,1618640,1619137,1619577,1619909,1620319,1620594,1620880,1621322,1621695,1622240,1624296,1626248,1628252,1630223,1631950,1633668,1635354,1637078,1638799,1640484,1642142,1643829,1645519,1647173,1648857,1650526,1652173,1653843,1655515,1657212,1658923,1660649,1662327,1663993,1665680,1667353,1669371,1671419,1673387,1675240,1677050,1678766,1680565,1682270,1683887,1685536,1687264,1689050,1690702,1692417,1694124,1695906,1697726,1699480,1701054,1702727,1704104,1704855,1705416,1706044,1706651,1707424,1708121,1709005,1709950,1711001,1712389,1713657,1714946,1716155,1717589,1719147,1720037,1721047,1722179,1722938,1723569,1724750,1726289,1728103,1729860,1731605,1733319,1734920,1736493,1737978,1739465,1740940,1742419,1743886,1745346,1746835,1748330,1749811,1751294,1752779,1754271,1755749,1757206,1758689,1760131,1761608,1763079,1764560,1766030,1767506,1768979,1770459,1771941,1773421,1774925,1776407,1777894,1779362,1780273,1780666,1781287,1781868,1782329,1782867,1783304,1783777,1784328,1784695,1784889,1785314,1785715,1786217,1786594,1787151,1787590,1787799,1788271,1788921,1789492,1790165,1790662,1791196,1791745,1792134,1792655,1793109,1793617,1794245,1794688,1795200,1795634,1796031,1796485,1796901,1797540,1798000,1798398,1798551,1798748,1799060,1799487,1800047,1800425,1800970,1801469,1802075,1802612,1803150,1803672,1803921,1804352,1804798,1804929,1805300,1805596,1805925,1806279,1806750,1807174,1807554,1808073,1808591,1809064,1809608,1810139,1810713,1811259,1811802,1812328,1812849,1813140,1813429,1813936,1814499,1814990,1815546,1816098,1816577,1817040,1817521,1817967,1818413,1818877,1819320,1819890,1820263,1820734,1821165,1821641,1822075,1822563,1823046,1823451,1823921,1824362,1824751,1826601,1828644,1830687,1832689,1834743,1836795,1838835,1840740,1842426,1844110,1845823,1847532,1849260,1850937,1852654,1854383,1856106,1857805,1859500,1861203,1862919,1864627,1866342,1868064,1869767,1871472,1873137,1874857,1876509,1878194,1879895,1881548,1883251,1884911,1886611,1888310,1890002,1891681,1893340,1895035,1896729,1898422,1900120,1901837,1903552,1905232,1906878,1908603,1910286,1912197,1914245,1916293,1918341,1920356,1921990,1923538,1925224,1926947,1928749,1930533,1932347,1934268,1935958,1937731,1939596,1941360,1943077,1944952,1946667,1948472,1950014,1951768,1953512,1955159,1956943,1958666,1960340,1962043,1963762,1965451,1967251,1968994,1970634,1972339,1974042,1974794,1975614,1976509,1977318,1978092,1978697,1979248,1979776,1980236,1980442,1980852,1981386,1982180,1982797,1983317,1983670,1984124,1984899,1985575,1986254,1986991,1987708,1988283,1988912,1989390,1989826,1990318,1990978,1991808,1992570,1993104,1993851,1994624,1995383,1996069,1996794,1997603,1998284,1999013,1999607,2000123,2000303,2000645,2000967,2001250,2001640,2001874,2002054,2002340,2002999,2003637,2004252,2005112,2005771,2006411,2007041,2007672,2008446,2009266,2009887,2010514,2011044,2011742,2012355,2012988,2013917,2015233,2016723,2018315,2020139,2021833,2023515,2025230,2026949,2028654,2030383,2032082,2033636,2034855,2036293,2037738,2039207,2040680,2042156,2043626,2045120,2046591,2048078,2049566,2051053,2052538,2054016,2055505,2056985,2058442,2059915,2061388,2062874,2064350,2065855,2067335,2068315,2068506,2068790,2069106,2069503,2069957,2070343,2070549,2070834,2071066,2071369,2071597,2072006,2072656,2073050,2073610,2074040,2074586,2074980,2075569,2076027,2076192,2076394,2076859,2077445,2077990,2078398,2078897,2079488,2079990,2080449,2081056,2081497,2082136,2082530,2082778,2082834,2083187,2083684,2084090,2084556,2084733,2084932,2085348,2085870,2086267,2086469,2086663,2086856,2087051,2087239,2087434,2087637,2087835,2088024,2088218,2088409,2088923,2089199,2089563,2089739,2089996,2090306,2090551,2091058,2091518,2092028,2092437,2092911,2094489,2096405,2098315,2100201,2102109,2104146,2106111,2107766,2109442,2111146,2112818,2114483,2116184,2117921,2119574,2121237,2122938,2124627,2126308,2127962,2129632,2131326,2132992,2134638,2136317,2138006,2139695,2141345,2143003,2144646,2146294,2147957,2149601,2151264,2152928,2154589,2156270,2157945,2159612,2161608,2163656,2165704,2167635,2169313,2171058,2172671,2174361,2176226,2177906,2179576,2181330,2183028,2184627,2186431,2188032,2189646,2191246,2192952,2194610,2196239,2197850,2199456,2201084,2202741,2204458,2206100,2207280,2208112,2208852,2209454,2209642,2210128,2210957,2211886,2212766,2213791,2214698,2215516,2216504,2217518,2218433,2219277,2219838,2220540,2221228,2221837,2223553,2225077,2226872,2228686,2230519,2232262,2234069,2235811,2237371,2238913,2240389,2241875,2243364,2244848,2246307,2247805,2249261,2250752,2252222,2253707,2255201,2256700,2257565,2258116,2258728,2259276,2259768,2260149,2260583,2260868,2261247,2261798,2262055,2262614,2263150,2263710,2264132,2264701,2265245,2265834,2266396,2266908,2267449,2267800,2268016,2268494,2268942,2269426,2269950,2270550,2271098,2271656,2271997,2272139,2272256,2272643,2272954,2274099,2276103,2278153,2280185,2281882,2283565,2285279,2286982,2288682,2290343,2292038,2293722,2295452,2297130,2298837,2300549,2302255,2303941,2305641,2307394,2309442,2311421,2313213,2315021,2316860,2318634,2320323,2322074,2323843,2325597,2327419,2329233,2331037,2332789,2333648,2334543,2335285,2336198,2337275,2338362,2339239,2340263,2341025,2342489,2343748,2345329,2347011,2348674,2350237,2351758,2353220,2354787,2356261,2357742,2359205,2360696,2362174,2363654,2365123,2366611,2368077,2369560,2370803,2371324,2371940,2372476,2373006,2373611,2374108,2374711,2374969,2375475,2375864,2376344,2376653,2377126,2377451,2377606,2377868,2378441,2378620,2379098,2379356,2379824,2380332,2380616,2381054,2381497,2382108,2382614,2383216,2383700,2384136,2384358,2384643,2385151,2385747,2386256,2387845,2389766,2391790,2393673,2395342,2397038,2398711,2400361,2402013,2403663,2405323,2407019,2408689,2410342,2412009,2413704,2415437,2417140,2418873,2420873,2422912,2424587,2426283,2427958,2429637,2431285,2432954,2434581,2436310,2438011,2439882,2441778,2443514,2444287,2445120,2445886,2446582,2447242,2447874,2448793,2449740,2450321,2451877,2453439,2454942,2456527,2458171,2459686,2461176,2462642,2464117,2465597,2467083,2468542,2470031,2471515,2472997,2474475,2475523,2475960,2476218,2476533,2476896,2477250,2477533,2477804,2478194,2478669,2479168,2479537,2480016,2480404,2480648,2480983,2481336,2481737,2482039,2482378,2482622,2482792,2483092,2483359,2483723,2484072,2484518,2485086,2485499,2485804,2486200,2486591,2486865,2487204,2487442,2487685,2488018,2488202,2488623,2490020,2492068,2494114,2496162,2497878,2499597,2501301,2503030,2504765,2506482,2508214,2509952,2511685,2513408,2515145,2516872,2518544,2520275,2521988,2523709,2525414,2527348,2529396,2531408,2533223,2535038,2536817,2538668,2540442,2542267,2544094,2545881,2547721,2549574,2551390,2553157,2554827,2556599,2558454,2560278,2562078,2563030,2563985,2565331,2567151,2569000,2570747,2572251,2573657,2575120,2576586,2578042,2579521,2581002,2582464,2583937,2585442,2586931,2588398,2589879,2591369,2592856,2594332,2595818,2597312,2598795,2600282,2601757,2603260,2604718,2606198,2607667,2608991,2609171,2609448,2609658,2609911,2610400,2610881,2611429,2611722,2612086,2612431,2612748,2613224,2613593,2613911,2614280,2614564,2614977,2615435,2615674,2615969,2616326,2616771,2617102,2617531,2617927,2618220,2618417,2618641,2618925,2619339,2619701,2619994,2620335,2620730,2621174,2621535,2621827,2622318,2622576,2622940,2623218,2623642,2624118,2624301,2624490,2624569,2624825,2625051,2625603,2625802,2626201,2626553,2626856,2627211,2627677,2628059,2628612,2628997,2629064,2629126,2629592,2629907,2630292,2630631,2631094,2631527,2631882,2632232,2632564,2632962,2633334,2633787,2634308,2634684,2635073,2636715,2638631,2640571,2642518,2644435,2646377,2648343,2650051,2651739,2653428,2655120,2656817,2658515,2660222,2661915,2663616,2665305,2666995,2668716,2670420,2672134,2673831,2675537,2677242,2678928,2680647,2682349,2684054,2685766,2687468,2689171,2690891,2692598,2694295,2696009,2697708,2699418,2701114,2702825,2704500,2706338,2708386,2710434,2712482,2714330,2715903,2717596,2719316,2721046,2722733,2724442,2726155,2727814,2729468,2731200,2732867,2734608,2736344,2738048,2739838,2741603,2743361,2745010,2746833,2748547,2750332,2751971,2753669,2755342,2757038,2758681,2760383,2762081,2762966,2763763,2764629,2765499,2765928,2765953,2765978,2766003,2766028,2766053,2766078,2766103,2768099,2769686,2771397,2773158,2774943,2776631,2778464,2780240,2781707,2783062,2784525,2786174,2787738,2789250,2790771,2792276,2793783,2795306,2796827,2798334,2799798,2801286,2802775,2804239,2805732,2807209,2808684,2810141,2811577,2813066,2814547,2816028,2817508,2818972,2820440,2821929,2823390,2824861,2826346,2827840,2829120,2829779,2830397,2831041,2831638,2832245,2832868,2833559,2834175,2834882,2835562,2836217,2836922,2837605,2838236,2838868,2839454,2840173,2840881,2841500,2842223,2842882,2843488,2844194,2844907,2845562,2846157,2846680,2847242,2847836,2848502,2849086,2849634,2850242,2850716,2851330,2851869,2852513,2853098,2853625,2854112,2854644,2855191,2855780,2856277,2856814,2857420,2858056,2858622,2859276,2859819,2860374,2861042,2861644,2862310,2862863,2863325,2863903,2864382,2864828,2865246,2865663,2866143,2866712,2867149,2867612,2868088,2868694,2869048,2869590,2870199,2870641,2871129,2871553,2871895,2872389,2872950,2873573,2874124,2874656,2875110,2875679,2876258,2876846,2877162,2877656,2878169,2878699,2879293,2879767,2879943,2880318,2880788,2881262,2881726,2882136,2882524,2882920,2883522,2884099,2884663,2885198,2885639,2887667,2889711,2891735,2893754,2895702,2897720,2899771,2901679,2903390,2905084,2906786,2908500,2910177,2911847,2913564,2915317,2916986,2918667,2920363,2922108,2923836,2925490,2927119,2928830,2930567,2932289,2934002,2935708,2937422,2939116,2940808,2942502,2944207,2945956,2947690,2949393,2951115,2952855,2954580,2956275,2958015,2959736,2961423,2963117,2964821,2966509,2968222,2969944,2971681,2973365,2975058,2976755,2978796,2980844,2982892,2984940,2986988,2988972,2990694,2992398,2994196,2995810,2997464,2999248,3001045,3002661,3004395,3006145,3007983,3009672,3011264,3013041,3014854,3016593,3018292,3020036,3021715,3023397,3025110,3026885,3028692,3030444,3032237,3033948,3035796,3037484,3039263,3040986,3042687,3044405,3046284,3048077,3049880,3051667,3053378,3055127,3056175,3056792,3057572,3058202,3058773,3059422,3060039,3060645,3061177,3061658,3063048,3064547,3066031,3067494,3069075,3070650,3072288,3073858,3075394,3076528,3077683,3079206,3080680,3082265,3083662,3085270,3086838,3088315,3089911,3091335,3092738,3094064,3095475,3096865,3098216,3099129,3100151,3101431,3102308,3103055,3104277,3105637,3107067,3108686,3110294,3112023,3113434,3115269,3116911,3118325,3119927,3121620,3123319,3125011,3126705,3128348,3130025,3131662,3133335,3134901,3136476,3138034,3139627,3141065,3142545,3144024,3145478,3146956,3148419,3149881,3151377,3152862,3154314,3155789,3157274,3158717,3160157,3161616,3163069,3164523,3166004,3167469,3168951,3170447,3171916,3173382,3174845,3176317,3177781,3179238,3180699,3182169,3183646,3185118,3186583,3188056,3189512,3190979,3192470,3193932,3195427,3196878,3198350,3199847,3201302,3202745,3204249,3205720,3207209,3208697,3210162,3211649,3212188,3212647,3213186,3213692,3214153,3214532,3214918,3215347,3215767,3216249,3216730,3217089,3217541,3218034,3218522,3218924,3219275,3219839,3220297,3220558,3220832,3221175,3221456,3221873,3222189,3222555,3222848,3223107,3223622,3224088,3224558,3225043,3225513,3225916,3226206,3226664,3226950,3227357,3227887,3228287,3228658,3229029,3229382,3229952,3230469,3230951,3231420,3231841,3232182,3232388,3232726,3233259,3233571,3233877,3234284,3234790,3235271,3235749,3236088,3236310,3236738,3237272,3237697,3238220,3238651,3239054,3239310,3239490,3239962,3240449,3240875,3241331,3241742,3242170,3242555,3242924,3243337,3243790,3244268,3244784,3245275,3245686,3246032,3246338,3246805,3247140,3247571,3247832,3248256,3248485,3248817,3249185,3249496,3249690,3250007,3250481,3250799,3251076,3251385,3251566,3251952,3252258,3252622,3252974,3253398,3253653,3253998,3254409,3254768,3255103,3255526,3255927,3256417,3256946,3257456,3257916,3258197,3258546,3258739,3259101,3259565,3259875,3260359,3260558,3261021,3261463,3261916,3262230,3262651,3262919,3263342,3263673,3263960,3264381,3264793,3265267,3265654,3265894,3266056,3266557,3267057,3267532,3267968,3268330,3268823,3269630,3271636,3273632,3275594,3277571,3279527,3281481,3283505,3285446,3287422,3289347,3291354,3293402,3295225,3296919,3298561,3300221,3301875,3303568,3305210,3306899,3308597,3310255,3311910,3313595,3315289,3316961,3318666,3320326,3321999,3323705,3325389,3327058,3328732,3330423,3332109,3333822,3335503,3337166,3338857,3340549,3342244,3343925,3345614,3347289,3348963,3350639,3352345,3354049,3355751,3357426,3359103,3360789,3362470,3364145,3365855,3367555,3369240,3370945,3372666,3374334,3375979,3377662,3379351,3381075,3382766,3384440,3386123,3387800,3389478,3391161,3392845,3394516,3396206,3397887,3399571,3401320,3403368,3405416,3407464,3409512,3411560,3413608,3415258,3416954,3418573,3420233,3421835,3423532,3425212,3426861,3428554,3430276,3432015,3433639,3435442,3437095,3438812,3440569,3442314,3444006,3445761,3447548,3449297,3451013,3452713,3454478,3456246,3457989,3459673,3461381,3463134,3464835,3466531,3468389,3470074,3471746,3473547,3475346,3477150,3478851,3480497,3482219,3484012,3485736,3487473,3489024,3490004,3490844,3491635,3492467,3493254,3494005,3494917,3495575,3496474,3497329,3498026,3498677,3499090,3499554,3499883,3500300,3500651,3501067,3501303,3501858,3502344,3502877,3503324,3503662,3503927,3504503,3504953,3505452,3505950,3506560,3507237,3507580,3507796,3508267,3508730,3509124,3509897,3510481,3510983,3511313,3511782,3512111,3512564,3512715,3513066,3513502,3513921,3514433,3514840,3515202,3515684,3516483,3518104,3519733,3521179,3521866,3522802,3524428,3526055,3527694,3529377,3531058,3532772,3534510,3536320,3538043,3539806,3541549,3543296,3544988,3546721,3548410,3549999,3551542,3553091,3554588,3556054,3557521,3559013,3560488,3561988,3563472,3564956,3566450,3567962,3569460,3570974,3572464,3573932,3575401,3576028,3576449,3576642,3577059,3577658,3578110,3578185,3578260,3578518,3578867,3579476,3580071,3580518,3581018,3581451,3582033,3582510,3582949,3583490,3584092,3584567,3584958,3585375,3585881,3586435,3586791,3587343,3587859,3588193,3588673,3589059,3589465,3589894,3590235,3590537,3590757,3591112,3591439,3591953,3592447,3592999,3593443,3594036,3594303,3595829,3597841,3599802,3601757,3603632,3605334,3607055,3608794,3610516,3612243,3613988,3615715,3617452,3619180,3620911,3622635,3624345,3626083,3627804,3629517,3631215,3632930,3634662,3636363,3638070,3640085,3642133,3644114,3645837,3647576,3649355,3651107,3652895,3654598,3656316,3658067,3659814,3661546,3663289,3665067,3666808,3668571,3670360,3672111,3673659,3674468,3675402,3676218,3677141,3677540,3677565,3677590,3677615,3677640,3677665,3677690,3677715,3679321,3680976,3682527,3684217,3685912,3687387,3688723,3689805,3691000,3692605,3694131,3695691,3697178,3698664,3700173,3701671,3703154,3704656,3706149,3707647,3709140,3710625,3712093,3713543,3715003,3716480,3717914,3719423,3720110,3720767,3721233,3721826,3722316,3722739,3723202,3723655,3724125,3724656,3725173,3725620,3726169,3726727,3727163,3727611,3727807,3728171,3728420,3728771,3729171,3729746,3730007,3730552,3731044,3731567,3732249,3732746,3733189,3733638,3734022,3734524,3735126,3735516,3735935,3736458,3736975,3737502,3738066,3738539,3739122,3739828,3740531,3741061,3741464,3741954,3742199,3743684,3745687,3747740,3749759,3751781,3753498,3755213,3756936,3758645,3760356,3762020,3763678,3765374,3767100,3768826,3770535,3772205,3773904,3775620,3777350,3779054,3780763,3782487,3784179,3785844,3787656,3789704,3791752,3793688,3795487,3797271,3799083,3800931,3802617,3804372,3806222,3808014,3809858,3811705,3813515,3815369,3817207,3818968,3820839,3822629,3824387,3826124,3826900,3827537,3828512,3829324,3830002,3830727,3831506,3832032,3832846,3833694,3834447,3835201,3836070,3836942,3837299,3837987,3838942,3840410,3841520,3842363,3843916,3845386,3846913,3848539,3850138,3851753,3853325,3854743,3856119,3857598,3859022,3860387,3861842,3863263,3864734,3866211,3867659,3869133,3870613,3872110,3873589,3875058,3876556,3878054,3879541,3881034,3882518,3884001,3885487,3886982,3888469,3889937,3891435,3892898,3894388,3895887,3897364,3898863,3900358,3901880,3903393,3904864,3906342,3907844,3909333,3910819,3912298,3913751,3915225,3916718,3918059,3918548,3919072,3919671,3920140,3920608,3921154,3921422,3921987,3922540,3923123,3923313,3923872,3924412,3925076,3925737,3926313,3926871,3927432,3928015,3928573,3929094,3929618,3930110,3930489,3930691,3931183,3931737,3932248,3932819,3933350,3933800,3934314,3934857,3935423,3936071,3936641,3937039,3937552,3938072,3938691,3939194,3939769,3940261,3940755,3941231,3941828,3942380,3942952,3943501,3944107,3944663,3945172,3945540,3945993,3946521,3946971,3947451,3948068,3948575,3949033,3949588,3950047,3950502,3950985,3951226,3951543,3952067,3952513,3953016,3953302,3953765,3954291,3954818,3955358,3955822,3956225,3956299,3956390,3956575,3956699,3956881,3957156,3957359,3957753,3958094,3958531,3959088,3959413,3959874,3960095,3960366,3960524,3960657,3961014,3961480,3962160,3962646,3963138,3963665,3964220,3964729,3965277,3965803,3966390,3966871,3967351,3967616,3968162,3968708,3969136,3969632,3970098,3970589,3971089,3971504,3971987,3972425,3972938,3973486,3974089,3974615,3975106,3975534,3976039,3976443,3976865,3977389,3977836,3978231,3978751,3979201,3979387,3979757,3980267,3980606,3981204,3983211,3985196,3987216,3989261,3991248,3993273,3995237,3997285,3999333,4001382,4003368,4005019,4006652,4008275,4009921,4011649,4013364,4015057,4016743,4018401,4020072,4021771,4023475,4025153,4026863,4028598,4030327,4032042,4033768,4035421,4037115,4038856,4040554,4042281,4043967,4045658,4047403,4049147,4050882,4052627,4054324,4056016,4057659,4059359,4061106,4062855,4064592,4066331,4068066,4069802,4071521,4073257,4074982,4076719,4078450,4080188,4081874,4083530,4085214,4086919,4088595,4090302,4092029,4093771,4095507,4097229,4098954,4100610,4102286,4104002,4105722,4107731,4109779,4111827,4113875,4115923,4117971,4120019,4121948,4123447,4124877,4126492,4128208,4129942,4131632,4133227,4134883,4136530,4138264,4140010,4141821,4143579,4145295,4146921,4148618,4150331,4152056,4153797,4155379,4157232,4159108,4160884,4162632,4164362,4165947,4167745,4169562,4171330,4173088,4174875,4176644,4178393,4180217,4181977,4183719,4185492,4187218,4189027,4190744,4192376,4193994,4195648,4197384,4199108,4200899,4202639,4204383,4206127,4207634,4209276,4211075,4212424,4212995,4213641,4214325,4214932,4215438,4215861,4216524,4217234,4217709,4218322,4218674,4220082,4221479,4222877,4224534,4225743,4227065,4228545,4230037,4231719,4232901,4234039,4235376,4236781,4238018,4239390,4240640,4241790,4243109,4244769,4245484,4246835,4248231,4249691,4250588,4252057,4253685,4254493,4255689,4256902,4258333,4259700,4261085,4262526,4264096,4264905,4265803,4266368,4267621,4269329,4270911,4271798,4272789,4274224,4275619,4276937,4278254,4279623,4280945,4282552,4284193,4284842,4285810,4286240,4287090,4288342,4289515,4290334,4291190,4292725,4294354,4296064,4297834,4299635,4301472,4303255,4305003,4306737,4308606,4310411,4311824,4313260,4314619,4315933,4317397,4318833,4320194,4321525,4322967,4324476,4325963,4327416,4328884,4330342,4331792,4333260,4334702,4336179,4337674,4339161,4340655,4342152,4343641,4345122,4346612,4348096,4349582,4351084,4352564,4354017,4355485,4356974,4358459,4359936,4361419,4362889,4364370,4365803,4367295,4368793,4370258,4371716,4373162,4374649,4376136,4377597,4379090,4380583,4382070,4383558,4385027,4386511,4387996,4389471,4390957,4392448,4393911,4395373,4396837,4398342,4399817,4401287,4402769,4404255,4405721,4407206,4408699,4410162,4411669,4413151,4414629,4416102,4417595,4419072,4420520,4421985,4423454,4424924,4426406,4427892,4429379,4430846,4432338,4433834,4435321,4436810,4438279,4439313,4439678,4440255,4440844,4441504,4442025,4442615,4443170,4443717,4444338,4444966,4445553,4446219,4446840,4447430,4448036,4448601,4448978,4449490,4450018,4450573,4451066,4451457,4452067,4452683,4453263,4453882,4454499,4454746,4455305,4455891,4456467,4456937,4457683,4458353,4458854,4459500,4460134,4460773,4461247,4461753,4462231,4462771,4463255,4463866,4464419,4465065,4465630,4466254,4466858,4467456,4467953,4468412,4468832,4469322,4469820,4470333,4470894,4471346,4471811,4472262,4472731,4473228,4473772,4474283,4474848,4475406,4476050,4476595,4477179,4477774,4478391,4479007,4479576,4480162,4480759,4481409,4481936,4482541,4483166,4483687,4484208,4484668,4485185,4485692,4485986,4486386,4486859,4487373,4487901,4488414,4488946,4489488,4490052,4490631,4491266,4491822,4492422,4492997,4493577,4494202,4494744,4495326,4495853,4496352,4496946,4497298,4497597,4498140,4498727,4499263,4499785,4500241,4500781,4501259,4501700,4502139,4502475,4502957,4503277,4503655,4504108,4504621,4505172,4505685,4506202,4506775,4507257,4507618,4507779,4508226,4508758,4509150,4509569,4510038,4510456,4510889,4511353,4511715,4512174,4512687,4513143,4513630,4514000,4514431,4515016,4515762,4516388,4516816,4517366,4517859,4518411,4518961,4519435,4519985,4520579,4521100,4521670,4522201,4522819,4523137,4523656,4524031,4524513,4524982,4525498,4526032,4526536,4527014,4527550,4528100,4528681,4529184,4529513,4529988,4530459,4530893,4531445,4531952,4532500,4533069,4533671,4534209,4534665,4535050,4535657,4536103,4536592,4537046,4537558,4538027,4538305,4538734,4539208,4539768,4540332,4540937,4541398,4541885,4542383,4542849,4543279,4543774,4544293,4544917,4545260,4545725,4546063,4546571,4546891,4547376,4547778,4548240,4548703,4549198,4549551,4549902,4550204,4550425,4550606,4550862,4551180,4551488,4551721,4552135,4552524,4552794,4553259,4553465,4553616,4553916,4554222,4554459,4555092,4555700,4556392,4556919,4557436,4558033,4558487,4559118,4559584,4560121,4560716,4561362,4561778,4562161,4562662,4563081,4563655,4564187,4564752,4565305,4565963,4566595,4567203,4567818,4568414,4568839,4569348,4569916,4570486,4570845,4571363,4571817,4572344,4572829,4573398,4573872,4574421,4574855,4575080,4575351,4575681,4576001,4576386,4576918,4577303,4577857,4578379,4579010,4579577,4580600,4582626,4584637,4586556,4588555,4590546,4592576,4594580,4596595,4598629,4600644,4602648,4604669,4606628,4608668,4610656,4612662,4614693,4616721,4618776,4620651,4622381,4624092,4625751,4627437,4629130,4630833,4632556,4634286,4636023,4637743,4639482,4641199,4642895,4644593,4646259,4647975,4649674,4651364,4653039,4654740,4656466,4658181,4659896,4661607,4663274,4665000,4666708,4668418,4670135,4671847,4673555,4675261,4676979,4678659,4680325,4682018,4683703,4685370,4687052,4688741,4690392,4692064,4693752,4695437,4697139,4698837,4700525,4702230,4703916,4705601,4707286,4708980,4710673,4712348,4714029,4715715,4717424,4719107,4720800,4722487,4724169,4725845,4727519,4729225,4730919,4732599,4734288,4735984,4737676,4739385,4741083,4742802,4744512,4746210,4747874,4749603,4751310,4752987,4754669,4756342,4758051,4759761,4761441,4763140,4764837,4766488,4768153,4769855,4771576,4773266,4774959,4776636,4778294,4779948,4781601,4783271,4784922,4786592,4788300,4789980,4791689,4793380,4795098,4796774,4798459,4800160,4801854,4803572,4805308,4807016,4808717,4810449,4812114,4813824,4815502,4817182,4818866,4820525,4822223,4824072,4826120,4828168,4830216,4832264,4834312,4836360,4838408,4840456,4842504,4844552,4846600,4848648,4850696,4852579,4854345,4856008,4857684,4859377,4861047,4862797,4864517,4866219,4867936,4869699,4871342,4872990,4874669,4876378,4878093,4879673,4881429,4883192,4884859,4886560,4888230,4890042,4891744,4893494,4895341,4897036,4898748,4900369,4901980,4903605,4905265,4906985,4908618,4910246,4911919,4913582,4915239,4916894,4918561,4920243,4921921,4923552,4925086,4926703,4928408,4930149,4931828,4933599,4935280,4936982,4938600,4940182,4941844,4943486,4945066,4946662,4948342,4950089,4951877,4953635,4955364,4957111,4958930,4960614,4962281,4963955,4965752,4967382,4969053,4970710,4972314,4974051,4975711,4977401,4978957,4980551,4982134,4983642,4985309,4986898,4988630,4990299,4992010,4993644,4995374,4996982,4998746,5000555,5002310,5004122,5005937,5007652,5009289,5010920,5012608,5014276,5016015,5017032,5017663,5018280,5018899,5019254,5019728,5019847,5020449,5021155,5021740,5022412,5023027,5023539,5024230,5024969,5025570,5026248,5027036,5027669,5028282,5028887,5029487,5030114,5030797,5031562,5032107,5032722,5033930,5035394,5036758,5038039,5039683,5041282,5042775,5044240,5045843,5047499,5048828,5049898,5051315,5052411,5053427,5054573,5055584,5056445,5057401,5058528,5059082,5060226,5061202,5061921,5063039,5063952,5064909,5065827,5066859,5068102,5069508,5071187,5072809,5074432,5076020,5077427,5079140,5080828,5082414,5084022,5085712,5087328,5088859,5090476,5092050,5093598,5094910,5096354,5097902,5099556,5101256,5102892,5104435,5106005,5107427,5108891,5110230,5111746,5113174,5114471,5116068,5117311,5118911,5120520,5122068,5123474,5124863,5126189,5127711,5129236,5130694,5132111,5133719,5135343,5136967,5138555,5139970,5140875,5142180,5143429,5144242,5144651,5145538,5146714,5147916,5149132,5150148,5151205,5152207,5153168,5154228,5155219,5156088,5157047,5157845,5158559,5159208,5159649,5159810,5159928,5160543,5161155,5161713,5162277,5162684,5163257,5164436,5165964,5167280,5168573,5169745,5171007,5172191,5173785,5175365,5176952,5178402,5179905,5181316,5182729,5184147,5185301,5185972,5186735,5187795,5189079,5190539,5192059,5193600,5194748,5196365,5197640,5199115,5200504,5202080,5203324,5203986,5205233,5206729,5208218,5209608,5211019,5212565,5214026,5215647,5217170,5218759,5220264,5221185,5222157,5223088,5223639,5224895,5226317,5227451,5227849,5228631,5229173,5229657,5230495,5231656,5232504,5233596,5234753,5235625,5236221,5237417,5238346,5239819,5241183,5241810,5242269,5243751,5245177,5246485,5247503,5248715,5250006,5250949,5251758,5252326,5252963,5254063,5254551,5255242,5255494,5256109,5257046,5257770,5258415,5259222,5259698,5260137,5261475,5262995,5264542,5265826,5267410,5269080,5270658,5272095,5273734,5275309,5276597,5277115,5277892,5279289,5280719,5282131,5283272,5284162,5285706,5286847,5287738,5289126,5290424,5291445,5292799,5293568,5294069,5294645,5294989,5295385,5295774,5296231,5296723,5297089,5297506,5297851,5298272,5298737,5299092,5299420,5299867,5300416,5301182,5302014,5302688,5303198,5303698,5304100,5304523,5305233,5305452,5305828,5306215,5306503,5307190,5308056,5308421,5309234,5310087,5310700,5311055,5311659,5312262,5312668,5313060,5313428,5313843,5314206,5315022,5316595,5318117,5319700,5321316,5322955,5324577,5325930,5326510,5327109,5327328,5327539,5327782,5328244,5329406,5331004,5332883,5334799,5336246,5337160,5338785,5340546,5342233,5343871,5345609,5347352,5349098,5350867,5352683,5354435,5356247,5357986,5359780,5361600,5363402,5365214,5367045,5368854,5370652,5372469,5374319,5376109,5377843,5379582,5381159,5382580,5384072,5385534,5387017,5388495,5389969,5391400,5392878,5394374,5395850,5397289,5398771,5400240,5401710,5402145,5402663,5403096,5403471,5403934,5404407,5404901,5405259,5405759,5406138,5406573,5407123,5407518,5407920,5408198,5408506,5408852,5409195,5409510,5409794,5410062,5410616,5411048,5411382,5411967,5412401,5412900,5413359,5413846,5414234,5414760,5415105,5415628,5416131,5416621,5417128,5417569,5418021,5418378,5418725,5419340,5421313,5423272,5425180,5426905,5428569,5430239,5431911,5433593,5435265,5436933,5438587,5440252,5441916,5443580,5445275,5446959,5448647,5450342,5452017,5453698,5455604,5457652,5459473,5461142,5462769,5464449,5466171,5467849,5469560,5471268,5473014,5474760,5476580,5478167,5479757,5480943,5481365,5481744,5482292,5482404,5483334,5484313,5485399,5486372,5487377,5488461,5489327,5490404,5491437,5492096,5493216,5494475,5496142,5497897,5499628,5501271,5502535,5504015,5505485,5506959,5508450,5509931,5511421,5512906,5513321,5513546,5514152,5514809,5515424,5515853,5516430,5516984,5517464,5518013,5518428,5518866,5519272,5519702,5520159,5520489,5521021,5521265,5521702,5522014,5522524,5522972,5523436,5523753,5524325,5526372,5528346,5530004,5531679,5533400,5535114,5536804,5538471,5540126,5541793,5543445,5545079,5546738,5548706,5550638,5552356,5554158,5556048,5557847,5559552,5561315,5563079,5564765,5566064,5566618,5567009,5567758,5568872,5569821,5570828,5571668,5572737,5573725,5575173,5576668,5578363,5579917,5581518,5582996,5584463,5585949,5587447,5588923,5590387,5591839,5593330,5594580,5595164,5595750,5596296,5596642,5596970,5597342,5597829,5598221,5598733,5599288,5599674,5600141,5600624,5601106,5601558,5601997,5602462,5602884,5603460,5603922,5604390,5604964,5605381,5605896,5606392,5606795,5607325,5607863,5609349,5611348,5613255,5614948,5616653,5618342,5620025,5621733,5623431,5625121,5626795,5628515,5630225,5631918,5633597,5635627,5637543,5639325,5641085,5642760,5644513,5646283,5647957,5649765,5651523,5653197,5654085,5654759,5655350,5656467,5658112,5659237,5660590,5662026,5663849,5665503,5667058,5668428,5669923,5671406,5672885,5674390,5675920,5677417,5678902,5680394,5680864,5681403,5681921,5682452,5682985,5683293,5683678,5684185,5684726,5685220,5685816,5686377,5687042,5687627,5687749,5687908,5688318,5688778,5689306,5689883,5690433,5690998,5691740,5693769,5695716,5697404,5699097,5700779,5702455,5704133,5705816,5707489,5709159,5710822,5712601,5714609,5716348,5718067,5719795,5721486,5723194,5724836,5726458,5727211,5727972,5729113,5730698,5731918,5733178,5734622,5736260,5737882,5739313,5740701,5742139,5743677,5745144,5746642,5748118,5749555,5751036,5752518,5753988,5755459,5756962,5758478,5759971,5760570,5760934,5761260,5761657,5761984,5762199,5762625,5763105,5763461,5763942,5764296,5764643,5764943,5765192,5765490,5765918,5766358,5766549,5767060,5767514,5767694,5768079,5768433,5768691,5769109,5769486,5769902,5770512,5770954,5771389,5771781,5772007,5772278,5772770,5773132,5773625,5773974,5774661,5776653,5778647,5780648,5782427,5784117,5785790,5787447,5789154,5790850,5792525,5794204,5795911,5797625,5799336,5801043,5802760,5804455,5806159,5807851,5809539,5811409,5813457,5815435,5817048,5818676,5820409,5822149,5823849,5825658,5827514,5829322,5831203,5833007,5834758,5836464,5838162,5839609,5840173,5840863,5841597,5842462,5843670,5844374,5845315,5846163,5846969,5847524,5848044,5849751,5850946,5852281,5853837,5855373,5856846,5858391,5859862,5861336,5862879,5864375,5865858,5867349,5868831,5870314,5871787,5873290,5874537,5874859,5875381,5876000,5876563,5877066,5877539,5878004,5878604,5879145,5879619,5879957,5880531,5881110,5881621,5882152,5882684,5883348,5883993,5884592,5884987,5885366,5885660,5887388,5889338,5891130,5892821,5894514,5896218,5897924,5899595,5901277,5902957,5904645,5906314,5908351,5910052,5911759,5913517,5915246,5916989,5918739,5920456,5921541,5922255,5923320,5924868,5926424,5927917,5929396,5930930,5932490,5933948,5935505,5937018,5938534,5940080,5941581,5943101,5944584,5946064,5947552,5949055,5950542,5952017,5953515,5955001,5956483,5957937,5959422,5960931,5962425,5963897,5965366,5966859,5968341,5969824,5971294,5972799,5973781,5974417,5975046,5975645,5976313,5976834,5977036,5977494,5977774,5978100,5978669,5978906,5979280,5979888,5980410,5981056,5981600,5982074,5982664,5983277,5983713,5984279,5984708,5985399,5986023,5986603,5987151,5987708,5988390,5988994,5989638,5990307,5990889,5991445,5991930,5992476,5992913,5993325,5993854,5994332,5994960,5995512,5996009,5996425,5996950,5997561,5998083,5998708,5999295,5999805,6000286,6000409,6000548,6000837,6001268,6001800,6002113,6002462,6002900,6003418,6004031,6004627,6005058,6005637,6006224,6006618,6006932,6007177,6007760,6008314,6009018,6009513,6009992,6011947,6013953,6015963,6017982,6019966,6021993,6023620,6025326,6027023,6028721,6030423,6032134,6033811,6035507,6037223,6038923,6040613,6042310,6044004,6045710,6047388,6049070,6050798,6052478,6054166,6055846,6057518,6059216,6060906,6062595,6064290,6065990,6067660,6069358,6071041,6072710,6074396,6076214,6078262,6080310,6082358,6084151,6085928,6087656,6089355,6091175,6092896,6094655,6096547,6098255,6100031,6101791,6103558,6105275,6107031,6108789,6110501,6112225,6113955,6115635,6117422,6119210,6120960,6122743,6124467,6126257,6128133,6128930,6129655,6130262,6130973,6131614,6132289,6132829,6133580,6134098,6134694,6135132,6135737,6136297,6137036,6137998,6138880,6139774,6140671,6141608,6142309,6142811,6143101,6143704,6144386,6144953,6145364,6146030,6146413,6146726,6147036,6147708,6148628,6149494,6150374,6150958,6152235,6153193,6153827,6154126,6155368,6156971,6158619,6160243,6161864,6163666,6165381,6167066,6168698,6170226,6171693,6173273,6174799,6176254,6177739,6179224,6180673,6182148,6183628,6185101,6186574,6188049,6189506,6190968,6192471,6193956,6195433,6196886,6197502,6198015,6198525,6198966,6199407,6199975,6200266,6200778,6201221,6201817,6201966,6202260,6202851,6203345,6203885,6204207,6204773,6205343,6205947,6206433,6206818,6207430,6207678,6207853,6208357,6208911,6209210,6209472,6209638,6209970,6210455,6211007,6211503,6212021,6212521,6212769,6213154,6213556,6213958,6214465,6215000,6215413,6215729,6216079,6216611,6217147,6217760,6219776,6221824,6223825,6225854,6227665,6229377,6231094,6232796,6234513,6236243,6237912,6239617,6241315,6243056,6244722,6246436,6248119,6249802,6251500,6253229,6254947,6256624,6258313,6259993,6261645,6263618,6265666,6267695,6269562,6271431,6273141,6274942,6276691,6278482,6280265,6282193,6284015,6285825,6287607,6289449,6291335,6293205,6294934,6296735,6298371,6299661,6300351,6301160,6301826,6302589,6303297,6304172,6305180,6305896,6306811,6307749,6308721,6309514,6310405,6311225,6312193,6312938,6313573,6314105,6315218,6316675,6317278,6318038,6319558,6321120,6322725,6324340,6325947,6327484,6328986,6330458,6331500,6332110,6332736,6333220,6333600,6335093,6336758,6338445,6340286,6342090,6343156,6344344,6345857,6347266,6348766,6350250,6351722,6353214,6354713,6356194,6357658,6359071,6359623,6360186,6360744,6361325,6361884,6362215,6362610,6363132,6363541,6364083,6364612,6364973,6365387,6365561,6365953,6366448,6366879,6367148,6367491,6367810,6368098,6368381,6368776,6369247,6369757,6370124,6371123,6373055,6374933,6376583,6378245,6379900,6381597,6383269,6384919,6386602,6388299,6389975,6391674,6393350,6395347,6397076,6398606,6400239,6401966,6403698,6405444,6407143,6408866,6410468,6411063,6411692,6412152,6413841,6415240,6416268,6417484,6418715,6420337,6421991,6423586,6425012,6426496,6427026,6427499,6428076,6428589,6429014,6429325,6429518,6429608,6431316,6433039,6434680,6436336,6437994,6439693,6441580,6443149,6444745,6446363,6447092,6448286,6449792,6451250,6452068,6452288,6452662,6452997,6453203,6453582,6453806,6454752,6456514,6458190,6459833,6461596,6463355,6465050,6466810,6467992,6469109,6470355,6471800,6472126,6472539,6473028,6473345,6475131,6476777,6478586,6480254,6481400,6482864,6484195,6484582,6484926,6485112,6485460,6485553,6485619,6485734,6487246,6488900,6490574,6492236,6494026,6495802,6497515,6499202,6500524,6502005,6503439,6504233,6504645,6506104,6507886,6509290,6510348,6510854,6511893,6513618,6515095,6516519,6517056,6517690,6519394,6520931,6522423,6523111,6523508,6525087,6526763,6528249,6529211,6529673,6530928,6532685,6534125,6535417,6535961,6536774,6538474,6539986,6541497,6542095,6542501,6544206,6545796,6547303,6548132,6548549,6549965,6551748,6553147,6554256,6554786,6555785,6557503,6558988,6560427,6560966,6561541,6563251,6564800,6566281,6567003,6567397,6568938,6570654,6572099,6573092,6573560,6574745,6576498,6577941,6579284,6579840,6580606,6582308,6583832,6585328,6585936,6586324,6588011,6589609,6591205,6592668,6594145,6595612,6597086,6598545,6599645,6600085,6600525,6600772,6601007,6601227,6601511,6602041,6602419,6602854,6603414,6603810,6604214,6604605,6604954,6605213,6605581,6605948,6606334,6607939,6609899,6611542,6613187,6614834,6616509,6618182,6619820,6621456,6623086,6624795,6626654,6628215,6629816,6631432,6633000,6634592,6636076,6636467,6636725,6637443,6638372,6639484,6640009,6641540,6643235,6644690,6645229,6645823,6647533,6649079,6650303,6651789,6653257,6654737,6656191,6657608,6658797,6659363,6659762,6660149,6660612,6661028,6661547,6662277,6662864,6663355,6663851,6664233,6664610,6664979,6665468,6665874,6666432,6667858,6669670,6671351,6673002,6674678,6676305,6677948,6679611,6681526,6683096,6684651,6686292,6687666,6688081,6688591,6689132,6689442,6689831,6690652,6691811,6693347,6695083,6696370,6698418,6700473,6702493,6704541,6706077,6707511,6708914,6710330,6711488,6713010,6714505,6715960,6717350,6718932,6720451,6722015,6723528,6724996,6726351,6727726,6729172,6730585,6732121,6733604,6734979,6736306,6737755,6739183,6740517,6742005,6743563,6745012,6746353,6747721,6749233,6750711,6752179,6753718,6755182,6756608,6757903,6758339,6758542,6758567,6758850,6759239,6759576,6759946,6760484,6760978,6761409,6761903,6762527,6763273,6764473,6765560,6766629,6767669,6768803,6769997,6771385,6772162,6772796,6773286,6773843,6774358,6774926,6775672,6776210,6776519,6776885,6777326,6777875,6778072,6779345,6780718,6782020,6782979,6784165,6785288,6786457,6787669,6788878,6790408,6791721,6792930,6794310,6795811,6797273,6798535,6800212,6801687,6803345,6804465,6805765,6806965,6808186,6809870,6810997,6812182,6813368,6814526,6815697,6816859,6817962,6818967,6820358,6821642,6822686,6823765,6824917,6826034,6827215,6828407,6829860,6831284,6832501,6833762,6835342,6836680,6838081,6839645,6841154,6842886,6844056,6845365,6846557,6847722,6849373,6850676,6851839,6852997,6854146,6855331,6856498,6857628,6858606,6859600,6860695,6861802,6862943,6864187,6865259,6866425,6867706,6869120,6870597,6871990,6873362,6874818,6876274,6877877,6879215,6880412,6881616,6882747,6883973,6885263,6886373,6887488,6888703,6889968,6891250,6892577,6893929,6895304,6896752,6897921,6899285,6900618,6901939,6902866,6904035,6905162,6906314,6907522,6908754,6910338,6911539,6912752,6914235,6915616,6917193,6918419,6920130,6921661,6923053,6924323,6925562,6926763,6928104,6929687,6930771,6931950,6933096,6934221,6935415,6936565,6937822,6939878,6941934,6943983,6946031,6948079,6949179,6950572,6951857,6952922,6954016,6955150,6956296,6957498,6958710,6960150,6961596,6962818,6964065,6965643,6966975,6968403,6969935,6971440,6973165,6974324,6975639,6976825,6977969,6979594,6980895,6982045,6983216,6984351,6985527,6986703,6987843,6988720,6990098,6991428,6992641,6993611,6994781,6995915,6997068,6998287,6999581,7001102,7002279,7003482,7005052,7006386,7007969,7009263,7010886,7012551,7013807,7015148,7016368,7017549,7019033,7020468,7021587,7022774,7023942,7025118,7026273,7027444,7028303,7028887,7029076,7029887,7030700,7031508,7032219,7033117,7033900,7034671,7035439,7036200,7036789,7037477,7038143,7038871,7039415,7040235,7040948,7041767,7042382,7042984,7043815,7044584,7045323,7046176,7047093,7047762,7048172,7048571,7049241,7049858,7050601,7051136,7051991,7052751,7053762,7055248,7056572,7057220,7058076,7058979,7059663,7060654,7061765,7062866,7063862,7064853,7065964,7067002,7068100,7069193,7070306,7071429,7072514,7073640,7074700,7075759,7076865,7077902,7078925,7080048,7081093,7082161,7083200,7084234,7085228,7086251,7087587,7088684,7089905,7090953,7091405,7091881,7092608,7093661,7094380,7095064,7095574,7096060,7096669,7097201,7097834,7098749,7099462,7099904,7100280,7100657,7100862,7101067,7101342,7101654,7102418,7103380,7104037,7104229,7104528,7105322,7106040,7106778,7107309,7107613,7107938,7108568,7108857,7109333,7109862,7110193,7110953,7111200,7111695,7112102,7112345,7113137,7113620,7113776,7114239,7114994,7115704,7116321,7116804,7117447,7117776,7118378,7119114,7119641,7120102,7120731,7121038,7121153,7121599,7122405,7123071,7123652,7124032,7124409,7124648,7125196,7125831,7126803,7127256,7127926,7128190,7128650,7129112,7129935,7130867,7131574,7132349,7133352,7133763,7134615,7135147,7135712,7136634,7136970,7137288,7137467,7137859,7138498,7139249,7140275,7141182,7141939,7142493,7142954,7143219,7143601,7144741,7145693,7146547,7147459,7148468,7149563,7150769,7151650,7152500,7153494,7155027,7157078,7159133,7161179,7163050,7164502,7165968,7168016,7170064,7172121,7174169,7176217,7178274,7180322,7182370,7184418,7186468,7188430,7190466,7192523,7194124,7196040,7197459,7199257,7201127,7202921,7204727,7206592,7208405,7210238,7212093,7213912,7215703,7217569,7219379,7221378,7222989,7224323,7226240,7227576,7229354,7230390,7232133,7234010,7235625,7237280,7238395,7240124,7240866,7241922,7243157,7244995,7246776,7248683,7250491,7252190,7253817,7255326,7256787,7258219,7259579,7261510,7263440,7265212,7266857,7268369,7269801,7271125,7272401,7273606,7274822,7275958,7277362,7279010,7280686,7282528,7284489,7286424,7288389,7290404,7292272,7294181,7296068,7298084,7299875,7301397,7302858,7304906,7306527,7308286,7310113,7311623,7312653,7314502,7316530,7318301,7318640,7319765,7321535,7322783,7324792,7326173,7326843,7328885,7330942,7332990,7333465,7333959,7336007,7338064,7339280,7340033,7340986,7343039,7345087,7347135,7349183,7350927,7352134,7352899,7353620,7354258,7355847,7357876,7359924,7361972,7364015,7365235,7366266,7368314,7370362,7371853,7372413,7372699,7374732,7376780,7378836,7380790,7381551,7383497,7385545,7387593,7389641,7391598,7393030,7393983,7394702,7395383,7396752,7398800,7400848,7402905,7404949,7406858,7408500,7409931,7411136,7412182,7413143,7414659,7416488,7418364,7420412,7422463,7424292,7426215,7427392,7427448,7428944,7430457,7431377,7431713,7432425,7433575,7435623,7437671,7439359,7440716,7442595,7443667,7444710,7446758,7448598,7449383,7451440,7453401,7455449,7457306,7459310,7461205,7462779,7464008,7464899,7466262,7468310,7470358,7472415,7474463,7476517,7478574,7480622,7482575,7484615,7486663,7488719,7490741,7492789,7494846,7496894,7498946,7500994,7502859,7504340,7505466,7506340,7507227,7507844,7508130,7510160,7512126,7513886,7515326,7516716,7517627,7518611,7520659,7522712,7524769,7526192,7527507,7529324,7531226,7533142,7535111,7537110,7539063,7541105,7543120,7545093,7547084,7548908,7550956,7553004,7554169,7555189,7556878,7558673,7560730,7562778,7564601,7566454,7568509,7570557,7572605,7574653,7576701,7578749,7580797,7582845,7584893,7586941,7588989,7591037,7593085,7595133,7597181,7599229,7601277,7603325,7605373,7607426,7609206,7610456,7612504,7614552,7616600,7618656,7620311,7621153,7621617,7623652,7625700,7625986,7626115,7628100,7630157,7632205,7634253,7636310,7638365,7640053,7640871,7641000,7643048,7645096,7646927,7648328,7650363,7651952,7653111,7654091,7654538,7654563,7654588,7654613,7654638,7654847,7656714,7658536,7660287,7662250,7662933,7664981,7667029,7669077,7670896,7672580,7674049,7676097,7678145,7680149,7682179,7684107,7685370,7686921,7688953,7691001,7693049,7694594,7696441,7698466,7700514,7702562,7704610,7706666,7708617,7710529,7712404,7714255,7715912,7717253,7718349,7719219,7720824,7722872,7724920,7726968,7729016,7731071,7732693,7734741,7736789,7738837,7740207,7741962,7743974,7746022,7748070,7750118,7752166,7754207,7756024,7757536,7758656,7760639,7762076,7763562,7765591,7767526,7769402,7771073,7772462,7773817,7775365,7777025,7778252,7780113,7781948,7784005,7786061,7788109,7790004,7790335,7791000,7792872,7794920,7796968,7799016,7801055,7802570,7803572,7804286,7804980,7806095,7808143,7810158,7811349,7811989,7813260,7815315,7817363,7819411,7821459,7823507,7825555,7827603,7829651,7831699,7833707,7835423,7836856,7838006,7839397,7841445,7843493,7845533,7846176,7848002,7850059,7852107,7854163,7855910,7856219,7856319,7857719,7859431,7861470,7863526,7865583,7867631,7869416,7871388,7872746,7874794,7876842,7878896,7880952,7883009,7884396,7886043,7888084,7890140,7892197,7894254,7896310,7898358,7900407,7902402,7904375,7906242,7907910,7909077,7909918,7911364,7913419,7915456,7917431,7919367,7921422,7923407,7925038,7926479,7927779,7928912,7929966,7931011,7932448,7934505,7936553,7938601,7940649,7942706,7944761,7946809,7948857,7950914,7952962,7955010,7957048,7958686,7959887,7960889,7961614,7962305,7963006,7963709,7965338,7967386,7969434,7971482,7973530,7975578,7977626,7979674,7981657,7983060,7983962,7984414,7984728,7986490,7988538,7990586,7992634,7994682,7996707,7998450,7999857,8001788,8003333,8005280,8006162,8006927,8008461,8010508,8012554,8014602,8016650,8018698,8020746,8022803,8024860,8026916,8028972,8030929,8032644,8034097,8035219,8035670,8036103,8036702,8037135,8037635,8039269,8041324,8043347,8045244,8046938,8048408,8049706,8050887,8052252,8054291,8055965,8057409,8059181,8061089,8062728,8064224,8065493,8066358,8067017,8067817,8069802,8071609,8073134,8074319,8076118,8078037,8079592,8081606,8083654,8084888,8086593,8088301,8090349,8092383,8093146,8094344,8096392,8098440,8100488,8102535,8104080,8104705,8105474,8107528,8109363,8109479,8109980,8112002,8114050,8116107,8118155,8120203,8122251,8124299,8126356,8128404,8130452,8132506,8134411,8135562,8137480,8139510,8140860,8142043,8144091,8146139,8148187,8150235,8152283,8154331,8156384,8158043,8158672,8160627,8162675,8164723,8166771,8168819,8170873,8172822,8173966,8176014,8178062,8180110,8182158,8184206,8186254,8188302,8190350,8192398,8194446,8196503,8198219,8199038,8199326,8201374,8203348,8205396,8207427,8209475,8211523,8213579,8215627,8217675,8219723,8221771,8223819,8225872,8227610,8229015,8229945,8230370,8230703,8232703,8234534,8236466,8238516,8240564,8242611,8244479,8245821,8247247,8249047,8251049,8253097,8255145,8257193,8259106,8260470,8261303,8262020,8262663,8264243,8266291,8268347,8270395,8272451,8274499,8276547,8278595,8280643,8282691,8284733,8286457,8287859,8288928,8289520,8291366,8293414,8295462,8297510,8299470,8301134,8302490,8303372,8304089,8306110,8308158,8309356,8311103,8313143,8315191,8317239,8319287,8321335,8323237,8324981,8326553,8327428,8328553,8328900,8329952,8332000,8333698,8334783,8336831,8338879,8340927,8342975,8345032,8347080,8349110,8351128,8352596,8354532,8356580,8358592,8360446,8362063,8363508,8364756,8365918,8367578,8369626,8371674,8373722,8375770,8377823,8379880,8381755,8383017,8383909,8385568,8387616,8389664,8391714,8393723,8395692,8397506,8399196,8400775,8402243,8403639,8404990,8406263,8408151,8410199,8412247,8414303,8416351,8418399,8420456,8422504,8424552,8426600,8428648,8430705,8432753,8434810,8436858,8438915,8440971,8443026,8445074,8447122,8449178,8451226,8453283,8455331,8457387,8459443,8461500,8463557,8465609,8467665,8469269,8470696,8472345,8474344,8476392,8478449,8480497,8482545,8484593,8486641,8488689,8490737,8492785,8494833,8496881,8498929,8500977,8503025,8505066,8507056,8508875,8510604,8512645,8514582,8515675,8517723,8519771,8521819,8523867,8525915,8527963,8530011,8532053,8534052,8535486,8536407,8537749,8539797,8541845,8543893,8545941,8547697,8549466,8551514,8553562,8555610,8557658,8559706,8561754,8563771,8564758,8566814,8568833,8570868,8572919,8574950,8576874,8578603,8580129,8581640,8583015,8584352,8585500,8586882,8588731,8590180,8591670,8593054,8594465,8595914,8597330,8598811,8600343,8601766,8603083,8604490,8605917,8607342,8608855,8610285,8611617,8613019,8614507,8615885,8617176,8618648,8620079,8621511,8622930,8624364,8625825,8627359,8628858,8630188,8631614,8633029,8634424,8636223,8637644,8639133,8640517,8641973,8643409,8644798,8646278,8647793,8649268,8650615,8651982,8653396,8654783,8656285,8657717,8659090,8660488,8661906,8663414,8664690,8666122,8667597,8668979,8670389,8671846,8673275,8674785,8676311,8677680,8679124,8680588,8681998,8683608,8685214,8686698,8688145,8689583,8691027,8692452,8693879,8695402,8696904,8698284,8699625,8701053,8702472,8703939,8705423,8706821,8708184,8709554,8711036,8712364,8713718,8715283,8716686,8718078,8719568,8720986,8722489,8724027,8725449,8726792,8728227,8729691,8731108,8732283,8733481,8734674,8735801,8736972,8738125,8739289,8741275,8742771,8744334,8745775,8747199,8748742,8750276,8752173,8753723,8755031,8756544,8758130,8759689,8761183,8762775,8764588,8766087,8767665,8769168,8770747,8772557,8773711,8774716,8775770,8776846,8778530,8780250,8781793,8783273,8784923,8786311,8787586,8788938,8790374,8791460,8792390,8793785,8795586,8797163,8797701,8798091,8798474,8799328,8800534,8801769,8802876,8804400,8806294,8808278,8810231,8812122,8813997,8815756,8817619,8819370,8820549,8821860,8823292,8824526,8825704,8827222,8828948,8830770,8832579,8834349,8836116,8837786,8839625,8841297,8843148,8845076,8846572,8847489,8848946,8850841,8851599,8853220,8854959,8856678,8858130,8859808,8860956,8862306,8863460,8865153,8866813,8868387,8870060,8871058,8872865,8874475,8876290,8878093,8879763,8881466,8883197,8884770,8886490,8888256,8890015,8891670,8893459,8895107,8896905,8898696,8900519,8902254,8904006,8905688,8907314,8909061,8910847,8912583,8914433,8916261,8917871,8919664,8921363,8923057,8924746,8926428,8928110,8929720,8931366,8933142,8934858,8936577,8938306,8939958,8941758,8943478,8945126,8946832,8948576,8950200,8951977,8953804,8955448,8957215,8958844,8960647,8962409,8964077,8965845,8967644,8969216,8970961,8972632,8974211,8975951,8977706,8979459,8981230,8982995,8984587,8986384,8988177,8989850,8991600,8993285,8994919,8996619,8998442,9000167,9001908,9003687,9005561,9007444,9009231,9011078,9012929,9014781,9016606,9018417,9020193,9021822,9023597,9025391,9027006,9028774,9030462,9032155,9033815,9035430,9037061,9038747,9040662,9042559,9044459,9046397,9048330,9050241,9052179,9054087,9056009,9057915,9059831,9060947,9062747,9064508,9066305,9068067,9069870,9071690,9073300,9075041,9076842,9078715,9080423,9082209,9084044,9085780,9087528,9089346,9091134,9092885,9094669,9096395,9098159,9099984,9101814,9103628,9105290,9107082,9108796,9110573,9112407,9114223,9116018,9117789,9119593,9121215,9122821,9124590,9126362,9128119,9129894,9131715,9133564,9135226,9137073,9138952,9140798,9142528,9144343,9146069,9147872,9149663,9151455,9153188,9154969,9156774,9158517,9160284,9161968,9163664,9165246,9166740,9168338,9169932,9171579,9172563,9174153,9175609,9177278,9178830,9180572,9182086,9183817,9184693,9186390,9187893,9189412,9190935,9192570,9194201,9195922,9197518,9199217,9200428,9202125,9203682,9204917,9206433,9207496,9209054,9210594,9212104,9213789,9215350,9217032,9218643,9220349,9222016,9223532,9225559,9227580,9229551,9231532,9233541,9235454,9237438,9239466,9241485,9243509,9245388,9247390,9249429,9251197,9253110,9255150,9257129,9259115,9261155,9263141,9265164,9267110,9269050,9270917,9272946,9274957,9276628,9278417,9280318,9282210,9284086,9285836,9287560,9289337,9291195,9293092,9294962,9296802,9298620,9300345,9302050,9303870,9305728,9307571,9309417,9311258,9313055,9314766,9316533,9318397,9320267,9322095,9323957,9325738,9327503,9329141,9330886,9332777,9334622,9336439,9338281,9340143,9341887,9343601,9345352,9347197,9349050,9350913,9352821,9354606,9356403,9358148,9359974,9361858,9363708,9365573,9367391,9369095,9370818,9372662,9374518,9376330,9378179,9380059,9381815,9383525,9385364,9387227,9389111,9390998,9392806,9394595,9396353,9398259,9400140,9401967,9403754,9405641,9407396,9409141,9410976,9412685,9414180,9415765,9417253,9418902,9420339,9421906,9423538,9424992,9426648,9428284,9429813,9431640,9433036,9434730,9436641,9438453,9440205,9442102,9443837,9445676,9447388,9449115,9450590,9452252,9453768,9455356,9456843,9458379,9459985,9461457,9463107,9464842,9466421,9468307,9469886,9471705,9473617,9475404,9477080,9478944,9480699,9482353,9483974,9485493,9487165,9488782,9490259,9491935,9493413,9495007,9496624,9498087,9499703,9501185,9502702,9504598,9506325,9508060,9509908,9511626,9513406,9515301,9517064,9518748,9520589,9522126,9523795,9525332,9526792,9528386,9529802,9531431,9532934,9534526,9536207,9537701,9539598,9541127,9542815,9544697,9546456,9548150,9549882,9551510,9553105,9554761,9556381,9558050,9559576,9561037,9562633,9564073,9565667,9567298,9568692,9570458,9572101,9573648,9575526,9577243,9578946,9580743,9582487,9584216,9586053,9587836,9589548,9591375,9593185,9594918,9596571,9598432,9600177,9601934,9603720,9605463,9607251,9608972,9610743,9612390,9614038,9615814,9617322,9618912,9620706,9622262,9624062,9625686,9627390,9629064,9630712,9632450,9634032,9635869,9637466,9639253,9640884,9642702,9644345,9646171,9647836,9649664,9651141,9652751,9654376,9656060,9657766,9659462,9661026,9662637,9664212,9665709,9667214,9669002,9670565,9672257,9673935,9675621,9677455,9679122,9680852,9682569,9684446,9686216,9687955,9689663,9691305,9692863,9694571,9696304,9697983,9699535,9701205,9702866,9704327,9705952,9707641,9709113,9710632,9712340,9713945,9715702,9717513,9719306,9721014,9722803,9724587,9726361,9728173,9730015,9731649,9733245,9735103,9736692,9738235,9739959,9741520,9743154,9744627,9746297,9747751,9749244,9750898,9752547,9754194,9755923,9757500,9759131,9761015,9762857,9764577,9766502,9768229,9769844,9771698,9773388,9774927,9776642,9778242,9779935,9781422,9782956,9784406,9785917,9787607,9789161,9790767,9792522,9794124,9795875,9797780,9799548,9801264,9803156,9804976,9806656,9808378,9810141,9811757,9813352,9814946,9816587,9818076,9819382,9821079,9822456,9823990,9825705,9827287,9828930,9830687,9832108,9833738,9835426,9837011,9838784,9840588,9842205,9843924,9845719,9847411,9849164,9850905,9852381,9854081,9855498,9857048,9858558,9860030,9861567,9863090,9864674,9866352,9867850,9869648,9871359,9873107,9874906,9876572,9878303,9880075,9881787,9883476,9885268,9886985,9888712,9890408,9892160,9893923,9895647,9897378,9899159,9900888,9902530,9904261,9906088,9907817,9909517,9911341,9913097,9914772,9916447,9918190,9919914,9921542,9923222,9924930,9926728,9928489,9930243,9931903,9933615,9935374,9937191,9938961,9940600,9942243,9944074,9945899,9947754,9949471,9951303,9953037,9954890,9956662,9958344,9960058,9961808,9963620,9965289,9966958,9968670,9970454,9972343,9973995,9975689,9977434,9979176,9981006,9982702,9984353,9986086,9987960,9989626,9991463,9993210,9994762,9996531,9998418,10000228,10002055,10003741,10005516,10007394,10009171,10010940,10012632,10014326,10016028,10017722,10019420,10021121,10022908,10024630,10026524,10028418,10030305,10032221,10034171,10036125,10038091,10039970,10041697,10043597,10045361,10047247,10049056,10050827,10052648,10054423,10056218,10058127,10060063,10061946,10063841,10065687,10067500,10069425,10071251,10073129,10074964,10076748,10078602,10080425,10082295,10084257,10086148,10087948,10089788,10091632,10093515,10095418,10097321,10099215,10101069,10102908,10104739,10106510,10108425,10110289,10112133,10113900,10115774,10117608,10119433,10121156,10123018,10124962,10126874,10128664,10130525,10132439,10134361,10136266,10138208,10140128,10142072,10143846,10145731,10147666,10149596,10151560,10153354,10155263,10157005,10158749,10160503,10162196,10163963,10165642,10167480,10169267,10171048,10172810,10174598,10176359,10178216,10179989,10181787,10183542,10185408,10187139,10188890,10190653,10192342,10194027,10195839,10197512,10199351,10201131,10203017,10204870,10206706,10208572,10210409,10212281,10214114,10215948,10217808,10219685,10221521,10223290,10225168,10226900,10228791,10230592,10232453,10234282,10236028,10237926,10239720,10241547,10243389,10245233,10246963,10248840,10250555,10252404,10254170,10256011,10257761,10259554,10261398,10263174,10265004,10266755,10268588,10270371,10272039,10273968,10275645,10277533,10279317,10281029,10282795,10284479,10286256,10288014,10289872,10291701,10293581,10295502,10297413,10299154,10301012,10302654,10304510,10306318,10308223,10309931,10311712,10313598,10315324,10317144,10319000,10320947,10322976,10325006,10326996,10328967,10330928,10332938,10334971,10336991,10339025,10340959,10342964,10344956,10346930,10348841,10350787,10352766,10354758,10356773,10358772,10360778,10362749,10364710,10366726,10368743,10370729,10372744,10374671,10376669,10378642,10380654,10382636,10384613,10386540,10388523,10390531,10392493,10394515,10396169,10397947,10399750,10401677,10403172,10405064,10406650,10408610,10410478,10412245,10413958,10415729,10417404,10419297,10421275,10422821,10424741,10426277,10428224,10429531,10431329,10432995,10434819,10436457,10438139,10439945,10441498,10443390,10444981,10446806,10447983,10449794,10451357,10453292,10454877,10456723,10458476,10460101,10461931,10463578,10465366,10466695,10468556,10470061,10472069,10474021,10475970,10477998,10479926,10481920,10483913,10485726,10487716,10489685,10491560,10492988,10494883,10496795,10498145,10499475,10500627,10501395,10502044,10502852,10504084,10505549,10506699,10508062,10510058,10512071,10514110,10516137,10518163,10520204,10522228,10524213,10526180,10528013,10529779,10531439,10533141,10534852,10536557,10538318,10540063,10541752,10543424,10545179,10547036,10548743,10550655,10552333,10553938,10555399,10557148,10558960,10560691,10562445,10564086,10565993,10567597,10569371,10571009,10571834,10572659,10574296,10575076,10575510,10576697,10578374,10580070,10581843,10583682,10585446,10587310,10589012,10590701,10592309,10594223,10596202,10598161,10600150,10602124,10604130,10606107,10608082,10609997,10611927,10613753,10615586,10617465,10618997,10619968,10621288,10623070,10624439,10625932,10627292,10628815,10629877,10631247,10632631,10634221,10635822,10637650,10639504,10641361,10643084,10644644,10646185,10647684,10649262,10650851,10652493,10654043,10655557,10657321,10659131,10660989,10662860,10664858,10666820,10668672,10670525,10672393,10674291,10676167,10677916,10679631,10681582,10683456,10685012,10686552,10688069,10689120,10690666,10691970,10693150,10694855,10696464,10698155,10699813,10701730,10703602,10705561,10707549,10709524,10711141,10713134,10715079,10716455,10718403,10720381,10722327,10723843,10725778,10727630,10729454,10730566,10732335,10734271,10736123,10737863,10739804,10741689,10743659,10745018,10746969,10748863,10750483,10752476,10754066,10755972,10757982,10759960,10761941,10763577,10765570,10767518,10768881,10770836,10772800,10774761,10776254,10778207,10780063,10781875,10782992,10784760,10786699,10788533,10790241,10792162,10794049,10796024,10798002,10799957,10801956,10803883,10805888,10807872,10809535,10811072,10812737,10814181,10815865,10817362,10818963,10820604,10822429,10824272,10825971,10827702,10829312,10831130,10832923,10834728,10836253,10838028,10839870,10841675,10843426,10845172,10846940,10848701,10850440,10852151,10854068,10856071,10858061,10860020,10861983,10863948,10865896,10867862,10869845,10871323,10872858,10874413,10875891,10877644,10879519,10881398,10883233,10885112,10887031,10888938,10890607,10892496,10894493,10896307,10897531,10899374,10901373,10903309,10905107,10906895,10908779,10910822,10912736,10914565,10916341,10918223,10920167,10921997,10923755,10925467,10927284,10929178,10930981,10932095,10933869,10935496,10937400,10938767,10940664,10942649,10944446,10946161,10947567,10949074,10950809,10952619,10954557,10956479,10957857,10959763,10961742,10963703,10965633,10967587,10969517,10971467,10973397,10975287,10977250,10979201,10981087,10983047,10985004,10986966,10988910,10990875,10992847,10994812,10996755,10998681,11000690,11002714,11004596,11005861,11007811,11009835,11011890,11013876,11015281,11017198,11019177,11021183,11022936,11024683,11026204,11027745,11029350,11030793,11032361,11033956,11035912,11037939,11039213,11040429,11041780,11043427,11045259,11047205,11049000,11050835,11052829,11054733,11056585,11058427,11060118,11061822,11063609,11065357,11066964,11068727,11070545,11072484,11074352,11076172,11077996,11079724,11081418,11082246,11083358,11085221,11086795,11088019,11089734,11091411,11092811,11094563,11096372,11098174,11099865,11101547,11103193,11105032,11106901,11108774,11110461,11112122,11113633,11115066,11116198,11117864,11119758,11121609,11123484,11125027,11126339,11127829,11129735,11131410,11133227,11134998,11136747,11138621,11140347,11142200,11143937,11145950,11147795,11149691,11151377,11152941,11154508,11156274,11157943,11159907,11161602,11163419,11165166,11167008,11168758,11170289,11171346,11172883,11173720,11175212,11176805,11178671,11180371,11182219,11183884,11185529,11187165,11188817,11190182,11191838,11193432,11194978,11196420,11197838,11199274,11200958,11202791,11204288,11206062,11207833,11209383,11211020,11212560,11213925,11215782,11217233,11218666,11220155,11222028,11224014,11226017,11228013,11230008,11232015,11234031,11236049,11238048,11239946,11241734,11243601,11245373,11247355,11249142,11250897,11252501,11254294,11256088,11257830,11259431,11261191,11263096,11264887,11266540,11268181,11270048,11271804,11273443,11275078,11277016,11279027,11281035,11283039,11285039,11286816,11288557,11290459,11292385,11294291,11296200,11298194,11300061,11301926,11303729,11305582,11307445,11309383,11310800,11312051,11313163,11314102,11315206,11316523,11317912,11319297,11320429,11321665,11322846,11323959,11325022,11326049,11327244,11328561,11329820,11331036,11332249,11333529,11334854,11336249,11337599,11338998,11340316,11341653,11343526,11345122,11346699,11348253,11349723,11351308,11352924,11354528,11356107,11357710,11359269,11360865,11362473,11364123,11365764,11367398,11368894,11370417,11371933,11373405,11374981,11376549,11378044,11379503,11380961,11382496,11384126,11385992,11387723,11389395,11391105,11392827,11394512,11396175,11397911,11399620,11401334,11403062,11404767,11406488,11408196,11409917,11411645,11413349,11415036,11416727,11418374,11419954,11421640,11423377,11425050,11426707,11428397,11430018,11431249,11432880,11434870,11436818,11438832,11440832,11442859,11444845,11446841,11448829,11450830,11452834,11454866,11456877,11458895,11460902,11462932,11464943,11466962,11468990,11470997,11473022,11475022,11477038,11478909,11480782,11482516,11484389,11485953,11487281,11488895,11490762,11492569,11494463,11496344,11498128,11499952,11501682,11503688,11505692,11507711,11509727,11511639,11513174,11514740,11516301,11517901,11519695,11521519,11523275,11525042,11526847,11528632,11530468,11532172,11533899,11535561,11537194,11538969,11540733,11542510,11544241,11545994,11547752,11549481,11551163,11552848,11554595,11556446,11558282,11560042,11561902,11563694,11565455,11567254,11569066,11570966,11572950,11574924,11576917,11578913,11580799,11582604,11584443,11586291,11588113,11589961,11591757,11593553,11595476,11597323,11599188,11601008,11602992,11604945,11606935,11608938,11610910,11612874,11614873,11616852,11618819,11620730,11622756,11624632,11626489,11628314,11630074,11631849,11633745,11635640,11637570,11639558,11641483,11643370,11645120,11646860,11648735,11650620,11652478,11654188,11655778,11657255,11658830,11660673,11662627,11664586,11666557,11668503,11670364,11672155,11674046,11675813,11677658,11679509,11681280,11683209,11684888,11686775,11688594,11690461,11692246,11693952,11695715,11697463,11699202,11700967,11702777,11704272,11706002,11707484,11709107,11710556,11711994,11713452,11715365,11717330,11719326,11721309,11723327,11725340,11727349,11729378,11731366,11733279,11735236,11737179,11739116,11740954,11742736,11744462,11746158,11747623,11748809,11750064,11751466,11753253,11755006,11756774,11758685,11760619,11762530,11764454,11766350,11767967,11769415,11770924,11772416,11773882,11775401,11776851,11778586,11780036,11781460,11783365,11785260,11786990,11788585,11790205,11791816,11793638,11794542,11795471,11796579,11797652,11798503,11799323,11800104,11801064,11802118,11803189,11804349,11805299,11806249,11807289,11808161,11808965,11810386,11812212,11814050,11815891,11817762,11819658,11821484,11823120,11824906,11826616,11828427,11830165,11831884,11833609,11835374,11837091,11838865,11840481,11842226,11844149,11846038,11848005,11849916,11851809,11853658,11855532,11857353,11859366,11861360,11863335,11865339,11867387,11869432,11871479,11873535,11875581,11877608,11879611,11881629,11883662,11885661,11887680,11889699,11891730,11893762,11895605,11897418,11899066,11900723,11902454,11904087,11905797,11907415,11909103,11910712,11912282,11914234,11916165,11918067,11919983,11921875,11923739,11925527,11927475,11929432,11931411,11933136,11934856,11936617,11938400,11940349,11942268,11944200,11946139,11947742,11948791,11949908,11950962,11952250,11953747,11955242,11956749,11958251,11959839,11961316,11962813,11964319,11965872,11967382,11968885,11970397,11972110,11974038,11975955,11977870,11979770,11981659,11983580,11985494,11987404,11989241,11991174,11993075,11995001,11996727,11998226,11999734,12001427,12002893,12004471,12006084,12007717,12009322,12010918,12012846,12014322,12015839,12017889,12019872,12021856,12023848,12025842,12027823,12029805,12031784,12033788,12035803,12037790,12039753,12041740,12043725,12045693,12047654,12049616,12051638,12053433,12055208,12056991,12058808,12060581,12062357,12064127,12065929,12067905,12069766,12071615,12073479,12075341,12077217,12079042,12080903,12082875,12084645,12086246,12087769,12089218,12090789,12092460,12093915,12095627,12097235,12098803,12100345,12101948,12103672,12105520,12107224,12108909,12110581,12112348,12114086,12115815,12117476,12119260,12120960,12122703,12124421,12126136,12128086,12130018,12131933,12133903,12135823,12137757,12139680,12141622,12143601,12145618,12147621,12149612,12151639,12153625,12155647,12157635,12159643,12161676,12163713,12165757,12167795,12169807,12171834,12173833,12175876,12177893,12179949,12181997,12184028,12186076,12188090,12190138,12192156,12194198,12196254,12198279,12200305,12202339,12204363,12206376,12208388,12210408,12212422,12213597,12214661,12215733,12216782,12217796,12218560,12219292,12220055,12221194,12222677,12224319,12225950,12227430,12229133,12230822,12232425,12234230,12236072,12237914,12239619,12241341,12243187,12244879,12246532,12248216,12249913,12251575,12253230,12254913,12256713,12258235,12259798,12261275,12262832,12264409,12265949,12267496,12269055,12270803,12272347,12273880,12275426,12276972,12278491,12279980,12281530,12283144,12285058,12286989,12288902,12290832,12292837,12294825,12296840,12298845,12300857,12302731,12304651,12306562,12308512,12310371,12312295,12314188,12316111,12318142,12320164,12322192,12324220,12326230,12328184,12330163,12332120,12334176,12336185,12338217,12340242,12342292,12344200,12345847,12347626,12349482,12351343,12353245,12355088,12356952,12358840,12360498,12362245,12364166,12366141,12368041,12369984,12371894,12373852,12375648,12377374,12379226,12380916,12382674,12384494,12386265,12387935,12389413,12391067,12392812,12394618,12396459,12398271,12400131,12402010,12403890,12405720,12407506,12409342,12411238,12412960,12414622,12416306,12418015,12419710,12421402,12423046,12424716,12426691,12428566,12430460,12432379,12434298,12436193,12438033,12439859,12441848,12443799,12445665,12447581,12449513,12451449,12453350,12455232,12457141,12458977,12460802,12462598,12464359,12466194,12468029,12469999,12471882,12473693,12475532,12477306,12479165,12480938,12482819,12484674,12486561,12488377,12490342,12492198,12494063,12495919,12497578,12498698,12500006,12501563,12503142,12504740,12506280,12507911,12509519,12511155,12512752,12514472,12516336,12518158,12519844,12521671,12523454,12525117,12526912,12528667,12530441,12532135,12533841,12535587,12537313,12539234,12541106,12542998,12544896,12546851,12548717,12550506,12552355,12554129,12555679,12557158,12558651,12560358,12562018,12563696,12565465,12567100,12568745,12570271,12571941,12573497,12575140,12576750,12578418,12580288,12582255,12584223,12586196,12588207,12590174,12592174,12594177,12596202,12598198,12600195,12602175,12604182,12606032,12607865,12609585,12611442,12613199,12615061,12616817,12618731,12620495,12622259,12624049,12625820,12627575,12629158,12630607,12632126,12633602,12634949,12636665,12638529,12640319,12642164,12643862,12645571,12647262,12648956,12650652,12652366,12654031,12655886,12657562,12659262,12660954,12662645,12664304,12665991,12667691,12669390,12671307,12673064,12674834,12676584,12678338,12680092,12681842,12683567,12685418,12686905,12688441,12689941,12691466,12693016,12694565,12696073,12697650,12699291,12700717,12702226,12703722,12705490,12707185,12708869,12710564,12712274,12714008,12715718,12717407,12719149,12720835,12722578,12724307,12725958,12727731,12729449,12731149,12732862,12734580,12736340,12738043,12739794,12741581,12743230,12744951,12746651,12748470,12750216,12751965,12753718,12755482,12757225,12758978,12760723,12762502,12764380,12766187,12767981,12769768,12771620,12773437,12775229,12777053,12778858,12780678,12782495,12784341,12786269,12788030,12789819,12791626,12793533,12795142,12796747,12798357,12799952,12801552,12803140,12804730,12806351,12808169,12809798,12811428,12813062,12814690,12816310,12817931,12819572,12821314,12823108,12824915,12826712,12828493,12830285,12832058,12833869,12835659,12837639,12839472,12841301,12843130,12845046,12846918,12848739,12850610,12852471,12854334,12855994,12857661,12859301,12860944,12862536,12864205,12865842,12867447,12869005,12870580,12872244,12873885,12875568,12877209,12878867,12880494,12882262,12883882,12885502,12887112,12888690,12890300,12891911,12893478,12895227,12896854,12898487,12900130,12901732,12903356,12904986,12906622,12908231,12910015,12911646,12913265,12914869,12916415,12918011,12919599,12921167,12922892,12924541,12926177,12927829,12929462,12931103,12932767,12934429,12936068,12937810,12939348,12940901,12942454,12943914,12945464,12946951,12948412,12950009,12951661,12953219,12954801,12956375,12957984,12959545,12961072,12962643,12964419,12966003,12967606,12969201,12970816,12972413,12973953,12975480,12977076,12978838,12980379,12981962,12983512,12985111,12986669,12988164,12989725,12991458,12993053,12994627,12996191,12997806,12999375,13000903,13002425,13004006,13005784,13007382,13008992,13010611,13012265,13013886,13015497,13017085,13018846,13020452,13022051,13023657,13025288,13026934,13028508,13030052,13031633,13033598,13035594,13037584,13039586,13041552,13043540,13045495,13047421,13049334,13051284,13053212,13055134,13057082,13059037,13061011,13062976,13064978,13066910,13068624,13070227,13071936,13073558,13075250,13076876,13078509,13080189,13081959,13083654,13085283,13087015,13088622,13090320,13091934,13093648,13095388,13097188,13098853,13100637,13102379,13104100,13105783,13107491,13109283,13111065,13112844,13114473,13116312,13117951,13119719,13121346,13123133,13124918,13126599,13128250,13129911,13131629,13133257,13134929,13136551,13138238,13139971,13141739,13143359,13145142,13146783,13148526,13150170,13151901,13153664,13155404,13157117,13158836,13160558,13162219,13163923,13165635,13167364,13169163,13170842,13172485,13174184,13175850,13177552,13179231,13180935,13182692,13184478,13186172,13187810,13189504,13191158,13192865,13194505,13196213,13197884,13199557,13201035,13202742,13204230,13205915,13207478,13209121,13210811,13212511,13214098,13215705,13217317,13218922,13220517,13222098,13223694,13225404,13227052,13228678,13230241,13231911,13233490,13235084,13236719,13238334,13240089,13241676,13243256,13244863,13246403,13248001,13249583,13251177,13252885,13254433,13256014,13257472,13259096,13260490,13262101,13263504,13265143,13266820,13268473,13270166,13271855,13273483,13275135,13276846,13278537,13280246,13282027,13283836,13285597,13287320,13289059,13290831,13292623,13294347,13296221,13297938,13299739,13301510,13303228,13304951,13306762,13308544,13310230,13312026,13313666,13315279,13316906,13318537,13320169,13321822,13323433,13325262,13326977,13328696,13330404,13332114,13333835,13335582,13337303,13338993,13340815,13342427,13343893,13345501,13346920,13348520,13349932,13351507,13353093,13354660,13356224,13357700,13359223,13360634,13362133,13363541,13365013,13366639,13368291,13369854,13371500,13373098,13374745,13376266,13377871,13379505,13381224,13382844,13384401,13386017,13387574,13389191,13390725,13392305,13393984,13395613,13397237,13398871,13400524,13402174,13403798,13405393,13406983,13408746,13410401,13412019,13413696,13415336,13416989,13418614,13420240,13422014,13423634,13425248,13426863,13428467,13430100,13431700,13433316,13434900,13436801,13438585,13440385,13442155,13443955,13445712,13447506,13449268,13451153,13452791,13454437,13456074,13457702,13459341,13460964,13462586,13464207,13466085,13467905,13469736,13471554,13473373,13475196,13477008,13478795,13480688,13482476,13484238,13485996,13487744,13489512,13491244,13492997,13494741,13496724,13498457,13500021,13501642,13503065,13504676,13506232,13507835,13509638,13511419,13513020,13514611,13515967,13517343,13518669,13520283,13521925,13523576,13524986,13526331,13527751,13529224,13530539,13531920,13533265,13534635,13536092,13537488,13538818,13540198,13541691,13543180,13544828,13546415,13548178,13549947,13551849,13553897,13555869,13557696,13559543,13561288,13563199,13565198,13567109,13568877,13570728,13572633,13574565,13576516,13578542,13580422,13582257,13583946,13585698,13587438,13589326,13591179,13593158,13595203,13597253,13599301,13601354,13603244,13605071,13606808,13608545,13610282,13612061,13613716,13615655,13617711,13619710,13621621,13623612,13625492,13627440,13629367,13631230,13633048,13634753,13636366,13638262,13640175,13642079,13643839,13645802,13647724,13649639,13651408,13653332,13655254,13656900,13658346,13660007,13661729,13663489,13665279,13667174,13669053,13670721,13672195,13673872,13675650,13677516,13679361,13681168,13682928,13684608,13686224,13687966,13689744,13691636,13693523,13695520,13697474,13699427,13701286,13703059,13704716,13706322,13707933,13709601,13711404,13713096,13714828,13716533,13718122,13719812,13721430,13723329,13725269,13727215,13729108,13731037,13732899,13734793,13736470,13738306,13739979,13741821,13743483,13745313,13746980,13748915,13750811,13752683,13754363,13756098,13757750,13759646,13761606,13763371,13765036,13766650,13768386,13770148,13771824,13773378,13774823,13776296,13777749,13779202,13780650,13782094,13783506,13785307,13787346,13789351,13791395,13793390,13795433,13797435,13799483,13801435,13803273,13805128,13806977,13808825,13810680,13812354,13813876,13815389,13816923,13818475,13820005,13821422,13822770,13824470,13826237,13828053,13829871,13831739,13833522,13835457,13837319,13839129,13840779,13842644,13844529,13846473,13848387,13850335,13852200,13854178,13856171,13857891,13859380,13861028,13862615,13864425,13866243,13868115,13869908,13871794,13873610,13875577,13877613,13879624,13881651,13883581,13885378,13887216,13889013,13890853,13892712,13894340,13895912,13897501,13899130,13900966,13902813,13904596,13906254,13908170,13910202,13912230,13914250,13916158,13917967,13919885,13921872,13923691,13925416,13927197,13928925,13930843,13932714,13934510,13936192,13937987,13939606,13941250,13942873,13944822,13946862,13948910,13950954,13952693,13954304,13955941,13957639,13959324,13960990,13962501,13963771,13965352,13966918,13968678,13970501,13971825,13972939,13974637,13976574,13978603,13980426,13982451,13984473,13986501,13988498,13990456,13992343,13994183,13995971,13997680,13999472,14001168,14002972,14004639,14006365,14007983,14009567,14011298,14012962,14014658,14016216,14017738,14019198,14020935,14022773,14024654,14026501,14028210,14029798,14031336,14032714,14034307,14035884,14037567,14039197,14040877,14042581,14044324,14046007,14047776,14049545,14051335,14053009,14054697,14056303,14058068,14059844,14061357,14062649,14064024,14065422,14067130,14069003,14070684,14072177,14073601,14074980,14076374,14077715,14079203,14080723,14082336,14083951,14085551,14087168,14088752,14090345,14091856,14093234,14094702,14096134,14097640,14099043,14100581,14102078,14103691,14105306,14106905,14108527,14110137,14111739,14113353,14114962,14116545,14117966,14119661,14121342,14123021,14124705,14126331,14127905,14129481,14131130,14132738,14134300,14135827,14137373,14139030,14140668,14142260,14143770,14145367,14146927,14148538,14150214,14151887,14153559,14155234,14156740,14158285,14159751,14161328,14162979,14164743,14166590,14168335,14170021,14171829,14173673,14175489,14177307,14178943,14180406,14181864,14183298,14184711,14186141,14187818,14189503,14191223,14192884,14194644,14196406,14198142,14199803,14201345,14202639,14203937,14204811,14206172,14207854,14209187,14210428,14211916,14213388,14214847,14216338,14217835,14219333,14220794,14222118,14223461,14224962,14226379,14227749,14228962,14230009,14231074,14232773,14234129,14235538,14236967,14238501,14240292,14242304,14244265,14246082,14248059,14249987,14251747,14253528,14254749,14255375,14256234,14257029,14257935,14258927,14259864,14261036,14261994,14262834,14263720,14264692,14265653,14266462,14267321,14268172,14269004,14269950,14270816,14271594,14272449,14273286,14274307,14275369,14276451,14277274,14278152,14279449,14280540,14281134,14281716,14282250,14282821,14283409,14284326,14285209,14286163,14287203,14288226,14288845,14289750,14290555,14291387,14292341,14293415,14294340,14295387,14296229,14296787,14297362,14298251,14298757,14299487,14300464,14301435,14301895,14302754,14303337,14304024,14304744,14305357,14306438,14307329,14308354,14309427,14310158,14310910,14311455,14311947,14312502,14313250,14314047,14314863,14315662,14316297,14317099,14317867,14318727,14319965,14320709,14321626,14322621,14323636,14324660,14325504,14326518,14327301,14328201,14329312,14330236,14331019,14331779,14332771,14333037,14333648,14334544,14335517,14336040,14336617,14337354,14338151,14338780,14339379,14340038,14340709,14341419,14342276,14343303,14344076,14344673,14345322,14346056,14347120,14349168,14350746,14351675,14352673,14353947,14355210,14355866,14357331,14358351,14359548,14360428,14361473,14362719,14363824,14365448,14367033,14368624,14370247,14371609,14371657,14371704,14371799,14371843,14371949,14371997,14372130,14372363,14372735,14373210,14373798,14374462,14375040,14375683,14376482,14377214,14378357,14379784,14381287,14382764,14384136,14385839,14387424,14388986,14390634,14392259,14393962,14395619,14397333,14399133,14400816,14402463,14404044,14405761,14407437,14408920,14410454,14411905,14413250,14414130,14415037,14415797,14416422,14417020,14417617,14418221,14418826,14419343,14419719,14420096,14420342,14420482,14420564,14420610,14420658,14420707,14421178,14423036,14423081,14423125,14423170,14423220,14423267,14423312,14423356,14423401,14423451,14423498,14423573,14423873,14424811,14426264,14427563,14429034,14430439,14431839,14433084,14434112,14435224,14436056,14436685,14437486,14438338,14439105,14439973,14440809,14441760,14442747,14443651,14444496,14445242,14445980,14446937,14447839,14448661,14449449,14450247,14451057,14451832,14452533,14453088,14453531,14453705,14453750,14453796,14453844,14453893,14453941,14453986,14454032,14454080,14454129,14454176,14454221,14454266,14456260,14457800,14459213,14460606,14461932,14463268,14464569,14465890,14467206,14468512,14469792,14471127,14472407,14473603,14474913,14476076,14477094,14478131,14479090,14480048,14480940,14481733,14482555,14483586,14484717,14485845,14487181,14488607,14490273,14491920,14493462,14495060,14496682,14498095,14499508,14500621,14501826,14503102,14504473,14505991,14507414,14508798,14509803,14510791,14511894,14513072,14514280,14515523,14516756,14518038,14519258,14520511,14521819,14523220,14524489,14525817,14527164,14528526,14530425,14531244,14531289,14531333,14531381,14531430,14531482,14531741,14532351,14533192,14534195,14535397,14536927,14538618,14540340,14542144,14543855,14545569,14547302,14549054,14550812,14552629,14554494,14556286,14557977,14559402,14560772,14562091,14563509,14565280,14567112,14568933,14570844,14572741,14574694,14576618,14578491,14580336,14582226,14584089,14585884,14587653,14589380,14591063,14592887,14594778,14596369,14597805,14599150,14600386,14600994,14601141,14601186,14601231,14601279,14601328,14601373,14601418,14602134,14603005,14603967,14605142,14606321,14607601,14608248,14609020,14609966,14610846,14611713,14612667,14613695,14614773,14616489,14618170,14619691,14621459,14623135,14624672,14626254,14628025,14629680,14631265,14632939,14634644,14636279,14637911,14639557,14641202,14642788,14644283,14646038,14647746,14649360,14650957,14652605,14654334,14656019,14657631,14659378,14661326,14663109,14664840,14666729,14668634,14670635,14672639,14674677,14674722,14674767,14674876,14675090,14675356,14675678,14676107,14676652,14677267,14678038,14679076,14680161,14681385,14682835,14684210,14685658,14687114,14688491,14689896,14691267,14692765,14694321,14695950,14697610,14699216,14700814,14702355,14703928,14705447,14706935,14708431,14709901,14711320,14712817,14714325,14716056,14717789,14719507,14721143,14722810,14724458,14726117,14727685,14729156,14730558,14732031,14733493,14734718,14735767,14736889,14737970,14739014,14740090,14741148,14742161,14743142,14744069,14746006,14747619,14749064,14750443,14751778,14753122,14754438,14755768,14757064,14758386,14759683,14761024,14762289,14763495,14764846,14766000,14767010,14768053,14769022,14769952,14770879,14771643,14772440,14773476,14774614,14775714,14777051,14778439,14780101,14781763,14783331,14784923,14786565,14787986,14789392,14790536,14791719,14792989,14794330,14795861,14797280,14798667,14799669,14800665,14801788,14802954,14804129,14805382,14806601,14807880,14809082,14810354,14811669,14813036,14814343,14815683,14817014,14818357,14820189,14821929,14823301,14824529,14825409,14826631,14827893,14829046,14829999,14830936,14831856,14832809,14833807,14834654,14836143,14837701,14839117,14840495,14842006,14843396,14844711,14846164,14847697,14849100,14850509,14851936,14853444,14854807,14856103,14857267,14858462,14859644,14861100,14862737,14864414,14866144,14867644,14869072,14870478,14872049,14873519,14874969,14876474,14877915,14879188,14880536,14881833,14882828,14883663,14884607,14885735,14887031,14888359,14889775,14891159,14892595,14893951,14895271,14896874,14898392,14898437,14898485,14898575,14898620,14898717,14898762,14898884,14899125,14899471,14899914,14900494,14901130,14901725,14902380,14903172,14903857,14904970,14906371,14907880,14909360,14910735,14912407,14914007,14915582,14917216,14918830,14920539,14922190,14923914,14925693,14927369,14929000,14930582,14932307,14933982,14935481,14937042,14938471,14939875,14940773,14941640,14942383,14943041,14943615,14944207,14944771,14945365,14945904,14946296,14946661,14946895,14947053,14947137,14947182,14947226,14947271,14947588,14949594,14949643,14949688,14949726,14949771,14949819,14949868,14949913,14949952,14949997,14950045,14950125,14950400,14951256,14952734,14954007,14955476,14956901,14958299,14959554,14960605,14961717,14962574,14963228,14963998,14964863,14965641,14966476,14967293,14968246,14969232,14970121,14970933,14971649,14972398,14973338,14974269,14975097,14975910,14976710,14977523,14978270,14978961,14979491,14979956,14980138,14980185,14980230,14980274,14980319,14980367,14980414,14980459,14980503,14980548,14980596,14980643,14980688,14982543,14983007,14983052,14983100,14983149,14983194,14983235,14983731,14984771,14985902,14986994,14988038,14989026,14990036,14991192,14992189,14993257,14994411,14995565,14996900,14998483,15000196,15001973,15003660,15005124,15006533,15007976,15009366,15010514,15011595,15012982,15014230,15015524,15016711,15018059,15019547,15021138,15022617,15024129,15025831,15027420,15028867,15030451,15031995,15033585,15034826,15035835,15036760,15037912,15039125,15040196,15041075,15041171,15041221,15041268,15041313,15041357,15041402,15042761,15043737,15043786,15043843,15044004,15044232,15044545,15044973,15045430,15046059,15046783,15047782,15048880,15050045,15051543,15052983,15054435,15055977,15057576,15059159,15060720,15062344,15064027,15065789,15067585,15069343,15071114,15072852,15074502,15076182,15077767,15079272,15080838,15082362,15083849,15085354,15087054,15088879,15090595,15092309,15093981,15095650,15097323,15098980,15100503,15101892,15103389,15104880,15106297,15107454,15108537,15109698,15110790,15111871,15112972,15113949,15114995,15115988,15117265,15119313,15121333,15122247,15123237,15124139,15125001,15125980,15126983,15127913,15128797,15129736,15130647,15131428,15132289,15133226,15134522,15135820,15137096,15138316,15139661,15141062,15142498,15143915,15145413,15146835,15148214,15149433,15150476,15151496,15152428,15153512,15154632,15155857,15156890,15158053,15159121,15160099,15161361,15162611,15163837,15165116,15166380,15167502,15168659,15169830,15170984,15172256,15173523,15174823,15176147,15177434,15178701,15180009,15181322,15182601,15183916,15185208,15186649,15188090,15189464,15190733,15192001,15193298,15194649,15196006,15197378,15198838,15200317,15201717,15203141,15204481,15205766,15207143,15208515,15209891,15211245,15212636,15213999,15215353,15216604,15217821,15219037,15220235,15221490,15222759,15223948,15225087,15226337,15227428,15228470,15229474,15230588,15232276,15233550,15234766,15236052,15237443,15238776,15240128,15241564,15242985,15244407,15245880,15247261,15248554,15249905,15251234,15252671,15254060,15255452,15256827,15258212,15259503,15260726,15261922,15263119,15264344,15265612,15266841,15267960,15269108,15270302,15271365,15272424,15273258,15275247,15276322,15277326,15278250,15279108,15280033,15281050,15282014,15282892,15283871,15284770,15285547,15286384,15287335,15288582,15289839,15291163,15292403,15293755,15295154,15296578,15297948,15299424,15300851,15302231,15303531,15304611,15305638,15306577,15307603,15308712,15309922,15311034,15312178,15313262,15314228,15315380,15316650,15317894,15319163,15320406,15321526,15322659,15323870,15325020,15326220,15327482,15328790,15330103,15331398,15332676,15333968,15335303,15336633,15337944,15339210,15340622,15342044,15343979,15345031,15345109,15345949,15347220,15348406,15349136,15350537,15351704,15352357,15352449,15353646,15355385,15356489,15357496,15358511,15359546,15360658,15361917,15363280,15364416,15365631,15366959,15368268,15369629,15371059,15372451,15373767,15375027,15376427,15378046,15379687,15381125,15382630,15384047,15385474,15386979,15388417,15389869,15391385,15392911,15394286,15395704,15397219,15398767,15400266,15401910,15403592,15405266,15406800,15408299,15409937,15411476,15413049,15414572,15416053,15417546,15419017,15420435,15421757,15423006,15424234,15425471,15426686,15427959,15429289,15430547,15431692,15432838,15434221,15436227,15437384,15438472,15439436,15440425,15441527,15442734,15443927,15445029,15446056,15447050,15448062,15449025,15450080,15451280,15452555,15453827,15454884,15456018,15457207,15458680,15459930,15461372,15462578,15463654,15465084,15466644,15468229,15469863,15471543,15473148,15474763,15476259,15477874,15479467,15481172,15482882,15484561,15486232,15487770,15489227,15490576,15491945,15493350,15494703,15496141,15497775,15499375,15500912,15502435,15503873,15505288,15506723,15508154,15509568,15510911,15512284,15513652,15515706,15516528,15517253,15518121,15519027,15520010,15521040,15522074,15523222,15524430,15525640,15526836,15528061,15529283,15530583,15532003,15533319,15534700,15536212,15537650,15539181,15540660,15542140,15543683,15545359,15547054,15548603,15550230,15551859,15553568,15555338,15557094,15558935,15560702,15562325,15563921,15565531,15567162,15568857,15570571,15572293,15574030,15575756,15577402,15579094,15580709,15582455,15584242,15586016,15587758,15589433,15591151,15592895,15594508,15595838,15597019,15598046,15598761,15599933,15601164,15602587,15604149,15605764,15607222,15609275,15609320,15609364,15609409,15609457,15609506,15609551,15610255,15611330,15612410,15613502,15614555,15615580,15616653,15617772,15618724,15619815,15620944,15622164,15623578,15625209,15626914,15628683,15630334,15631799,15633204,15634610,15635948,15637060,15638210,15639577,15640817,15642118,15643358,15644735,15646245,15647856,15649301,15650843,15652530,15654084,15655518,15657101,15658639,15660180,15661306,15662295,15663245,15664375,15665599,15666598,15667345,15667389,15667435,15667484,15667531,15667576,15667620,15669430,15669942,15669990,15670037,15670082,15670126,15670171,15670219,15670266,15670311,15670355,15670412,15670620,15671228,15672679,15673954,15675445,15676889,15678304,15679615,15680687,15681819,15682776,15683458,15684100,15685053,15685803,15686656,15687500,15688440,15689384,15690314,15691154,15691908,15692667,15693478,15694452,15695270,15696044,15696856,15697712,15698468,15699185,15699778,15700343,15700597,15700644,15700693,15700740,15700785,15700829,15700877,15700926,15700973,15701018,15701062,15701110,15701159,15702467,15703949,15704878,15705739,15706792,15707914,15708916,15709910,15710904,15711990,15712922,15713840,15714815,15715813,15716903,15717912,15719042,15720347,15721716,15723105,15724580,15726087,15727643,15729258,15730572,15731832,15733204,15734565,15735954,15737176,15738592,15739733,15740896,15741968,15742973,15744146,15745532,15747015,15748477,15749853,15751129,15752297,15753548,15754657,15755985,15757266,15758232,15759328,15760528,15761655,15762591,15763471,15764410,15765480,15766470,15767519,15768531,15769557,15770863,15772395,15772440,15772490,15772537,15772582,15772626,15772767,15773256,15774093,15775027,15776174,15777561,15779213,15780919,15782712,15784475,15786211,15787938,15789676,15791444,15793253,15795092,15796883,15798637,15800187,15801517,15802940,15804184,15805898,15807722,15809530,15811415,15813326,15815250,15817183,15819107,15820922,15822800,15824649,15826499,15828318,15830135,15831882,15833668,15835535,15837307,15838713,15840124,15841365,15842211,15842485,15842533,15842582,15842629,15842674,15842719,15842767,15843006,15844195,15845661,15846655,15848051,15848768,15849454,15850541,15851640,15852608,15854414,15855072,15855118,15855192,15855372,15855608,15855886,15856301,15856805,15857413,15858095,15859065,15860157,15861260,15862712,15864079,15865474,15866942,15868369,15869766,15871152,15872612,15874097,15875704,15877364,15879000,15880559,15882140,15883649,15885210,15886715,15888166,15889655,15891141,15892586,15894055,15895731,15897443,15899136,15900774,15902454,15904081,15905693,15907342,15908841,15910218,15911688,15913164,15914491,15915599,15916672,15917780,15918884,15919944,15921012,15922052,15923098,15924063,15925593,15927434,15928839,15930250,15931612,15932938,15934245,15935573,15936885,15938180,15939500,15940839,15942136,15943327,15944670,15945896,15946944,15947993,15948961,15949844,15950804,15951666,15952434,15953398,15954509,15955620,15956896,15958294,15959868,15961499,15963080,15964681,15966366,15967833,15969270,15970498,15971640,15972816,15974159,15975616,15977048,15978448,15979604,15980600,15981611,15982757,15983930,15985221,15986436,15987739,15988947,15990203,15991486,15992824,15994163,15995452,15996819,15998155,15999754,16001713,16003159,16004422,16005359,16006320,16007680,16008820,16009854,16010743,16011678,16012657,16013708,16014290,16015697,16017222,16018715,16020054,16021493,16022973,16024271,16025690,16027193,16028639,16030055,16031488,16033001,16034353,16035743,16036880,16038147,16039277,16040664,16042278,16043919,16045634,16047239,16048656,16050077,16051571,16053130,16054614,16056043,16057503,16058848,16060136,16061367,16062391,16063460,16064340,16065375,16066641,16067935,16069348,16070756,16072146,16073510,16074861,16076206,16078254,16078364,16078413,16078458,16078503,16078548,16078596,16079267,16080301,16081362,16082469,16083550,16084555,16085591,16086717,16087694,16088761,16089886,16091087,16092507,16094121,16095830,16097595,16099254,16100703,16102132,16103549,16104877,16106021,16107158,16108553,16109800,16111054,16112256,16113645,16115161,16116758,16118212,16119748,16121434,16123008,16124416,16126003,16127528,16129101,16130242,16131188,16132162,16133284,16134504,16135525,16136315,16136364,16136409,16136454,16136499,16136547,16136596,16138301,16138927,16138972,16139017,16139108,16139177,16139242,16139305,16139480,16139771,16140168,16140691,16141316,16141924,16142532,16143256,16143991,16144808,16146157,16147592,16149045,16150466,16151997,16153693,16155199,16156785,16158453,16160086,16161786,16163449,16165160,16166940,16168634,16170233,16171894,16173559,16175208,16176678,16178197,16179601,16180819,16181731,16182513,16183201,16183838,16184469,16185032,16185605,16186145,16186639,16187004,16187321,16187528,16187618,16187702,16187751,16187796,16187834,16189035,16190169,16190211,16190260,16190305,16190350,16190395,16190437,16190486,16190531,16190576,16190621,16190765,16191148,16192480,16193824,16195240,16196657,16198081,16199445,16200559,16201660,16202658,16203412,16204035,16204936,16205783,16206577,16207415,16208313,16209274,16210245,16211089,16211880,16212630,16213387,16214360,16215188,16215981,16216764,16217602,16218346,16219043,16219705,16220304,16220626,16220712,16220760,16220809,16220854,16220893,16220938,16220986,16221035,16221080,16221120,16221165,16221213,16221914,16223552,16223597,16223642,16223687,16223731,16223780,16223825,16223870,16223915,16223960,16224009,16224093,16224410,16225479,16226901,16228242,16229680,16231075,16232442,16233636,16234668,16235773,16236585,16237210,16238073,16238931,16239698,16240585,16241428,16242387,16243350,16244208,16245001,16245727,16246462,16247441,16248293,16249100,16249889,16250666,16251448,16252190,16252878,16253455,16253853,16254014,16254059,16254100,16254145,16254193,16254242,16254287,16254331,16254376,16254424,16254473,16254518,16254709,16256757,16256834,16256882,16256931,16256976,16257021,16257066,16257753,16258799,16259858,16260962,16262036,16263058,16264088,16265210,16266196,16267273,16268392,16269586,16271009,16272636,16274335,16276101,16277754,16279227,16280641,16282059,16283391,16284516,16285656,16287042,16288314,16289574,16290772,16292147,16293668,16295279,16296727,16298261,16299961,16301522,16302940,16304527,16306051,16307616,16308757,16309735,16310705,16311844,16313075,16314080,16314856,16314904,16314953,16314998,16315042,16315087,16315135,16316874,16317468,16317513,16317581,16317756,16318007,16318332,16318733,16319266,16319894,16320650,16321659,16322801,16324025,16325534,16326936,16328415,16330002,16331596,16333192,16334741,16336396,16338090,16339838,16341620,16343381,16345120,16346836,16348508,16350183,16351778,16353304,16354874,16356434,16357960,16359472,16361229,16363029,16364742,16366427,16368094,16369743,16371373,16373002,16374514,16375883,16377393,16378904,16380233,16381359,16382427,16383540,16384646,16385712,16386777,16387782,16388783,16389750,16391255,16393303,16395118,16396071,16397070,16397922,16398797,16399817,16400824,16401721,16402665,16403559,16404484,16405313,16406154,16407150,16408431,16409794,16411040,16412301,16413694,16415064,16416494,16417886,16419336,16420769,16422167,16423350,16424340,16425374,16426308,16427449,16428570,16429726,16430748,16431937,16432960,16433992,16435275,16436502,16437723,16439013,16440240,16441341,16442519,16443663,16444843,16446117,16447370,16448644,16449957,16451239,16452542,16453840,16455121,16456398,16457709,16458996,16460407,16461842,16463166,16464431,16465702,16467050,16468378,16469748,16471153,16472601,16474068,16475474,16476864,16478212,16479500,16480860,16482242,16483635,16485017,16486448,16487798,16489092,16490339,16491498,16492730,16493925,16495167,16496430,16497604,16498731,16499969,16501048,16502117,16503107,16504449,16505980,16507248,16508512,16509822,16511186,16512546,16513923,16515366,16516828,16518228,16519672,16521024,16522326,16523694,16525043,16526419,16527785,16529163,16530529,16531889,16533126,16534355,16535563,16536774,16538012,16539287,16540487,16541632,16542845,16543971,16545015,16546045,16547013,16549033,16549952,16550942,16551846,16552706,16553683,16554688,16555616,16556501,16557443,16558356,16559137,16559998,16560934,16562226,16563522,16564802,16566022,16567368,16568758,16570194,16571613,16573078,16574499,16575877,16577097,16578134,16579151,16580082,16581167,16582290,16583518,16584549,16585712,16586780,16587759,16589014,16590261,16591488,16592767,16594036,16595155,16596310,16597482,16598635,16599910,16601173,16602491,16603813,16605102,16606371,16607681,16608995,16610274,16611588,16612877,16614315,16615754,16617772,16618422,16618503,16619580,16620849,16621979,16622782,16624064,16625254,16625671,16625745,16627312,16628746,16629677,16630475,16631561,16632676,16633685,16634669,16635656,16636722,16637670,16638584,16639533,16640540,16641663,16642654,16643789,16645095,16646480,16647901,16649346,16650831,16652360,16653958,16655284,16656577,16657914,16659282,16660667,16661937,16663339,16664448,16665608,16666687,16667741,16668949,16670329,16671817,16673269,16674628,16675936,16677106,16678330,16679442,16680791,16682039,16682991,16684106,16685269,16686390,16687371,16688244,16689163,16690210,16691221,16692294,16693317,16694311,16695658,16697448,16698600,16699638,16700639,16701616,16702719,16704002,16705357,16706497,16707719,16709016,16710365,16711701,16713116,16714502,16715847,16717129,16718545,16720116,16721772,16723212,16724718,16726123,16727544,16729050,16730468,16731921,16733431,16734965,16736383,16737802,16739325,16740870,16742390,16744036,16745705,16747386,16748903,16750399,16752037,16753573,16755153,16756665,16758146,16759618,16761073,16762518,16763837,16765101,16766325,16767512,16768723,16769980,16771293,16772556,16773739,16774872,16776233,16778157,16778202,16778250,16778299,16778344,16778383,16778474,16778877,16779663,16780596,16781671,16782972,16784610,16786304,16788068,16789849,16791555,16793295,16795040,16796805,16798595,16800448,16802255,16804021,16805670,16806993,16808453,16809635,16811281,16813081,16814902,16816787,16818712,16820622,16822560,16824497,16826295,16828161,16829999,16831869,16833697,16835530,16837294,16839073,16840906,16842741,16844171,16845616,16846907,16847900,16848273,16848318,16848366,16848413,16848458,16848502,16848547,16848595,16850527,16851876,16852983,16854004,16854896,16855993,16857200,16858400,16859537,16860573,16861597,16862592,16863520,16864540,16865689,16866928,16868221,16869346,16870389,16871591,16872961,16874282,16875702,16876940,16878058,16879431,16880998,16882540,16884178,16885849,16887481,16889153,16890680,16892225,16893793,16895480,16897169,16898868,16900544,16902153,16903612,16905011,16906379,16907785,16909164,16910516,16912144,16913756,16915289,16916786,16918243,16919669,16921081,16922497,16923907,16925278,16926631,16927998,16929861,16931093,16931825,16932633,16933536,16934459,16935486,16936540,16937639,16938829,16940015,16941198,16942374,16943647,16944871,16946259,16947625,16948980,16950504,16951939,16953452,16954954,16956394,16957884,16959479,16961135,16962717,16964342,16965978,16967655,16969451,16971187,16972961,16974797,16976490,16978066,16979674,16981299,16982989,16984737,16986446,16988179,16989921,16991610,16993309,16994960,16996597,16998397,17000192,17001936,17003640,17005345,17007091,17008790,17010238,17011426,17012556,17013347,17014303,17015554,17016762,17018341,17019936,17021331,17022471,17023459,17024101,17024699,17025522,17026599,17027735,17028548,17030596,17032064,17033519,17034985,17036509,17038019,17039542,17041079,17042607,17044094,17045629,17047253,17049046,17050914,17052874,17054859,17056869,17058886,17060887,17062882,17064880,17066836,17068718,17070487,17072307,17074182,17076127,17078018,17080020,17082048,17083920,17085771,17087625,17089410,17091117,17092847,17094582,17096404,17098266,17100182,17102135,17104140,17106149,17108165,17110127,17111950,17113557,17115079,17116597,17118084,17119594,17121113,17122615,17124119,17125598,17127022,17128453,17129906,17131891,17133410,17134724,17136002,17137268,17138541,17139773,17141128,17142473,17143751,17145005,17146315,17147504,17148825,17150200,17151636,17153070,17154484,17155946,17157349,17158815,17160362,17161888,17163365,17164916,17166453,17167990,17169645,17171251,17172854,17174428,17175996,17177560,17179114,17180603,17182139,17183838,17185534,17187144,17188855,17190350,17191711,17193104,17194492,17195747,17196991,17198260,17199536,17200769,17201938,17203100,17204307,17205477,17206666,17207851,17209139,17210458,17211670,17213453,17215043,17216100,17217233,17218376,17219507,17220483,17221515,17222598,17223688,17224821,17225989,17227085,17228313,17229576,17230930,17232397,17233902,17235477,17237075,17238606,17240200,17241789,17243219,17244582,17246158,17247754,17249277,17250811,17252231,17253626,17255035,17256288,17257625,17259012,17260271,17261671,17263102,17264621,17266142,17267639,17269158,17270505,17271748,17272926,17273938,17274986,17276031,17277136,17278293,17279467,17280469,17281339,17282370,17283386,17284290,17285241,17286265,17287713,17289647,17291174,17292748,17294314,17295940,17297516,17299147,17300828,17302368,17303969,17305579,17307261,17308805,17310245,17311824,17313408,17314984,17316667,17318375,17319946,17321530,17323145,17324595,17326067,17327493,17329109,17330712,17332155,17333655,17335203,17336752,17338337,17339854,17341410,17343008,17344613,17346255,17347923,17349610,17351182,17352707,17354371,17356001,17357524,17358960,17360133,17361582,17363137,17364675,17366093,17367578,17369177,17370823,17372533,17374268,17375798,17377312,17378952,17381000,17381971,17383016,17384017,17385082,17386131,17387206,17388301,17389463,17390495,17391530,17392631,17393819,17395012,17396115,17397201,17398315,17399480,17400661,17401875,17403087,17404290,17405632,17406961,17408229,17409343,17410444,17411549,17412622,17413601,17414576,17415548,17416650,17417611,17418572,17419475,17420396,17421336,17422396,17423468,17424450,17425446,17426538,17427556,17428557,17429479,17430428,17431486,17432525,17433576,17434659,17435756,17436937,17438028,17439076,17439988,17440841,17441745,17443673,17445188,17446487,17447779,17449052,17450325,17451558,17452894,17454252,17455532,17456803,17458120,17459264,17460478,17461765,17463118,17464474,17465804,17467148,17468451,17469889,17471400,17473057,17474693,17476230,17477562,17478886,17480345,17481917,17483558,17485279,17486948,17488498,17489876,17491175,17492560,17494016,17495493,17496944,17498449,17499895,17501249,17502637,17504038,17505292,17506525,17507777,17509036,17510256,17511432,17512603,17513810,17514975,17516169,17517361,17518644,17519951,17521175,17522970,17524782,17526364,17527940,17529546,17531142,17532715,17534236,17535846,17537466,17539023,17540623,17542252,17544030,17545787,17547593,17549378,17551034,17552618,17554218,17555970,17557778,17559657,17561437,17563213,17565118,17566984,17568783,17570678,17572419,17574224,17575957,17577709,17579427,17581174,17582862,17584572,17586236,17587996,17589909,17591618,17593450,17594717,17596085,17597430,17598705,17600135,17601642,17603106,17604585,17606116,17607642,17609134,17610671,17612240,17613689,17615124,17616625,17618349,17620073,17620875,17621639,17622489,17623430,17624262,17624944,17625778,17626700,17627534,17628367,17629109,17629994,17630993,17632175,17633439,17634657,17635982,17637246,17638632,17640129,17641680,17643211,17644803,17646435,17648034,17649612,17651227,17652828,17654462,17656067,17657638,17659083,17660567,17662073,17663607,17665188,17666679,17668117,17669598,17671025,17672354,17673665,17674861,17676056,17677230,17678465,17679508,17680526,17681559,17682617,17683602,17684610,17685645,17686626,17687644,17688472,17689377,17691427,17693079,17694925,17696826,17698684,17700507,17702310,17704138,17705970,17707729,17709413,17711005,17712492,17713882,17715887,17717614,17719465,17721355,17723233,17725091,17726972,17728870,17730783,17732530,17734245,17735824,17737388,17738842,17740735,17742622,17744557,17746353,17748239,17750168,17752003,17753778,17755466,17756967,17758379,17759935,17761568,17763188,17765044,17766787,17768597,17770599,17772310,17774212,17776245,17777893,17779895,17781763,17783182,17784575,17786224,17787705,17789202,17791202,17792738,17794007,17795694,17797250,17798739,17800439,17802254,17803652,17805098,17806756,17808276,17809821,17811837,17813609,17815278,17816941,17818675,17820458,17822188,17823927,17825710,17827508,17829349,17831157,17833055,17834842,17836593,17838374,17840170,17841981,17843810,17845641,17847422,17849308,17851119,17852881,17854635,17856410,17858166,17859945,17861641,17863413,17865217,17866959,17868724,17870498,17872330,17874097,17875859,17877610,17879329,17881061,17882767,17884496,17886240,17887969,17889656,17891276,17893114,17894960,17896854,17898698,17900515,17902335,17904220,17906104,17907948,17909740,17911448,17913020,17914946,17916978,17918913,17920820,17922736,17924687,17926585,17928486,17930391,17932311,17934181,17936040,17937978,17939881,17941726,17943480,17945221,17946996,17948786,17950625,17952394,17954270,17956047,17957926,17959765,17961574,17963341,17965114,17966818,17968448,17970022,17971601,17973294,17975080,17976885,17978604,17980376,17982058,17983747,17985480,17987164,17988893,17990685,17992483,17994283,17996000,17997872,17999772,18001671,18003591,18005408,18007222,18009090,18011010,18012916,18014844,18016748,18018636,18020600,18022656,18024604,18026564,18028567,18030574,18032573,18034583,18036570,18038525,18040435,18042354,18044340,18046347,18048305,18050227,18052132,18054121,18056094,18058048,18060011,18062014,18064031,18066042,18067920,18069859,18071739,18073655,18075536,18077314,18079105,18080869,18082716,18084640,18086561,18088538,18090493,18092470,18094425,18096394,18098314,18100295,18102274,18104175,18106008,18107844,18109678,18111549,18113394,18115195,18116976,18118802,18120665,18122460,18124198,18125868,18127434,18128873,18130422,18131093,18133141,18135189,18137237,18139285,18141333,18143381,18145429,18147486,18149534,18151582,18153630,18155678,18157726,18159774,18161822,18163870,18165918,18167966,18170014,18172062,18174110,18176158,18178206,18180254,18182302,18184350,18186398,18188446,18190494,18192542,18194590,18196638,18198686,18200734,18202782,18204830,18206878,18208926,18210974,18213022,18215070,18217118,18219166,18221214,18223262,18225310,18227358,18229406,18231454,18233502,18235550,18237598,18239646,18241694,18243742,18245790,18247838,18249886,18251934,18253982,18256030,18258078,18260126,18262174,18264222,18266279,18268327,18270375,18272423,18274471,18276519,18278567,18280615,18282663,18284711,18286759,18288807,18290855,18292903,18294951,18296999,18299047,18301095,18303143,18305191,18307239,18309296,18311344,18313392,18315440,18317488,18319536,18321584,18323632,18325680,18327728,18329776,18331824,18333872,18335920,18337968,18340016,18342064,18344112,18346160,18348208,18350256,18352304,18354352,18356400,18358448,18360496,18362553,18364601,18366649,18368697,18370745,18372793,18374841,18376889,18378937,18380985,18383033,18385081,18387129,18389177,18391225,18393273,18395321,18397369,18399417,18401465,18403513,18405561,18407609,18409657,18411705,18413753,18415801,18417849,18419897,18421945,18423993,18426041,18428089,18430137,18432185,18434233,18436281,18438329,18440377,18442425,18444473,18446521,18448569,18450617,18452665,18454713,18456761,18458809,18460857,18462905,18464953,18467001,18469049,18471097,18473145,18475193,18477241,18479289,18481337,18483385,18485433,18487481,18489529,18491577,18493625,18495673,18497721,18499769,18501817,18503865,18505913,18507961,18510009,18512057,18514105,18516153,18518201,18520249,18522297,18524345,18526393,18528441,18530489,18532537,18534585,18536633,18538681,18540729,18542777,18544825,18546873,18548921,18550969,18553017,18555065,18557113,18559161,18561209,18563257,18565305,18567353,18569401,18571449,18573497,18575545,18577593,18579641,18581689,18583737,18585785,18587833,18589881,18591929,18593977,18596025,18598073,18600121,18602169,18604226,18606274,18608322,18610370,18612418,18614466,18616514,18618562,18620610,18622658,18624706,18626754,18628802,18630850,18632898,18634946,18636994,18639042,18641090,18643138,18645186,18647234,18649282,18651330,18653378,18655426,18656843,18658257,18659645,18661197,18662702,18664250,18665658,18667125,18668398,18669601,18670997,18672507,18673827,18675019,18676394,18677872,18679397,18680847,18682316,18683737,18685113,18686468,18687998,18689477,18690922,18692404,18693878,18695362,18696816,18698368,18699894,18701434,18702967,18704435,18706040,18707547,18709099,18710644,18712117,18713605,18715154,18716718,18718096,18719562,18720920,18722577,18724220,18725885,18727539,18729116,18730644,18732289,18733968,18735529,18737061,18738689,18740211,18742222,18743528,18744590,18745720,18746820,18747894,18748872,18749957,18751075,18752143,18753312,18754414,18755619,18756834,18758192,18759547,18761044,18762563,18764156,18765719,18767257,18768886,18770403,18771793,18773282,18774894,18776415,18777941,18779465,18780860,18782323,18783669,18785014,18786355,18787685,18788953,18790375,18791810,18793352,18794870,18796338,18797827,18799168,18800386,18801525,18802524,18803544,18804547,18805733,18806892,18808059,18808987,18809934,18810965,18811900,18812834,18813824,18814847,18816585,18818102,18819182,18820318,18821475,18822580,18823561,18824599,18825694,18826756,18827903,18829139,18830462,18831734,18832984,18834527,18836087,18837529,18839086,18840571,18842045,18843695,18845260,18846701,18848201,18849797,18851404,18852818,18854367,18855831,18857457,18859078,18860818,18862656,18864561,18866353,18867966,18869777,18871532,18873190,18874713,18876374,18877661,18879034,18880332,18881194,18882338,18883463,18884604,18885761,18886920,18887921,18888833,18889872,18890839,18891731,18892698,18893724,18895214,18897141,18898648,18900175,18901716,18903278,18904815,18906287,18907793,18909337,18910834,18912333,18913882,18915548,18917286,18919068,18920852,18922560,18924059,18925733,18927374,18929122,18931002,18932757,18934431,18936304,18938048,18939776,18941715,18943360,18945047,18946857,18948542,18950226,18952000,18953525,18955105,18956786,18958442,18960300,18962065,18963817,18965112,18966469,18967840,18969052,18970436,18971878,18973368,18974816,18976256,18977719,18979150,18980623,18982095,18983501,18984895,18986351,18987911,18989959,18991621,18993290,18994976,18996736,18998510,19000247,19001965,19003759,19005536,19007380,19009203,19011100,19012857,19014594,19016381,19018158,19020003,19021837,19023671,19025479,19027337,19029144,19030918,19032697,19034459,19036206,19037987,19039661,19041445,19043219,19044957,19046693,19048503,19050320,19052072,19053840,19055587,19057305,19059023,19060738,19062482,19064213,19065935,19067631,19069266,19071120,19072992,19074865,19076707,19078528,19080343,19082225,19084103,19085917,19087642,19089318,19090875,19091527,19093583,19095631,19097679,19099727,19101775,19103823,19105871,19107919,19109967,19112015,19114063,19116111,19118159,19120207,19122255,19124303,19126351,19128399,19130447,19132495,19134543,19136591,19138639,19140687,19142735,19144783,19146831,19148879,19150927,19152975,19155023,19157071,19159119,19161167,19163215,19165263,19167311,19169359,19171407,19173455,19175503,19177551,19179599,19181647,19183695,19185743,19187791,19189839,19191887,19193935,19195983,19198031,19200079,19202127,19204175,19206223,19208271,19210319,19212367,19214415,19216463,19218511,19220559,19222607,19224655,19226703,19228113,19229417,19230780,19232200,19233601,19235138,19236680,19238106,19239566,19241046,19242555,19243998,19245434,19246849,19248207,19249426,19250106,19251092,19252278,19253751,19255369,19257117,19258948,19260788,19262690,19264548,19266369,19268096,19269579,19271338,19273072,19274912,19276792,19278639,19280452,19282279,19284067,19285842,19287352,19288626,19289638,19290743,19292032,19293334,19294487,19295875,19297066,19298196,19299440,19300710,19302164,19303622,19305083,19306574,19307977,19309338,19310753,19312613,19314313,19315746,19317238,19318743,19320291,19321723,19323250,19324758,19326185,19327646,19329239,19330873,19332301,19333832,19335510,19337222,19338889,19340659,19342437,19344070,19345799,19347410,19348993,19350545,19352055,19353652,19355263,19356847,19358460,19360073,19361689,19363282,19364827,19366392,19368005,19369649,19371234,19372874,19374444,19376018,19377584,19379225,19380847,19382415,19383829,19384985,19386398,19387905,19389379,19390748,19392234,19393755,19395345,19396957,19398495,19399886,19401360,19403122,19404968,19406383,19407736,19409140,19410608,19411971,19413396,19414878,19416242,19417666,19419087,19420597,19421845,19423144,19424692,19426216,19427732,19429349,19431007,19432608,19434206,19435752,19437215,19438677,19440207,19441758,19443316,19444786,19446234,19447764,19449340,19450826,19452310,19453818,19455359,19456904,19458458,19460037,19461649,19463178,19464698,19466247,19467744,19469138,19470428,19471413,19472549,19473919,19475311,19476585,19477914,19479389,19480879,19482412,19483925,19485277,19486596,19488098,19490146,19491706,19493349,19495013,19496768,19498502,19500235,19502017,19503686,19505370,19507100,19508927,19510655,19512090,19513708,19515363,19516996,19518687,19520507,19522210,19523852,19525540,19527110,19528642,19530132,19531755,19533447,19534966,19536516,19538078,19539715,19541373,19542998,19544644,19546333,19548008,19549750,19551482,19553258,19554909,19556520,19558178,19559884,19561452,19563000,19564241,19565684,19567419,19569120,19570714,19572324,19574017,19575797,19577601,19579438,19581080,19582686,19584338,19586384,19587196,19587735,19588384,19589054,19589698,19590386,19591184,19592184,19593220,19594308,19595129,19596231,19597735,19599230,19600864,19602471,19603591,19605123,19606623,19608328,19610071,19611749,19613279,19614999,19616635,19618367,19620049,19621687,19623191,19624984,19626677,19628427,19630172,19631890,19633557,19635240,19636933,19638668,19640429,19642151,19643751,19645133,19646530,19647751,19648957,19650340,19651771,19652996,19654207,19655505,19656829,19658287,19659812,19661326,19662835,19664394,19666029,19667193,19668852,19670900,19672948,19674996,19677044,19679092,19681140,19683188,19685236,19687284,19689332,19691380,19693428,19695476,19697524,19699572,19701620,19703668,19705716,19707764,19709812,19711860,19713908,19715956,19718004,19720052,19722100,19724148,19726196,19728244,19730292,19732340,19734388,19736436,19738484,19740532,19742580,19744628,19746676,19748724,19750772,19752820,19754868,19756916,19758964,19761012,19763060,19765108,19767156,19769204,19771252,19773300,19775348,19777396,19779444,19781492,19783540,19785588,19787636,19789684,19791732,19793780,19795828,19797876,19799924,19801972,19804020,19806068,19808116,19810164,19812212,19814260,19816308,19818356,19820404,19822452,19824500,19826548,19828596,19830644,19832692,19834740,19836788,19838836,19840884,19842932,19844980,19847037,19849085,19851133,19853181,19855229,19857277,19859325,19861373,19863421,19865469,19867517,19869565,19871613,19873661,19875709,19877757,19879805,19881853,19883901,19885949,19887997,19890045,19892093,19894141,19896189,19898237,19900285,19902333,19904381,19906429,19908477,19910525,19912573,19914621,19916669,19918717,19920765,19922822,19924870,19926918,19928966,19931014,19933062,19935110,19937158,19939206,19941254,19943302,19945350,19947398,19949446,19951494,19953542,19955590,19957638,19959686,19961734,19963782,19965830,19967878,19969926,19971974,19974022,19976070,19978118,19980166,19982214,19984262,19986310,19988358,19990406,19992454,19994502,19996550,19998598,20000646,20002694,20004742,20006790,20008838,20010886,20012934,20014982,20017030,20019078,20021126,20023174,20025222,20027270,20029318,20031366,20033414,20035462,20037510,20039558,20041606,20043654,20045711,20047759,20049777,20051799,20053843,20055891,20057945,20059993,20062046,20064098,20066146,20068194,20070242,20072290,20074338,20076386,20078434,20080482,20082530,20084578,20086626,20088674,20090722,20092770,20094818,20096866,20098923,20100979,20103027,20105075,20107123,20109171,20111219,20113267,20115315,20117363,20119411,20121459,20123507,20125555,20127603,20129660,20131708,20133756,20135804,20137852,20139900,20141948,20143996,20146038,20148050,20150091,20152138,20154186,20156242,20158290,20160337,20162385,20164433,20166481,20168529,20170577,20172625,20174673,20176721,20178769,20180817,20182865,20184913,20186961,20189009,20191057,20193105,20195153,20197201,20199249,20201297,20203345,20205393,20207441,20209489,20211537,20213585,20215633,20217681,20219729,20221777,20223825,20225881,20227929,20229977,20232025,20234073,20236121,20238169,20240217,20242272,20244316,20246329,20248362,20250409,20252464,20254512,20256560,20258614,20260662,20262710,20264758,20266806,20268854,20270902,20272950,20274998,20277046,20279094,20281142,20283190,20285238,20287286,20289334,20291382,20293430,20295478,20297535,20299583,20301631,20303679,20305727,20307775,20309823,20311871,20313919,20315967,20318015,20320063,20322111,20324159,20326207,20328255,20330303,20332351,20334399,20336447,20338495,20340543,20342591,20344639,20346687,20348744,20350792,20352840,20354888,20356936,20358984,20361032,20363080,20365128,20367176,20369224,20371272,20373320,20375368,20377416,20379464,20381512,20383560,20385608,20387656,20389704,20391752,20393800,20395848,20397896,20399944,20401992,20404040,20406088,20408136,20410184,20412232,20414280,20416328,20418376,20420424,20422472,20424520,20426568,20428616,20430664,20432712,20434760,20436808,20438856,20440904,20442952,20445000,20447048,20449096,20451144,20453192,20455240,20457288,20459336,20461384,20463432,20465480,20467528,20469576,20471624,20473672,20475720,20477768,20479816,20481864,20483912,20485960,20488008,20490056,20492104,20494152,20496200,20498248,20500296,20502344,20504392,20506440,20508488,20510536,20512584,20514632,20516680,20518728,20520776,20522833,20524881,20526929,20528940,20530964,20533012,20535066,20537123,20539180,20541233,20543281,20545329,20547377,20549425,20551473,20553521,20555569,20557617,20559665,20561713,20563761,20565809,20567857,20569905,20571953,20574001,20576049,20577967,20579202,20580559,20581805,20582902,20584010,20584946,20586080,20587227,20588393,20589477,20590553,20591896,20592991,20594076,20595192,20596236,20597405,20598571,20599774,20600889,20602021,20603304,20604213,20605047,20605984,20606991,20607932,20608822,20609552,20610525,20611345,20612061,20612897,20613233,20613570,20613919,20615038,20616237,20617681,20619143,20620614,20622068,20622773,20623857,20624973,20625861,20626758,20627603,20628973,20630178,20631593,20632902,20634020,20635017,20636042,20637209,20638322,20639391,20640635,20641754,20642888,20643991,20645137,20646338,20647375,20648475,20649625,20650815,20651991,20653188,20654443,20655346,20656195,20657121,20658093,20659023,20659889,20660672,20661640,20662474,20663350,20664171,20664506,20664843,20665188,20666360,20667573,20669030,20670486,20671937,20673351,20674249,20675287,20676186,20677085,20677957,20678794,20680750,20681394,20681438,20681483,20681541,20681617,20681744,20681888,20682085,20682258,20682456,20682707,20682930,20683284,20684057,20685079,20686085,20687140,20688402,20689932,20691533,20693157,20694831,20696470,20698238,20700012,20701773,20703307,20704871,20706467,20708121,20709774,20711482,20713250,20715016,20716591,20718261,20719851,20721462,20723107,20724564,20725459,20726462,20727367,20728075,20728540,20728766,20728936,20729060,20729187,20729347,20729494,20729601,20729679,20729728,20729773,20729818,20729863,20730256,20731017,20732522,20733641,20733775,20733970,20734156,20734377,20734623,20735010,20735385,20735747,20736156,20736489,20736733,20737189,20737959,20738932,20739825,20740875,20741960,20743424,20745110,20746849,20748675,20750402,20752243,20754086,20755919,20757586,20759272,20760959,20762714,20764573,20766422,20768321,20770187,20771928,20773762,20775656,20777519,20779356,20781244,20782221,20783209,20784084,20784903,20785563,20785935,20786264,20786614,20786974,20787383,20787736,20788065,20788202,20788384,20788564,20788811,20788962,20789781,20791696,20792925,20794284,20795550,20796712,20798103,20799487,20800851,20802213,20803536,20804938,20806421,20807911,20809311,20810743,20812170,20813658,20815137,20816561,20818073,20819491,20820827,20822216,20823608,20824978,20826152,20827297,20828596,20830011,20831321,20832697,20834068,20835407,20836683,20838092,20839479,20840771,20842101,20843536,20845043,20846466,20847994,20849425,20850780,20852121,20853535,20854974,20856427,20857817,20859164,20860541,20861797,20863170,20864603,20865888,20867108,20868311,20869558,20870560,20871613,20872353,20874280,20874972,20875020,20875069,20875116,20875826,20876777,20877911,20878987,20880354,20881912,20883195,20884770,20886611,20888404,20890069,20891770,20893456,20894328,20895508,20897061,20898808,20900599,20902411,20904170,20905993,20907807,20909515,20911101,20912775,20914473,20916379,20918222,20920106,20921951,20923761,20925514,20927410,20929265,20931148,20933000,20934766,20936382,20937962,20939510,20941268,20942686,20943956,20945287,20946550,20947772,20948831,20949801,20950661,20951082,20951127,20951172,20951220,20951811,20952487,20953511,20954298,20955017,20956104,20957417,20958704,20960026,20961032,20961688,20962579,20963397,20964499,20965392,20966058,20966746,20967470,20968151,20968885,20969580,20970535,20971360,20972298,20973216,20974092,20975035,20975875,20976615,20977194,20978134,20979109,20980000,20980880,20981855,20982328,20983069,20983809,20984568,20985296,20986106,20986978,20987761,20988708,20989396,20990100,20990938,20991762,20992580,20993409,20994243,20995150,20996036,20996910,20997744,20998544,20999398,21000211,21001242,21002025,21002888,21004593,21006091,21007620,21009064,21010750,21012360,21013890,21015497,21017039,21018546,21020056,21021693,21023316,21024867,21026399,21028047,21029353,21030854,21032438,21034042,21035623,21037089,21038627,21040108,21041802,21043446,21045002,21046500,21047849,21048990,21050170,21051452,21052856,21054059,21055151,21056368,21057473,21058595,21059808,21061035,21062387,21063508,21064398,21065212,21065916,21067674,21069148,21070610,21072066,21073476,21074798,21076118,21077362,21078541,21079894,21081216,21082501,21083655,21084574,21085482,21086183,21086970,21088829,21090300,21091833,21093281,21094752,21096125,21097412,21098677,21099832,21101143,21102467,21103707,21104732,21105590,21106342,21106991,21108588,21110176,21111693,21113105,21114589,21115991,21117264,21118669,21119855,21121095,21122488,21123833,21125060,21126204,21127114,21128015,21128681,21129500,21131387,21132823,21134311,21135730,21137180,21138696,21140182,21141643,21142891,21143956,21144803,21145584,21146409,21147312,21148190,21149564,21151205,21152739,21154159,21155606,21156997,21158218,21159616,21160785,21162076,21163447,21164758,21165986,21167032,21167967,21168819,21169466,21170726,21172560,21174075,21175455,21176712,21177866,21179247,21180700,21182108,21183090,21184040,21185281,21186985,21188560,21190147,21191624,21192905,21194024,21195511,21196955,21198245,21199296,21200511,21201830,21203115,21204221,21205144,21206909,21208604,21210435,21212245,21213989,21215706,21217006,21218770,21220687,21222533,21224229,21226086,21228064,21229591,21230717,21232028,21233374,21234746,21236044,21238011,21239577,21240833,21242140,21243504,21244879,21246208,21247887,21248835,21249721,21250723,21252543,21253733,21254565,21255457,21256960,21258596,21259839,21261425,21263130,21264639,21266316,21268065,21269948,21271220,21272618,21274323,21275875,21277447,21279272,21281129,21282939,21284146,21285678,21287406,21288921,21290610,21292495,21294333,21296069,21297258,21298813,21300535,21302144,21303903,21305797,21307688,21309249,21310493,21312112,21313890,21315468,21317121,21319002,21320890,21322498,21323832,21325430,21327167,21328692,21330335,21332193,21334073,21335626,21336918,21338530,21340224,21341717,21343408,21345197,21347048,21348295,21349737,21351451,21352986,21354559,21356313,21358022,21359759,21360957,21362527,21364241,21365760,21367422,21369204,21371087,21372444,21373779,21375450,21377073,21378606,21380359,21382204,21383860,21385496,21387045,21388712,21390213,21391770,21393406,21394987,21396564,21398098,21399705,21401191,21402787,21404395,21405879,21407482,21408919,21410416,21411909,21413227,21414886,21416376,21417622,21418709,21419800,21421122,21422473,21423581,21424847,21426435,21428001,21429346,21430669,21431987,21433337,21434832,21436016,21437337,21438519,21439838,21441609,21442070,21442115,21442157,21442206,21442251,21442317,21442641,21443222,21443953,21444788,21445716,21446720,21447653,21448692,21449643,21450710,21451894,21453098,21454414,21455634,21456883,21458237,21459433,21460593,21461801,21462777,21464004,21465089,21466206,21467384,21468461,21469401,21470354,21471180,21471834,21472546,21473230,21473666,21473737,21473782,21473820,21473865,21473913,21474617,21475908,21476627,21477365,21478431,21479624,21480990,21482059,21483011,21484068,21485033,21485899,21486545,21487317,21488265,21489239,21490285,21491475,21492602,21493805,21495052,21496331,21497499,21498815,21500194,21501511,21502894,21504205,21505551,21506820,21507760,21508616,21509268,21509784,21510260,21510964,21511855,21512699,21513497,21514339,21515289,21516373,21517210,21518156,21519167,21520236,21521304,21522346,21523220,21524289,21525599,21526330,21527655,21528495,21529354,21530594,21531983,21532706,21533498,21534512,21536441,21537587,21538826,21540198,21541581,21543080,21544516,21546101,21547791,21549580,21551416,21553223,21555048,21556752,21558519,21560188,21561844,21563618,21565252,21566902,21568484,21570128,21571744,21573218,21574838,21576539,21578205,21579738,21581314,21582881,21584457,21585944,21587194,21588271,21589532,21591155,21592692,21594289,21595835,21597351,21598706,21600080,21601535,21603347,21604461,21605120,21606127,21607242,21608376,21609654,21610993,21612366,21613656,21615130,21616605,21617952,21618854,21619724,21620775,21622056,21623465,21624732,21625962,21627214,21628350,21629551,21630725,21631944,21633234,21634435,21635707,21637086,21638430,21639671,21640976,21642352,21643690,21645024,21646267,21647505,21648728,21649809,21650786,21651847,21653012,21654286,21655468,21656882,21657553,21658555,21659661,21660796,21661569,21662730,21664746,21665617,21666635,21667453,21669313,21670119,21670996,21671731,21672792,21673837,21674873,21675830,21676847,21677999,21679309,21680785,21682432,21684077,21685759,21687308,21688622,21690052,21691557,21693180,21694793,21696454,21698091,21699732,21701329,21702909,21704379,21705919,21707434,21709249,21711078,21712953,21714784,21716548,21718329,21719864,21721279,21722619,21723993,21725339,21726623,21727771,21728443,21729312,21730470,21731585,21732650,21733676,21734731,21735750,21736422,21737599,21738647,21739357,21740265,21741463,21742733,21744077,21744736,21745292,21745905,21746624,21747285,21747963,21748594,21749466,21750303,21751332,21752380,21753406,21754482,21755327,21756140,21756979,21757795,21758621,21759628,21760517,21761419,21762296,21763273,21764088,21764975,21765898,21766821,21767858,21768794,21769763,21770756,21771539,21772160,21772837,21773537,21774264,21774979,21775928,21776815,21777612,21778547,21779391,21780240,21781109,21781939,21782940,21783700,21785343,21787150,21788968,21790782,21792733,21792818,21792900,21793079,21793266,21793343,21793455,21793890,21794607,21795357,21796205,21797160,21798127,21799111,21800112,21801083,21802285,21803403,21804744,21806035,21807196,21808502,21809747,21810951,21812106,21813088,21814218,21815327,21816389,21817526,21818625,21819588,21820521,21821367,21821961,21822664,21823375,21823805,21823873,21823950,21824161,21824340,21824435,21825343,21826495,21827215,21827951,21829025,21830252,21831553,21832539,21833514,21834509,21835530,21836243,21836965,21837733,21838727,21839682,21840676,21841830,21842893,21844028,21845234,21846324,21847475,21848817,21850227,21851576,21852838,21854102,21855461,21856550,21857437,21858163,21858670,21859164,21859782,21860632,21861525,21862307,21863121,21863998,21865028,21865909,21866832,21867843,21868935,21869992,21871372,21872011,21873027,21874014,21875384,21876056,21877421,21877992,21879064,21880237,21881533,21882281,21883133,21884075,21885292,21886419,21887412,21888545,21890289,21891476,21892744,21894119,21895552,21897022,21898499,21900126,21901868,21903650,21905473,21907280,21909081,21910801,21912552,21914175,21915835,21917604,21919228,21920892,21922508,21924157,21925750,21927203,21928835,21930514,21932120,21933683,21935253,21936852,21938423,21939865,21941087,21942167,21943511,21945132,21946646,21948241,21949806,21951285,21952624,21954049,21955500,21957431,21958257,21958969,21960027,21961160,21962287,21963556,21964961,21966291,21967539,21969054,21970533,21971853,21972638,21973514,21974644,21975955,21977379,21978634,21979875,21981102,21982245,21983425,21984598,21985805,21987113,21988328,21989606,21991003,21992268,21993506,21994878,21996290,21997607,21998897,22000120,22001406,22002609,22003613,22004583,22005688,22006840,22008133,22009307,22010809,22011440,22012691,22013519,22014568,22015565,22017544,22018659,22019503,22020180,22020727,22021475,22022564,22023372,22024857,22026302,22027132,22027955,22028867,22029946,22031033,22032028,22033043,22034101,22035357,22036725,22038359,22040020,22041701,22043297,22044724,22046125,22047556,22049114,22050795,22052399,22054104,22055754,22057372,22058949,22060494,22061993,22063461,22065191,22067018,22068882,22070724,22072541,22074267,22075979,22077350,22078735,22080112,22081503,22082793,22084017,22084919,22085513,22086712,22087766,22089024,22090060,22091031,22092130,22092920,22094147,22095081,22096380,22097006,22097597,22098579,22099257,22100483,22101724,22103738,22105629,22107441,22109157,22110905,22112618,22114349,22116113,22118010,22119951,22121999,22122051,22122096,22122146,22122193,22122238,22122282,22122327,22122377,22122424,22122469,22122513,22122558,22122869,22123630,22124802,22126237,22127704,22129256,22130796,22132255,22133739,22135302,22136946,22138623,22140372,22142142,22143873,22145514,22147240,22148885,22150511,22152158,22153784,22155398,22157000,22158358,22159685,22160925,22162103,22163214,22163972,22164397,22164682,22164859,22164993,22165039,22165087,22165136,22165183,22165228,22165274,22165322,22165371,22165419,22165464,22165510,22165558,22167326,22169374,22171422,22173470,22175518,22177566,22179614,22181662,22183710,22185758,22187806,22189854,22191902,22193950,22195998,22198046,22200094,22202142,22204190,22206238,22208286,22210334,22212382,22214430,22216478,22218526,22220574,22222622,22224593,22225923,22227082,22228255,22229501,22230733,22231904,22233099,22234230,22235463,22236705,22237986,22239276,22240463,22241831,22243099,22244650,22246332,22247848,22249355,22250696,22252060,22253619,22255201,22256668,22258039,22259680,22261274,22262827,22264308,22265745,22267363,22268733,22270104,22271522,22273015,22274445,22275850,22277062,22278316,22279634,22280876,22282139,22283275,22284335,22285187,22286279,22287319,22288401,22289345,22290091,22290742,22291556,22292380,22293008,22293632,22294250,22294913,22296961,22298460,22299568,22300642,22301817,22302838,22304016,22305326,22306592,22307783,22309000,22310182,22311423,22312720,22314040,22315612,22317203,22318964,22320730,22322502,22324274,22325987,22327664,22329012,22330614,22332019,22333522,22335136,22336703,22338102,22339631,22341287,22342898,22344561,22346060,22347766,22349295,22350684,22351973,22353355,22354581,22355685,22356776,22357736,22358746,22359797,22360734,22361752,22362814,22363882,22364885,22365810,22366626,22367253,22367751,22368267,22368672,22369042,22370771,22371852,22372499,22373217,22373921,22374596,22375247,22375893,22376580,22377266,22377918,22378569,22379247,22379957,22381292,22382915,22384404,22386003,22387585,22389279,22390861,22392395,22393877,22395280,22396287,22397094,22398497,22399915,22401388,22402945,22404467,22405934,22407460,22408840,22410139,22411273,22412256,22413468,22414872,22416377,22417830,22419287,22420744,22422084,22423315,22424217,22424863,22425534,22426220,22426910,22427540,22428211,22428866,22429551,22430260,22430925,22431553,22432249,22433716,22435167,22435900,22436569,22437195,22437878,22438589,22439276,22439929,22440573,22441245,22441912,22442600,22443286,22444160,22445695,22447315,22448933,22450604,22452312,22453975,22455532,22457000,22458430,22459814,22461168,22462496,22463797,22465109,22466439,22467678,22468968,22470282,22471567,22472781,22474460,22476150,22477761,22479383,22481043,22482633,22484139,22485471,22486580,22487504,22488262,22489017,22489677,22490324,22490998,22491655,22492356,22493035,22493696,22494352,22495039,22495723,22496402,22497486,22499531,22500040,22500480,22501009,22501630,22502263,22503017,22503904,22504776,22505817,22506915,22507984,22509117,22510485,22512009,22513565,22515165,22516730,22518279,22519781,22521238,22522668,22524129,22525569,22527030,22528568,22530021,22531467,22532859,22534269,22535535,22536933,22538342,22539808,22541433,22543037,22544566,22546006,22547275,22548367,22549566,22550847,22552063,22553347,22554585,22555746,22556836,22557825,22558816,22559840,22560881,22561875,22562828,22563748,22564574,22565242,22565817,22566208,22567784,22568704,22569039,22569539,22570093,22570740,22571475,22572323,22573166,22574028,22575047,22576069,22577213,22578446,22579812,22581347,22582976,22584658,22586396,22588048,22589663,22591137,22592585,22593922,22595243,22596560,22597982,22599410,22600852,22602282,22603716,22605209,22606628,22608080,22609521,22610956,22612394,22613960,22615657,22617288,22618777,22620090,22621362,22622559,22623807,22625009,22626191,22627457,22628628,22629682,22630740,22631791,22632804,22633667,22634460,22635161,22635809,22636287,22637495,22638875,22639209,22639699,22640353,22641024,22641717,22642520,22643383,22644332,22645435,22646477,22647546,22648972,22650516,22651976,22653447,22655033,22656509,22657950,22659187,22660473,22661809,22663183,22664530,22665952,22667352,22668783,22670116,22671422,22672806,22674183,22675578,22676876,22678187,22679505,22680788,22682187,22683721,22685253,22686875,22688277,22689752,22691150,22692504,22693703,22694913,22696140,22697324,22698475,22699546,22700580,22701567,22702502,22703419,22704150,22704788,22705242,22705966,22707711,22709434,22711170,22712886,22714673,22716721,22718769,22720817,22722865,22724913,22726961,22729009,22731057,22733105,22735153,22737201,22739249,22741297,22743345,22745393,22747441,22749489,22751537,22753585,22755633,22757681,22759729,22761777,22763825,22765873,22767820,22769868,22771837,22773885,22775854,22777822,22779802,22781850,22783879,22785927,22787975,22789983,22791859,22793827,22795856,22797734,22799534,22801539,22803518,22805397,22807445,22809408,22811309,22813279,22815324,22817047,22817993,22818697,22819471,22820428,22821414,22822419,22823553,22824577,22825665,22826504,22827359,22828397,22829397,22830227,22831203,22832042,22832954,22833902,22834738,22835537,22836417,22837250,22838361,22839398,22840147,22840858,22841622,22842990,22844218,22845492,22846847,22847527,22848155,22848779,22849347,22849916,22850464,22851457,22852404,22853289,22854292,22855241,22855919,22856867,22857634,22858526,22859508,22860517,22861446,22862419,22863255,22863803,22864373,22865222,22865733,22866501,22867464,22868362,22868844,22869638,22870228,22870928,22871640,22872247,22873359,22874283,22875299,22876398,22877146,22877819,22878363,22878897,22879450,22880173,22880929,22881590,22882448,22883101,22883881,22884563,22885486,22886739,22887467,22888344,22889347,22890314,22891341,22892159,22893218,22893951,22894960,22896030,22896810,22897525,22898455,22899402,22899722,22900253,22901182,22901970,22902708,22903243,22903830,22904774,22905380,22906059,22906693,22907337,22908058,22908971,22909953,22910798,22911429,22912126,22912881,22913687,22915608,22917275,22918899,22920347,22921785,22923186,22924637,22926175,22928105,22929873,22931648,22933289,22934726,22936148,22937530,22939008,22940542,22942575,22944263,22945866,22947572,22949250,22950842,22952458,22954187,22955917,22957721,22959474,22961216,22962960,22964451,22965655,22966858,22968083,22969706,22971314,22972951,22974736,22976501,22978250,22979976,22981651,22983429,22985170,22986868,22988549,22990246,22991998,22993750,22995520,22997218,22998966,23000733,23002492,23004196,23005979,23007691,23009279,23010868,23012437,23013767,23015076,23016366,23017804,23019320,23020845,23022495,23024120,23025709,23027401,23028925,23030459,23032114,23033736,23035337,23037264,23038936,23040380,23041873,23043369,23044910,23046350,23047880,23049380,23050802,23052290,23053863,23055499,23056930,23058469,23060163,23061863,23063529,23065315,23067085,23068730,23070462,23072060,23073632,23075185,23076701,23078294,23079922,23081510,23083136,23084730,23086342,23087938,23089481,23091043,23092665,23094332,23095930,23097574,23099138,23100691,23102274,23103926,23105553,23107147,23108558,23109711,23111138,23112660,23114138,23115500,23116966,23118476,23120062,23121661,23123167,23124562,23126043,23127815,23129627,23130874,23132074,23133304,23134539,23135784,23137068,23138304,23139587,23140859,23142155,23143449,23145002,23146305,23147604,23148897,23150214,23151519,23152843,23154146,23155385,23156643,23157927,23159203,23160447,23161719,23162952,23164176,23165447,23166701,23167920,23169136,23170316,23171537,23172774,23173999,23175221,23176448,23177686,23178950,23180194,23181455,23182709,23184006,23185309,23186798,23188140,23189412,23190692,23191999,23193326,23194614,23195912,23197131,23198426,23199713,23200950,23202326,23204374,23206099,23207850,23209656,23211418,23213205,23215011,23216791,23218570,23220348,23222144,23223855,23225596,23227287,23229019,23230661,23232298,23233950,23235554,23237178,23238843,23240494,23242112,23243740,23245472,23247192,23248886,23250665,23252394,23254180,23255947,23257729,23259461,23261214,23262978,23264563,23266227,23267942,23269604,23271315,23272921,23274578,23276290,23277983,23279675,23281380,23283141,23284846,23286621,23288363,23290125,23291860,23293612,23295372,23297133,23298902,23300656,23302408,23303238,23304740,23306577,23308625,23310673,23312721,23314769,23316817,23318865,23320913,23322961,23325009,23327057,23329105,23331153,23333201,23335249,23337297,23339345,23341393,23343441,23345489,23347537,23349585,23351633,23353681,23355729,23357777,23359825,23361873,23363921,23365969,23368017,23370065,23372113,23374161,23376209,23378257,23380305,23382353,23384401,23386449,23388497,23390545,23392593,23394641,23396689,23398737,23400785,23402833,23404881,23406929,23408977,23411025,23413073,23415121,23417169,23419217,23421265,23423313,23425361,23427409,23429457,23431505,23433553,23435601,23437649,23439697,23441745,23443793,23445841,23447889,23449937,23451985,23454033,23456081,23458129,23460177,23462225,23464273,23466321,23468369,23470417,23472465,23474513,23476561,23478609,23480657,23482705,23484753,23486801,23488849,23490897,23492945,23494993,23497041,23499089,23501137,23503185,23505233,23507281,23509329,23511377,23513425,23515473,23517521,23519569,23521617,23523665,23525713,23527761,23529809,23531857,23533905,23535953,23538001,23540049,23542097,23544145,23546193,23548241,23550289,23552337,23554385,23556433,23558481,23560529,23562577,23564625,23566673,23568721,23570769,23572817,23574865,23576913,23578961,23581009,23583057,23585105,23587153,23589201,23591249,23593297,23595345,23597393,23599441,23601489,23603537,23605585,23607633,23609681,23611729,23613777,23615825,23617873,23619921,23621969,23624017,23626065,23628113,23630161,23632209,23634257,23636305,23638353,23640401,23642449,23644497,23646545,23648593,23650641,23652689,23654737,23656785,23658833,23660881,23662929,23664977,23667025,23669073,23671121,23673169,23675217,23677265,23679313,23681361,23683409,23685457,23687505,23689553,23691601,23693649,23695697,23697745,23699793,23701841,23703889,23705937,23707985,23710033,23712081,23714129,23716177,23718225,23720273,23722321,23724369,23726417,23728465,23730513,23732561,23734609,23736657,23738705,23740753,23742801,23744849,23746897,23748945,23750993,23753041,23755089,23757137,23759185,23761233,23763281,23765329,23767377,23769425,23771473,23773521,23775569,23777617,23779665,23781713,23783761,23785809,23787857,23789905,23791953,23794001,23796049,23798097,23800145,23802193,23804241,23806289,23808337,23810385,23812433,23814481,23816529,23818577,23820625,23822673,23824721,23826769,23828817,23830865,23832913,23834961,23837009,23839057,23841105,23843153,23845201,23847249,23849297,23851345,23853393,23855441,23857489,23859537,23861585,23863633,23865681,23867729,23869777,23871825,23873873,23875921,23877969,23880017,23882065,23884113,23886161,23888209,23890257,23892305,23894353,23896401,23898449,23900497,23902545,23904593,23906641,23908689,23910737,23912785,23914833,23916881,23918929,23920977,23923025,23925073,23927121,23929169,23931217,23933265,23935313,23937361,23939409,23941457,23943505,23945553,23947601,23949649,23951697,23953745,23955793,23957841,23959889,23961937,23963985,23966033,23968081,23970129,23972177,23974225,23976273,23978321,23980369,23982417,23984465,23986513,23988561,23990609,23992657,23994705,23996753,23998801,24000849,24002897,24004945,24006993,24009041,24011089,24013137,24015185,24017233,24019281,24021329,24023377,24025425,24027473,24029521,24031569,24033617,24035665,24037713,24039761,24041809,24043857,24045905,24047953,24050001,24052049,24054097,24056145,24058193,24060241,24062289,24064337,24066385,24068433,24070481,24072529,24074577,24076625,24078673,24080721,24082769,24084817,24086865,24088913,24090961,24093009,24095057,24097105,24099153,24101201,24103249,24105297,24107345,24109393,24111441,24113489,24115537,24117585,24119633,24121681,24123729,24125777,24127825,24129873,24131921,24133969,24136017,24138065,24140113,24142161,24144209,24146257,24148305,24150353,24152401,24154449,24156497,24158545,24160593,24162641,24164689,24166737,24168785,24170833,24172881,24174929,24176977,24179025,24181073,24183121,24185169,24187217,24189265,24191313,24193361,24195409,24197457,24199505,24201553,24203601,24205649,24207697,24209745,24211793,24213841,24215889,24217937,24219985,24222033,24224081,24226129,24228177,24230225,24232273,24234321,24236369,24238417,24240465,24241583,24242290,24242944,24243543,24244132,24244735,24245364,24246023,24246689,24247237,24247814,24248474,24249912,24250391,24250934,24251572,24252137,24252596,24252980,24253389,24254357,24255994,24257643,24258756,24259793,24261141,24262407,24263467,24265025,24266169,24267271,24268990,24270469,24271371,24272275,24273513,24273867,24274315,24274809,24275277,24275797,24276260,24276774,24277120,24277473,24277734,24278027,24278342,24279280,24281158,24282769,24284583,24286176,24287901,24289280,24290420,24291549,24292567,24293774,24294955,24295972,24297122,24297975,24299161,24300264,24300811,24302004,24303182,24304276,24305352,24306547,24307355,24308509,24309530,24310479,24311654,24312550,24313712,24314450,24315400,24316412,24317322,24318604,24319359,24320577,24321480,24322595,24323672,24324755,24326091,24326958,24328059,24329143,24330028,24331179,24331903,24333183,24333483,24333785,24334091,24334755,24335955,24337042,24338302,24339061,24340268,24341214,24343024,24344035,24345894,24347100,24349139,24350615,24352102,24353656,24355267,24356839,24358461,24360073,24361736,24363473,24365080,24366721,24368383,24370022,24371675,24373308,24374909,24376555,24378195,24379929,24381647,24383336,24385100,24386871,24388635,24390332,24391985,24393750,24395555,24397360,24399134,24400981,24402861,24404762,24406647,24408542,24410415,24412197,24413973,24415800,24417592,24419397,24421204,24422972,24424798,24426529,24428301,24429900,24431452,24433114,24434752,24436337,24437842,24439300,24440888,24442467,24444165,24445808,24447856,24449350,24450771,24452290,24453850,24455332,24456788,24458335,24459822,24461273,24462778,24464398,24466020,24467440,24469009,24470676,24472321,24474000,24475787,24477534,24479155,24480866,24482454,24484029,24485552,24487112,24488702,24490290,24491869,24493469,24495098,24496685,24498242,24499774,24501367,24502959,24504616,24506182,24507818,24509372,24510964,24512547,24514198,24515792,24517359,24518682,24519870,24521340,24522843,24524273,24525634,24527116,24528651,24530233,24531871,24533340,24534728,24536221,24538131,24539297,24539849,24540533,24541062,24541633,24542323,24543173,24543862,24544839,24545803,24546878,24547874,24549011,24550250,24551511,24552766,24554094,24555463,24556856,24558187,24559579,24561055,24562461,24563840,24565270,24566816,24568273,24569671,24571116,24572472,24573501,24574511,24575451,24576614,24577863,24579116,24580337,24581374,24582489,24583454,24584400,24585400,24586314,24587140,24588128,24589010,24589721,24590574,24591481,24592329,24592765,24593359,24594201,24594887,24595669,24596350,24596903,24598082,24599693,24600425,24601149,24602059,24603032,24604099,24605160,24606238,24607375,24608496,24609576,24610533,24611370,24612093,24613048,24614338,24615647,24617087,24618502,24619978,24621469,24622973,24624385,24625812,24627362,24628969,24630522,24632054,24633655,24635273,24636993,24638683,24640247,24641720,24643268,24644817,24646323,24647825,24649312,24650613,24651923,24653136,24654254,24655208,24656227,24657329,24658432,24659485,24660617,24661816,24663046,24664152,24665131,24666010,24666752,24667568,24668348,24669318,24670119,24671672,24673582,24675630,24677678,24679726,24681774,24683822,24685870,24687918,24689966,24692014,24694062,24696110,24698158,24700206,24702254,24704302,24706350,24708398,24710446,24712494,24714542,24716590,24718638,24720686,24722734,24724782,24726830,24728878,24730926,24732974,24735022,24737070,24739118,24741166,24743221,24745269,24747317,24749365,24751413,24753461,24755509,24757557,24759605,24761653,24763701,24765749,24767806,24769854,24771902,24773950,24775998,24778046,24780094,24782142,24784190,24786238,24788286,24790334,24792382,24794430,24796478,24798526,24800574,24802589,24804637,24806685,24808733,24810781,24812829,24814877,24816925,24818973,24821030,24823078,24825126,24827174,24829222,24831270,24833318,24835366,24837414,24839462,24841510,24843558,24845606,24847654,24849702,24851750,24853798,24855846,24857894,24859942,24861990,24864038,24866086,24868134,24870182,24872230,24874278,24876326,24878374,24880422,24882470,24884518,24886566,24888614,24890662,24892710,24894758,24896806,24898854,24900123,24901443,24902694,24903682,24904402,24904760,24905818,24906505,24907532,24908617,24909687,24910614,24911074,24912547,24914091,24915579,24916908,24918403,24919707,24921098,24922266,24923363,24924554,24925752,24926730,24928463,24929749,24931111,24932351,24933555,24934731,24935982,24937131,24938361,24939864,24941291,24942671,24943972,24945252,24946496,24947860,24949336,24950878,24952540,24954144,24955682,24957308,24958836,24960412,24961968,24963484,24965014,24966531,24967961,24969373,24970749,24972090,24973868,24975925,24977973,24980021,24982078,24984126,24986174,24988222,24990270,24992318,24994366,24996414,24998462,25000510,25002558,25004606,25006654,25008702,25010750,25012798,25014846,25016894,25018942,25020990,25023038,25025086,25027134,25029182,25031230,25033278,25035326,25037374,25039422,25041470,25043518,25045566,25047614,25049662,25051710,25053758,25055806,25057854,25059902,25061950,25063998,25066046,25068094,25070142,25072190,25074238,25076286,25078334,25080382,25082430,25084478,25086526,25088574,25090622,25092670,25094718,25096766,25098814,25100862,25102910,25104958,25107006,25109054,25111102,25113150,25115198,25117246,25119294,25121342,25123390,25125438,25127486,25129534,25131582,25133630,25135678,25137726,25139774,25141822,25143870,25145918,25147966,25150014,25152062,25154110,25156157,25157488,25158871,25160289,25161690,25163086,25164438,25165915,25167375,25168912,25170583,25172223,25173707,25175149,25176526,25177856,25179432,25181123,25182854,25184574,25186205,25187821,25189280,25190735,25192332,25193977,25195624,25197279,25198942,25200520,25202097,25203578,25205177,25207228,25209276,25211307,25213336,25215384,25217392,25219421,25221453,25223501,25225517,25227535,25229583,25231619,25233667,25235680,25237723,25239763,25241811,25243852,25245900,25247920,25249816,25251817,25253865,25255903,25257671,25259132,25260747,25262328,25263968,25265492,25266978,25267478,25267693,25267911,25268124,25268337,25268856,25269352,25269572,25269792,25270028,25270248,25270643,25271957,25273775,25275031,25276272,25277577,25278851,25279904,25281120,25282256,25283515,25284723,25285909,25287117,25288227,25289452,25291509,25293158,25293847,25295281,25297329,25298425,25299066,25300762,25302782,25303631,25304500,25306557,25308131,25308772,25309619,25310081,25310242,25311959,25313255,25315139,25317193,25319234,25321282,25322718,25323656,25325704,25327752,25329800,25331848,25333896,25335944,25337386,25338325,25340373,25342421,25344469,25346517,25348565,25350613,25352661,25354068,25355007,25357060,25359108,25361156,25363204,25365252,25367300,25368663,25369666,25371714,25373762,25375810,25377858,25379906,25381954,25384002,25386050,25388098,25390146,25391806,25393017,25393985,25394064,25394542,25396562,25398610,25400658,25402706,25404754,25406802,25408850,25410898,25412946,25414994,25417047,25419095,25421143,25423191,25425239,25427294,25429342,25431390,25433438,25435486,25437534,25439582,25441637,25443685,25445733,25447781,25449827,25451760,25453808,25455856,25457904,25459952,25462000,25464056,25466104,25468152,25470208,25472256,25474304,25476352,25478400,25480448,25482496,25484544,25486592,25488640,25490688,25492737,25494785,25496833,25498881,25500929,25502963,25505011,25507059,25509107,25511155,25513203,25515237,25517285,25519333,25521381,25523391,25525421,25527469,25529504,25531552,25533600,25535632,25537680,25539705,25541701,25543749,25545797,25547845,25549880,25551928,25553976,25556010,25558058,25560106,25562154,25564202,25566258,25568310,25570367,25572415,25574258,25575221,25577276,25579332,25581380,25582755,25583684,25585660,25587717,25589765,25591766,25593814,25595862,25597910,25599958,25602006,25604054,25606110,25608158,25610206,25612254,25614302,25616350,25618398,25620446,25622476,25624532,25626585,25628633,25630681,25632729,25634784,25636803,25638851,25640857,25642905,25644953,25647001,25649042,25651090,25653026,25655074,25657109,25659157,25661191,25663239,25665249,25667236,25669284,25671316,25673364,25675392,25677440,25679354,25681411,25683446,25685494,25687529,25689577,25691507,25693555,25695606,25697654,25699706,25701754,25703740,25705738,25707786,25709818,25711859,25713907,25715943,25717988,25720036,25722093,25724149,25726197,25728245,25730293,25732350,25734398,25736432,25738480,25740504,25742538,25744586,25746634,25748682,25750701,25752749,25754797,25756845,25758902,25760950,25762998,25765046,25767094,25769142,25771190,25773246,25775298,25777335,25779383,25781431,25783479,25785527,25787575,25789597,25791616,25793602,25795653,25797688,25799736,25801780,25803828,25805851,25807854,25809902,25811927,25813984,25816016,25818072,25819996,25822044,25824091,25826147,25828180,25830228,25832137,25834194,25836240,25838295,25840343,25842391,25844425,25846415,25848463,25850480,25852528,25854568,25856600,25858561,25860609,25862639,25864696,25866729,25868777,25870688,25872736,25874782,25876830,25878865,25880913,25882826,25884191,25884337,25884475,25885413,25887461,25889209,25889346,25890281,25892327,25893765,25894959,25896930,25898910,25900950,25902988,25905038,25907042,25907256,25908182,25910230,25911578,25912572,25914606,25916266,25916407,25917344,25919358,25920645,25920779,25920928,25921365,25921622,25922549,25924597,25925206,25925352,25925492,25925939,25926077,25926567,25927585,25928481,25929357,25930294,25931300,25932235,25933139,25933822,25934804,25935616,25936339,25937367,25938102,25939074,25940203,25941088,25942047,25942994,25943772,25944707,25945800,25946843,25947773,25948923,25949849,25950641,25951793,25952738,25953841,25954895,25955573,25956287,25956687,25957066,25958026,25959083,25960100,25961067,25961559,25961894,25962232,25962568,25962978,25963340,25963831,25964350,25964923,25966370,25967594,25968553,25969468,25970733,25972116,25973649,25975166,25976470,25977892,25978884,25980129,25981682,25983038,25984184,25985280,25986476,25987948,25989351,25990889,25992426,25993667,25994898,25996109,25997251,25998667,26000052,26001490,26003014,26004161,26005374,26006484,26007774,26009263,26010689,26012264,26013762,26014838,26015954,26017055,26018441,26019839,26021325,26022828,26024211,26025255,26026464,26027582,26028978,26030428,26031929,26033425,26034465,26035732,26036919,26038260,26039598,26040996,26041925,26042536,26043094,26043727,26044426,26045085,26045767,26046407,26047373,26048319,26049148,26049924,26050640,26051558,26052524,26053327,26053905,26054847,26055720,26056589,26057133,26057745,26058493,26059061,26059856,26060679,26061375,26062203,26062868,26063685,26064265,26064904,26065553,26066002,26066699,26067300,26067998,26068780,26069291,26070242,26070795,26071289,26071939,26072694,26073348,26073848,26074346,26074968,26075451,26075926,26076382,26077027,26077637,26078475,26079173,26079609,26080597,26081920,26082954,26084469,26085816,26087218,26088498,26089726,26090956,26091991,26093186,26094398,26095729,26097011,26098297,26099765,26100876,26102068,26103174,26104164,26105658,26106472,26108012,26108984,26109865,26110682,26112002,26113190,26114197,26114946,26115881,26116808,26117873,26118886,26119757,26120793,26121836,26122852,26123687,26124506,26125454,26126266,26127230,26128298,26129262,26130203,26131184,26132367,26133327,26134376,26135251,26135992,26136888,26137970,26138956,26140028,26140935,26141845,26142910,26144048,26144554,26145083,26145603,26146074,26146725,26147419,26147987,26148908,26149637,26150262,26150925,26151551,26152234,26153357,26154307,26155425,26156402,26156889,26157705,26158498,26159225,26159967,26160662,26161332,26162201,26162535,26162870,26163499,26164108,26164861,26165756,26166391,26167516,26168363,26169183,26170022,26170540,26171374,26172323,26173172,26173960,26174853,26175727,26176596,26177437,26178232,26179202,26179834,26180635,26181551,26182434,26183268,26184170,26184873,26185606,26186648,26187570,26188419,26189201,26189991,26190864,26191738,26192552,26193377,26194175,26194698,26195500,26196354,26197201,26198072,26198869,26199683,26200310,26201048,26201647,26202373,26202947,26203786,26204126,26204707,26205937,26206654,26207385,26209043,26210785,26212594,26214409,26216424,26218313,26220361,26222409,26224457,26226155,26227531,26229273,26231036,26233084,26235116,26236987,26238802,26240850,26242728,26244507,26246554,26248602,26250659,26252582,26254350,26256385,26258271,26260044,26262094,26264095,26265894,26267779,26269002,26270149,26270687,26271370,26271945,26273827,26275875,26277834,26279327,26280718,26281939,26283077,26284475,26286510,26288306,26289506,26290758,26291816,26293027,26294629,26296128,26297493,26298449,26298932,26299075,26299641,26301689,26303737,26305785,26307833,26309881,26311929,26313977,26316025,26318073,26320121,26322169,26324226,26326283,26328281,26330193,26331606,26333654,26335702,26337750,26339798,26341855,26343903,26345951,26347996,26348450,26348723,26350746,26352785,26354833,26356884,26358838,26360202,26362123,26364128,26366162,26368068,26370086,26372134,26374182,26376230,26378278,26380302,26382185,26384233,26386205,26388186,26390243,26392249,26394297,26396345,26398377,26400434,26402484,26404505,26406256,26407728,26409473,26411367,26413415,26415463,26417511,26419559,26421607,26423655,26425703,26427751,26429619,26431566,26432662,26433697,26434781,26436218,26437339,26438595,26440220,26441714,26442620,26444000,26445162,26446494,26447604,26448632,26449700,26450818,26451841,26453331,26455092,26456981,26458875,26460766,26462675,26464563,26466191,26467908,26469620,26471142,26472938,26474592,26475745,26476766,26477829,26479019,26480543,26481559,26482585,26483736,26484755,26485867,26486966,26487944,26489262,26490449,26491798,26492885,26494899,26496929,26498905,26500953,26502983,26504976,26507024,26509005,26511053,26513055,26515087,26517136,26519112,26521160,26523188,26525161,26527212,26529260,26531275,26533324,26535298,26537346,26539394,26541371,26543403,26545375,26547423,26549464,26551437,26553485,26555530,26557507,26559555,26561589,26563564,26565612,26567647,26569633,26571681,26573720,26575707,26577755,26579787,26581766,26583814,26585786,26587834,26589868,26591916,26593942,26595972,26598028,26600075,26602123,26604171,26606219,26608275,26610323,26612371,26614340,26616388,26618436,26620484,26622541,26624589,26626637,26628685,26630733,26632781,26634829,26636730,26638778,26640826,26642874,26644922,26646970,26649018,26651066,26653114,26655010,26657058,26659106,26661154,26663202,26665250,26667298,26669346,26671240,26673288,26675336,26677384,26679432,26681480,26683528,26685425,26687473,26689521,26691569,26693617,26695665,26697713,26699713,26701761,26703809,26705857,26707905,26709953,26712001,26714049,26716097,26717989,26720037,26722085,26724133,26726181,26728229,26730277,26732325,26734373,26736421,26738342,26739717,26741468,26742749,26744390,26745902,26747567,26749305,26751060,26752826,26754448,26755928,26757382,26759009,26760662,26762349,26764165,26765848,26767630,26769042,26771099,26772749,26773955,26775565,26776789,26778138,26779298,26780485,26782120,26783791,26785533,26787230,26788921,26790555,26792440,26794421,26796471,26798519,26799740,26800899,26802027,26803264,26804464,26805545,26806752,26807721,26809057,26810694,26812135,26813645,26814981,26816474,26817831,26819319,26820824,26822381,26824169,26825797,26827430,26829018,26830587,26832184,26833897,26835703,26837636,26839375,26841134,26843031,26844827,26846751,26848418,26850193,26852037,26853822,26855033,26856897,26858773,26860221,26861235,26862766,26864346,26865931,26867116,26868778,26870456,26871809,26873296,26874802,26876593,26878187,26879845,26881626,26882934,26883492,26884307,26885786,26886965,26888204,26889590,26890930,26892769,26894432,26895815,26897454,26899018,26900338,26901778,26903537,26905321,26907278,26909215,26910606,26912320,26914205,26916033,26917869,26919645,26921458,26923256,26924945,26926726,26928193,26930004,26931618,26933443,26935100,26936544,26937944,26939332,26940783,26942249,26943754,26945012,26946491,26948002,26949701,26951333,26952878,26954446,26956017,26957259,26958827,26960435,26962012,26963531,26965016,26966547,26968072,26969594,26971127,26972643,26974120,26974905,26975660,26976286,26976976,26977679,26978346,26978962,26979574,26980224,26980881,26981477,26982136,26982894,26983517,26984232,26984947,26985709,26986385,26987158,26987918,26988690,26989198,26989829,26990362,26990983,26991573,26991799,26992293,26992756,26993414,26995433,26997480,26999265,27001005,27002747,27004443,27006116,27007795,27009481,27011190,27012891,27014579,27016268,27017979,27019668,27021620,27023551,27025331,27027054,27028782,27030420,27032070,27033791,27035572,27037293,27039049,27040220,27041267,27042363,27044314,27046098,27047884,27049619,27051432,27053060,27054532,27056014,27057497,27058974,27060442,27061931,27063424,27064915,27065822,27066463,27066996,27067640,27068308,27068864,27069435,27070032,27070659,27071213,27071847,27072465,27073105,27073621,27074074,27074367,27074893,27075464,27075833,27076211,27076756,27077217,27077590,27078079,27078337,27079494,27081459,27083300,27084953,27086631,27088294,27089963,27091634,27093299,27094989,27096672,27098366,27100051,27101861,27103838,27105427,27107207,27108925,27110591,27112335,27114007,27115692,27116411,27117163,27118041,27119945,27121735,27123495,27125078,27126853,27128612,27130128,27131651,27133145,27134662,27136141,27137629,27139124,27140627,27142127,27143620,27145133,27146624,27148116,27149624,27151117,27152635,27154134,27155635,27157135,27158616,27159876,27160459,27160741,27161316,27161872,27162586,27163071,27163657,27164261,27164835,27165089,27165634,27166128,27166595,27167033,27167523,27167848,27168269,27168872,27169442,27170070,27170679,27171311,27171938,27172632,27173280,27173770,27174501,27174913,27175404,27175673,27176286,27176656,27177023,27177346,27177842,27178300,27178656,27179165,27179745,27180275,27180714,27181233,27181736,27182326,27182959,27183322,27183758,27184199,27184551,27185114,27185601,27185846,27186251,27186772,27187151,27187594,27187992,27188270,27188711,27189882,27191865,27193888,27195910,27197895,27199933,27201779,27203472,27205174,27206869,27208589,27210283,27211988,27213705,27215417,27217086,27218777,27220464,27222136,27223801,27225497,27227199,27228912,27230590,27232309,27233997,27235694,27237375,27239041,27240733,27242435,27244109,27245795,27247659,27249707,27251755,27253691,27255358,27257062,27258784,27260494,27262132,27263843,27265538,27267235,27268913,27270498,27272255,27273973,27275671,27277370,27279114,27280798,27282427,27284196,27285910,27287583,27288884,27289830,27290915,27291915,27293381,27295136,27296747,27298458,27300103,27301755,27303030,27304037,27305151,27306943,27308795,27310618,27312473,27314240,27315690,27317260,27318745,27320267,27321803,27323290,27324747,27326264,27327765,27329258,27330719,27331205,27331756,27332161,27332633,27333091,27333506,27334014,27334396,27335065,27335718,27336252,27336823,27337390,27337924,27338491,27338691,27338954,27339080,27339440,27339910,27340586,27341074,27341582,27342062,27342496,27342878,27343413,27343822,27344022,27344337,27345722,27347764,27349754,27351485,27353198,27354918,27356637,27358319,27360017,27361707,27363386,27365069,27366797,27368516,27370195,27371880,27373789,27375837,27377571,27379237,27381014,27382730,27384466,27386136,27387817,27389631,27391386,27393081,27394507,27395448,27396850,27398128,27399765,27401508,27403294,27404799,27406358,27407855,27409348,27410849,27412328,27413813,27415305,27416789,27418257,27419758,27420394,27420759,27421184,27421471,27422048,27422613,27422831,27423082,27423437,27423789,27423969,27424368,27424706,27425150,27425286,27425420,27425773,27426024,27426332,27426638,27427155,27427530,27427812,27428325,27428935,27429505,27429897,27430207,27430737,27431270,27433011,27435016,27437028,27438769,27440468,27442160,27443841,27445524,27447213,27448888,27450558,27452278,27453971,27455678,27457413,27459117,27461107,27463155,27464976,27466701,27468466,27470240,27471975,27473641,27475514,27477284,27479040,27480886,27482728,27483658,27484416,27485574,27487138,27488744,27490322,27492002,27493793,27495335,27496842,27498344,27499844,27501340,27502823,27503993,27504492,27504867,27505198,27505567,27506075,27506244,27506683,27507128,27507595,27507929,27508219,27508680,27508985,27509223,27509552,27510048,27511201,27513164,27514959,27516644,27518349,27520029,27521703,27523396,27525080,27526801,27528798,27530587,27532330,27533951,27535658,27537428,27539254,27541001,27541889,27543401,27544621,27546334,27547976,27549520,27551049,27552526,27554022,27555513,27556994,27558503,27560009,27561532,27562970,27563467,27564059,27564669,27565271,27565803,27566367,27566978,27567494,27568121,27568582,27569218,27569853,27570533,27571028,27571654,27572200,27572763,27573269,27573859,27574313,27574762,27575179,27575759,27576234,27576565,27576938,27577481,27578430,27580422,27582453,27584257,27585954,27587630,27589295,27590956,27592649,27594351,27596055,27597768,27599445,27601142,27602793,27604619,27606667,27608504,27610250,27611915,27613612,27615391,27617156,27618971,27620708,27622444,27623804,27624657,27625477,27626503,27627776,27629081,27630236,27631592,27633109,27634789,27636352,27637975,27639521,27640960,27642474,27643963,27645456,27646951,27648439,27649931,27651412,27652910,27654417,27655955,27657414,27658901,27660402,27661941,27663115,27663561,27663969,27664327,27664643,27664900,27665366,27665824,27666184,27666400,27666951,27667399,27667839,27668296,27668659,27669038,27669447,27669956,27670340,27670732,27671006,27671145,27671309,27671725,27671973,27672193,27672311,27672410,27672782,27673213,27673480,27673830,27674065,27674500,27674660,27675086,27675427,27675797,27676107,27676376,27676812,27677220,27677699,27677852,27678258,27678638,27678925,27679329,27679740,27680090,27680520,27680918,27682059,27684045,27685982,27687950,27689957,27691730,27693399,27695053,27696727,27698405,27700094,27701783,27703470,27705146,27706885,27708569,27710235,27711912,27713592,27715261,27716924,27718593,27720277,27721962,27723626,27725280,27726968,27728661,27730472,27732520,27734568,27736257,27737819,27739468,27741107,27742762,27744453,27746264,27747968,27749672,27751345,27753046,27754649,27756299,27757990,27759707,27761367,27763098,27764224,27764980,27765859,27767296,27768998,27770599,27772200,27773543,27775322,27777159,27778982,27780815,27782470,27784011,27785452,27786945,27788405,27789888,27791376,27792866,27794348,27795851,27797341,27798822,27800308,27801793,27803283,27804752,27806231,27807547,27808073,27808622,27809224,27809866,27810413,27810982,27811383,27811867,27812146,27812439,27812976,27813217,27813646,27814116,27814731,27815178,27815509,27815912,27816498,27817070,27817755,27818359,27818990,27819310,27819867,27820326,27820832,27821412,27822074,27822665,27823317,27823812,27824048,27824112,27824718,27825341,27825970,27826482,27827133,27827736,27828320,27828954,27829573,27830120,27830710,27831306,27831882,27832438,27833058,27833542,27835322,27837321,27839268,27841253,27843086,27844784,27846459,27848144,27849809,27851486,27853190,27854878,27856559,27858258,27859970,27861672,27863383,27865104,27866797,27868505,27870214,27871914,27873611,27875306,27877016,27878740,27880686,27882734,27884711,27886438,27888157,27889857,27891640,27893442,27895199,27896940,27898711,27900528,27902339,27904117,27905888,27907645,27909402,27911094,27912895,27914666,27915663,27916556,27917553,27918489,27919605,27920617,27921783,27923031,27924268,27925240,27926220,27927254,27928629,27930447,27932153,27933984,27935812,27937398,27939065,27940675,27942163,27943656,27945171,27946682,27948173,27949681,27951181,27952670,27954170,27955673,27957182,27958673,27960174,27961638,27963119,27964587,27966063,27967542,27969046,27970211,27970830,27971452,27972115,27972651,27973258,27973823,27974384,27975047,27975656,27976235,27976839,27977424,27977925,27978494,27979072,27979545,27979928,27980425,27980991,27981492,27982159,27982659,27983260,27983820,27984209,27984653,27985267,27985672,27986272,27986803,27987132,27987717,27988235,27988757,27989318,27989776,27990137,27990683,27991195,27991786,27992210,27992776,27993263,27993555,27994025,27994506,27994852,27995171,27995691,27995973,27996275,27996591,27996958,27997400,27997898,27998395,27998772,27999100,27999673,28000123,28000367,28000742,28001093,28001582,28001929,28002204,28002497,28003114,28003639,28004759,28006814,28008870,28010926,28012974,28015022,28017075,28018805,28020528,28022256,28023992,28025740,28027467,28029186,28030899,28032627,28034345,28036054,28037761,28039505,28041222,28042960,28044714,28046426,28048145,28049869,28051606,28053336,28055053,28056789,28058535,28060269,28062009,28063752,28065490,28067215,28068942,28070643,28072380,28074428,28076476,28078524,28080572,28082516,28084253,28086077,28087912,28089775,28091633,28093455,28095234,28097034,28098760,28100535,28102366,28104168,28105943,28107753,28109549,28111341,28113107,28114947,28116770,28118608,28120453,28122305,28124130,28126012,28127852,28129666,28131515,28133321,28135076,28136876,28137692,28138544,28139394,28140149,28141011,28142403,28143603,28145197,28146216,28147474,28149001,28150319,28151316,28152182,28153068,28154360,28155541,28157002,28158325,28160111,28161943,28163730,28165360,28167014,28168658,28170233,28171830,28173430,28175004,28176548,28178042,28179533,28181062,28182585,28184140,28185670,28187155,28188682,28190183,28191691,28193200,28194718,28196239,28197779,28199301,28200776,28202274,28203785,28205274,28206809,28208322,28209820,28211313,28212807,28214324,28215820,28217297,28218770,28220278,28221791,28222341,28222999,28223577,28224048,28224701,28225143,28225555,28226242,28227012,28227643,28228226,28228889,28229542,28230218,28230763,28231387,28232056,28232717,28233392,28234073,28234764,28235360,28236047,28236780,28237500,28238076,28238751,28239390,28240016,28240699,28241243,28241369,28241850,28242434,28243061,28243714,28244178,28244873,28245555,28246205,28246734,28247172,28247735,28248246,28248778,28249344,28249815,28250040,28250359,28250599,28251105,28251690,28251934,28252103,28252241,28252920,28253129,28253738,28254279,28254859,28255492,28256060,28256670,28257261,28257862,28258426,28259067,28259637,28260216,28260792,28261345,28261891,28262403,28262930,28263388,28263940,28264439,28265167,28265736,28266269,28266787,28267305,28267822,28268386,28268986,28269266,28269871,28270255,28270809,28271410,28271977,28272524,28272966,28273695,28274317,28274877,28276828,28278856,28280909,28282910,28284904,28286851,28288826,28290879,28292646,28294354,28296012,28297670,28299349,28301063,28302755,28304458,28306145,28307864,28309584,28311283,28312978,28314657,28316373,28318070,28319777,28321468,28323166,28324851,28326561,28328273,28329977,28331661,28333368,28335045,28336764,28338472,28340172,28341857,28343562,28345275,28346973,28348684,28350378,28352062,28353751,28355431,28357130,28358814,28360487,28362164,28364212,28366260,28368308,28370356,28372198,28373928,28375622,28377395,28379102,28380829,28382627,28384308,28385945,28387641,28389356,28391077,28392809,28394577,28396308,28398064,28399898,28401601,28403376,28405085,28406904,28408611,28410335,28412079,28413793,28415572,28417340,28419055,28420841,28422497,28424196,28425164,28426226,28427157,28428225,28429310,28430374,28431335,28432292,28433295,28434150,28434718,28435409,28436077,28436797,28437669,28438541,28439468,28440378,28441248,28442122,28443122,28443941,28444785,28445583,28446399,28447126,28448043,28448791,28449512,28450051,28450343,28451238,28451923,28452673,28453891,28455514,28456309,28458049,28459757,28461421,28463172,28464996,28466842,28468683,28470350,28472057,28473622,28475219,28476854,28478435,28479919,28481451,28482977,28484487,28485972,28487470,28488993,28490489,28491992,28493532,28495057,28496541,28498028,28499523,28501026,28502521,28504031,28505528,28507046,28508550,28510061,28511556,28513054,28514561,28516075,28517582,28519101,28520619,28522144,28523676,28525194,28526680,28528159,28529665,28531190,28532692,28534198,28535718,28537232,28538717,28540231,28541742,28543251,28544744,28546253,28547770,28549297,28550791,28552313,28553171,28553797,28554487,28555184,28555869,28556658,28557317,28557950,28558537,28559173,28559929,28560706,28561384,28562087,28562802,28563237,28563761,28564459,28565112,28565886,28566617,28567281,28568022,28568679,28569316,28569762,28570290,28570975,28571671,28572250,28572766,28573516,28574239,28574964,28575656,28576336,28576822,28577547,28578139,28578811,28579466,28580085,28580773,28581398,28581813,28582191,28582832,28583453,28583860,28584591,28585146,28585853,28586509,28587080,28587709,28588199,28588844,28589562,28590206,28590840,28591364,28591997,28592619,28593265,28593827,28594484,28594965,28595653,28596031,28596607,28597062,28597723,28598360,28599035,28599693,28600304,28600969,28601602,28602232,28602877,28603641,28604386,28605061,28605837,28606504,28607195,28607937,28608686,28609383,28610010,28610760,28611491,28612265,28612986,28613627,28614362,28614940,28615578,28616227,28616770,28617302,28617597,28618206,28618842,28619424,28620044,28620659,28621280,28621810,28622382,28623048,28623453,28623990,28624373,28625006,28625544,28626230,28626847,28627414,28628139,28628825,28629482,28630098,28630740,28631382,28631982,28632638,28633039,28633786,28634287,28634810,28635430,28636171,28636733,28637370,28638060,28638548,28639017,28639502,28639931,28640600,28641286,28641940,28642596,28643243,28643862,28645569,28647549,28649538,28651493,28653479,28655449,28657452,28659473,28661444,28663462,28665510,28667537,28669573,28671458,28673188,28674907,28676621,28678336,28680028,28681716,28683412,28685125,28686812,28688501,28690179,28691846,28693558,28695278,28696997,28698685,28700399,28702097,28703778,28705461,28707156,28708826,28710528,28712201,28713913,28715635,28717362,28719049,28720735,28722436,28724141,28725865,28727597,28729337,28731075,28732793,28734524,28736266,28737990,28739690,28741384,28743075,28744768,28746457,28748141,28749837,28751544,28753235,28754920,28756630,28758340,28760062,28761738,28763403,28765105,28766853,28768588,28770321,28772054,28773785,28775521,28777374,28779422,28781470,28783518,28785566,28787614,28789641,28791179,28792810,28794501,28796269,28798023,28799762,28801511,28803234,28805026,28806810,28808477,28810169,28811887,28813567,28815312,28817017,28818726,28820510,28822210,28823879,28825479,28827200,28828962,28830712,28832445,28834206,28835873,28837602,28839281,28840987,28842742,28844484,28846099,28847870,28849671,28851448,28853166,28854859,28856491,28858196,28859949,28861697,28863501,28864955,28865968,28867026,28867999,28868985,28870015,28870971,28871932,28872887,28873913,28874735,28875982,28877582,28879004,28880577,28882266,28883847,28885420,28886967,28888626,28890240,28891781,28893573,28895003,28896435,28898049,28899337,28900592,28901841,28903458,28904541,28905932,28907518,28909187,28910329,28911817,28913211,28914465,28915817,28917027,28918516,28920037,28921594,28923178,28924673,28926348,28927968,28929620,28931046,28932381,28933959,28935490,28937048,28938665,28940167,28941585,28943131,28944783,28946289,28947811,28949718,28951520,28953403,28955295,28957214,28959099,28960975,28962749,28964520,28966381,28968176,28970009,28971483,28972957,28974427,28975923,28977407,28978901,28980390,28981874,28983374,28984866,28985737,28986246,28986666,28987206,28987698,28988087,28988632,28989122,28989508,28989880,28990255,28990777,28991267,28991819,28992223,28992764,28993280,28993497,28993938,28994258,28994677,28995038,28995395,28995728,28996177,28996450,28996737,28997209,28997408,28997811,28998178,28998714,29000352,29002296,29004333,29006035,29007728,29009435,29011138,29012840,29014570,29016256,29017964,29019665,29021357,29023037,29024722,29026399,29028066,29029769,29031817,29033780,29035499,29037229,29038979,29040739,29042494,29044240,29046023,29047790,29049546,29051270,29052949,29054293,29055083,29055901,29056977,29058578,29059920,29061276,29062520,29064090,29065757,29067508,29069016,29070475,29072002,29073500,29074967,29076422,29077931,29079438,29080944,29082428,29083736,29084273,29084835,29085310,29085759,29086131,29086842,29087362,29087972,29088533,29089085,29089588,29090052,29090491,29090887,29091107,29091633,29092052,29092387,29092783,29093173,29093516,29094047,29094582,29094908,29095275,29095758,29096054,29096830,29098852,29100886,29102654,29104365,29106054,29107775,29109508,29111219,29112941,29114658,29116357,29118058,29119756,29121465,29123147,29125163,29127165,29128752,29130556,29132420,29134278,29136045,29137837,29139594,29141448,29143216,29144994,29146765,29147966,29148661,29149684,29151281,29152918,29154483,29155891,29157522,29159231,29160933,29162487,29164108,29165632,29167138,29168607,29170101,29171575,29173067,29174554,29176053,29177538,29178999,29180484,29181955,29183451,29184899,29186370,29187846,29189345,29190821,29192298,29193797,29195245,29196704,29198185,29199658,29201155,29202603,29204081,29205575,29207064,29208547,29210032,29211516,29213028,29214518,29215994,29217486,29218972,29219526,29220164,29220738,29221416,29222148,29222818,29223439,29223984,29224651,29225160,29225783,29226474,29227067,29227646,29228234,29228867,29229436,29230038,29230611,29231207,29231902,29232520,29233102,29233685,29234273,29234909,29235475,29236069,29236675,29237266,29237676,29238202,29238726,29239399,29239982,29240494,29241054,29241598,29242046,29242637,29243164,29243745,29244271,29244933,29245490,29245876,29246215,29246397,29246818,29247252,29247536,29248059,29248467,29248817,29249321,29249937,29250597,29251132,29251361,29251548,29251920,29252129,29252268,29252521,29252989,29253350,29253885,29254389,29254851,29255419,29256048,29256524,29257113,29257663,29258256,29258843,29259303,29259832,29260249,29260761,29261389,29261968,29262458,29263060,29263474,29263738,29264315,29264791,29265283,29265729,29266008,29266226,29266740,29267316,29267979,29268537,29269080,29269462,29269953,29270576,29271195,29271703,29272246,29272940,29273521,29274140,29274638,29275140,29275800,29277196,29279203,29281205,29283183,29285161,29287074,29289030,29290972,29292954,29295003,29296721,29298451,29300170,29301885,29303590,29305294,29307006,29308713,29310394,29312084,29313781,29315475,29317148,29318864,29320561,29322273,29323957,29325647,29327321,29329038,29330704,29332352,29334025,29335660,29337345,29339019,29340700,29342390,29344075,29345743,29347422,29349089,29350784,29352471,29354165,29355829,29357509,29359181,29360872,29362545,29364245,29365920,29367611,29369276,29370932,29372601,29374418,29376466,29378514,29380562,29382610,29384418,29386172,29387865,29389575,29391266,29392947,29394623,29396426,29398177,29399983,29401725,29403470,29405153,29406848,29408545,29410194,29411900,29413596,29415299,29417030,29418741,29420487,29422196,29423918,29425689,29427358,29429074,29430720,29432426,29434133,29435906,29437520,29439088,29440119,29441049,29441892,29442747,29443586,29444553,29445453,29446324,29447171,29448194,29449482,29450522,29451500,29452573,29453645,29455096,29456337,29457562,29458651,29459836,29461224,29462500,29463685,29464984,29466553,29467929,29469432,29470410,29471673,29472879,29474006,29474839,29475466,29476446,29477039,29477439,29478141,29479114,29480174,29481349,29482459,29483586,29484473,29485069,29485626,29486709,29487858,29489370,29491072,29492914,29494787,29496641,29498556,29500497,29502408,29504336,29506231,29507817,29509384,29510866,29512365,29513865,29515355,29516845,29518341,29519791,29521281,29522774,29524261,29525770,29526920,29527380,29527632,29528100,29528645,29529129,29529510,29530118,29530697,29531249,29531415,29531698,29531918,29532176,29532528,29532915,29533415,29533902,29534323,29534791,29535099,29535411,29535784,29536258,29536606,29536972,29537371,29537690,29538010,29538495,29538772,29539138,29539511,29539905,29540251,29540909,29541571,29542404,29544390,29546375,29548413,29550200,29551904,29553567,29555262,29556955,29558657,29560364,29562067,29563748,29565422,29567133,29568847,29570555,29572234,29573941,29575645,29577515,29579563,29581367,29583096,29584787,29586498,29588260,29590072,29591846,29593562,29595269,29597055,29598810,29600575,29602317,29603605,29604352,29605180,29606873,29608555,29609800,29610430,29611260,29612420,29614162,29615994,29617743,29619290,29620899,29622406,29623898,29625398,29626892,29628406,29629905,29631134,29631724,29632334,29632920,29633467,29633911,29634465,29634989,29635430,29635852,29636372,29636752,29637086,29637334,29637692,29638091,29638539,29638978,29639263,29639733,29640289,29640456,29640811,29641451,29642190,29644135,29646154,29647842,29649540,29651254,29652955,29654659,29656335,29658000,29659695,29661390,29663100,29664785,29666833,29668581,29670375,29672214,29673941,29675678,29677394,29679135,29680913,29682742,29683643,29684448,29685713,29687316,29688822,29690323,29691757,29693386,29695039,29696510,29698003,29699365,29700830,29702314,29703797,29705296,29706753,29708245,29709723,29711204,29712706,29714216,29715686,29717188,29718691,29719420,29719906,29720393,29720986,29721606,29722076,29722581,29723054,29723528,29724196,29724727,29725248,29725792,29726415,29726788,29727139,29727577,29728103,29728394,29728800,29729388,29729795,29730225,29730690,29730959,29731171,29731588,29732270,29732886,29733515,29734112,29734705,29735120,29735776,29736274,29736529,29737133,29737448,29738060,29738630,29739142,29739521,29740058,29740496,29741792,29743777,29745815,29747813,29749593,29751271,29752966,29754680,29756371,29758042,29759726,29761388,29763085,29764809,29766489,29768153,29769827,29771556,29773269,29774986,29776692,29778419,29780122,29781861,29783909,29785957,29787711,29789407,29791118,29792833,29794610,29796258,29797972,29799675,29801296,29802983,29804785,29806546,29808239,29810023,29811775,29813133,29814017,29814854,29815838,29817580,29819095,29820443,29822057,29823609,29825057,29826824,29828663,29830418,29832052,29833480,29834931,29836438,29837950,29839448,29840913,29842409,29843896,29845380,29846853,29848326,29849811,29851308,29852785,29854252,29855740,29856685,29857195,29857782,29858359,29858934,29859271,29859788,29860395,29860996,29861463,29861871,29862318,29862729,29863239,29863495,29863866,29864355,29864865,29865321,29865838,29866268,29866706,29867265,29867686,29867988,29868177,29868398,29868664,29869203,29869633,29869885,29870041,29870178,29870443,29870806,29871028,29871287,29871776,29872305,29872624,29873189,29873518,29873835,29874197,29874528,29874930,29875397,29876791,29878770,29880640,29882641,29884537,29886237,29887923,29889614,29891301,29893000,29894682,29896402,29898103,29899787,29901443,29903101,29904776,29906475,29908164,29909831,29911481,29913175,29914832,29916497,29918165,29920060,29922108,29924137,29925888,29927606,29929313,29931093,29932777,29934577,29936266,29937913,29939607,29941299,29943014,29944617,29946305,29948064,29949808,29951548,29952766,29953531,29954395,29955242,29956820,29958106,29959442,29960902,29962353,29963244,29964517,29966270,29968016,29969688,29971365,29972966,29974566,29976066,29977586,29979087,29980595,29982095,29983615,29985060,29986542,29988031,29989507,29991015,29992528,29994017,29995520,29997020,29998510,29999986,30001439,30002935,30004431,30005955,30007473,30008020,30008611,30009192,30009560,30009994,30010497,30011057,30011605,30012151,30012628,30013111,30013611,30014175,30014544,30014701,30015330,30015862,30016361,30016825,30017171,30017486,30017686,30017936,30018155,30018716,30019283,30019842,30020401,30020916,30021434,30021886,30022286,30022645,30023098,30023684,30024228,30024807,30025249,30025661,30026180,30026424,30026757,30027087,30027227,30027391,30027926,30028479,30029107,30029630,30029979,30030412,30030827,30031267,30031592,30031960,30032194,30032380,30032804,30033194,30033605,30034029,30034465,30034937,30035166,30035662,30036017,30036553,30037044,30037640,30038065,30038984,30041016,30043057,30045035,30047032,30049078,30051038,30052688,30054333,30056040,30057747,30059417,30061143,30062862,30064561,30066249,30067916,30069593,30071291,30072995,30074707,30076425,30078108,30079773,30081446,30083136,30084844,30086563,30088250,30089957,30091662,30093322,30095006,30096705,30098416,30100136,30101868,30103573,30105487,30107535,30109583,30111631,30113253,30114836,30116592,30118361,30120117,30121879,30123608,30125338,30127072,30128802,30130568,30132293,30134046,30135760,30137441,30139182,30140916,30142748,30144492,30146191,30147879,30149585,30151366,30153129,30154956,30156777,30157721,30158525,30159264,30160042,30160590,30161518,30162562,30163412,30164069,30165063,30166110,30167049,30167888,30168499,30168899,30169534,30169767,30170730,30172089,30172768,30174008,30175539,30177245,30179006,30180771,30182551,30184250,30185884,30187539,30189003,30190499,30191968,30193447,30194943,30196441,30197909,30199362,30200857,30201426,30201948,30202438,30202940,30203211,30203697,30204278,30204626,30205166,30205708,30206077,30206468,30206963,30207340,30207639,30207984,30208489,30208884,30209483,30210047,30210574,30211159,30211680,30212291,30212809,30213288,30213809,30214291,30215296,30217308,30219339,30221180,30222867,30224570,30226252,30227903,30229614,30231319,30233029,30234731,30236441,30238132,30239819,30241523,30243575,30245469,30247201,30248933,30250684,30252536,30254296,30256117,30257909,30259642,30261465,30262705,30263563,30264376,30265328,30266429,30267593,30268890,30270545,30272229,30273857,30275436,30277018,30278531,30280046,30281551,30283032,30284538,30286028,30287484,30288981,30290463,30291940,30293417,30294894,30296395,30297895,30299372,30300861,30301926,30302560,30303178,30303716,30304317,30304934,30305568,30306187,30306830,30307492,30307968,30308616,30309212,30309711,30310384,30310775,30311305,30311896,30312451,30313021,30313529,30314104,30314719,30315161,30315665,30316198,30316599,30317005,30317523,30317993,30318519,30319079,30319326,30319792,30320296,30320768,30321157,30321729,30322187,30322714,30323353,30323897,30324473,30325001,30325432,30325887,30326431,30326976,30327572,30328216,30328588,30329150,30329720,30330346,30330950,30332097,30334150,30336178,30338227,30340246,30342088,30343791,30345506,30347222,30348929,30350648,30352355,30354049,30355724,30357423,30359095,30360817,30362484,30364217,30365933,30367624,30369316,30371012,30372700,30374373,30376036,30377740,30379445,30381156,30382996,30385044,30387092,30388902,30390639,30392413,30394101,30395845,30397509,30399270,30401092,30402880,30404685,30406503,30408178,30409909,30411598,30413434,30415217,30416926,30418042,30418808,30419648,30420427,30421256,30422835,30424634,30425953,30427351,30429114,30430780,30432360,30433362,30435093,30436946,30438789,30440540,30442353,30443963,30445550,30447006,30448489,30449986,30451465,30452952,30454433,30455918,30457400,30458871,30460342,30461858,30463332,30464807,30466295,30467784,30469283,30470819,30472320,30473817,30475307,30476805,30478314,30479283,30479614,30479795,30480015,30480377,30480813,30481331,30481769,30482169,30482690,30483151,30483779,30484271,30484572,30485021,30485399,30485921,30486159,30486569,30487116,30487694,30488120,30488516,30488787,30488951,30489482,30489666,30489970,30490461,30490982,30491552,30492103,30492659,30493003,30493560,30494032,30494272,30494700,30495199,30495552,30496099,30496723,30497211,30497818,30498143,30498312,30498553,30498875,30499347,30499697,30500161,30500726,30501289,30501818,30502441,30503085,30503573,30504108,30504628,30505028,30505350,30505821,30506233,30506480,30506792,30507169,30507615,30508064,30508356,30508868,30509598,30511589,30513633,30515645,30517652,30519702,30521541,30523222,30524921,30526629,30528311,30529962,30531637,30533322,30534968,30536650,30538341,30540018,30541699,30543381,30545084,30546784,30548446,30550171,30551877,30553546,30555233,30556924,30558624,30560307,30562025,30563728,30565414,30567108,30568810,30570456,30572176,30574218,30576266,30578314,30580156,30581837,30583590,30585366,30587072,30588818,30590424,30592182,30593942,30595611,30597344,30599124,30600934,30602723,30604519,30606201,30607917,30609626,30611257,30613035,30614716,30616378,30617885,30619651,30620518,30621429,30622152,30623000,30623890,30624645,30625482,30626369,30627243,30628204,30629333,30630378,30631353,30632084,30632979,30633900,30635032,30636122,30637160,30638217,30639336,30640353,30641396,30642432,30643281,30643468,30643861,30645161,30646453,30648124,30649993,30651813,30653648,30655463,30657126,30658622,30660155,30661681,30663183,30664675,30666168,30667651,30669158,30670667,30672158,30673666,30675020,30675382,30675761,30675933,30676207,30676653,30676954,30677327,30677753,30678187,30678695,30679119,30679578,30679853,30680350,30680674,30681106,30681520,30681775,30682138,30682486,30682932,30683263,30683643,30684061,30684491,30684733,30685060,30685271,30685602,30685939,30686317,30686783,30686942,30687222,30687500,30688776,30690772,30692741,30694626,30696312,30698002,30699717,30701401,30703090,30704784,30706457,30708147,30709812,30711503,30713185,30714866,30716540,30718226,30719898,30721900,30723948,30725725,30727441,30729238,30730916,30732620,30734348,30736065,30737792,30739551,30741345,30743009,30744687,30746312,30747488,30748272,30749242,30750831,30752377,30754032,30755923,30757817,30759546,30761065,30762624,30764105,30765609,30767112,30768612,30770114,30771618,30773122,30774617,30776115,30777605,30779101,30780617,30782138,30783647,30785141,30786621,30788116,30789617,30791131,30792621,30794103,30795613,30797113,30798593,30800106,30801621,30803133,30804594,30806108,30807620,30809115,30810585,30812056,30812706,30813203,30813764,30814242,30814738,30815301,30815872,30816525,30817127,30817751,30818379,30818889,30819305,30819781,30820367,30820822,30821284,30821845,30822426,30823058,30823652,30824214,30824738,30825337,30825836,30826258,30826738,30827320,30827927,30828460,30828752,30829311,30829739,30830270,30830774,30831250,30831765,30832256,30832766,30833337,30833872,30834369,30834909,30835346,30835675,30836093,30836472,30836923,30837315,30837648,30837922,30838428,30838820,30839203,30839704,30840131,30840775,30841360,30841835,30842120,30842679,30843285,30843914,30844514,30845093,30845672,30846038,30846589,30847087,30847624,30848100,30848512,30848961,30849538,30849872,30850356,30850864,30851369,30851760,30852140,30852582,30853121,30853648,30854069,30854600,30855149,30855664,30856074,30856325,30856846,30857396,30857733,30858051,30858224,30858446,30858794,30859409,30859732,30860167,30860623,30860904,30861161,30861478,30861914,30862278,30862600,30862965,30863332,30863561,30864077,30864479,30864715,30865502,30867555,30869581,30871623,30873604,30875587,30877620,30879617,30881645,30883690,30885629,30887372,30889103,30890856,30892577,30894271,30895972,30897671,30899355,30901064,30902756,30904425,30906131,30907821,30909550,30911257,30912976,30914703,30916413,30918110,30919793,30921476,30923163,30924868,30926609,30928336,30930022,30931696,30933366,30935040,30936734,30938458,30940130,30941782,30943455,30945147,30946840,30948518,30950247,30951955,30953695,30955439,30957180,30958911,30960583,30962288,30964020,30965713,30967395,30969052,30970737,30972538,30974586,30976634,30978682,30980730,30982778,30984570,30986310,30988085,30989848,30991543,30993280,30994942,30996639,30998270,30999903,31001667,31003389,31005129,31006918,31008646,31010357,31012044,31013776,31015478,31017148,31018832,31020403,31022037,31023830,31025535,31027162,31028855,31030511,31032128,31033808,31035543,31037300,31039082,31040738,31042517,31044206,31045783,31047427,31048789,31049571,31050412,31051245,31052095,31052887,31053624,31054424,31055123,31056231,31057259,31058342,31059436,31060323,31061061,31061819,31062745,31063760,31064475,31065331,31066096,31067057,31067934,31068627,31069288,31069983,31070815,31071707,31072528,31073395,31074469,31075601,31076861,31077869,31079034,31080183,31081349,31082765,31084380,31086312,31088093,31089925,31091799,31093644,31095456,31097345,31099193,31100801,31102400,31103984,31105501,31107046,31108565,31110066,31111599,31113111,31114619,31116119,31117616,31119136,31120637,31122144,31123609,31125124,31126094,31126632,31127376,31128012,31128514,31129113,31129666,31130263,31130755,31131231,31131673,31132248,31132853,31133573,31134183,31134939,31135554,31136227,31136879,31137435,31138211,31138873,31139349,31140053,31140737,31141309,31141787,31142433,31143023,31143740,31144351,31144833,31145356,31145854,31146165,31146501,31146844,31147479,31148077,31148693,31149335,31149872,31150458,31150947,31151543,31152094,31152905,31154957,31157012,31159043,31161079,31162789,31164516,31166255,31167994,31169717,31171435,31173171,31174908,31176622,31178364,31180108,31181831,31183539,31185253,31186972,31188665,31190360,31192097,31193827,31195559,31197283,31199331,31201379,31203368,31205117,31206978,31208830,31210683,31212507,31214382,31216186,31218070,31219910,31221759,31223574,31225420,31227192,31228994,31230730,31232550,31234379,31236211,31237899,31238902,31239884,31240787,31241703,31242981,31244265,31245432,31246654,31247626,31248753,31249715,31250777,31251864,31253244,31254650,31256200,31257869,31259581,31261182,31262815,31264334,31265882,31267361,31268856,31270353,31271819,31273294,31274775,31276262,31277784,31279317,31280786,31282253,31283729,31285228,31286702,31288181,31289647,31291107,31292590,31294054,31295526,31297020,31298487,31299959,31301440,31302808,31303394,31303923,31304522,31304983,31305516,31305976,31306453,31306973,31307518,31307936,31308360,31308764,31309019,31309386,31309584,31310151,31310470,31311051,31311483,31311943,31312286,31312713,31313167,31313750,31314267,31314753,31315264,31315767,31316312,31316761,31317176,31317597,31318089,31318295,31318697,31319006,31319400,31319982,31320445,31320693,31321203,31321728,31322193,31322691,31323144,31323464,31323837,31324186,31324759,31325258,31325606,31326015,31326311,31326724,31327187,31327668,31328078,31328534,31329014,31329473,31329988,31330484,31331105,31331767,31332456,31333072,31333607,31333980,31334246,31334586,31334836,31335139,31335605,31335954,31336240,31336489,31336899,31337375,31337819,31338244,31338822,31339339,31341271,31343201,31345124,31347114,31349090,31351049,31353048,31354749,31356443,31358136,31359803,31361473,31363174,31364840,31366491,31368163,31369836,31371513,31373201,31374904,31376577,31378229,31379921,31381585,31383248,31384961,31386685,31388369,31390088,31391703,31393372,31395057,31396738,31398432,31400098,31401783,31403443,31405079,31406729,31408396,31410054,31411740,31413546,31415594,31417642,31419690,31421582,31423336,31425129,31426895,31428665,31430403,31432057,31433773,31435489,31437199,31438829,31440463,31442178,31443896,31445693,31447401,31449168,31450801,31452498,31454128,31455737,31457412,31459095,31460716,31462351,31464010,31465476,31466332,31467211,31467826,31468687,31469521,31470284,31471378,31472721,31474052,31475227,31476191,31477009,31478115,31479271,31480533,31481595,31482571,31483413,31484396,31485650,31486856,31487694,31488966,31489666,31490087,31491603,31493355,31495091,31496793,31498622,31500474,31502244,31503867,31505521,31507139,31508760,31510252,31511750,31513273,31514787,31516312,31517834,31519358,31520872,31522381,31523900,31525403,31526911,31528433,31529959,31531450,31532971,31534501,31536008,31537506,31539014,31540531,31542044,31543569,31545070,31546577,31548111,31549616,31551112,31552664,31554192,31555713,31557265,31558785,31560310,31561836,31563342,31564846,31566344,31567842,31569347,31570842,31572327,31573789,31575273,31576770,31578260,31579756,31580944,31581481,31581959,31582553,31582980,31583481,31584094,31584550,31584885,31585529,31586202,31586861,31587573,31588283,31588957,31589677,31590322,31590990,31591637,31592275,31593002,31593705,31594291,31594945,31595547,31595957,31596486,31597035,31597645,31598175,31598872,31599502,31600152,31600843,31601479,31602099,31602689,31603321,31603825,31604447,31604984,31605494,31606192,31606784,31607299,31607946,31608446,31608977,31609517,31610039,31610642,31611234,31611881,31612436,31613039,31613618,31614184,31614715,31615249,31615791,31616321,31616986,31617411,31617838,31618478,31618947,31619516,31620142,31620698,31621365,31621932,31622554,31623155,31623695,31624316,31624766,31625416,31626082,31626602,31627119,31627632,31628273,31628683,31629303,31629837,31630369,31631060,31631638,31632059,31632563,31633229,31633822,31634425,31635109,31635701,31636390,31637138,31637822,31638471,31639117,31639840,31640537,31641273,31641864,31642404,31643108,31643762,31644408,31645004,31645539,31646014,31646642,31647288,31647838,31648503,31649113,31649651,31650269,31650901,31651483,31652064,31652615,31653191,31653714,31654030,31654566,31655087,31655683,31656191,31656778,31657338,31657811,31658409,31658859,31659342,31659923,31660509,31661053,31661438,31661840,31662394,31662966,31663457,31663991,31664430,31664776,31665251,31665797,31666357,31666879,31667318,31667667,31668023,31669713,31671762,31673815,31675845,31677884,31679929,31681979,31684035,31686092,31688146,31690194,31692219,31694260,31696159,31697877,31699590,31701269,31702972,31704672,31706399,31708097,31709788,31711499,31713191,31714910,31716613,31718314,31720015,31721716,31723422,31725159,31726888,31728590,31730315,31732042,31733772,31735520,31737260,31739021,31740787,31742551,31744297,31746031,31747743,31749437,31751150,31752840,31754539,31756216,31757878,31759588,31761331,31763007,31764696,31766394,31768111,31769806,31771524,31773241,31774992,31776748,31778513,31780249,31781998,31783703,31785423,31787141,31788877,31790597,31792343,31794075,31795843,31797582,31799299,31801044,31802809,31804562,31806309,31808027,31809811,31811859,31813907,31815955,31818003,31820051,31822099,31824147,31826106,31827804,31829459,31831195,31832948,31834627,31836301,31838024,31839785,31841496,31843267,31845074,31846838,31848686,31850475,31852312,31854124,31855917,31857711,31859525,31861252,31863039,31864819,31866430,31868023,31869740,31871476,31873145,31874769,31876418,31878238,31879906,31881640,31883344,31885037,31886764,31888611,31890444,31892269,31894087,31895897,31897711,31899385,31901095,31902691,31904345,31906133,31907966,31909783,31911567,31913416,31915274,31917083,31918850,31919852,31920811,31921722,31922648,31923609,31924519,31925314,31926331,31927323,31928373,31929650,31931037,31932321,31933556,31934874,31936210,31937533,31938942,31940265,31941603,31942799,31944000,31944757,31945504,31946379,31947330,31948279,31949346,31950473,31950921,31951489,31952943,31954356,31956087,31958038,31959750,31961549,31963433,31965341,31967195,31969020,31970862,31972639,31974507,31976386,31977943,31979459,31981038,31982555,31984065,31985607,31987130,31988646,31990148,31991528,31991923,31992376,31992689,31993039,31993555,31994078,31994622,31995009,31995386,31995770,31996131,31996444,31996764,31996947,31997380,31997682,31997884,31998119,31998356,31998724,31999079,31999464,31999848,32000253,32001721,32003748,32005789,32007522,32009221,32010955,32012622,32014314,32016011,32017713,32019411,32021111,32022802,32024506,32026337,32028385,32030299,32032081,32033902,32035598,32037417,32039202,32041032,32042783,32044547,32046064,32046884,32048361,32049946,32051522,32053026,32054615,32056143,32057574,32058790,32060305,32061661,32062100,32062512,32063010,32063546,32064124,32064606,32065662,32067469,32069144,32070816,32072729,32074494,32076273,32077150,32077984,32079458,32081035,32082541,32084039,32085552,32086618,32086905,32087403,32087762,32088226,32088509,32088602,32089029,32089458,32089932,32090030,32090391,32090935,32091442,32092949,32094780,32096467,32098135,32099822,32101497,32103181,32104979,32106811,32108563,32110265,32111970,32113656,32114737,32116202,32117982,32119682,32121225,32122681,32124189,32125671,32127164,32128674,32129127,32129562,32129918,32130293,32130767,32131116,32131533,32131874,32132395,32132826,32133295,32133664,32134141,32134718,32135192,32135727,32136290,32138292,32140080,32141758,32143434,32145100,32146756,32148422,32150115,32151935,32153818,32155559,32157228,32158926,32160693,32161958,32162587,32163962,32165259,32166241,32167802,32169426,32171430,32173481,32175529,32177583,32179631,32181337,32182942,32184480,32185878,32187169,32188672,32190231,32191356,32192237,32193154,32194675,32196672,32198688,32200598,32202513,32204220,32205039,32206199,32207679,32208826,32210298,32211749,32213139,32214465,32215745,32216791,32217458,32218532,32219647,32220835,32221800,32222670,32223611,32224521,32225380,32226327,32227330,32228497,32229553,32230575,32231528,32232673,32233593,32234698,32235735,32236860,32237975,32239090,32240115,32241046,32241983,32243121,32244230,32245263,32246449,32247119,32247669,32248510,32249424,32250677,32251776,32252590,32253605,32254486,32255467,32256353,32257184,32257944,32259202,32260350,32261189,32262257,32263235,32264041,32264999,32266006,32266765,32267811,32268852,32269353,32270971,32273019,32274154,32275269,32276346,32277272,32278246,32279261,32280402,32281390,32282396,32283311,32284357,32285538,32286442,32287548,32288568,32289492,32290513,32291326,32292217,32292942,32293724,32294565,32295723,32297038,32298451,32300015,32301325,32302950,32304941,32306989,32309037,32310936,32312383,32314412,32316468,32318516,32320564,32322523,32324359,32326407,32328036,32329988,32332045,32334093,32336141,32338189,32340237,32342294,32344342,32346394,32348432,32350462,32352481,32354506,32356546,32358585,32360539,32362345,32364020,32366008,32368056,32370104,32372152,32374200,32376248,32378296,32380344,32382392,32384449,32386497,32388552,32390550,32392487,32394326,32396085,32397353,32399214,32401136,32403029,32404783,32406724,32408775,32410829,32412885,32414933,32416981,32419029,32421077,32423125,32425173,32427221,32429269,32431317,32433365,32435422,32437373,32438844,32439968,32442014,32444062,32446110,32448158,32450206,32452254,32454302,32456350,32458398,32460446,32462494,32464542,32466590,32468638,32470686,32472734,32474782,32476830,32478878,32480898,32482435,32484483,32486531,32488579,32490630,32492464,32494018,32495370,32496529,32497504,32498190,32498702,32500749,32502797,32504854,32506902,32508958,32511006,32513054,32515102,32517155,32519212,32520999,32522430,32523283,32525331,32527379,32529394,32531310,32533153,32534833,32536316,32537449,32538328,32538840,32539084,32539555,32541522,32543570,32545627,32547675,32549722,32551770,32553818,32555866,32557914,32559962,32562018,32564066,32566109,32568072,32569879,32571471,32572945,32574327,32576384,32578432,32580480,32582528,32584584,32586632,32588689,32590737,32592785,32594833,32596889,32598943,32600965,32602850,32604529,32605957,32606966,32608247,32610097,32611992,32614016,32616064,32618115,32620163,32622066,32623724,32624977,32626051,32628099,32630144,32632192,32633945,32635996,32638044,32640092,32641818,32642233,32642331,32642516,32642549,32643527,32645575,32647623,32649671,32651728,32653776,32655825,32657877,32659925,32661839,32663887,32665656,32667580,32669628,32671676,32673724,32675772,32677820,32679868,32681916,32683964,32686012,32687918,32689473,32691475,32693447,32695075,32696669,32698471,32699994,32700856,32701908,32703641,32705625,32707661,32709718,32711766,32713823,32715875,32717840,32719562,32720619,32720674,32722582,32724638,32726686,32728734,32730789,32732837,32734891,32736948,32738996,32741029,32743085,32745021,32746856,32748769,32750600,32752212,32754260,32756316,32758364,32760412,32762460,32764517,32766565,32768613,32770510,32772567,32774624,32776681,32778729,32780777,32782825,32784873,32786921,32788507,32790554,32792531,32794504,32795759,32797510,32799567,32801616,32803580,32805228,32807207,32809255,32811303,32813351,32815408,32817464,32819512,32821560,32823608,32825651,32827254,32828570,32830426,32832396,32834408,32836437,32838493,32840533,32842571,32844600,32846651,32848695,32850736,32852776,32854799,32856798,32858769,32860735,32862753,32864804,32866858,32868902,32870952,32872962,32874997,32877034,32879078,32881124,32883174,32885219,32887228,32889100,32890842,32892362,32893691,32894932,32896140,32897358,32898489,32899499,32900548,32901644,32902602,32903589,32904424,32905324,32906198,32906911,32907524,32907995,32908386,32908585,32908759,32908842,32908893,32909639,32911690,32913727,32915779,32917834,32919844,32921633,32923389,32924857,32925809,32927178,32929226,32931274,32933322,32935370,32937274,32939322,32941370,32943418,32945375,32947423,32949471,32951519,32953519,32955576,32957633,32959681,32961736,32963787,32965842,32967890,32969938,32971974,32974018,32976074,32978100,32980015,32981886,32983648,32985426,32987191,32988786,32990842,32992890,32994939,32996996,32999050,33001105,33003160,33004921,33006975,33009031,33011079,33013127,33015175,33017223,33019276,33021272,33023241,33025289,33027297,33029181,33030640,33032695,33034743,33036684,33038136,33040176,33042224,33044272,33046320,33048368,33050416,33052472,33054528,33056573,33058540,33060305,33062017,33063496,33064892,33066117,33067232,33069146,33071194,33073242,33075299,33077352,33079329,33081160,33082682,33083354,33083847,33085033,33086631,33088409,33090344,33092285,33094223,33096173,33098169,33100025,33101704,33103162,33104434,33105347,33105845,33106598,33108482,33110525,33112467,33113723,33114612,33116660,33118708,33120756,33122804,33124852,33126909,33128957,33131005,33132989,33134991,33137041,33139028,33140740,33142070,33142915,33144970,33146999,33148649,33150006,33152021,33154069,33156117,33158167,33160223,33162279,33164327,33166367,33168405,33170391,33171942,33173909,33175966,33177388,33177988,33179941,33181989,33184037,33186085,33188133,33190181,33192238,33194239,33195979,33198020,33200068,33202116,33204164,33206212,33208269,33210326,33211841,33212960,33214594,33216556,33218596,33220652,33222700,33224634,33225789,33227705,33229520,33231574,33233622,33235670,33237727,33239758,33241729,33243360,33244583,33245476,33246150,33246577,33246905,33247082,33247813,33249861,33251909,33253957,33256005,33258053,33260101,33262149,33264197,33266245,33268293,33270341,33272389,33274437,33276485,33278533,33280581,33282629,33284520,33285854,33287910,33289962,33292011,33294064,33296112,33298169,33300093,33302055,33304106,33305591,33307576,33308773,33309430,33310834,33312539,33314529,33316583,33318631,33320679,33322727,33324775,33326823,33328871,33330919,33332967,33334990,33336848,33338455,33339916,33341293,33342477,33343523,33344564,33345432,33346130,33347007,33348001,33348816,33349761,33351481,33353529,33355577,33357625,33359673,33361721,33363769,33365817,33367865,33369913,33371961,33374009,33376057,33378105,33379874,33381086,33381783,33382473,33384361,33386409,33388457,33390505,33392496,33394082,33396130,33398178,33400226,33402279,33404336,33406384,33408432,33410394,33411820,33413335,33414983,33416246,33417604,33419652,33421517,33422594,33423244,33425064,33427011,33429022,33431071,33433119,33435176,33437229,33439276,33441199,33442815,33444567,33446422,33448356,33450328,33452383,33454438,33456486,33458534,33460582,33462638,33464686,33466736,33468724,33470486,33471913,33472654,33473449,33475193,33477248,33479296,33481344,33483392,33485440,33487488,33489536,33491584,33493641,33495616,33497329,33498752,33499762,33500703,33500886,33501489,33503537,33505571,33507528,33509430,33511224,33512938,33514745,33516793,33518810,33520546,33522147,33523482,33525196,33526997,33529035,33531083,33533011,33535017,33536086,33538134,33539802,33541661,33543614,33545662,33547313,33549207,33550517,33551931,33553064,33554773,33556735,33558766,33560763,33562773,33564794,33566766,33568677,33570725,33572778,33574808,33576432,33577376,33578814,33580787,33582835,33584883,33586931,33588785,33590598,33591799,33592623,33593783,33595839,33597887,33599935,33601983,33603428,33603798,33605689,33607737,33609782,33611830,33613886,33615943,33617991,33619936,33621984,33624040,33625522,33627574,33629629,33631406,33633463,33635511,33637163,33639184,33641204,33642662,33643993,33645951,33647400,33648180,33650233,33652281,33654337,33656394,33657635,33657757,33657909,33659327,33661378,33663426,33665474,33667530,33669578,33671626,33673680,33675381,33677312,33679095,33680557,33681365,33681512,33682689,33684689,33686737,33688688,33690736,33692784,33694837,33696885,33698915,33700963,33702818,33704811,33706499,33708423,33709820,33711707,33712951,33714555,33716203,33717874,33719135,33720428,33722233,33724277,33726254,33728302,33730350,33732398,33734446,33736494,33738542,33740590,33742638,33744686,33746734,33748788,33750838,33752813,33754756,33756523,33758557,33760225,33762197,33764238,33766111,33767604,33769513,33771316,33773372,33775420,33777468,33779516,33781564,33783612,33785660,33787716,33789764,33791799,33793757,33795520,33797110,33798525,33799666,33800544,33802047,33804095,33806143,33808191,33810239,33812287,33813619,33814553,33816601,33818649,33820623,33822590,33824638,33826606,33828628,33830644,33832670,33834718,33836775,33838831,33840870,33842873,33844546,33846012,33848040,33850087,33852135,33854099,33856014,33858045,33860093,33862141,33864197,33866245,33868293,33870346,33872387,33874353,33876110,33877475,33878048,33879461,33881509,33883557,33885605,33887662,33889710,33891651,33893708,33895756,33897804,33899852,33901641,33903036,33905084,33907132,33909180,33911228,33913276,33915324,33917372,33919420,33921237,33922480,33924528,33926576,33928624,33930672,33932720,33934719,33936670,33938718,33939778,33940207,33940711,33942063,33943997,33946045,33948093,33950141,33952189,33954237,33956285,33958342,33960397,33962445,33964499,33966521,33968444,33970229,33972016,33973763,33975337,33976745,33977999,33979245,33980511,33981557,33982373,33982921,33983459,33983987,33984447,33984911,33985346,33985722,33986165,33986620,33987071,33987595,33988141,33988394,33988761,33989598,33990743,33991952,33993210,33994327,33995402,33996386,33997223,33997939,33998481,33998754,33998903,33999617,34001532,34003585,34005262,34006976,34008891,34010855,34012903,34014955,34016972,34018994,34021042,34023087,34025142,34027158,34029026,34030548,34032460,34034495,34036094,34037598,34039588,34041388,34043418,34045466,34047471,34049460,34051372,34053420,34055468,34057503,34059373,34061403,34063451,34065480,34067398,34069394,34071374,34073078,34074489,34076047,34078099,34080147,34082180,34084234,34086282,34088245,34089927,34091804,34093765,34095821,34097829,34099881,34101929,34103986,34105910,34107854,34109733,34111512,34113345,34115304,34117254,34119150,34121148,34122994,34125016,34126960,34129008,34131056,34133104,34135159,34137161,34138745,34140070,34141901,34143038,34143988,34145383,34147438,34149486,34151526,34153518,34155462,34157288,34159067,34160964,34162723,34164703,34166595,34168492,34170449,34172409,34174357,34176404,34178259,34180091,34182036,34183528,34184997,34186969,34188986,34190995,34192863,34194721,34196586,34198434,34200207,34201932,34203454,34205378,34207053,34208520,34210003,34211307,34212177,34213430,34215436,34217388,34219245,34221064,34222793,34224387,34226144,34227794,34229116,34230576,34231834,34233310,34234596,34235817,34236983,34238049,34239422,34240554,34241635,34242890,34244330,34245500,34246976,34248575,34250391,34252184,34253934,34255901,34257888,34259938,34261920,34263918,34265727,34267447,34269006,34270417,34271212,34272803,34274593,34276625,34278673,34280721,34282769,34283791,34283905,34285368,34287424,34289472,34291452,34292909,34294937,34296048,34298100,34300148,34301602,34303300,34305348,34307396,34309444,34311492,34313031,34315085,34317013,34318485,34319917,34321965,34324013,34326061,34328117,34330174,34332227,34334167,34336222,34338270,34340318,34342366,34344414,34346462,34348510,34350558,34352606,34354654,34356702,34358751,34360778,34362829,34364877,34366925,34368973,34371021,34372981,34374930,34376960,34379015,34381063,34383113,34385165,34387220,34389277,34391325,34393373,34395421,34397476,34399084,34400578,34402634,34404687,34406737,34408785,34410833,34412885,34414939,34416833,34418770,34420532,34422100,34423703,34425139,34426909,34428692,34430274,34431702,34433035,34434144,34434972,34435202,34437147,34438934,34440851,34442898,34444955,34447006,34448898,34450337,34451657,34453705,34455753,34457507,34459559,34461607,34463655,34465662,34467156,34469154,34471211,34473095,34474703,34476169,34478005,34479829,34481003,34481812,34482443,34483912,34485331,34486768,34488099,34489290,34490726,34491364,34491965,34492769,34493165,34493470,34493933,34494402,34494729,34495679,34496619,34496951,34497334,34497776,34498281,34499037,34499554,34500071,34500700,34501049,34501365,34502033,34502724,34503482,34504169,34504733,34505843,34506649,34507241,34508230,34509028,34509604,34510564,34511090,34511686,34512311,34512717,34513251,34513901,34514274,34514971,34515348,34515667,34516439,34517040,34517778,34518404,34519564,34520388,34521541,34522568,34523532,34524187,34524784,34525326,34525716,34526302,34527001,34527724,34528155,34528339,34528829,34529235,34529864,34530288,34530651,34531167,34531767,34532143,34533215,34534613,34534885,34535260,34535690,34536023,34536565,34537174,34537804,34538320,34538786,34539471,34540110,34540654,34541009,34541504,34541982,34543102,34544102,34545086,34545914,34546246,34546823,34547181,34547689,34548110,34548548,34548822,34549442,34549630,34550053,34550647,34550876,34551181,34551411,34551936,34552569,34552882,34553370,34553892,34554177,34555002,34555826,34556339,34556580,34556926,34557246,34557709,34557977,34558197,34558558,34559066,34559984,34560521,34560951,34561397,34562023,34562548,34563022,34563455,34563942,34564628,34564953,34565284,34565939,34566505,34567337,34568194,34568786,34569102,34569401,34569710,34569980,34570537,34570881,34571245,34571465,34571650,34572115,34572698,34573447,34574102,34575175,34576595,34577602,34578670,34579239,34579858,34580074,34580536,34581153,34582114,34583450,34584350,34584897,34585826,34586402,34586975,34587601,34588279,34588920,34589698,34590481,34591013,34591621,34592184,34592730,34593409,34594337,34595132,34596317,34597507,34598922,34599653,34600291,34600843,34601476,34602470,34603679,34604859,34606050,34607246,34608460,34609202,34609623,34610177,34611339,34612493,34613299,34613791,34614421,34615672,34616082,34616352,34616634,34616839,34617157,34617408,34617585,34617721,34617952,34618361,34618757,34618896,34619031,34619164,34619533,34620091,34620707,34621048,34621653,34622248,34622669,34623582,34623914,34624532,34624704,34625142,34625594,34625945,34626250,34626723,34627374,34627817,34628384,34628876,34629150,34629441,34629860,34630271,34630570,34630778,34631026,34631217,34631499,34631763,34631952,34632451,34632750,34633021,34633197,34633487,34633674,34633907,34634438,34634932,34635586,34635868,34636515,34637563,34637857,34638369,34638795,34639309,34639946,34640534,34640863,34641444,34642295,34643330,34644370,34644829,34645393,34645740,34646118,34646552,34646875,34647312,34647725,34648037,34648294,34648531,34648802,34648945,34649824,34650828,34651549,34652229,34653061,34653489,34654188,34654620,34654905,34655413,34655933,34656471,34656814,34656977,34657371,34657672,34657844,34658191,34658495,34658878,34659372,34659543,34659779,34660111,34660270,34660442,34660729,34660895,34661267,34661720,34662025,34662301,34662697,34663004,34663326,34663841,34664162,34664514,34665016,34665753,34666578,34667865,34668563,34669074,34669522,34670163,34670640,34671105,34671714,34671995,34672478,34673374,34674419,34675000,34675315,34676527,34677564,34678565,34679670,34680149,34680769,34681135,34681913,34682482,34683112,34683635,34683944,34684207,34684522,34684837,34685149,34686313,34687332,34687816,34688170,34688591,34689117,34689471,34689906,34690430,34691193,34691873,34692562,34693365,34693737,34694285,34695012,34695864,34696390,34697312,34698205,34699074,34699923,34700675,34701501,34703203,34705089,34706455,34707450,34708438,34709429,34711131,34713017,34714903,34715893,34716881,34717870,34719577,34720738,34721955,34722972,34724311,34724782,34725677,34726268,34727455,34727849,34728264,34729132,34729914,34730647,34731331,34732166,34732879,34733598,34734330,34734982,34735643,34736262,34736880,34737832,34738144,34738266,34738442,34738982,34739438,34739605,34739727,34740006,34740415,34740744,34741220,34741690,34742518,34743532,34744269,34744578,34745112,34745559,34746027,34746370,34746917,34747369,34747767,34748062,34748469,34749062,34749973,34751253,34752756,34753251,34753829,34754438,34754937,34755250,34755679,34756160,34756727,34757166,34757583,34758013,34758547,34758984,34759433,34759748,34760155,34760477,34760860,34761076,34761378,34761592,34762081,34762413,34762733,34762987,34763170,34763463,34763981,34764273,34764516,34764900,34765059,34765776,34765967,34766402,34766554,34767153,34767727,34768346,34768632,34768772,34769080,34769540,34769906,34770337,34770845,34771138,34771786,34772568,34773024,34773300,34773905,34774641,34774884,34775504,34776415,34777032,34777239,34777308,34777565,34778448,34779293,34779741,34780340,34781104,34781622,34782234,34782533,34783161,34783655,34784056,34784558,34785026,34785503,34786091,34786390,34786863,34787542,34788016,34788568,34789296,34790128,34790637,34791318,34792061,34792409,34792934,34793411,34793870,34794640,34795418,34796165,34796793,34797225,34797841,34798465,34798973,34799727,34800378,34801221,34801528,34802147,34802708,34803538,34803807,34804067,34804583,34804792,34805220,34805407,34805594,34805818,34806215,34806374,34806762,34807232,34807360,34807682,34807825,34807994,34808268,34808394,34808531,34809267,34809798,34810252,34810710,34811129,34811565,34811800,34812023,34812411,34812803,34813068,34813427,34814339,34814661,34815067,34815463,34815915,34816272,34816889,34817783,34818661,34819644,34820397,34821165,34821789,34821993,34822844,34823768,34824135,34825129,34826233,34826548,34827357,34828119,34829298,34830464,34830833,34831209,34831643,34831949,34833135,34834470,34835552,34836809,34838181,34839625,34841115,34842552,34844064,34845591,34847105,34848628,34850137,34851597,34853112,34854622,34856203,34857719,34859255,34860743,34862224,34863806,34865236,34866604,34867915,34869164,34870389,34871713,34873059,34874319,34875513,34876663,34877718,34878838,34880411,34881959,34883823,34885542,34887277,34889047,34890702,34892413,34894117,34895834,34897553,34899287,34901015,34902723,34904469,34906234,34908005,34909727,34911442,34912996,34914685,34916351,34918017,34919709,34921402,34923115,34924822,34926547,34928218,34929861,34931512,34933191,34934807,34936374,34938048,34939789,34941536,34943159,34944854,34946510,34948132,34949828,34951569,34953284,34955043,34956875,34958733,34960544,34962362,34964169,34965911,34967621,34969349,34971107,34972883,34974748,34976560,34978236,34979950,34981760,34983499,34985215,34987022,34988809,34990569,34992248,34993961,34995606,34997119,34999003,35000605,35002271,35003859,35005446,35007088,35008711,35010381,35012103,35013803,35015470,35017168,35018904,35020611,35022342,35024040,35025690,35027393,35029146,35030846,35032551,35034242,35035889,35037558,35039247,35040888,35042545,35044129,35045742,35047320,35048848,35050349,35051841,35053720,35055343,35056919,35058450,35059812,35061257,35062798,35064258,35065752,35066961,35068230,35069688,35071150,35072433,35073774,35075175,35076517,35077844,35079287,35080871,35082404,35083962,35085438,35086814,35088244,35089757,35091119,35092462,35094007,35095584,35097026,35098557,35100164,35101645,35103394,35104854,35106308,35107670,35109145,35110669,35112111,35113632,35115022,35116564,35117938,35119254,35120511,35121837,35122050,35122269,35122552,35122768,35123012,35123750,35125022,35126530,35127784,35128652,35129963,35131212,35132145,35133539,35135050,35136134,35137645,35139334,35140635,35141690,35143169,35144262,35145985,35147088,35148713,35150255,35151907,35153410,35155137,35156639,35157926,35159485,35160753,35162421,35163817,35165188,35166961,35168222,35169899,35171473,35172864,35174417,35175677,35177200,35178657,35180183,35181948,35183177,35184474,35186125,35187827,35189135,35190832,35192237,35193753,35195265,35196862,35198359,35199725,35201225,35202769,35204194,35205954,35207277,35208905,35210407,35211716,35213179,35214729,35216220,35217637,35218917,35220607,35222056,35223796,35225344,35226770,35228452,35229474,35230905,35232418,35234124,35235304,35236808,35238388,35240044,35241476,35243066,35244474,35245902,35247465,35248992,35250352,35251670,35253099,35254582,35255938,35257252,35258795,35259968,35261367,35262717,35264301,35265857,35267541,35269225,35270590,35271954,35273392,35274862,35276169,35277994,35279344,35280933,35282374,35284030,35285182,35286980,35288619,35290020,35291846,35293563,35295366,35296656,35298270,35299843,35301165,35303071,35304555,35306134,35307751,35309329,35311025,35312853,35314286,35315954,35317702,35319472,35321032,35322728,35324354,35325719,35327410,35328854,35330432,35332111,35333969,35335279,35336578,35338091,35339785,35341460,35343229,35344550,35346343,35348067,35349453,35351099,35352654,35354672,35356726,35358738,35360760,35362804,35364853,35366849,35368904,35370923,35372944,35374957,35376993,35379016,35381053,35383076,35385124,35387177,35389216,35391263,35393256,35395242,35397246,35399286,35401310,35403347,35405396,35407444,35409472,35411525,35413575,35415591,35417608,35419637,35421682,35423732,35425764,35427813,35429867,35431902,35433920,35435941,35437775,35439761,35441797,35443839,35445889,35447921,35449950,35451973,35454013,35456030,35458017,35460012,35461993,35463974,35465983,35467976,35469998,35472040,35474066,35476108,35478138,35480127,35482094,35484085,35486087,35488092,35490079,35492115,35494132,35496163,35498214,35500242,35502230,35504194,35506194,35508215,35510199,35512205,35514256,35516305,35518361,35520384,35522398,35524375,35526363,35528397,35530414,35532447,35534479,35536521,35538560,35540605,35542645,35544689,35546731,35548778,35550833,35552877,35554917,35556959,35558954,35560913,35562893,35564903,35566867,35568804,35570810,35572797,35574795,35576738,35578727,35580685,35582663,35584650,35586649,35588617,35590541,35592516,35594514,35596472,35598423,35600413,35602404,35604379,35606371,35608321,35610303,35612276,35614264,35616265,35618220,35620183,35622188,35624163,35626166,35628122,35630086,35632077,35634082,35636063,35638063,35640040,35642029,35644019,35646006,35647978,35649889,35651861,35653848,35655834,35657818,35659800,35661775,35663744,35665725,35667717,35669687,35671649,35673667,35675667,35677666,35679653,35681658,35683651,35685667,35687646,35689631,35691643,35693614,35695550,35697377,35699160,35700973,35702732,35704516,35706429,35708355,35710157,35711889,35713789,35715535,35717450,35719183,35720964,35722805,35724742,35726667,35728570,35730370,35732112,35734022,35735834,35737674,35739410,35741048,35742748,35744469,35746006,35747762,35749698,35751619,35753403,35755180,35757204,35759252,35761279,35763278,35765207,35767116,35768917,35770842,35772714,35774576,35776511,35778226,35779963,35781645,35783524,35785398,35787310,35789087,35790905,35792747,35794494,35796224,35797933,35799834,35801671,35803532,35805368,35807180,35808898,35810701,35812343,35814198,35816009,35817892,35819729,35821609,35823319,35825310,35827035,35828826,35830421,35832200,35834073,35835919,35837630,35839598,35841403,35843235,35845066,35846717,35848494,35850181,35852033,35853921,35855763,35857519,35859442,35861171,35863002,35864584,35866360,35868013,35869979,35871885,35873854,35875754,35877574,35879502,35881384,35883224,35884927,35886888,35888773,35890774,35892714,35894670,35896662,35898545,35900232,35902188,35903967,35905813,35907470,35909304,35911136,35912962,35914923,35916733,35918586,35920507,35922332,35924193,35925996,35927908,35929722,35931606,35933384,35935330,35937188,35938917,35940824,35942587,35944488,35946254,35948023,35949900,35951712,35953432,35955183,35956971,35958792,35960528,35962439,35964343,35966214,35968148,35970049,35971986,35973925,35975876,35977835,35979739,35981689,35983572,35985519,35987462,35989402,35991338,35993275,35995169,35997082,35999109,36000987,36002427,36003825,36005215,36006635,36008069,36009556,36011138,36012540,36014117,36015618,36017133,36018704,36020448,36022155,36023631,36025329,36027132,36029110,36031081,36032946,36034887,36036586,36038452,36040277,36042024,36043992,36045940,36047919,36049717,36051735,36053448,36055412,36057141,36058930,36060850,36062649,36064630,36066608,36068450,36070434,36072110,36074014,36075841,36077544,36079496,36081403,36083389,36085111,36087084,36088878,36090698,36092454,36094266,36095930,36097867,36099813,36101777,36103577,36105616,36107439,36109298,36111099,36112952,36114709,36116572,36118507,36120431,36122246,36124256,36125999,36127958,36129735,36131546,36133478,36135388,36137383,36139356,36141243,36143225,36144924,36146810,36148675,36150454,36152444,36154405,36156349,36158290,36160206,36162172,36164131,36166066,36167922,36169850,36171751,36173424,36175107,36177068,36179094,36181049,36183015,36185011,36187025,36189017,36191043,36193059,36195072,36197068,36199050,36201060,36203007,36204995,36206988,36208969,36210969,36212960,36214973,36216950,36218906,36220905,36222880,36224886,36226879,36228869,36230875,36232901,36234921,36236915,36238916,36240934,36242944,36244969,36246978,36248993,36251023,36253004,36255002,36257016,36259031,36261049,36263070,36265085,36267085,36269093,36271073,36273104,36275137,36277149,36279151,36281159,36283147,36285160,36287140,36289139,36291129,36293153,36295154,36297171,36299169,36301163,36303165,36305217,36307267,36309268,36311238,36313109,36314839,36316620,36318319,36320040,36321725,36323397,36325176,36326874,36328412,36330130,36331868,36333577,36335210,36337016,36338698,36340353,36342087,36343837,36345376,36347021,36348826,36350439,36352112,36353880,36355668,36357420,36359078,36360848,36362670,36364425,36366110,36367844,36369600,36371344,36373083,36374806,36376546,36378544,36380461,36382418,36384425,36386413,36388367,36390282,36392213,36394165,36396150,36398127,36400098,36402105,36404085,36406057,36408043,36410038,36412021,36413982,36415967,36417920,36419929,36421927,36423913,36425896,36427858,36429865,36431813,36433775,36435766,36437760,36439760,36441763,36443732,36445714,36447674,36449660,36451618,36453566,36455520,36457425,36459326,36461183,36463147,36465021,36466838,36468734,36470553,36472399,36474310,36476158,36478068,36479911,36481774,36483703,36485569,36487457,36489371,36491289,36493287,36495274,36497271,36499181,36501152,36503057,36504953,36506843,36508786,36510717,36512689,36514565,36516508,36518476,36520420,36522379,36524337,36526228,36528187,36529928,36531857,36533747,36535802,36537841,36539884,36541876,36543888,36545899,36547917,36549927,36551970,36553990,36556034,36558062,36560118,36562166,36564189,36566176,36568167,36570133,36572162,36574205,36576262,36578317,36580335,36582389,36584410,36586406,36588425,36590480,36592505,36594549,36596588,36598642,36600690,36602732,36604762,36606742,36608682,36610705,36612729,36614749,36616785,36618819,36620867,36622863,36624845,36626869,36628859,36630812,36632794,36634810,36636861,36638879,36640906,36642921,36644905,36646909,36648908,36650882,36652852,36654846,36656864,36658893,36660928,36662953,36664970,36666963,36668981,36670969,36672961,36674942,36676936,36678931,36680964,36682999,36685030,36687075,36689100,36691156,36693158,36695168,36697169,36699169,36701151,36703182,36705204,36707257,36709305,36711352,36713376,36715415,36717446,36719496,36721549,36723591,36725636,36727687,36729681,36731626,36733623,36735626,36737610,36739568,36741544,36743541,36745550,36747542,36749537,36751498,36753481,36755421,36757386,36759341,36761321,36763301,36765305,36767280,36769232,36771191,36773053,36774964,36776930,36778899,36780866,36782879,36784867,36786875,36788858,36790851,36792724,36794717,36796570,36798517,36800467,36802439,36804222,36806163,36808209,36810241,36812264,36814303,36816342,36818251,36820067,36822029,36824014,36825996,36827871,36829774,36831681,36833658,36835627,36837523,36839443,36841374,36843336,36845303,36847199,36849032,36850976,36852982,36854962,36856808,36858709,36860644,36862607,36864534,36866385,36868268,36870212,36872144,36874126,36876009,36877856,36879792,36881772,36883711,36885598,36887509,36889491,36891403,36893246,36895114,36897078,36898985,36900856,36902680,36904423,36906349,36908292,36910186,36912089,36913997,36915830,36917705,36919611,36921485,36923350,36925245,36927125,36928959,36930830,36932654,36934469,36936472,36938408,36940331,36942267,36944178,36946019,36947869,36949737,36951591,36953388,36955394,36957397,36959410,36961450,36963450,36965459,36967229,36969062,36971019,36972932,36974980,36977008,36979025,36980945,36982929,36984934,36986938,36988933,36990913,36992867,36994834,36996878,36998844,37000845,37002545,37004530,37006534,37008566,37010537,37012327,37014341,37016338,37018394,37020354,37022202,37024194,37026193,37028219,37030235,37032218,37034008,37035970,37037980,37040004,37041997,37043989,37046011,37048042,37050049,37052056,37054065,37055967,37057984,37059982,37061957,37063933,37065955,37067978,37070018,37072042,37074081,37076091,37077973,37079955,37081940,37083922,37085899,37087909,37089892,37091829,37093792,37095778,37097721,37099718,37101595,37103586,37105592,37107540,37109485,37111465,37113471,37115425,37117264,37119208,37121157,37123136,37124991,37126881,37128885,37130871,37132875,37134906,37136860,37138769,37140682,37142627,37144548,37146458,37148385,37150363,37152343,37154313,37156313,37158335,37160309,37162299,37164283,37166206,37168191,37170131,37172099,37174099,37176103,37178070,37180092,37182068,37184062,37186008,37187972,37189929,37191877,37193754,37195735,37197692,37199652,37201613,37203647,37205599,37207588,37209608,37211578,37213587,37215593,37217548,37219515,37221510,37223450,37225434,37227427,37229431,37231393,37233293,37235254,37237252,37239189,37241140,37243107,37245068,37247047,37249004,37250951,37252878,37254810,37256774,37258623,37260488,37262450,37264411,37266320,37268205,37270152,37272057,37274033,37275978,37277890,37279860,37281857,37283785,37285760,37287774,37289674,37291679,37293579,37295591,37297565,37299515,37301517,37303541,37305542,37307596,37309639,37311506,37313519,37315527,37317476,37319500,37321533,37323587,37325627,37327669,37329625,37331640,37333662,37335628,37337651,37339687,37341713,37343732,37345766,37347751,37349788,37351805,37353809,37355836,37357874,37359914,37361957,37363998,37365948,37367960,37369981,37371956,37374001,37376027,37378080,37380128,37382184,37384160,37386174,37388192,37390183,37392227,37394263,37396310,37398345,37400385,37402346,37404336,37406282,37408298,37410120,37412108,37414076,37416057,37418054,37420051,37422083,37424099,37426096,37428086,37429895,37431894,37433885,37435860,37437891,37439867,37441834,37443864,37445840,37447815,37449843,37451781,37453699,37455612,37457421,37459137,37460707,37462267,37463688,37465270,37466701,37468114,37469494,37470979,37472315,37473397,37475040,37476238,37477626,37478845,37480456,37481535,37482937,37484208,37485106,37486536,37487937,37489301,37490418,37491716,37493304,37494142,37495323,37496740,37497881,37499318,37500604,37501844,37503200,37504364,37505949,37507103,37508492,37509988,37511372,37512922,37514269,37515797,37517272,37518800,37520436,37521659,37523123,37524607,37525965,37527312,37528786,37530078,37531420,37532551,37534180,37535388,37536840,37538113,37538976,37540623,37542039,37543339,37544513,37545754,37547358,37548222,37549393,37550851,37552081,37553654,37554713,37556012,37557272,37558559,37560079,37561411,37562876,37564387,37565610,37567270,37568679,37570202,37571747,37573122,37574718,37575996,37577506,37579029,37580252,37581853,37583070,37584449,37585745,37587022,37588519,37589806,37591259,37592491,37593310,37594954,37596338,37597586,37598772,37600010,37601599,37602428,37603638,37605068,37606278,37607858,37608846,37610172,37611453,37612728,37614242,37615595,37617064,37618550,37619762,37621424,37622830,37624345,37625908,37627229,37628792,37630137,37631634,37633069,37634223,37635841,37637048,37638498,37639729,37641191,37642538,37643756,37645192,37646356,37647298,37648854,37650302,37651421,37652683,37654088,37655392,37656345,37657621,37658969,37660026,37661575,37662731,37664126,37665287,37666867,37668023,37669373,37670850,37672225,37673721,37675169,37676720,37678180,37679734,37681240,37682556,37683998,37685476,37686941,37688122,37689713,37690971,37692357,37693457,37695071,37696275,37697793,37699103,37699972,37701533,37702850,37704224,37705341,37706631,37708274,37709210,37710296,37711653,37712979,37714382,37715672,37716921,37718176,37719321,37720992,37722224,37723742,37725252,37726512,37728097,37729459,37730974,37732509,37733905,37735562,37736821,37738284,37739794,37741120,37742699,37743947,37745309,37746650,37747843,37749395,37750592,37752029,37753232,37754100,37755689,37757065,37758353,37759550,37760853,37762424,37763233,37764500,37765931,37767126,37768732,37769758,37771127,37772394,37773706,37775263,37776579,37778107,37779617,37780852,37782465,37783858,37785413,37787049,37788416,37790016,37791376,37792947,37794491,37795667,37797189,37798487,37799815,37801107,37802272,37803776,37804984,37806434,37807673,37808506,37810124,37811469,37812767,37813952,37815194,37816796,37817595,37818840,37820263,37821401,37822966,37823992,37825318,37826602,37827953,37829405,37830587,37832092,37833640,37834999,37836636,37838052,37839629,37841212,37842639,37844264,37845607,37847187,37848717,37849944,37851326,37852809,37854108,37855419,37856557,37858164,37859339,37860766,37862054,37862920,37864426,37865796,37867174,37868301,37869595,37871209,37872079,37873206,37874605,37875816,37877086,37878427,37879626,37881031,37882266,37883949,37885097,37886525,37888096,37889542,37890995,37892511,37894045,37895473,37897029,37898567,37900028,37901414,37902932,37904338,37905545,37907225,37908408,37909837,37911006,37912601,37913795,37915220,37916589,37917486,37918869,37920199,37921596,37922687,37924026,37925350,37926632,37927630,37928946,37930355,37931571,37933136,37934246,37935649,37936791,37938447,37939666,37941138,37942567,37943942,37945440,37946928,37948529,37950004,37951580,37953166,37954540,37956010,37957563,37958932,37960152,37961825,37963097,37964542,37965721,37967309,37968500,37969948,37971330,37972274,37973587,37974935,37976358,37977456,37978791,37979956,37981494,37982388,37983700,37985184,37986496,37988130,37989205,37990607,37991932,37993477,37994823,37996190,37997704,37999213,38000438,38002164,38003784,38005359,38006996,38008363,38010091,38011313,38012536,38013813,38015197,38016490,38018335,38019823,38021283,38022514,38023808,38025367,38026857,38028362,38030156,38031509,38032844,38034131,38035693,38037112,38038591,38040436,38041883,38043325,38044626,38045931,38047409,38048788,38050180,38052004,38053438,38055008,38056367,38057618,38059093,38060300,38061629,38063078,38064780,38065891,38067123,38068392,38069908,38071484,38072803,38074218,38075662,38077156,38078590,38080286,38081997,38083694,38085588,38087153,38089120,38091011,38092828,38094577,38096415,38098230,38100019,38101931,38102878,38103886,38105631,38107334,38109135,38110809,38112525,38114173,38115662,38116421,38117677,38119673,38121558,38123317,38124837,38126005,38127553,38129167,38130998,38132497,38134311,38136059,38137989,38139392,38141228,38142923,38144715,38146612,38148513,38150404,38152096,38153613,38155532,38157045,38158997,38160694,38162623,38164310,38166147,38168013,38169917,38171644,38173472,38175311,38177151,38179047,38180936,38182610,38184297,38185922,38187472,38189042,38190662,38192149,38193879,38195387,38196976,38198582,38200044,38201643,38203078,38204678,38206183,38207603,38209041,38210883,38212759,38214696,38216425,38218292,38220128,38221979,38223758,38225683,38227579,38229310,38231213,38233069,38234912,38236780,38238781,38240699,38242648,38244553,38246531,38248482,38250454,38252318,38254267,38256233,38258186,38260069,38261975,38263761,38265674,38267421,38269477,38271524,38273566,38275555,38277514,38279398,38281104,38283073,38285003,38286909,38288896,38290827,38292800,38294747,38296682,38298634,38300553,38302501,38304425,38306309,38308280,38310239,38312170,38314068,38315988,38317908,38319821,38321688,38323587,38325379,38327259,38329089,38330876,38332622,38334358,38336046,38337726,38339052,38340794,38342648,38344193,38346053,38347563,38349289,38350951,38352522,38354275,38355847,38357177,38358340,38359463,38360707,38362145,38363889,38365587,38367000,38368127,38369720,38371435,38372847,38373974,38375887,38377771,38379549,38381266,38383071,38384848,38386483,38388389,38390208,38391904,38393577,38395260,38396978,38398527,38400323,38402059,38403536,38405192,38406622,38408187,38409768,38411125,38412391,38414025,38415649,38416765,38417761,38419387,38420913,38422478,38424389,38426390,38428357,38430340,38432315,38434244,38436091,38437653,38439214,38441088,38443094,38444919,38446803,38448700,38450490,38452224,38453988,38455745,38457389,38459253,38461110,38462881,38464705,38466407,38468209,38469805,38471316,38473012,38474565,38476243,38478005,38479790,38481679,38483130,38484992,38486467,38488113,38489488,38491277,38493194,38494985,38496724,38498084,38499454,38501180,38502873,38504512,38505988,38507577,38509294,38510910,38512427,38514089,38515610,38517295,38518911,38520180,38521780,38523251,38524870,38526557,38527812,38529446,38530891,38532585,38534238,38535620,38537106,38538699,38540277,38541446,38542690,38544069,38545238,38546699,38547934,38549500,38550628,38551992,38553427,38554712,38556234,38557483,38558787,38560313,38561788,38563293,38564951,38566730,38567996,38569664,38571505,38573420,38575242,38577106,38578989,38580945,38582416,38584054,38585309,38586932,38588550,38590588,38592618,38594499,38596019,38597846,38599540,38601349,38603187,38604714,38606535,38608328,38610109,38611795,38613584,38615025,38616615,38618147,38619393,38621187,38623065,38624736,38626303,38628188,38629464,38631316,38633158,38635021,38636513,38638130,38639839,38641508,38643204,38644936,38646950,38648423,38649946,38651734,38653411,38655214,38656842,38658579,38660082,38660608,38661224,38661702,38662507,38663076,38663679,38664087,38664709,38666067,38668060,38670023,38671974,38673906,38675872,38677833,38679784,38681716,38683552,38685186,38686798,38688453,38690267,38691851,38693455,38695007,38696599,38698385,38699935,38701712,38703108,38704612,38706073,38707579,38708974,38710366,38711848,38713407,38714725,38715976,38717258,38718758,38720195,38721704,38723136,38724473,38726097,38727574,38729148,38730603,38732043,38733411,38734833,38736257,38737687,38739044,38740448,38742212,38743958,38745764,38747627,38749524,38751410,38753243,38755008,38756766,38758539,38760202,38761953,38763759,38765597,38767366,38769090,38770779,38772264,38773093,38773903,38774751,38775819,38777520,38779213,38780928,38782544,38784231,38785812,38787384,38789043,38790720,38792431,38794086,38795827,38797489,38799240,38801030,38802882,38804671,38806345,38808018,38809459,38811255,38812696,38814496,38816045,38817960,38819589,38821454,38823248,38825110,38826828,38828677,38830471,38832349,38833569,38834625,38835663,38836696,38837770,38838851,38839920,38841004,38842512,38844065,38845628,38847138,38848731,38850256,38851790,38853330,38854893,38856440,38857925,38859559,38861157,38862668,38863671,38864699,38865769,38866923,38868374,38869791,38871568,38873369,38874944,38876092,38877362,38878863,38880182,38881284,38882769,38884486,38885703,38887270,38888890,38890452,38892022,38893655,38895255,38896609,38897834,38898697,38899806,38900466,38901355,38902102,38902853,38904330,38905701,38906938,38907451,38908303,38908828,38909366,38910129,38910692,38911583,38912324,38913259,38913795,38914485,38915166,38915850,38916705,38917193,38918039,38918737,38919660,38920167,38920697,38921617,38922328,38923179,38923624,38924430,38925031,38925822,38926085,38926364,38926892,38927133,38927815,38928064,38928656,38928915,38929136,38929684,38929860,38930403,38930581,38931102,38931142,38931544,38931805,38932032,38932590,38932810,38933968,38935403,38936910,38938112,38939335,38940562,38941805,38942966,38943912,38944902,38945872,38946843,38947806,38948796,38949805,38951200,38952586,38953985,38955394,38956884,38958401,38959802,38961179,38962569,38964172,38965642,38967154,38968736,38970350,38971923,38973437,38974930,38976541,38977929,38979342,38980750,38982151,38983554,38984953,38986407,38987832,38989237,38990621,38992031,38993404,38994686,38995627,38996563,38997495,38998591,38999530,39000487,39001433,39002339,39003416,39004320,39005306,39006220,39007550,39008954,39010402,39011781,39013127,39014066,39014982,39015914,39016972,39018680,39020247,39021848,39023440,39024907,39026457,39028043,39029642,39031375,39032750,39034059,39035405,39036701,39037989,39039289,39040659,39041999,39043607,39045162,39046696,39047970,39049318,39050732,39051990,39053479,39055083,39056753,39058299,39059865,39061457,39063247,39064914,39066672,39068252,39069718,39070941,39072401,39073838,39075245,39076496,39077677,39079164,39080624,39082154,39083624,39085016,39086621,39088047,39089762,39091434,39093019,39094660,39096200,39097806,39099376,39100977,39102666,39104302,39105954,39107538,39109187,39110614,39112235,39113794,39115352,39117006,39118673,39120265,39121880,39123437,39124976,39126571,39128180,39129723,39131497,39133165,39134759,39136443,39137878,39139508,39141083,39142665,39144363,39145955,39147543,39149081,39150677,39152519,39154033,39155594,39157129,39158931,39160561,39162161,39163729,39165328,39167137,39168705,39170422,39172013,39173567,39174500,39175439,39176401,39177485,39179010,39180537,39182106,39183601,39185127,39186429,39187720,39189052,39190419,39191547,39192748,39193999,39195418,39196578,39197551,39198535,39199645,39200996,39202159,39203264,39204340,39205528,39206595,39207538,39208427,39209926,39211735,39213272,39215144,39216730,39218239,39219657,39221084,39222388,39223801,39225216,39226643,39228000,39229648,39231167,39232683,39234205,39235740,39237249,39238750,39240296,39241823,39243419,39244807,39246200,39247583,39248954,39250351,39251693,39253059,39254718,39256248,39257753,39259287,39260872,39262421,39263929,39265450,39266988,39268746,39270353,39271962,39273609,39275239,39276825,39278425,39280087,39281881,39283374,39284829,39286251,39287651,39289118,39290563,39291965,39293382,39295213,39296975,39298711,39300389,39302136,39303884,39305595,39307294,39309154,39310943,39312676,39314363,39316020,39317762,39319430,39321118,39322785,39324393,39325416,39326661,39327746,39328853,39329967,39331056,39332338,39333454,39334525,39335453,39336366,39337048,39337747,39338454,39339743,39341472,39343205,39344934,39346620,39348367,39350050,39351790,39353451,39355321,39357063,39358765,39360404,39362111,39363784,39365514,39367237,39369084,39370883,39372635,39374434,39376158,39377947,39379707,39381507,39383226,39385109,39386821,39388535,39390169,39391833,39393503,39395224,39396894,39398677,39400076,39401593,39402976,39404457,39405742,39406733,39407724,39408748,39410413,39412235,39414040,39415856,39417526,39419408,39421176,39423028,39424838,39426416,39427601,39428800,39430229,39431892,39432929,39433963,39435033,39436768,39438446,39440054,39441653,39443215,39444859,39446485,39448078,39449728,39451347,39452821,39454266,39455654,39457050,39458516,39459916,39461381,39462843,39464539,39466011,39467634,39469143,39470603,39472052,39473502,39474949,39476624,39478228,39479844,39481433,39482989,39484626,39486239,39487843,39489604,39491117,39492583,39494035,39495519,39496944,39498382,39499810,39501262,39502888,39504726,39506556,39508394,39510079,39511937,39513721,39515566,39517392,39519101,39520745,39522359,39524013,39525553,39527216,39528816,39530431,39532095,39533611,39535112,39536568,39537941,39539519,39540998,39542453,39543864,39545702,39547516,39549352,39551224,39552909,39554774,39556577,39558442,39560174,39561857,39563498,39565097,39566757,39568372,39570005,39571597,39573300,39574869,39576346,39577776,39579274,39580647,39582117,39583554,39584985,39586572,39588390,39590189,39592038,39593919,39595604,39597430,39599245,39601103,39602660,39603367,39605171,39606028,39606726,39607894,39608575,39609366,39610437,39611126,39612291,39613674,39614323,39615046,39615925,39617318,39618358,39619618,39621022,39622255,39622956,39624118,39625444,39626583,39627905,39629026,39630735,39631946,39633195,39634204,39635557,39637247,39638793,39640553,39642200,39643957,39645496,39647148,39648747,39650406,39651429,39652333,39653756,39655284,39656865,39657894,39658903,39659912,39660905,39662284,39663381,39664455,39665544,39666847,39668492,39670521,39672558,39674561,39676581,39678593,39680609,39682598,39684604,39686639,39688672,39690674,39692678,39694688,39696703,39698706,39700676,39702704,39704725,39706750,39708754,39710765,39712775,39714785,39716761,39718772,39720804,39722857,39724873,39726888,39728907,39730928,39732936,39734887,39736918,39738913,39740811,39742728,39744616,39746511,39748439,39750284,39752138,39754025,39755907,39757789,39759689,39761524,39763416,39765222,39767083,39768958,39770820,39772482,39774158,39775833,39777511,39779181,39780824,39782430,39784213,39785870,39787522,39789189,39790819,39792469,39794125,39795767,39797342,39799023,39800458,39801924,39803359,39804772,39806207,39807624,39808990,39810509,39812066,39813498,39814951,39816587,39817963,39819483,39820934,39822635,39824020,39825501,39827016,39828644,39830115,39831572,39833121,39834690,39836186,39837474,39839040,39840384,39842344,39844112,39845580,39847221,39848847,39850390,39851947,39853498,39855214,39856785,39858345,39859941,39861593,39863358,39865044,39866626,39868172,39869844,39871388,39872971,39874511,39876066,39877616,39879177,39880700,39882241,39883804,39885276,39886960,39888556,39890104,39891735,39893456,39895043,39896707,39898448,39900249,39901751,39903305,39905267,39907155,39908854,39910548,39912383,39914349,39916276,39918210,39920183,39922115,39924072,39925990,39927926,39929741,39931580,39933455,39935372,39937328,39939182,39941043,39942867,39944685,39946459,39948238,39950003,39951954,39953934,39955890,39957848,39959756,39961680,39963570,39965481,39967428,39969441,39971316,39973222,39975074,39976889,39978706,39980534,39982311,39984252,39986241,39988235,39990208,39992180,39994123,39996046,39997958,39999890,40001864,40003653,40005425,40007168,40008907,40010666,40012421,40014142,40015946,40017843,40019636,40021447,40023280,40025043,40026852,40028655,40030446,40032296,40033780,40035233,40036653,40038097,40039505,40040947,40042382,40043818,40045804,40047760,40049686,40051727,40053660,40055591,40057475,40059373,40061272,40063190,40065085,40067067,40068998,40070939,40072865,40074741,40076644,40078579,40080469,40082408,40084252,40085759,40087289,40088901,40090503,40092091,40093686,40095190,40096861,40098746,40100554,40102342,40104087,40105869,40107606,40109344,40111063,40112786,40114108,40115413,40116716,40118077,40119359,40120701,40122069,40123460,40125180,40126840,40128486,40130167,40131840,40133472,40135165,40136881,40138662,40140154,40141623,40143145,40144723,40146261,40147773,40149253,40150705,40152396,40154040,40155545,40157236,40158913,40160438,40162112,40163509,40164874,40166214,40167522,40168740,40170014,40171186,40172505,40174285,40176174,40178034,40179918,40181822,40183697,40185562,40187436,40189361,40191310,40193228,40195093,40196965,40198846,40200732,40202619,40204475,40206341,40207776,40209228,40210589,40211990,40213480,40214944,40216418,40217881,40219697,40221363,40223053,40224817,40226467,40228084,40229638,40231180,40232624,40234151,40235726,40237334,40238966,40240699,40242420,40244130,40245789,40247461,40248913,40250418,40251892,40253341,40254665,40256072,40257485,40259117,40260567,40262089,40263577,40265131,40266521,40268035,40269549,40271019,40272706,40274188,40275710,40277196,40278289,40279770,40281308,40282828,40284439,40286386,40288328,40290276,40291867,40293279,40294706,40296132,40297089,40298499,40299878,40301289,40302867,40304069,40305243,40306327,40307426,40308569,40309658,40310817,40312004,40313576,40315005,40316473,40318472,40320355,40322258,40324177,40326074,40327970,40329880,40331802,40333483,40335091,40336568,40338076,40339537,40340806,40341770,40342630,40343474,40344364,40345226,40346187,40346948,40347807,40348773,40349730,40350500,40351418,40352337,40353367,40354285,40355420,40356734,40357954,40359293,40360600,40361267,40361664,40362307,40362927,40363248,40363503,40363888,40364732,40366066,40366817,40367789,40368691,40369798,40370915,40371865,40373231,40373809,40374030,40374471,40374798,40375152,40376568,40378005,40379487,40381261,40383088,40384832,40386654,40388462,40390274,40392057,40393791,40395565,40397276,40398917,40400549,40402116,40403730,40405352,40407006,40408564,40410246,40411601,40412930,40414273,40415570,40417212,40418894,40420573,40422239,40423915,40425570,40427194,40428894,40430573,40432244,40433925,40435589,40436687,40438250,40440088,40441954,40443717,40445515,40447336,40449207,40450993,40452786,40454371,40455824,40457288,40458738,40460444,40462321,40464164,40466039,40467874,40469745,40471606,40473459,40475348,40477188,40478470,40480178,40481341,40482459,40483689,40484791,40486079,40488100,40490098,40492052,40493983,40495948,40497891,40499794,40501686,40503579,40505544,40507489,40509428,40511357,40513260,40515152,40517084,40519103,40520792,40522460,40524228,40526048,40527851,40529633,40531283,40532898,40534848,40536895,40538948,40540993,40543047,40545088,40547140,40549181,40551234,40553290,40555341,40557380,40559416,40561461,40563501,40565536,40567584,40569618,40571510,40573429,40575270,40577124,40578948,40580799,40582619,40584501,40586454,40588356,40590229,40592074,40593935,40595784,40597631,40599472,40601447,40603281,40605046,40605815,40606645,40607422,40608142,40608872,40609374,40610166,40611078,40611872,40612265,40612947,40613729,40614585,40615264,40615661,40616400,40617255,40618090,40618597,40619099,40619873,40620710,40621630,40622133,40622658,40623902,40624952,40626082,40626629,40627231,40628425,40629495,40630583,40630961,40631800,40632961,40633988,40634935,40635328,40636382,40637518,40638607,40639342,40640722,40641990,40643580,40644877,40646623,40648063,40649078,40650223,40651379,40652504,40653686,40654753,40655820,40656928,40658086,40659216,40660390,40661551,40662645,40663718,40664750,40665922,40667397,40668520,40669631,40670816,40671843,40672930,40674026,40675060,40676106,40677108,40677977,40678991,40680055,40680911,40681793,40682580,40683451,40684813,40685239,40685785,40686295,40686847,40687388,40687843,40688409,40688972,40689422,40689932,40690405,40690914,40691415,40691955,40692516,40693036,40694447,40695916,40697411,40698913,40700471,40701955,40703463,40704975,40706487,40707610,40708579,40709575,40711020,40712591,40713983,40715365,40716691,40718021,40719501,40721246,40722894,40724551,40726215,40727825,40729459,40731123,40732761,40734426,40736280,40737977,40739651,40741403,40743093,40744797,40746516,40748208,40749945,40750949,40752089,40753334,40754668,40755973,40757274,40758579,40759684,40761054,40762472,40763869,40765295,40766848,40768364,40769926,40771478,40773170,40774521,40775492,40776628,40777773,40778908,40780018,40781114,40782208,40783323,40784493,40785610,40786825,40788037,40789100,40790137,40791209,40792483,40793865,40795021,40796099,40797260,40798303,40799367,40800503,40801564,40802541,40803554,40804460,40805509,40806554,40807415,40808241,40809049,40809882,40811208,40811629,40812194,40812702,40813258,40813817,40814289,40814855,40815405,40815868,40816377,40816850,40817352,40817862,40818394,40818967,40819472,40821186,40822996,40824790,40826590,40828385,40830180,40831911,40833698,40835095,40836498,40837879,40839280,40841022,40842835,40844659,40846550,40848420,40850287,40852131,40854015,40855877,40857371,40858931,40860526,40862020,40863481,40865172,40866636,40868327,40869912,40871677,40873454,40875307,40877001,40878512,40879701,40880824,40881970,40883401,40884615,40886420,40888164,40889942,40891774,40893524,40895356,40897102,40898853,40900656,40901923,40903157,40904398,40905509,40906916,40908201,40909777,40911633,40913388,40915287,40917029,40918821,40920644,40922401,40924252,40925998,40927760,40929551,40931218,40932862,40934585,40936356,40938123,40939887,40941484,40943151,40944404,40946130,40947748,40949355,40950952,40952522,40954069,40955648,40957284,40959026,40960539,40962310,40964071,40965500,40966974,40968737,40970514,40972011,40973693,40974687,40975838,40976978,40978107,40979302,40980402,40981486,40982600,40983739,40984884,40986049,40987213,40988358,40989482,40990514,40991582,40992771,40993887,40995080,40996220,40996851,40997675,40998875,40999971,41000979,41001999,41003075,41004292,41005450,41006235,41007018,41008163,41009319,41010401,41011378,41012371,41013631,41014726,41015644,41016292,41017386,41018617,41019736,41020729,41021657,41022886,41024017,41024960,41025488,41026651,41027887,41029077,41030044,41030870,41032067,41033172,41034174,41034609,41035798,41036981,41038146,41039200,41040420,41041539,41042638,41043816,41044850,41045905,41047048,41048105,41049127,41050131,41051045,41052087,41053166,41054002,41054793,41055638,41056724,41057599,41058691,41059931,41061067,41061481,41062584,41063777,41064941,41065833,41067030,41068165,41069410,41070605,41071896,41073022,41074142,41075324,41076498,41077799,41078953,41080093,41081329,41082451,41083751,41084906,41086060,41087282,41088450,41089773,41090876,41091901,41092916,41094040,41095392,41096496,41097470,41098530,41099821,41101041,41102107,41103124,41104217,41105486,41106739,41107823,41108761,41109888,41111509,41111961,41112496,41113000,41114376,41115952,41117742,41119585,41121452,41123263,41124821,41126122,41126604,41127117,41127653,41128182,41128737,41129841,41131371,41132815,41134448,41135974,41137422,41139060,41140591,41142036,41143672,41145208,41146649,41148410,41150183,41152019,41153745,41155598,41157347,41159132,41161021,41162777,41164508,41166392,41168124,41169969,41171759,41173513,41175410,41177119,41178949,41180707,41182624,41184360,41186210,41187968,41189707,41191615,41193284,41195102,41196998,41198737,41200503,41202323,41204150,41205869,41207724,41209543,41211270,41213166,41214887,41216642,41218532,41220332,41222092,41223894,41225649,41227634,41229464,41231292,41232966,41234882,41236642,41238475,41240261,41242009,41243913,41245620,41247455,41249300,41251093,41252842,41254660,41256510,41258218,41260003,41261880,41263588,41265498,41267233,41269003,41270891,41272624,41274356,41276171,41278049,41279804,41281613,41283437,41285115,41287016,41288064,41289310,41290420,41291724,41293023,41294149,41295417,41296479,41297162,41297908,41298742,41299640,41300121,41300628,41301419,41302242,41303162,41303737,41304079,41304894,41305760,41306606,41307134,41307580,41308357,41309263,41310050,41311103,41312196,41313248,41314385,41315561,41316671,41317851,41318897,41320039,41321108,41322252,41323335,41324530,41325698,41326792,41327852,41328968,41330405,41331929,41333412,41334987,41336085,41337168,41338349,41339418,41340491,41341592,41342641,41343675,41344703,41345601,41346626,41347680,41348545,41349437,41350210,41351099,41352569,41353989,41355511,41356661,41357086,41357676,41358179,41358713,41359267,41359765,41360293,41360820,41361301,41361826,41362327,41362815,41363308,41363826,41364402,41364921,41366627,41368275,41369960,41371538,41373259,41374915,41376539,41378199,41379921,41381600,41383377,41385023,41386657,41388256,41389943,41391532,41392440,41393170,41394498,41395928,41397256,41398663,41399976,41401338,41402763,41404101,41405318,41406377,41407598,41408675,41409910,41411034,41412263,41413362,41414601,41415992,41417383,41418832,41420234,41421703,41423075,41424511,41425928,41427502,41429063,41430532,41431870,41433331,41434765,41436197,41437528,41438960,41440099,41441218,41442486,41443599,41444914,41446083,41447403,41448589,41449879,41451014,41452254,41453497,41454835,41455950,41457164,41458268,41459423,41460888,41462412,41463907,41465424,41467129,41468605,41470176,41471639,41473097,41474495,41475943,41477198,41478391,41479467,41480678,41482156,41483522,41484502,41485918,41486899,41487847,41489111,41490439,41492462,41494494,41496511,41498524,41500536,41502530,41504530,41506533,41508568,41510598,41512592,41514618,41516634,41518654,41520665,41522622,41524562,41525924,41527260,41528900,41530350,41531472,41532593,41533714,41534835,41535955,41537075,41538422,41539999,41541480,41543024,41544619,41546415,41548113,41549839,41551583,41553416,41554982,41556474,41557988,41559599,41561195,41562752,41564288,41565904,41566149,41566263,41568067,41570089,41572033,41573955,41575863,41577747,41579563,41581445,41583342,41585224,41587149,41589065,41590973,41592970,41594865,41596727,41598634,41600590,41602468,41604277,41606249,41608187,41610076,41611967,41613917,41615832,41617574,41619356,41621193,41622914,41624829,41626729,41628615,41630461,41632374,41634287,41636159,41638044,41639955,41641895,41643725,41645557,41647417,41649337,41651160,41652644,41654327,41656013,41657683,41659332,41661050,41662729,41664397,41666037,41667774,41669387,41671049,41672721,41674469,41676154,41677847,41679482,41681215,41682954,41684420,41685987,41687601,41689201,41690781,41692257,41693764,41695345,41696959,41698577,41700233,41701702,41703259,41704822,41706362,41707942,41709810,41711330,41712824,41714479,41716098,41718053,41719835,41721595,41723407,41725275,41727124,41728969,41730823,41732675,41733980,41735278,41736627,41737994,41739311,41740649,41742026,41743275,41744927,41746371,41747823,41749269,41750777,41752239,41753689,41755143,41756739,41758192,41759651,41761090,41762549,41764056,41765526,41766969,41768390,41770014,41771460,41772914,41774332,41775846,41777304,41778762,41780191,41781779,41783255,41784694,41786104,41787541,41789033,41790486,41791917,41793327,41794908,41796320,41797708,41799148,41800611,41802083,41803493,41804923,41806400,41807935,41809316,41810685,41812159,41813637,41815087,41816467,41817882,41819476,41820871,41822267,41823680,41825129,41826607,41828036,41829427,41830847,41832444,41833836,41835274,41836757,41838234,41839722,41841193,41842589,41844216,41845671,41847106,41848549,41850028,41851515,41852991,41854430,41855806,41857386,41858739,41860019,41861374,41862767,41864112,41865436,41866736,41868276,41869622,41870943,41872266,41873648,41874994,41876372,41877668,41878955,41880539,41881872,41883137,41884481,41885830,41887127,41888411,41889704,41891095,41892622,41894095,41895535,41897029,41898509,41900023,41901475,41902867,41904512,41905931,41907330,41908784,41910267,41911752,41913190,41914590,41916023,41917623,41918986,41920378,41921844,41923296,41924751,41926138,41927521,41929150,41930560,41931947,41933321,41934811,41936303,41937753,41939172,41940570,41942192,41943551,41944932,41946355,41947844,41949296,41950706,41952142,41953738,41955208,41956648,41958071,41959508,41961013,41962475,41963927,41965316,41967116,41968805,41970640,41972333,41974241,41975860,41977590,41979376,41981195,41983018,41984809,41986504,41988169,41989965,41991728,41993463,41995219,41997079,41998862,42000752,42002601,42004486,42006344,42008237,42010096,42011940,42013873,42015689,42017465,42019256,42021069,42022854,42024634,42026425,42028380,42030119,42031856,42033537,42035263,42036976,42038674,42040350,42042098,42043940,42045683,42047411,42049113,42050832,42052539,42054224,42055906,42057768,42059654,42061505,42063329,42065143,42066930,42068797,42070591,42072400,42074328,42076034,42077812,42079537,42081280,42083003,42084763,42086537,42088392,42090111,42092061,42093889,42095722,42097562,42099357,42101118,42102905,42104678,42106540,42108217,42109978,42111677,42113228,42115006,42116737,42118379,42120151,42121985,42123694,42125482,42127187,42128806,42130486,42132114,42133927,42135852,42137474,42139103,42140759,42142392,42144078,42145752,42147444,42149093,42150845,42152521,42154141,42155774,42157482,42159183,42160881,42162547,42164322,42166120,42167916,42169666,42171453,42173274,42175060,42176880,42178653,42180496,42182293,42184017,42185755,42187520,42189327,42191096,42192873,42194651,42196387,42198097,42199806,42201554,42203287,42205023,42206716,42208439,42210225,42211915,42213608,42215352,42217020,42218698,42220390,42222126,42223867,42225651,42227329,42229042,42230640,42232295,42233951,42235682,42237416,42239218,42240628,42242153,42243677,42245216,42246704,42248195,42249695,42251198,42253194,42255172,42257098,42259068,42261069,42263012,42264992,42266961,42268859,42270804,42272799,42274825,42276795,42278725,42280709,42282696,42284712,42286463,42287276,42287316,42287356,42287394,42287713,42287751,42287791,42287831,42288062,42289968,42291768,42293607,42295460,42297274,42299107,42300922,42302712,42304603,42306067,42307549,42308977,42310427,42311784,42313271,42314728,42316196,42318181,42320005,42321784,42323541,42325345,42327108,42328878,42330645,42332122,42333014,42333054,42333093,42333133,42333167,42333490,42333530,42333569,42333609,42334417,42335503,42337119,42338783,42340472,42342145,42343846,42345541,42347206,42348898,42350548,42351704,42353002,42354433,42355504,42356512,42358069,42359457,42360592,42361810,42363633,42365233,42366888,42367174,42367214,42367252,42367292,42367611,42367650,42367690,42367725,42368404,42369665,42370999,42372218,42373400,42375137,42376767,42378385,42380085,42381741,42383427,42385107,42386725,42388181,42388221,42388259,42388299,42388366,42389546,42389701,42389832,42391202,42393072,42395091,42396780,42398421,42400031,42401676,42403352,42405014,42406714,42408448,42410144,42411876,42413623,42415361,42417091,42418808,42420512,42422203,42423977,42425023,42426216,42426414,42427644,42429459,42431199,42432933,42434686,42436414,42438222,42439888,42441638,42443471,42445331,42447178,42449071,42450845,42452767,42454567,42456405,42458299,42460162,42461815,42463472,42465174,42466879,42468709,42470489,42472199,42474073,42475870,42477826,42479605,42481569,42483342,42485305,42487160,42489070,42491017,42492496,42493901,42495193,42496417,42497796,42499389,42500927,42502373,42503735,42505127,42506362,42507653,42508892,42510207,42511536,42512963,42514682,42515301,42516098,42516973,42517964,42519350,42521021,42522028,42522733,42523403,42524151,42525665,42527238,42528946,42530371,42531188,42532462,42534096,42535352,42536493,42537373,42538237,42539205,42539873,42540518,42541460,42542698,42544054,42545274,42546484,42547848,42549202,42550605,42551882,42553453,42555223,42556963,42558759,42560488,42562251,42563955,42565726,42567445,42569225,42570995,42572738,42574492,42576271,42578055,42579819,42581564,42582696,42583644,42584572,42585547,42587185,42589143,42590801,42592754,42594579,42595681,42596910,42598102,42599377,42601371,42603392,42605415,42607435,42609355,42611273,42613163,42615054,42617022,42619065,42621099,42623140,42625183,42626919,42628737,42630535,42632378,42634178,42635987,42637702,42639499,42641217,42642875,42644494,42646105,42647852,42649398,42650677,42651986,42653677,42654895,42656090,42657353,42658660,42659984,42661207,42662454,42663693,42665368,42666700,42667932,42669098,42670752,42672296,42673047,42673869,42675501,42677219,42678089,42678817,42680231,42681619,42682600,42683352,42684388,42685857,42687391,42688776,42690195,42691846,42693706,42695567,42697434,42699298,42701176,42703089,42705041,42706989,42708822,42710502,42712162,42713810,42715470,42717180,42718962,42720756,42722458,42724033,42725469,42726888,42728351,42729912,42731346,42732756,42734195,42735810,42737331,42738740,42740226,42741819,42743345,42744843,42746311,42747884,42749832,42751810,42753759,42755677,42757695,42759689,42761674,42763645,42765657,42767408,42769176,42770916,42772662,42774422,42775999,42777539,42779116,42781025,42782930,42784721,42786610,42788526,42790294,42792113,42793896,42795763,42797664,42799540,42801379,42803287,42805165,42806992,42808763,42810609,42812535,42813865,42815358,42816841,42818363,42819580,42820792,42822386,42823635,42824829,42826052,42827295,42828992,42830069,42831321,42832662,42834550,42836325,42838108,42839889,42841718,42843515,42845301,42847088,42848883,42850748,42852584,42854383,42856198,42857600,42858477,42859304,42860109,42861104,42862273,42863439,42864582,42865787,42867015,42868251,42869421,42870625,42871955,42873345,42874757,42876057,42877721,42879552,42881414,42883265,42885159,42886996,42888818,42890669,42892510,42894437,42896350,42898284,42900176,42902111,42904024,42905966,42907917,42909793,42911578,42913361,42915153,42916809,42918620,42920349,42922021,42923559,42925111,42926892,42928670,42930482,42932324,42934145,42935865,42937720,42939498,42940986,42942443,42943879,42945397,42946946,42948571,42950365,42951916,42953473,42955144,42956773,42958476,42960170,42961916,42963659,42965464,42967277,42969157,42971211,42973262,42975194,42977184,42979163,42981160,42983118,42985117,42987052,42988992,42990900,42992791,42993911,42995263,42996605,42997669,42999456,43001254,43002990,43004757,43006448,43007999,43009615,43011167,43012824,43014608,43016388,43018164,43019919,43021757,43023546,43025363,43027120,43028922,43030614,43032306,43033999,43035630,43037342,43039159,43040955,43042557,43043699,43044742,43045782,43047004,43048487,43049041,43049582,43050321,43052015,43052659,43054159,43054799,43056206,43056753,43057386,43057857,43058582,43059433,43060190,43060957,43061702,43062472,43063694,43064945,43066117,43067370,43068784,43070100,43071557,43073086,43074553,43075907,43077397,43078925,43080471,43081959,43083381,43084904,43086489,43088025,43089392,43090907,43092471,43093909,43095254,43096705,43098177,43099754,43101182,43102590,43104069,43104872,43105105,43105310,43105514,43106337,43106841,43107270,43107739,43108721,43110757,43112776,43114824,43116877,43118899,43120942,43122987,43124998,43127053,43129021,43130941,43132916,43134806,43136721,43138643,43140545,43142452,43143839,43145216,43146621,43148057,43149398,43150539,43151712,43152803,43154109,43155549,43156897,43158417,43159884,43161757,43163573,43165410,43167292,43169167,43170969,43172754,43174573,43176454,43178237,43179979,43181735,43183550,43185340,43187060,43188785,43190478,43191980,43193298,43194559,43195961,43197486,43198814,43200125,43201502,43203236,43204985,43206733,43208525,43210241,43211440,43212696,43213916,43215206,43217080,43218887,43220667,43222478,43224120,43225553,43226944,43228441,43230059,43232083,43234115,43236149,43238165,43240174,43242164,43244139,43246132,43247848,43249366,43250868,43252335,43254079,43255771,43257436,43259111,43260888,43262885,43264873,43266847,43268849,43270686,43272397,43274127,43275866,43277857,43279912,43281955,43284009,43285976,43287549,43289127,43289760,43290294,43290831,43291366,43292409,43293828,43295254,43296679,43297754,43299075,43300612,43302191,43303418,43304820,43306365,43307926,43309375,43311054,43312692,43314489,43316115,43318032,43319860,43321156,43322357,43323681,43324949,43326124,43327088,43328095,43329021,43330368,43331351,43332292,43333226,43334120,43335360,43336188,43336874,43338602,43340590,43342570,43344538,43346207,43348157,43350146,43352135,43354123,43356040,43357938,43359837,43361720,43363721,43365730,43366872,43368880,43370867,43372744,43374646,43376544,43378431,43380426,43382431,43384406,43386414,43387997,43389655,43391299,43392763,43394275,43395793,43397385,43398873,43400486,43402375,43404273,43406127,43407979,43409888,43411768,43413624,43415491,43417367,43418843,43420303,43421785,43423699,43425671,43427628,43429615,43431618,43433443,43435228,43437019,43438813,43440685,43442546,43444434,43446303,43447954,43449369,43450823,43452228,43453660,43455130,43456653,43458135,43459576,43461122,43462847,43464546,43466182,43467703,43469269,43470835,43472378,43474023,43475761,43477384,43479135,43480892,43482563,43484312,43486001,43487723,43489386,43491060,43492599,43494294,43495937,43497612,43499134,43500822,43502566,43504030,43505574,43507133,43508647,43510212,43511835,43513421,43515048,43516440,43517964,43519466,43520968,43522468,43523961,43525550,43527263,43528699,43530033,43531258,43532818,43534430,43536112,43537832,43539232,43540973,43542554,43544193,43545974,43547692,43549241,43550864,43552386,43554075,43555616,43557119,43558734,43560207,43561653,43563163,43564889,43566279,43567678,43569043,43570265,43571420,43572549,43573846,43575038,43576443,43577917,43579293,43580659,43582248,43583578,43584773,43586145,43588020,43589730,43591464,43593003,43594256,43595279,43596330,43597216,43598186,43599272,43600445,43601767,43603084,43604683,43606285,43607864,43609583,43611490,43612836,43614152,43615675,43617128,43618655,43620141,43621590,43622973,43624483,43626182,43627906,43629598,43631330,43632998,43634720,43636517,43638507,43640146,43641953,43643707,43645282,43646668,43648046,43649372,43650745,43652264,43653836,43655435,43657033,43658640,43660051,43661520,43662867,43664547,43665898,43667286,43668618,43670018,43671430,43672805,43674482,43675980,43677491,43678946,43680357,43681790,43683233,43684713,43686187,43687643,43689440,43691187,43692706,43694116,43695504,43696871,43698278,43699625,43701018,43702501,43704212,43705953,43707690,43709290,43710790,43712302,43713734,43715225,43716913,43718342,43719790,43721152,43722583,43724017,43725605,43727287,43728935,43730513,43731956,43733483,43734955,43736382,43737846,43739310,43740770,43742424,43743980,43744275,43744554,43746250,43747850,43748162,43748440,43750054,43751641,43751953,43752241,43753862,43755481,43755793,43756069,43757681,43759294,43759606,43759873,43761424,43763032,43763355,43763622,43764946,43766186,43767509,43768746,43770168,43771412,43772718,43774005,43775412,43776696,43777993,43779304,43780612,43781992,43783252,43784597,43785878,43787338,43788833,43790155,43791380,43792629,43793862,43795131,43796385,43797646,43798941,43800329,43801504,43802674,43803894,43805091,43806281,43807478,43808693,43810194,43811411,43812705,43813968,43815267,43816528,43817782,43819057,43820306,43822217,43823922,43825718,43827409,43829085,43830722,43832578,43834501,43835885,43837172,43838550,43839902,43841240,43842595,43843945,43845251,43846637,43847971,43849421,43850704,43852106,43853448,43854880,43856189,43857757,43859531,43861156,43862765,43864336,43865959,43867570,43869054,43870413,43871735,43873097,43874498,43876022,43877553,43879065,43880488,43882083,43883858,43885710,43887361,43888950,43890512,43892149,43893753,43895293,43896701,43897982,43899369,43900762,43902254,43903790,43905317,43906736,43908317,43910042,43911905,43913572,43915156,43916720,43918352,43919931,43921433,43922867,43924138,43925496,43926882,43928346,43929915,43931436,43932863,43934403,43936124,43938007,43939699,43941287,43942865,43944530,43946111,43947624,43949107,43950361,43951711,43953099,43954572,43956148,43957662,43959117,43960618,43962345,43964186,43965428,43966741,43967836,43968813,43969777,43970933,43971994,43973154,43974240,43975528,43976799,43978002,43978912,43979916,43980978,43982070,43983720,43984947,43986240,43987373,43988361,43989334,43990481,43991538,43992620,43993734,43995008,43996243,43997452,43998406,43999391,44000472,44001560,44003135,44005092,44006992,44008913,44010883,44012847,44014786,44016751,44018659,44020544,44022332,44024114,44025980,44027868,44029821,44031746,44033703,44035233,44037127,44039091,44041030,44043007,44045018,44046997,44048906,44050865,44052695,44053818,44054995,44056139,44057378,44058510,44059638,44060792,44061909,44063683,44065460,44067223,44068993,44070769,44072520,44074363,44076116,44077853,44079641,44081407,44083193,44084944,44086663,44088364,44090370,44092318,44094204,44096100,44097991,44099968,44101547,44102261,44103116,44105144,44107116,44109127,44111108,44113066,44115035,44117043,44119002,44121013,44122962,44124917,44126876,44128869,44130839,44132839,44134781,44136743,44138546,44140131,44141693,44143260,44144817,44146390,44147938,44149516,44151188,44152979,44154588,44156254,44157884,44159527,44161276,44162954,44164698,44166331,44168029,44169500,44171078,44172511,44174244,44175893,44177628,44179284,44181045,44182725,44184394,44186159,44187909,44189770,44191505,44193338,44195134,44196961,44198587,44200297,44201897,44203669,44205362,44207140,44208815,44210517,44212165,44213685,44215298,44216828,44218506,44220111,44221914,44223580,44225351,44227022,44228812,44230595,44232432,44234029,44235539,44237294,44238950,44240765,44242578,44244380,44246162,44247985,44249788,44251608,44253402,44255176,44256858,44258591,44260332,44261887,44263548,44265119,44266874,44268518,44270375,44272075,44273956,44275682,44277441,44279084,44280880,44282623,44284371,44285649,44287560,44289472,44291271,44292985,44294921,44296788,44298277,44299827,44301516,44303509,44305519,44307496,44309165,44310603,44311841,44312996,44314306,44315445,44316563,44318270,44319898,44321492,44323027,44324499,44326008,44327531,44329074,44330790,44331936,44333026,44333910,44334866,44336044,44337199,44338165,44339178,44340291,44341472,44343353,44345114,44346985,44348794,44350642,44352459,44354310,44356082,44357943,44359686,44361256,44363014,44364617,44366367,44368097,44369799,44371572,44373485,44375274,44377137,44378990,44380817,44382651,44384486,44386267,44388232,44389975,44391547,44393279,44394952,44396693,44398431,44400157,44401953,44403754,44405589,44407461,44409297,44411195,44413018,44414917,44416734,44418702,44420632,44422508,44424491,44426413,44428334,44430292,44432330,44434246,44436205,44437975,44439710,44441526,44443287,44445120,44446936,44448771,44450637,44451972,44453361,44455039,44456440,44457654,44459247,44460736,44462511,44463894,44464875,44466301,44467677,44468803,44469765,44470312,44470609,44471800,44473072,44474374,44475666,44477009,44478477,44479763,44481082,44482404,44483806,44485183,44486498,44487834,44489118,44490554,44491903,44493222,44494617,44495938,44497396,44498939,44500152,44501527,44503002,44504763,44506673,44508633,44510680,44512722,44514724,44516715,44518681,44520635,44522286,44523898,44525431,44526894,44528627,44530204,44531929,44533663,44535274,44537025,44538826,44540424,44542191,44543747,44545349,44546955,44548575,44550268,44552061,44553970,44555891,44557723,44559369,44561098,44562905,44564865,44566815,44568661,44570378,44572126,44573970,44575891,44577716,44579482,44581075,44582922,44584837,44586732,44588598,44590235,44591994,44593907,44595900,44597855,44599775,44601512,44603193,44605058,44606951,44608828,44610608,44611959,44612952,44613952,44614925,44616334,44617818,44619408,44621009,44622653,44624285,44625980,44627627,44629250,44630806,44632675,44634364,44636088,44637817,44639410,44641119,44642743,44644370,44646065,44647761,44649683,44651414,44653126,44654874,44656596,44658322,44660054,44661659,44663366,44665038,44666783,44668475,44670299,44672232,44674006,44675329,44677284,44679193,44681044,44682984,44684934,44686857,44688736,44690442,44692221,44693871,44695541,44697297,44699236,44701104,44703016,44704896,44706802,44708798,44710717,44712673,44714609,44716540,44718355,44720159,44721952,44723741,44725627,44727581,44729455,44731350,44733252,44735164,44737009,44738891,44740582,44741943,44743107,44744456,44746174,44747775,44749431,44751050,44752925,44754693,44756429,44758202,44759961,44761699,44763490,44765262,44767010,44768760,44770554,44772239,44773184,44773783,44774391,44775266,44776373,44777346,44778667,44779912,44781146,44782109,44783935,44785652,44787287,44788851,44790608,44792209,44793857,44795548,44797139,44798593,44800206,44801684,44803046,44804257,44805883,44807490,44809234,44810918,44812551,44814268,44815980,44817575,44819248,44820766,44822276,44823861,44825395,44827078,44828628,44830312,44831867,44833501,44835148,44836704,44838340,44839909,44841584,44843096,44844752,44846212,44847741,44849350,44850853,44852486,44853954,44855484,44857149,44858703,44860347,44861903,44863333,44865185,44866997,44868814,44870670,44872543,44874403,44876263,44878073,44879976,44881791,44883616,44885451,44887377,44889277,44891154,44893009,44894887,44896866,44898885,44900840,44902736,44904634,44906512,44908465,44910379,44912325,44914210,44916149,44918049,44919921,44921792,44923658,44925553,44927434,44929210,44930883,44932506,44934235,44935889,44937493,44939083,44940751,44942372,44943990,44945616,44947236,44948989,44950644,44952286,44953950,44955588,44957213,44958867,44960498,44962173,44963876,44965534,44967179,44968841,44970472,44972098,44973731,44975387,44977267,44979133,44981000,44982856,44984728,44986604,44988431,44990301,44992132,44994061,44995914,44997733,44999574,45001413,45003249,45005087,45006946,45008895,45010779,45012625,45014475,45016338,45018195,45020032,45021891,45023775,45025384,45026773,45028217,45029650,45030973,45032417,45033827,45035428,45036839,45038146,45039626,45041107,45042518,45043950,45045772,45047646,45049477,45051303,45053105,45054928,45056756,45058671,45060599,45062289,45064021,45065733,45067414,45069108,45070803,45072565,45074193,45075917,45077485,45079286,45080984,45082687,45084420,45086185,45087912,45089480,45091160,45093050,45094882,45096717,45098592,45100182,45101982,45103839,45105717,45107572,45109423,45111106,45112828,45114615,45116391,45118185,45119936,45121537,45123291,45124979,45126652,45128475,45130107,45131831,45133591,45135414,45137160,45138930,45140652,45142310,45144010,45145649,45147314,45149042,45150729,45152189,45153702,45155208,45156789,45158308,45159956,45161435,45163085,45164658,45166151,45167782,45169471,45171018,45172581,45174153,45175749,45177270,45178861,45180392,45182207,45184033,45185801,45187532,45189288,45191045,45192725,45194144,45195622,45197374,45199196,45200977,45202713,45204438,45206053,45207538,45209221,45210967,45212687,45214275,45215630,45216948,45218735,45220499,45222190,45223527,45225162,45226572,45228051,45229720,45231118,45232814,45234312,45235772,45237285,45238833,45240354,45241924,45243398,45244765,45246278,45247796,45249383,45250917,45252422,45253929,45255527,45257088,45258578,45260129,45261482,45262941,45264379,45265861,45267716,45269551,45271409,45273202,45275031,45276858,45278647,45280398,45282119,45283603,45285422,45287128,45288871,45290661,45292291,45294061,45295839,45297490,45299377,45301386,45303431,45305444,45307449,45309469,45311468,45313199,45314987,45316744,45318339,45320096,45321821,45323597,45325272,45326976,45328706,45330499,45332216,45333937,45335687,45337414,45339126,45340780,45342457,45344075,45345911,45347577,45349361,45351031,45352716,45354454,45356133,45357835,45359552,45361238,45362965,45364604,45366402,45367998,45369443,45370947,45372709,45374458,45376108,45377841,45379471,45380908,45382418,45383933,45385509,45386917,45388410,45389953,45391470,45393099,45394907,45396622,45398315,45400108,45401754,45403495,45405250,45406965,45408571,45410245,45411893,45413580,45415175,45416774,45418402,45420101,45421714,45423410,45425037,45426654,45428382,45430018,45431692,45433323,45435066,45436696,45438338,45439973,45441652,45443286,45444932,45446574,45448271,45449920,45451579,45453223,45454876,45456593,45458221,45459832,45461442,45463217,45464823,45466502,45468184,45469968,45471627,45473290,45474911,45476506,45478248,45479854,45481528,45483209,45485007,45486600,45488217,45489850,45491535,45493189,45495029,45496852,45498546,45500133,45501921,45503743,45505378,45507098,45508875,45510696,45512414,45514269,45516186,45518059,45519976,45521983,45523945,45525891,45527845,45529798,45531598,45533456,45535378,45537363,45539377,45541387,45543385,45545235,45547152,45549012,45550836,45552714,45554707,45556740,45558749,45560740,45562712,45564697,45566603,45568487,45570379,45572296,45574203,45576133,45578100,45580135,45581851,45583734,45585616,45587519,45589367,45591180,45592763,45594373,45596270,45598072,45599874,45601474,45603093,45604703,45606351,45607966,45609778,45610801,45611814,45612816,45613835,45615045,45616306,45617450,45618757,45619963,45621262,45622393,45623666,45624922,45626142,45627287,45628544,45629756,45631475,45633199,45634996,45636712,45638405,45640111,45641814,45643571,45645224,45646917,45648618,45650390,45652077,45653738,45655406,45657107,45658751,45660471,45662106,45663751,45665406,45667151,45668832,45670494,45672117,45673836,45675515,45677218,45678877,45680515,45682366,45684053,45685786,45687502,45689184,45690918,45692635,45694375,45696195,45697936,45699592,45701335,45703151,45705168,45707162,45709189,45711232,45713269,45715305,45717334,45719364,45721383,45723424,45725454,45727511,45729563,45731618,45733665,45735708,45737751,45739667,45741522,45743390,45745312,45747237,45749131,45751005,45752874,45754771,45756396,45758106,45759617,45761317,45763102,45764791,45766329,45767999,45769723,45771419,45773092,45774802,45776440,45778118,45779891,45781680,45783266,45784996,45786659,45788201,45789847,45791298,45793033,45794821,45796693,45798412,45800076,45801701,45803456,45805412,45807283,45809141,45810941,45812727,45814397,45816216,45818047,45819910,45821451,45823465,45825419,45827447,45829370,45831282,45833193,45834829,45836593,45838268,45840032,45841730,45843496,45845307,45847064,45848724,45850504,45852199,45853883,45855566,45857299,45858845,45860348,45861867,45863383,45864947,45866471,45867982,45869508,45870977,45872551,45874039,45875571,45877053,45878599,45880110,45881635,45883151,45884546,45885561,45886387,45887417,45888304,45889930,45891365,45892686,45894058,45895428,45896863,45898223,45899630,45901146,45902778,45904525,45906155,45907804,45909456,45911068,45912712,45914428,45916213,45917925,45919587,45921283,45923080,45924848,45926568,45928298,45930028,45931672,45933363,45935038,45936565,45937656,45939265,45940924,45942639,45944519,45946423,45948341,45950214,45952089,45953965,45955917,45957833,45959759,45961704,45963316,45964889,45966387,45967908,45969349,45970896,45972693,45974660,45976551,45978376,45980007,45981526,45983125,45984788,45986649,45988558,45990376,45991979,45993643,45995283,45996925,45998552,46000244,46001944,46003723,46005043,46006613,46008284,46009957,46011672,46013415,46015047,46016198,46017745,46018982,46020378,46021881,46023564,46025330,46027069,46028407,46029877,46031321,46032692,46034107,46035453,46036827,46038149,46039483,46040876,46042378,46043784,46045042,46046405,46047733,46049040,46050379,46051620,46053013,46054537,46055927,46057504,46059032,46060710,46062418,46063815,46064962,46066421,46067646,46069045,46070541,46072160,46073775,46075219,46076395,46077675,46079353,46080813,46082166,46083486,46084644,46085948,46087228,46088704,46090349,46091673,46093318,46095025,46096770,46098508,46100185,46101873,46103225,46104875,46106219,46107852,46109394,46111107,46112810,46114259,46115493,46117145,46118573,46119880,46121379,46123009,46124662,46126079,46127548,46128806,46130474,46131742,46133217,46134746,46136442,46138184,46139902,46141353,46142951,46144534,46145977,46147528,46148950,46150457,46151979,46153475,46154897,46156723,46158499,46160214,46161953,46163772,46163997,46164127,46165336,46165860,46166503,46167166,46167710,46168216,46168980,46169614,46170144,46171455,46172377,46173334,46174760,46176153,46177547,46178969,46180390,46181962,46183547,46185257,46186843,46188466,46190019,46191611,46193458,46195004,46196101,46197239,46198423,46199691,46201019,46202288,46203572,46204851,46206278,46207806,46209410,46210937,46212464,46214025,46215719,46217292,46218646,46220028,46221407,46222200,46222225,46222255,46222280,46222818,46223450,46224744,46225384,46226899,46228530,46230210,46231820,46233460,46234616,46236302,46237799,46239383,46240912,46242645,46244561,46246509,46248410,46250366,46252266,46254111,46255596,46257101,46258589,46259885,46260827,46261789,46263067,46264394,46265819,46267254,46268742,46270279,46271709,46273279,46274997,46276744,46278268,46279869,46281381,46282949,46284536,46286050,46287609,46289337,46291394,46293448,46295485,46297495,46299384,46301336,46303357,46305302,46307047,46308979,46310854,46312806,46314808,46316860,46318855,46320902,46322897,46324925,46326906,46328948,46330997,46332994,46334699,46336565,46338558,46340576,46342575,46344496,46346165,46347731,46348975,46350207,46351400,46352882,46354876,46356772,46358496,46360256,46362150,46364027,46365783,46367569,46369343,46371230,46373262,46375292,46377291,46379316,46381364,46383360,46385399,46387283,46388824,46390364,46391916,46393428,46394931,46396522,46398029,46399546,46400933,46402327,46403639,46404980,46406287,46407605,46408934,46410532,46412550,46414557,46416553,46418527,46420536,46422486,46424422,46426358,46428370,46430181,46431913,46433566,46435236,46436947,46438606,46439826,46440057,46440575,46441821,46443122,46444407,46445362,46446415,46447348,46448452,46449641,46451295,46452989,46454562,46456283,46458025,46459692,46461226,46462810,46464359,46465985,46467519,46469124,46470612,46472095,46473316,46474682,46475769,46476918,46478182,46479502,46480743,46482090,46483527,46485067,46486657,46488255,46489703,46491152,46492563,46493775,46494729,46495844,46497430,46498933,46499643,46500851,46502127,46503519,46505023,46506478,46507977,46509443,46510619,46511971,46513502,46515243,46517179,46518944,46520224,46521551,46522757,46524227,46525796,46527435,46529036,46530679,46532267,46533869,46535361,46536933,46538442,46539888,46541117,46542575,46544137,46545677,46547056,46548442,46549823,46551244,46552607,46553830,46554319,46554975,46555432,46556246,46557652,46559187,46560733,46562260,46563681,46565164,46566714,46568178,46569561,46570896,46572041,46573232,46574553,46575963,46577467,46578802,46579875,46580904,46581792,46583038,46584778,46586680,46588475,46590247,46591806,46593165,46594187,46595357,46596900,46598472,46600040,46601597,46603160,46604737,46606279,46608022,46609769,46611601,46613315,46615151,46616915,46618805,46620560,46622272,46623663,46625084,46626441,46627869,46629313,46630826,46632483,46634283,46636263,46638204,46640094,46642026,46644006,46645947,46647837,46649790,46651699,46653490,46655042,46656253,46656987,46657821,46658686,46659903,46661407,46662998,46664664,46666386,46667856,46669456,46670803,46672149,46673382,46674344,46674920,46675756,46676564,46677442,46678053,46679072,46680488,46681662,46682169,46682728,46683215,46684276,46686038,46687673,46688776,46689915,46690933,46692132,46693533,46694871,46695954,46697118,46698066,46699140,46700562,46702029,46703451,46704884,46706331,46707907,46709592,46711364,46713003,46714815,46716687,46718507,46720059,46721431,46722442,46723635,46724800,46726016,46726993,46728016,46728877,46730034,46731027,46732211,46733442,46734568,46735025,46735603,46736228,46736894,46737378,46737929,46738527,46739186,46739654,46740224,46740845,46741546,46742051,46742642,46743255,46743911,46744330,46744841,46745406,46746536,46748405,46750045,46751093,46752243,46753282,46754428,46755465,46756562,46757689,46759080,46760868,46762496,46764196,46765910,46767561,46769236,46770963,46772486,46773653,46775021,46776679,46778345,46780043,46781811,46783681,46785030,46785302,46785702,46785986,46786349,46786540,46786840,46787118,46787476,46787530,46787795,46787820,46788010,46788164,46788445,46788724,46789012,46789185,46789904,46791360,46792859,46794499,46795980,46797066,46798193,46799290,46800440,46801585,46802941,46804437,46805969,46807418,46809086,46810941,46812819,46814514,46816222,46817575,46819213,46820852,46822504,46823902,46825544,46827505,46829510,46831537,46833574,46835514,46837482,46839444,46841413,46843378,46845342,46847352,46849119,46850396,46851686,46853355,46854940,46856497,46857715,46859346,46860803,46862312,46863809,46865301,46866758,46868232,46869705,46871229,46872768,46874285,46875657,46876715,46878030,46879280,46880684,46881806,46883103,46884336,46885456,46886513,46887693,46889741,46891789,46893837,46895885,46897933,46899981,46902029,46904077,46906125,46908173,46910221,46912269,46914317,46916365,46918413,46920461,46922509,46924557,46926605,46928653,46930701,46932749,46934797,46936845,46938893,46940949,46942994,46944929,46946977,46949025,46951073,46953121,46955169,46957217,46959265,46961313,46963361,46965409,46967457,46969505,46971553,46973601,46975649,46977697,46979745,46981793,46983841,46985889,46987937,46989985,46992033,46994081,46996129,46998177,47000057,47002105,47004153,47006158,47008206,47010254,47012255,47014303,47016351,47018399,47020447,47022495,47024543,47026581,47028628,47030676,47032724,47034772,47036820,47038868,47040916,47042922,47044970,47047018,47049066,47051074,47053122,47055170,47057218,47059266,47061272,47063320,47065375,47067423,47069471,47071526,47073574,47075577,47077625,47079673,47081721,47083755,47085696,47087744,47089792,47091840,47093875,47095833,47097881,47099876,47101924,47103920,47105968,47108016,47110064,47112112,47114160,47116208,47118256,47120304,47122352,47124400,47126448,47128496,47130544,47132592,47134640,47136688,47138729,47140725,47142575,47144623,47146671,47148719,47150767,47152815,47154863,47156911,47158959,47161007,47163055,47165103,47167151,47169199,47171255,47173303,47175359,47177407,47179455,47181387,47183330,47185378,47187426,47189482,47191530,47193584,47195512,47197492,47199540,47201588,47203636,47205684,47207720,47209570,47211618,47213666,47215714,47217762,47219810,47221858,47223906,47225954,47228002,47230050,47232098,47234146,47236194,47238242,47240290,47242338,47244386,47246434,47248482,47250530,47252578,47254626,47256674,47258722,47260778,47262826,47264883,47266927,47268851,47270749,47272797,47274845,47276893,47278941,47280989,47283037,47285085,47287133,47289181,47291229,47293277,47295334,47297382,47299430,47301478,47303526,47305574,47307622,47309670,47311718,47313766,47315814,47317862,47319910,47321965,47324013,47326040,47327987,47329773,47331821,47333823,47335871,47337876,47339924,47341972,47344020,47346068,47348116,47350164,47352212,47354260,47356308,47358356,47360404,47362452,47364500,47366548,47368596,47370644,47372692,47374740,47376788,47378836,47380884,47382932,47384989,47387037,47389085,47391140,47393026,47395074,47397122,47399170,47401218,47403266,47405314,47407362,47409410,47411458,47413506,47415554,47417602,47419650,47421698,47423746,47425794,47427842,47429890,47431938,47433986,47436034,47438082,47440130,47442178,47444226,47446274,47448322,47450247,47452295,47454343,47456391,47458439,47460426,47462474,47464522,47466570,47468620,47470608,47472656,47474704,47476752,47478800,47480848,47482896,47484891,47486939,47488987,47491035,47493083,47495131,47497138,47499186,47501234,47503282,47505330,47507378,47509383,47511431,47513479,47515527,47517575,47519623,47521671,47523719,47525767,47527815,47529863,47531911,47533959,47536007,47538055,47540103,47542151,47544152,47546200,47548248,47550296,47552344,47554392,47556440,47558488,47560536,47562584,47564632,47566680,47568728,47570776,47572824,47574872,47576879,47578927,47580975,47583023,47585071,47587119,47589167,47591215,47593263,47595311,47597359,47599407,47601455,47603503,47605551,47607599,47609647,47611695,47613743,47615749,47617797,47619845,47621893,47623941,47625989,47628037,47630085,47632133,47634181,47636229,47638277,47640325,47642373,47644421,47646469,47648517,47650565,47652574,47654622,47656670,47658718,47660766,47662814,47664862,47666910,47668958,47671006,47673054,47675102,47677150,47679198,47681246,47683294,47685342,47687390,47689395,47691443,47693491,47695539,47697587,47699635,47701683,47703731,47705779,47707827,47709875,47711923,47713971,47716019,47718067,47720115,47722163,47724211,47726214,47728262,47730267,47732315,47734320,47736368,47738377,47740425,47742432,47744480,47746484,47748451,47750324,47752332,47754380,47756428,47758352,47760232,47762251,47764308,47766356,47768323,47770223,47772194,47774240,47776288,47778297,47780161,47782137,47784185,47786233,47788258,47790191,47792122,47794152,47796200,47798248,47800190,47802120,47804131,47806179,47808230,47810220,47812131,47814179,47816227,47818275,47820323,47822371,47824419,47826467,47828515,47830563,47832611,47834659,47836707,47838755,47840761,47842809,47844857,47846905,47848953,47851001,47853049,47855097,47857145,47859193,47861241,47863289,47865337,47867385,47869388,47871436,47873484,47875532,47877580,47879628,47881676,47883724,47885772,47887820,47889868,47891870,47893918,47895966,47898014,47900062,47902110,47904158,47906206,47908254,47910302,47912313,47914361,47916409,47918457,47920505,47922512,47924560,47926608,47928656,47930704,47932709,47934757,47936758,47938766,47940814,47942817,47944828,47946876,47948924,47950972,47953020,47955030,47957078,47959126,47961174,47963222,47965233,47967242,47969247,47971295,47973343,47975391,47977439,47979487,47981535,47983583,47985631,47987679,47989727,47991775,47993823,47995871,47997919,47999967,48002015,48004063,48006074,48008122,48010170,48012218,48014266,48016314,48018362,48020410,48022458,48024506,48026554,48028602,48030650,48032698,48034746,48036794,48038842,48040890,48042938,48044945,48046993,48048996,48051007,48053055,48055062,48057110,48059112,48061160,48063208,48065210,48067258,48069306,48071307,48073355,48075356,48077404,48079406,48081417,48083465,48085472,48087520,48089568,48091616,48093664,48095712,48097760,48099808,48101856,48103904,48105952,48108000,48110048,48112096,48114144,48116192,48118240,48120288,48122295,48124343,48126391,48128439,48130487,48132535,48134583,48136631,48138679,48140727,48142775,48144823,48146871,48148919,48150967,48153015,48155063,48157111,48159112,48161160,48163208,48165215,48167263,48169311,48171359,48173363,48175411,48177459,48179507,48181555,48183558,48185606,48187654,48189702,48191750,48193753,48195801,48197849,48199897,48201945,48203993,48206041,48208089,48210137,48212185,48214233,48216281,48218282,48220330,48222378,48224426,48226474,48228522,48230570,48232571,48234619,48236667,48238715,48240763,48242811,48244841,48246894,48248942,48250990,48253038,48255086,48257134,48259182,48261230,48263278,48265326,48267374,48269422,48271470,48273518,48275566,48277614,48279662,48281666,48283714,48285762,48287810,48289858,48291906,48293954,48296002,48298050,48300098,48302146,48304194,48306242,48308290,48310338,48312386,48314434,48316482,48318485,48320533,48322581,48324629,48326677,48328725,48330773,48332821,48334869,48336917,48338965,48341013,48343061,48345109,48347157,48349205,48351253,48353301,48355349,48357405,48359453,48361497,48363365,48365413,48367461,48369509,48371557,48373605,48375653,48377701,48379749,48381797,48383845,48385893,48387950,48390006,48392054,48394102,48396158,48398206,48400244,48402273,48404265,48406223,48408023,48409963,48412011,48414059,48416107,48418155,48420203,48422251,48424299,48426347,48428395,48430443,48432491,48434539,48436587,48438635,48440683,48442731,48444779,48446827,48448875,48450923,48452971,48454963,48457011,48459059,48461107,48463155,48465203,48467251,48469299,48471347,48473395,48475443,48477491,48479539,48481587,48483635,48485683,48487731,48489779,48491827,48493875,48495923,48497971,48500019,48502004,48504052,48506100,48508148,48510196,48512244,48514292,48516340,48518388,48520436,48522484,48524532,48526580,48528628,48530676,48532724,48534772,48536820,48538830,48540878,48542926,48544974,48547022,48549070,48551118,48553166,48555214,48557262,48559310,48561358,48563406,48565454,48567502,48569550,48571598,48573646,48575694,48577641,48579689,48581737,48583785,48585833,48587881,48589929,48591977,48594025,48596073,48598121,48600169,48602217,48604265,48606313,48608361,48610409,48612457,48614459,48616507,48618555,48620603,48622651,48624699,48626747,48628795,48630843,48632891,48634939,48636987,48639035,48641083,48643131,48645179,48647227,48649231,48651279,48653327,48655375,48657423,48659471,48661519,48663469,48665517,48667565,48669569,48671617,48673665,48675713,48677761,48679809,48681857,48683905,48685953,48687959,48690007,48692055,48694103,48696151,48698199,48700247,48702295,48704343,48706391,48708439,48710487,48712535,48714583,48716631,48718679,48720727,48722775,48724823,48726871,48728919,48730967,48733015,48735063,48737111,48739159,48741207,48743255,48745303,48747351,48749399,48751447,48753495,48755500,48757548,48759596,48761644,48763692,48765740,48767788,48769836,48771884,48773932,48775980,48778028,48780076,48782124,48784172,48786220,48788268,48790316,48792364,48794412,48796460,48798508,48800556,48802604,48804652,48806700,48808748,48810796,48812844,48814892,48816940,48818988,48821036,48823038,48825086,48827134,48829182,48831230,48833278,48835326,48837374,48839382,48841430,48843478,48845526,48847574,48849622,48851670,48853718,48855729,48857777,48859825,48861826,48863874,48865922,48867932,48869980,48872028,48874076,48876124,48878172,48880220,48882268,48884316,48886364,48888412,48890460,48892508,48894556,48896562,48898610,48900658,48902706,48904754,48906802,48908850,48910898,48912946,48914994,48917042,48919090,48921138,48923186,48925191,48927239,48929287,48931335,48933383,48935431,48937479,48939527,48941575,48943623,48945671,48947673,48949721,48951769,48953817,48955865,48957913,48959961,48962009,48964057,48966105,48968150,48970190,48972188,48974236,48976241,48978289,48980337,48982346,48984394,48986402,48988450,48990498,48992497,48994545,48996544,48998592,49000588,49002636,49004692,49006740,49008788,49010836,49012884,49014932,49016980,49019028,49021076,49023124,49025172,49027220,49029268,49031316,49033364,49035412,49037460,49039508,49041556,49043604,49045652,49047700,49049748,49051796,49053795,49055843,49057891,49059939,49061987,49064035,49066083,49068131,49070179,49072227,49074275,49076323,49078371,49080419,49082467,49084515,49086563,49088611,49090659,49092707,49094755,49096803,49098851,49100899,49102947,49104995,49106995,49109043,49111091,49113139,49115187,49117235,49119246,49121294,49123342,49125390,49127438,49129486,49131534,49133544,49135592,49137599,49139647,49141650,49143698,49145746,49147794,49149842,49151852,49153900,49155948,49157996,49160044,49162092,49164093,49166141,49168189,49170237,49172285,49174333,49176381,49178429,49180477,49182525,49184573,49186621,49188669,49190717,49192765,49194772,49196820,49198868,49200916,49202964,49205012,49207060,49209108,49211156,49213204,49215252,49217300,49219348,49221396,49223444,49225492,49227496,49229544,49231600,49233592,49235640,49237639,49239687,49241735,49243783,49245831,49247879,49249927,49251975,49254023,49256071,49258119,49260167,49262215,49264263,49266311,49268359,49270407,49272455,49274503,49276551,49278599,49280655,49282705,49284726,49286607,49288470,49290518,49292566,49294614,49296662,49298710,49300758,49302806,49304854,49306902,49308950,49310998,49313046,49315094,49317142,49319190,49321238,49323286,49325338,49327386,49329441,49331489,49333525,49335535,49337302,49339350,49341398,49343446,49345494,49347542,49349590,49351638,49353686,49355734,49357782,49359830,49361878,49363926,49365974,49368022,49370070,49372118,49374166,49376214,49378262,49380316,49382321,49384239,49386287,49388335,49390383,49392431,49394479,49396527,49398575,49400623,49402671,49404719,49406767,49408815,49410863,49412911,49414959,49417007,49419055,49421103,49423159,49425207,49427245,49429067,49431115,49433163,49435211,49437259,49439307,49441355,49443362,49445366,49447374,49449422,49451470,49453518,49455566,49457614,49459662,49461710,49463758,49465764,49467812,49469860,49471908,49473956,49476004,49478052,49480100,49482148,49484151,49486199,49488247,49490295,49492343,49494391,49496392,49498440,49500488,49502536,49504584,49506632,49508624,49510672,49512720,49514768,49516816,49518864,49520912,49522960,49525008,49527056,49529104,49531152,49533200,49535248,49537296,49539344,49541392,49543440,49545488,49547536,49549584,49551632,49553686,49555640,49557688,49559736,49561784,49563832,49565880,49567928,49569976,49572024,49574072,49576120,49578168,49580216,49582264,49584312,49586360,49588408,49590456,49592504,49594552,49596600,49598648,49600696,49602727,49604719,49606767,49608815,49610863,49612911,49614959,49617007,49619055,49621103,49623151,49625199,49627247,49629295,49631343,49633391,49635439,49637495,49639543,49641591,49643644,49645692,49647749,49649771,49651652,49653700,49655748,49657796,49659844,49661892,49663940,49665988,49668036,49670084,49672132,49674180,49676228,49678276,49680324,49682372,49684420,49686477,49688525,49690573,49692621,49694669,49696723,49698581,49700619,49702633,49704681,49706694,49708742,49710751,49712799,49714801,49716849,49718897,49720945,49722993,49725045,49726999,49729047,49731095,49733143,49735191,49737239,49739287,49741263,49743311,49745359,49747407,49749455,49751503,49753551,49755599,49757647,49759695,49761702,49763750,49765798,49767846,49769894,49771942,49773990,49776038,49778086,49780134,49782182,49784183,49786186,49788191,49790193,49792202,49794250,49796197,49798200,49800248,49802296,49804344,49806392,49808440,49810488,49812536,49814584,49816632,49818680,49820728,49822776,49824824,49826872,49828920,49830968,49832979,49835027,49837075,49839123,49841171,49843219,49845267,49847315,49849363,49851411,49853459,49855507,49857555,49859603,49861651,49863699,49865747,49867795,49869800,49871848,49873896,49875944,49877992,49880040,49882088,49884136,49886184,49888232,49890280,49892328,49894376,49896424,49898472,49900520,49902523,49904571,49906619,49908667,49910715,49912763,49914811,49916859,49918907,49920955,49923003,49925051,49927099,49929147,49931195,49933205,49935253,49937301,49939349,49941397,49943445,49945450,49947506,49949554,49951602,49953650,49955651,49957699,49959747,49961795,49963843,49965891,49967939,49969987,49972035,49974083,49976131,49978179,49980227,49982275,49984323,49986371,49988419,49990467,49992515,49994524,49996572,49998620,50000668,50002716,50004764,50006812,50008860,50010908,50012956,50015004,50017052,50019100,50021148,50023196,50025244,50027292,50029340,50031388,50033436,50035438,50037486,50039534,50041582,50043630,50045678,50047676,50049724,50051772,50053820,50055868,50057879,50059927,50061975,50064023,50066071,50068119,50070167,50072215,50074263,50076311,50078359,50080407,50082455,50084503,50086551,50088599,50090647,50092695,50094701,50096749,50098797,50100845,50102893,50104941,50106989,50109037,50111085,50113133,50115181,50117229,50119277,50121325,50123373,50125421,50127469,50129517,50131516,50133564,50135612,50137660,50139708,50141756,50143804,50145852,50147861,50149909,50151957,50154005,50156053,50158101,50160149,50162197,50164245,50166247,50168295,50170343,50172391,50174439,50176487,50178535,50180583,50182631,50184679,50186727,50188775,50190823,50192871,50194919,50196967,50198978,50201026,50203074,50205122,50207170,50209218,50211266,50213314,50215362,50217410,50219458,50221506,50223554,50225602,50227650,50229698,50231746,50233749,50235797,50237746,50239794,50241842,50243890,50245868,50247916,50249964,50252012,50253999,50256006,50258017,50260065,50262069,50263956,50265957,50267962,50270010,50272011,50274059,50276107,50278155,50280203,50282251,50284299,50286347,50288395,50290426,50292380,50294136,50296184,50298232,50300280,50302328,50304376,50306424,50308472,50310520,50312568,50314616,50316617,50318504,50320552,50322600,50324648,50326696,50328744,50330792,50332840,50334888,50336936,50338938,50340986,50343034,50345082,50347130,50349178,50351226,50353274,50355322,50357370,50359371,50361419,50363467,50365515,50367563,50369564,50371612,50373660,50375708,50377756,50379768,50381816,50383864,50385912,50387968,50390020,50391950,50393998,50396046,50398094,50400142,50402198,50404161,50406045,50408100,50410148,50412196,50414244,50416292,50418340,50420388,50422436,50424484,50426532,50428580,50430628,50432676,50434724,50436772,50438820,50440868,50442916,50444964,50447012,50449060,50451108,50453156,50455204,50457252,50459300,50461203,50463247,50465303,50467351,50469399,50471447,50473495,50475543,50477591,50479639,50481687,50483735,50485783,50487831,50489879,50491927,50493975,50496023,50498071,50500119,50502167,50504215,50506263,50508311,50510359,50512407,50514455,50516462,50518510,50520558,50522606,50524654,50526702,50528750,50530798,50532846,50534851,50536899,50538947,50540995,50543043,50545091,50547139,50549187,50551235,50553236,50555284,50557332,50559380,50561428,50563476,50565524,50567572,50569577,50571625,50573673,50575721,50577769,50579817,50581865,50583913,50585918,50587966,50590014,50592062,50594119,50596167,50598215,50600263,50602270,50604318,50606366,50608414,50610419,50612467,50614515,50616563,50618611,50620610,50622654,50624702,50626750,50628755,50630688,50632631,50634679,50636727,50638775,50640774,50642769,50644658,50646653,50648701,50650749,50652797,50654778,50656826,50658874,50660868,50662916,50664909,50666957,50669005,50671053,50673101,50675080,50677128,50679172,50681148,50683111,50685159,50687146,50689201,50691254,50693302,50695246,50697294,50699296,50701344,50703392,50705440,50707456,50709504,50711510,50713515,50715526,50717453,50719367,50721415,50723463,50725511,50727503,50729551,50731599,50733647,50735695,50737743,50739791,50741638,50743686,50745734,50747782,50749830,50751878,50753926,50755883,50757931,50759979,50762027,50763968,50766016,50768064,50770112,50772160,50774208,50776256,50778256,50780304,50782352,50784400,50786448,50788373,50790421,50792469,50794517,50796276,50797392,50798499,50799828,50801488,50802804,50804259,50806007,50807281,50808238,50809470,50810668,50812076,50813503,50814939,50816419,50817901,50818767,50819578,50820424,50820569,50820594,50821308,50823145,50824969,50826869,50828765,50830171,50831334,50832633,50833875,50834897,50835853,50836886,50837900,50839369,50840951,50842621,50844266,50845954,50847581,50849272,50850913,50852607,50854289,50855990,50857573,50859248,50860988,50862648,50864307,50865995,50867645,50869340,50871034,50872711,50874385,50875970,50877622,50879308,50881011,50882629,50884192,50885258,50886660,50888193,50889837,50891561,50893473,50895385,50897287,50899222,50900431,50901605,50902919,50903935,50905586,50907634,50909682,50911730,50913778,50915826,50917874,50919922,50921970,50924018,50926066,50928114,50930162,50932210,50934258,50936306,50938354,50940402,50942450,50944498,50946546,50948594,50950642,50952690,50954738,50956786,50958834,50960882,50962930,50964978,50967026,50969074,50971122,50973126,50975174,50977222,50979270,50981318,50983366,50985414,50987462,50989510,50991558,50993606,50995654,50997702,50999750,51001798,51003846,51005894,51007942,51009990,51012038,51014086,51016134,51018182,51020230,51022278,51024326,51026374,51028422,51030470,51032518,51034566,51036614,51038662,51040710,51042758,51044806,51046854,51048857,51050905,51052953,51055001,51057049,51059097,51061145,51063193,51065241,51067289,51069337,51071385,51073433,51075481,51077529,51079577,51081625,51083673,51085721,51087769,51089817,51091865,51093913,51095961,51098009,51100057,51102105,51104162,51106210,51108258,51110306,51112354,51114402,51116408,51118463,51120511,51122559,51124607,51126655,51128703,51130751,51132799,51134847,51136895,51138943,51140991,51143039,51145087,51147135,51149183,51151231,51153279,51155327,51157375,51159423,51161471,51163519,51165567,51167615,51169663,51171667,51173715,51175763,51177811,51179859,51181907,51183955,51186003,51188051,51190099,51192147,51194195,51196243,51198291,51200339,51202387,51204435,51206483,51208540,51210588,51212636,51214684,51216732,51218780,51220828,51222876,51224627,51226675,51228723,51230771,51232819,51234867,51236915,51238963,51241011,51243059,51245107,51247155,51249203,51251251,51253299,51255347,51257395,51259443,51261491,51263539,51265587,51267635,51269683,51271740,51273790,51275828,51277876,51279873,51281921,51283969,51286017,51288065,51290113,51292161,51294209,51296257,51298305,51300353,51302401,51304449,51306497,51308545,51310593,51312641,51314689,51316737,51318792,51320846,51322894,51324951,51327007,51329063,51331061,51333109,51335157,51337205,51339253,51341301,51343349,51345397,51347445,51349493,51351541,51353589,51355637,51357685,51359733,51361734,51363782,51365830,51367878,51369926,51371974,51374022,51376070,51378118,51380166,51382214,51384212,51386260,51388308,51390356,51392404,51394452,51396500,51398548,51400596,51402644,51404692,51406740,51408672,51410610,51412606,51414536,51416584,51418585,51420590,51422638,51424633,51426633,51428634,51430618,51432616,51434616,51436614,51438610,51440548,51442596,51444644,51446643,51448691,51450692,51452740,51454741,51456789,51458785,51460833,51462765,51464813,51466811,51468859,51470851,51472804,51474852,51476835,51478883,51480807,51482855,51484849,51486836,51488884,51490881,51492866,51494894,51496875,51498808,51500808,51502856,51504904,51506952,51509000,51511048,51513096,51515144,51517192,51519237,51521207,51523255,51525303,51527351,51529399,51531447,51533495,51535543,51537540,51539588,51541581,51543629,51545677,51547725,51549773,51551821,51553814,51555809,51557857,51559905,51561953,51564001,51566049,51568097,51570094,51572142,51574190,51576238,51578245,51580241,51582289,51584337,51586385,51588433,51590481,51592472,51594520,51596568,51598616,51600618,51602614,51604662,51606660,51608658,51610706,51612754,51614802,51616850,51618898,51620946,51622994,51625042,51627090,51629094,51631142,51633135,51635071,51637119,51639167,51641215,51643263,51645311,51647359,51649352,51651216,51653206,51655206,51657254,51659238,51661286,51663334,51665382,51667430,51669478,51671526,51673574,51675622,51677670,51679718,51681766,51683814,51685862,51687910,51689958,51692006,51694054,51696102,51698150,51700198,51702197,51704245,51706293,51708341,51710397,51712445,51714493,51716541,51718589,51720637,51722685,51724733,51726781,51728829,51730877,51732925,51734973,51737021,51739069,51741117,51743107,51745155,51747203,51749251,51751299,51753347,51755395,51757443,51759491,51761539,51763587,51765635,51767683,51769731,51771779,51773827,51775821,51777869,51779917,51781965,51784013,51786061,51788109,51790157,51792205,51794253,51796301,51798349,51800397,51802445,51804493,51806541,51808589,51810637,51812685,51814685,51816733,51818728,51820776,51822824,51824872,51826850,51828898,51830946,51832945,51834993,51837041,51838982,51841030,51843078,51845077,51846856,51848495,51850543,51852541,51854589,51856585,51858633,51860626,51862626,51864674,51866667,51868660,51870654,51872589,51874637,51876635,51878683,51880686,51882734,51884736,51886784,51888777,51890780,51892778,51894826,51896825,51898873,51900880,51902928,51904976,51906973,51909021,51911016,51913064,51915065,51917113,51919115,51921163,51923162,51925210,51927258,51929306,51931354,51933402,51935450,51937449,51939497,51941495,51943543,51945541,51947589,51949589,51951637,51953642,51955690,51957684,51959684,51961686,51963734,51965733,51967736,51969743,51971740,51973788,51975836,51977835,51979883,51981931,51983979,51985972,51988020,51990068,51992063,51994111,51996159,51998153,52000201,52002202,52004250,52006298,52008295,52010343,52012345,52014393,52016441,52018436,52020484,52022479,52024527,52026522,52028570,52030618,52032618,52034666,52036714,52038709,52040757,52042752,52044800,52046792,52048840,52050837,52052838,52054886,52056886,52058825,52060667,52062715,52064763,52066811,52068805,52070853,52072858,52074906,52076954,52078949,52080997,52082998,52085046,52087048,52089096,52091144,52093136,52095184,52097183,52099231,52101279,52103273,52105321,52107320,52109365,52111332,52113206,52115254,52117302,52119350,52121398,52123395,52125443,52127491,52129539,52131587,52133582,52135521,52137569,52139443,52141491,52143539,52145541,52147542,52149590,52151638,52153686,52155685,52157733,52159781,52161829,52163877,52165925,52167924,52169847,52171895,52173943,52175991,52178039,52180087,52182135,52184183,52186177,52188225,52190273,52192321,52194322,52196228,52198276,52200279,52202327,52204375,52206368,52208300,52210348,52212396,52214391,52216439,52218434,52220482,52222479,52224527,52226464,52228457,52230457,52232479,52234532,52236534,52238537,52240585,52242581,52244581,52246581,52248568,52250546,52252594,52254573,52256621,52258600,52260643,52262691,52264739,52266787,52268780,52270828,52272876,52274924,52276972,52278971,52280949,52282997,52285045,52287093,52289141,52291189,52293237,52295285,52297333,52299381,52301429,52303477,52305525,52307573,52309621,52311669,52313717,52315765,52317813,52319861,52321864,52323912,52325960,52328008,52330056,52332104,52334152,52336200,52338248,52340296,52342344,52344392,52346440,52348488,52350536,52352584,52354632,52356680,52358679,52360727,52362775,52364823,52366871,52368919,52370967,52373015,52375063,52377111,52379159,52381207,52383255,52385303,52387351,52389399,52391447,52393495,52395483,52397531,52399579,52401627,52403675,52405723,52407771,52409819,52411867,52413915,52415963,52418011,52420059,52422107,52424155,52426157,52428205,52430253,52432301,52434349,52436397,52438445,52440493,52442541,52444589,52446637,52448685,52450733,52452781,52454829,52456877,52458925,52460973,52463021,52465019,52467067,52469115,52471163,52473211,52475259,52477258,52479306,52481354,52483402,52485450,52487453,52489501,52491549,52493597,52495645,52497641,52499644,52501692,52503689,52505692,52507740,52509738,52511786,52513778,52515792,52517840,52519888,52521936,52523984,52526032,52528080,52530072,52532120,52534168,52536216,52538264,52540312,52542360,52544408,52546456,52548504,52550552,52552551,52554599,52556647,52558695,52560743,52562791,52564839,52566887,52568935,52570934,52572982,52575030,52577078,52579126,52581174,52583222,52585270,52587318,52589317,52591365,52593413,52595461,52597509,52599557,52601605,52603653,52605701,52607749,52609797,52611845,52613893,52615896,52617944,52619992,52622040,52624088,52626136,52628184,52630232,52632280,52634328,52636376,52638424,52640472,52642467,52644515,52646563,52648611,52650659,52652707,52654755,52656803,52658851,52660899,52662947,52664995,52666987,52669035,52671083,52673131,52675179,52677227,52679275,52681323,52683371,52685419,52687467,52689515,52691509,52693510,52695558,52697606,52699654,52701702,52703750,52705798,52707846,52709894,52711942,52713990,52716038,52718086,52720134,52722182,52724182,52726230,52728278,52730326,52732374,52734422,52736470,52738518,52740566,52742614,52744662,52746710,52748758,52750806,52752854,52754902,52756950,52758998,52761046,52763094,52765142,52767190,52769188,52771236,52773284,52775332,52777380,52779428,52781476,52783524,52785572,52787620,52789668,52791716,52793764,52795812,52797860,52799842,52801890,52803938,52805931,52807979,52809978,52812026,52814027,52816075,52818073,52820121,52822118,52824166,52826091,52828075,52830123,52832171,52834163,52836211,52838209,52840257,52842258,52844306,52846354,52848354,52850402,52852447,52854475,52856523,52858522,52860570,52862618,52864611,52866659,52868707,52870635,52872683,52874731,52876728,52878776,52880779,52882827,52884824,52886872,52888920,52890917,52892965,52894968,52897016,52899010,52901058,52903106,52905154,52907202,52909250,52911298,52913346,52915394,52917442,52919490,52921538,52923586,52925634,52927682,52929730,52931778,52933826,52935874,52937922,52939970,52942018,52944066,52946114,52948162,52950210,52952258,52954256,52956304,52958352,52960400,52962448,52964496,52966544,52968592,52970640,52972688,52974736,52976784,52978832,52980880,52982928,52984976,52987024,52989072,52991120,52993168,52995165,52997213,52999261,53001309,53003357,53005405,53007453,53009501,53011549,53013597,53015645,53017693,53019741,53021789,53023837,53025885,53027933,53029981,53032029,53034077,53036072,53038120,53040168,53042216,53044264,53046312,53048360,53050408,53052456,53054504,53056552,53058600,53060648,53062696,53064744,53066792,53068840,53070888,53072936,53074984,53077032,53079080,53081128,53083176,53085224,53087272,53089271,53091319,53093367,53095415,53097463,53099511,53101559,53103607,53105655,53107703,53109751,53111799,53113847,53115895,53117943,53119991,53122039,53124087,53126135,53128183,53130231,53132279,53134327,53136375,53138423,53140471,53142519,53144517,53146189,53148188,53150236,53152240,53154288,53156336,53158331,53160379,53162375,53164423,53166418,53168466,53170461,53172456,53174504,53176505,53178441,53180489,53182488,53184536,53186536,53188517,53190520,53192568,53194571,53196564,53198612,53200607,53202528,53204579,53206627,53208623,53210671,53212719,53214715,53216763,53218764,53220812,53222860,53224853,53226901,53228896,53230944,53232943,53234991,53236973,53238979,53241034,53243082,53245075,53247080,53249128,53251060,53253061,53255063,53257002,53259050,53261057,53263105,53265153,53267146,53269144,53271192,53273189,53275188,53277236,53279233,53281229,53283232,53285280,53287277,53289325,53291323,53293371,53295371,53297419,53299418,53301466,53303514,53305514,53307562,53309560,53311608,53313537,53315531,53317533,53319581,53321582,53323581,53325586,53327634,53329633,53331629,53333677,53335638,53337683,53339686,53341734,53343733,53345781,53347781,53349829,53351825,53353827,53355875,53357878,53359926,53361974,53363979,53366027,53368075,53370123,53372119,53374167,53376167,53378215,53380263,53382261,53384309,53386357,53388356,53390404,53392342,53394390,53396438,53398486,53400534,53402582,53404630,53406678,53408726,53410774,53412822,53414817,53416865,53418913,53420961,53423009,53425057,53427058,53429053,53431101,53433087,53435135,53437183,53439231,53441229,53443277,53445276,53447028,53448957,53451005,53453053,53455101,53457149,53459197,53461245,53463293,53465341,53467389,53469437,53471439,53473439,53475487,53477535,53479583,53481631,53482964,53484954,53487002,53489050,53491098,53493146,53495143,53497082,53499130,53501178,53503226,53505221,53507269,53509317,53511365,53513372,53515306,53517354,53519402,53521403,53523451,53525499,53527494,53529542,53531537,53533585,53535585,53537633,53539681,53541680,53543728,53545731,53547779,53549827,53551827,53553822,53555870,53557918,53559966,53561964,53563962,53566010,53568058,53570061,53571865,53573913,53575911,53577910,53579848,53581852,53583791,53585839,53587887,53589935,53591942,53593990,53596038,53598086,53600134,53602133,53604181,53606229,53608277,53610325,53612373,53614421,53616469,53618466,53620514,53622515,53624563,53626535,53628583,53630631,53632679,53634727,53636775,53638774,53640822,53642870,53644918,53646966,53649014,53651062,53653110,53655158,53657206,53659254,53661268,53663316,53665364,53667412,53669460,53671508,53673503,53675551,53677599,53679647,53681695,53683743,53685791,53687839,53689887,53691935,53693983,53696031,53698079,53700127,53702175,53704223,53706271,53708319,53710367,53712415,53714463,53716511,53718559,53720607,53722655,53724703,53726698,53728746,53730794,53732788,53734836,53736884,53738932,53740980,53743028,53745076,53747124,53749172,53751220,53753268,53755316,53757364,53759412,53761415,53763463,53765511,53767559,53769615,53771663,53773656,53775704,53777697,53779745,53781793,53783841,53785835,53787883,53789931,53791979,53794027,53796075,53798123,53800171,53802219,53804267,53806315,53808363,53810411,53812459,53814507,53816555,53818603,53820597,53822645,53824693,53826741,53828789,53830837,53832885,53834933,53836981,53839029,53841077,53843125,53845173,53847221,53849269,53851212,53853206,53855254,53857302,53859350,53861398,53863387,53865435,53867438,53869486,53871534,53873421,53875038,53877086,53879079,53881127,53883175,53885223,53887271,53889319,53891367,53893415,53895463,53897511,53899559,53901607,53903655,53905703,53907751,53909799,53911847,53913895,53915943,53917991,53920039,53922087,53924090,53926138,53928186,53930238,53932220,53934268,53936316,53938364,53940412,53942405,53944453,53946501,53948549,53950524,53952572,53954620,53956668,53958716,53960764,53962780,53964687,53966735,53968726,53970774,53972822,53974815,53976863,53978911,53980959,53983007,53985055,53987103,53989151,53991199,53993247,53995295,53997343,53999391,54001439,54003487,54005535,54007583,54009631,54011679,54013727,54015725,54017773,54019821,54021869,54023864,54025912,54027910,54029958,54032006,54034001,54036049,54038097,54040119,54041962,54044010,54046058,54047928,54049976,54052027,54053632,54055680,54057728,54059776,54061824,54063872,54065842,54067890,54069938,54071986,54074034,54076034,54078082,54080130,54082178,54084226,54086274,54088322,54090370,54092418,54094418,54096466,54098514,54100562,54102610,54104658,54106706,54108762,54110804,54112802,54114850,54116843,54118891,54120939,54122936,54124936,54126984,54129032,54131062,54133037,54135085,54137133,54139181,54141229,54143277,54145279,54147327,54149248,54151296,54153344,54155392,54157380,54159428,54161476,54163469,54165517,54167510,54169558,54171560,54173608,54175656,54177704,54179752,54181800,54183848,54185845,54187893,54189941,54191989,54194037,54196085,54198133,54200181,54202229,54204277,54206279,54208327,54210382,54212361,54214409,54216457,54218505,54220553,54222601,54224649,54226697,54228745,54230744,54232792,54234840,54236888,54238936,54240984,54243032,54245030,54247078,54249070,54251118,54253166,54255214,54257009,54259057,54261105,54262863,54264880,54266928,54268976,54271024,54273046,54275097,54277145,54279116,54281164,54283212,54285194,54287242,54289230,54291198,54293060,54295114,54296964,54299012,54301060,54303108,54305070,54307118,54309166,54311214,54313262,54315310,54317358,54319406,54321362,54323410,54325458,54327506,54329554,54331602,54333650,54335698,54337746,54339794,54341842,54343890,54345889,54347937,54349985,54352033,54354081,54356129,54358177,54360225,54362273,54364321,54366369,54368417,54370465,54372513,54374561,54376559,54378607,54380655,54382703,54384751,54386799,54388847,54390895,54392943,54395000,54397056,54399104,54401158,54402959,54405007,54407055,54409103,54411151,54413199,54415247,54417295,54419343,54421391,54423439,54425487,54427535,54429583,54431631,54433679,54435727,54437775,54439768,54441816,54443864,54445912,54447960,54450008,54452056,54454053,54456101,54458149,54460148,54462196,54464196,54466244,54468292,54470340,54472395,54474443,54476446,54478494,54480542,54482590,54484638,54486686,54488734,54490782,54492830,54494878,54496926,54498974,54501022,54503070,54505118,54507166,54509214,54511262,54513260,54515308,54517356,54519404,54521452,54523500,54525548,54527596,54529644,54531692,54533740,54535788,54537836,54539884,54541932,54543939,54545987,54548035,54550083,54552131,54554179,54556227,54558275,54560323,54562317,54564365,54566413,54568461,54570509,54572557,54574605,54576653,54578701,54580696,54582744,54584792,54586840,54588888,54590936,54592984,54595032,54597031,54599079,54601127,54603175,54605223,54607271,54609319,54611318,54613366,54615414,54617462,54619510,54621558,54623606,54625654,54627653,54629701,54631749,54633744,54635792,54637840,54639841,54641839,54643710,54645491,54647546,54649594,54651642,54653690,54655738,54657539,54659587,54661635,54663683,54665731,54667779,54669582,54671630,54673678,54675726,54677774,54679822,54681717,54683765,54685813,54687810,54689858,54691906,54693954,54695956,54697955,54700003,54702051,54704099,54706147,54708195,54710243,54712291,54714292,54716340,54718388,54720436,54722484,54724532,54726580,54728628,54730676,54732679,54734683,54736731,54738779,54740827,54742875,54744923,54746971,54749019,54751067,54753115,54755163,54757166,54759214,54761262,54763310,54765358,54767406,54769454,54771502,54773550,54775598,54777646,54779694,54781742,54783764,54785815,54787863,54789911,54791959,54794007,54796055,54798103,54800151,54802199,54804247,54806295,54808325,54810374,54812422,54814470,54816518,54818566,54820614,54822662,54824710,54826758,54828806,54830854,54832859,54834907,54836955,54839003,54841051,54843099,54845147,54847195,54849243,54851291,54853339,54855387,54857435,54859432,54861480,54863528,54865576,54866685,54867836,54868998,54870158,54871148,54872145,54874032,54875730,54877600,54879362,54881251,54882846,54884074,54885398,54887374,54889422,54891470,54892602,54892636,54892670,54892704,54892738,54892772,54892806,54892840,54892996,54893885,54894825,54895913,54897018,54898105,54899034,54899896,54900629,54901564,54902509,54903523,54904413,54905471,54906368,54907344,54908457,54909435,54910511,54911516,54912466,54913346,54914162,54914990,54915977,54917076,54918009,54918893,54919730,54920631,54921580,54922510,54923403,54924401,54925280,54926005,54926891,54927932,54929130,54930090,54931049,54932372,54933660,54934913,54936159,54937448,54938738,54940203,54941541,54943019,54944412,54945787,54946859,54947731,54948792,54949793,54950673,54951634,54952699,54953735,54954624,54955791,54956809,54958018,54959124,54960233,54961386,54962539,54963622,54964765,54965998,54967363,54968603,54970150,54971666,54973057,54974050,54974976,54975794,54977647,54979501,54981397,54983369,54985273,54987070,54989044,54991092,54993140,54995188,54997236,54999284,55001332,55003380,55005428,55007476,55009524,55011572,55013620,55015668,55017716,55019764,55021812,55023860,55025908,55027887,55029935,55031983,55034031,55036079,55038127,55040175,55042223,55044271,55046319,55048367,55050415,55052463,55054511,55056559,55058607,55060655,55062703,55064751,55066799,55068775,55070823,55072871,55074919,55076967,55079015,55081063,55083111,55085159,55087207,55089255,55091303,55093351,55095399,55097447,55099495,55101543,55103591,55105639,55107684,55109690,55111738,55113786,55115834,55117882,55119930,55121978,55124026,55126074,55128122,55130170,55132218,55134266,55136314,55138362,55140410,55142458,55144506,55146554,55148531,55150579,55152627,55154675,55156723,55158771,55160819,55162867,55164915,55166963,55169011,55171059,55173107,55175155,55177203,55179251,55181299,55183347,55185395,55187443,55189417,55191465,55193513,55195561,55197609,55199657,55201705,55203753,55205801,55207849,55209897,55211945,55213993,55216041,55218089,55220137,55222185,55224233,55226281,55228262,55230310,55232358,55234406,55236454,55238502,55240550,55242598,55244646,55246694,55248742,55250790,55252838,55254886,55256934,55258982,55261030,55263078,55265126,55267174,55269149,55271197,55273245,55275293,55277341,55279389,55281437,55283485,55285533,55287581,55289629,55291677,55293725,55295773,55297821,55299869,55301917,55303965,55306013,55307996,55310044,55312092,55314140,55316115,55318163,55320141,55322123,55323430,55324787,55326571,55327849,55328988,55330637,55331971],\"sizes\":[1641,1482,1475,1484,1493,1482,1476,1483,1480,1476,1474,1476,1477,1481,1474,1492,1461,1478,1476,1484,1477,1495,1482,1478,1487,1485,1132,559,566,703,371,598,309,533,510,466,450,594,499,405,220,306,252,250,263,273,220,316,322,245,151,138,229,140,97,90,366,496,355,269,321,244,531,451,421,238,329,446,499,446,570,189,386,548,616,323,146,292,456,320,273,304,350,256,299,310,82,85,106,268,258,234,525,515,410,300,106,344,376,294,359,475,379,291,394,490,516,448,453,2052,2020,2048,2056,2031,2028,2054,2053,1822,1720,1724,1737,1698,1729,1722,1723,1721,1700,1707,1719,1719,1698,1698,1704,1677,1700,1737,1635,1671,1675,1694,1732,1719,1733,1730,1740,1724,1652,1737,1717,1737,1745,1726,1723,1705,1789,2048,2048,2048,2048,2048,1999,1734,1701,1686,1718,1748,1831,1773,1861,1650,1751,1787,1686,1750,1703,1691,1673,1592,1704,1678,1717,1676,1621,1695,1745,1690,1679,1726,1727,1771,1620,1657,1649,1735,1758,1735,1712,1734,1637,1756,1692,1713,722,447,567,641,1076,825,881,857,977,1021,1075,1443,1824,1870,1837,1874,1859,1871,1557,1478,1501,1455,1447,1442,1442,1442,1431,1441,1436,1476,1470,1463,1448,1471,1456,1475,1471,1466,1483,1466,1474,1423,1452,1473,1474,1471,1460,1479,1441,1455,1454,1469,1466,1469,1475,1478,1461,1461,1452,1470,1467,1446,1449,1456,1454,1446,1457,1481,1462,1474,1447,1474,1463,1447,1469,1461,1471,1474,1478,1487,1464,1478,1475,1459,1464,1463,1442,1438,1455,1459,1469,1467,959,594,456,539,362,331,356,387,473,526,529,428,547,527,398,459,458,474,446,448,478,431,437,583,596,483,440,610,558,356,519,637,456,593,633,466,465,350,424,384,429,476,392,421,472,389,423,308,201,251,538,493,395,363,603,441,460,554,566,621,575,497,468,547,472,503,478,471,495,397,534,375,344,330,510,483,451,511,589,631,473,493,544,371,505,515,535,338,587,598,572,600,586,581,600,491,512,460,530,461,444,444,475,564,451,536,546,497,598,454,546,535,590,613,487,491,453,459,465,379,428,343,497,451,496,469,437,406,471,478,552,613,565,487,368,419,349,564,503,623,343,209,168,106,205,365,453,266,270,307,472,409,414,414,387,431,441,348,449,548,589,400,523,517,446,413,491,509,504,536,616,599,665,624,616,579,537,487,558,572,571,417,582,540,516,518,544,523,414,517,551,499,452,500,521,515,477,580,562,412,409,442,515,632,522,485,475,466,458,318,490,234,365,449,263,346,397,343,388,505,407,340,491,509,518,513,493,535,466,456,505,459,465,469,450,428,424,409,439,457,457,455,427,423,461,309,357,432,441,380,366,401,507,403,417,434,377,448,334,439,517,459,463,525,1691,1945,2025,1987,1999,1999,1922,1982,2050,2046,2054,2042,2017,2027,2026,2030,2055,2055,2048,1879,1726,1723,1702,1722,1714,1714,1732,1721,1705,1737,1723,1693,1709,1700,1713,1720,1704,1696,1685,1705,1723,1691,1675,1699,1667,1685,1679,1697,1687,1695,1707,1699,1682,1693,1690,1688,1678,1701,1728,1704,1731,1727,1707,1666,1680,1700,1738,1726,1717,1694,1653,1680,1664,1697,1687,1695,1683,1684,1695,1729,1752,1725,1665,1660,1698,1713,1717,1702,1705,1700,1695,1708,1689,1697,1714,1697,1710,1701,1689,1696,1722,1700,1701,1693,1698,1694,1720,1680,1710,1740,1743,1749,1749,1763,1733,1767,1736,1671,1674,1661,1689,1704,1681,1683,1673,1675,1730,1740,1732,1735,1688,1670,1667,1689,1838,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1719,1752,1706,1749,1806,1688,1717,1754,1638,1781,1744,1662,1737,1747,1740,1696,1589,1670,1690,1621,1627,1684,1553,1570,1583,1636,1608,1669,1623,1637,1639,1622,1653,1727,1727,1695,1777,1717,1748,1649,1808,1886,1843,1746,1707,1651,1644,1735,1739,1714,1649,1774,1850,1873,1659,1671,1643,1517,1521,1533,1479,1492,1540,1608,1660,1666,1554,1520,1633,1667,1634,1683,1684,1712,1578,1527,1660,1532,1769,1844,1796,1794,1792,1779,1779,1836,1795,1686,1654,1678,1699,1674,1648,1712,1772,1771,1750,1726,1613,1679,1627,482,476,555,515,584,701,648,610,587,469,338,618,666,619,759,604,517,713,640,620,545,438,509,547,573,563,132,141,435,526,279,240,130,748,646,545,308,456,558,388,597,358,422,144,116,148,147,210,369,642,745,675,617,551,512,713,822,780,975,1052,1028,871,789,755,849,298,314,436,342,361,134,134,154,463,406,250,245,225,204,311,406,252,752,499,278,495,419,237,203,224,412,415,266,342,268,310,257,621,480,471,657,520,508,642,813,917,776,748,861,904,746,681,728,754,674,706,809,690,636,505,517,494,529,532,501,542,621,830,809,821,799,792,784,579,685,966,807,894,542,783,1006,937,804,933,966,856,929,869,861,812,720,691,930,800,749,786,773,651,767,850,379,175,125,114,253,968,996,981,1007,1072,915,963,958,942,917,770,791,675,555,512,849,841,767,741,844,707,565,472,558,834,1001,1039,1080,1055,1097,976,1095,1119,1142,1093,887,721,503,421,383,366,352,341,595,844,947,1015,947,826,735,525,668,780,890,779,734,811,804,907,934,983,996,789,835,1042,1065,1104,1183,1124,1019,1136,1081,840,870,1059,1065,1195,1247,1052,975,1179,1188,1103,981,1038,1016,822,1044,1256,1184,1786,1606,1845,1874,1834,1876,1891,1839,1828,1871,1937,1981,1929,1892,1886,1951,1956,1857,1698,1593,1640,1488,1486,1504,1493,1517,1507,1495,1500,1503,1524,1480,1497,1510,1480,1488,1494,1475,1489,1510,1460,1491,1494,1491,1519,1525,1489,1495,1504,1452,1470,1498,1504,1504,1510,1500,1517,1503,1143,532,511,581,441,546,500,534,566,510,573,535,636,600,602,622,411,618,624,504,519,589,532,547,566,708,613,517,493,450,543,433,564,591,610,588,623,630,577,482,494,420,453,486,559,562,576,535,568,533,473,354,594,363,198,342,235,488,470,410,616,306,609,535,421,566,488,453,402,436,543,515,510,456,321,373,506,672,461,648,598,454,423,497,410,406,240,45,162,324,328,289,423,258,251,355,385,284,322,445,315,405,316,590,551,573,526,420,343,351,489,355,575,540,532,527,491,558,398,568,472,334,425,487,467,502,506,588,533,455,699,2022,2018,2039,2017,1993,2024,1986,2054,2045,2042,1962,1698,1681,1725,1690,1645,1692,1717,1696,1672,1706,1708,1719,1727,1715,1726,1710,1711,1716,1727,1704,1721,1703,1696,1703,1692,1714,1708,1713,1709,1687,1701,1670,1701,1712,1718,1706,1725,1707,1739,1713,1726,1730,1729,1719,1721,1711,1730,1723,1730,1728,1641,1680,1713,1712,1715,1703,1988,2048,2048,2048,2048,2048,2037,1643,1683,1653,1709,1768,1676,1672,1797,1734,1741,1721,1787,1792,1800,1829,1764,1763,1780,1732,1685,1744,1704,1708,1776,1701,1772,1709,1685,1729,1754,1770,1712,1787,1785,1779,1773,1783,1781,1756,1759,1759,1803,1612,1716,1763,1649,1115,756,832,895,897,915,730,944,1179,1441,1264,937,1111,1169,1276,1105,1123,1085,937,913,1066,1133,904,1093,1073,1120,1934,1987,2007,2009,1993,2007,1992,1596,1596,1507,1461,1459,1438,1499,1477,1461,1015,621,398,461,573,487,604,613,583,557,550,501,496,426,484,125,570,338,589,448,559,540,1630,2017,1752,1709,1711,1708,1701,1720,1709,1714,1709,1777,2049,1791,1787,1897,1818,1730,1738,1499,634,587,376,25,25,25,1930,1013,1419,1444,1408,1383,1509,1496,1459,1454,1465,1458,1441,1445,1481,1439,1470,1472,1472,1461,1462,1489,748,349,426,356,333,493,414,503,453,265,417,315,499,339,652,561,635,551,535,582,362,494,509,530,505,483,504,560,442,542,451,442,512,420,491,497,484,508,357,503,473,394,497,440,332,410,275,286,442,373,545,2056,1952,2004,1971,1727,1718,1686,1724,1721,1685,1658,1687,1690,1654,1684,1669,1647,1670,1672,1697,1711,1726,1678,1666,1687,1673,2018,2048,1968,1853,1810,1716,1799,1705,1617,1649,1728,1786,1652,1715,1707,1782,1820,1754,1574,1673,1377,751,561,628,607,773,697,884,945,1051,1388,1268,1289,1209,1434,1558,890,1010,1132,759,631,1181,1539,1814,1757,1745,1714,1601,1573,1485,1487,1475,1479,1467,1460,1489,1495,1481,1483,1485,1492,1478,1457,1483,1442,1477,1471,1481,1470,1476,1473,1480,1482,1480,1504,1482,1487,1468,911,393,621,581,461,538,437,473,551,367,194,425,401,502,377,557,439,209,472,650,571,673,497,534,549,389,521,454,508,628,443,512,434,397,454,416,639,460,398,153,197,312,427,560,378,545,499,606,537,538,522,249,431,446,131,371,296,329,354,471,424,380,519,518,473,544,531,574,546,543,526,521,291,289,507,563,491,556,552,479,463,481,446,446,464,443,570,373,471,431,476,434,488,483,405,470,441,389,1850,2043,2043,2002,2054,2052,2040,1905,1686,1684,1713,1709,1728,1677,1717,1729,1723,1699,1695,1703,1716,1708,1715,1722,1703,1705,1665,1720,1652,1685,1701,1653,1703,1660,1700,1699,1692,1679,1659,1695,1694,1693,1698,1717,1715,1680,1646,1725,1683,1911,2048,2048,2048,2015,1634,1548,1686,1723,1802,1784,1814,1921,1690,1773,1865,1764,1717,1875,1715,1805,1542,1754,1744,1647,1784,1723,1674,1703,1719,1689,1800,1743,1640,1705,1703,752,820,895,809,774,605,551,528,460,206,410,534,794,617,520,353,454,775,676,679,737,717,575,629,478,436,492,660,830,762,534,747,773,759,686,725,809,681,729,594,516,180,342,322,283,390,234,180,286,659,638,615,860,659,640,630,631,774,820,621,627,530,698,613,633,929,1316,1490,1592,1824,1694,1682,1715,1719,1705,1729,1699,1554,1219,1438,1445,1469,1473,1476,1470,1494,1471,1487,1488,1487,1485,1478,1489,1480,1457,1473,1473,1486,1476,1505,1480,980,191,284,316,397,454,386,206,285,232,303,228,409,650,394,560,430,546,394,589,458,165,202,465,586,545,408,499,591,502,459,607,441,639,394,248,56,353,497,406,466,177,199,416,522,397,202,194,193,195,188,195,203,198,189,194,191,514,276,364,176,257,310,245,507,460,510,409,474,1578,1916,1910,1886,1908,2037,1965,1655,1676,1704,1672,1665,1701,1737,1653,1663,1701,1689,1681,1654,1670,1694,1666,1646,1679,1689,1689,1650,1658,1643,1648,1663,1644,1663,1664,1661,1681,1675,1667,1996,2048,2048,1931,1678,1745,1613,1690,1865,1680,1670,1754,1698,1599,1804,1601,1614,1600,1706,1658,1629,1611,1606,1628,1657,1717,1642,1180,832,740,602,188,486,829,929,880,1025,907,818,988,1014,915,844,561,702,688,609,1716,1524,1795,1814,1833,1743,1807,1742,1560,1542,1476,1486,1489,1484,1459,1498,1456,1491,1470,1485,1494,1499,865,551,612,548,492,381,434,285,379,551,257,559,536,560,422,569,544,589,562,512,541,351,216,478,448,484,524,600,548,558,341,142,117,387,311,1145,2004,2050,2032,1697,1683,1714,1703,1700,1661,1695,1684,1730,1678,1707,1712,1706,1686,1700,1753,2048,1979,1792,1808,1839,1774,1689,1751,1769,1754,1822,1814,1804,1752,859,895,742,913,1077,1087,877,1024,762,1464,1259,1581,1682,1663,1563,1521,1462,1567,1474,1481,1463,1491,1478,1480,1469,1488,1466,1483,1243,521,616,536,530,605,497,603,258,506,389,480,309,473,325,155,262,573,179,478,258,468,508,284,438,443,611,506,602,484,436,222,285,508,596,509,1589,1921,2024,1883,1669,1696,1673,1650,1652,1650,1660,1696,1670,1653,1667,1695,1733,1703,1733,2000,2039,1675,1696,1675,1679,1648,1669,1627,1729,1701,1871,1896,1736,773,833,766,696,660,632,919,947,581,1556,1562,1503,1585,1644,1515,1490,1466,1475,1480,1486,1459,1489,1484,1482,1478,1048,437,258,315,363,354,283,271,390,475,499,369,479,388,244,335,353,401,302,339,244,170,300,267,364,349,446,568,413,305,396,391,274,339,238,243,333,184,421,1397,2048,2046,2048,1716,1719,1704,1729,1735,1717,1732,1738,1733,1723,1737,1727,1672,1731,1713,1721,1705,1934,2048,2012,1815,1815,1779,1851,1774,1825,1827,1787,1840,1853,1816,1767,1670,1772,1855,1824,1800,952,955,1346,1820,1849,1747,1504,1406,1463,1466,1456,1479,1481,1462,1473,1505,1489,1467,1481,1490,1487,1476,1486,1494,1483,1487,1475,1503,1458,1480,1469,1324,180,277,210,253,489,481,548,293,364,345,317,476,369,318,369,284,413,458,239,295,357,445,331,429,396,293,197,224,284,414,362,293,341,395,444,361,292,491,258,364,278,424,476,183,189,79,256,226,552,199,399,352,303,355,466,382,553,385,67,62,466,315,385,339,463,433,355,350,332,398,372,453,521,376,389,1642,1916,1940,1947,1917,1942,1966,1708,1688,1689,1692,1697,1698,1707,1693,1701,1689,1690,1721,1704,1714,1697,1706,1705,1686,1719,1702,1705,1712,1702,1703,1720,1707,1697,1714,1699,1710,1696,1711,1675,1838,2048,2048,2048,1848,1573,1693,1720,1730,1687,1709,1713,1659,1654,1732,1667,1741,1736,1704,1790,1765,1758,1649,1823,1714,1785,1639,1698,1673,1696,1643,1702,1698,885,797,866,870,429,25,25,25,25,25,25,25,1996,1587,1711,1761,1785,1688,1833,1776,1467,1355,1463,1649,1564,1512,1521,1505,1507,1523,1521,1507,1464,1488,1489,1464,1493,1477,1475,1457,1436,1489,1481,1481,1480,1464,1468,1489,1461,1471,1485,1494,1280,659,618,644,597,607,623,691,616,707,680,655,705,683,631,632,586,719,708,619,723,659,606,706,713,655,595,523,562,594,666,584,548,608,474,614,539,644,585,527,487,532,547,589,497,537,606,636,566,654,543,555,668,602,666,553,462,578,479,446,418,417,480,569,437,463,476,606,354,542,609,442,488,424,342,494,561,623,551,532,454,569,579,588,316,494,513,530,594,474,176,375,470,474,464,410,388,396,602,577,564,535,441,2028,2044,2024,2019,1948,2018,2051,1908,1711,1694,1702,1714,1677,1670,1717,1753,1669,1681,1696,1745,1728,1654,1629,1711,1737,1722,1713,1706,1714,1694,1692,1694,1705,1749,1734,1703,1722,1740,1725,1695,1740,1721,1687,1694,1704,1688,1713,1722,1737,1684,1693,1697,2041,2048,2048,2048,2048,1984,1722,1704,1798,1614,1654,1784,1797,1616,1734,1750,1838,1689,1592,1777,1813,1739,1699,1744,1679,1682,1713,1775,1807,1752,1793,1711,1848,1688,1779,1723,1701,1718,1879,1793,1803,1787,1711,1749,1048,617,780,630,571,649,617,606,532,481,1390,1499,1484,1463,1581,1575,1638,1570,1536,1134,1155,1523,1474,1585,1397,1608,1568,1477,1596,1424,1403,1326,1411,1390,1351,913,1022,1280,877,747,1222,1360,1430,1619,1608,1729,1411,1835,1642,1414,1602,1693,1699,1692,1694,1643,1677,1637,1673,1566,1575,1558,1593,1438,1480,1479,1454,1478,1463,1462,1496,1485,1452,1475,1485,1443,1440,1459,1453,1454,1481,1465,1482,1496,1469,1466,1463,1472,1464,1457,1461,1470,1477,1472,1465,1473,1456,1467,1491,1462,1495,1451,1472,1497,1455,1443,1504,1471,1489,1488,1465,1487,539,459,539,506,461,379,386,429,420,482,481,359,452,493,488,402,351,564,458,261,274,343,281,417,316,366,293,259,515,466,470,485,470,403,290,458,286,407,530,400,371,371,353,570,517,482,469,421,341,206,338,533,312,306,407,506,481,478,339,222,428,534,425,523,431,403,256,180,472,487,426,456,411,428,385,369,413,453,478,516,491,411,346,306,467,335,431,261,424,229,332,368,311,194,317,474,318,277,309,181,386,306,364,352,424,255,345,411,359,335,423,401,490,529,510,460,281,349,193,362,464,310,484,199,463,442,453,314,421,268,423,331,287,421,412,474,387,240,162,501,500,475,436,362,493,807,2006,1996,1962,1977,1956,1954,2024,1941,1976,1925,2007,2048,1823,1694,1642,1660,1654,1693,1642,1689,1698,1658,1655,1685,1694,1672,1705,1660,1673,1706,1684,1669,1674,1691,1686,1713,1681,1663,1691,1692,1695,1681,1689,1675,1674,1676,1706,1704,1702,1675,1677,1686,1681,1675,1710,1700,1685,1705,1721,1668,1645,1683,1689,1724,1691,1674,1683,1677,1678,1683,1684,1671,1690,1681,1684,1749,2048,2048,2048,2048,2048,2048,1650,1696,1619,1660,1602,1697,1680,1649,1693,1722,1739,1624,1803,1653,1717,1757,1745,1692,1755,1787,1749,1716,1700,1765,1768,1743,1684,1708,1753,1701,1696,1858,1685,1672,1801,1799,1804,1701,1646,1722,1793,1724,1737,1551,980,840,791,832,787,751,912,658,899,855,697,651,413,464,329,417,351,416,236,555,486,533,447,338,265,576,450,499,498,610,677,343,216,471,463,394,773,584,502,330,469,329,453,151,351,436,419,512,407,362,482,799,1621,1629,1446,687,936,1626,1627,1639,1683,1681,1714,1738,1810,1723,1763,1743,1747,1692,1733,1689,1589,1543,1549,1497,1466,1467,1492,1475,1500,1484,1484,1494,1512,1498,1514,1490,1468,1469,627,421,193,417,599,452,75,75,258,349,609,595,447,500,433,582,477,439,541,602,475,391,417,506,554,356,552,516,334,480,386,406,429,341,302,220,355,327,514,494,552,444,593,267,1526,2012,1961,1955,1875,1702,1721,1739,1722,1727,1745,1727,1737,1728,1731,1724,1710,1738,1721,1713,1698,1715,1732,1701,1707,2015,2048,1981,1723,1739,1779,1752,1788,1703,1718,1751,1747,1732,1743,1778,1741,1763,1789,1751,1548,809,934,816,923,399,25,25,25,25,25,25,25,1606,1655,1551,1690,1695,1475,1336,1082,1195,1605,1526,1560,1487,1486,1509,1498,1483,1502,1493,1498,1493,1485,1468,1450,1460,1477,1434,1509,687,657,466,593,490,423,463,453,470,531,517,447,549,558,436,448,196,364,249,351,400,575,261,545,492,523,682,497,443,449,384,502,602,390,419,523,517,527,564,473,583,706,703,530,403,490,245,1485,2003,2053,2019,2022,1717,1715,1723,1709,1711,1664,1658,1696,1726,1726,1709,1670,1699,1716,1730,1704,1709,1724,1692,1665,1812,2048,2048,1936,1799,1784,1812,1848,1686,1755,1850,1792,1844,1847,1810,1854,1838,1761,1871,1790,1758,1737,776,637,975,812,678,725,779,526,814,848,753,754,869,872,357,688,955,1468,1110,843,1553,1470,1527,1626,1599,1615,1572,1418,1376,1479,1424,1365,1455,1421,1471,1477,1448,1474,1480,1497,1479,1469,1498,1498,1487,1493,1484,1483,1486,1495,1487,1468,1498,1463,1490,1499,1477,1499,1495,1522,1513,1471,1478,1502,1489,1486,1479,1453,1474,1493,1341,489,524,599,469,468,546,268,565,553,583,190,559,540,664,661,576,558,561,583,558,521,524,492,379,202,492,554,511,571,531,450,514,543,566,648,570,398,513,520,619,503,575,492,494,476,597,552,572,549,606,556,509,368,453,528,450,480,617,507,458,555,459,455,483,241,317,524,446,503,286,463,526,527,540,464,403,74,91,185,124,182,275,203,394,341,437,557,325,461,221,271,158,133,357,466,680,486,492,527,555,509,548,526,587,481,480,265,546,546,428,496,466,491,500,415,483,438,513,548,603,526,491,428,505,404,422,524,447,395,520,450,186,370,510,339,598,2007,1985,2020,2045,1987,2025,1964,2048,2048,2049,1986,1651,1633,1623,1646,1728,1715,1693,1686,1658,1671,1699,1704,1678,1710,1735,1729,1715,1726,1653,1694,1741,1698,1727,1686,1691,1745,1744,1735,1745,1697,1692,1643,1700,1747,1749,1737,1739,1735,1736,1719,1736,1725,1737,1731,1738,1686,1656,1684,1705,1676,1707,1727,1742,1736,1722,1725,1656,1676,1716,1720,2009,2048,2048,2048,2048,2048,2048,1929,1499,1430,1615,1716,1734,1690,1595,1656,1647,1734,1746,1811,1758,1716,1626,1697,1713,1725,1741,1582,1853,1876,1776,1748,1730,1585,1798,1817,1768,1758,1787,1769,1749,1824,1760,1742,1773,1726,1809,1717,1632,1618,1654,1736,1724,1791,1740,1744,1744,1507,1642,1799,1349,571,646,684,607,506,423,663,710,475,613,352,1408,1397,1398,1657,1209,1322,1480,1492,1682,1182,1138,1337,1405,1237,1372,1250,1150,1319,1660,715,1351,1396,1460,897,1469,1628,808,1196,1213,1431,1367,1385,1441,1570,809,898,565,1253,1708,1582,887,991,1435,1395,1318,1317,1369,1322,1607,1641,649,968,430,850,1252,1173,819,856,1535,1629,1710,1770,1801,1837,1783,1748,1734,1869,1805,1413,1436,1359,1314,1464,1436,1361,1331,1442,1509,1487,1453,1468,1458,1450,1468,1442,1477,1495,1487,1494,1497,1489,1481,1490,1484,1486,1502,1480,1453,1468,1489,1485,1477,1483,1470,1481,1433,1492,1498,1465,1458,1446,1487,1487,1461,1493,1493,1487,1488,1469,1484,1485,1475,1486,1491,1463,1462,1464,1505,1475,1470,1482,1486,1466,1485,1493,1463,1507,1482,1478,1473,1493,1477,1448,1465,1469,1470,1482,1486,1487,1467,1492,1496,1487,1489,1469,1034,365,577,589,660,521,590,555,547,621,628,587,666,621,590,606,565,377,512,528,555,493,391,610,616,580,619,617,247,559,586,576,470,746,670,501,646,634,639,474,506,478,540,484,611,553,646,565,624,604,598,497,459,420,490,498,513,561,452,465,451,469,497,544,511,565,558,644,545,584,595,617,616,569,586,597,650,527,605,625,521,521,460,517,507,294,400,473,514,528,513,532,542,564,579,635,556,600,575,580,625,542,582,527,499,594,352,299,543,587,536,522,456,540,478,441,439,336,482,320,378,453,513,551,513,517,573,482,361,161,447,532,392,419,469,418,433,464,362,459,513,456,487,370,431,585,746,626,428,550,493,552,550,474,550,594,521,570,531,618,318,519,375,482,469,516,534,504,478,536,550,581,503,329,475,471,434,552,507,548,569,602,538,456,385,607,446,489,454,512,469,278,429,474,560,564,605,461,487,498,466,430,495,519,624,343,465,338,508,320,485,402,462,463,495,353,351,302,221,181,256,318,308,233,414,389,270,465,206,151,300,306,237,633,608,692,527,517,597,454,631,466,537,595,646,416,383,501,419,574,532,565,553,658,632,608,615,596,425,509,568,570,359,518,454,527,485,569,474,549,434,225,271,330,320,385,532,385,554,522,631,567,1023,2026,2011,1919,1999,1991,2030,2004,2015,2034,2015,2004,2021,1959,2040,1988,2006,2031,2028,2055,1875,1730,1711,1659,1686,1693,1703,1723,1730,1737,1720,1739,1717,1696,1698,1666,1716,1699,1690,1675,1701,1726,1715,1715,1711,1667,1726,1708,1710,1717,1712,1708,1706,1718,1680,1666,1693,1685,1667,1682,1689,1651,1672,1688,1685,1702,1698,1688,1705,1686,1685,1685,1694,1693,1675,1681,1686,1709,1683,1693,1687,1682,1676,1674,1706,1694,1680,1689,1696,1692,1709,1698,1719,1710,1698,1664,1729,1707,1677,1682,1673,1709,1710,1680,1699,1697,1651,1665,1702,1721,1690,1693,1677,1658,1654,1653,1670,1651,1670,1708,1680,1709,1691,1718,1676,1685,1701,1694,1718,1736,1708,1701,1732,1665,1710,1678,1680,1684,1659,1698,1849,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1883,1766,1663,1676,1693,1670,1750,1720,1702,1717,1763,1643,1648,1679,1709,1715,1580,1756,1763,1667,1701,1670,1812,1702,1750,1847,1695,1712,1621,1611,1625,1660,1720,1633,1628,1673,1663,1657,1655,1667,1682,1678,1631,1534,1617,1705,1741,1679,1771,1681,1702,1618,1582,1662,1642,1580,1596,1680,1747,1788,1758,1729,1747,1819,1684,1667,1674,1797,1630,1671,1657,1604,1737,1660,1690,1556,1594,1583,1508,1667,1589,1732,1669,1711,1634,1730,1608,1764,1809,1755,1812,1815,1715,1637,1631,1688,1668,1739,1017,631,617,619,355,474,119,602,706,585,672,615,512,691,739,601,678,788,633,613,605,600,627,683,765,545,615,1208,1464,1364,1281,1644,1599,1493,1465,1603,1656,1329,1070,1417,1096,1016,1146,1011,861,956,1127,554,1144,976,719,1118,913,957,918,1032,1243,1406,1679,1622,1623,1588,1407,1713,1688,1586,1608,1690,1616,1531,1617,1574,1548,1312,1444,1548,1654,1700,1636,1543,1570,1422,1464,1339,1516,1428,1297,1597,1243,1600,1609,1548,1406,1389,1326,1522,1525,1458,1417,1608,1624,1624,1588,1415,905,1305,1249,813,409,887,1176,1202,1216,1016,1057,1002,961,1060,991,869,959,798,714,649,441,161,118,615,612,558,564,407,573,1179,1528,1316,1293,1172,1262,1184,1594,1580,1587,1450,1503,1411,1413,1418,1154,671,763,1060,1284,1460,1520,1541,1148,1617,1275,1475,1389,1576,1244,662,1247,1496,1489,1390,1411,1546,1461,1621,1523,1589,1505,921,972,931,551,1256,1422,1134,398,782,542,484,838,1161,848,1092,1157,872,596,1196,929,1473,1364,627,459,1482,1426,1308,1018,1212,1291,943,809,568,637,1100,488,691,252,615,937,724,645,807,476,439,1338,1520,1547,1284,1584,1670,1578,1437,1639,1575,1288,518,777,1397,1430,1412,1141,890,1544,1141,891,1388,1298,1021,1354,769,501,576,344,396,389,457,492,366,417,345,421,465,355,328,447,549,766,832,674,510,500,402,423,710,219,376,387,288,687,866,365,813,853,613,355,604,603,406,392,368,415,363,816,1573,1522,1583,1616,1639,1622,1353,580,599,219,211,243,462,1162,1598,1879,1916,1447,914,1625,1761,1687,1638,1738,1743,1746,1769,1816,1752,1812,1739,1794,1820,1802,1812,1831,1809,1798,1817,1850,1790,1734,1739,1577,1421,1492,1462,1483,1478,1474,1431,1478,1496,1476,1439,1482,1469,1470,435,518,433,375,463,473,494,358,500,379,435,550,395,402,278,308,346,343,315,284,268,554,432,334,585,434,499,459,487,388,526,345,523,503,490,507,441,452,357,347,615,1973,1959,1908,1725,1664,1670,1672,1682,1672,1668,1654,1665,1664,1664,1695,1684,1688,1695,1675,1681,1906,2048,1821,1669,1627,1680,1722,1678,1711,1708,1746,1746,1820,1587,1590,1186,422,379,548,112,930,979,1086,973,1005,1084,866,1077,1033,659,1120,1259,1667,1755,1731,1643,1264,1480,1470,1474,1491,1481,1490,1485,415,225,606,657,615,429,577,554,480,549,415,438,406,430,457,330,532,244,437,312,510,448,464,317,572,2047,1974,1658,1675,1721,1714,1690,1667,1655,1667,1652,1634,1659,1968,1932,1718,1802,1890,1799,1705,1763,1764,1686,1299,554,391,749,1114,949,1007,840,1069,988,1448,1495,1695,1554,1601,1478,1467,1486,1498,1476,1464,1452,1491,1250,584,586,546,346,328,372,487,392,512,555,386,467,483,482,452,439,465,422,576,462,468,574,417,515,496,403,530,538,1486,1999,1907,1693,1705,1689,1683,1708,1698,1690,1674,1720,1710,1693,1679,2030,1916,1782,1760,1675,1753,1770,1674,1808,1758,1674,888,674,591,1117,1645,1125,1353,1436,1823,1654,1555,1370,1495,1483,1479,1505,1530,1497,1485,1492,470,539,518,531,533,308,385,507,541,494,596,561,665,585,122,159,410,460,528,577,550,565,742,2029,1947,1688,1693,1682,1676,1678,1683,1673,1670,1663,1779,2008,1739,1719,1728,1691,1708,1642,1622,753,761,1141,1585,1220,1260,1444,1638,1622,1431,1388,1438,1538,1467,1498,1476,1437,1481,1482,1470,1471,1503,1516,1493,599,364,326,397,327,215,426,480,356,481,354,347,300,249,298,428,440,191,511,454,180,385,354,258,418,377,416,610,442,435,392,226,271,492,362,493,349,687,1992,1994,2001,1779,1690,1673,1657,1707,1696,1675,1679,1707,1714,1711,1707,1717,1695,1704,1692,1688,1870,2048,1978,1613,1628,1733,1740,1700,1809,1856,1808,1881,1804,1751,1706,1698,1447,564,690,734,865,1208,704,941,848,806,555,520,1707,1195,1335,1556,1536,1473,1545,1471,1474,1543,1496,1483,1491,1482,1483,1473,1503,1247,322,522,619,563,503,473,465,600,541,474,338,574,579,511,531,532,664,645,599,395,379,294,1728,1950,1792,1691,1693,1704,1706,1671,1682,1680,1688,1669,2037,1701,1707,1758,1729,1743,1750,1717,1085,714,1065,1548,1556,1493,1479,1534,1560,1458,1557,1513,1516,1546,1501,1520,1483,1480,1488,1503,1487,1475,1498,1486,1482,1454,1485,1509,1494,1472,1469,1493,1482,1483,1470,1505,982,636,629,599,668,521,202,458,280,326,569,237,374,608,522,646,544,474,590,613,436,566,429,691,624,580,548,557,682,604,644,669,582,556,485,546,437,412,529,478,628,552,497,416,525,611,522,625,587,510,481,123,139,289,431,532,313,349,438,518,613,596,431,579,587,394,314,245,583,554,704,495,479,1955,2006,2010,2019,1984,2027,1627,1706,1697,1698,1702,1711,1677,1696,1716,1700,1690,1697,1694,1706,1678,1682,1728,1680,1688,1680,1672,1698,1690,1689,1695,1700,1670,1698,1683,1669,1686,1818,2048,2048,2048,1793,1777,1728,1699,1820,1721,1759,1892,1708,1776,1760,1767,1717,1756,1758,1712,1724,1730,1680,1787,1788,1750,1783,1724,1790,1876,797,725,607,711,641,675,540,751,518,596,438,605,560,739,962,882,894,897,937,701,502,290,603,682,567,411,666,383,313,310,672,920,866,880,584,1277,958,634,299,1242,1603,1648,1624,1621,1802,1715,1685,1632,1528,1467,1580,1526,1455,1485,1485,1449,1475,1480,1473,1473,1475,1457,1462,1503,1485,1477,1453,616,513,510,441,441,568,291,512,443,596,149,294,591,494,540,322,566,570,604,486,385,612,248,175,504,554,299,262,166,332,485,552,496,518,500,248,385,402,402,507,535,413,316,350,532,536,613,2016,2048,2001,2029,1811,1712,1717,1702,1717,1730,1669,1705,1698,1741,1666,1714,1683,1683,1698,1729,1718,1677,1689,1680,1652,1973,2048,2029,1867,1869,1710,1801,1749,1791,1783,1928,1822,1810,1782,1842,1886,1870,1729,1801,1636,1290,690,809,666,763,708,875,1008,716,915,938,972,793,891,820,968,745,635,532,1113,1457,603,760,1520,1562,1605,1615,1607,1537,1502,1472,1042,610,626,484,380,1493,1665,1687,1841,1804,1066,1188,1513,1409,1500,1484,1472,1492,1499,1481,1464,1413,552,563,558,581,559,331,395,522,409,542,529,361,414,174,392,495,431,269,343,319,288,283,395,471,510,367,999,1932,1878,1650,1662,1655,1697,1672,1650,1683,1697,1676,1699,1676,1997,1729,1530,1633,1727,1732,1746,1699,1723,1602,595,629,460,1689,1399,1028,1216,1231,1622,1654,1595,1426,1484,530,473,577,513,425,311,193,90,1708,1723,1641,1656,1658,1699,1887,1569,1596,1618,729,1194,1506,1458,818,220,374,335,206,379,224,946,1762,1676,1643,1763,1759,1695,1760,1182,1117,1246,1445,326,413,489,317,1786,1646,1809,1668,1146,1464,1331,387,344,186,348,93,66,115,1512,1654,1674,1662,1790,1776,1713,1687,1322,1481,1434,794,412,1459,1782,1404,1058,506,1039,1725,1477,1424,537,634,1704,1537,1492,688,397,1579,1676,1486,962,462,1255,1757,1440,1292,544,813,1700,1512,1511,598,406,1705,1590,1507,829,417,1416,1783,1399,1109,530,999,1718,1485,1439,539,575,1710,1549,1481,722,394,1541,1716,1445,993,468,1185,1753,1443,1343,556,766,1702,1524,1496,608,388,1687,1598,1596,1463,1477,1467,1474,1459,1100,440,440,247,235,220,284,530,378,435,560,396,404,391,349,259,368,367,386,1605,1960,1643,1645,1647,1675,1673,1638,1636,1630,1709,1859,1561,1601,1616,1568,1592,1484,391,258,718,929,1112,525,1531,1695,1455,539,594,1710,1546,1224,1486,1468,1480,1454,1417,1189,566,399,387,463,416,519,730,587,491,496,382,377,369,489,406,558,1426,1812,1681,1651,1676,1627,1643,1663,1915,1570,1555,1641,1374,415,510,541,310,389,821,1159,1536,1736,1287,2048,2055,2020,2048,1536,1434,1403,1416,1158,1522,1495,1455,1390,1582,1519,1564,1513,1468,1355,1375,1446,1413,1536,1483,1375,1327,1449,1428,1334,1488,1558,1449,1341,1368,1512,1478,1468,1539,1464,1426,1295,436,203,25,283,389,337,370,538,494,431,494,624,746,1200,1087,1069,1040,1134,1194,1388,777,634,490,557,515,568,746,538,309,366,441,549,197,1273,1373,1302,959,1186,1123,1169,1212,1209,1530,1313,1209,1380,1501,1462,1262,1677,1475,1658,1120,1300,1200,1221,1684,1127,1185,1186,1158,1171,1162,1103,1005,1391,1284,1044,1079,1152,1117,1181,1192,1453,1424,1217,1261,1580,1338,1401,1564,1509,1732,1170,1309,1192,1165,1651,1303,1163,1158,1149,1185,1167,1130,978,994,1095,1107,1141,1244,1072,1166,1281,1414,1477,1393,1372,1456,1456,1603,1338,1197,1204,1131,1226,1290,1110,1115,1215,1265,1282,1327,1352,1375,1448,1169,1364,1333,1321,927,1169,1127,1152,1208,1232,1584,1201,1213,1483,1381,1577,1226,1711,1531,1392,1270,1239,1201,1341,1583,1084,1179,1146,1125,1194,1150,1257,2056,2056,2049,2048,2048,1100,1393,1285,1065,1094,1134,1146,1202,1212,1440,1446,1222,1247,1578,1332,1428,1532,1505,1725,1159,1315,1186,1144,1625,1301,1150,1171,1135,1176,1176,1140,877,1378,1330,1213,970,1170,1134,1153,1219,1294,1521,1177,1203,1570,1334,1583,1294,1623,1665,1256,1341,1220,1181,1484,1435,1119,1187,1168,1176,1155,1171,859,584,189,811,813,808,711,898,783,771,768,761,589,688,666,728,544,820,713,819,615,602,831,769,739,853,917,669,410,399,670,617,743,535,855,760,1011,1486,1324,648,856,903,684,991,1111,1101,996,991,1111,1038,1098,1093,1113,1123,1085,1126,1060,1059,1106,1037,1023,1123,1045,1068,1039,1034,994,1023,1336,1097,1221,1048,452,476,727,1053,719,684,510,486,609,532,633,915,713,442,376,377,205,205,275,312,764,962,657,192,299,794,718,738,531,304,325,630,289,476,529,331,760,247,495,407,243,792,483,156,463,755,710,617,483,643,329,602,736,527,461,629,307,115,446,806,666,581,380,377,239,548,635,972,453,670,264,460,462,823,932,707,775,1003,411,852,532,565,922,336,318,179,392,639,751,1026,907,757,554,461,265,382,1140,952,854,912,1009,1095,1206,881,850,994,1533,2051,2055,2046,1871,1452,1466,2048,2048,2057,2048,2048,2057,2048,2048,2048,2050,1962,2036,2057,1601,1916,1419,1798,1870,1794,1806,1865,1813,1833,1855,1819,1791,1866,1810,1999,1611,1334,1917,1336,1778,1036,1743,1877,1615,1655,1115,1729,742,1056,1235,1838,1781,1907,1808,1699,1627,1509,1461,1432,1360,1931,1930,1772,1645,1512,1432,1324,1276,1205,1216,1136,1404,1648,1676,1842,1961,1935,1965,2015,1868,1909,1887,2016,1791,1522,1461,2048,1621,1759,1827,1510,1030,1849,2028,1771,339,1125,1770,1248,2009,1381,670,2042,2057,2048,475,494,2048,2057,1216,753,953,2053,2048,2048,2048,1744,1207,765,721,638,1589,2029,2048,2048,2043,1220,1031,2048,2048,1491,560,286,2033,2048,2056,1954,761,1946,2048,2048,2048,1957,1432,953,719,681,1369,2048,2048,2057,2044,1909,1642,1431,1205,1046,961,1516,1829,1876,2048,2051,1829,1923,1177,56,1496,1513,920,336,712,1150,2048,2048,1688,1357,1879,1072,1043,2048,1840,785,2057,1961,2048,1857,2004,1895,1574,1229,891,1363,2048,2048,2057,2048,2054,2057,2048,1953,2040,2048,2056,2022,2048,2057,2048,2052,2048,1865,1481,1126,874,887,617,286,2030,1966,1760,1440,1390,911,984,2048,2053,2057,1423,1315,1817,1902,1916,1969,1999,1953,2042,2015,1973,1991,1824,2048,2048,1165,1020,1689,1795,2057,2048,1823,1853,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,1780,1250,2048,2048,2048,2056,1655,842,464,2035,2048,286,129,1985,2057,2048,2048,2057,2055,1688,818,129,2048,2048,1831,1401,2035,1589,1159,980,447,25,25,25,25,209,1867,1822,1751,1963,683,2048,2048,2048,1819,1684,1469,2048,2048,2004,2030,1928,1263,1551,2032,2048,2048,1545,1847,2025,2048,2048,2048,2056,1951,1912,1875,1851,1657,1341,1096,870,1605,2048,2048,2048,2048,2055,1622,2048,2048,2048,1370,1755,2012,2048,2048,2048,2048,2041,1817,1512,1120,1983,1437,1486,2029,1935,1876,1671,1389,1355,1548,1660,1227,1861,1835,2057,2056,2048,1895,331,665,1872,2048,2048,2048,2039,1515,1002,714,694,1115,2048,2015,1191,640,1271,2055,2048,2048,2048,2048,2048,2048,2048,2048,2008,1716,1433,1150,1391,2048,2048,2040,643,1826,2057,2048,2056,1747,309,100,1400,1712,2039,2056,2057,2048,1785,1972,1358,2048,2048,2054,2056,2057,1387,1647,2041,2056,2057,2057,2056,2048,2049,1995,1973,1867,1668,1167,841,1446,2055,2037,1975,1936,2055,1985,1631,1441,1300,1133,1054,1045,1437,2057,2048,2048,2048,2057,2055,2048,2048,2057,2048,2048,2038,1638,1201,1002,725,691,701,703,1629,2048,2048,2048,2048,2048,2048,2048,1983,1403,902,452,314,1762,2048,2048,2048,2048,2025,1743,1407,1931,1545,1947,882,765,1534,2047,2046,2048,2048,2048,2048,2057,2057,2056,2056,1957,1715,1453,1122,451,433,599,433,500,1634,2055,2023,1897,1694,1470,1298,1181,1365,2039,1674,1444,1772,1908,1639,1496,1269,865,659,800,1985,1807,1525,1185,1799,1919,1555,2014,2048,1234,1705,1708,2048,2034,763,1198,2048,2048,2048,2047,1545,625,769,2054,1835,116,501,2022,2048,2057,2048,2048,2048,2048,2057,2048,2048,2054,1905,1151,1918,2030,1350,1183,2048,2048,2048,2048,2048,2048,2053,1659,629,1955,2048,2048,2048,2048,2054,1949,1144,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1716,819,288,2048,1974,2048,2031,2048,2048,2056,2048,2048,2048,2048,2048,2053,1738,1405,930,425,333,2000,1831,1932,2050,2048,2047,1868,1342,1426,1800,2002,2048,2048,2048,1913,1364,833,717,643,1580,2048,2056,2048,2056,2048,2048,2048,2048,2048,2042,1724,1402,1069,592,1846,2048,2048,2048,1960,1664,1356,882,717,2021,2048,1198,1747,2040,2048,2048,2048,2048,1902,1744,1572,875,1125,347,1052,2048,1698,1085,2048,2048,2048,2048,2057,2048,2030,2018,1468,1936,2048,2012,1854,1617,1445,1248,1162,1660,2048,2048,2048,2048,2053,2057,1875,1262,892,1659,2048,2048,2050,2009,1969,1814,1690,1579,1468,1396,1351,1273,1888,2048,2048,2056,2048,2048,2057,2048,2048,2048,2048,2057,2048,2057,2048,2057,2056,2055,2048,2048,2056,2048,2057,2048,2056,2056,2057,2057,2052,2056,1604,1427,1649,1999,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2041,1990,1819,1729,2041,1937,1093,2048,2048,2048,2048,2048,2048,2048,2042,1999,1434,921,1342,2048,2048,2048,2048,1756,1769,2048,2048,2048,2048,2048,2048,2017,987,2056,2019,2035,2051,2031,1924,1729,1526,1511,1375,1337,1148,1382,1849,1449,1490,1384,1411,1449,1416,1481,1532,1423,1317,1407,1427,1425,1513,1430,1332,1402,1488,1378,1291,1472,1431,1432,1419,1434,1461,1534,1499,1330,1426,1415,1395,1799,1421,1489,1384,1456,1436,1389,1480,1515,1475,1347,1367,1414,1387,1502,1432,1373,1398,1418,1508,1276,1432,1475,1382,1410,1457,1429,1510,1526,1369,1444,1464,1410,1610,1606,1484,1447,1438,1444,1425,1427,1523,1502,1380,1341,1428,1419,1467,1484,1398,1363,1370,1482,1328,1354,1565,1403,1392,1490,1418,1503,1538,1422,1343,1435,1464,1417,1175,1198,1193,1127,1171,1153,1164,1986,1496,1563,1441,1424,1543,1534,1897,1550,1308,1513,1586,1559,1494,1592,1813,1499,1578,1503,1579,1810,1154,1005,1054,1076,1684,1720,1543,1480,1650,1388,1275,1352,1436,1086,930,1395,1801,1577,538,390,383,854,1206,1235,1107,1524,1894,1984,1953,1891,1875,1759,1863,1751,1179,1311,1432,1234,1178,1518,1726,1822,1809,1770,1767,1670,1839,1672,1851,1928,1496,917,1457,1895,758,1621,1739,1719,1452,1678,1148,1350,1154,1693,1660,1574,1673,998,1807,1610,1815,1803,1670,1703,1731,1573,1720,1766,1759,1655,1789,1648,1798,1791,1823,1735,1752,1682,1626,1747,1786,1736,1850,1828,1610,1793,1699,1694,1689,1682,1682,1610,1646,1776,1716,1719,1729,1652,1800,1720,1648,1706,1744,1624,1777,1827,1644,1767,1629,1803,1762,1668,1768,1799,1572,1745,1671,1579,1740,1755,1753,1771,1765,1592,1797,1793,1673,1750,1685,1634,1700,1823,1725,1741,1779,1874,1883,1787,1847,1851,1852,1825,1811,1776,1629,1775,1794,1615,1768,1688,1693,1660,1615,1631,1686,1915,1897,1900,1938,1933,1911,1938,1908,1922,1906,1916,1116,1800,1761,1797,1762,1803,1820,1610,1741,1801,1873,1708,1786,1835,1736,1748,1818,1788,1751,1784,1726,1764,1825,1830,1814,1662,1792,1714,1777,1834,1816,1795,1771,1804,1622,1606,1769,1772,1757,1775,1821,1849,1662,1847,1879,1846,1730,1815,1726,1803,1791,1792,1733,1781,1805,1743,1767,1684,1696,1582,1494,1598,1594,1647,984,1590,1456,1669,1552,1742,1514,1731,876,1697,1503,1519,1523,1635,1631,1721,1596,1699,1211,1697,1557,1235,1516,1063,1558,1540,1510,1685,1561,1682,1611,1706,1667,1516,2027,2021,1971,1981,2009,1913,1984,2028,2019,2024,1879,2002,2039,1768,1913,2040,1979,1986,2040,1986,2023,1946,1940,1867,2029,2011,1671,1789,1901,1892,1876,1750,1724,1777,1858,1897,1870,1840,1818,1725,1705,1820,1858,1843,1846,1841,1797,1711,1767,1864,1870,1828,1862,1781,1765,1638,1745,1891,1845,1817,1842,1862,1744,1714,1751,1845,1853,1863,1908,1785,1797,1745,1826,1884,1850,1865,1818,1704,1723,1844,1856,1812,1849,1880,1756,1710,1839,1863,1884,1887,1808,1789,1758,1906,1881,1827,1787,1887,1755,1745,1835,1709,1495,1585,1488,1649,1437,1567,1632,1454,1656,1636,1529,1827,1396,1694,1911,1812,1752,1897,1735,1839,1712,1727,1475,1662,1516,1588,1487,1536,1606,1472,1650,1735,1579,1886,1579,1819,1912,1787,1676,1864,1755,1654,1621,1519,1672,1617,1477,1676,1478,1594,1617,1463,1616,1482,1517,1896,1727,1735,1848,1718,1780,1895,1763,1684,1841,1537,1669,1537,1460,1594,1416,1629,1503,1592,1681,1494,1897,1529,1688,1882,1759,1694,1732,1628,1595,1656,1620,1669,1526,1461,1596,1440,1594,1631,1394,1766,1643,1547,1878,1717,1703,1797,1744,1729,1837,1783,1712,1827,1810,1733,1653,1861,1745,1757,1786,1743,1788,1721,1771,1647,1648,1776,1508,1590,1794,1556,1800,1624,1704,1674,1648,1738,1582,1837,1597,1787,1631,1818,1643,1826,1665,1828,1477,1610,1625,1684,1706,1696,1564,1611,1575,1497,1505,1788,1563,1692,1678,1686,1834,1667,1730,1717,1877,1770,1739,1708,1642,1558,1708,1733,1679,1552,1670,1661,1461,1625,1689,1472,1519,1708,1605,1757,1811,1793,1708,1789,1784,1774,1812,1842,1634,1596,1858,1589,1543,1724,1561,1634,1473,1670,1454,1493,1654,1649,1647,1729,1577,1631,1884,1842,1720,1925,1727,1615,1854,1690,1539,1715,1600,1693,1487,1534,1450,1511,1690,1554,1606,1755,1602,1751,1905,1768,1716,1892,1820,1680,1722,1763,1616,1595,1594,1641,1489,1306,1697,1377,1534,1715,1582,1643,1757,1421,1630,1688,1585,1773,1804,1617,1719,1795,1692,1753,1741,1476,1700,1417,1550,1510,1472,1537,1523,1584,1678,1498,1798,1711,1748,1799,1666,1731,1772,1712,1689,1792,1717,1727,1696,1752,1763,1724,1731,1781,1729,1642,1731,1827,1729,1700,1824,1756,1675,1675,1743,1724,1628,1680,1708,1798,1761,1754,1660,1712,1759,1817,1770,1639,1643,1831,1825,1855,1717,1832,1734,1853,1772,1682,1714,1750,1812,1669,1669,1712,1784,1889,1652,1694,1745,1742,1830,1696,1651,1733,1874,1666,1837,1747,1552,1769,1887,1810,1827,1686,1775,1878,1777,1769,1692,1694,1702,1694,1698,1701,1787,1722,1894,1894,1887,1916,1950,1954,1966,1879,1727,1900,1764,1886,1809,1771,1821,1775,1795,1909,1936,1883,1895,1846,1813,1925,1826,1878,1835,1784,1854,1823,1870,1962,1891,1800,1840,1844,1883,1903,1903,1894,1854,1839,1831,1771,1915,1864,1844,1767,1874,1834,1825,1723,1862,1944,1912,1790,1861,1914,1922,1905,1942,1920,1944,1774,1885,1935,1930,1964,1794,1909,1742,1744,1754,1693,1767,1679,1838,1787,1781,1762,1788,1761,1857,1773,1798,1755,1866,1731,1751,1763,1689,1685,1812,1673,1839,1780,1886,1853,1836,1866,1837,1872,1833,1834,1860,1877,1836,1769,1878,1732,1891,1801,1861,1829,1746,1898,1794,1827,1842,1844,1730,1877,1715,1849,1766,1841,1750,1793,1844,1776,1830,1751,1833,1783,1668,1929,1677,1888,1784,1712,1766,1684,1777,1758,1858,1829,1880,1921,1911,1741,1858,1642,1856,1808,1905,1708,1781,1886,1726,1820,1856,1947,2029,2030,1990,1971,1961,2010,2033,2020,2034,1934,2005,1992,1974,1911,1946,1979,1992,2015,1999,2006,1971,1961,2016,2017,1986,2015,1927,1998,1973,2012,1982,1977,1927,1983,2008,1962,2022,1654,1778,1803,1927,1495,1892,1586,1960,1868,1767,1713,1771,1675,1893,1978,1546,1920,1536,1947,1307,1798,1666,1824,1638,1682,1806,1553,1892,1591,1825,1177,1811,1563,1935,1585,1846,1753,1625,1830,1647,1788,1329,1861,1505,2008,1952,1949,2028,1928,1994,1993,1813,1990,1969,1875,1428,1895,1912,1350,1330,1152,768,649,808,1232,1465,1150,1363,1996,2013,2039,2027,2026,2041,2024,1985,1967,1833,1766,1660,1702,1711,1705,1761,1745,1689,1672,1755,1857,1707,1912,1678,1605,1461,1749,1812,1731,1754,1641,1907,1604,1774,1638,825,825,1637,780,434,1187,1677,1696,1773,1839,1764,1864,1702,1689,1608,1914,1979,1959,1989,1974,2006,1977,1975,1915,1930,1826,1833,1879,1532,971,1320,1782,1369,1493,1360,1523,1062,1370,1384,1590,1601,1828,1854,1857,1723,1560,1541,1499,1578,1589,1642,1550,1514,1764,1810,1858,1871,1998,1962,1852,1853,1868,1898,1876,1749,1715,1951,1874,1556,1540,1517,1051,1546,1304,1180,1705,1609,1691,1658,1917,1872,1959,1988,1975,1617,1993,1945,1376,1948,1978,1946,1516,1935,1852,1824,1112,1769,1936,1852,1740,1941,1885,1970,1359,1951,1894,1620,1993,1590,1906,2010,1978,1981,1636,1993,1948,1363,1955,1964,1961,1493,1953,1856,1812,1117,1768,1939,1834,1708,1921,1887,1975,1978,1955,1999,1927,2005,1984,1663,1537,1665,1444,1684,1497,1601,1641,1825,1843,1699,1731,1610,1818,1793,1805,1525,1775,1842,1805,1751,1746,1768,1761,1739,1711,1917,2003,1990,1959,1963,1965,1948,1966,1983,1478,1535,1555,1478,1753,1875,1879,1835,1879,1919,1907,1669,1889,1997,1814,1224,1843,1999,1936,1798,1788,1884,2043,1914,1829,1776,1882,1944,1830,1758,1712,1817,1894,1803,1114,1774,1627,1904,1367,1897,1985,1797,1715,1406,1507,1735,1810,1938,1922,1378,1906,1979,1961,1930,1954,1930,1950,1930,1890,1963,1951,1886,1960,1957,1962,1944,1965,1972,1965,1943,1926,2009,2024,1882,1265,1950,2024,2055,1986,1405,1917,1979,2006,1753,1747,1521,1541,1605,1443,1568,1595,1956,2027,1274,1216,1351,1647,1832,1946,1795,1835,1994,1904,1852,1842,1691,1704,1787,1748,1607,1763,1818,1939,1868,1820,1824,1728,1694,828,1112,1863,1574,1224,1715,1677,1400,1752,1809,1802,1691,1682,1646,1839,1869,1873,1687,1661,1511,1433,1132,1666,1894,1851,1875,1543,1312,1490,1906,1675,1817,1771,1749,1874,1726,1853,1737,2013,1845,1896,1686,1564,1567,1766,1669,1964,1695,1817,1747,1842,1750,1531,1057,1537,837,1492,1593,1866,1700,1848,1665,1645,1636,1652,1365,1656,1594,1546,1442,1418,1436,1684,1833,1497,1774,1771,1550,1637,1540,1365,1857,1451,1433,1489,1873,1986,2003,1996,1995,2007,2016,2018,1999,1898,1788,1867,1772,1982,1787,1755,1604,1793,1794,1742,1601,1760,1905,1791,1653,1641,1867,1756,1639,1635,1938,2011,2008,2004,2000,1777,1741,1902,1926,1906,1909,1994,1867,1865,1803,1853,1863,1938,1417,1251,1112,939,1104,1317,1389,1385,1132,1236,1181,1113,1063,1027,1195,1317,1259,1216,1213,1280,1325,1395,1350,1399,1318,1337,1873,1596,1577,1554,1470,1585,1616,1604,1579,1603,1559,1596,1608,1650,1641,1634,1496,1523,1516,1472,1576,1568,1495,1459,1458,1535,1630,1866,1731,1672,1710,1722,1685,1663,1736,1709,1714,1728,1705,1721,1708,1721,1728,1704,1687,1691,1647,1580,1686,1737,1673,1657,1690,1621,1231,1631,1990,1948,2014,2000,2027,1986,1996,1988,2001,2004,2032,2011,2018,2007,2030,2011,2019,2028,2007,2025,2000,2016,1871,1873,1734,1873,1564,1328,1614,1867,1807,1894,1881,1784,1824,1730,2006,2004,2019,2016,1912,1535,1566,1561,1600,1794,1824,1756,1767,1805,1785,1836,1704,1727,1662,1633,1775,1764,1777,1731,1753,1758,1729,1682,1685,1747,1851,1836,1760,1860,1792,1761,1799,1812,1900,1984,1974,1993,1996,1886,1805,1839,1848,1822,1848,1796,1796,1923,1847,1865,1820,1984,1953,1990,2003,1972,1964,1999,1979,1967,1911,2026,1876,1857,1825,1760,1775,1896,1895,1930,1988,1925,1887,1750,1740,1875,1885,1858,1710,1590,1477,1575,1843,1954,1959,1971,1946,1861,1791,1891,1767,1845,1851,1771,1929,1679,1887,1819,1867,1785,1706,1763,1748,1739,1765,1810,1495,1730,1482,1623,1449,1438,1458,1913,1965,1996,1983,2018,2013,2009,2029,1988,1913,1957,1943,1937,1838,1782,1726,1696,1465,1186,1255,1402,1787,1753,1768,1911,1934,1911,1924,1896,1617,1448,1509,1492,1466,1519,1450,1735,1450,1424,1905,1895,1730,1595,1620,1611,1822,904,929,1108,1073,851,820,781,960,1054,1071,1160,950,950,1040,872,804,1421,1826,1838,1841,1871,1896,1826,1636,1786,1710,1811,1738,1719,1725,1765,1717,1774,1616,1745,1923,1889,1967,1911,1893,1849,1874,1821,2013,1994,1975,2004,2048,2045,2047,2056,2046,2027,2003,2018,2033,1999,2019,2019,2031,2032,1843,1813,1648,1657,1731,1633,1710,1618,1688,1609,1570,1952,1931,1902,1916,1892,1864,1788,1948,1957,1979,1725,1720,1761,1783,1949,1919,1932,1939,1603,1049,1117,1054,1288,1497,1495,1507,1502,1588,1477,1497,1506,1553,1510,1503,1512,1713,1928,1917,1915,1900,1889,1921,1914,1910,1837,1933,1901,1926,1726,1499,1508,1693,1466,1578,1613,1633,1605,1596,1928,1476,1517,2050,1983,1984,1992,1994,1981,1982,1979,2004,2015,1987,1963,1987,1985,1968,1961,1962,2022,1795,1775,1783,1817,1773,1776,1770,1802,1976,1861,1849,1864,1862,1876,1825,1861,1972,1770,1601,1523,1449,1571,1671,1455,1712,1608,1568,1542,1603,1724,1848,1704,1685,1672,1767,1738,1729,1661,1784,1700,1743,1718,1715,1950,1932,1915,1970,1920,1934,1923,1942,1979,2017,2003,1991,2027,1986,2022,1988,2008,2033,2037,2044,2038,2012,2027,1999,2043,2017,2056,2048,2031,2048,2014,2048,2018,2042,2056,2025,2026,2034,2024,2013,2012,2020,2014,1175,1064,1072,1049,1014,764,732,763,1139,1483,1642,1631,1480,1703,1689,1603,1805,1842,1842,1705,1722,1846,1692,1653,1684,1697,1662,1655,1683,1800,1522,1563,1477,1557,1577,1540,1547,1559,1748,1544,1533,1546,1546,1519,1489,1550,1614,1914,1931,1913,1930,2005,1988,2015,2005,2012,1874,1920,1911,1950,1859,1924,1893,1923,2031,2022,2028,2028,2010,1954,1979,1957,2056,2009,2032,2025,2050,1908,1647,1779,1856,1861,1902,1843,1864,1888,1658,1747,1921,1975,1900,1943,1910,1958,1796,1726,1852,1690,1758,1820,1771,1670,1478,1654,1745,1806,1841,1812,1860,1879,1880,1830,1786,1836,1896,1722,1662,1684,1709,1695,1692,1644,1670,1975,1875,1894,1919,1919,1895,1840,1826,1989,1951,1866,1916,1932,1936,1901,1882,1909,1836,1825,1796,1761,1835,1835,1970,1883,1811,1839,1774,1859,1773,1881,1855,1887,1816,1965,1856,1865,1856,1659,1120,1308,1557,1579,1598,1540,1631,1608,1636,1597,1720,1864,1822,1686,1827,1783,1663,1795,1755,1774,1694,1706,1746,1726,1921,1872,1892,1898,1955,1866,1789,1849,1774,1550,1479,1493,1707,1660,1678,1769,1635,1645,1526,1670,1556,1643,1610,1668,1870,1967,1968,1973,2011,1967,2000,2003,2025,1996,1997,1980,2007,1850,1833,1720,1857,1757,1862,1756,1914,1764,1764,1790,1771,1755,1583,1449,1519,1476,1347,1716,1864,1790,1845,1698,1709,1691,1694,1696,1714,1665,1855,1676,1700,1692,1691,1659,1687,1700,1699,1917,1757,1770,1750,1754,1754,1750,1725,1851,1487,1536,1500,1525,1550,1549,1508,1577,1641,1426,1509,1496,1768,1695,1684,1695,1710,1734,1710,1689,1742,1686,1743,1729,1651,1773,1718,1700,1713,1718,1760,1703,1751,1787,1649,1721,1700,1819,1746,1749,1753,1764,1743,1753,1745,1779,1878,1807,1794,1787,1852,1817,1792,1824,1805,1820,1817,1846,1928,1761,1789,1807,1907,1609,1605,1610,1595,1600,1588,1590,1621,1818,1629,1630,1634,1628,1620,1621,1641,1742,1794,1807,1797,1781,1792,1773,1811,1790,1980,1833,1829,1829,1916,1872,1821,1871,1861,1863,1660,1667,1640,1643,1592,1669,1637,1605,1558,1575,1664,1641,1683,1641,1658,1627,1768,1620,1620,1610,1578,1610,1611,1567,1749,1627,1633,1643,1602,1624,1630,1636,1609,1784,1631,1619,1604,1546,1596,1588,1568,1725,1649,1636,1652,1633,1641,1664,1662,1639,1742,1538,1553,1553,1460,1550,1487,1461,1597,1652,1558,1582,1574,1609,1561,1527,1571,1776,1584,1603,1595,1615,1597,1540,1527,1596,1762,1541,1583,1550,1599,1558,1495,1561,1733,1595,1574,1564,1615,1569,1528,1522,1581,1778,1598,1610,1619,1654,1621,1611,1588,1761,1606,1599,1606,1631,1646,1574,1544,1581,1965,1996,1990,2002,1966,1988,1955,1926,1913,1950,1928,1922,1948,1955,1974,1965,2002,1932,1714,1603,1709,1622,1692,1626,1633,1680,1770,1695,1629,1732,1607,1698,1614,1714,1740,1800,1665,1784,1742,1721,1683,1708,1792,1782,1779,1629,1839,1639,1768,1627,1787,1785,1681,1651,1661,1718,1628,1672,1622,1687,1733,1768,1620,1783,1641,1743,1644,1731,1763,1740,1713,1719,1722,1661,1704,1712,1729,1799,1679,1643,1699,1666,1702,1679,1704,1757,1786,1694,1638,1694,1654,1707,1640,1708,1671,1673,1478,1707,1488,1685,1563,1643,1690,1700,1587,1607,1612,1605,1595,1581,1596,1710,1648,1626,1563,1670,1579,1594,1635,1615,1755,1587,1580,1607,1540,1598,1582,1594,1708,1548,1581,1458,1624,1394,1611,1403,1639,1677,1653,1693,1689,1628,1652,1711,1691,1709,1781,1809,1761,1723,1739,1772,1792,1724,1874,1717,1801,1771,1718,1723,1811,1782,1686,1796,1640,1613,1627,1631,1632,1653,1611,1829,1715,1719,1708,1710,1721,1747,1721,1690,1822,1612,1466,1608,1419,1600,1412,1575,1586,1567,1564,1476,1523,1411,1499,1408,1472,1626,1652,1563,1646,1598,1647,1521,1605,1634,1719,1620,1557,1616,1557,1617,1534,1580,1679,1629,1624,1634,1653,1650,1624,1595,1590,1763,1655,1618,1677,1640,1653,1625,1626,1774,1620,1614,1615,1604,1633,1600,1616,1584,1901,1784,1800,1770,1800,1757,1794,1762,1885,1638,1646,1637,1628,1639,1623,1622,1621,1878,1820,1831,1818,1819,1823,1812,1787,1893,1788,1762,1758,1748,1768,1732,1753,1744,1983,1733,1564,1621,1423,1611,1556,1603,1803,1781,1601,1591,1356,1376,1326,1614,1642,1651,1410,1345,1420,1473,1315,1381,1345,1370,1457,1396,1330,1380,1493,1489,1648,1587,1763,1769,1902,2048,1972,1827,1847,1745,1911,1999,1911,1768,1851,1905,1932,1951,2026,1880,1835,1689,1752,1740,1888,1853,1979,2045,2050,2048,2053,1890,1827,1737,1737,1737,1779,1655,1939,2056,1999,1911,1991,1880,1948,1927,1863,1818,1705,1613,1896,1913,1904,1760,1963,1922,1915,1769,1924,1922,1646,1446,1661,1722,1760,1790,1895,1879,1668,1474,1677,1778,1866,1845,1807,1760,1680,1616,1742,1778,1892,1887,1997,1954,1953,1859,1773,1657,1606,1611,1668,1803,1692,1732,1705,1589,1690,1618,1899,1940,1946,1893,1929,1862,1894,1677,1836,1673,1842,1662,1830,1667,1935,1896,1872,1680,1735,1652,1896,1960,1765,1665,1614,1736,1762,1676,1554,1445,1473,1453,1453,1448,1444,1412,1801,2039,2005,2044,1995,2043,2002,2048,1952,1838,1855,1849,1848,1855,1674,1522,1513,1534,1552,1530,1417,1348,1700,1767,1816,1818,1868,1783,1935,1862,1810,1650,1865,1885,1944,1914,1948,1865,1978,1993,1720,1489,1648,1587,1810,1818,1872,1793,1886,1816,1967,2036,2011,2027,1930,1797,1838,1797,1840,1859,1628,1572,1589,1629,1836,1847,1783,1658,1916,2032,2028,2020,1908,1809,1918,1987,1819,1725,1781,1728,1918,1871,1796,1682,1795,1619,1644,1623,1949,2040,2048,2044,1739,1611,1637,1698,1685,1666,1511,1270,1581,1566,1760,1823,1324,1114,1698,1937,2029,1823,2025,2022,2028,1997,1958,1887,1840,1788,1709,1792,1696,1804,1667,1726,1618,1584,1731,1664,1696,1558,1522,1460,1737,1838,1881,1847,1709,1588,1538,1378,1593,1577,1683,1630,1680,1704,1743,1683,1769,1769,1790,1674,1688,1606,1765,1776,1513,1292,1375,1398,1708,1873,1681,1493,1424,1379,1394,1341,1488,1520,1613,1615,1600,1617,1584,1593,1511,1378,1468,1432,1506,1403,1538,1497,1613,1615,1599,1622,1610,1602,1614,1609,1583,1421,1695,1681,1679,1684,1626,1574,1576,1649,1608,1562,1527,1546,1657,1638,1592,1510,1597,1560,1611,1676,1673,1672,1675,1506,1545,1466,1577,1651,1764,1847,1745,1686,1808,1844,1816,1818,1636,1463,1458,1434,1413,1430,1677,1685,1720,1661,1760,1762,1736,1661,1542,1294,1298,874,1361,1682,1333,1241,1488,1472,1459,1491,1497,1498,1461,1324,1343,1501,1417,1370,1213,1047,1065,1699,1356,1409,1429,1534,1791,2012,1961,1817,1977,1928,1760,1781,1221,626,859,795,906,992,937,1172,958,840,886,972,961,809,859,851,832,946,866,778,855,837,1021,1062,1082,823,878,1297,1091,594,582,534,571,588,917,883,954,1040,1023,619,905,805,832,954,1074,925,1047,842,558,575,889,506,730,977,971,460,859,583,687,720,613,1081,891,1025,1073,731,752,545,492,555,748,797,816,799,635,802,768,860,1238,744,917,995,1015,1024,844,1014,783,900,1111,924,783,760,992,266,611,896,973,523,577,737,797,629,599,659,671,710,857,1027,773,597,649,734,1064,2048,1578,929,998,1274,1263,656,1465,1020,1197,880,1045,1246,1105,1624,1585,1591,1623,1362,48,47,95,44,106,48,133,233,372,475,588,664,578,643,799,732,1143,1427,1503,1477,1372,1703,1585,1562,1648,1625,1703,1657,1714,1800,1683,1647,1581,1717,1676,1483,1534,1451,1345,880,907,760,625,598,597,604,605,517,376,377,246,140,82,46,48,49,471,1858,45,44,45,50,47,45,44,45,50,47,75,300,938,1453,1299,1471,1405,1400,1245,1028,1112,832,629,801,852,767,868,836,951,987,904,845,746,738,957,902,822,788,798,810,775,701,555,443,174,45,46,48,49,48,45,46,48,49,47,45,45,1994,1540,1413,1393,1326,1336,1301,1321,1316,1306,1280,1335,1280,1196,1310,1163,1018,1037,959,958,892,793,822,1031,1131,1128,1336,1426,1666,1647,1542,1598,1622,1413,1413,1113,1205,1276,1371,1518,1423,1384,1005,988,1103,1178,1208,1243,1233,1282,1220,1253,1308,1401,1269,1328,1347,1362,1899,819,45,44,48,49,52,259,610,841,1003,1202,1530,1691,1722,1804,1711,1714,1733,1752,1758,1817,1865,1792,1691,1425,1370,1319,1418,1771,1832,1821,1911,1897,1953,1924,1873,1845,1890,1863,1795,1769,1727,1683,1824,1891,1591,1436,1345,1236,608,147,45,45,48,49,45,45,716,871,962,1175,1179,1280,647,772,946,880,867,954,1028,1078,1716,1681,1521,1768,1676,1537,1582,1771,1655,1585,1674,1705,1635,1632,1646,1645,1586,1495,1755,1708,1614,1597,1648,1729,1685,1612,1747,1948,1783,1731,1889,1905,2001,2004,2038,45,45,109,214,266,322,429,545,615,771,1038,1085,1224,1450,1375,1448,1456,1377,1405,1371,1498,1556,1629,1660,1606,1598,1541,1573,1519,1488,1496,1470,1419,1497,1508,1731,1733,1718,1636,1667,1648,1659,1568,1471,1402,1473,1462,1225,1049,1122,1081,1044,1076,1058,1013,981,927,1937,1613,1445,1379,1335,1344,1316,1330,1296,1322,1297,1341,1265,1206,1351,1154,1010,1043,969,930,927,764,797,1036,1138,1100,1337,1388,1662,1662,1568,1592,1642,1421,1406,1144,1183,1270,1341,1531,1419,1387,1002,996,1123,1166,1175,1253,1219,1279,1202,1272,1315,1367,1307,1340,1331,1343,1832,1740,1372,1228,880,1222,1262,1153,953,937,920,953,998,847,1489,1558,1416,1378,1511,1390,1315,1453,1533,1403,1409,1427,1508,1363,1296,1164,1195,1182,1456,1637,1677,1730,1500,1428,1406,1571,1470,1450,1505,1441,1273,1348,1297,995,835,944,1128,1296,1328,1416,1384,1436,1356,1320,1603,1518,45,48,90,45,97,45,122,241,346,443,580,636,595,655,792,685,1113,1401,1509,1480,1375,1672,1600,1575,1634,1614,1709,1651,1724,1779,1676,1631,1582,1725,1675,1499,1561,1429,1404,898,867,743,658,574,592,564,594,539,392,365,234,158,84,45,44,45,317,2006,49,45,38,45,48,49,45,39,45,48,80,275,856,1478,1273,1469,1425,1398,1255,1051,1112,857,654,770,865,778,835,817,953,986,889,812,716,749,940,931,828,813,800,813,747,691,530,465,182,47,45,44,45,48,47,45,44,45,48,47,45,1855,464,45,48,49,45,41,496,1040,1131,1092,1044,988,1010,1156,997,1068,1154,1154,1335,1583,1713,1777,1687,1464,1409,1443,1390,1148,1081,1387,1248,1294,1187,1348,1488,1591,1479,1512,1702,1589,1447,1584,1544,1590,1241,1009,925,1152,1213,1071,879,96,50,47,45,44,45,1359,976,49,57,161,228,313,428,457,629,724,999,1098,1165,1498,1440,1452,1542,1599,1583,1561,1624,1683,1762,1796,1758,1771,1738,1650,1680,1585,1505,1566,1524,1487,1505,1700,1825,1716,1714,1672,1669,1673,1657,1523,1389,1497,1491,1417,1157,1083,1161,1092,1081,1101,977,1046,993,1277,2048,2020,914,990,902,862,979,1003,930,884,939,911,781,861,937,1296,1298,1276,1220,1345,1401,1436,1417,1498,1422,1379,1219,1043,1020,932,1084,1120,1225,1033,1163,1068,978,1262,1250,1226,1279,1264,1122,1157,1171,1154,1272,1267,1300,1324,1287,1267,1308,1313,1279,1315,1292,1441,1441,1374,1269,1268,1297,1351,1357,1372,1460,1479,1400,1424,1340,1285,1377,1372,1376,1354,1391,1363,1354,1251,1217,1216,1198,1255,1269,1189,1139,1250,1091,1042,1004,1114,1688,1274,1216,1286,1391,1333,1352,1436,1421,1422,1473,1381,1293,1351,1329,1437,1389,1392,1375,1385,1291,1223,1196,1197,1225,1268,1229,1119,1148,1194,1063,1059,834,1989,1075,1004,924,858,925,1017,964,878,979,899,777,837,951,1247,1257,1324,1240,1352,1399,1424,1370,1476,1427,1380,1300,1080,1027,939,1026,1109,1210,1112,1144,1084,966,1152,1270,1244,1269,1243,1120,1133,1211,1150,1200,1262,1308,1313,1295,1278,1292,1335,1330,1311,1266,1412,1422,1935,1052,78,840,1271,1186,730,1401,1167,653,92,1197,1739,1104,1007,1015,1035,1112,1259,1363,1136,1215,1328,1309,1361,1430,1392,1316,1260,1400,1619,1641,1438,1505,1417,1427,1505,1438,1452,1516,1526,1375,1418,1515,1548,1499,1644,1682,1674,1534,1499,1638,1539,1573,1523,1481,1493,1471,1418,1322,1249,1228,1237,1215,1273,1330,1258,1145,1146,1383,2006,1157,1088,964,989,1102,1207,1193,1102,1027,994,1012,963,1055,1200,1275,1272,1057,1134,1189,1473,1250,1442,1206,1076,1430,1560,1585,1634,1680,1605,1615,1496,1615,1593,1705,1710,1679,1671,1538,1457,1349,1369,1405,1353,1438,1634,1600,1537,1523,1438,1415,1435,1431,1414,1343,1373,1368,2054,822,725,868,906,983,1030,1034,1148,1208,1210,1196,1225,1222,1300,1420,1316,1381,1512,1438,1531,1479,1480,1543,1676,1695,1549,1627,1629,1709,1770,1756,1841,1767,1623,1596,1610,1631,1695,1714,1722,1737,1726,1646,1692,1615,1746,1787,1774,1742,1675,1718,1744,1613,1330,1181,1027,715,1172,1231,1423,1562,1615,1458,2053,45,44,45,48,49,45,704,1075,1080,1092,1053,1025,1073,1119,952,1091,1129,1220,1414,1631,1705,1769,1651,1465,1405,1406,1338,1112,1150,1367,1240,1301,1240,1377,1510,1611,1445,1542,1687,1554,1434,1583,1538,1541,1126,989,950,1130,1224,999,747,44,46,49,47,45,44,1810,512,48,47,45,44,45,48,47,45,44,57,208,608,1451,1275,1491,1444,1415,1311,1072,1132,957,682,642,953,750,853,844,940,944,930,840,754,759,811,974,818,774,812,856,756,717,593,565,254,47,49,47,45,44,48,49,47,45,44,48,49,1308,1482,929,861,1053,1122,1002,994,994,1086,932,918,975,998,1090,1009,1130,1305,1369,1389,1475,1507,1556,1615,1314,1260,1372,1361,1389,1222,1416,1141,1163,1072,1005,1173,1386,1483,1462,1376,1276,1168,1251,1109,1328,1281,966,1096,1200,1127,936,880,939,1070,990,1049,1012,1026,1306,1532,45,50,47,45,44,141,489,837,934,1147,1387,1652,1706,1793,1763,1736,1727,1738,1768,1809,1839,1791,1754,1550,1330,1423,1244,1714,1824,1808,1885,1911,1924,1933,1924,1815,1878,1849,1850,1819,1817,1747,1786,1867,1772,1406,1411,1241,846,274,48,49,47,45,45,48,239,1189,1466,994,1396,717,686,1087,1099,968,1806,658,46,74,180,236,278,415,504,608,682,970,1092,1103,1452,1367,1395,1468,1427,1397,1386,1460,1485,1607,1660,1636,1559,1581,1509,1561,1505,1451,1489,1486,1445,1469,1676,1712,1693,1638,1680,1627,1612,1649,1499,1377,1470,1476,1327,1108,1073,1108,1104,1060,1068,1040,1046,965,1530,1841,1405,1411,1362,1326,1307,1328,1312,1295,1320,1339,1297,1191,1343,1226,1048,1049,968,883,960,862,768,964,1111,1111,1276,1398,1574,1631,1581,1601,1685,1467,1437,1228,1142,1176,1343,1457,1432,1400,1156,996,1011,1146,1173,1291,1215,1303,1208,1256,1283,1338,1339,1289,1367,1336,1599,1959,1446,1263,937,961,1360,1140,1034,889,935,979,1051,582,1407,1525,1493,1339,1439,1480,1298,1419,1503,1446,1416,1433,1513,1352,1390,1137,1267,1130,1387,1614,1641,1715,1605,1417,1421,1494,1559,1484,1429,1460,1345,1288,1231,1024,1069,880,1035,1266,1294,1413,1408,1390,1364,1351,1345,2048,110,49,45,45,45,48,671,1034,1061,1107,1081,1005,1036,1126,977,1067,1125,1201,1420,1614,1709,1765,1659,1449,1429,1417,1328,1144,1137,1395,1247,1254,1202,1389,1516,1597,1454,1536,1686,1574,1408,1587,1525,1573,1141,946,974,1122,1220,1021,790,49,45,45,45,48,49,1705,626,45,45,91,69,65,63,175,291,397,523,625,608,608,724,735,817,1349,1435,1453,1421,1531,1696,1506,1586,1668,1633,1700,1663,1711,1780,1694,1599,1661,1665,1649,1470,1519,1404,1218,912,782,688,637,631,563,573,540,494,365,317,207,90,84,49,45,38,1201,1134,42,49,45,45,45,42,49,45,45,45,144,383,1332,1344,1416,1417,1424,1364,1114,1101,998,754,623,901,847,794,838,898,961,971,844,791,750,757,973,828,793,783,838,744,697,662,599,322,86,48,49,45,39,45,48,49,45,40,45,48,701,1638,45,45,45,44,49,45,45,45,45,49,84,317,1069,1422,1341,1438,1395,1367,1194,1032,1105,812,625,863,858,767,887,843,959,963,858,793,726,735,979,852,807,789,777,782,742,688,577,398,161,45,41,45,48,49,45,44,45,48,49,45,191,2048,77,48,49,45,45,45,687,1046,1059,1104,1074,1022,1030,1122,986,1077,1119,1194,1423,1627,1699,1766,1653,1473,1414,1418,1332,1125,1140,1386,1272,1260,1198,1375,1521,1611,1448,1534,1700,1561,1418,1587,1524,1565,1141,978,970,1139,1231,1005,776,48,49,45,44,45,48,1739,594,45,68,175,251,325,401,533,628,756,1009,1142,1224,1509,1402,1479,1587,1594,1596,1549,1655,1694,1748,1782,1761,1739,1716,1672,1675,1595,1526,1570,1560,1526,1512,1757,1800,1713,1685,1667,1649,1630,1629,1512,1369,1510,1511,1329,1126,1068,1113,1106,1066,1065,1005,1001,967,1505,2048,1815,953,999,852,875,1020,1007,897,944,894,925,829,841,996,1281,1363,1246,1261,1393,1370,1430,1392,1450,1433,1398,1183,990,1034,934,1141,1121,1156,1022,1189,1023,1032,1283,1227,1221,1290,1227,1101,1178,1144,1180,1274,1253,1274,1313,1282,1303,1298,1281,1277,1311,1287,1411,1435,1324,1265,1271,1348,1328,1370,1405,1448,1467,1406,1390,1348,1288,1360,1382,1393,1382,1431,1350,1294,1247,1159,1232,1195,1242,1263,1174,1127,1238,1079,1069,990,1342,1531,1268,1264,1310,1364,1360,1377,1443,1462,1400,1444,1352,1302,1368,1349,1376,1366,1378,1366,1360,1237,1229,1208,1211,1238,1275,1200,1145,1213,1126,1044,1030,968,2020,919,990,904,860,977,1005,928,885,942,913,781,861,936,1292,1296,1280,1220,1346,1390,1436,1419,1465,1421,1378,1220,1037,1017,931,1085,1123,1228,1031,1163,1068,979,1255,1247,1227,1279,1269,1119,1155,1172,1153,1275,1263,1318,1322,1289,1269,1310,1314,1279,1314,1289,1438,1439,2018,650,81,1077,1269,1130,803,1282,1190,417,74,1567,1434,931,798,1086,1115,1009,984,987,1066,948,914,949,1007,1123,991,1135,1306,1385,1421,1445,1485,1529,1598,1326,1293,1337,1368,1385,1270,1402,1109,1160,1079,1054,1208,1380,1488,1452,1359,1308,1170,1224,1112,1349,1248,952,1115,1163,1121,981,873,919,1047,1011,1073,1023,994,1347,1790,1152,1038,1001,977,1103,1283,1355,1140,1222,1297,1349,1336,1415,1386,1345,1282,1416,1571,1656,1440,1506,1405,1421,1506,1418,1453,1510,1534,1418,1419,1523,1545,1520,1646,1669,1681,1517,1496,1638,1536,1580,1512,1481,1472,1455,1445,1319,1264,1224,1187,1211,1257,1313,1263,1183,1133,1361,1924,45,48,49,45,39,91,403,786,933,1075,1301,1638,1694,1764,1781,1706,1740,1745,1765,1790,1853,1807,1766,1649,1323,1460,1182,1646,1800,1821,1885,1925,1910,1938,1937,1798,1866,1838,1870,1828,1833,1764,1779,1833,1835,1430,1445,1291,993,373,45,48,47,45,44,45,48,1932,1349,1107,1021,892,1097,1207,1200,1137,1036,1024,995,928,1020,1149,1239,1293,1125,1043,1202,1370,1321,1420,1238,1118,1373,1567,1542,1638,1671,1632,1672,1527,1545,1568,1687,1689,1699,1676,1609,1459,1399,1368,1406,1379,1352,1628,1612,1533,1497,1457,1426,1412,1416,1410,1371,1353,1367,1863,1232,732,808,903,923,1027,1054,1099,1190,1186,1183,1176,1273,1224,1388,1366,1355,1524,1435,1513,1502,1440,1490,1595,1656,1582,1625,1636,1677,1796,1736,1774,1836,1693,1576,1608,1625,1690,1748,1709,1733,1742,1689,1699,1651,1637,1800,1795,1744,1704,1705,1746,1699,1448,1188,1130,791,956,1251,1208,1579,1595,1395,1140,988,642,598,823,1077,1136,813,2048,1468,1455,1466,1524,1510,1523,1537,1528,1487,1535,1624,1793,1868,1960,1985,2010,2017,2001,1995,1998,1956,1882,1769,1820,1875,1945,1891,2002,2028,1872,1851,1854,1785,1707,1730,1735,1822,1862,1916,1953,2005,2009,2016,1962,1823,1607,1522,1518,1487,1510,1519,1502,1504,1479,1424,1431,1453,1985,1519,1314,1278,1266,1273,1232,1355,1345,1278,1254,1310,1189,1321,1375,1436,1434,1414,1462,1403,1466,1547,1526,1477,1551,1537,1537,1655,1606,1603,1574,1568,1564,1554,1489,1536,1699,1696,1610,1711,1495,1361,1393,1388,1255,1244,1269,1276,1233,1169,1162,1207,1170,1189,1185,1288,1319,1212,1783,1590,1057,1133,1143,1131,976,1032,1083,1090,1133,1168,1096,1228,1263,1354,1467,1505,1575,1598,1531,1594,1589,1430,1363,1576,1596,1523,1534,1420,1395,1409,1253,1337,1387,1259,1400,1431,1519,1521,1497,1519,1347,1243,1178,1012,1048,1045,1105,1157,1174,1002,870,1031,1016,904,951,1024,1448,1934,1527,1574,1566,1626,1576,1631,1681,1540,1601,1610,1682,1544,1440,1579,1584,1576,1683,1708,1571,1584,1615,1450,1472,1426,1616,1603,1443,1500,1548,1549,1585,1517,1556,1598,1605,1642,1668,1687,1572,1525,1664,1630,1523,1436,1173,1449,1555,1538,1418,1485,1599,1646,1710,1735,1530,1514,1640,2048,971,1045,1001,1065,1049,1075,1095,1162,1032,1035,1101,1188,1193,1103,1086,1114,1165,1181,1214,1212,1203,1342,1329,1268,1114,1101,1105,1073,979,975,972,1102,961,961,903,921,940,1060,1072,982,996,1092,1018,1001,922,949,1058,1039,1051,1083,1097,1181,1091,1048,912,853,904,1928,1515,1299,1292,1273,1273,1233,1336,1358,1280,1271,1317,1144,1214,1287,1353,1356,1330,1344,1303,1438,1511,1657,1636,1537,1332,1324,1459,1572,1641,1721,1669,1550,1378,1299,1385,1456,1477,1451,1505,1446,1354,1388,1401,1254,1233,1252,1259,1220,1176,1171,1207,1165,1194,1192,1283,1307,1224,1795,1812,1582,1576,1606,1596,1573,1521,1610,1620,1557,1600,1629,1778,1757,1806,1785,1656,1584,1600,1752,1808,1879,1780,1776,1905,1866,1799,1895,1741,1805,1733,1752,1718,1747,1688,1710,1664,1760,1913,1709,1832,1267,1368,1345,1275,1430,1507,1464,1479,1531,1526,1492,1537,1569,1449,1435,1501,1724,1724,802,764,850,941,832,682,834,922,834,833,742,885,999,1182,1264,1218,1325,1264,1386,1497,1551,1531,1592,1632,1599,1578,1615,1601,1634,1605,1571,1445,1484,1506,1534,1581,1491,1438,1481,1427,1329,1311,1196,1195,1174,1235,1043,1018,1033,1058,985,1008,1035,981,1018,828,905,2050,1652,1846,1901,1858,1823,1803,1828,1832,1759,1684,1592,1487,1390,2005,1727,1851,1890,1878,1858,1881,1898,1913,1747,1715,1579,1564,1454,1893,1887,1935,1796,1886,1929,1835,1775,1688,1501,1412,1556,1633,1620,1856,1743,1810,2002,1711,1902,2033,1648,2002,1868,1419,1393,1649,1481,1497,2000,1536,1269,1687,1556,1489,1700,1815,1398,1446,1658,1520,1545,2016,1772,1669,1663,1734,1783,1730,1739,1783,1798,1841,1808,1898,1787,1751,1781,1796,1811,1829,1831,1781,1886,1811,1762,1754,1775,1756,1779,1696,1772,1804,1742,1765,1774,1832,1767,1762,1751,1719,1732,1706,1729,1744,1729,1687,1620,1838,1846,1894,1844,1817,1820,1885,1884,1844,1792,1708,1572,1926,2032,1935,1907,1916,1951,1898,1901,1905,1920,1870,1859,1938,1903,1845,1754,1741,1775,1790,1839,1769,1876,1777,1879,1839,1809,1767,1773,1704,1630,1574,1579,1693,1786,1805,1719,1772,1682,1689,1733,1684,1729,1792,1798,1800,1717,1872,1900,1899,1920,1817,1814,1868,1920,1906,1928,1904,1888,1964,2056,1948,1960,2003,2007,1999,2010,1987,1955,1910,1919,1986,2007,1958,1922,1905,1989,1973,1954,1963,2003,2017,2011,1878,1939,1880,1916,1881,1778,1791,1764,1847,1924,1921,1977,1955,1977,1955,1969,1920,1981,1979,1901,1833,1836,1834,1871,1845,1801,1781,1826,1863,1795,1738,1670,1566,1439,1549,671,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1417,1414,1388,1552,1505,1548,1408,1467,1273,1203,1396,1510,1320,1192,1375,1478,1525,1450,1469,1421,1376,1355,1530,1479,1445,1482,1474,1484,1454,1552,1526,1540,1533,1468,1605,1507,1552,1545,1473,1488,1549,1564,1378,1466,1358,1657,1643,1665,1654,1577,1528,1645,1679,1561,1532,1628,1522,2011,1306,1062,1130,1100,1074,978,1085,1118,1068,1169,1102,1205,1215,1358,1355,1497,1519,1593,1563,1538,1629,1517,1390,1489,1612,1521,1526,1524,1395,1463,1346,1345,1341,1330,1268,1422,1435,1542,1518,1468,1489,1341,1218,1139,999,1020,1003,1186,1159,1167,928,947,1031,935,934,990,1023,1738,1517,1080,1136,1157,1105,981,1038,1095,1062,1147,1236,1323,1272,1250,1543,1560,1442,1557,1485,1474,1650,1565,1441,1500,1596,1607,1414,1549,1464,1626,1621,1740,1838,1905,1792,1613,1811,1755,1658,1523,1661,1287,1373,1298,862,1144,1125,1141,1157,1159,1001,912,1039,967,892,967,1026,1490,1927,1507,1527,1541,1562,1537,1472,1506,1544,1497,1499,1549,1666,1738,1782,1784,1708,1499,1674,1641,1748,1880,1755,1674,1873,1744,1728,1939,1645,1687,1810,1685,1684,1774,1525,1580,1681,1656,1858,1765,1752,1295,1357,1371,1212,1384,1442,1490,1448,1440,1463,1431,1473,1472,1406,1394,1456,1560,2048,1662,1669,1686,1760,1774,1737,1718,1794,1777,1844,1823,1897,1757,1737,1787,1777,1845,1834,1834,1808,1858,1807,1774,1779,1762,1747,1781,1674,1784,1774,1738,1736,1810,1817,1752,1768,1747,1718,1718,1715,1744,1731,1722,1696,1635,1854,1872,1873,1842,1821,1815,1882,1878,1814,1725,1676,1557,652,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1410,1304,1363,1420,1401,1537,1542,1426,1460,1480,1509,1443,1436,1415,1358,1219,680,986,1186,1473,1618,1748,1831,1840,1902,1858,1821,1727,1483,1759,1734,1840,1880,1847,1813,1827,1788,1775,1510,1274,1012,1105,1289,1302,1153,1388,1191,1130,1244,1270,1454,1458,1461,1491,1403,1361,1415,1860,1700,1433,1492,1505,1548,1432,1527,1508,1427,1461,1593,1634,1428,1531,1678,1712,1667,1770,1778,1633,1729,1611,1583,1552,1510,1597,1611,1584,1613,1613,1616,1593,1545,1565,1613,1644,1585,1640,1570,1574,1566,1641,1622,1568,1414,1156,1413,1507,1474,1369,1486,1521,1590,1612,1538,1391,1474,1762,1846,1415,1353,1404,1468,1363,1425,1482,1364,1424,1421,1510,1248,1299,1548,1524,1516,1617,1658,1601,1598,1546,1463,1462,1530,1551,1558,1470,1448,1530,1576,1486,1484,1508,1541,1545,1554,1579,1612,1529,1520,1549,1497,1394,1290,985,1136,1370,1392,1274,1329,1475,1490,1533,1513,1352,1319,1502,2048,1560,1643,1664,1755,1734,1733,1782,1669,1684,1730,1827,1728,1435,1618,1655,1633,1691,1820,1703,1642,1688,1570,1532,1490,1623,1692,1519,1550,1562,1637,1658,1625,1646,1689,1675,1742,1732,1776,1651,1611,1658,1706,1568,1548,1241,1443,1735,1701,1594,1610,1693,1780,1804,1837,1642,1606,1652,2046,812,539,649,670,644,688,798,1000,1036,1088,821,1102,1504,1495,1634,1607,1120,1532,1500,1705,1743,1678,1530,1720,1636,1732,1682,1638,1504,1793,1693,1750,1745,1718,1667,1683,1693,1735,1761,1722,1600,1382,1397,1221,1206,1383,1431,1225,1211,1298,1324,1458,1525,1514,1509,1559,1635,1164,1659,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2018,2022,2044,2048,2054,2048,2053,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2042,2012,2041,2047,2048,2056,2048,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2055,2044,2013,2033,2047,2055,2048,2048,2054,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2011,2024,2048,2054,2057,2057,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1918,1235,1357,1246,1097,1108,936,1134,1147,1166,1084,1076,1343,1095,1085,1116,1044,1169,1166,1203,1115,1132,1283,909,834,937,1007,941,890,730,973,820,716,836,336,337,349,1119,1199,1444,1462,1471,1454,705,1084,1116,888,897,845,1370,1205,1415,1309,1118,997,1025,1167,1113,1069,1244,1119,1134,1103,1146,1201,1037,1100,1150,1190,1176,1197,1255,903,849,926,972,930,866,783,968,834,876,821,335,337,345,1172,1213,1457,1456,1451,1414,898,1038,899,899,872,837,1956,644,44,45,58,76,127,144,197,173,198,251,223,354,773,1022,1006,1055,1262,1530,1601,1624,1674,1639,1768,1774,1761,1534,1564,1596,1654,1653,1708,1768,1766,1575,1670,1590,1611,1645,1457,895,1003,905,708,465,226,170,124,127,160,147,107,78,49,45,45,45,393,761,1505,1119,134,195,186,221,246,387,375,362,409,333,244,456,770,973,893,1050,1085,1464,1686,1739,1826,1727,1841,1843,1833,1667,1686,1687,1755,1859,1849,1899,1866,1741,1834,1894,1863,1837,1888,977,988,875,819,660,372,329,350,360,409,353,329,137,182,180,247,151,819,1915,1229,1359,1266,1162,1391,1384,1364,1362,1323,1402,1483,1490,1400,1432,1427,1488,1479,1424,1512,1418,1336,1389,1392,1370,1174,1145,1299,1415,1310,1376,1371,1339,1276,1409,1387,1292,1330,1435,1507,1423,1528,1431,1355,1341,1414,1439,1453,1390,1347,1377,1256,1373,1433,1285,1220,1203,1247,1002,1053,740,1927,692,48,49,47,710,951,1134,1076,1367,1558,1283,1575,1841,1793,1665,1701,1686,872,1180,1553,1747,1791,1812,1759,1823,1814,1708,1586,1674,1698,1906,1843,1884,1845,1810,1753,1896,1855,1883,1852,1766,1616,1580,1548,1758,1418,1270,1331,1263,1222,1059,970,860,421,45,45,48,591,676,1024,787,719,1087,1313,1287,1322,1006,656,891,818,1102,893,666,688,724,681,734,695,955,825,938,918,876,943,840,740,579,940,975,891,880,975,473,741,740,759,728,810,872,783,947,688,704,838,824,818,829,834,907,886,874,834,800,854,813,1031,783,863,1705,1498,1529,1444,1686,1610,1530,1607,1542,1507,1510,1637,1623,1551,1532,1648,1306,1501,1584,1604,1581,1466,1538,1481,1694,1644,1556,1498,1349,1141,1180,1282,1404,1203,1092,1217,1105,1122,1213,1227,1352,1121,890,814,704,1758,1474,1462,1456,1410,1322,1320,1244,1179,1353,1322,1285,1154,919,908,701,787,1859,1471,1533,1448,1471,1373,1287,1265,1155,1311,1324,1240,1025,858,752,649,1597,1588,1517,1412,1484,1402,1273,1405,1186,1240,1393,1345,1227,1144,910,901,666,819,1887,1436,1488,1419,1450,1516,1486,1461,1248,1065,847,781,825,903,878,1374,1641,1534,1420,1447,1391,1221,1398,1169,1291,1371,1311,1228,1046,935,852,647,1260,1834,1515,1380,1257,1154,1381,1453,1408,982,950,1241,1704,1575,1587,1477,1281,1119,1487,1444,1290,1051,1215,1319,1285,1106,923,1765,1695,1831,1810,1744,1717,1300,1764,1917,1846,1696,1857,1978,1527,1126,1311,1346,1372,1298,1967,1566,1256,1307,1364,1375,1329,1679,948,886,1002,1820,1190,832,892,1503,1636,1243,1586,1705,1509,1677,1749,1883,1272,1398,1705,1552,1572,1825,1857,1810,1207,1532,1728,1515,1689,1885,1838,1736,1189,1555,1722,1609,1759,1894,1891,1561,1244,1619,1778,1578,1653,1881,1888,1608,1334,1598,1737,1525,1643,1858,1880,1553,1292,1612,1694,1493,1691,1789,1851,1247,1442,1714,1535,1573,1754,1709,1737,1198,1570,1714,1519,1662,1782,1883,1357,1335,1671,1623,1533,1753,1845,1656,1636,1549,1667,1501,1557,1636,1581,1577,1534,1607,1486,1596,1608,1484,1603,1437,1497,1493,1318,1659,1490,1246,1087,1091,1322,1351,1108,1266,1588,1566,1345,1323,1318,1350,1495,1184,1321,1182,1319,1771,461,45,42,49,45,66,324,581,731,835,928,1004,933,1039,951,1067,1184,1204,1316,1220,1249,1354,1196,1160,1208,976,1227,1085,1117,1178,1077,940,953,826,654,712,684,436,71,45,38,45,48,704,1291,719,738,1066,1193,1366,1069,952,1057,965,866,646,772,948,974,1046,1190,1127,1203,1247,1279,1168,1316,1379,1317,1383,1311,1346,1269,940,856,652,516,476,704,891,844,798,842,950,1084,837,946,1011,1069,1068,1042,874,1069,1310,731,1325,840,859,1240,1389,723,792,1014,1929,1146,1239,1372,1383,1499,1436,1585,1690,1789,1836,1807,1825,1704,1767,1669,1656,1774,1634,1650,1582,1644,1616,1474,1620,1701,1666,1533,1576,1567,1576,1487,1250,1077,1261,1623,1537,1597,1546,1516,1355,1374,1455,1812,1114,659,1007,1115,1134,1278,1339,1373,1290,1474,1475,1347,902,870,1051,1281,1409,1267,1230,1252,1136,1201,1174,1219,1290,1201,1272,1379,1344,1241,1305,1376,1338,1334,1243,1238,1223,1081,977,1061,1165,1274,1182,1414,671,1002,1106,1135,773,1161,2016,871,1018,818,1860,806,877,735,1061,1045,1036,957,1017,1152,1310,1476,1647,1645,1682,1549,1314,1430,1505,1623,1613,1661,1637,1641,1597,1580,1470,1540,1515,1815,1829,1875,1831,1764,1781,1535,1415,1340,1374,1346,1284,1148,672,869,1158,1115,1065,1026,1055,1019,672,1177,1048,710,908,1198,1270,1344,659,556,613,719,661,678,631,872,837,1029,1048,1026,1076,845,813,839,816,826,1007,889,902,877,977,815,887,923,923,1037,936,969,993,783,621,677,700,727,715,949,887,797,935,844,849,869,830,1001,760,1643,1807,1818,1814,1951,85,82,179,187,77,112,435,717,750,848,955,967,984,1001,971,1202,1118,1341,1291,1161,1306,1245,1204,1155,982,1130,1109,1062,1137,1099,963,933,846,594,703,711,430,68,77,211,179,95,908,1152,720,736,1074,1227,1301,986,975,995,1021,713,722,768,994,955,994,1154,1063,1135,1206,1090,1151,1342,1410,1349,1262,1264,1359,1089,887,726,507,494,618,850,893,782,814,877,1030,881,923,1011,1092,1057,1380,639,1016,987,1370,672,1365,571,1072,1173,1296,748,852,942,1217,1127,993,1133,1744,1187,1268,1375,1433,1470,1477,1627,1742,1782,1823,1807,1801,1720,1751,1623,1660,1769,1624,1664,1616,1649,1593,1453,1632,1679,1606,1563,1570,1599,1571,1442,1222,1080,1344,1621,1514,1595,1565,1479,1339,1425,1451,1931,826,712,1058,1133,1127,1269,1405,1330,1248,1515,1479,1320,785,876,1130,1311,1424,1255,1241,1227,1143,1180,1173,1207,1308,1215,1278,1397,1265,1238,1372,1412,1317,1290,1223,1286,1203,1004,970,1105,1152,1293,1174,1502,631,1251,828,1049,997,1979,1115,844,677,547,748,1089,808,1485,1445,830,823,912,1079,1087,995,1015,1058,1256,1368,1634,1661,1681,1596,1427,1401,1431,1558,1681,1604,1705,1650,1618,1577,1545,1499,1468,1730,1827,1864,1842,1817,1726,1712,1371,1385,1377,1391,1290,1224,902,594,1199,1054,1258,1036,971,1099,790,1227,934,1299,626,591,982,678,1226,1241,2014,1891,1812,1716,1748,1713,1731,1764,1897,1941,2048,52,45,50,47,45,44,45,50,47,45,44,45,311,761,1172,1435,1467,1552,1540,1459,1484,1563,1644,1677,1749,1770,1731,1641,1726,1645,1626,1647,1626,1614,1602,1358,1327,1240,1178,1111,758,425,285,177,134,46,48,49,47,45,46,48,49,48,45,46,48,1768,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1971,1330,1159,1173,1246,1232,1171,1195,1131,1233,1242,1281,1290,1187,1368,1268,1551,1682,1516,1507,1341,1364,1559,1582,1467,1371,1641,1594,1553,1481,1437,1618,1370,1371,1418,1493,1430,1405,1212,1254,1318,1242,1263,1136,1060,852,1092,1040,1082,944,746,651,814,824,628,624,618,663,2048,1499,1108,1074,1175,1021,1178,1310,1266,1191,1217,1182,1241,1297,1320,1572,1591,1761,1766,1772,1772,1713,1677,1348,1602,1405,1503,1614,1567,1399,1529,1656,1611,1663,1499,1706,1529,1389,1289,1382,1226,1104,1091,960,1010,1051,937,1018,1062,1068,1003,925,816,627,498,516,405,370,1729,1081,647,718,704,675,651,646,687,686,652,651,678,710,1335,1623,1489,1599,1582,1694,1582,1534,1482,1403,1007,807,1403,1418,1473,1557,1522,1467,1526,1380,1299,1134,983,1212,1404,1505,1453,1457,1457,1340,1231,902,646,671,686,690,630,671,655,685,709,665,628,696,1467,1451,733,669,626,683,711,687,653,644,672,667,688,686,874,1535,1620,1618,1671,1708,1663,1557,1468,1430,1384,1354,1328,1301,1312,1330,1239,1290,1314,1285,1214,1679,1690,1611,1622,1660,1590,1506,1332,1109,924,758,755,660,647,674,657,701,679,661,656,687,684,679,1084,2045,509,440,529,621,633,754,887,872,1041,1098,1069,1133,1368,1524,1556,1600,1565,1549,1502,1457,1430,1461,1440,1461,1538,1453,1446,1392,1410,1266,1398,1409,1466,1625,1604,1529,1440,1269,1092,1199,1281,1216,1284,1238,1161,1090,989,991,1024,1041,994,953,920,826,668,575,391,1576,920,335,500,554,647,735,848,843,862,1019,1022,1144,1233,1366,1535,1629,1682,1738,1652,1615,1474,1448,1337,1321,1317,1422,1428,1442,1430,1434,1493,1419,1452,1441,1435,1438,1566,1697,1631,1489,1313,1272,1197,1248,1202,1182,1266,1171,1054,1058,1051,1013,863,793,701,648,478,1208,1380,334,490,654,671,693,803,863,949,1103,1042,1069,1426,1544,1460,1471,1586,1476,1441,1237,1286,1336,1374,1347,1422,1400,1431,1333,1306,1384,1377,1395,1298,1311,1318,1283,1399,1534,1532,1622,1402,1475,1398,1354,1199,1210,1227,1184,1151,1071,1034,987,935,917,731,638,454,724,1745,1723,1736,1716,1787,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1947,2048,1969,2048,1969,1968,1980,2048,2029,2048,2048,2008,1876,1968,2029,1878,1800,2005,1979,1879,2048,1963,1901,1970,2045,1723,946,704,774,957,986,1005,1134,1024,1088,839,855,1038,1000,830,976,839,912,948,836,799,880,833,1111,1037,749,711,764,1368,1228,1274,1355,680,628,624,568,569,548,993,947,885,1003,949,678,948,767,892,982,1009,929,973,836,548,570,849,511,768,963,898,482,794,590,700,712,607,1112,924,1016,1099,748,673,544,534,553,723,756,661,858,653,780,682,923,1253,728,877,1003,967,1027,818,1059,733,1009,1070,780,715,930,947,320,531,929,788,738,535,587,944,606,679,634,644,721,913,982,845,631,697,755,806,1921,1667,1624,1448,1438,1401,1451,1538,1930,1768,1775,1641,1437,1422,1382,1478,1534,2033,1688,1603,1706,1678,1592,1616,1729,1730,1804,1753,1742,1744,1491,1204,1203,1225,1623,1608,1637,1785,1765,1749,1726,1675,1778,1741,1698,1681,1697,1752,1752,1770,1698,1748,1767,1759,1704,1783,1712,1588,1589,1569,1330,1309,1290,1438,1516,1525,1650,1625,1589,1692,1524,1534,1655,1622,1601,1927,1672,1444,1493,1496,1541,1440,1530,1500,1422,1488,1573,1636,1431,1539,1694,1700,1666,1786,1770,1645,1732,1598,1572,1553,1516,1593,1628,1588,1626,1594,1612,1596,1543,1562,1622,1667,1598,1644,1564,1553,1583,1652,1627,1594,1411,1153,1427,1522,1478,1362,1466,1510,1586,1599,1506,1395,1481,1772,1812,1247,1200,1230,1235,1245,1284,1236,1283,1272,1296,1294,1553,1303,1299,1293,1317,1305,1324,1303,1239,1258,1284,1276,1244,1272,1233,1224,1271,1254,1219,1216,1180,1221,1237,1225,1222,1227,1238,1264,1244,1261,1254,1297,1303,1489,1342,1272,1280,1307,1327,1288,1298,1219,1295,1287,1237,1376,2048,1725,1751,1806,1762,1787,1806,1780,1779,1778,1796,1711,1741,1691,1732,1642,1637,1652,1604,1624,1665,1651,1618,1628,1732,1720,1694,1779,1729,1786,1767,1782,1732,1753,1764,1585,1664,1715,1662,1711,1606,1657,1712,1693,1692,1705,1761,1705,1775,1742,1762,1735,1752,1760,1761,1769,1754,1752,830,1502,1837,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1118,707,654,599,589,603,629,659,666,548,577,660,1438,479,543,638,565,459,384,409,968,1637,1649,1113,1037,1348,1266,1060,1558,1144,1102,1719,1479,902,904,1238,354,448,494,468,520,463,514,346,353,261,293,315,938,1878,1611,1814,1593,1725,1379,1140,1129,1018,1207,1181,1017,1150,853,1186,1103,547,1193,1178,1094,1076,1195,808,1154,1021,949,1175,896,1162,738,950,1012,910,1282,755,1218,903,1115,1077,1083,1336,867,1101,1084,885,1151,724,1280,300,302,306,664,1200,1087,1260,759,1207,946,1810,1011,1859,1206,2039,1476,1487,1554,1611,1572,1622,1612,1663,1737,1607,1641,1662,1639,1653,1633,1601,1646,1640,1734,1718,1689,1764,1771,1764,1697,1653,1765,1805,1805,1774,1847,1880,1901,1885,1895,1873,1782,1776,1827,1792,1805,1807,1768,1826,1731,1772,1599,1552,1662,1638,1585,1505,1458,1588,1579,1698,1643,2048,1494,1421,1519,1560,1482,1456,1547,1487,1451,1505,1620,1622,1420,1569,1667,1645,1679,1787,1747,1621,1711,1588,1575,1523,1560,1590,1588,1579,1600,1629,1587,1557,1532,1593,1592,1657,1566,1636,1554,1592,1583,1651,1594,1567,1323,1188,1470,1503,1430,1361,1482,1535,1582,1638,1469,1388,1493,1910,1166,552,684,529,571,690,850,689,977,964,1075,996,1137,1239,1261,1255,1328,1369,1393,1331,1392,1476,1406,1379,1430,1546,1457,1398,1445,1356,1029,1010,940,1163,1249,1253,1221,1037,1115,965,946,1000,914,826,988,882,711,853,907,848,436,594,842,686,782,681,553,1179,1611,732,724,910,973,1067,1061,1078,1137,1121,1080,957,837,723,955,1290,1309,1440,1415,1476,1491,1504,1412,1427,1550,1607,1553,1532,1601,1618,1720,1690,1564,1473,1548,1549,1506,1502,1487,1301,1310,1213,1118,954,1019,1102,1103,1053,1132,1199,1230,1106,979,879,742,816,780,970,801,1553,1910,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2015,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1269,1320,1251,988,720,358,1058,687,1027,1085,1070,927,460,1473,1544,1488,1329,1495,1304,1391,1168,1097,1191,1198,978,1733,1286,1362,1240,1204,1176,1251,1149,1230,1503,1427,1380,1301,1280,1244,1364,1476,1542,1662,1604,1538,1626,1528,1576,1556,1516,1530,1517,1430,1412,1376,1341,1778,2057,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2047,1331,1383,1418,1401,1396,1352,1477,1460,1537,1671,1640,1484,1442,1377,1330,1576,1691,1731,1720,1631,1616,1459,1455,1597,1645,1647,1655,1663,1578,1577,1481,1599,2051,2048,2031,2029,2048,2008,2029,2032,2048,2016,2018,2048,2036,2048,2013,2043,2040,2048,2041,2048,2020,1896,2001,2048,2038,1768,1461,1615,1581,1640,1524,1486,500,215,218,213,213,519,496,220,220,236,220,395,1314,1818,1256,1241,1305,1274,1053,1216,1136,1259,1208,1186,1208,1110,1225,2057,1649,689,1434,2048,1096,641,1696,2020,849,869,2057,1574,641,847,462,161,1717,1296,1884,2054,2041,2048,1436,938,2048,2048,2048,2048,2048,2048,1442,939,2048,2048,2048,2048,2048,2048,2048,1407,939,2053,2048,2048,2048,2048,2048,1363,1003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1660,1211,968,79,478,2020,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2046,1933,2048,2048,2048,2048,2048,2056,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2049,2048,2048,2048,2048,2034,2048,2048,2048,2048,2048,2034,2048,2048,2048,2010,2030,2048,2035,2048,2048,2032,2048,2025,1996,2048,2048,2048,2035,2048,2048,2034,2048,2048,2048,2048,2056,2052,2057,2048,1843,963,2055,2056,2048,1375,929,1976,2057,2048,2001,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2030,2056,2053,2048,2048,2048,2055,2019,2048,2006,2048,2048,2048,2041,2048,1936,2048,2035,2048,2034,2048,2010,1987,2048,2032,2048,2028,2048,1914,2057,2035,2048,2035,2048,1930,2048,2051,2048,2052,2048,1986,1998,2048,2032,2041,2048,2036,2045,2048,2057,2056,2048,2048,2048,2057,2048,2034,2048,2024,2034,2048,2048,2048,2019,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2056,2052,2037,2048,2048,2048,2048,2048,2022,2019,1986,2051,2035,2048,2044,2048,2023,2003,2048,2025,2057,2032,2056,1924,2048,2047,2056,2033,2048,1909,2057,2046,2055,2048,2048,2034,1990,2048,2017,2048,2040,2032,1961,2048,2030,2057,2033,2048,1911,2048,2046,2048,2035,2048,1913,1365,146,138,938,2048,1748,137,935,2046,1438,1194,1971,1980,2040,2038,2050,2004,214,926,2048,1348,994,2034,1660,141,937,2014,1287,134,149,437,257,927,2048,609,146,140,447,138,490,1018,896,876,937,1006,935,904,683,982,812,723,1028,735,972,1129,885,959,947,778,935,1093,1043,930,1150,926,792,1152,945,1103,1054,678,714,400,379,960,1057,1017,967,492,335,338,336,410,362,491,519,573,1447,1224,959,915,1265,1383,1533,1517,1304,1422,992,1245,1553,1356,1146,1096,1196,1472,1403,1538,1537,1241,1231,1211,1142,1416,1385,1438,1524,1147,1213,1110,1290,1489,1426,1575,1498,1076,1116,1101,1386,1398,1486,1503,1383,1044,1209,1118,1396,1450,1501,1496,1040,1267,1187,1341,1338,1398,929,611,558,633,699,659,682,640,966,946,829,776,716,918,966,803,578,942,873,869,544,612,748,568,795,823,696,828,665,817,580,639,649,449,697,601,698,782,511,951,553,494,650,755,654,500,498,622,483,475,456,645,610,838,698,436,988,1323,1034,1515,1347,1402,1280,1228,1230,1035,1195,1212,1331,1282,1286,1468,1111,1192,1106,990,1494,814,1540,972,881,817,1320,1188,1007,749,935,927,1065,1013,871,1036,1043,1016,835,819,948,812,964,1068,964,941,981,1183,960,1049,875,741,896,1082,986,1072,907,910,1065,1138,506,529,520,471,651,694,568,921,729,625,663,626,683,1123,950,1118,977,487,816,793,727,742,695,670,869,334,335,629,609,753,895,635,1125,847,820,839,518,834,949,849,788,893,874,869,841,795,970,632,801,916,883,834,902,703,733,1042,922,849,782,790,873,874,814,825,798,523,802,854,847,871,797,814,627,738,599,726,574,839,340,581,1230,717,731,1658,1742,1809,1815,2015,1889,2048,2048,2048,1698,1376,1742,1763,2048,2032,1871,1815,2048,1878,1779,2047,2048,2057,1923,1768,2035,1886,1773,2050,2001,1799,1885,1223,1147,538,683,575,1882,2048,1959,1493,1391,1221,1138,1398,2035,1796,1200,1252,1058,1211,1602,1499,1365,956,483,143,566,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2057,1998,1912,1413,2048,2048,2048,2048,2057,2048,2048,2045,454,273,2023,2039,2048,2051,1954,1364,1921,2005,2034,1906,2018,2048,2048,2048,2048,2024,1883,2048,1972,1981,2057,2006,2048,2048,2032,2057,2050,2021,1751,1472,1745,1894,2048,2048,2048,2048,2048,2048,2048,2048,1868,1947,1096,1035,1084,1437,1121,1256,1625,1494,906,1380,1162,1332,1110,1028,1068,1118,1023,1490,1761,1889,1894,1891,1909,1888,1628,1717,1712,1522,1796,1654,1153,1021,1063,1190,1524,1016,1026,1151,1019,1112,1099,978,1318,1187,1349,1087,2014,2030,1976,2048,2030,1993,2048,1981,2048,2002,2032,2049,1976,2048,2028,1973,2051,2048,2015,2049,1974,2048,2048,1977,2032,1972,2048,2041,1973,2048,2045,1977,2048,2034,1975,2048,2035,1986,2048,2039,1987,2048,2032,1979,2048,1972,2048,2034,2048,2026,2030,2056,2047,2048,2048,2048,2056,2048,2048,1969,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,1901,2048,2048,2048,2048,2048,2048,2048,2048,1896,2048,2048,2048,2048,2048,2048,2048,1894,2048,2048,2048,2048,2048,2048,1897,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,1892,2048,2048,2048,2048,2048,2048,2048,2048,2048,1921,1375,1751,1281,1641,1512,1665,1738,1755,1766,1622,1480,1454,1627,1653,1687,1816,1683,1782,1412,2057,1650,1206,1610,1224,1349,1160,1187,1635,1671,1742,1697,1691,1634,1885,1981,2050,2048,1221,1159,1128,1237,1200,1081,1207,969,1336,1637,1441,1510,1336,1493,1357,1488,1505,1557,1788,1628,1633,1588,1569,1597,1713,1806,1933,1739,1759,1897,1796,1924,1667,1775,1844,1785,1211,1864,1876,1448,1014,1531,1580,1585,1185,1662,1678,1353,1487,1506,1791,1594,1658,1781,1308,558,815,1479,1179,1239,1386,1340,1839,1663,1383,1639,1564,1320,1440,1759,1784,1957,1937,1391,1714,1885,1828,1836,1776,1813,1798,1689,1781,1467,1811,1614,1825,1657,1444,1400,1388,1451,1466,1505,1258,1479,1511,1699,1632,1545,1568,1571,1242,1568,1608,1577,1519,1485,1531,1525,1522,1533,1516,1477,785,755,626,690,703,667,616,612,650,657,596,659,758,623,715,715,762,676,773,760,772,508,631,533,621,590,226,494,463,658,2019,2047,1785,1740,1742,1696,1673,1679,1686,1709,1701,1688,1689,1711,1689,1952,1931,1780,1723,1728,1638,1650,1721,1781,1721,1756,1171,1047,1096,1951,1784,1786,1735,1813,1628,1472,1482,1483,1477,1468,1489,1493,1491,907,641,533,644,668,556,571,597,627,554,634,618,640,516,453,293,526,571,369,378,545,461,373,489,258,1157,1965,1841,1653,1678,1663,1669,1671,1665,1690,1683,1694,1685,1810,1977,1589,1780,1718,1666,1744,1672,1685,719,752,878,1904,1790,1760,1583,1775,1759,1516,1523,1494,1517,1479,1488,1495,1503,1500,1493,1513,1491,1492,1508,1493,1518,1499,1501,1500,1481,1260,583,282,575,556,714,485,586,604,574,254,545,494,467,438,490,325,421,603,570,628,609,632,627,694,648,490,731,412,491,269,613,370,367,323,496,458,356,509,580,530,439,519,503,590,633,363,436,441,352,563,487,245,405,521,379,443,398,278,441,1171,1983,2023,2022,1985,2038,1846,1693,1702,1695,1720,1694,1705,1717,1712,1669,1691,1687,1672,1665,1696,1702,1713,1678,1719,1688,1697,1681,1666,1692,1702,1674,1686,1864,2048,2048,1936,1667,1704,1722,1710,1638,1711,1695,1697,1678,1585,1757,1718,1698,1699,1744,1684,1629,1769,1714,1673,1301,946,1085,1000,1466,1755,1611,1711,1645,1652,1275,1007,1114,1792,1852,1823,1855,1767,1450,1570,1485,1522,1536,1487,1457,1517,1501,1493,1461,486,551,405,472,458,415,508,382,669,653,534,571,567,534,567,200,263,126,360,470,676,488,508,480,434,382,535,409,200,315,1385,2042,1990,1731,1713,1720,1719,1682,1698,1690,1679,1683,1728,1719,1679,1685,1909,2048,1734,1666,1777,1716,1736,1670,1681,1814,1755,1695,1426,941,1402,1278,1637,1743,1786,1505,1559,1497,1493,1501,1479,1485,1492,1484,1468,1501,636,365,425,287,577,565,218,251,355,352,180,399,338,444,136,134,353,251,308,306,517,375,282,513,610,570,392,310,530,533,1741,2005,2012,1741,1699,1692,1681,1683,1689,1675,1670,1720,1693,1707,1735,1704,1990,2048,1821,1725,1765,1774,1735,1666,1873,1770,1756,1846,1842,930,758,1158,1564,1606,1578,1680,1791,1542,1507,1502,1500,1496,1483,1170,499,375,331,369,508,169,439,445,467,334,290,461,305,238,329,496,1153,1963,1795,1685,1705,1680,1674,1693,1684,1721,1997,1789,1743,1621,1707,1770,1826,1747,888,1512,1220,1713,1642,1544,1529,1477,1496,1491,1481,1509,1506,1523,1438,497,592,610,602,532,564,611,516,627,461,636,635,680,495,626,546,563,506,590,454,449,417,580,475,331,373,543,949,1992,2031,1804,1697,1676,1665,1661,1693,1702,1704,1713,1677,1697,1651,1826,2048,1837,1746,1665,1697,1779,1765,1815,1737,1736,1360,853,820,1026,1273,1305,1155,1356,1517,1680,1563,1623,1546,1439,1514,1489,1493,1495,1488,1492,1481,1498,1507,1538,1459,1487,1501,1539,1174,446,408,358,316,257,466,458,360,216,551,448,440,457,363,379,409,509,384,392,274,139,164,416,248,220,118,99,372,431,267,350,235,435,160,426,341,370,310,269,436,408,479,153,406,380,287,404,411,350,430,398,1141,1986,1937,1968,2007,1773,1669,1654,1674,1678,1689,1689,1687,1676,1739,1684,1666,1677,1680,1669,1663,1669,1684,1685,1664,1654,1688,1693,1811,2048,2048,1689,1562,1649,1639,1655,1691,1811,1704,1704,1673,1701,1603,1650,1691,1717,1660,1731,1126,756,879,1437,1702,1601,1601,1343,1779,1837,1823,1833,1655,1541,1441,1493,1460,1483,1488,1490,1482,1503,1490,1481,1486,1485,1490,1469,1479,1316,526,549,602,642,547,569,401,484,279,293,537,241,429,470,615,447,331,403,586,572,685,604,631,320,557,459,506,580,662,591,652,495,236,64,606,623,629,512,651,603,584,634,619,547,590,596,576,556,620,484,1780,1999,1947,1985,1833,1698,1675,1685,1665,1677,1704,1688,1681,1699,1712,1702,1711,1721,1693,1708,1709,1700,1697,1695,1710,1724,1946,2048,1977,1727,1719,1700,1783,1802,1757,1741,1771,1817,1811,1778,1771,1757,1757,1692,1801,1771,997,893,997,936,1116,1012,1166,1248,1237,972,980,1034,1375,1818,1706,1831,1828,1586,1667,1610,1488,1493,1515,1511,1491,1508,1500,1489,1500,1503,1509,1491,1501,1464,1481,1468,1476,1479,1504,1165,619,622,663,536,607,565,561,663,609,579,604,585,501,569,578,473,383,497,566,501,667,500,601,560,389,444,614,405,600,531,329,585,518,522,561,458,361,546,512,591,424,566,487,292,470,481,346,319,520,282,302,316,367,442,498,497,377,328,573,450,244,375,351,489,347,275,293,617,525,1120,2055,2056,2056,2048,2048,2053,1730,1723,1728,1736,1748,1727,1719,1713,1728,1718,1709,1707,1744,1717,1738,1754,1712,1719,1724,1737,1730,1717,1736,1746,1734,1740,1743,1738,1725,1727,1701,1737,2048,2048,2048,2048,1944,1737,1824,1835,1863,1858,1822,1779,1800,1726,1775,1831,1802,1775,1810,1796,1792,1766,1840,1823,1838,1845,1852,1825,1882,1840,1814,1849,1806,1755,1800,816,852,850,755,862,1392,1200,1594,1019,1258,1527,1318,997,866,886,1292,1181,1461,1323,1786,1832,1787,1630,1654,1644,1575,1597,1600,1574,1544,1494,1491,1529,1523,1555,1530,1485,1527,1501,1508,1509,1518,1521,1540,1522,1475,1498,1511,1489,1535,1513,1498,1493,1494,1517,1496,1477,1473,1508,1513,550,658,578,471,653,442,412,687,770,631,583,663,653,676,545,624,669,661,675,681,691,596,687,733,720,576,675,639,626,683,544,126,481,584,627,653,464,695,682,650,529,438,563,511,532,566,471,225,319,240,506,585,244,169,138,679,209,609,541,580,633,568,610,591,601,564,641,570,579,576,553,546,512,527,458,552,499,728,569,533,518,518,517,564,600,280,605,384,554,601,567,547,442,729,622,560,1951,2028,2053,2001,1994,1947,1975,2053,1767,1708,1658,1658,1679,1714,1692,1703,1687,1719,1720,1699,1695,1679,1716,1697,1707,1691,1698,1685,1710,1712,1704,1684,1707,1677,1719,1708,1700,1685,1705,1713,1698,1711,1694,1684,1689,1680,1699,1684,1673,1677,2048,2048,2048,2048,1842,1730,1694,1773,1707,1727,1798,1681,1637,1696,1715,1721,1732,1768,1731,1756,1834,1703,1775,1709,1819,1707,1724,1744,1714,1779,1768,1715,1786,1656,1699,968,1062,931,1068,1085,1064,961,957,1003,855,568,691,668,720,872,872,927,910,870,874,1000,819,844,798,816,727,917,748,721,539,292,895,685,750,1218,1623,795,1740,1708,1664,1751,1824,1846,1841,1667,1707,1565,1597,1635,1581,1484,1532,1526,1510,1485,1498,1523,1496,1503,1540,1525,1484,1487,1495,1503,1495,1510,1497,1518,1504,1511,1495,1498,1507,1514,1507,1519,1518,1525,1532,1518,1486,1479,1506,1525,1502,1506,1520,1514,1485,1514,1511,1509,1493,1509,1517,1527,1494,1522,858,626,690,697,685,789,659,633,587,636,756,777,678,703,715,435,524,698,653,774,731,664,741,657,637,446,528,685,696,579,516,750,723,725,692,680,486,725,592,672,655,619,688,625,415,378,641,621,407,731,555,707,656,571,629,490,645,718,644,634,524,633,622,646,562,657,481,688,378,576,455,661,637,675,658,611,665,633,630,645,764,745,675,776,667,691,742,749,697,627,750,731,774,721,641,735,578,638,649,543,532,295,609,636,582,620,615,621,530,572,666,405,537,383,633,538,686,617,567,725,686,657,616,642,642,600,656,401,747,501,523,620,741,562,637,690,488,469,485,429,669,686,654,656,647,619,1707,1980,1989,1955,1986,1970,2003,2021,1971,2018,2048,2027,2036,1885,1730,1719,1714,1715,1692,1688,1696,1713,1687,1689,1678,1667,1712,1720,1719,1688,1714,1698,1681,1683,1695,1670,1702,1673,1712,1722,1727,1687,1686,1701,1705,1724,1732,1740,1738,1718,1731,1742,1724,1700,1694,1691,1693,1689,1684,1696,1707,1691,1685,1710,1710,1722,1676,1665,1702,1748,1735,1733,1733,1731,1736,1853,2048,2048,2048,2048,2048,2027,1538,1631,1691,1768,1754,1739,1749,1723,1792,1784,1667,1692,1718,1680,1745,1705,1709,1784,1700,1669,1600,1721,1762,1750,1733,1761,1667,1729,1679,1706,1755,1742,1615,1771,1801,1777,1718,1693,1632,1705,1753,1748,1804,1454,1013,1058,973,986,1030,956,961,955,1026,822,1247,1600,1422,1573,1689,1581,1573,1547,1659,1614,1541,1792,1430,1432,1614,1288,1255,1249,1617,1083,1391,1586,1669,1142,1488,1394,1254,1352,1210,1489,1521,1557,1584,1495,1675,1620,1652,1426,1335,1578,1531,1558,1617,1502,1418,1546,1652,1506,1522,1907,1802,1883,1892,1919,1885,1876,1774,1771,1861,1795,1833,1474,1474,1470,1496,1484,1494,1489,1484,1500,1492,871,509,420,540,492,389,545,490,386,372,375,522,490,552,404,541,516,217,441,320,419,361,357,333,449,273,287,472,199,403,367,536,1638,1944,2037,1702,1693,1707,1703,1702,1730,1686,1708,1701,1692,1680,1685,1677,1667,1703,2048,1963,1719,1730,1750,1760,1755,1746,1783,1767,1756,1724,1679,1344,790,818,1076,1601,1342,1356,1244,1570,1667,1751,1508,1459,1527,1498,1467,1455,1509,1507,1506,1484,1308,537,562,475,449,372,711,520,610,561,552,503,464,439,396,220,526,419,335,396,390,343,531,535,326,367,483,296,776,2022,2034,1768,1711,1689,1721,1733,1711,1722,1717,1699,1701,1698,1709,1682,2016,2002,1587,1804,1864,1858,1767,1792,1757,1854,1768,1778,1771,1201,695,1023,1597,1637,1565,1408,1631,1709,1702,1554,1621,1524,1506,1469,1494,1474,1492,1487,1499,1485,1461,1485,1471,1496,1448,1471,1476,1499,1476,1477,1499,1448,1459,1481,1473,1497,1448,1478,1494,1489,1483,1485,1484,1512,1490,1476,1492,1486,554,638,574,678,732,670,621,545,667,509,623,691,593,579,588,633,569,602,573,596,695,618,582,583,588,636,566,594,606,591,410,526,524,673,583,512,560,544,448,591,527,581,526,662,557,386,339,182,421,434,284,523,408,350,504,616,660,535,229,187,372,209,139,253,468,361,535,504,462,568,629,476,589,550,593,587,460,529,417,512,628,579,490,602,414,264,577,476,492,446,279,218,514,576,663,558,543,382,491,623,619,508,543,694,581,619,498,502,660,1396,2007,2002,1978,1978,1913,1956,1942,1982,2049,1718,1730,1719,1715,1705,1704,1712,1707,1681,1690,1697,1694,1673,1716,1697,1712,1684,1690,1674,1717,1666,1648,1673,1635,1685,1674,1681,1690,1685,1668,1679,1667,1695,1687,1694,1664,1680,1672,1691,1673,1700,1675,1691,1665,1656,1669,1817,2048,2048,2048,2048,1808,1754,1693,1710,1691,1681,1676,1803,1751,1806,1742,1745,1683,1695,1697,1649,1706,1696,1703,1731,1711,1746,1709,1722,1771,1669,1716,1646,1706,1707,1773,1614,1568,1031,930,843,855,839,967,900,871,847,1023,1288,1040,978,1073,1072,1451,1241,1225,1089,1185,1388,1276,1185,1299,1569,1376,1503,978,1263,1206,1127,833,627,980,593,400,702,973,1060,1175,1110,1127,887,596,557,1083,1149,1512,1702,1842,1873,1854,1915,1941,1911,1928,1895,1586,1567,1482,1499,1500,1490,1490,1496,1450,1490,1493,1487,1509,1150,460,252,468,545,484,381,608,579,552,166,283,220,258,352,387,500,487,421,468,308,312,373,474,348,366,399,319,320,485,277,366,373,394,346,658,662,833,1986,1985,2038,1787,1704,1663,1695,1693,1702,1707,1703,1681,1674,1711,1714,1708,1679,1707,1704,1870,2048,1804,1729,1691,1711,1762,1812,1774,1716,1707,1786,1755,1765,1742,1288,747,828,1693,1682,1245,630,830,1160,1742,1832,1749,1547,1609,1507,1492,1500,1494,1514,1499,1229,590,610,586,547,444,554,524,441,422,520,380,334,248,358,399,448,439,285,470,556,167,355,640,739,1945,2019,1688,1698,1714,1701,1704,1676,1665,1695,1695,1710,1685,2048,1748,1794,1839,1727,1737,1716,1741,1778,1829,901,805,1265,1603,1506,1501,1434,1629,1653,1471,1493,1362,1465,1484,1483,1499,1457,1492,1478,1481,1502,1510,1470,1502,1503,729,486,487,593,620,470,505,473,474,668,531,521,544,623,373,351,438,526,291,406,588,407,430,465,269,212,417,682,616,629,597,593,415,656,498,255,604,315,612,570,512,379,537,438,1296,1985,2038,1998,1780,1678,1695,1714,1691,1671,1684,1662,1697,1724,1680,1664,1674,1729,1713,1717,1706,1727,1703,1739,2048,2048,1754,1696,1711,1715,1777,1648,1714,1703,1621,1687,1802,1761,1693,1784,1752,1358,884,837,984,1742,1515,1348,1614,1552,1448,1767,1839,1755,1634,1428,1451,1507,1512,1498,1465,1496,1487,1484,1473,1473,1485,1497,1477,1467,1488,945,510,587,577,575,337,517,607,601,467,408,447,411,510,256,371,489,510,456,517,430,438,559,421,302,189,221,266,539,430,252,156,137,265,363,222,259,489,529,319,565,329,317,362,331,402,467,1394,1979,1870,2001,1896,1700,1686,1691,1687,1699,1682,1720,1701,1684,1656,1658,1675,1699,1689,1667,1650,1694,1657,1665,1668,1895,2048,2029,1751,1718,1707,1780,1684,1800,1689,1647,1694,1692,1715,1603,1688,1759,1744,1740,1218,765,864,847,1578,1286,1336,1460,1451,891,1273,1753,1746,1672,1677,1601,1600,1500,1520,1501,1508,1500,1520,1445,1482,1489,1476,1508,1513,1489,1503,1500,1490,1476,1453,1496,1496,1524,1518,547,591,581,368,434,503,560,548,546,477,483,500,564,369,157,629,532,499,464,346,315,200,250,219,561,567,559,559,515,518,452,400,359,453,586,544,579,442,412,519,244,333,330,140,164,535,553,628,523,349,433,415,440,325,368,234,186,424,390,411,424,436,472,229,496,355,536,491,596,425,919,2032,2041,1978,1997,2046,1960,1650,1645,1707,1707,1670,1726,1719,1699,1688,1667,1677,1698,1704,1712,1718,1683,1665,1673,1690,1708,1719,1687,1707,1705,1660,1684,1699,1711,1720,1732,1705,1914,2048,2048,2048,1622,1583,1756,1769,1756,1762,1729,1730,1734,1730,1766,1725,1753,1714,1681,1741,1734,1832,1744,1699,1688,1706,1781,1763,1827,1821,944,804,739,778,548,928,1044,850,657,994,1047,939,839,611,400,635,233,963,1359,679,1240,1531,1706,1761,1765,1780,1699,1634,1655,1464,1496,1469,1479,1496,1498,1468,1453,1495,569,522,490,502,271,486,581,348,540,542,369,391,495,377,299,345,505,395,599,564,527,585,521,611,518,479,521,482,1005,2012,2031,1841,1687,1703,1682,1651,1711,1705,1710,1702,1710,1691,1687,1704,2052,1894,1732,1732,1751,1852,1760,1821,1792,1733,1823,1240,858,813,952,1101,1164,1297,1655,1684,1628,1579,1582,1513,1515,1505,1481,1506,1490,1456,1497,1482,1477,1477,1477,1501,1500,1477,1489,1065,634,618,538,601,617,634,619,643,662,476,648,596,499,673,391,530,591,555,570,508,575,615,442,504,533,401,406,518,470,526,560,247,466,504,472,389,572,458,527,639,544,576,528,431,455,544,545,596,644,372,562,570,626,604,1147,2053,2028,2049,2019,1842,1703,1715,1716,1707,1719,1707,1694,1675,1699,1672,1722,1667,1733,1716,1691,1692,1696,1688,1673,1663,1704,1705,1711,1840,2048,2048,1810,1737,1774,1688,1744,1664,1761,1822,1788,1805,1818,1675,1731,1689,1836,1783,1709,1116,766,840,779,829,1579,1799,1319,1398,1763,1666,1580,1002,1731,1853,1843,1751,1813,1610,1587,1456,1483,1497,1479,1487,1481,1485,1482,1471,1471,1516,1474,1475,1488,1489,1499,1536,1501,1497,1490,1498,1509,969,331,181,220,362,436,518,438,400,521,461,628,492,301,449,378,522,238,410,547,578,426,396,271,164,531,184,304,491,521,570,551,556,344,557,472,240,428,499,353,547,624,488,607,325,169,241,322,472,350,464,565,563,529,623,644,488,535,520,400,322,471,412,247,312,377,446,449,292,512,730,1991,2044,2012,2007,2050,1839,1681,1699,1708,1682,1651,1675,1685,1646,1682,1691,1677,1681,1682,1703,1700,1662,1725,1706,1669,1687,1691,1700,1683,1718,1703,1686,1694,1702,1646,1720,2042,2048,2048,1842,1681,1753,1776,1706,1746,1606,1758,1760,1669,1733,1780,1810,1789,1796,1682,1716,1709,1631,1778,1681,1662,1507,1766,867,911,723,848,890,755,837,887,874,961,1129,1045,975,731,895,921,1132,1090,1038,1057,1119,1017,1043,1036,849,187,393,1300,1292,1671,1869,1820,1835,1815,1663,1496,1533,1526,1502,1492,1493,1483,1507,1509,1491,1508,1354,362,379,172,274,446,301,373,426,434,508,424,459,275,497,324,432,414,255,363,348,446,331,380,418,430,242,327,211,331,337,378,466,159,280,278,1276,1996,1969,1885,1686,1690,1715,1684,1689,1694,1673,1690,1665,1691,1682,1681,1674,1686,1672,2002,2048,1777,1716,1797,1678,1704,1728,1717,1727,1759,1794,1664,1678,1625,1176,784,970,1589,1546,1655,1891,1894,1729,1519,1559,1481,1504,1503,1500,1502,1504,1504,1495,1498,1490,1496,1516,1521,1509,1494,1480,1495,1501,1514,1490,1482,1510,1500,1480,1513,1515,1512,1461,1514,1512,1495,1470,1471,650,497,561,478,496,563,571,653,602,624,628,510,416,476,586,455,462,561,581,632,594,562,524,599,499,422,480,582,607,533,292,559,428,531,504,476,515,491,510,571,535,497,540,437,329,418,379,451,392,333,274,506,392,383,501,427,644,585,475,285,559,606,629,600,579,579,366,551,498,537,476,412,449,577,334,484,508,505,391,380,442,539,527,421,531,549,515,410,251,521,550,337,318,173,222,348,615,323,435,456,281,257,317,436,364,322,365,367,229,516,402,236,787,2053,2026,2042,1981,1983,2033,1997,2028,2045,1939,1743,1731,1753,1721,1694,1701,1699,1684,1709,1692,1669,1706,1690,1729,1707,1719,1727,1710,1697,1683,1683,1687,1705,1741,1727,1686,1674,1670,1674,1694,1724,1672,1652,1673,1692,1693,1678,1729,1708,1740,1744,1741,1731,1672,1705,1732,1693,1682,1657,1685,1801,2048,2048,2048,2048,2048,1792,1740,1775,1763,1695,1737,1662,1697,1631,1633,1764,1722,1740,1789,1728,1711,1687,1732,1702,1670,1684,1571,1634,1793,1705,1627,1693,1656,1617,1680,1735,1757,1782,1656,1779,1689,1577,1644,1362,782,841,833,850,792,737,800,699,1108,1028,1083,1094,887,738,758,926,1015,715,856,765,961,877,693,661,695,832,892,821,867,1074,1132,1260,1008,1165,1149,1166,1416,1615,1932,1781,1832,1874,1845,1812,1889,1848,1608,1599,1584,1517,1545,1519,1501,1533,1512,1508,1500,1497,1520,1501,1507,1465,1515,970,538,744,636,502,599,553,597,492,476,442,575,605,720,610,756,615,673,652,556,776,662,476,704,684,572,478,646,590,717,611,482,523,498,311,336,343,635,598,616,642,537,586,489,596,551,811,2052,2055,2031,2036,1710,1727,1739,1739,1723,1718,1736,1737,1714,1742,1744,1723,1708,1714,1719,1693,1695,1737,1730,1732,1724,2048,2048,1989,1749,1861,1852,1853,1824,1875,1804,1884,1840,1849,1815,1846,1772,1802,1736,1820,1829,1832,1688,1003,982,903,916,1278,1284,1167,1222,972,1127,962,1062,1087,1380,1406,1550,1669,1712,1601,1633,1519,1548,1479,1495,1497,1466,1475,1481,1487,1522,1533,1469,1467,1476,1499,1474,1479,1466,1460,1483,1464,1472,1494,1467,1472,1481,1368,586,529,599,461,533,460,477,520,545,418,424,404,255,367,198,567,319,581,432,460,343,427,454,583,517,486,511,503,545,449,415,421,492,206,402,309,394,582,463,248,510,525,465,498,453,320,373,349,573,499,348,409,296,413,463,481,410,456,480,459,515,496,621,662,689,616,535,373,266,340,250,303,466,349,286,249,410,476,444,425,578,517,1932,1930,1923,1990,1976,1959,1999,1701,1694,1693,1667,1670,1701,1666,1651,1672,1673,1677,1688,1703,1673,1652,1692,1664,1663,1713,1724,1684,1719,1615,1669,1685,1681,1694,1666,1685,1660,1636,1650,1667,1658,1686,1806,2048,2048,2048,1892,1754,1793,1766,1770,1738,1654,1716,1716,1710,1630,1634,1715,1718,1797,1708,1767,1633,1697,1630,1609,1675,1683,1621,1635,1659,1466,856,879,615,861,834,763,1094,1343,1331,1175,964,818,1106,1156,1262,1062,976,842,983,1254,1206,838,1272,700,421,1516,1752,1736,1702,1829,1852,1770,1623,1654,1618,1621,1492,1498,1523,1514,1525,1522,1524,1514,1509,1519,1503,1508,1522,1526,1491,1521,1530,1507,1498,1508,1517,1513,1525,1501,1507,1534,1505,1496,1552,1528,1521,1552,1520,1525,1526,1506,1504,1498,1498,1505,1495,1485,1462,1484,1497,1490,1496,1188,537,478,594,427,501,613,456,335,644,673,659,712,710,674,720,645,668,647,638,727,703,586,654,602,410,529,549,610,530,697,630,650,691,636,620,590,632,504,622,537,510,698,592,515,647,500,531,540,522,603,592,647,555,603,579,566,531,534,542,530,665,425,427,640,469,569,626,556,667,567,622,601,540,621,450,650,666,520,517,513,641,410,620,534,532,691,578,421,504,666,593,603,684,592,689,748,684,649,646,723,697,736,591,540,704,654,646,596,535,475,628,646,550,665,610,538,618,632,582,581,551,576,523,316,536,521,596,508,587,560,473,598,450,483,581,586,544,385,402,554,572,491,534,439,346,475,546,560,522,439,349,356,1690,2049,2053,2030,2039,2045,2050,2056,2057,2054,2048,2025,2041,1899,1718,1713,1679,1703,1700,1727,1698,1691,1711,1692,1719,1703,1701,1701,1701,1706,1737,1729,1702,1725,1727,1730,1748,1740,1761,1766,1764,1746,1734,1712,1694,1713,1690,1699,1677,1662,1710,1743,1676,1689,1698,1717,1695,1718,1717,1751,1756,1765,1736,1749,1705,1720,1718,1736,1720,1746,1732,1768,1739,1717,1745,1765,1753,1747,1718,1784,2048,2048,2048,2048,2048,2048,2048,1959,1698,1655,1736,1753,1679,1674,1723,1761,1711,1771,1807,1764,1848,1789,1837,1812,1793,1794,1814,1727,1787,1780,1611,1593,1717,1736,1669,1624,1649,1820,1668,1734,1704,1693,1727,1847,1833,1825,1818,1810,1814,1674,1710,1596,1654,1788,1833,1817,1784,1849,1858,1809,1767,1002,959,911,926,961,910,795,1017,992,1050,1277,1387,1284,1235,1318,1336,1323,1409,1323,1338,1196,1201,757,747,875,951,949,1067,1127,448,568,1454,1413,1731,1951,1712,1799,1884,1908,1854,1825,1842,1777,1868,1879,1557,1516,1579,1517,1510,1542,1523,1516,1502,1380,395,453,313,350,516,523,544,387,377,384,361,313,320,183,433,302,202,235,237,368,355,385,384,405,1468,2027,2041,1733,1699,1734,1667,1692,1697,1702,1698,1700,1691,1704,1831,2048,1914,1782,1821,1696,1819,1785,1830,1751,1764,1517,820,1477,1585,1576,1504,1589,1528,1431,1216,1515,1356,439,412,498,536,578,482,1056,1807,1675,1672,1913,1765,1779,877,834,1474,1577,1506,1498,1513,1066,287,498,359,464,283,93,427,429,474,98,361,544,507,1507,1831,1687,1668,1687,1675,1684,1798,1832,1752,1702,1705,1686,1081,1465,1780,1700,1543,1456,1508,1482,1493,1510,453,435,356,375,474,349,417,341,521,431,469,369,477,577,474,535,563,2002,1788,1678,1676,1666,1656,1666,1693,1820,1883,1741,1669,1698,1767,1265,629,1375,1297,982,1561,1624,2004,2051,2048,2054,2048,1706,1605,1538,1398,1291,1503,1559,1125,881,917,1521,1997,2016,1910,1915,1707,819,1160,1480,1147,1472,1451,1390,1326,1280,1046,667,1074,1115,1188,965,870,941,910,859,947,1003,1167,1056,1022,953,1145,920,1105,1037,1125,1115,1115,1025,931,937,1138,1109,1033,1186,670,550,841,914,1253,1099,814,1015,881,981,886,831,760,1258,1148,839,1068,978,806,958,1007,759,1046,1041,501,1618,2048,1135,1115,1077,926,974,1015,1141,988,1006,915,1046,1181,904,1106,1020,924,1021,813,891,725,782,841,1158,1315,1413,1564,1310,1625,1991,2048,2048,1899,1447,2029,2056,2048,2048,1959,1836,2048,1629,1952,2057,2048,2048,2048,2048,2057,2048,2052,2038,2030,2019,2025,2040,2039,1954,1806,1675,1988,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2055,1998,1937,1839,1759,1268,1861,1922,1893,1754,1941,2051,2054,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1951,1471,1124,2046,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2020,1537,2048,2048,2048,2051,1834,1554,1352,1159,975,686,512,2047,2048,2057,2048,2056,2048,2048,2048,2053,2057,1787,1431,853,2048,2048,2015,1916,1843,1680,1483,1133,879,512,244,471,1967,2048,2057,2048,2047,2048,2048,2048,2048,2048,2056,2048,2043,1963,1807,1592,1474,1382,2057,2048,2048,2048,2056,2048,2057,2048,2048,2048,2056,2054,2022,1885,1679,1428,1009,1281,1850,1895,2024,2048,2051,2048,1903,1658,1253,1074,2048,2045,2048,1753,2051,2048,2048,1726,415,98,185,33,978,2048,2048,2048,2057,2048,2049,2052,2048,1914,2048,1769,1924,2048,2048,2048,2048,2048,2048,2048,2048,2048,1906,1555,2002,1972,1628,1594,1802,1523,862,1052,1733,1984,2036,2057,2048,2057,2052,1965,1722,1057,55,1908,2056,2048,2048,2055,2048,2054,2057,2048,2033,2056,1936,1835,1913,1831,1612,2048,2056,2048,2048,2048,2057,2048,2048,1897,2057,2057,2057,2048,2048,2048,2048,2048,1586,2047,1977,1973,1255,1751,2057,2049,1964,1648,1979,2048,2048,2048,2057,2056,2048,2048,2048,2043,1603,1316,1856,1970,2012,2029,2056,2040,2038,2029,2051,2044,2041,2040,2023,1999,1971,1966,2018,2051,2054,2044,2050,2010,2035,2037,2044,2046,2050,2045,2009,1872,1742,1520,1329,1241,1208,1218,1131,1010,1049,1096,958,987,835,900,874,713,613,471,391,199,174,83,51,746,2051,2037,2052,2055,2010,1789,1756,1468,952,1369,2048,2048,2048,2048,1904,2048,2048,2048,1957,2048,2048,2048,2000,2057,2057,2048,2055,2051,2055,2048,2048,2036,2044,2056,2026,1915,1871,1762,1778,1765,1595,2056,2048,2049,2057,2054,2055,2055,1761,2054,2056,2048,2048,2048,2048,2053,1996,1969,2048,2008,1884,1459,2055,2048,1941,1452,2040,2048,2048,2048,2048,2048,2056,2056,2045,1967,1765,1712,1479,1396,1225,1115,1914,2048,2048,2057,2053,1977,1831,1522,672,493,1186,1598,1778,1935,1941,1938,1950,1996,1856,1679,1458,1272,913,498,753,1884,2043,1942,1256,889,2048,2048,2048,2048,2048,2057,2048,2048,1984,2002,2050,1987,1712,1330,845,2055,2029,1650,1357,2015,2048,2048,2050,2056,2056,2048,2040,2038,1986,1551,1967,2057,1422,600,1953,2048,2048,2048,2048,2048,2057,2001,1740,2041,2048,2048,2048,2048,2057,2057,1515,1119,1634,1962,2040,2056,2048,1934,1155,1916,1815,2054,2048,2048,2057,2031,1971,1631,1223,893,674,427,328,177,731,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1891,1334,2056,2052,2049,2053,2048,2057,1924,1962,2051,1485,1985,1197,657,1404,1705,1990,2054,2048,2048,2048,2048,2048,2048,2048,2048,2023,1858,1607,1461,1377,1184,1046,1041,868,698,877,994,815,945,1720,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1769,1212,697,690,1888,2048,2048,2048,1991,1586,2048,2048,2048,2053,2057,2048,2048,1962,1426,1515,1648,1263,1358,2048,1865,1077,650,1820,1947,2011,2049,2048,2057,2053,2047,1923,1616,1752,1855,1934,1972,2055,2055,2048,2048,2048,2056,2048,2050,1988,1762,1427,741,795,1744,2055,2048,2048,2048,2048,2048,2048,2048,2057,1975,1713,1423,1010,941,183,603,2048,2034,1957,1902,1794,1714,1807,2048,2017,1736,1601,1335,1714,1801,2038,2048,1928,2006,1069,2048,1668,1859,1953,2048,1651,1894,1310,1414,1133,1709,1962,2031,1997,2010,2021,1972,1911,2048,2053,2030,1624,944,1438,1973,2048,2048,2048,1854,1813,1201,824,1160,2056,2048,2048,2048,1445,370,1891,2048,2045,2048,2056,2057,2048,1945,2048,2056,1482,2052,2055,1777,2057,2048,1652,2021,2020,1458,1331,1958,1449,780,2053,2048,2056,2057,1241,122,152,1418,2051,2048,2048,2056,2048,2048,2054,1701,1931,1783,1462,808,147,1177,2000,2048,1951,2048,2048,2053,2048,2030,2048,1855,1993,1688,1924,1397,1887,1244,1604,1648,1671,1261,1293,1805,2044,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2050,1975,1943,1767,2034,1668,1972,2041,1873,1493,1909,1803,2056,2048,2048,2048,2048,2048,2048,2056,2048,2035,1958,1763,1590,1415,1141,878,1503,2048,2048,2048,2048,2048,1332,934,2048,2048,1974,1967,2048,1968,2022,2016,2026,2048,2057,2056,2039,2003,1673,1466,2028,2047,2048,1964,1915,2031,2048,2048,2056,2048,2048,2053,2041,1966,1757,1365,573,1413,2048,2048,2048,2057,2048,1941,2057,2048,2048,2048,1789,1395,2048,2048,2048,2048,2048,2048,2048,2048,1817,1243,2048,2048,2048,2048,2048,1999,1951,2048,1060,429,504,1352,1934,2048,2048,2048,2048,2048,2048,2057,2055,2048,2054,2022,1923,1785,1787,1747,1574,1408,1254,1246,1266,1046,816,548,538,528,460,464,435,376,443,455,451,524,546,253,367,837,1145,1209,1258,1117,1075,984,837,716,542,273,149,714,1915,2053,1677,1714,1915,1964,2048,2052,2017,2022,2048,2045,2055,2016,1868,1522,1912,2035,1599,1504,1990,1800,2030,2048,2005,1989,1912,2048,2048,2035,1870,2030,2048,2029,1918,1996,1980,1704,1411,1558,2052,2048,2033,2054,2048,1963,1682,1877,1961,2056,2008,2052,2048,2057,1924,1944,1879,1779,1833,1959,1950,1896,1998,1846,2022,1944,2048,2048,2048,2055,2002,1584,1325,1831,1137,950,1395,2055,2048,2040,1992,1944,1826,1779,1897,1759,1980,1892,1897,1957,1960,1948,2047,1855,1832,1945,1492,1469,1972,2017,2009,1868,1858,1865,1848,1773,1725,1522,1924,1675,1467,1483,1304,870,1253,2006,1952,1857,1819,1729,1594,1757,1650,1322,1460,1258,1476,1286,1221,1166,1066,1373,1132,1081,1255,1440,1170,1476,1599,1816,1793,1750,1967,1987,2050,1982,1998,1809,1720,1559,1411,795,1591,1790,2032,2048,2048,2048,1022,114,1463,2056,2048,1980,1457,2028,1111,2052,2048,1454,1698,2048,2048,2048,2048,1539,2054,1928,1472,1432,2048,2048,2048,2056,2057,2053,1940,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2049,2027,2051,2048,2048,2048,2048,1960,1949,2030,2055,2048,2050,2052,2055,2057,2048,2048,2048,2055,1608,1494,2056,2053,2050,2048,2048,2052,2054,1894,1937,1762,1568,1603,1436,1770,1783,1582,1428,1333,1109,828,230,1945,1787,1917,2047,2057,2051,1892,1439,1320,2048,2048,1754,2052,2048,2048,2007,1494,1998,2057,1884,1608,1466,1836,1824,1174,809,631,1469,1419,1437,1331,1191,1436,638,601,804,396,305,463,469,327,950,940,332,383,442,505,756,517,517,629,349,316,668,691,758,687,564,1110,806,592,989,798,576,960,526,596,625,406,534,650,373,697,377,319,772,601,738,626,1160,824,1153,1027,964,655,597,542,390,586,699,723,431,184,490,406,629,424,363,516,600,376,1072,1398,272,375,430,333,542,609,630,516,466,685,639,544,355,495,478,1120,1000,984,828,332,577,358,508,421,438,274,620,188,423,594,229,305,230,525,633,313,488,522,285,825,824,513,241,346,320,463,268,220,361,508,918,537,430,446,626,525,474,433,487,686,325,331,655,566,832,857,592,316,299,309,270,557,344,364,220,185,465,583,749,655,1073,1420,1007,1068,569,619,216,462,617,961,1336,900,547,929,576,573,626,678,641,778,783,532,608,563,546,679,928,795,1185,1190,1415,731,638,552,633,994,1209,1180,1191,1196,1214,742,421,554,1162,1154,806,492,630,1251,410,270,282,205,318,251,177,136,231,409,396,139,135,133,369,558,616,341,605,595,421,913,332,618,172,438,452,351,305,473,651,443,567,492,274,291,419,411,299,208,248,191,282,264,189,499,299,271,176,290,187,233,531,494,654,282,647,1048,294,512,426,514,637,588,329,581,851,1035,1040,459,564,347,378,434,323,437,413,312,257,237,271,143,879,1004,721,680,832,428,699,432,285,508,520,538,343,163,394,301,172,347,304,383,494,171,236,332,159,172,287,166,372,453,305,276,396,307,322,515,321,352,502,737,825,1287,698,511,448,641,477,465,609,281,483,896,1045,581,315,1212,1037,1001,1105,479,620,366,778,569,630,523,309,263,315,315,312,1164,1019,484,354,421,526,354,435,524,763,680,689,803,372,548,727,852,526,922,893,869,849,752,826,1702,1886,1366,995,988,991,1702,1886,1886,990,988,989,1707,1161,1217,1017,1339,471,895,591,1187,394,415,868,782,733,684,835,713,719,732,652,661,619,618,952,312,122,176,540,456,167,122,279,409,329,476,470,828,1014,737,309,534,447,468,343,547,452,398,295,407,593,911,1280,1503,495,578,609,499,313,429,481,567,439,417,430,534,437,449,315,407,322,383,216,302,214,489,332,320,254,183,293,518,292,243,384,159,717,191,435,152,599,574,619,286,140,308,460,366,431,508,293,648,782,456,276,605,736,243,620,911,617,207,69,257,883,845,448,599,764,518,612,299,628,494,401,502,468,477,588,299,473,679,474,552,728,832,509,681,743,348,525,477,459,770,778,747,628,432,616,624,508,754,651,843,307,619,561,830,269,260,516,209,428,187,187,224,397,159,388,470,128,322,143,169,274,126,137,736,531,454,458,419,436,235,223,388,392,265,359,912,322,406,396,452,357,617,894,878,983,753,768,624,204,851,924,367,994,1104,315,809,762,1179,1166,369,376,434,306,1186,1335,1082,1257,1372,1444,1490,1437,1512,1527,1514,1523,1509,1460,1515,1510,1581,1516,1536,1488,1481,1582,1430,1368,1311,1249,1225,1324,1346,1260,1194,1150,1055,1120,1573,1548,1864,1719,1735,1770,1655,1711,1704,1717,1719,1734,1728,1708,1746,1765,1771,1722,1715,1554,1689,1666,1666,1692,1693,1713,1707,1725,1671,1643,1651,1679,1616,1567,1674,1741,1747,1623,1695,1656,1622,1696,1741,1715,1759,1832,1858,1811,1818,1807,1742,1710,1728,1758,1776,1865,1812,1676,1714,1810,1739,1716,1807,1787,1760,1679,1713,1645,1513,1884,1602,1666,1588,1587,1642,1623,1670,1722,1700,1667,1698,1736,1707,1731,1698,1650,1703,1753,1700,1705,1691,1647,1669,1689,1641,1657,1584,1613,1578,1528,1501,1492,1879,1623,1576,1531,1362,1445,1541,1460,1494,1209,1269,1458,1462,1283,1341,1401,1342,1327,1443,1584,1533,1558,1476,1376,1430,1513,1362,1343,1545,1577,1442,1531,1607,1481,1749,1460,1454,1362,1475,1524,1442,1521,1390,1542,1374,1316,1257,1326,213,219,283,216,244,738,1272,1508,1254,868,1311,1249,933,1394,1511,1084,1511,1689,1301,1055,1479,1093,1723,1103,1625,1542,1652,1503,1727,1502,1287,1559,1268,1668,1396,1371,1773,1261,1677,1574,1391,1553,1260,1523,1457,1526,1765,1229,1297,1651,1702,1308,1697,1405,1516,1512,1597,1497,1366,1500,1544,1425,1760,1323,1628,1502,1309,1463,1550,1491,1417,1280,1690,1449,1740,1548,1426,1682,1022,1431,1513,1706,1180,1504,1580,1656,1432,1590,1408,1428,1563,1527,1360,1318,1429,1483,1356,1314,1543,1173,1399,1350,1584,1556,1684,1684,1365,1364,1438,1470,1307,1825,1350,1589,1441,1656,1152,1798,1639,1401,1826,1717,1803,1290,1614,1573,1322,1906,1484,1579,1617,1578,1696,1828,1433,1668,1748,1770,1560,1696,1626,1365,1691,1444,1578,1679,1858,1310,1299,1513,1694,1675,1769,1321,1793,1724,1386,1646,1555,2018,2054,2012,2022,2044,2049,1996,2055,2019,2021,2013,2036,2023,2037,2023,2048,2053,2039,2047,1993,1986,2004,2040,2024,2037,2049,2048,2028,2053,2050,2016,2017,2029,2045,2050,2032,2049,2054,2035,2018,2021,1834,1986,2036,2042,2050,2032,2029,2023,2040,2017,1987,1995,1981,1981,2009,1993,2022,2042,2026,2042,2030,1989,1967,1991,2002,2005,1987,2036,2017,2031,2051,2028,1988,1964,2000,2021,1984,2006,2051,2049,2056,2023,2014,1977,1988,2034,2017,2033,2032,2042,2039,2045,2040,2044,2042,2047,2055,2044,2040,2042,1995,1959,1980,2010,1964,1937,2006,1987,1998,1943,1989,1958,1978,1987,1999,1968,1924,1975,1998,1958,1951,1990,1991,1975,1992,1950,1982,1973,1988,2001,1955,1963,2005,1975,2003,1956,1964,1991,2005,1981,2000,1977,1989,1990,1987,1972,1911,1972,1987,1986,1984,1982,1975,1969,1981,1992,1970,1962,2018,2000,1999,1987,2005,1993,2016,1979,1985,2012,1971,1936,1827,1783,1813,1759,1784,1913,1926,1802,1732,1900,1746,1915,1733,1781,1841,1937,1925,1903,1800,1742,1910,1812,1840,1736,1638,1700,1721,1537,1756,1936,1921,1784,1777,2024,2048,2027,1999,1929,1909,1801,1925,1872,1862,1935,1715,1737,1682,1879,1874,1912,1777,1818,1842,1747,1730,1709,1901,1837,1861,1836,1812,1718,1803,1642,1855,1811,1883,1837,1880,1710,1991,1725,1791,1595,1779,1873,1846,1711,1968,1805,1832,1831,1651,1777,1687,1852,1888,1842,1756,1923,1729,1831,1582,1776,1653,1966,1906,1969,1900,1820,1928,1882,1840,1703,1961,1885,2001,1940,1956,1992,1883,1687,1956,1779,1846,1657,1834,1832,1826,1961,1810,1853,1921,1825,1861,1803,1912,1814,1884,1778,1946,1858,1729,1907,1763,1901,1766,1769,1877,1812,1720,1751,1788,1821,1736,1911,1904,1871,1934,1901,1937,1939,1951,1959,1904,1950,1883,1947,1943,1940,1936,1937,1894,1913,2027,1878,1440,1398,1390,1420,1434,1487,1582,1402,1577,1501,1515,1571,1744,1707,1476,1698,1803,1978,1971,1865,1941,1699,1866,1825,1747,1968,1948,1979,1798,2018,1713,1964,1729,1789,1920,1799,1981,1978,1842,1984,1676,1904,1827,1703,1952,1907,1986,1722,1973,1794,1820,1756,1812,1664,1937,1946,1964,1800,2039,1823,1859,1801,1853,1757,1863,1935,1924,1815,2010,1743,1959,1777,1811,1932,1910,1995,1973,1887,1982,1699,1886,1865,1779,1990,1961,1944,1941,1916,1966,1959,1935,1856,1928,1901,1673,1683,1961,2026,1955,1966,1996,2014,1992,2026,2016,2013,1996,1982,2010,1947,1988,1993,1981,2000,1991,2013,1977,1956,1999,1975,2006,1993,1990,2006,2026,2020,1994,2001,2018,2010,2025,2009,2015,2030,1981,1998,2014,2015,2018,2021,2015,2000,2008,1980,2031,2033,2012,2002,2008,1988,2013,1980,1999,1990,2024,2001,2017,1998,1994,2002,2052,2050,2001,1970,1871,1730,1781,1699,1721,1685,1672,1779,1698,1538,1718,1738,1709,1633,1806,1682,1655,1734,1750,1539,1645,1805,1613,1673,1768,1788,1752,1658,1770,1822,1755,1685,1734,1756,1744,1739,1723,1740,1998,1917,1957,2007,1988,1954,1915,1931,1952,1985,1977,1971,2007,1980,1972,1986,1995,1983,1961,1985,1953,2009,1998,1986,1983,1962,2007,1948,1962,1991,1994,2000,2003,1969,1982,1960,1986,1958,1948,1954,1905,1901,1857,1964,1874,1817,1896,1819,1846,1911,1848,1910,1843,1863,1929,1866,1888,1914,1918,1998,1987,1997,1910,1971,1905,1896,1890,1943,1931,1972,1876,1943,1968,1944,1959,1958,1891,1959,1741,1929,1890,2055,2039,2043,1992,2012,2011,2018,2010,2043,2020,2044,2028,2056,2048,2023,1987,1991,1966,2029,2043,2057,2055,2018,2054,2021,1996,2019,2055,2025,2044,2039,2054,2048,2042,2030,1980,1940,2023,2024,2020,2036,2034,2048,1996,1982,2024,1990,1953,1982,2016,2051,2018,2027,2015,1984,2004,1999,1974,1970,1994,2018,2029,2035,2025,2017,1993,2018,1988,1992,1981,1994,1995,2033,2035,2031,2045,2025,2056,2002,2010,2001,2000,1982,2031,2022,2053,2048,2047,2024,2039,2031,2050,2053,2042,2045,2051,1994,1945,1997,2003,1984,1958,1976,1997,2009,1992,1995,1961,1983,1940,1965,1955,1980,1980,2004,1975,1952,1959,1862,1911,1966,1969,1967,2013,1988,2008,1983,1993,1873,1993,1853,1947,1950,1972,1783,1941,2046,2032,2023,2039,2039,1909,1816,1962,1985,1982,1875,1903,1907,1977,1969,1896,1920,1931,1962,1967,1896,1833,1944,2006,1980,1846,1901,1935,1963,1927,1851,1883,1944,1932,1982,1883,1847,1936,1980,1939,1887,1911,1982,1912,1843,1868,1964,1907,1871,1824,1743,1926,1943,1894,1903,1908,1833,1875,1906,1874,1865,1895,1880,1834,1871,1824,1815,2003,1936,1923,1936,1911,1841,1850,1868,1854,1797,2006,2003,2013,2040,2000,2009,1770,1833,1957,1913,2048,2028,2017,1920,1984,2005,2004,1995,1980,1954,1967,2044,1966,2001,1700,1985,2004,2032,1971,1790,2014,1997,2056,1960,1848,1992,1999,2026,2016,1983,1790,1962,2010,2024,1993,1992,2022,2031,2007,2007,2009,1902,2017,1998,1975,1976,2022,2023,2040,2024,2039,2010,1882,1982,1985,1982,1977,2010,1983,1937,1963,1986,1943,1997,1877,1991,2006,1948,1945,1980,2006,1954,1839,1944,1949,1979,1855,1890,2004,1986,2004,2031,1954,1909,1913,1945,1921,1910,1927,1978,1980,1970,2000,2022,1974,1990,1984,1923,1985,1940,1968,2000,2004,1967,2022,1976,1994,1946,1964,1957,1948,1877,1981,1957,1960,1961,2034,1952,1989,2020,1970,2009,2006,1955,1967,1995,1940,1984,1993,2004,1962,1900,1961,1998,1937,1951,1967,1961,1979,1957,1947,1927,1932,1964,1849,1865,1962,1961,1909,1885,1947,1905,1976,1945,1912,1970,1997,1928,1975,2014,1900,2005,1900,2012,1974,1950,2002,2024,2001,2054,2043,1867,2013,2008,1949,2024,2033,2054,2040,2042,1956,2015,2022,1966,2023,2036,2026,2019,2034,1985,2037,2017,2004,2027,2038,2040,2043,2041,1950,2012,2021,1975,2045,2026,2053,2048,2056,1976,2014,2018,1991,2044,2036,2047,2035,2040,1961,1990,1946,2016,1822,1988,1968,1981,1997,1997,2032,2016,1997,1990,1809,1999,1991,1975,2031,1976,1967,2030,1976,1975,2028,1938,1918,1913,1809,1716,1570,1560,1421,1582,1431,1413,1380,1485,1336,1082,1643,1198,1388,1219,1611,1079,1402,1271,898,1430,1401,1364,1117,1298,1588,838,1181,1417,1141,1437,1286,1240,1356,1164,1585,1154,1389,1496,1384,1550,1347,1528,1475,1528,1636,1223,1464,1484,1358,1347,1474,1292,1342,1131,1629,1208,1452,1273,863,1647,1416,1300,1174,1241,1604,864,1171,1458,1230,1573,1059,1299,1260,1287,1520,1332,1465,1511,1223,1660,1409,1523,1545,1375,1596,1278,1510,1523,1223,1601,1217,1379,1296,1277,1497,1287,1453,1232,819,1644,1384,1248,1186,1238,1589,829,1210,1430,1210,1580,988,1326,1281,1275,1514,1353,1469,1486,1212,1662,1406,1515,1563,1321,1563,1345,1497,1435,1154,1618,1207,1450,1231,1462,1347,1218,1436,1164,942,1556,1448,1119,1262,1405,1304,953,1276,1348,1057,1549,1156,1395,1161,1580,1156,1350,1477,1375,1496,1448,1551,1460,1554,1506,1316,1442,1478,1465,1181,1591,1258,1386,1100,1614,1204,1518,1310,869,1561,1317,1374,1117,1290,1643,936,1086,1357,1326,1403,1290,1249,1255,1145,1671,1232,1518,1510,1260,1585,1362,1515,1535,1396,1657,1259,1463,1510,1326,1579,1248,1362,1341,1193,1552,1197,1437,1203,868,1589,1376,1288,1197,1303,1571,809,1267,1431,1195,1606,1026,1369,1267,1312,1557,1316,1528,1510,1235,1613,1393,1555,1636,1367,1600,1360,1571,1544,1176,1522,1298,1328,1292,1165,1504,1208,1450,1239,833,1618,1345,1298,1185,1242,1602,799,1245,1423,1138,1565,1026,1326,1284,1351,1452,1182,1505,1548,1359,1637,1416,1577,1583,1427,1625,1343,1580,1530,1227,1382,1483,1299,1311,1138,1607,1175,1427,1288,866,1506,1370,1378,1127,1294,1614,870,1127,1399,1211,1270,1341,1199,1405,1235,1683,1148,1428,1571,1446,1453,1516,1534,1428,1556,1538,1461,1386,1518,1406,1207,1680,1183,1429,1169,1595,1194,1425,1369,897,1383,1330,1397,1091,1339,1324,1282,998,1316,1409,1216,1565,1110,1403,1142,1656,1219,1472,1429,1375,1498,1488,1601,1475,1576,1586,1374,1470,1553,1369,1220,1673,1272,1445,1179,1588,1191,1448,1382,944,1313,1348,1423,1098,1335,1165,1538,894,1312,1484,1312,1634,1075,1402,1325,1545,1346,1367,1514,1509,1225,1726,1620,1575,1637,1367,1728,1222,1223,1277,1384,1293,1845,1488,1460,1231,1294,1559,1490,1505,1794,1353,1335,1287,1562,1419,1479,1845,1447,1442,1301,1305,1478,1379,1392,1824,1434,1570,1359,1251,1475,1207,1329,1449,1702,1111,1232,1269,1516,1576,1319,1415,1444,1494,1434,1696,1711,1697,1894,1565,1967,1891,1817,1749,1838,1815,1789,1912,947,1008,1745,1703,1801,1674,1716,1648,1489,759,1256,1996,1885,1759,1520,1168,1548,1614,1831,1499,1814,1748,1930,1403,1836,1695,1792,1897,1901,1891,1692,1517,1919,1513,1952,1697,1929,1687,1837,1866,1904,1727,1828,1839,1840,1896,1889,1674,1687,1625,1550,1570,1620,1487,1730,1508,1589,1606,1462,1599,1435,1600,1505,1420,1438,1842,1876,1937,1729,1867,1836,1851,1779,1925,1896,1731,1903,1856,1843,1868,2001,1918,1949,1905,1978,1951,1972,1864,1949,1966,1953,1883,1906,1786,1913,1747,2056,2047,2042,1989,1959,1884,1706,1969,1930,1906,1987,1931,1973,1947,1935,1952,1919,1948,1924,1884,1971,1959,1931,1898,1920,1920,1913,1867,1899,1792,1880,1830,1787,1746,1736,1688,1680,1326,1742,1854,1545,1860,1510,1726,1662,1571,1753,1572,1330,1163,1123,1244,1438,1744,1698,1413,1127,1593,1715,1412,1127,1913,1884,1778,1717,1805,1777,1635,1906,1819,1696,1673,1683,1718,1549,1796,1736,1477,1656,1430,1565,1581,1357,1266,1634,1624,1116,996,1626,1526,1565,1911,2001,1967,1983,1975,1929,1847,1562,1561,1874,2006,1825,1884,1897,1790,1734,1764,1757,1644,1864,1857,1771,1824,1702,1802,1596,1511,1696,1553,1678,1762,1785,1889,1451,1862,1475,1646,1375,1789,1917,1791,1739,1360,1370,1726,1693,1639,1476,1589,1717,1616,1517,1662,1521,1685,1616,1269,1600,1471,1619,1687,1255,1634,1445,1694,1653,1382,1486,1593,1578,1169,1244,1379,1169,1461,1235,1566,1128,1364,1435,1285,1522,1249,1304,1526,1475,1505,1658,1779,1266,1668,1841,1915,1822,1864,1883,1956,1471,1638,1255,1623,1618,2038,2030,1881,1520,1827,1694,1809,1838,1527,1821,1793,1781,1686,1789,1441,1590,1532,1246,1794,1878,1671,1567,1885,1276,1852,1842,1863,1492,1617,1709,1669,1696,1732,2014,1473,1523,1788,1677,1803,1628,1737,1503,526,616,478,805,569,603,408,622,1358,1993,1963,1951,1932,1966,1961,1951,1932,1836,1634,1612,1655,1814,1584,1604,1552,1592,1786,1550,1777,1396,1504,1461,1506,1395,1392,1482,1559,1318,1251,1282,1500,1437,1509,1432,1337,1624,1477,1574,1455,1440,1368,1422,1424,1430,1357,1404,1764,1746,1806,1863,1897,1886,1833,1765,1758,1773,1663,1751,1806,1838,1769,1724,1689,1485,829,810,848,1068,1701,1693,1715,1616,1687,1581,1572,1659,1677,1711,1655,1741,1662,1751,1790,1852,1789,1674,1673,1441,1796,1441,1800,1549,1915,1629,1865,1794,1862,1718,1849,1794,1878,1220,1056,1038,1033,1074,1081,1069,1084,1508,1553,1563,1510,1593,1525,1534,1540,1563,1547,1485,1634,1598,1511,1003,1028,1070,1154,1451,1417,1777,1801,1575,1148,1270,1501,1319,1102,1485,1717,1217,1567,1620,1562,1570,1633,1600,1354,1225,863,1109,660,889,747,751,1477,1371,1237,513,852,525,538,763,563,891,741,935,536,690,681,684,855,488,846,698,923,507,530,920,711,851,445,806,601,791,263,279,528,241,682,249,592,259,221,548,176,543,178,521,40,402,261,227,558,220,1158,1435,1507,1202,1223,1227,1243,1161,946,990,970,971,963,990,1009,1395,1386,1399,1409,1490,1517,1401,1377,1390,1603,1470,1512,1582,1614,1573,1514,1493,1611,1388,1413,1408,1401,1403,1399,1454,1425,1405,1384,1410,1373,1282,941,936,932,1096,939,957,946,906,1077,904,986,914,1330,1404,1448,1379,1346,939,916,932,1058,1708,1567,1601,1592,1467,1550,1586,1599,1733,1375,1309,1346,1296,1288,1300,1370,1340,1608,1555,1534,1274,1348,1414,1258,1489,1604,1670,1546,1566,1592,1790,1667,1758,1580,1466,1223,1460,1437,1407,1251,1181,1487,1460,1530,1470,1392,1605,1426,1715,1672,1585,1641,1540,1606,1570,1601,1689,1636,1652,1584,1649,1427,1621,1559,1558,1654,1667,1592,1615,1557,1539,1595,1609,1543,1774,1668,1594,1684,1435,1630,1575,1582,1698,1592,1588,1538,1596,1842,1514,1561,1535,1802,1630,1600,1568,1599,1809,1568,1717,1591,1554,933,939,962,1084,1525,1527,1569,1495,1526,1302,1291,1332,1367,1128,1201,1251,1419,1160,973,984,1110,1351,1163,1105,1076,1188,1067,943,889,1499,1809,1537,1872,1586,1509,1418,1427,1304,1413,1415,1427,1357,1648,1519,1516,1522,1535,1509,1501,1546,1527,1596,1388,1393,1383,1371,1397,1342,1366,1659,1530,1505,1534,1585,1549,1508,1521,1538,1758,1607,1609,1647,1630,1586,1600,1662,1794,1493,1455,1422,1400,1467,1445,1402,1417,1831,1762,1736,1678,1747,1748,1711,1699,1860,1789,1733,1687,1657,1742,1668,1688,1667,1608,1023,1245,1085,1107,1114,1089,1282,1116,1071,928,913,682,699,707,1289,1729,1733,1729,1686,1747,1683,1740,1661,1870,1742,1702,1639,1707,1673,1730,1723,1847,1799,1752,1799,1724,1789,1760,1800,1719,1883,1712,1714,1634,1664,1670,1721,1670,1783,1399,1517,1383,1481,1285,991,991,1024,1665,1822,1805,1816,1670,1882,1768,1852,1810,1578,1185,1199,1429,1663,1037,1034,1070,1735,1678,1608,1599,1562,1644,1626,1593,1650,1619,1474,1445,1388,1396,1466,1400,1465,1462,1696,1472,1623,1509,1460,1449,1450,1447,1675,1604,1616,1589,1556,1637,1613,1604,1761,1513,1466,1452,1484,1425,1438,1428,1452,1626,1838,1830,1838,1685,1858,1784,1845,1826,1709,1644,1614,1654,1540,1663,1600,1615,1664,1516,1501,1456,1373,1578,1479,1455,1411,1838,1814,1836,1872,1685,1865,1803,1865,1732,1683,1641,1599,1660,1615,1633,1592,1703,1569,1477,1430,1498,1373,1470,1437,1431,1587,1818,1799,1849,1881,1685,1826,1815,1858,1557,707,1804,857,698,1168,681,791,1071,689,1165,1383,649,723,879,1393,1040,1260,1404,1233,701,1162,1326,1139,1322,1121,1709,1211,1249,1009,1353,1690,1546,1760,1647,1757,1539,1652,1599,1659,1023,904,1423,1528,1581,1029,1009,1009,993,1379,1097,1074,1089,1303,1645,2029,2037,2003,2020,2012,2016,1989,2006,2035,2033,2002,2004,2010,2015,2003,1970,2028,2021,2025,2004,2011,2010,2010,1976,2011,2032,2053,2016,2015,2019,2021,2008,1951,2031,1995,1898,1917,1888,1895,1928,1845,1854,1887,1882,1882,1900,1835,1892,1806,1861,1875,1862,1662,1676,1675,1678,1670,1643,1606,1783,1657,1652,1667,1630,1650,1656,1642,1575,1681,1435,1466,1435,1413,1435,1417,1366,1519,1557,1432,1453,1636,1376,1520,1451,1701,1385,1481,1515,1628,1471,1457,1549,1569,1496,1288,1566,1344,1960,1768,1468,1641,1626,1543,1557,1551,1716,1571,1560,1596,1652,1765,1686,1582,1546,1672,1544,1583,1540,1555,1550,1561,1523,1541,1563,1472,1684,1596,1548,1631,1721,1587,1664,1741,1801,1502,1554,1962,1888,1699,1694,1835,1966,1927,1934,1973,1932,1957,1918,1936,1815,1839,1875,1917,1956,1854,1861,1824,1818,1774,1779,1765,1951,1980,1956,1958,1908,1924,1890,1911,1947,2013,1875,1906,1852,1815,1817,1828,1777,1941,1989,1994,1973,1972,1943,1923,1912,1932,1974,1789,1772,1743,1739,1759,1755,1721,1804,1897,1793,1811,1833,1763,1809,1803,1791,1850,1484,1453,1420,1444,1408,1442,1435,1436,1986,1956,1926,2041,1933,1931,1884,1898,1899,1918,1895,1982,1931,1941,1926,1876,1903,1935,1890,1939,1844,1507,1530,1612,1602,1588,1595,1504,1671,1885,1808,1788,1745,1782,1737,1738,1719,1723,1322,1305,1303,1361,1282,1342,1368,1391,1720,1660,1646,1681,1673,1632,1693,1716,1781,1492,1469,1522,1578,1538,1512,1480,1452,1691,1644,1505,1691,1677,1525,1674,1397,1365,1340,1308,1218,1274,1172,1319,1780,1889,1860,1884,1904,1875,1865,1874,1925,1949,1918,1865,1872,1881,1886,1887,1856,1866,1435,1452,1361,1401,1490,1464,1474,1463,1816,1666,1690,1764,1650,1617,1554,1542,1444,1527,1575,1608,1632,1733,1721,1710,1659,1672,1452,1505,1474,1449,1324,1407,1413,1632,1450,1522,1488,1554,1390,1514,1514,1470,1687,1482,1522,1486,1093,1481,1538,1520,1611,1947,1942,1948,1591,1412,1427,1426,957,1410,1379,1411,1578,1202,1174,1084,1099,1143,1089,1159,1187,1572,1429,1468,1999,1883,1903,1919,1897,1896,1910,1922,1681,1608,1477,1508,1461,1269,964,860,844,890,862,961,761,859,966,957,770,918,919,1030,918,1135,1314,1220,1339,1307,667,397,643,620,321,255,385,844,1334,751,972,902,1107,1117,950,1366,578,221,441,327,354,1416,1437,1482,1774,1827,1744,1822,1808,1812,1783,1734,1774,1711,1641,1632,1567,1614,1622,1654,1558,1682,1355,1329,1343,1297,1642,1682,1679,1666,1676,1655,1624,1700,1679,1671,1681,1664,1098,1563,1838,1866,1763,1798,1821,1871,1786,1793,1585,1453,1464,1450,1706,1877,1843,1875,1835,1871,1861,1853,1889,1840,1282,1708,1163,1118,1230,1102,1288,2021,1998,1954,1931,1965,1943,1903,1892,1893,1965,1945,1939,1929,1903,1892,1932,2019,1689,1668,1768,1820,1803,1782,1650,1615,1950,2047,2053,2045,2054,2041,2052,2041,2053,2056,2051,2039,2036,2045,2040,2035,2048,2034,1892,1919,1841,1854,1824,1851,1820,1882,1953,1902,1873,1845,1861,1849,1847,1841,1975,1834,1765,769,830,777,720,730,502,792,912,794,393,682,782,856,679,397,739,855,835,507,502,774,837,920,503,525,1244,1050,1130,547,602,1194,1070,1088,378,839,1161,1027,947,393,1054,1136,1089,735,1380,1268,1590,1297,1746,1440,1015,1145,1156,1125,1182,1067,1067,1108,1158,1130,1174,1161,1094,1073,1032,1172,1475,1123,1111,1185,1027,1087,1096,1034,1046,1002,869,1014,1064,856,882,787,871,1362,426,546,510,552,541,455,566,563,450,510,473,509,501,540,561,520,1411,1469,1495,1502,1558,1484,1508,1512,1512,1123,969,996,1445,1571,1392,1382,1326,1330,1480,1745,1648,1657,1664,1610,1634,1664,1638,1665,1854,1697,1674,1752,1690,1704,1719,1692,1737,1004,1140,1245,1334,1305,1301,1305,1105,1370,1418,1397,1426,1553,1516,1562,1552,1692,1351,971,1136,1145,1135,1110,1096,1094,1115,1170,1117,1215,1212,1063,1037,1072,1274,1382,1156,1078,1161,1043,1064,1136,1061,977,1013,906,1049,1045,861,826,808,833,1326,421,565,508,556,559,472,566,550,463,509,473,502,510,532,573,505,1714,1810,1794,1800,1795,1795,1731,1787,1397,1403,1381,1401,1742,1813,1824,1891,1870,1867,1844,1884,1862,1494,1560,1595,1494,1461,1691,1464,1691,1585,1765,1777,1853,1694,1511,1189,1123,1146,1431,1214,1805,1744,1778,1832,1750,1832,1746,1751,1803,1267,1234,1241,1111,1407,1285,1576,1856,1755,1899,1742,1792,1823,1757,1851,1746,1762,1791,1667,1644,1723,1771,1767,1764,1597,1667,1253,1726,1618,1607,1597,1570,1547,1579,1636,1742,1513,1771,1761,1429,1474,1763,1777,1497,1682,994,1151,1140,1129,1195,1100,1084,1114,1139,1145,1165,1164,1145,1124,1032,1068,1189,1116,1193,1140,631,824,1200,1096,1008,1020,1076,1217,1158,785,783,1145,1156,1082,977,993,1260,1095,918,648,1094,1231,1119,993,928,1229,1131,943,528,1163,1236,1190,967,826,1197,1105,1002,435,1189,1183,1165,1054,1220,1119,1099,1178,1034,1055,1143,1057,1022,1004,914,1042,1079,836,791,845,1086,875,1092,1240,1136,414,1103,1193,1164,892,1197,1135,1245,1195,1291,1126,1120,1182,1174,1301,1154,1140,1236,1122,1300,1155,1154,1222,1168,1323,1103,1025,1015,1124,1352,1104,974,1060,1291,1220,1066,1017,1093,1269,1253,1084,938,1127,1621,452,535,504,1376,1576,1790,1843,1867,1811,1558,1301,482,513,536,529,555,1104,1530,1444,1633,1526,1448,1638,1531,1445,1636,1536,1441,1761,1773,1836,1726,1853,1749,1785,1889,1756,1731,1884,1732,1845,1790,1754,1897,1709,1830,1758,1917,1736,1850,1758,1739,1908,1669,1818,1896,1739,1766,1820,1827,1719,1855,1819,1727,1896,1721,1755,1890,1800,1760,1802,1755,1985,1830,1828,1674,1916,1760,1833,1786,1748,1904,1707,1835,1845,1793,1749,1818,1850,1708,1785,1877,1708,1910,1735,1770,1888,1733,1732,1815,1878,1755,1809,1824,1678,1901,1048,1246,1110,1304,1299,1126,1268,1062,683,746,834,898,481,507,791,823,920,575,342,815,866,846,528,446,777,906,787,1053,1093,1052,1137,1176,1110,1180,1046,1142,1069,1144,1083,1195,1168,1094,1060,1116,1437,1524,1483,1575,1098,1083,1181,1069,1073,1101,1049,1034,1028,898,1025,1054,865,892,773,889,1470,1420,1522,1150,425,590,503,534,554,498,528,527,481,525,501,488,493,518,576,519,1706,1648,1685,1578,1721,1656,1624,1660,1722,1679,1777,1646,1634,1599,1687,1589,908,730,1328,1430,1328,1407,1313,1362,1425,1338,1217,1059,1221,1077,1235,1124,1229,1099,1239,1391,1391,1449,1402,1469,1372,1436,1417,1574,1561,1469,1338,1461,1434,1432,1331,1432,1139,1119,1268,1113,1315,1169,1320,1186,1290,1135,1240,1243,1338,1115,1214,1104,1155,1465,1524,1495,1517,1705,1476,1571,1463,1458,1398,1448,1255,1193,1076,1211,1478,1366,980,1416,981,948,1264,1328,2023,2032,2017,2013,2012,1994,2000,2003,2035,2030,1994,2026,2016,2020,2011,1957,1940,1362,1336,1640,1450,1122,1121,1121,1121,1120,1120,1347,1577,1481,1544,1595,1796,1698,1726,1744,1833,1566,1492,1514,1611,1596,1557,1536,1616,245,114,1804,2022,1944,1922,1908,1884,1816,1882,1897,1882,1925,1916,1908,1997,1895,1862,1907,1956,1878,1809,1972,1938,1889,1891,1950,1915,1742,1782,1837,1721,1915,1900,1886,1846,1913,1913,1872,1885,1911,1940,1830,1832,1860,1920,1823,1484,1683,1686,1670,1649,1718,1679,1668,1640,1737,1613,1662,1672,1748,1685,1693,1635,1733,1739,1466,1567,1614,1600,1580,1476,1507,1581,1614,1618,1656,1469,1557,1563,1540,1580,1868,1520,1494,1655,1619,1955,1782,1760,1812,1868,1849,1845,1854,1852,1305,1298,1349,1367,1317,1338,1377,1249,1652,1444,1452,1446,1508,1462,1450,1454,1596,1453,1459,1439,1459,1507,1470,1443,1421,1624,1446,1454,1418,1514,1458,1458,1429,1588,1476,1439,1410,1437,1492,1453,1431,1410,1581,1412,1388,1440,1463,1472,1410,1430,1477,1535,1381,1369,1474,1478,1450,1380,1415,1594,1395,1396,1413,1449,1478,1429,1391,1420,1597,1392,1438,1483,1477,1488,1471,1396,1627,1455,1435,1443,1479,1487,1476,1439,1376,1580,1353,1280,1355,1393,1345,1324,1300,1540,1346,1321,1323,1382,1346,1378,1296,1287,1584,1333,1265,1344,1349,1297,1284,1293,1391,1527,1473,1440,1494,1480,1514,1452,1392,1645,1419,1399,1454,1483,1485,1438,1400,1433,1600,1363,1392,1466,1452,1455,1387,1383,1629,1410,1387,1374,1490,1492,1450,1419,1398,1622,1359,1381,1423,1489,1452,1410,1436,1596,1470,1440,1423,1437,1505,1462,1452,1389,1800,1689,1835,1693,1908,1619,1730,1786,1819,1823,1791,1695,1665,1796,1763,1735,1756,1860,1783,1890,1849,1885,1858,1893,1859,1844,1933,1816,1776,1791,1813,1785,1780,1791,1955,1739,1737,1681,1726,1713,1698,1676,1748,1842,1743,1728,1702,1719,1707,1685,1682,1862,1886,1851,1824,1814,1787,1867,1794,1809,1928,1706,1778,1725,1743,1723,1760,1774,1855,1719,1950,1828,1833,1840,1795,1761,1787,1773,1862,1677,1761,1699,1551,1778,1731,1642,1772,1834,1709,1788,1705,1619,1680,1628,1813,1925,1622,1629,1656,1633,1686,1674,1692,1649,1752,1676,1620,1633,1708,1701,1698,1666,1775,1798,1796,1750,1787,1821,1786,1820,1773,1843,1797,1724,1738,1765,1807,1769,1777,1778,1736,1710,1709,1748,1733,1736,1693,1723,1786,1690,1693,1744,1668,1678,1692,1736,1741,1784,1678,1713,1598,1655,1656,1731,1734,1802,1410,1525,1524,1539,1488,1491,1500,1503,1996,1978,1926,1970,2001,1943,1980,1969,1898,1945,1995,2026,1970,1930,1984,1987,2016,1751,813,40,40,38,319,38,40,40,231,1906,1800,1839,1853,1814,1833,1815,1790,1891,1464,1482,1428,1450,1357,1487,1457,1468,1985,1824,1779,1757,1804,1763,1770,1767,1477,892,40,39,40,34,323,40,39,40,808,1086,1616,1664,1689,1673,1701,1695,1665,1692,1650,1156,1298,1431,1071,1008,1557,1388,1135,1218,1823,1600,1655,286,40,38,40,319,39,40,35,679,1261,1334,1219,1182,1737,1630,1618,1700,1656,1686,1680,1618,1456,40,38,40,67,1180,155,131,1370,1870,2019,1689,1641,1610,1645,1676,1662,1700,1734,1696,1732,1747,1738,1730,1717,1704,1691,1774,1046,1193,198,1230,1815,1740,1734,1753,1728,1808,1666,1750,1833,1860,1847,1893,1774,1922,1800,1838,1894,1863,1653,1657,1702,1705,1830,1780,1710,1874,1797,1956,1779,1964,1773,1963,1855,1910,1947,1479,1405,1292,1224,1379,1593,1538,1446,1362,1392,1235,1291,1239,1315,1329,1427,1719,619,797,875,991,1386,1671,1007,705,670,748,1514,1573,1708,1425,817,1274,1634,1256,1141,880,864,968,668,645,942,1238,1356,1220,1210,1364,1354,1403,1277,1571,1770,1740,1796,1729,1763,1704,1771,1719,1780,1770,1743,1754,1779,1784,1764,1745,1132,948,928,975,1638,1958,1658,1953,1825,1102,1229,1192,1275,1994,2021,2023,2020,1920,1918,1890,1891,1968,2043,2034,2041,2043,1736,1818,1798,1843,1800,1809,1715,1797,1718,1658,1619,1611,1747,1546,1279,1309,1691,1218,1195,1263,1307,1324,1223,1247,1239,1675,1332,1232,1166,1654,1544,751,822,1632,1718,870,728,1414,1388,981,752,1036,1469,1534,1385,1419,1651,1860,1861,1867,1864,1878,1913,1952,1948,1833,1680,1660,1648,1660,1710,1782,1794,1702,1575,1436,1419,1463,1561,1434,1410,1439,1615,1521,1409,1486,1593,1526,1498,1468,1573,1948,1978,1949,1918,2018,1994,1985,1971,2012,1751,1768,1740,1746,1760,1577,1540,1577,1909,1905,1791,1889,1916,1768,1819,1783,1867,1901,1876,1839,1908,1878,1827,1771,1846,1926,1330,1493,1483,1522,1217,1212,1594,1249,1194,1223,1243,1697,1077,1252,1341,1888,1775,1783,1781,1829,1797,1786,1787,1795,1865,1836,1799,1815,1402,877,827,805,995,1169,1166,1143,1205,1228,1236,1170,1204,1330,1390,1412,1300,1664,1831,1862,1851,1894,1837,1822,1851,1841,1927,1913,1934,1892,1935,1913,1942,1951,1876,1785,1783,1792,1656,1811,1729,1672,1538,1552,1781,1778,1812,1842,1821,1720,1855,1778,1488,1457,1436,1518,1549,1625,1794,1551,1557,1671,1629,1703,1694,1746,1743,1805,1813,1880,2054,2051,1932,1990,1979,1997,1958,1999,1935,1940,1908,1891,1120,1352,1342,1064,1787,1798,1736,1767,1691,1551,1616,1552,1657,1784,1780,1776,1755,1838,1789,1817,1757,1802,1692,1692,1693,1631,1712,1817,1796,1602,1142,1043,1040,1222,1483,554,541,739,1694,644,1500,640,1407,547,633,471,725,851,757,767,745,770,1222,1251,1172,1253,1414,1316,1457,1529,1467,1354,1490,1528,1546,1488,1422,1523,1585,1536,1367,1515,1564,1438,1345,1451,1472,1577,1428,1408,1479,803,233,205,204,823,504,429,469,982,2036,2019,2048,2053,2022,2043,2045,2011,2055,1968,1920,1975,1890,1915,1922,1902,1907,1387,1377,1405,1436,1341,1141,1173,1091,1306,1440,1348,1520,1467,1873,1816,1837,1882,1875,1802,1785,1819,1881,1783,1742,1756,1815,1790,1720,1725,1693,1502,1318,1261,1402,1525,1328,1311,1377,1734,1749,1748,1792,1716,1199,1256,1220,1290,1874,1807,1780,1811,1642,1433,1391,1497,1618,2024,2032,2034,2016,2009,1990,1975,1993,1716,1518,1502,1467,1744,1692,1665,1675,1777,1997,1988,1974,2002,1837,1711,1730,1739,1991,2055,2043,2054,1967,1573,1578,633,534,537,535,1043,1419,1426,1425,1075,1321,1537,1579,1227,1402,1545,1561,1449,1679,1638,1797,1626,1917,1828,1296,1201,1324,1268,1175,964,1007,926,1347,983,941,934,894,1240,828,686,1728,1988,1980,1968,1669,1950,1989,1989,1988,1917,1898,1899,1883,2001,2009,1142,2008,1987,1877,1902,1898,1887,1995,2005,1975,2008,1583,1658,1644,1464,1512,1518,1592,1488,1613,1889,1898,1854,1852,1909,1880,1856,1867,1876,1476,1460,1482,1914,1972,1957,1987,2003,1825,1785,1791,1794,1872,1861,1888,1869,1651,1415,1454,1405,1432,1470,1523,1482,1441,1546,1725,1699,1636,1521,1566,1566,1543,1645,1738,1623,1751,1757,1671,1749,1689,1722,1663,1674,1539,1695,1643,1675,1522,1688,1744,1464,1544,1559,1514,1565,1623,1586,1627,1392,1524,1502,1502,1500,1493,1589,1713,1436,1334,1225,1560,1612,1682,1720,1400,1741,1581,1639,1781,1718,1549,1623,1522,1689,1541,1503,1615,1473,1446,1510,1726,1390,1399,1365,1222,1155,1129,1297,1192,1405,1474,1376,1366,1589,1330,1195,1372,1875,1710,1734,1539,1253,1023,1051,886,970,1086,1173,1322,1317,1599,1602,1579,1719,1907,1346,1316,1523,1453,1527,1486,1449,1383,1510,1699,1724,1692,1732,1668,1722,1797,1990,1639,1807,1754,1575,1386,1378,1326,1373,1519,1572,1599,1598,1607,1411,1469,1347,1680,1351,1388,1332,1400,1412,1375,1677,1498,1511,1455,1411,1433,1443,1480,1474,1456,1797,1747,1519,1410,1388,1367,1407,1347,1393,1483,1711,1741,1737,1600,1500,1512,1432,1491,1688,1429,1448,1362,1431,1434,1588,1682,1648,1578,1443,1527,1472,1427,1464,1464,1460,1654,1556,295,279,1696,1600,312,278,1614,1587,312,288,1621,1619,312,276,1612,1613,312,267,1551,1608,323,267,1324,1240,1323,1237,1422,1244,1306,1287,1407,1284,1297,1311,1308,1380,1260,1345,1281,1460,1495,1322,1225,1249,1233,1269,1254,1261,1295,1388,1175,1170,1220,1197,1190,1197,1215,1501,1217,1294,1263,1299,1261,1254,1275,1249,1911,1705,1796,1691,1676,1637,1856,1923,1384,1287,1378,1352,1338,1355,1350,1306,1386,1334,1450,1283,1402,1342,1432,1309,1568,1774,1625,1609,1571,1623,1611,1484,1359,1322,1362,1401,1524,1531,1512,1423,1595,1775,1852,1651,1589,1562,1637,1604,1540,1408,1281,1387,1393,1492,1536,1527,1419,1581,1725,1863,1667,1584,1564,1632,1579,1502,1434,1271,1358,1386,1464,1569,1521,1427,1540,1721,1883,1692,1588,1578,1665,1581,1513,1483,1254,1350,1388,1473,1576,1514,1455,1501,1727,1841,1242,1313,1095,977,964,1156,1061,1160,1086,1288,1271,1203,910,1004,1062,1092,1650,1227,1293,1133,988,973,1147,1057,1082,1114,1274,1235,1209,954,985,1081,1088,1575,1957,1900,1921,1970,1964,1939,1965,1908,1885,1788,1782,1866,1888,1953,1925,1957,1530,1894,1964,1939,1977,2011,1979,1909,1959,1830,1123,1177,1144,1239,1132,1128,1154,1117,1774,1777,1763,1770,1776,1751,1843,1753,1737,1788,1766,1786,1751,1719,1701,2006,1948,1886,1896,1891,1977,1579,714,855,2028,1972,2011,1981,1958,1969,2008,1959,2011,1949,1955,1959,1993,1970,2000,1942,1962,1803,1585,1562,1567,1557,1573,1548,1578,1672,1791,1609,1666,1630,1643,1749,1678,1744,1633,1698,1471,1578,1433,1733,1649,1735,1656,1761,1680,1669,1765,1750,1861,1735,1833,1796,1827,1626,1710,1600,1772,1693,1778,1675,1702,1648,1520,1613,1530,1678,1605,1803,1666,1771,1671,1790,1783,1837,1597,1510,1755,1656,1815,1813,1802,1782,1823,1803,1820,1794,1774,1682,1733,1741,1555,1661,1571,1755,1644,1857,1700,1881,1726,1759,1643,1796,1743,1748,1278,1911,1912,1799,1714,1936,1867,1489,1550,1689,1993,2010,1977,1669,1438,1238,1155,1310,1139,1118,1707,1628,1594,1535,1472,1509,1523,1543,1716,1146,1090,884,956,1178,1155,966,1013,1113,1181,1881,1761,1871,1809,1848,1817,1851,1772,1861,1743,1570,1758,1603,1750,1730,1702,1773,1913,1789,1863,1853,1827,1834,1835,1781,1965,1743,1572,1732,1673,1741,1738,1726,1796,1801,1835,1872,1836,1898,1823,1899,1817,1968,1930,1876,1983,1922,1921,1958,2038,1916,1959,1770,1735,1816,1761,1833,1816,1835,1866,1335,1389,1678,1401,1214,1593,1489,1775,1383,981,1426,1376,1126,962,547,297,1191,1272,1302,1292,1343,1468,1286,1319,1322,1402,1377,1315,1336,1284,1436,1349,1319,1395,1321,1458,1543,1213,1375,1475,1761,1910,1960,2047,2042,2002,1991,1966,1954,1651,1612,1533,1463,1733,1577,1725,1734,1611,1751,1801,1598,1767,1556,1602,1606,1620,1693,1793,1909,1921,1832,1646,1729,1807,1960,1950,1846,1717,1748,1844,1921,1825,1766,1593,1847,1915,1895,1866,1637,1759,1913,1993,1955,1920,1737,1681,1865,1893,1877,1780,1351,993,1000,973,1409,1484,1590,1601,1644,1632,1695,1647,1623,1556,1869,1689,1724,1729,1593,1709,1624,1627,1695,1696,1922,1731,1712,1748,1722,1726,1732,1605,1707,1672,1745,1692,1824,1933,1774,1323,1955,1909,1851,1940,1950,1923,1879,1706,1779,1650,1670,1756,1939,1868,1912,1880,1906,1996,1919,1956,1936,1931,1815,1804,1793,1789,1886,1954,1874,1895,1902,1912,1845,1882,1691,1361,1164,1349,1718,1601,1656,1619,1875,1768,1736,1773,1759,1738,1791,1772,1748,1750,1794,1685,945,599,608,875,1107,973,1321,1245,1234,963,1826,1717,1635,1564,1757,1601,1648,1691,1591,1454,1613,1478,1362,1211,1626,1607,1744,1684,1633,1717,1712,1595,1673,1518,1510,1585,1534,1683,1550,1684,1555,1634,1647,1556,1636,1569,1675,1512,1656,1460,1529,1609,1503,1633,1468,1530,1665,1554,1644,1556,1430,1852,1812,1817,1856,1873,1860,1860,1810,1903,1815,1825,1835,1926,1900,1877,1855,1878,1979,2019,1955,1896,1898,1878,1953,1914,1946,1885,1939,1900,1872,1871,1866,1895,1881,1776,1673,1623,1729,1654,1604,1590,1668,1621,1618,1626,1620,1753,1655,1642,1664,1638,1625,1654,1631,1675,1703,1658,1645,1662,1631,1626,1633,1656,1880,1866,1867,1856,1872,1876,1827,1870,1831,1929,1853,1819,1841,1839,1836,1838,1859,1949,1884,1846,1850,1863,1857,1837,1859,1884,1609,1389,1444,1433,1323,1444,1410,1601,1411,1307,1480,1481,1411,1432,1822,1874,1831,1826,1802,1823,1828,1915,1928,1690,1732,1712,1681,1694,1695,1762,1628,1724,1568,1801,1698,1703,1733,1765,1727,1568,1680,1890,1832,1835,1875,1590,1800,1857,1878,1855,1851,1683,1722,1787,1776,1794,1751,1601,1754,1688,1673,1823,1632,1724,1760,1823,1746,1770,1722,1658,1700,1639,1665,1728,1687,1460,1513,1506,1581,1519,1648,1479,1650,1573,1493,1631,1689,1547,1563,1572,1596,1521,1591,1531,1815,1826,1768,1731,1756,1757,1680,1419,1478,1752,1822,1781,1736,1725,1615,1485,1683,1746,1720,1588,1355,1318,1787,1764,1691,1337,1635,1410,1479,1669,1398,1696,1498,1460,1513,1548,1521,1570,1474,1367,1513,1518,1587,1534,1505,1507,1598,1561,1490,1551,1353,1459,1438,1482,1855,1835,1858,1793,1829,1827,1789,1751,1721,1484,1819,1706,1743,1790,1630,1770,1778,1651,1887,2009,2045,2013,2005,2020,1999,1731,1788,1757,1595,1757,1725,1776,1675,1704,1730,1793,1717,1721,1750,1727,1712,1654,1677,1618,1836,1666,1784,1670,1685,1738,1679,1702,1717,1686,1727,1639,1798,1596,1445,1504,1762,1749,1650,1733,1630,1437,1510,1515,1576,1408,1493,1543,1517,1629,1808,1715,1693,1793,1646,1741,1755,1715,1606,1674,1648,1687,1595,1599,1628,1699,1613,1696,1627,1617,1728,1636,1674,1631,1743,1630,1642,1635,1679,1634,1646,1642,1697,1649,1659,1644,1653,1717,1628,1611,1610,1775,1606,1679,1682,1784,1659,1663,1621,1595,1742,1606,1674,1681,1798,1593,1617,1633,1685,1654,1840,1823,1694,1587,1788,1822,1635,1720,1777,1821,1718,1855,1917,1873,1917,2007,1962,1946,1954,1953,1800,1858,1922,1985,2014,2010,1998,1850,1917,1860,1824,1878,1993,2033,2009,1991,1972,1985,1906,1884,1892,1917,1907,1930,1967,2035,1716,1883,1882,1903,1848,1813,1583,1610,1897,1802,1802,1600,1619,1610,1648,1615,1812,1023,1013,1002,1019,1210,1261,1144,1307,1206,1299,1131,1273,1256,1220,1145,1257,1212,1719,1724,1797,1716,1693,1706,1703,1757,1653,1693,1701,1772,1687,1661,1668,1701,1644,1720,1635,1645,1655,1745,1681,1662,1623,1719,1679,1703,1659,1638,1851,1687,1733,1716,1682,1734,1717,1740,1820,1741,1656,1743,1816,2017,1994,2027,2043,2037,2036,2029,2030,2019,2041,2030,2057,2052,2055,2047,2043,2043,1916,1855,1868,1922,1925,1894,1874,1869,1897,1625,1710,1511,1700,1785,1689,1538,1670,1724,1696,1673,1710,1638,1678,1773,1789,1586,1730,1663,1542,1646,1451,1735,1788,1872,1719,1664,1625,1755,1956,1871,1858,1800,1786,1670,1819,1831,1863,1541,2014,1954,2028,1923,1912,1911,1636,1764,1675,1764,1698,1766,1811,1757,1660,1780,1695,1684,1683,1733,1546,1503,1519,1516,1564,1524,1511,1526,1469,1574,1488,1532,1482,1546,1511,1525,1516,1395,1015,826,1030,887,1626,1435,1321,1372,1370,1435,1360,1407,1516,1632,1747,1630,1649,1652,1612,1644,1716,1785,1712,1662,1696,1797,1768,1720,1730,1730,1644,1691,1675,1527,1091,1609,1659,1715,1880,1904,1918,1873,1875,1876,1952,1916,1926,1945,1612,1573,1498,1521,1441,1547,1797,1967,1891,1825,1631,1519,1599,1663,1861,1909,1818,1603,1664,1640,1642,1627,1692,1700,1779,1320,1570,1671,1673,1715,1743,1632,1151,1547,1237,1396,1503,1683,1766,1739,1338,1470,1444,1371,1415,1346,1374,1322,1334,1393,1502,1406,1258,1363,1328,1307,1339,1241,1393,1524,1390,1577,1528,1678,1708,1397,1147,1459,1225,1399,1496,1619,1615,1444,1176,1280,1678,1460,1353,1320,1158,1304,1280,1476,1645,1324,1645,1707,1745,1738,1677,1688,1352,1650,1344,1633,1542,1713,1703,1449,1234,1652,1428,1307,1499,1630,1653,1417,1469,1258,1668,1268,1475,1529,1696,1742,1718,1451,1598,1583,1443,1551,1422,1507,1522,1496,1422,1826,1776,1715,1739,1819,225,130,1209,524,643,663,544,506,764,634,530,1311,922,957,1426,1393,1394,1422,1421,1572,1585,1710,1586,1623,1553,1592,1847,1546,1097,1138,1184,1268,1328,1269,1284,1279,1427,1528,1604,1527,1527,1561,1694,1573,1354,1382,1379,793,25,30,25,538,632,1294,640,1515,1631,1680,1610,1640,1156,1686,1497,1584,1529,1733,1916,1948,1901,1956,1900,1845,1485,1505,1488,1296,942,962,1278,1327,1425,1435,1488,1537,1430,1570,1718,1747,1524,1601,1512,1568,1587,1514,1559,1728,2057,2054,2037,2010,1889,1952,2021,1945,1745,1932,1875,1952,2002,2052,1995,2047,1995,2028,1981,2042,2049,1997,1705,1866,1993,2018,1999,1921,1669,1566,1244,1232,1193,1482,1994,1896,1724,1760,1894,1877,1756,1786,1774,1887,2032,2030,1999,2025,2048,1996,2039,1884,1541,1540,1552,1512,1503,1591,1507,1517,1387,1394,1312,1341,1307,1318,1329,1598,2018,2007,1996,1974,2009,1950,1936,1936,2012,1811,1732,1653,1670,1711,1659,1220,231,518,1246,1301,1285,955,1053,933,1104,1189,1654,1694,1573,1721,1742,1667,1534,1584,1549,1626,1534,1605,1488,1483,1221,1366,1087,1149,1264,1320,1241,1347,1437,1540,1590,1598,1448,1449,1411,1212,954,1115,1586,1503,710,1208,1276,1392,1504,1455,1499,1466,1176,1352,1531,1741,1936,1765,1280,1327,1206,1470,1569,1639,1601,1643,1588,1602,1492,1572,1509,1446,1229,1458,1562,1540,1379,1386,1381,1421,1363,1223,489,656,457,814,1406,1535,1546,1527,1421,1483,1550,1464,1383,1335,1145,1191,1321,1410,1504,1335,1073,1029,888,1246,1740,1902,1795,1772,1559,1359,1022,1170,1543,1572,1568,1557,1563,1577,1542,1743,1747,1832,1714,1836,1764,1890,1755,1712,1391,1421,1357,1428,1444,1513,1657,1800,1980,1941,1890,1932,1980,1941,1890,1953,1909,1791,1552,1211,734,834,865,1217,1504,1591,1666,1722,1470,1600,1347,1346,1233,962,576,836,808,878,611,1019,1416,1174,507,559,487,1061,1762,1635,1103,1139,1018,1199,1401,1338,1083,1164,948,1074,1422,1467,1422,1433,1447,1576,1685,1772,1639,1812,1872,1820,1552,1372,1011,1193,1165,1216,977,1023,861,1157,993,1184,1231,1126,457,578,625,666,484,551,598,659,468,570,621,701,505,591,613,656,419,511,565,1130,1869,1640,1048,1150,1039,1146,1037,1097,1127,1391,1788,1628,1700,1714,1651,1675,1727,1523,1167,1368,1658,1666,1698,1768,1870,1349,272,400,284,363,191,300,278,358,54,265,25,190,154,281,279,288,173,719,1456,1499,1640,1481,1086,1127,1097,1150,1145,1356,1496,1532,1449,1668,1855,1878,1695,1708,1353,1638,1639,1652,1398,1642,1961,2005,2027,2037,1940,1968,1962,1969,1965,1964,2010,1767,1277,1290,1669,1585,1557,1218,1631,1457,1509,1497,1492,1457,1474,1473,1524,1539,1517,1372,1058,1315,1250,1404,1122,1297,1233,1120,1057,1180,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2045,1935,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1880,2048,2048,2005,2048,2048,2001,2048,2048,2048,2048,2048,2048,2038,2047,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2008,2048,2048,2048,2048,2006,2048,2055,2048,2048,2055,2048,2003,2048,2048,2048,2034,1941,2048,2048,2048,2035,1958,2048,1995,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2041,1996,1850,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2056,2048,2048,1932,1943,2048,2048,2056,2048,2054,1928,1980,2048,2048,2048,2048,2036,1850,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2057,2044,1924,1898,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2027,1947,1786,2048,2002,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2055,1886,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1925,2048,2048,2048,2048,1987,2048,2048,2048,2050,1988,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2005,2048,2005,2048,2009,2048,2007,2048,2004,1967,1873,2008,2048,2048,1924,1880,2019,2057,2048,1967,1900,1971,2046,2048,2009,1864,1976,2048,2048,2025,1933,1931,2030,2048,2048,1942,1930,2011,2048,2051,1990,1911,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2007,2048,2048,2048,2048,2005,2048,2001,2008,2048,2003,2011,2048,2048,2048,2048,2010,2048,2048,2048,2048,2011,2009,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2003,2011,2048,2007,2048,2002,2048,2048,2002,2048,2048,2001,2048,2001,2048,2002,2011,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2007,2048,2048,2048,2004,2048,2048,2048,2048,2003,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2030,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2044,1868,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2056,2048,2048,2056,2048,2038,2029,1992,1958,1800,1940,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1947,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,1950,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2001,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2045,2040,1998,2048,2005,2048,2048,2009,2048,2008,2048,2048,1999,2048,1999,2048,1996,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2010,2048,2007,2048,2003,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2056,1992,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2050,2021,1881,1863,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2048,2055,2048,2036,2010,1767,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2005,1918,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2038,1822,2048,2048,2048,2048,2048,2048,2007,2004,2008,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,1954,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2031,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2053,2048,2057,2022,1881,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2054,1858,2038,2014,2048,2013,2048,2009,2048,2002,2048,2048,2048,2048,2052,1954,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2003,2005,2002,2009,2048,1947,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2005,2056,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,1949,2048,2048,2048,1978,2048,2048,2048,1987,2007,2011,2048,2004,1887,2001,2005,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2031,1954,1756,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,1887,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2001,2048,2048,2048,2048,2012,2048,2048,2048,2056,2052,1930,2048,2048,2048,2048,2056,1963,1884,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1903,2044,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2057,2048,2048,2048,2007,2048,2048,2048,2005,2048,2048,2048,2048,1999,2044,2048,2048,2005,1933,1943,2048,2048,2048,1999,1995,1889,1995,2048,2048,2048,1981,2048,2048,1994,2048,1993,2048,2048,2048,2048,1979,2048,2044,1976,1963,2048,1987,2055,2053,2048,1944,2048,2002,2048,2048,2048,2016,2048,2006,2005,2011,1927,1914,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,1847,2048,2048,2048,2048,2048,2048,1957,2048,2048,2048,1941,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,1925,2048,2048,2048,1759,1116,1107,1329,1660,1316,1455,1748,1274,957,1232,1198,1408,1427,1436,1480,1482,866,811,846,145,25,714,1837,1824,1900,1896,1406,1163,1299,1242,1022,956,1033,1014,1469,1582,1670,1645,1688,1627,1691,1641,1694,1682,1701,1583,1675,1740,1660,1659,1688,1650,1695,1694,1677,1674,1585,1652,1686,1703,1618,1563,1066,1402,1533,1644,1724,1912,1912,1902,1935,1209,1174,1314,1016,1651,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2006,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,1751,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2050,2038,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2054,2048,2057,2056,2056,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1932,1938,1996,1930,2048,2001,2005,2048,1995,2000,2001,1984,1998,2000,1998,1996,1938,2048,2048,1999,2048,2001,2048,2001,2048,1996,2048,1932,2048,1998,2048,1992,1953,2048,1983,2048,1924,2048,1994,1987,2048,1997,1985,2028,1981,1933,2000,2048,2048,2048,2048,2048,2048,2048,2048,2045,1970,2048,2048,2048,2048,2048,2048,2048,1997,2048,1993,2048,2048,2048,2048,2048,1993,1995,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2007,1996,2048,2048,2048,2048,2048,1991,2048,2048,2048,2002,1996,2048,1998,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,1993,1936,2048,2048,2048,2048,2048,2048,1993,1864,1990,2000,2048,1984,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,1995,2048,2048,2048,1978,2048,2048,1999,2048,2048,1941,2048,2048,1999,1779,1639,2048,1998,2048,1996,2048,1993,2000,2048,1993,1993,1994,1935,2048,1998,2048,2003,2048,2002,2048,1993,2003,1998,2048,1999,2048,2007,2048,2048,1997,2048,1995,2048,2001,2048,2002,2048,1999,2048,2048,2048,2048,2048,2048,1999,2048,1998,2048,1998,2048,2000,2048,2005,2048,1994,2000,2002,2048,1999,2003,2007,1997,2048,2048,1999,2048,2048,2048,1993,2048,2048,1995,2048,2048,1994,2048,2001,2048,2048,1997,2048,2002,2048,2048,1995,2048,1995,2048,1995,2048,2048,2000,2048,2048,1995,2048,1995,2048,1992,2048,1997,2001,2048,2000,1939,1842,2048,2048,2048,1994,2048,2005,2048,2048,1995,2048,2001,2048,2002,2048,2048,1992,2048,1999,2048,2048,1994,2048,1999,2045,1967,1874,2048,2048,2048,2048,1997,2048,2048,2048,2048,1995,1939,2048,1874,2048,2048,2002,2001,2048,2048,2048,1999,2048,2048,2048,2048,2048,1999,1923,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2001,1906,2048,2003,2048,2048,1993,1932,2048,2048,1995,2048,1995,2048,1997,2048,1937,1993,2000,2022,2053,2002,2003,2048,1996,2000,2000,1987,1978,2048,1979,2048,1979,2043,2048,2048,2048,1993,2048,2048,2048,2048,1999,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1988,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2003,2048,2048,2048,2048,1996,2003,2048,1997,2003,2048,1998,2048,1992,2014,2048,2048,2048,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,1993,2048,1999,2048,2001,2048,1998,2048,1997,2048,1925,1984,2048,2048,1992,2048,1998,2048,2001,2048,2048,2000,2048,2045,2028,2048,1999,2048,2048,1993,2048,2048,1928,2048,2048,1997,2048,2003,2048,1997,2048,2048,1997,2048,2003,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,1672,1999,2048,2004,2048,2048,1995,2048,1996,2048,1995,2048,1995,1995,2048,2001,1936,2048,1999,2048,2000,1981,2003,2048,2003,1993,2048,1995,1921,2051,2048,1996,2048,2048,1996,2048,2001,2048,2048,1993,2048,1995,2048,1999,2048,1982,2006,2055,2048,1993,2005,2048,1932,2001,2002,1939,2048,2007,2048,2048,1993,1998,2048,1997,1999,2048,1997,1996,2003,2048,1997,2048,1998,2048,2000,2048,1999,2048,2048,2000,2048,1998,2048,1929,1994,2002,2048,2001,1999,2005,2048,1999,1996,2048,1961,2045,2003,2048,1999,2048,2000,2048,1996,2002,2048,2003,2048,2048,2005,2048,2048,2048,1996,2048,2000,2048,2048,1998,2048,2048,1999,2048,1938,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2001,1995,2048,1986,2048,2048,2048,1998,2048,1999,1752,1929,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2000,2048,2048,2048,2048,1333,1990,2048,2048,2048,2048,1997,1939,2048,2048,2048,1995,2048,2048,2048,2007,1934,2048,2048,2001,2048,2048,1995,2048,1995,2048,2000,2048,2048,1999,2048,2003,2048,2048,2000,1995,2048,2048,2048,1998,1998,2048,2048,2003,1804,2048,1998,1999,1938,2004,1939,2048,2048,2048,2007,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,1997,2048,2001,2048,1972,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2014,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2056,2048,1993,2048,1993,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1943,1994,2048,2048,2048,2048,1989,2048,2003,2048,2048,1887,1617,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2052,1982,2048,2048,2048,2048,1993,2048,2048,2048,1975,2048,2048,2048,2048,2048,2016,1907,2048,1991,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,1995,2048,1998,2048,2048,1995,2048,2048,2022,1843,2048,2048,1870,2048,2051,1605,2048,2048,2048,2048,2048,1970,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2056,2042,1998,2048,1993,2048,2048,1997,2000,2048,2048,2030,1975,2048,2048,2048,2048,2048,2002,2048,1921,2048,2048,2048,1988,2048,2048,1993,2048,1993,2048,2002,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2055,1979,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,1998,2048,1992,2048,2048,2048,1795,2048,2048,1758,2017,2048,2048,2048,2022,2051,2048,1971,2048,2048,1982,2048,1988,1968,1862,2054,1850,2048,2048,2048,1962,2048,2048,2048,2048,2048,2048,2048,1956,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2057,2056,2048,2054,1801,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,1997,2048,2048,1999,2048,2000,2048,2048,2048,2055,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,1995,2048,2048,2001,1998,1871,1781,2055,2048,2048,2048,2048,1801,2048,2048,2048,2048,2048,1803,2048,2048,2048,2048,2048,1895,2048,2048,1997,2048,2048,2048,2002,1999,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2003,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,2051,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2030,2049,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,1109,1151,1162,1160,990,997,1887,1698,1870,1762,1889,1595,1228,1324,1976,2048,2048,1132,34,34,34,34,34,34,34,156,889,940,1088,1105,1087,929,862,733,935,945,1014,890,1058,897,976,1113,978,1076,1005,950,880,816,828,987,1099,933,884,837,901,949,930,893,998,879,725,886,1041,1198,960,959,1323,1288,1253,1246,1289,1290,1465,1338,1478,1393,1375,1072,872,1061,1001,880,961,1065,1036,889,1167,1018,1209,1106,1109,1153,1153,1083,1143,1233,1365,1240,1547,1516,1391,993,926,818,1853,1854,1896,1972,1904,1797,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2045,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,1975,2048,1978,1982,1307,1357,1784,1278,1139,1649,1334,1189],\"successes\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,0,1,0,0,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,1,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,0,0,1,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,0,1,0,1,1,1,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,1,1,0,0,0,1,0,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,0,1,1,0,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,0,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,1,1,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,1,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,1,1,1,0,1,1,1,0,1,0,1,0,0,0,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,0,1,0,1,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,1,0,1,1,1,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,1,0,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,1,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,0,1,0,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,1,0,1,0,1,1,1,0,1,1,0,1,1,1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0,1,1,1,0,1,1,0,1,1,1,1,0,1,0,0,1,1,0,1,1,0,1,1,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,0,1,0,1,1,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1]}\n;\n            compressedData['data'] = byteArray;\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\n            Module['removeRunDependency']('datafile_/mnt/c/Code/edge-classic/web/site/edge-classic.data');\n      };\n      Module['addRunDependency']('datafile_/mnt/c/Code/edge-classic/web/site/edge-classic.data');\n\n      if (!Module.preloadResults) Module.preloadResults = {};\n\n        function preloadFallback(error) {\n          console.error(error);\n          console.error('falling back to default preload behavior');\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\n        };\n\n        openDatabase(\n          function(db) {\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\n              function(useCached, metadata) {\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\n                if (useCached) {\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\n                } else {\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\n                    function(packageData) {\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\n                        function(error) {\n                          console.error(error);\n                          processPackageData(packageData);\n                        });\n                    }\n                  , preloadFallback);\n                }\n              }\n            , preloadFallback);\n          }\n        , preloadFallback);\n\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\n\n    }\n    if (Module['calledRun']) {\n      runWithFS();\n    } else {\n      if (!Module['preRun']) Module['preRun'] = [];\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\n    }\n\n    }\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/blasphem.wad\", \"start\": 0, \"end\": 21766004}, {\"filename\": \"/edge_base/blasphemer/graphics/ARTISOAR.png\", \"start\": 21766004, \"end\": 21766356}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 21766356, \"end\": 21767516}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 21767516, \"end\": 21771757}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 21771757, \"end\": 21775998}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK0.png\", \"start\": 21775998, \"end\": 21777494}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK1.png\", \"start\": 21777494, \"end\": 21778584}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK10.png\", \"start\": 21778584, \"end\": 21779535}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK11.png\", \"start\": 21779535, \"end\": 21780506}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK12.png\", \"start\": 21780506, \"end\": 21781778}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK13.png\", \"start\": 21781778, \"end\": 21783010}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK14.png\", \"start\": 21783010, \"end\": 21784550}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK15.png\", \"start\": 21784550, \"end\": 21785517}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK2.png\", \"start\": 21785517, \"end\": 21786577}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK3.png\", \"start\": 21786577, \"end\": 21787244}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK4.png\", \"start\": 21787244, \"end\": 21787808}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK5.png\", \"start\": 21787808, \"end\": 21788746}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK6.png\", \"start\": 21788746, \"end\": 21790081}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK7.png\", \"start\": 21790081, \"end\": 21790711}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK8.png\", \"start\": 21790711, \"end\": 21792127}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK9.png\", \"start\": 21792127, \"end\": 21793089}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 21793089, \"end\": 21794433}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 21794433, \"end\": 21840475}, {\"filename\": \"/edge_base/blasphemer/scripts/colmap.ddf\", \"start\": 21840475, \"end\": 21840770}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 21840770, \"end\": 21841474}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 21841474, \"end\": 21842629}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 21842629, \"end\": 21845610}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 21845610, \"end\": 21847551}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 21847551, \"end\": 21851097}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 21851097, \"end\": 21863967}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 21863967, \"end\": 21868802}, {\"filename\": \"/edge_base/blasphemer/scripts/lua/edge_hud.lua\", \"start\": 21868802, \"end\": 21888032}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 21888032, \"end\": 21890188}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 21890188, \"end\": 21903597}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 21903597, \"end\": 21907589}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 21907589, \"end\": 21919275}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 21919275, \"end\": 21924373}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 21924373, \"end\": 21924786}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 21924786, \"end\": 22012100}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 22012100, \"end\": 22023725}, {\"filename\": \"/edge_base/chex1/graphics/M_SKULL1.png\", \"start\": 22023725, \"end\": 22024292}, {\"filename\": \"/edge_base/chex1/graphics/M_SKULL2.png\", \"start\": 22024292, \"end\": 22025040}, {\"filename\": \"/edge_base/chex1/graphics/STBAR.lmp\", \"start\": 22025040, \"end\": 22048582}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT033.lmp\", \"start\": 22048582, \"end\": 22048699}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT034.lmp\", \"start\": 22048699, \"end\": 22048832}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT035.lmp\", \"start\": 22048832, \"end\": 22049083}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT036.lmp\", \"start\": 22049083, \"end\": 22049410}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT037.lmp\", \"start\": 22049410, \"end\": 22049673}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT038.lmp\", \"start\": 22049673, \"end\": 22049765}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT039.lmp\", \"start\": 22049765, \"end\": 22049923}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT040.lmp\", \"start\": 22049923, \"end\": 22050081}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT041.lmp\", \"start\": 22050081, \"end\": 22050241}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT042.lmp\", \"start\": 22050241, \"end\": 22050361}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT043.lmp\", \"start\": 22050361, \"end\": 22050436}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT044.lmp\", \"start\": 22050436, \"end\": 22050514}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT045.lmp\", \"start\": 22050514, \"end\": 22050588}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT046.lmp\", \"start\": 22050588, \"end\": 22050779}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT047.lmp\", \"start\": 22050779, \"end\": 22051006}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT048.lmp\", \"start\": 22051006, \"end\": 22051144}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT049.lmp\", \"start\": 22051144, \"end\": 22051388}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT050.lmp\", \"start\": 22051388, \"end\": 22051635}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT051.lmp\", \"start\": 22051635, \"end\": 22051841}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT052.lmp\", \"start\": 22051841, \"end\": 22052085}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT053.lmp\", \"start\": 22052085, \"end\": 22052324}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT054.lmp\", \"start\": 22052324, \"end\": 22052522}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT055.lmp\", \"start\": 22052522, \"end\": 22052749}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT056.lmp\", \"start\": 22052749, \"end\": 22052988}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT057.lmp\", \"start\": 22052988, \"end\": 22053076}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT058.lmp\", \"start\": 22053076, \"end\": 22053182}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT059.lmp\", \"start\": 22053182, \"end\": 22053343}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT060.lmp\", \"start\": 22053343, \"end\": 22053435}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT061.lmp\", \"start\": 22053435, \"end\": 22053596}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT062.lmp\", \"start\": 22053596, \"end\": 22053790}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT063.lmp\", \"start\": 22053790, \"end\": 22054011}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT064.lmp\", \"start\": 22054011, \"end\": 22054212}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT065.lmp\", \"start\": 22054212, \"end\": 22054415}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT066.lmp\", \"start\": 22054415, \"end\": 22054641}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT067.lmp\", \"start\": 22054641, \"end\": 22054837}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT068.lmp\", \"start\": 22054837, \"end\": 22054995}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT069.lmp\", \"start\": 22054995, \"end\": 22055220}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT070.lmp\", \"start\": 22055220, \"end\": 22055447}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT071.lmp\", \"start\": 22055447, \"end\": 22055558}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT072.lmp\", \"start\": 22055558, \"end\": 22055749}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT073.lmp\", \"start\": 22055749, \"end\": 22055955}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT074.lmp\", \"start\": 22055955, \"end\": 22056117}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT075.lmp\", \"start\": 22056117, \"end\": 22056405}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT076.lmp\", \"start\": 22056405, \"end\": 22056628}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT077.lmp\", \"start\": 22056628, \"end\": 22056851}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT078.lmp\", \"start\": 22056851, \"end\": 22057021}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT079.lmp\", \"start\": 22057021, \"end\": 22057250}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT080.lmp\", \"start\": 22057250, \"end\": 22057464}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT081.lmp\", \"start\": 22057464, \"end\": 22057668}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT082.lmp\", \"start\": 22057668, \"end\": 22057827}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT083.lmp\", \"start\": 22057827, \"end\": 22058048}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT084.lmp\", \"start\": 22058048, \"end\": 22058244}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT085.lmp\", \"start\": 22058244, \"end\": 22058561}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT086.lmp\", \"start\": 22058561, \"end\": 22058763}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT087.lmp\", \"start\": 22058763, \"end\": 22058933}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT088.lmp\", \"start\": 22058933, \"end\": 22059133}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT089.lmp\", \"start\": 22059133, \"end\": 22059351}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT090.lmp\", \"start\": 22059351, \"end\": 22059542}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT091.lmp\", \"start\": 22059542, \"end\": 22059760}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT092.lmp\", \"start\": 22059760, \"end\": 22059943}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT093.lmp\", \"start\": 22059943, \"end\": 22060023}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT094.lmp\", \"start\": 22060023, \"end\": 22060115}, {\"filename\": \"/edge_base/chex1/graphics/credit.lmp\", \"start\": 22060115, \"end\": 22179403}, {\"filename\": \"/edge_base/chex1/graphics/help1.lmp\", \"start\": 22179403, \"end\": 22298691}, {\"filename\": \"/edge_base/chex1/graphics/titlepic.lmp\", \"start\": 22298691, \"end\": 22417979}, {\"filename\": \"/edge_base/chex1/graphics/wimap0.lmp\", \"start\": 22417979, \"end\": 22537267}, {\"filename\": \"/edge_base/chex1/scripts/attacks.ddf\", \"start\": 22537267, \"end\": 22540595}, {\"filename\": \"/edge_base/chex1/scripts/fonts.ddf\", \"start\": 22540595, \"end\": 22541217}, {\"filename\": \"/edge_base/chex1/scripts/games.ddf\", \"start\": 22541217, \"end\": 22542298}, {\"filename\": \"/edge_base/chex1/scripts/language.ldf\", \"start\": 22542298, \"end\": 22548385}, {\"filename\": \"/edge_base/chex1/scripts/levels.ddf\", \"start\": 22548385, \"end\": 22551565}, {\"filename\": \"/edge_base/chex1/scripts/styles.ddf\", \"start\": 22551565, \"end\": 22554617}, {\"filename\": \"/edge_base/chex1/scripts/things.ddf\", \"start\": 22554617, \"end\": 22564115}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA1.lmp\", \"start\": 22564115, \"end\": 22565250}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA2A8.lmp\", \"start\": 22565250, \"end\": 22566919}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA3A7.lmp\", \"start\": 22566919, \"end\": 22568829}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA4A6.lmp\", \"start\": 22568829, \"end\": 22570495}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA5.lmp\", \"start\": 22570495, \"end\": 22571614}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB1.lmp\", \"start\": 22571614, \"end\": 22572779}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB2B8.lmp\", \"start\": 22572779, \"end\": 22574467}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB3B7.lmp\", \"start\": 22574467, \"end\": 22576394}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB4B6.lmp\", \"start\": 22576394, \"end\": 22578100}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB5.lmp\", \"start\": 22578100, \"end\": 22579214}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC1.lmp\", \"start\": 22579214, \"end\": 22580349}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC2C8.lmp\", \"start\": 22580349, \"end\": 22582018}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC3C7.lmp\", \"start\": 22582018, \"end\": 22583928}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC4C6.lmp\", \"start\": 22583928, \"end\": 22585594}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC5.lmp\", \"start\": 22585594, \"end\": 22586713}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD1.lmp\", \"start\": 22586713, \"end\": 22587878}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD2D8.lmp\", \"start\": 22587878, \"end\": 22589566}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD3D7.lmp\", \"start\": 22589566, \"end\": 22591493}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD4D6.lmp\", \"start\": 22591493, \"end\": 22593199}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD5.lmp\", \"start\": 22593199, \"end\": 22594313}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE1.lmp\", \"start\": 22594313, \"end\": 22595451}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE2E8.lmp\", \"start\": 22595451, \"end\": 22597226}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE3E7.lmp\", \"start\": 22597226, \"end\": 22599282}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE4E6.lmp\", \"start\": 22599282, \"end\": 22601046}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE5.lmp\", \"start\": 22601046, \"end\": 22602274}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF1.lmp\", \"start\": 22602274, \"end\": 22603530}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF2F8.lmp\", \"start\": 22603530, \"end\": 22605497}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF3F7.lmp\", \"start\": 22605497, \"end\": 22607735}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF4F6.lmp\", \"start\": 22607735, \"end\": 22609644}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF5.lmp\", \"start\": 22609644, \"end\": 22610997}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG1.lmp\", \"start\": 22610997, \"end\": 22612253}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG2G8.lmp\", \"start\": 22612253, \"end\": 22614220}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG3G7.lmp\", \"start\": 22614220, \"end\": 22616458}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG4G6.lmp\", \"start\": 22616458, \"end\": 22618367}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG5.lmp\", \"start\": 22618367, \"end\": 22619720}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH1.lmp\", \"start\": 22619720, \"end\": 22621047}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH2H8.lmp\", \"start\": 22621047, \"end\": 22622935}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH3H7.lmp\", \"start\": 22622935, \"end\": 22625042}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH4H6.lmp\", \"start\": 22625042, \"end\": 22626918}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH5.lmp\", \"start\": 22626918, \"end\": 22628319}, {\"filename\": \"/edge_base/chex1/sprites/DOGSI0.lmp\", \"start\": 22628319, \"end\": 22629653}, {\"filename\": \"/edge_base/chex1/sprites/DOGSJ0.lmp\", \"start\": 22629653, \"end\": 22631188}, {\"filename\": \"/edge_base/chex1/sprites/DOGSK0.lmp\", \"start\": 22631188, \"end\": 22632946}, {\"filename\": \"/edge_base/chex1/sprites/DOGSL0.lmp\", \"start\": 22632946, \"end\": 22633900}, {\"filename\": \"/edge_base/chex1/sprites/DOGSM0.lmp\", \"start\": 22633900, \"end\": 22634127}, {\"filename\": \"/edge_base/chex1/sprites/DOGSN0.lmp\", \"start\": 22634127, \"end\": 22634245}, {\"filename\": \"/edge_base/chex3v/graphics/BOSSBACK.lmp\", \"start\": 22634245, \"end\": 22753533}, {\"filename\": \"/edge_base/chex3v/graphics/CQ1TITLE.lmp\", \"start\": 22753533, \"end\": 22872821}, {\"filename\": \"/edge_base/chex3v/graphics/CQ2TITLE.lmp\", \"start\": 22872821, \"end\": 22992109}, {\"filename\": \"/edge_base/chex3v/graphics/ENDPIC.lmp\", \"start\": 22992109, \"end\": 23111397}, {\"filename\": \"/edge_base/chex3v/graphics/HELP.lmp\", \"start\": 23111397, \"end\": 23230685}, {\"filename\": \"/edge_base/chex3v/graphics/HELP2.lmp\", \"start\": 23230685, \"end\": 23349973}, {\"filename\": \"/edge_base/chex3v/graphics/INTERPIC.lmp\", \"start\": 23349973, \"end\": 23469261}, {\"filename\": \"/edge_base/chex3v/graphics/M_SKULL1.png\", \"start\": 23469261, \"end\": 23469828}, {\"filename\": \"/edge_base/chex3v/graphics/M_SKULL2.png\", \"start\": 23469828, \"end\": 23470576}, {\"filename\": \"/edge_base/chex3v/graphics/PFUB0.lmp\", \"start\": 23470576, \"end\": 23658024}, {\"filename\": \"/edge_base/chex3v/graphics/PFUB1.lmp\", \"start\": 23658024, \"end\": 23726192}, {\"filename\": \"/edge_base/chex3v/graphics/PFUB2.lmp\", \"start\": 23726192, \"end\": 23845480}, {\"filename\": \"/edge_base/chex3v/graphics/STBAR.lmp\", \"start\": 23845480, \"end\": 23868448}, {\"filename\": \"/edge_base/chex3v/graphics/VICTORY2.lmp\", \"start\": 23868448, \"end\": 23987736}, {\"filename\": \"/edge_base/chex3v/graphics/WIMAP1.lmp\", \"start\": 23987736, \"end\": 24107024}, {\"filename\": \"/edge_base/chex3v/graphics/WIMAP2.lmp\", \"start\": 24107024, \"end\": 24226312}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT033.lmp\", \"start\": 24226312, \"end\": 24226429}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT034.lmp\", \"start\": 24226429, \"end\": 24226562}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT035.lmp\", \"start\": 24226562, \"end\": 24226813}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT036.lmp\", \"start\": 24226813, \"end\": 24227140}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT037.lmp\", \"start\": 24227140, \"end\": 24227403}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT038.lmp\", \"start\": 24227403, \"end\": 24227495}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT039.lmp\", \"start\": 24227495, \"end\": 24227653}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT040.lmp\", \"start\": 24227653, \"end\": 24227811}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT041.lmp\", \"start\": 24227811, \"end\": 24227971}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT042.lmp\", \"start\": 24227971, \"end\": 24228091}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT043.lmp\", \"start\": 24228091, \"end\": 24228166}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT044.lmp\", \"start\": 24228166, \"end\": 24228244}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT045.lmp\", \"start\": 24228244, \"end\": 24228318}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT046.lmp\", \"start\": 24228318, \"end\": 24228509}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT047.lmp\", \"start\": 24228509, \"end\": 24228736}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT048.lmp\", \"start\": 24228736, \"end\": 24228874}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT049.lmp\", \"start\": 24228874, \"end\": 24229118}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT050.lmp\", \"start\": 24229118, \"end\": 24229365}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT051.lmp\", \"start\": 24229365, \"end\": 24229571}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT052.lmp\", \"start\": 24229571, \"end\": 24229815}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT053.lmp\", \"start\": 24229815, \"end\": 24230054}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT054.lmp\", \"start\": 24230054, \"end\": 24230252}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT055.lmp\", \"start\": 24230252, \"end\": 24230479}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT056.lmp\", \"start\": 24230479, \"end\": 24230718}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT057.lmp\", \"start\": 24230718, \"end\": 24230806}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT058.lmp\", \"start\": 24230806, \"end\": 24230912}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT059.lmp\", \"start\": 24230912, \"end\": 24231073}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT060.lmp\", \"start\": 24231073, \"end\": 24231165}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT061.lmp\", \"start\": 24231165, \"end\": 24231326}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT062.lmp\", \"start\": 24231326, \"end\": 24231520}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT063.lmp\", \"start\": 24231520, \"end\": 24231741}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT064.lmp\", \"start\": 24231741, \"end\": 24231942}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT065.lmp\", \"start\": 24231942, \"end\": 24232145}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT066.lmp\", \"start\": 24232145, \"end\": 24232371}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT067.lmp\", \"start\": 24232371, \"end\": 24232567}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT068.lmp\", \"start\": 24232567, \"end\": 24232725}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT069.lmp\", \"start\": 24232725, \"end\": 24232950}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT070.lmp\", \"start\": 24232950, \"end\": 24233177}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT071.lmp\", \"start\": 24233177, \"end\": 24233288}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT072.lmp\", \"start\": 24233288, \"end\": 24233479}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT073.lmp\", \"start\": 24233479, \"end\": 24233685}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT074.lmp\", \"start\": 24233685, \"end\": 24233847}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT075.lmp\", \"start\": 24233847, \"end\": 24234135}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT076.lmp\", \"start\": 24234135, \"end\": 24234358}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT077.lmp\", \"start\": 24234358, \"end\": 24234581}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT078.lmp\", \"start\": 24234581, \"end\": 24234751}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT079.lmp\", \"start\": 24234751, \"end\": 24234980}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT080.lmp\", \"start\": 24234980, \"end\": 24235194}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT081.lmp\", \"start\": 24235194, \"end\": 24235398}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT082.lmp\", \"start\": 24235398, \"end\": 24235557}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT083.lmp\", \"start\": 24235557, \"end\": 24235778}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT084.lmp\", \"start\": 24235778, \"end\": 24235974}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT085.lmp\", \"start\": 24235974, \"end\": 24236291}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT086.lmp\", \"start\": 24236291, \"end\": 24236493}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT087.lmp\", \"start\": 24236493, \"end\": 24236663}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT088.lmp\", \"start\": 24236663, \"end\": 24236863}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT089.lmp\", \"start\": 24236863, \"end\": 24237081}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT090.lmp\", \"start\": 24237081, \"end\": 24237272}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT091.lmp\", \"start\": 24237272, \"end\": 24237490}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT092.lmp\", \"start\": 24237490, \"end\": 24237673}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT093.lmp\", \"start\": 24237673, \"end\": 24237753}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT094.lmp\", \"start\": 24237753, \"end\": 24237845}, {\"filename\": \"/edge_base/chex3v/graphics/credit.lmp\", \"start\": 24237845, \"end\": 24357133}, {\"filename\": \"/edge_base/chex3v/graphics/help1.lmp\", \"start\": 24357133, \"end\": 24476421}, {\"filename\": \"/edge_base/chex3v/graphics/titlepic.lmp\", \"start\": 24476421, \"end\": 24595709}, {\"filename\": \"/edge_base/chex3v/graphics/wimap0.lmp\", \"start\": 24595709, \"end\": 24714997}, {\"filename\": \"/edge_base/chex3v/scripts/UMAPINFO.txt\", \"start\": 24714997, \"end\": 24719111}, {\"filename\": \"/edge_base/chex3v/scripts/fonts.ddf\", \"start\": 24719111, \"end\": 24719733}, {\"filename\": \"/edge_base/chex3v/scripts/games.ddf\", \"start\": 24719733, \"end\": 24722252}, {\"filename\": \"/edge_base/chex3v/scripts/language.ldf\", \"start\": 24722252, \"end\": 24722996}, {\"filename\": \"/edge_base/chex3v/scripts/levels.ddf\", \"start\": 24722996, \"end\": 24728532}, {\"filename\": \"/edge_base/chex3v/scripts/rscript.rts\", \"start\": 24728532, \"end\": 24728926}, {\"filename\": \"/edge_base/chex3v/scripts/styles.ddf\", \"start\": 24728926, \"end\": 24731976}, {\"filename\": \"/edge_base/chex3v/scripts/things.ddf\", \"start\": 24731976, \"end\": 24734103}, {\"filename\": \"/edge_base/chex3vm/graphics/BOSSBACK.lmp\", \"start\": 24734103, \"end\": 24853391}, {\"filename\": \"/edge_base/chex3vm/graphics/CQ1TITLE.lmp\", \"start\": 24853391, \"end\": 24972679}, {\"filename\": \"/edge_base/chex3vm/graphics/CQ2TITLE.lmp\", \"start\": 24972679, \"end\": 25091967}, {\"filename\": \"/edge_base/chex3vm/graphics/CREDIT.lmp\", \"start\": 25091967, \"end\": 25211255}, {\"filename\": \"/edge_base/chex3vm/graphics/ENDPIC.lmp\", \"start\": 25211255, \"end\": 25330543}, {\"filename\": \"/edge_base/chex3vm/graphics/HELP.lmp\", \"start\": 25330543, \"end\": 25449831}, {\"filename\": \"/edge_base/chex3vm/graphics/HELP1.lmp\", \"start\": 25449831, \"end\": 25569119}, {\"filename\": \"/edge_base/chex3vm/graphics/HELP2.lmp\", \"start\": 25569119, \"end\": 25688407}, {\"filename\": \"/edge_base/chex3vm/graphics/INTERPIC.lmp\", \"start\": 25688407, \"end\": 25807695}, {\"filename\": \"/edge_base/chex3vm/graphics/M_SKULL1.png\", \"start\": 25807695, \"end\": 25808262}, {\"filename\": \"/edge_base/chex3vm/graphics/M_SKULL2.png\", \"start\": 25808262, \"end\": 25809010}, {\"filename\": \"/edge_base/chex3vm/graphics/PFUB0.lmp\", \"start\": 25809010, \"end\": 25996458}, {\"filename\": \"/edge_base/chex3vm/graphics/PFUB1.lmp\", \"start\": 25996458, \"end\": 26064626}, {\"filename\": \"/edge_base/chex3vm/graphics/PFUB2.lmp\", \"start\": 26064626, \"end\": 26183914}, {\"filename\": \"/edge_base/chex3vm/graphics/STBAR.lmp\", \"start\": 26183914, \"end\": 26206882}, {\"filename\": \"/edge_base/chex3vm/graphics/TITLEPIC.lmp\", \"start\": 26206882, \"end\": 26326170}, {\"filename\": \"/edge_base/chex3vm/graphics/VICTORY2.lmp\", \"start\": 26326170, \"end\": 26445458}, {\"filename\": \"/edge_base/chex3vm/graphics/WIMAP0.lmp\", \"start\": 26445458, \"end\": 26564746}, {\"filename\": \"/edge_base/chex3vm/graphics/WIMAP1.lmp\", \"start\": 26564746, \"end\": 26684034}, {\"filename\": \"/edge_base/chex3vm/graphics/WIMAP2.lmp\", \"start\": 26684034, \"end\": 26803322}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT033.lmp\", \"start\": 26803322, \"end\": 26803439}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT034.lmp\", \"start\": 26803439, \"end\": 26803572}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT035.lmp\", \"start\": 26803572, \"end\": 26803823}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT036.lmp\", \"start\": 26803823, \"end\": 26804150}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT037.lmp\", \"start\": 26804150, \"end\": 26804413}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT038.lmp\", \"start\": 26804413, \"end\": 26804505}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT039.lmp\", \"start\": 26804505, \"end\": 26804663}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT040.lmp\", \"start\": 26804663, \"end\": 26804821}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT041.lmp\", \"start\": 26804821, \"end\": 26804981}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT042.lmp\", \"start\": 26804981, \"end\": 26805101}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT043.lmp\", \"start\": 26805101, \"end\": 26805176}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT044.lmp\", \"start\": 26805176, \"end\": 26805254}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT045.lmp\", \"start\": 26805254, \"end\": 26805328}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT046.lmp\", \"start\": 26805328, \"end\": 26805519}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT047.lmp\", \"start\": 26805519, \"end\": 26805746}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT048.lmp\", \"start\": 26805746, \"end\": 26805884}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT049.lmp\", \"start\": 26805884, \"end\": 26806128}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT050.lmp\", \"start\": 26806128, \"end\": 26806375}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT051.lmp\", \"start\": 26806375, \"end\": 26806581}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT052.lmp\", \"start\": 26806581, \"end\": 26806825}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT053.lmp\", \"start\": 26806825, \"end\": 26807064}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT054.lmp\", \"start\": 26807064, \"end\": 26807262}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT055.lmp\", \"start\": 26807262, \"end\": 26807489}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT056.lmp\", \"start\": 26807489, \"end\": 26807728}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT057.lmp\", \"start\": 26807728, \"end\": 26807816}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT058.lmp\", \"start\": 26807816, \"end\": 26807922}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT059.lmp\", \"start\": 26807922, \"end\": 26808083}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT060.lmp\", \"start\": 26808083, \"end\": 26808175}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT061.lmp\", \"start\": 26808175, \"end\": 26808336}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT062.lmp\", \"start\": 26808336, \"end\": 26808530}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT063.lmp\", \"start\": 26808530, \"end\": 26808751}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT064.lmp\", \"start\": 26808751, \"end\": 26808952}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT065.lmp\", \"start\": 26808952, \"end\": 26809155}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT066.lmp\", \"start\": 26809155, \"end\": 26809381}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT067.lmp\", \"start\": 26809381, \"end\": 26809577}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT068.lmp\", \"start\": 26809577, \"end\": 26809735}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT069.lmp\", \"start\": 26809735, \"end\": 26809960}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT070.lmp\", \"start\": 26809960, \"end\": 26810187}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT071.lmp\", \"start\": 26810187, \"end\": 26810298}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT072.lmp\", \"start\": 26810298, \"end\": 26810489}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT073.lmp\", \"start\": 26810489, \"end\": 26810695}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT074.lmp\", \"start\": 26810695, \"end\": 26810857}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT075.lmp\", \"start\": 26810857, \"end\": 26811145}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT076.lmp\", \"start\": 26811145, \"end\": 26811368}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT077.lmp\", \"start\": 26811368, \"end\": 26811591}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT078.lmp\", \"start\": 26811591, \"end\": 26811761}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT079.lmp\", \"start\": 26811761, \"end\": 26811990}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT080.lmp\", \"start\": 26811990, \"end\": 26812204}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT081.lmp\", \"start\": 26812204, \"end\": 26812408}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT082.lmp\", \"start\": 26812408, \"end\": 26812567}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT083.lmp\", \"start\": 26812567, \"end\": 26812788}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT084.lmp\", \"start\": 26812788, \"end\": 26812984}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT085.lmp\", \"start\": 26812984, \"end\": 26813301}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT086.lmp\", \"start\": 26813301, \"end\": 26813503}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT087.lmp\", \"start\": 26813503, \"end\": 26813673}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT088.lmp\", \"start\": 26813673, \"end\": 26813873}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT089.lmp\", \"start\": 26813873, \"end\": 26814091}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT090.lmp\", \"start\": 26814091, \"end\": 26814282}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT091.lmp\", \"start\": 26814282, \"end\": 26814500}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT092.lmp\", \"start\": 26814500, \"end\": 26814683}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT093.lmp\", \"start\": 26814683, \"end\": 26814763}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT094.lmp\", \"start\": 26814763, \"end\": 26814855}, {\"filename\": \"/edge_base/chex3vm/scripts/fonts.ddf\", \"start\": 26814855, \"end\": 26815477}, {\"filename\": \"/edge_base/chex3vm/scripts/games.ddf\", \"start\": 26815477, \"end\": 26816399}, {\"filename\": \"/edge_base/chex3vm/scripts/language.ldf\", \"start\": 26816399, \"end\": 26817073}, {\"filename\": \"/edge_base/chex3vm/scripts/levels.ddf\", \"start\": 26817073, \"end\": 26824476}, {\"filename\": \"/edge_base/chex3vm/scripts/styles.ddf\", \"start\": 26824476, \"end\": 26827526}, {\"filename\": \"/edge_base/chex3vm/scripts/things.ddf\", \"start\": 26827526, \"end\": 26830662}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 26830662, \"end\": 26949950}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 26949950, \"end\": 27069238}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 27069238, \"end\": 27188526}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 27188526, \"end\": 27307814}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 27307814, \"end\": 27427102}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 27427102, \"end\": 27546390}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 27546390, \"end\": 27665678}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 27665678, \"end\": 27784966}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 27784966, \"end\": 27814086}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 27814086, \"end\": 27843206}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 27843206, \"end\": 27872326}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 27872326, \"end\": 27877924}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 27877924, \"end\": 27883522}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 27883522, \"end\": 27889120}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 27889120, \"end\": 27902328}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 27902328, \"end\": 27915536}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 27915536, \"end\": 27928744}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 27928744, \"end\": 28048032}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 28048032, \"end\": 28167320}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 28167320, \"end\": 28286608}, {\"filename\": \"/edge_base/doom/scripts/games.ddf\", \"start\": 28286608, \"end\": 28287038}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 28287038, \"end\": 28288876}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 28288876, \"end\": 28303519}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 28303519, \"end\": 28326698}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 28326698, \"end\": 28349585}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 28349585, \"end\": 28372210}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 28372210, \"end\": 28399402}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 28399402, \"end\": 28422245}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 28422245, \"end\": 28439112}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 28439112, \"end\": 28465681}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 28465681, \"end\": 28492537}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 28492537, \"end\": 28520037}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 28520037, \"end\": 28544391}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 28544391, \"end\": 28570578}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 28570578, \"end\": 28582561}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 28582561, \"end\": 28602127}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 28602127, \"end\": 28621828}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 28621828, \"end\": 28642162}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 28642162, \"end\": 28666605}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 28666605, \"end\": 28685650}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 28685650, \"end\": 28723986}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 28723986, \"end\": 28736595}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 28736595, \"end\": 28748311}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 28748311, \"end\": 28760027}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 28760027, \"end\": 28798363}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 28798363, \"end\": 28810972}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 28810972, \"end\": 28930260}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 28930260, \"end\": 29049548}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 29049548, \"end\": 29168836}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 29168836, \"end\": 29288124}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 29288124, \"end\": 29407412}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 29407412, \"end\": 29409264}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 29409264, \"end\": 29423907}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 29423907, \"end\": 29447086}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 29447086, \"end\": 29469973}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 29469973, \"end\": 29492598}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 29492598, \"end\": 29519790}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 29519790, \"end\": 29542633}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 29542633, \"end\": 29661921}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 29661921, \"end\": 29781209}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 29781209, \"end\": 29900497}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 29900497, \"end\": 30019785}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 30019785, \"end\": 30139073}, {\"filename\": \"/edge_base/doom2/scripts/games.ddf\", \"start\": 30139073, \"end\": 30139524}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 30139524, \"end\": 30140955}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 30140955, \"end\": 30162235}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 30162235, \"end\": 30179915}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 30179915, \"end\": 30197595}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 30197595, \"end\": 30215275}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 30215275, \"end\": 30236555}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 30236555, \"end\": 30254235}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 30254235, \"end\": 30268158}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 30268158, \"end\": 30293377}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 30293377, \"end\": 30318609}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 30318609, \"end\": 30343812}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 30343812, \"end\": 30368564}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 30368564, \"end\": 30393768}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 30393768, \"end\": 30477338}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 30477338, \"end\": 30572147}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 30572147, \"end\": 30670918}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 30670918, \"end\": 30769689}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 30769689, \"end\": 30956180}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 30956180, \"end\": 31050989}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 31050989, \"end\": 31054400}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 31054400, \"end\": 31057811}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 31057811, \"end\": 31058156}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 31058156, \"end\": 31058503}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 31058503, \"end\": 31058934}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 31058934, \"end\": 31059343}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 31059343, \"end\": 31059764}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 31059764, \"end\": 31060211}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 31060211, \"end\": 31060532}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 31060532, \"end\": 31060922}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 31060922, \"end\": 31061311}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 31061311, \"end\": 31061762}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 31061762, \"end\": 31062121}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 31062121, \"end\": 31062445}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 31062445, \"end\": 31062758}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 31062758, \"end\": 31063054}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 31063054, \"end\": 31063477}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 31063477, \"end\": 31063882}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 31063882, \"end\": 31064262}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 31064262, \"end\": 31064670}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 31064670, \"end\": 31065133}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 31065133, \"end\": 31065552}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 31065552, \"end\": 31065960}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 31065960, \"end\": 31066368}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 31066368, \"end\": 31066772}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 31066772, \"end\": 31067244}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 31067244, \"end\": 31067659}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 31067659, \"end\": 31068007}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 31068007, \"end\": 31068368}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 31068368, \"end\": 31068737}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 31068737, \"end\": 31069078}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 31069078, \"end\": 31069499}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 31069499, \"end\": 31069902}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 31069902, \"end\": 31070320}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 31070320, \"end\": 31070823}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 31070823, \"end\": 31071248}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 31071248, \"end\": 31071651}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 31071651, \"end\": 31072084}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 31072084, \"end\": 31072500}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 31072500, \"end\": 31072905}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 31072905, \"end\": 31073324}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 31073324, \"end\": 31073749}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 31073749, \"end\": 31074151}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 31074151, \"end\": 31074620}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 31074620, \"end\": 31075054}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 31075054, \"end\": 31075443}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 31075443, \"end\": 31075898}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 31075898, \"end\": 31076408}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 31076408, \"end\": 31076818}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 31076818, \"end\": 31077225}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 31077225, \"end\": 31077642}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 31077642, \"end\": 31078061}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 31078061, \"end\": 31078487}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 31078487, \"end\": 31078872}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 31078872, \"end\": 31079287}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 31079287, \"end\": 31079711}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 31079711, \"end\": 31080156}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 31080156, \"end\": 31080582}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 31080582, \"end\": 31081047}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 31081047, \"end\": 31081465}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 31081465, \"end\": 31081852}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 31081852, \"end\": 31082286}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 31082286, \"end\": 31082682}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 31082682, \"end\": 31083033}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 31083033, \"end\": 31083346}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 31083346, \"end\": 31083666}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 31083666, \"end\": 31084124}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 31084124, \"end\": 31084524}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 31084524, \"end\": 31084958}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 31084958, \"end\": 31085365}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 31085365, \"end\": 31085761}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 31085761, \"end\": 31086152}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 31086152, \"end\": 31086596}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 31086596, \"end\": 31086998}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 31086998, \"end\": 31087378}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 31087378, \"end\": 31087822}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 31087822, \"end\": 31088291}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 31088291, \"end\": 31088665}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 31088665, \"end\": 31089086}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 31089086, \"end\": 31089502}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 31089502, \"end\": 31089951}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 31089951, \"end\": 31090341}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 31090341, \"end\": 31090799}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 31090799, \"end\": 31091196}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 31091196, \"end\": 31091607}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 31091607, \"end\": 31092041}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 31092041, \"end\": 31092443}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 31092443, \"end\": 31092904}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 31092904, \"end\": 31093321}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 31093321, \"end\": 31093765}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 31093765, \"end\": 31094158}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 31094158, \"end\": 31094593}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 31094593, \"end\": 31094983}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 31094983, \"end\": 31095344}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 31095344, \"end\": 31095732}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 31095732, \"end\": 31096122}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 31096122, \"end\": 31117293}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 31117293, \"end\": 31117949}, {\"filename\": \"/edge_base/freedoom1/scripts/games.ddf\", \"start\": 31117949, \"end\": 31118379}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 31118379, \"end\": 31126148}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 31126148, \"end\": 31137319}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 31137319, \"end\": 31142482}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 31142482, \"end\": 31151159}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 31151159, \"end\": 31154570}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 31154570, \"end\": 31157981}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 31157981, \"end\": 31158326}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 31158326, \"end\": 31158673}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 31158673, \"end\": 31159104}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 31159104, \"end\": 31159513}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 31159513, \"end\": 31159934}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 31159934, \"end\": 31160381}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 31160381, \"end\": 31160702}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 31160702, \"end\": 31161092}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 31161092, \"end\": 31161481}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 31161481, \"end\": 31161932}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 31161932, \"end\": 31162291}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 31162291, \"end\": 31162615}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 31162615, \"end\": 31162928}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 31162928, \"end\": 31163224}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 31163224, \"end\": 31163647}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 31163647, \"end\": 31164052}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 31164052, \"end\": 31164432}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 31164432, \"end\": 31164840}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 31164840, \"end\": 31165303}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 31165303, \"end\": 31165722}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 31165722, \"end\": 31166130}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 31166130, \"end\": 31166538}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 31166538, \"end\": 31166942}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 31166942, \"end\": 31167414}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 31167414, \"end\": 31167829}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 31167829, \"end\": 31168177}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 31168177, \"end\": 31168538}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 31168538, \"end\": 31168907}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 31168907, \"end\": 31169248}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 31169248, \"end\": 31169669}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 31169669, \"end\": 31170072}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 31170072, \"end\": 31170490}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 31170490, \"end\": 31170993}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 31170993, \"end\": 31171418}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 31171418, \"end\": 31171821}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 31171821, \"end\": 31172254}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 31172254, \"end\": 31172670}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 31172670, \"end\": 31173075}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 31173075, \"end\": 31173494}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 31173494, \"end\": 31173919}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 31173919, \"end\": 31174321}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 31174321, \"end\": 31174790}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 31174790, \"end\": 31175224}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 31175224, \"end\": 31175613}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 31175613, \"end\": 31176068}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 31176068, \"end\": 31176578}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 31176578, \"end\": 31176988}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 31176988, \"end\": 31177395}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 31177395, \"end\": 31177812}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 31177812, \"end\": 31178231}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 31178231, \"end\": 31178657}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 31178657, \"end\": 31179042}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 31179042, \"end\": 31179457}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 31179457, \"end\": 31179881}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 31179881, \"end\": 31180326}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 31180326, \"end\": 31180752}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 31180752, \"end\": 31181217}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 31181217, \"end\": 31181635}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 31181635, \"end\": 31182022}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 31182022, \"end\": 31182456}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 31182456, \"end\": 31182852}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 31182852, \"end\": 31183203}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 31183203, \"end\": 31183516}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 31183516, \"end\": 31183836}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 31183836, \"end\": 31184294}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 31184294, \"end\": 31184694}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 31184694, \"end\": 31185128}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 31185128, \"end\": 31185535}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 31185535, \"end\": 31185931}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 31185931, \"end\": 31186322}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 31186322, \"end\": 31186766}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 31186766, \"end\": 31187168}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 31187168, \"end\": 31187548}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 31187548, \"end\": 31187992}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 31187992, \"end\": 31188461}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 31188461, \"end\": 31188835}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 31188835, \"end\": 31189256}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 31189256, \"end\": 31189672}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 31189672, \"end\": 31190121}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 31190121, \"end\": 31190511}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 31190511, \"end\": 31190969}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 31190969, \"end\": 31191366}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 31191366, \"end\": 31191777}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 31191777, \"end\": 31192211}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 31192211, \"end\": 31192613}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 31192613, \"end\": 31193074}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 31193074, \"end\": 31193491}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 31193491, \"end\": 31193935}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 31193935, \"end\": 31194328}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 31194328, \"end\": 31194763}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 31194763, \"end\": 31195153}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 31195153, \"end\": 31195514}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 31195514, \"end\": 31195902}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 31195902, \"end\": 31196292}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 31196292, \"end\": 31217463}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 31217463, \"end\": 31218119}, {\"filename\": \"/edge_base/freedoom2/scripts/games.ddf\", \"start\": 31218119, \"end\": 31218570}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 31218570, \"end\": 31226339}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 31226339, \"end\": 31237371}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 31237371, \"end\": 31242163}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 31242163, \"end\": 31250833}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 31250833, \"end\": 31370121}, {\"filename\": \"/edge_base/hacx/graphics/ENDOOM.bin\", \"start\": 31370121, \"end\": 31374121}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 31374121, \"end\": 31493409}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 31493409, \"end\": 31612697}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 31612697, \"end\": 31616108}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 31616108, \"end\": 31619519}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 31619519, \"end\": 31738807}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 31738807, \"end\": 31741979}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 31741979, \"end\": 31749492}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 31749492, \"end\": 31749770}, {\"filename\": \"/edge_base/hacx/scripts/flats.ddf\", \"start\": 31749770, \"end\": 31750181}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 31750181, \"end\": 31750827}, {\"filename\": \"/edge_base/hacx/scripts/games.ddf\", \"start\": 31750827, \"end\": 31751278}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 31751278, \"end\": 31757101}, {\"filename\": \"/edge_base/hacx/scripts/levels.ddf\", \"start\": 31757101, \"end\": 31762043}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 31762043, \"end\": 31762931}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 31762931, \"end\": 31764412}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 31764412, \"end\": 31767137}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 31767137, \"end\": 31770346}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 31770346, \"end\": 31857853}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 31857853, \"end\": 31863155}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 31863155, \"end\": 31877959}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 31877959, \"end\": 31892985}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 31892985, \"end\": 31907559}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 31907559, \"end\": 31913916}, {\"filename\": \"/edge_base/hacx/sprites/CRYXHRA0.lmp\", \"start\": 31913916, \"end\": 31915016}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 31915016, \"end\": 31955288}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 31955288, \"end\": 31990454}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 31990454, \"end\": 32023607}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 32023607, \"end\": 32059990}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 32059990, \"end\": 32091520}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 32091520, \"end\": 32126626}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 32126626, \"end\": 32150769}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 32150769, \"end\": 32180435}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 32180435, \"end\": 32191299}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 32191299, \"end\": 32204693}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 32204693, \"end\": 32219142}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 32219142, \"end\": 32233250}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 32233250, \"end\": 32242335}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 32242335, \"end\": 32251420}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 32251420, \"end\": 32266931}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 32266931, \"end\": 32282672}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 32282672, \"end\": 32298705}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 32298705, \"end\": 32314832}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 32314832, \"end\": 32331118}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 32331118, \"end\": 32347272}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 32347272, \"end\": 32363088}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 32363088, \"end\": 32378599}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 32378599, \"end\": 32394282}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 32394282, \"end\": 32410487}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 32410487, \"end\": 32419549}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 32419549, \"end\": 32429040}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 32429040, \"end\": 32437699}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 32437699, \"end\": 32450781}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 32450781, \"end\": 32470020}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 32470020, \"end\": 32488267}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 32488267, \"end\": 32492267}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 32492267, \"end\": 32583013}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 32583013, \"end\": 32673759}, {\"filename\": \"/edge_base/harmony/graphics/CWILV00.lmp\", \"start\": 32673759, \"end\": 32675809}, {\"filename\": \"/edge_base/harmony/graphics/CWILV01.lmp\", \"start\": 32675809, \"end\": 32677961}, {\"filename\": \"/edge_base/harmony/graphics/CWILV02.lmp\", \"start\": 32677961, \"end\": 32679739}, {\"filename\": \"/edge_base/harmony/graphics/CWILV03.lmp\", \"start\": 32679739, \"end\": 32682339}, {\"filename\": \"/edge_base/harmony/graphics/CWILV04.lmp\", \"start\": 32682339, \"end\": 32684430}, {\"filename\": \"/edge_base/harmony/graphics/CWILV05.lmp\", \"start\": 32684430, \"end\": 32688296}, {\"filename\": \"/edge_base/harmony/graphics/CWILV06.lmp\", \"start\": 32688296, \"end\": 32691884}, {\"filename\": \"/edge_base/harmony/graphics/CWILV07.lmp\", \"start\": 32691884, \"end\": 32694379}, {\"filename\": \"/edge_base/harmony/graphics/CWILV08.lmp\", \"start\": 32694379, \"end\": 32697218}, {\"filename\": \"/edge_base/harmony/graphics/CWILV09.lmp\", \"start\": 32697218, \"end\": 32701053}, {\"filename\": \"/edge_base/harmony/graphics/CWILV10.lmp\", \"start\": 32701053, \"end\": 32702671}, {\"filename\": \"/edge_base/harmony/graphics/CWILV11.lmp\", \"start\": 32702671, \"end\": 32704400}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 32704400, \"end\": 32793442}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 32793442, \"end\": 32884188}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 32884188, \"end\": 32887385}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 32887385, \"end\": 32888803}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 32888803, \"end\": 32891177}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 32891177, \"end\": 32892127}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 32892127, \"end\": 32893986}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 32893986, \"end\": 32894999}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 32894999, \"end\": 32895939}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 32895939, \"end\": 32896868}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 32896868, \"end\": 32897783}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 32897783, \"end\": 32898721}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 32898721, \"end\": 32902132}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 32902132, \"end\": 32905543}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 32905543, \"end\": 32994585}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 32994585, \"end\": 32994687}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 32994687, \"end\": 32994735}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 32994735, \"end\": 32995866}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 32995866, \"end\": 32996339}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 32996339, \"end\": 32996459}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 32996459, \"end\": 32997559}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 32997559, \"end\": 32997809}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 32997809, \"end\": 32997955}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 32997955, \"end\": 32998241}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 32998241, \"end\": 32998494}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 32998494, \"end\": 32998718}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 32998718, \"end\": 32998973}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 32998973, \"end\": 32999235}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 32999235, \"end\": 32999452}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 32999452, \"end\": 32999714}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 32999714, \"end\": 32999973}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 32999973, \"end\": 33000213}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 33000213, \"end\": 33001661}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 33001661, \"end\": 33003006}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 33003006, \"end\": 33004175}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 33004175, \"end\": 33005152}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 33005152, \"end\": 33005401}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 33005401, \"end\": 33007176}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 33007176, \"end\": 33008885}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 33008885, \"end\": 33009732}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 33009732, \"end\": 33010532}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 33010532, \"end\": 33018420}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 33018420, \"end\": 33018736}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 33018736, \"end\": 33019083}, {\"filename\": \"/edge_base/harmony/scripts/games.ddf\", \"start\": 33019083, \"end\": 33019534}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 33019534, \"end\": 33023264}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 33023264, \"end\": 33039553}, {\"filename\": \"/edge_base/harmony/scripts/lua/edge_hud.lua\", \"start\": 33039553, \"end\": 33042906}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 33042906, \"end\": 33044379}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 33044379, \"end\": 33046806}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 33046806, \"end\": 33116826}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 33116826, \"end\": 33120606}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 33120606, \"end\": 33122348}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 33122348, \"end\": 33125034}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 33125034, \"end\": 33126465}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 33126465, \"end\": 33128649}, {\"filename\": \"/edge_base/harmonyc/graphics/BOSSBACK.lmp\", \"start\": 33128649, \"end\": 33217691}, {\"filename\": \"/edge_base/harmonyc/graphics/CREDIT.lmp\", \"start\": 33217691, \"end\": 33306733}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV00.lmp\", \"start\": 33306733, \"end\": 33308783}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV01.lmp\", \"start\": 33308783, \"end\": 33310935}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV02.lmp\", \"start\": 33310935, \"end\": 33314954}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV03.lmp\", \"start\": 33314954, \"end\": 33317554}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV04.lmp\", \"start\": 33317554, \"end\": 33319645}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV05.lmp\", \"start\": 33319645, \"end\": 33323511}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV06.lmp\", \"start\": 33323511, \"end\": 33327099}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV07.lmp\", \"start\": 33327099, \"end\": 33329594}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV08.lmp\", \"start\": 33329594, \"end\": 33332428}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV09.lmp\", \"start\": 33332428, \"end\": 33336263}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV10.lmp\", \"start\": 33336263, \"end\": 33337881}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV11.lmp\", \"start\": 33337881, \"end\": 33339434}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV12.lmp\", \"start\": 33339434, \"end\": 33341084}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV13.lmp\", \"start\": 33341084, \"end\": 33342936}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV14.lmp\", \"start\": 33342936, \"end\": 33345252}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV30.lmp\", \"start\": 33345252, \"end\": 33347104}, {\"filename\": \"/edge_base/harmonyc/graphics/HELP.lmp\", \"start\": 33347104, \"end\": 33436146}, {\"filename\": \"/edge_base/harmonyc/graphics/INTERPIC.lmp\", \"start\": 33436146, \"end\": 33526892}, {\"filename\": \"/edge_base/harmonyc/graphics/M_EPISOD.lmp\", \"start\": 33526892, \"end\": 33530089}, {\"filename\": \"/edge_base/harmonyc/graphics/M_JKILL.lmp\", \"start\": 33530089, \"end\": 33531507}, {\"filename\": \"/edge_base/harmonyc/graphics/M_NEWG.lmp\", \"start\": 33531507, \"end\": 33533881}, {\"filename\": \"/edge_base/harmonyc/graphics/M_NGAME.lmp\", \"start\": 33533881, \"end\": 33534831}, {\"filename\": \"/edge_base/harmonyc/graphics/M_RDTHIS.lmp\", \"start\": 33534831, \"end\": 33536690}, {\"filename\": \"/edge_base/harmonyc/graphics/M_SAVEG.lmp\", \"start\": 33536690, \"end\": 33537703}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERML.lmp\", \"start\": 33537703, \"end\": 33537843}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERMM.lmp\", \"start\": 33537843, \"end\": 33538049}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERMO.lmp\", \"start\": 33538049, \"end\": 33538157}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERMR.lmp\", \"start\": 33538157, \"end\": 33538297}, {\"filename\": \"/edge_base/harmonyc/graphics/STBAR.lmp\", \"start\": 33538297, \"end\": 33555771}, {\"filename\": \"/edge_base/harmonyc/graphics/TITLEPIC.lmp\", \"start\": 33555771, \"end\": 33644813}, {\"filename\": \"/edge_base/harmonyc/graphics/WICOLON.lmp\", \"start\": 33644813, \"end\": 33644915}, {\"filename\": \"/edge_base/harmonyc/graphics/WIF.lmp\", \"start\": 33644915, \"end\": 33644963}, {\"filename\": \"/edge_base/harmonyc/graphics/WIFRGS.lmp\", \"start\": 33644963, \"end\": 33646094}, {\"filename\": \"/edge_base/harmonyc/graphics/WIKILRS.lmp\", \"start\": 33646094, \"end\": 33646567}, {\"filename\": \"/edge_base/harmonyc/graphics/WIMINUS.lmp\", \"start\": 33646567, \"end\": 33646687}, {\"filename\": \"/edge_base/harmonyc/graphics/WIMSTT.lmp\", \"start\": 33646687, \"end\": 33647787}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM0.lmp\", \"start\": 33647787, \"end\": 33648037}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM1.lmp\", \"start\": 33648037, \"end\": 33648183}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM2.lmp\", \"start\": 33648183, \"end\": 33648469}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM3.lmp\", \"start\": 33648469, \"end\": 33648722}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM4.lmp\", \"start\": 33648722, \"end\": 33648946}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM5.lmp\", \"start\": 33648946, \"end\": 33649201}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM6.lmp\", \"start\": 33649201, \"end\": 33649463}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM7.lmp\", \"start\": 33649463, \"end\": 33649680}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM8.lmp\", \"start\": 33649680, \"end\": 33649942}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM9.lmp\", \"start\": 33649942, \"end\": 33650201}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTF.lmp\", \"start\": 33650201, \"end\": 33650441}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTI.lmp\", \"start\": 33650441, \"end\": 33651889}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTK.lmp\", \"start\": 33651889, \"end\": 33653234}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTS.lmp\", \"start\": 33653234, \"end\": 33654403}, {\"filename\": \"/edge_base/harmonyc/graphics/WIPAR.lmp\", \"start\": 33654403, \"end\": 33655380}, {\"filename\": \"/edge_base/harmonyc/graphics/WIPCNT.lmp\", \"start\": 33655380, \"end\": 33655629}, {\"filename\": \"/edge_base/harmonyc/graphics/WISCRT2.lmp\", \"start\": 33655629, \"end\": 33657404}, {\"filename\": \"/edge_base/harmonyc/graphics/WISUCKS.lmp\", \"start\": 33657404, \"end\": 33659113}, {\"filename\": \"/edge_base/harmonyc/graphics/WITIME.lmp\", \"start\": 33659113, \"end\": 33659960}, {\"filename\": \"/edge_base/harmonyc/graphics/WIVCTMS.lmp\", \"start\": 33659960, \"end\": 33660760}, {\"filename\": \"/edge_base/harmonyc/scripts/attacks.ddf\", \"start\": 33660760, \"end\": 33663776}, {\"filename\": \"/edge_base/harmonyc/scripts/colmap.ddf\", \"start\": 33663776, \"end\": 33664092}, {\"filename\": \"/edge_base/harmonyc/scripts/language.ldf\", \"start\": 33664092, \"end\": 33664865}, {\"filename\": \"/edge_base/harmonyc/scripts/levels.ddf\", \"start\": 33664865, \"end\": 33669683}, {\"filename\": \"/edge_base/harmonyc/scripts/lua/edge_hud.lua\", \"start\": 33669683, \"end\": 33674664}, {\"filename\": \"/edge_base/harmonyc/scripts/styles.ddf\", \"start\": 33674664, \"end\": 33677091}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 33677091, \"end\": 33697605}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 33697605, \"end\": 33816893}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 33816893, \"end\": 33873317}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 33873317, \"end\": 33992605}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 33992605, \"end\": 34111893}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 34111893, \"end\": 34231181}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 34231181, \"end\": 34350469}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 34350469, \"end\": 34351160}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 34351160, \"end\": 34470448}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 34470448, \"end\": 34589736}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 34589736, \"end\": 34709024}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 34709024, \"end\": 34710184}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 34710184, \"end\": 34710933}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 34710933, \"end\": 34715174}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 34715174, \"end\": 34719415}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 34719415, \"end\": 34770038}, {\"filename\": \"/edge_base/heretic/graphics/WIENTER.png\", \"start\": 34770038, \"end\": 34770937}, {\"filename\": \"/edge_base/heretic/graphics/WIF.png\", \"start\": 34770937, \"end\": 34771683}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL00.png\", \"start\": 34771683, \"end\": 34772859}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL01.png\", \"start\": 34772859, \"end\": 34774068}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL02.png\", \"start\": 34774068, \"end\": 34775333}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL03.png\", \"start\": 34775333, \"end\": 34776645}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL04.png\", \"start\": 34776645, \"end\": 34778059}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL05.png\", \"start\": 34778059, \"end\": 34779373}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL06.png\", \"start\": 34779373, \"end\": 34780760}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL07.png\", \"start\": 34780760, \"end\": 34782034}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL08.png\", \"start\": 34782034, \"end\": 34783088}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL09.png\", \"start\": 34783088, \"end\": 34784086}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL10.png\", \"start\": 34784086, \"end\": 34785178}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL11.png\", \"start\": 34785178, \"end\": 34786435}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL12.png\", \"start\": 34786435, \"end\": 34787918}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL13.png\", \"start\": 34787918, \"end\": 34789268}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL14.png\", \"start\": 34789268, \"end\": 34790872}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL15.png\", \"start\": 34790872, \"end\": 34792373}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL16.png\", \"start\": 34792373, \"end\": 34793651}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL17.png\", \"start\": 34793651, \"end\": 34794883}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK0.png\", \"start\": 34794883, \"end\": 34795865}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK1.png\", \"start\": 34795865, \"end\": 34796741}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK10.png\", \"start\": 34796741, \"end\": 34797382}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK11.png\", \"start\": 34797382, \"end\": 34798026}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK12.png\", \"start\": 34798026, \"end\": 34798854}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK13.png\", \"start\": 34798854, \"end\": 34799810}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK14.png\", \"start\": 34799810, \"end\": 34801002}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK15.png\", \"start\": 34801002, \"end\": 34802022}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK2.png\", \"start\": 34802022, \"end\": 34802772}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK3.png\", \"start\": 34802772, \"end\": 34803326}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK4.png\", \"start\": 34803326, \"end\": 34803958}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK5.png\", \"start\": 34803958, \"end\": 34804591}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK6.png\", \"start\": 34804591, \"end\": 34805180}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK7.png\", \"start\": 34805180, \"end\": 34805683}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK8.png\", \"start\": 34805683, \"end\": 34806364}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK9.png\", \"start\": 34806364, \"end\": 34806948}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY0.png\", \"start\": 34806948, \"end\": 34808073}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY1.png\", \"start\": 34808073, \"end\": 34809179}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY10.png\", \"start\": 34809179, \"end\": 34810105}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY11.png\", \"start\": 34810105, \"end\": 34810811}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY12.png\", \"start\": 34810811, \"end\": 34811737}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY13.png\", \"start\": 34811737, \"end\": 34812857}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY14.png\", \"start\": 34812857, \"end\": 34813992}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY15.png\", \"start\": 34813992, \"end\": 34815165}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY2.png\", \"start\": 34815165, \"end\": 34816077}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY3.png\", \"start\": 34816077, \"end\": 34816777}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY4.png\", \"start\": 34816777, \"end\": 34817698}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY5.png\", \"start\": 34817698, \"end\": 34818800}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY6.png\", \"start\": 34818800, \"end\": 34819898}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY7.png\", \"start\": 34819898, \"end\": 34821012}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY8.png\", \"start\": 34821012, \"end\": 34822129}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY9.png\", \"start\": 34822129, \"end\": 34823234}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 34823234, \"end\": 34824957}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 34824957, \"end\": 34870914}, {\"filename\": \"/edge_base/heretic/scripts/colmap.ddf\", \"start\": 34870914, \"end\": 34871207}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 34871207, \"end\": 34871911}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 34871911, \"end\": 34873066}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 34873066, \"end\": 34876033}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 34876033, \"end\": 34879279}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 34879279, \"end\": 34887759}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 34887759, \"end\": 34901349}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 34901349, \"end\": 34906184}, {\"filename\": \"/edge_base/heretic/scripts/lua/edge_hud.lua\", \"start\": 34906184, \"end\": 34925420}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 34925420, \"end\": 34927576}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 34927576, \"end\": 34940985}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 34940985, \"end\": 34944977}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 34944977, \"end\": 34956663}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 34956663, \"end\": 34962155}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 34962155, \"end\": 34962610}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 34962610, \"end\": 35049924}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 35049924, \"end\": 35061549}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 35061549, \"end\": 35078679}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 35078679, \"end\": 35096725}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 35096725, \"end\": 35216013}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 35216013, \"end\": 35335301}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 35335301, \"end\": 35454589}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 35454589, \"end\": 35573877}, {\"filename\": \"/edge_base/plutonia/scripts/games.ddf\", \"start\": 35573877, \"end\": 35574328}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 35574328, \"end\": 35575754}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 35575754, \"end\": 35578928}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 35578928, \"end\": 35593959}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 35593959, \"end\": 35608955}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 35608955, \"end\": 35622034}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 35622034, \"end\": 35635113}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 35635113, \"end\": 35650144}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 35650144, \"end\": 35665140}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 35665140, \"end\": 35693075}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 35693075, \"end\": 35704715}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 35704715, \"end\": 35716624}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 35716624, \"end\": 35728533}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 35728533, \"end\": 35756468}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 35756468, \"end\": 35768108}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 35768108, \"end\": 35966858}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 35966858, \"end\": 36057451}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 36057451, \"end\": 36140835}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 36140835, \"end\": 36224219}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 36224219, \"end\": 36422969}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 36422969, \"end\": 36513562}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 36513562, \"end\": 36538853}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 36538853, \"end\": 36556323}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 36556323, \"end\": 36558462}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 36558462, \"end\": 36561221}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 36561221, \"end\": 36563408}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 36563408, \"end\": 36565525}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 36565525, \"end\": 36568800}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 36568800, \"end\": 36570848}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 36570848, \"end\": 36573282}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 36573282, \"end\": 36575119}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 36575119, \"end\": 36577187}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 36577187, \"end\": 36578432}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 36578432, \"end\": 36581001}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 36581001, \"end\": 36583221}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 36583221, \"end\": 36585441}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 36585441, \"end\": 36613533}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 36613533, \"end\": 36614121}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 36614121, \"end\": 36614703}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 36614703, \"end\": 36615298}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 36615298, \"end\": 36615886}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 36615886, \"end\": 36618260}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 36618260, \"end\": 36621671}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 36621671, \"end\": 36625082}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 36625082, \"end\": 36627007}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 36627007, \"end\": 36628788}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 36628788, \"end\": 36630387}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 36630387, \"end\": 36631403}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 36631403, \"end\": 36633430}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 36633430, \"end\": 36635997}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 36635997, \"end\": 36637712}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 36637712, \"end\": 36639440}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 36639440, \"end\": 36642824}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 36642824, \"end\": 36646328}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 36646328, \"end\": 36649171}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 36649171, \"end\": 36650550}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 36650550, \"end\": 36652186}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 36652186, \"end\": 36654506}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 36654506, \"end\": 36655716}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 36655716, \"end\": 36658413}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 36658413, \"end\": 36661500}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 36661500, \"end\": 36663141}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 36663141, \"end\": 36665029}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 36665029, \"end\": 36666216}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 36666216, \"end\": 36668177}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 36668177, \"end\": 36671293}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 36671293, \"end\": 36673054}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 36673054, \"end\": 36675913}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 36675913, \"end\": 36677626}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 36677626, \"end\": 36679890}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 36679890, \"end\": 36681123}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 36681123, \"end\": 36681866}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 36681866, \"end\": 36685644}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 36685644, \"end\": 36687496}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 36687496, \"end\": 36689134}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 36689134, \"end\": 36690256}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 36690256, \"end\": 36692595}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 36692595, \"end\": 36694598}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 36694598, \"end\": 36696732}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 36696732, \"end\": 36699798}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 36699798, \"end\": 36701793}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 36701793, \"end\": 36703653}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 36703653, \"end\": 36703915}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 36703915, \"end\": 36705121}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 36705121, \"end\": 36706186}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 36706186, \"end\": 36707216}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 36707216, \"end\": 36707978}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 36707978, \"end\": 36709545}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 36709545, \"end\": 36710459}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 36710459, \"end\": 36710603}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 36710603, \"end\": 36711327}, {\"filename\": \"/edge_base/rekkr/scripts/fonts.ddf\", \"start\": 36711327, \"end\": 36711582}, {\"filename\": \"/edge_base/rekkr/scripts/games.ddf\", \"start\": 36711582, \"end\": 36712012}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 36712012, \"end\": 36720142}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 36720142, \"end\": 36721770}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 36721770, \"end\": 36726111}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 36726111, \"end\": 36728351}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 36728351, \"end\": 36730286}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 36730286, \"end\": 36730911}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 36730911, \"end\": 36731886}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 36731886, \"end\": 36732861}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 36732861, \"end\": 36733836}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 36733836, \"end\": 36734467}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 36734467, \"end\": 36735050}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 36735050, \"end\": 36736017}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 36736017, \"end\": 36736984}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 36736984, \"end\": 36737951}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 36737951, \"end\": 36738533}, {\"filename\": \"/edge_base/strife/games.ddf\", \"start\": 36738533, \"end\": 36739389}, {\"filename\": \"/edge_base/strife/images.ddf\", \"start\": 36739389, \"end\": 36739742}, {\"filename\": \"/edge_base/strife/playlist.ddf\", \"start\": 36739742, \"end\": 36740749}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 36740749, \"end\": 36860037}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 36860037, \"end\": 36979325}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 36979325, \"end\": 37098613}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 37098613, \"end\": 37217901}, {\"filename\": \"/edge_base/tnt/scripts/games.ddf\", \"start\": 37217901, \"end\": 37218352}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 37218352, \"end\": 37219782}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 37219782, \"end\": 37223250}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 37223250, \"end\": 37239243}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 37239243, \"end\": 37258709}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 37258709, \"end\": 37276135}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 37276135, \"end\": 37292042}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 37292042, \"end\": 37332160}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 37332160, \"end\": 37351484}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 37351484, \"end\": 37352795}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 37352795, \"end\": 37357318}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 37357318, \"end\": 37358547}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 37358547, \"end\": 37364764}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 37364764, \"end\": 37368891}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 37368891, \"end\": 37370433}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 37370433, \"end\": 37394904}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 37394904, \"end\": 37402606}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 37402606, \"end\": 37410485}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 37410485, \"end\": 37417833}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 37417833, \"end\": 37442304}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 37442304, \"end\": 37449645}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 37449645, \"end\": 37450157}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 37450157, \"end\": 37458861}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 37458861, \"end\": 37459117}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 37459117, \"end\": 37462957}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 37462957, \"end\": 37464493}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 37464493, \"end\": 37464749}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 37464749, \"end\": 37466029}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 37466029, \"end\": 37474733}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 37474733, \"end\": 37476525}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 37476525, \"end\": 37477805}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 37477805, \"end\": 37479085}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 37479085, \"end\": 37480365}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 37480365, \"end\": 37481645}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 37481645, \"end\": 37482925}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 37482925, \"end\": 37484205}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 37484205, \"end\": 37485485}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 37485485, \"end\": 37486765}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 37486765, \"end\": 37488045}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 37488045, \"end\": 37489325}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 37489325, \"end\": 37490605}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 37490605, \"end\": 37491885}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 37491885, \"end\": 37500589}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 37500589, \"end\": 37567477}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 37567477, \"end\": 37581820}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 37581820, \"end\": 37749419}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 37749419, \"end\": 37816307}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 37816307, \"end\": 37823411}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 37823411, \"end\": 37868042}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 37868042, \"end\": 37868225}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 37868225, \"end\": 37869369}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 37869369, \"end\": 37872399}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 37872399, \"end\": 37875810}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 37875810, \"end\": 37879221}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 37879221, \"end\": 37879365}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 37879365, \"end\": 37879507}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 37879507, \"end\": 37879634}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 37879634, \"end\": 37879769}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 37879769, \"end\": 37882366}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 37882366, \"end\": 37883774}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 37883774, \"end\": 37885182}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 37885182, \"end\": 37886590}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 37886590, \"end\": 37887998}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 37887998, \"end\": 37889406}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 37889406, \"end\": 37890814}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 37890814, \"end\": 37892222}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 37892222, \"end\": 37893630}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 37893630, \"end\": 37893750}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 37893750, \"end\": 37893870}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 37893870, \"end\": 37893990}, {\"filename\": \"/edge_defs/graphics/STKEYS9.PNG\", \"start\": 37893990, \"end\": 37894174}, {\"filename\": \"/edge_defs/graphics/STKEYSA.PNG\", \"start\": 37894174, \"end\": 37894426}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 37894426, \"end\": 37895904}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 37895904, \"end\": 37897382}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 37897382, \"end\": 37898860}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 37898860, \"end\": 37900338}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 37900338, \"end\": 37901816}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 37901816, \"end\": 37903294}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 37903294, \"end\": 37904772}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 37904772, \"end\": 37906250}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR1.png\", \"start\": 37906250, \"end\": 37906443}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR2.png\", \"start\": 37906443, \"end\": 37906628}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR3.png\", \"start\": 37906628, \"end\": 37906813}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR4.png\", \"start\": 37906813, \"end\": 37907000}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR5.png\", \"start\": 37907000, \"end\": 37907266}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR6.png\", \"start\": 37907266, \"end\": 37907607}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR7.png\", \"start\": 37907607, \"end\": 37907901}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR8.png\", \"start\": 37907901, \"end\": 37909285}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR9.png\", \"start\": 37909285, \"end\": 37909704}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 37909704, \"end\": 37910061}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 37910061, \"end\": 37910406}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 37910406, \"end\": 37910762}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 37910762, \"end\": 37911110}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 37911110, \"end\": 37911449}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 37911449, \"end\": 37911767}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 37911767, \"end\": 37912117}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 37912117, \"end\": 37912473}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 37912473, \"end\": 37912752}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 37912752, \"end\": 37913077}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 37913077, \"end\": 37913446}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 37913446, \"end\": 37913770}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 37913770, \"end\": 37914136}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 37914136, \"end\": 37914492}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 37914492, \"end\": 37914865}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 37914865, \"end\": 37915199}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 37915199, \"end\": 37915574}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 37915574, \"end\": 37915932}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 37915932, \"end\": 37916283}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 37916283, \"end\": 37916602}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 37916602, \"end\": 37916948}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 37916948, \"end\": 37917277}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 37917277, \"end\": 37917632}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 37917632, \"end\": 37917983}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 37917983, \"end\": 37918332}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 37918332, \"end\": 37918670}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 37918670, \"end\": 37918959}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 37918959, \"end\": 37919273}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 37919273, \"end\": 37919516}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 37919516, \"end\": 37919759}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 37919759, \"end\": 37920025}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 37920025, \"end\": 37920258}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 37920258, \"end\": 37920596}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 37920596, \"end\": 37920889}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 37920889, \"end\": 37921227}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 37921227, \"end\": 37921556}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 37921556, \"end\": 37921885}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 37921885, \"end\": 37922218}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 37922218, \"end\": 37922554}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 37922554, \"end\": 37922851}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 37922851, \"end\": 37923191}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 37923191, \"end\": 37923531}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 37923531, \"end\": 37923766}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 37923766, \"end\": 37924086}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 37924086, \"end\": 37924370}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 37924370, \"end\": 37924700}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 37924700, \"end\": 37925038}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 37925038, \"end\": 37925353}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 37925353, \"end\": 37925682}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 37925682, \"end\": 37926004}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 37926004, \"end\": 37926321}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 37926321, \"end\": 37926660}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 37926660, \"end\": 37926980}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 37926980, \"end\": 37927254}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 37927254, \"end\": 37927561}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 37927561, \"end\": 37927906}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 37927906, \"end\": 37928204}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 37928204, \"end\": 37928558}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 37928558, \"end\": 37928897}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 37928897, \"end\": 37929236}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 37929236, \"end\": 37929560}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 37929560, \"end\": 37929900}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 37929900, \"end\": 37930225}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 37930225, \"end\": 37930564}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 37930564, \"end\": 37930870}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 37930870, \"end\": 37931204}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 37931204, \"end\": 37931536}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 37931536, \"end\": 37931884}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 37931884, \"end\": 37932225}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 37932225, \"end\": 37932550}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 37932550, \"end\": 37932882}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 37932882, \"end\": 37933211}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 37933211, \"end\": 37933445}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 37933445, \"end\": 37933691}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 37933691, \"end\": 37934017}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 37934017, \"end\": 37934304}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 37934304, \"end\": 37934622}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 37934622, \"end\": 37934942}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 37934942, \"end\": 37935253}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 37935253, \"end\": 37935570}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 37935570, \"end\": 37935885}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 37935885, \"end\": 37936187}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 37936187, \"end\": 37936515}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 37936515, \"end\": 37936847}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 37936847, \"end\": 37937095}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 37937095, \"end\": 37937346}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_1x.png\", \"start\": 37937346, \"end\": 37944682}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_2x.png\", \"start\": 37944682, \"end\": 37952071}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_1x.png\", \"start\": 37952071, \"end\": 37952235}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_2x.png\", \"start\": 37952235, \"end\": 37952409}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_1x.png\", \"start\": 37952409, \"end\": 37959712}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_2x.png\", \"start\": 37959712, \"end\": 37967047}, {\"filename\": \"/edge_defs/movies/ECINTRO.mpg\", \"start\": 37967047, \"end\": 38644935}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 38644935, \"end\": 38647125}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 38647125, \"end\": 38672450}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 38672450, \"end\": 38687901}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 38687901, \"end\": 38705686}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 38705686, \"end\": 38710211}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 38710211, \"end\": 38715878}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 38715878, \"end\": 38717415}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 38717415, \"end\": 38722024}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 38722024, \"end\": 38742093}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 38742093, \"end\": 38862141}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 38862141, \"end\": 38878331}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 38878331, \"end\": 38976938}, {\"filename\": \"/edge_defs/scripts/lua/core/base64.lua\", \"start\": 38976938, \"end\": 38984317}, {\"filename\": \"/edge_defs/scripts/lua/core/debugger.lua\", \"start\": 38984317, \"end\": 39006420}, {\"filename\": \"/edge_defs/scripts/lua/core/json.lua\", \"start\": 39006420, \"end\": 39016444}, {\"filename\": \"/edge_defs/scripts/lua/core/mat2.lua\", \"start\": 39016444, \"end\": 39021378}, {\"filename\": \"/edge_defs/scripts/lua/core/mat3.lua\", \"start\": 39021378, \"end\": 39030080}, {\"filename\": \"/edge_defs/scripts/lua/core/mat4.lua\", \"start\": 39030080, \"end\": 39043663}, {\"filename\": \"/edge_defs/scripts/lua/core/mat4Extended.lua\", \"start\": 39043663, \"end\": 39047725}, {\"filename\": \"/edge_defs/scripts/lua/core/quat.lua\", \"start\": 39047725, \"end\": 39051775}, {\"filename\": \"/edge_defs/scripts/lua/core/vec2.lua\", \"start\": 39051775, \"end\": 39054900}, {\"filename\": \"/edge_defs/scripts/lua/core/vec3.lua\", \"start\": 39054900, \"end\": 39058592}, {\"filename\": \"/edge_defs/scripts/lua/core/vec4.lua\", \"start\": 39058592, \"end\": 39062631}, {\"filename\": \"/edge_defs/scripts/lua/edge_api.lua\", \"start\": 39062631, \"end\": 39071684}, {\"filename\": \"/edge_defs/scripts/lua/edge_hud.lua\", \"start\": 39071684, \"end\": 39090642}, {\"filename\": \"/edge_defs/scripts/movies.ddf\", \"start\": 39090642, \"end\": 39090695}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 39090695, \"end\": 39093613}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 39093613, \"end\": 39095304}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 39095304, \"end\": 39114250}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 39114250, \"end\": 39125821}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 39125821, \"end\": 39132178}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 39132178, \"end\": 39136482}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 39136482, \"end\": 39261884}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 39261884, \"end\": 39262821}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 39262821, \"end\": 39268515}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 39268515, \"end\": 39268598}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 39268598, \"end\": 39268644}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 39268644, \"end\": 39268685}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 39268685, \"end\": 39268873}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 39268873, \"end\": 39268972}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 39268972, \"end\": 39269061}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 39269061, \"end\": 39269150}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 39269150, \"end\": 39269261}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 39269261, \"end\": 39269372}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 39269372, \"end\": 39269408}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 39269408, \"end\": 39269687}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 39269687, \"end\": 39269732}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 39269732, \"end\": 39269770}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 39269770, \"end\": 39269904}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 39269904, \"end\": 39270016}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 39270016, \"end\": 39270124}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 39270124, \"end\": 39270180}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 39270180, \"end\": 39270271}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 39270271, \"end\": 39270410}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 39270410, \"end\": 39270455}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 39270455, \"end\": 39270544}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 39270544, \"end\": 39270656}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 39270656, \"end\": 39270702}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 39270702, \"end\": 39270839}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 39270839, \"end\": 39270988}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 39270988, \"end\": 39270999}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 39270999, \"end\": 39271010}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 39271010, \"end\": 39271021}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 39271021, \"end\": 39271048}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 39271048, \"end\": 39271089}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 39271089, \"end\": 39271160}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 39271160, \"end\": 39271233}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 39271233, \"end\": 39271276}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 39271276, \"end\": 39271311}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 39271311, \"end\": 39271328}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 39271328, \"end\": 39271405}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 39271405, \"end\": 39271419}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 39271419, \"end\": 39271556}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 39271556, \"end\": 39271636}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 39271636, \"end\": 39271723}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 39271723, \"end\": 39271808}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 39271808, \"end\": 39271914}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 39271914, \"end\": 39271970}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 39271970, \"end\": 39272093}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 39272093, \"end\": 39272159}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 39272159, \"end\": 39272225}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 39272225, \"end\": 39272303}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 39272303, \"end\": 39272400}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 39272400, \"end\": 39272419}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 39272419, \"end\": 39272479}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 39272479, \"end\": 39272520}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 39272520, \"end\": 39272539}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 39272539, \"end\": 39272617}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 39272617, \"end\": 39272726}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 39272726, \"end\": 39272776}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 39272776, \"end\": 39272893}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 39272893, \"end\": 39272911}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 39272911, \"end\": 39272953}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 39272953, \"end\": 39273102}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 39273102, \"end\": 39273132}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 39273132, \"end\": 39273221}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 39273221, \"end\": 39273310}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 39273310, \"end\": 39273399}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 39273399, \"end\": 39273437}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 39273437, \"end\": 39273467}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 39273467, \"end\": 39273578}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 39273578, \"end\": 39273689}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 39273689, \"end\": 39273800}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 39273800, \"end\": 39273841}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 39273841, \"end\": 39273858}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 39273858, \"end\": 39273895}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 39273895, \"end\": 39273947}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 39273947, \"end\": 39274010}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 39274010, \"end\": 39274182}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 39274182, \"end\": 39274210}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 39274210, \"end\": 39274238}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 39274238, \"end\": 39274243}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 39274243, \"end\": 39274331}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 39274331, \"end\": 39274394}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 39274394, \"end\": 39274468}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 39274468, \"end\": 39274557}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 39274557, \"end\": 39274668}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 39274668, \"end\": 39274710}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 39274710, \"end\": 39274750}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 39274750, \"end\": 39274809}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 39274809, \"end\": 39274889}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 39274889, \"end\": 39274926}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 39274926, \"end\": 39275032}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 39275032, \"end\": 39275072}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 39275072, \"end\": 39275152}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 39275152, \"end\": 39275169}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 39275169, \"end\": 39275278}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 39275278, \"end\": 39275391}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 39275391, \"end\": 39275539}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 39275539, \"end\": 39275628}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 39275628, \"end\": 39275739}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 39275739, \"end\": 39275747}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 39275747, \"end\": 39275775}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 39275775, \"end\": 39275804}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 39275804, \"end\": 39275906}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 39275906, \"end\": 39275958}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 39275958, \"end\": 39276013}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 39276013, \"end\": 39276076}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 39276076, \"end\": 39276344}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 39276344, \"end\": 39276420}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 39276420, \"end\": 39276531}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 39276531, \"end\": 39276575}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 39276575, \"end\": 39284125, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 39284125, \"end\": 39291143}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 39291143, \"end\": 39298804, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 39298804, \"end\": 39305610, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 39305610, \"end\": 39316426, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 39316426, \"end\": 39322418, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 39322418, \"end\": 39328581, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 39328581, \"end\": 39343925, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 39343925, \"end\": 39359397, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 39359397, \"end\": 39371637, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 39371637, \"end\": 39387003, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 39387003, \"end\": 39419601, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 39419601, \"end\": 39436189}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 39436189, \"end\": 39440111}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 39440111, \"end\": 39443078}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 39443078, \"end\": 39444495}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 39444495, \"end\": 39452315}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 39452315, \"end\": 39458389, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 39458389, \"end\": 39471230, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 39471230, \"end\": 39478891, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 39478891, \"end\": 39501367, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 39501367, \"end\": 39521722, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/ARM3A0.png\", \"start\": 39521722, \"end\": 39522472}, {\"filename\": \"/edge_defs/sprites/ARM3B0.png\", \"start\": 39522472, \"end\": 39523150}, {\"filename\": \"/edge_defs/sprites/ARM4A0.png\", \"start\": 39523150, \"end\": 39523944}, {\"filename\": \"/edge_defs/sprites/ARM4B0.png\", \"start\": 39523944, \"end\": 39524645}, {\"filename\": \"/edge_defs/sprites/ARM5A0.png\", \"start\": 39524645, \"end\": 39525148}, {\"filename\": \"/edge_defs/sprites/ARM5B0.png\", \"start\": 39525148, \"end\": 39525663}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 39525663, \"end\": 39526879}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 39526879, \"end\": 39528100}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 39528100, \"end\": 39529310}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 39529310, \"end\": 39530511}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 39530511, \"end\": 39531792}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 39531792, \"end\": 39533135}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 39533135, \"end\": 39534539}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 39534539, \"end\": 39535884}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 39535884, \"end\": 39537191}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 39537191, \"end\": 39538458}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 39538458, \"end\": 39539695}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 39539695, \"end\": 39539789}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 39539789, \"end\": 39540003}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 39540003, \"end\": 39540307}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 39540307, \"end\": 39540675}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 39540675, \"end\": 39541070}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 39541070, \"end\": 39541506}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 39541506, \"end\": 39541976}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 39541976, \"end\": 39542408}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 39542408, \"end\": 39542771}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 39542771, \"end\": 39543587}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 39543587, \"end\": 39544405}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 39544405, \"end\": 39545223}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 39545223, \"end\": 39546521}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 39546521, \"end\": 39547904}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 39547904, \"end\": 39549258}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 39549258, \"end\": 39550558}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 39550558, \"end\": 39551827}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 39551827, \"end\": 39553050}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 39553050, \"end\": 39554260}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 39554260, \"end\": 39555472}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 39555472, \"end\": 39556663}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 39556663, \"end\": 39557848}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 39557848, \"end\": 39559099}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 39559099, \"end\": 39560340}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 39560340, \"end\": 39561589}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 39561589, \"end\": 39562811}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 39562811, \"end\": 39563415}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 39563415, \"end\": 39564019}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 39564019, \"end\": 39564942}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 39564942, \"end\": 39566158}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 39566158, \"end\": 39567553}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 39567553, \"end\": 39568682}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 39568682, \"end\": 39569484}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 39569484, \"end\": 39570432}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 39570432, \"end\": 39571660}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 39571660, \"end\": 39573046}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 39573046, \"end\": 39574184}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 39574184, \"end\": 39574981}, {\"filename\": \"/edge_defs/sprites/PLS1A0.lmp\", \"start\": 39574981, \"end\": 39575366}, {\"filename\": \"/edge_defs/sprites/PLS1B0.lmp\", \"start\": 39575366, \"end\": 39575765}, {\"filename\": \"/edge_defs/sprites/PLS1C0.lmp\", \"start\": 39575765, \"end\": 39576150}, {\"filename\": \"/edge_defs/sprites/PLS1D0.lmp\", \"start\": 39576150, \"end\": 39576549}, {\"filename\": \"/edge_defs/sprites/PLS1E0.lmp\", \"start\": 39576549, \"end\": 39578907}, {\"filename\": \"/edge_defs/sprites/PLS1F0.lmp\", \"start\": 39578907, \"end\": 39581265}, {\"filename\": \"/edge_defs/sprites/PLS1G0.lmp\", \"start\": 39581265, \"end\": 39583492}, {\"filename\": \"/edge_defs/sprites/PLS2A0.lmp\", \"start\": 39583492, \"end\": 39583708}, {\"filename\": \"/edge_defs/sprites/PLS2B0.lmp\", \"start\": 39583708, \"end\": 39583951}, {\"filename\": \"/edge_defs/sprites/PLS2C0.lmp\", \"start\": 39583951, \"end\": 39584163}, {\"filename\": \"/edge_defs/sprites/PLS2D0.lmp\", \"start\": 39584163, \"end\": 39584553}, {\"filename\": \"/edge_defs/sprites/PLS2E0.lmp\", \"start\": 39584553, \"end\": 39585247}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 39585247, \"end\": 39586119}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 39586119, \"end\": 39586991}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 39586991, \"end\": 39587120}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 39587120, \"end\": 39588336}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 39588336, \"end\": 39589554}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 39589554, \"end\": 39590750}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 39590750, \"end\": 39591937}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 39591937, \"end\": 39593188}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 39593188, \"end\": 39594429}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 39594429, \"end\": 39595678}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 39595678, \"end\": 39596900}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 39596900, \"end\": 39598101}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 39598101, \"end\": 39599306}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 39599306, \"end\": 39600493}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 39600493, \"end\": 39601671}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 39601671, \"end\": 39602916}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 39602916, \"end\": 39604152}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 39604152, \"end\": 39605397}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 39605397, \"end\": 39606613}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 39606613, \"end\": 39607830}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 39607830, \"end\": 39609050}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 39609050, \"end\": 39610261}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 39610261, \"end\": 39611462}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 39611462, \"end\": 39612742}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 39612742, \"end\": 39614093}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 39614093, \"end\": 39615500}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 39615500, \"end\": 39616852}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 39616852, \"end\": 39618163}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 39618163, \"end\": 39619431}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 39619431, \"end\": 39620668}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 39620668, \"end\": 39621793}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 39621793, \"end\": 39622135}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 39622135, \"end\": 39623415}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 39623415, \"end\": 39624968}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 39624968, \"end\": 39626599}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 39626599, \"end\": 39628132}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 39628132, \"end\": 39629318}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 39629318, \"end\": 39630834}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 39630834, \"end\": 39632427}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 39632427, \"end\": 39633945}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 39633945, \"end\": 39635175}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 39635175, \"end\": 39636695}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 39636695, \"end\": 39638302}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 39638302, \"end\": 39639835}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 39639835, \"end\": 39641045}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 39641045, \"end\": 39642543}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 39642543, \"end\": 39644135}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 39644135, \"end\": 39645649}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 39645649, \"end\": 39646946}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 39646946, \"end\": 39648452}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 39648452, \"end\": 39650023}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 39650023, \"end\": 39651554}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 39651554, \"end\": 39652891}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 39652891, \"end\": 39654411}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 39654411, \"end\": 39655947}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 39655947, \"end\": 39657436}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 39657436, \"end\": 39658747}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 39658747, \"end\": 39660265}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 39660265, \"end\": 39661853}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 39661853, \"end\": 39663378}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 39663378, \"end\": 39664704}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 39664704, \"end\": 39666246}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 39666246, \"end\": 39667819}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 39667819, \"end\": 39669322}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 39669322, \"end\": 39670684}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 39670684, \"end\": 39672201}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 39672201, \"end\": 39673749}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 39673749, \"end\": 39675347}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 39675347, \"end\": 39676785}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 39676785, \"end\": 39678335}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 39678335, \"end\": 39679889}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 39679889, \"end\": 39681448}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 39681448, \"end\": 39682845}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 39682845, \"end\": 39684416}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 39684416, \"end\": 39686018}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 39686018, \"end\": 39687584}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 39687584, \"end\": 39688987}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 39688987, \"end\": 39690504}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 39690504, \"end\": 39692100}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 39692100, \"end\": 39693708}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 39693708, \"end\": 39695097}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 39695097, \"end\": 39696685}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 39696685, \"end\": 39698329}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 39698329, \"end\": 39699849}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 39699849, \"end\": 39701199}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 39701199, \"end\": 39702720}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 39702720, \"end\": 39704342}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 39704342, \"end\": 39705912}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 39705912, \"end\": 39707222}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 39707222, \"end\": 39708753}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 39708753, \"end\": 39710345}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 39710345, \"end\": 39711828}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 39711828, \"end\": 39713122}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 39713122, \"end\": 39714589}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 39714589, \"end\": 39716167}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 39716167, \"end\": 39717736}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 39717736, \"end\": 39719426}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 39719426, \"end\": 39721208}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 39721208, \"end\": 39722954}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 39722954, \"end\": 39724674}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 39724674, \"end\": 39726401}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 39726401, \"end\": 39728140}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 39728140, \"end\": 39742940}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 39742940, \"end\": 39765058}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 39765058, \"end\": 39783411}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 39783411, \"end\": 39798902}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 39798902, \"end\": 39814196}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 39814196, \"end\": 39829063}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 39829063, \"end\": 39846064}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 39846064, \"end\": 39866772}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 39866772, \"end\": 39904252}, {\"filename\": \"/edge_defs/ttf/ECFONT02.ttf\", \"start\": 39904252, \"end\": 40092744}, {\"filename\": \"/edge_defs/ttf/ECFONT03.ttf\", \"start\": 40092744, \"end\": 40157832}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 40157832, \"end\": 40157836}, {\"filename\": \"/freedoom2.wad\", \"start\": 40157836, \"end\": 68945584}, {\"filename\": \"/soundfont/16-Bit Game Station.sf2\", \"start\": 68945584, \"end\": 72904932}, {\"filename\": \"/soundfont/Apogee.op2\", \"start\": 72904932, \"end\": 72916840}, {\"filename\": \"/soundfont/ChipFreak.sf2\", \"start\": 72916840, \"end\": 73026324}, {\"filename\": \"/soundfont/Default.sf2\", \"start\": 73026324, \"end\": 77218240}, {\"filename\": \"/soundfont/FDDMX.op2\", \"start\": 77218240, \"end\": 77230148}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 77230148, \"end\": 77594386}], \"remote_package_size\": 55337256, \"package_uuid\": \"sha256-524af85fcd7884083f5207b671986babb3683e4e4d53dcd3b5db442d20a9c28a\"});\n\n  })();\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = true;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary;\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, false);\n    xhr.send(null);\n    return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.responseType = 'arraybuffer';\n      xhr.send(null);\n      return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n} else\n{\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.error.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\nif (Module['quit']) quit_ = Module['quit'];\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary; \nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// include: base64Utils.js\n// Converts a string of base64 into a byte array (Uint8Array).\nfunction intArrayFromBase64(s) {\n\n  var decoded = atob(s);\n  var bytes = new Uint8Array(decoded.length);\n  for (var i = 0 ; i < decoded.length ; ++i) {\n    bytes[i] = decoded.charCodeAt(i);\n  }\n  return bytes;\n}\n\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\nfunction tryParseAsDataURI(filename) {\n  if (!isDataURI(filename)) {\n    return;\n  }\n\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n}\n// end include: base64Utils.js\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\n// don't define it at all in release modes.  This matches the behaviour of\n// MINIMAL_RUNTIME.\n// TODO(sbc): Make this the default even without STRICT enabled.\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    // This build was created without ASSERTIONS defined.  `assert()` should not\n    // ever be called in this configuration but in case there are callers in\n    // the wild leave this simple abort() implemenation here for now.\n    abort(text);\n  }\n}\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\n\n// include: runtime_stack_check.js\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n\n  \nif (!Module[\"noFSInit\"] && !FS.init.initialized)\n  FS.init();\nFS.ignorePermissions = false;\n\nTTY.init();\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  \n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction postRun() {\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n\nfunction getUniqueRunDependency(id) {\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  Module['onAbort']?.(what);\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  what += '. Build with -sASSERTIONS for more info.';\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  readyPromiseReject(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n/**\n * Indicates whether filename is a base64 data URI.\n * @noinline\n */\nvar isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n\n/**\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\n * @noinline\n */\nvar isFileURI = (filename) => filename.startsWith('file://');\n// end include: URIUtils.js\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'edge-classic.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinarySync(file) {\n  if (file == wasmBinaryFile && wasmBinary) {\n    return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n    return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary\n      && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(() => getBinarySync(binaryFile));\n    }\n  }\n\n  // Otherwise, getBinarySync should be able to get it synchronously\n  return Promise.resolve().then(() => getBinarySync(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then((binary) => {\n    return WebAssembly.instantiate(binary, imports);\n  }).then((instance) => {\n    return instance;\n  }).then(receiver, (reason) => {\n    err(`failed to asynchronously prepare wasm: ${reason}`);\n\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err(`wasm streaming compile failed: ${reason}`);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  }\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    wasmExports = instance.exports;\n\n    wasmExports = Asyncify.instrumentWasmExports(wasmExports);\n\n    \n\n    wasmMemory = wasmExports['memory'];\n    \n    updateMemoryViews();\n\n    wasmTable = wasmExports['__indirect_function_table'];\n    \n\n    addOnInit(wasmExports['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n    return wasmExports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err(`Module.instantiateWasm callback failed with error: ${e}`);\n        // If instantiation fails, reject the module ready promise.\n        readyPromiseReject(e);\n    }\n  }\n\n  // If instantiation fails, reject the module ready promise.\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\n// end include: runtime_debug.js\n// === Body ===\n\nvar ASM_CONSTS = {\n  633872: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \n 633928: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line : $ { args }`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs( true, function(err) { if (err) { console.error(`Error mounting home dir $ { err }`); return; } Module._WebMain($0, $1); }); },  \n 634523: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \n 634579: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs( $0, function(err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \n 634728: ($0) => { var str = UTF8ToString($0) + '\\n\\n' + 'Abort/Retry/Ignore/AlwaysIgnore? [ariA] :'; var reply = window.prompt(str, \"i\"); if (reply === null) { reply = \"i\"; } return allocate(intArrayFromString(reply), 'i8', ALLOC_NORMAL); },  \n 634953: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \n 635100: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \n 635334: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \n 635827: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \n 635895: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \n 637547: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \n 637957: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \n 638562: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \n 639042: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \n 640214: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \n 641683: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \n 642672: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \n 642755: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \n 642824: () => { return window.innerWidth; },  \n 642854: () => { return window.innerHeight; },  \n 642885: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\n};\n\n\n// end include: preamble.js\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n\n  var listenOnce = (object, event, func) => {\n      object.addEventListener(event, func, { 'once': true });\n    };\n  /** @param {Object=} elements */\n  var autoResumeAudioContext = (ctx, elements) => {\n      if (!elements) {\n        elements = [document, document.getElementById('canvas')];\n      }\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\n        elements.forEach((element) => {\n          if (element) {\n            listenOnce(element, event, () => {\n              if (ctx.state === 'suspended') ctx.resume();\n            });\n          }\n        });\n      });\n    };\n\n  var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    };\n\n  var dynCallLegacy = (sig, ptr, args) => {\n      var f = Module['dynCall_' + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    };\n  \n  var wasmTableMirror = [];\n  \n  var wasmTable;\n  var getWasmTableEntry = (funcPtr) => {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    };\n  /** @param {Object=} args */\n  var dynCall = (sig, ptr, args) => {\n      var rtn = dynCallLegacy(sig, ptr, args);\n      return rtn;\n    };\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': abort('to do getValue(i64) use WASM_BIGINT');\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort(`invalid type for getValue: ${type}`);\n    }\n  }\n\n  var noExitRuntime = Module['noExitRuntime'] || true;\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': abort('to do setValue(i64) use WASM_BIGINT');\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort(`invalid type for setValue: ${type}`);\n    }\n  }\n\n  var PATH = {\n  isAbs:(path) => path.charAt(0) === '/',\n  splitPath:(filename) => {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n  normalizeArray:(parts, allowAboveRoot) => {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n  normalize:(path) => {\n        var isAbsolute = PATH.isAbs(path),\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n  dirname:(path) => {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n  basename:(path) => {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },\n  join:function() {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n  join2:(l, r) => PATH.normalize(l + '/' + r),\n  };\n  \n  var initRandomFill = () => {\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\n        // for modern web browsers\n        return (view) => crypto.getRandomValues(view);\n      } else\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\n      abort(\"initRandomDevice\");\n    };\n  var randomFill = (view) => {\n      // Lazily init on the first invocation.\n      return (randomFill = initRandomFill())(view);\n    };\n  \n  \n  \n  var PATH_FS = {\n  resolve:function() {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n      },\n  relative:(from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n  };\n  \n  \n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    };\n  \n  var FS_stdin_getChar_buffer = [];\n  \n  var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n  \n  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n  /** @type {function(string, boolean=, number=)} */\n  function intArrayFromString(stringy, dontAddNull, length) {\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n    var u8array = new Array(len);\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n    if (dontAddNull) u8array.length = numBytesWritten;\n    return u8array;\n  }\n  var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (typeof window != 'undefined' &&\n          typeof window.prompt == 'function') {\n          // Browser.\n          result = window.prompt('Input: ');  // returns null on cancel\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else if (typeof readline == 'function') {\n          // Command line.\n          result = readline();\n          if (result !== null) {\n            result += '\\n';\n          }\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n  var TTY = {\n  ttys:[],\n  init() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process.stdin.setEncoding('utf8');\n        // }\n      },\n  shutdown() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process.stdin.pause();\n        // }\n      },\n  register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n  stream_ops:{\n  open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n  close(stream) {\n          // flush any pending line data\n          stream.tty.ops.fsync(stream.tty);\n        },\n  fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n  read(stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset+i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n  write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n  },\n  default_tty_ops:{\n  get_char(tty) {\n          return FS_stdin_getChar();\n        },\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },\n  fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n  ioctl_tcgets(tty) {\n          // typical setting\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,\n              0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            ]\n          };\n        },\n  ioctl_tcsets(tty, optional_actions, data) {\n          // currently just ignore\n          return 0;\n        },\n  ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n  },\n  default_tty1_ops:{\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n  fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n  },\n  };\n  \n  \n  var zeroMemory = (address, size) => {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    };\n  \n  var alignMemory = (size, alignment) => {\n      return Math.ceil(size / alignment) * alignment;\n    };\n  var mmapAlloc = (size) => {\n      abort();\n    };\n  var MEMFS = {\n  ops_table:null,\n  mount(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },\n  createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek\n            }\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              allocate: MEMFS.stream_ops.allocate,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync\n            }\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink\n            },\n            stream: {}\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: FS.chrdev_stream_ops\n          }\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null; \n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n  getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },\n  expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n        // avoid overshooting the allocation cap by a very large margin.\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n      },\n  resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n        }\n      },\n  node_ops:{\n  getattr(node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n  setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n  lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n  mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n  rename(old_node, new_dir, new_name) {\n          // if we're overwriting a directory at new_name, make sure it's empty.\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now()\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n  unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n  rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n  readdir(node) {\n          var entries = ['.', '..'];\n          for (var key of Object.keys(node.contents)) {\n            entries.push(key);\n          }\n          return entries;\n        },\n  symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n  readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n  write(stream, buffer, offset, length, position, canOwn) {\n          // If the buffer is located in main memory (HEAP), and if\n          // memory can grow, we can't hold on to references of the\n          // memory buffer, as they may get invalidated. That means we\n          // need to do copy its contents.\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n  \n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n  \n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n  \n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position+length);\n          if (node.contents.subarray && buffer.subarray) {\n            // Use typed array write which is available.\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n  mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            // We can't emulate MAP_SHARED when the file is not backed by the\n            // buffer we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            // Try to avoid unnecessary slices.\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr, allocated };\n        },\n  msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        },\n  },\n  };\n  \n  /** @param {boolean=} noRunDep */\n  var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\n      readAsync(url, (arrayBuffer) => {\n        assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, (event) => {\n        if (onerror) {\n          onerror();\n        } else {\n          throw `Loading data file \"${url}\" failed.`;\n        }\n      });\n      if (dep) addRunDependency(dep);\n    };\n  \n  \n  var FS_createDataFile = (parent, name, fileData, canRead, canWrite, canOwn) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n  \n  var preloadPlugins = Module['preloadPlugins'] || [];\n  var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      // Ensure plugins are ready.\n      if (typeof Browser != 'undefined') Browser.init();\n  \n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n  var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\n      // TODO we should allow people to just pass in a complete filename instead\n      // of parent and name being that we just join them anyways\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n          onerror?.();\n          removeRunDependency(dep);\n        })) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n      } else {\n        processData(url);\n      }\n    };\n  \n  var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        'r': 0,\n        'r+': 2,\n        'w': 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        'a': 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n  \n  var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n  \n  \n  \n  \n  \n  \n  var IDBFS = {\n  dbs:{\n  },\n  indexedDB:() => {\n        if (typeof indexedDB != 'undefined') return indexedDB;\n        var ret = null;\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        assert(ret, 'IDBFS used, but indexedDB not supported');\n        return ret;\n      },\n  DB_VERSION:21,\n  DB_STORE_NAME:\"FILE_DATA\",\n  mount:function(mount) {\n        // reuse all of the core MEMFS functionality\n        return MEMFS.mount.apply(null, arguments);\n      },\n  syncfs:(mount, populate, callback) => {\n        IDBFS.getLocalSet(mount, (err, local) => {\n          if (err) return callback(err);\n  \n          IDBFS.getRemoteSet(mount, (err, remote) => {\n            if (err) return callback(err);\n  \n            var src = populate ? remote : local;\n            var dst = populate ? local : remote;\n  \n            IDBFS.reconcile(src, dst, callback);\n          });\n        });\n      },\n  quit:() => {\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\n        IDBFS.dbs = {};\n      },\n  getDB:(name, callback) => {\n        // check the cache first\n        var db = IDBFS.dbs[name];\n        if (db) {\n          return callback(null, db);\n        }\n  \n        var req;\n        try {\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\n        } catch (e) {\n          return callback(e);\n        }\n        if (!req) {\n          return callback(\"Unable to connect to IndexedDB\");\n        }\n        req.onupgradeneeded = (e) => {\n          var db = /** @type {IDBDatabase} */ (e.target.result);\n          var transaction = e.target.transaction;\n  \n          var fileStore;\n  \n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\n          } else {\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\n          }\n  \n          if (!fileStore.indexNames.contains('timestamp')) {\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\n          }\n        };\n        req.onsuccess = () => {\n          db = /** @type {IDBDatabase} */ (req.result);\n  \n          // add to the cache\n          IDBFS.dbs[name] = db;\n          callback(null, db);\n        };\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  getLocalSet:(mount, callback) => {\n        var entries = {};\n  \n        function isRealDir(p) {\n          return p !== '.' && p !== '..';\n        };\n        function toAbsolute(root) {\n          return (p) => PATH.join2(root, p);\n        };\n  \n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\n  \n        while (check.length) {\n          var path = check.pop();\n          var stat;\n  \n          try {\n            stat = FS.stat(path);\n          } catch (e) {\n            return callback(e);\n          }\n  \n          if (FS.isDir(stat.mode)) {\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\n          }\n  \n          entries[path] = { 'timestamp': stat.mtime };\n        }\n  \n        return callback(null, { type: 'local', entries: entries });\n      },\n  getRemoteSet:(mount, callback) => {\n        var entries = {};\n  \n        IDBFS.getDB(mount.mountpoint, (err, db) => {\n          if (err) return callback(err);\n  \n          try {\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\n            transaction.onerror = (e) => {\n              callback(e.target.error);\n              e.preventDefault();\n            };\n  \n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n            var index = store.index('timestamp');\n  \n            index.openKeyCursor().onsuccess = (event) => {\n              var cursor = event.target.result;\n  \n              if (!cursor) {\n                return callback(null, { type: 'remote', db, entries });\n              }\n  \n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\n  \n              cursor.continue();\n            };\n          } catch (e) {\n            return callback(e);\n          }\n        });\n      },\n  loadLocalEntry:(path, callback) => {\n        var stat, node;\n  \n        try {\n          var lookup = FS.lookupPath(path);\n          node = lookup.node;\n          stat = FS.stat(path);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        if (FS.isDir(stat.mode)) {\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\n        } else if (FS.isFile(stat.mode)) {\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\n        } else {\n          return callback(new Error('node type not supported'));\n        }\n      },\n  storeLocalEntry:(path, entry, callback) => {\n        try {\n          if (FS.isDir(entry['mode'])) {\n            FS.mkdirTree(path, entry['mode']);\n          } else if (FS.isFile(entry['mode'])) {\n            FS.writeFile(path, entry['contents'], { canOwn: true });\n          } else {\n            return callback(new Error('node type not supported'));\n          }\n  \n          FS.chmod(path, entry['mode']);\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },\n  removeLocalEntry:(path, callback) => {\n        try {\n          var stat = FS.stat(path);\n  \n          if (FS.isDir(stat.mode)) {\n            FS.rmdir(path);\n          } else if (FS.isFile(stat.mode)) {\n            FS.unlink(path);\n          }\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },\n  loadRemoteEntry:(store, path, callback) => {\n        var req = store.get(path);\n        req.onsuccess = (event) => callback(null, event.target.result);\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  storeRemoteEntry:(store, path, entry, callback) => {\n        try {\n          var req = store.put(entry, path);\n        } catch (e) {\n          callback(e);\n          return;\n        }\n        req.onsuccess = (event) => callback();\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  removeRemoteEntry:(store, path, callback) => {\n        var req = store.delete(path);\n        req.onsuccess = (event) => callback();\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  reconcile:(src, dst, callback) => {\n        var total = 0;\n  \n        var create = [];\n        Object.keys(src.entries).forEach(function (key) {\n          var e = src.entries[key];\n          var e2 = dst.entries[key];\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\n            create.push(key);\n            total++;\n          }\n        });\n  \n        var remove = [];\n        Object.keys(dst.entries).forEach(function (key) {\n          if (!src.entries[key]) {\n            remove.push(key);\n            total++;\n          }\n        });\n  \n        if (!total) {\n          return callback(null);\n        }\n  \n        var errored = false;\n        var db = src.type === 'remote' ? src.db : dst.db;\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n  \n        function done(err) {\n          if (err && !errored) {\n            errored = true;\n            return callback(err);\n          }\n        };\n  \n        transaction.onerror = (e) => {\n          done(this.error);\n          e.preventDefault();\n        };\n  \n        transaction.oncomplete = (e) => {\n          if (!errored) {\n            callback(null);\n          }\n        };\n  \n        // sort paths in ascending order so directory entries are created\n        // before the files inside them\n        create.sort().forEach((path) => {\n          if (dst.type === 'local') {\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\n              if (err) return done(err);\n              IDBFS.storeLocalEntry(path, entry, done);\n            });\n          } else {\n            IDBFS.loadLocalEntry(path, (err, entry) => {\n              if (err) return done(err);\n              IDBFS.storeRemoteEntry(store, path, entry, done);\n            });\n          }\n        });\n  \n        // sort paths in descending order so files are deleted before their\n        // parent directories\n        remove.sort().reverse().forEach((path) => {\n          if (dst.type === 'local') {\n            IDBFS.removeLocalEntry(path, done);\n          } else {\n            IDBFS.removeRemoteEntry(store, path, done);\n          }\n        });\n      },\n  };\n  \n  \n  var LZ4 = {\n  DIR_MODE:16895,\n  FILE_MODE:33279,\n  CHUNK_SIZE:-1,\n  codec:null,\n  init() {\n        if (LZ4.codec) return;\n        LZ4.codec = (function() {\n          /*\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\n  \n  based off of node-lz4, https://github.com/pierrec/node-lz4\n  \n  ====\n  Copyright (c) 2012 Pierre Curto\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n  ====\n  \n  changes have the same license\n  */\n  \n  var MiniLZ4 = (function() {\n  \n  var exports = {};\n  \n  /**\n   * Decode a block. Assumptions: input contains all sequences of a \n   * chunk, output is large enough to receive the decoded data.\n   * If the output buffer is too small, an error will be thrown.\n   * If the returned value is negative, an error occured at the returned offset.\n   *\n   * @param {ArrayBufferView} input input data\n   * @param {ArrayBufferView} output output data\n   * @param {number=} sIdx\n   * @param {number=} eIdx\n   * @return {number} number of decoded bytes\n   * @private\n   */\n  exports.uncompress = function (input, output, sIdx, eIdx) {\n  \tsIdx = sIdx || 0\n  \teIdx = eIdx || (input.length - sIdx)\n  \t// Process each sequence in the incoming data\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\n  \t\tvar token = input[i++]\n  \n  \t\t// Literals\n  \t\tvar literals_length = (token >> 4)\n  \t\tif (literals_length > 0) {\n  \t\t\t// length of literals\n  \t\t\tvar l = literals_length + 240\n  \t\t\twhile (l === 255) {\n  \t\t\t\tl = input[i++]\n  \t\t\t\tliterals_length += l\n  \t\t\t}\n  \n  \t\t\t// Copy the literals\n  \t\t\tvar end = i + literals_length\n  \t\t\twhile (i < end) output[j++] = input[i++]\n  \n  \t\t\t// End of buffer?\n  \t\t\tif (i === n) return j\n  \t\t}\n  \n  \t\t// Match copy\n  \t\t// 2 bytes offset (little endian)\n  \t\tvar offset = input[i++] | (input[i++] << 8)\n  \n  \t\t// XXX 0 is an invalid offset value\n  \t\tif (offset === 0) return j\n  \t\tif (offset > j) return -(i-2)\n  \n  \t\t// length of match copy\n  \t\tvar match_length = (token & 0xf)\n  \t\tvar l = match_length + 240\n  \t\twhile (l === 255) {\n  \t\t\tl = input[i++]\n  \t\t\tmatch_length += l\n  \t\t}\n  \n  \t\t// Copy the match\n  \t\tvar pos = j - offset // position of the match copy in the current output\n  \t\tvar end = j + match_length + 4 // minmatch = 4\n  \t\twhile (j < end) output[j++] = output[pos++]\n  \t}\n  \n  \treturn j\n  }\n  \n  var\n  \tmaxInputSize\t= 0x7E000000\n  ,\tminMatch\t\t= 4\n  // uint32() optimization\n  ,\thashLog\t\t\t= 16\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\n  ,\thashSize\t\t= 1 << hashLog\n  \n  ,\tcopyLength\t\t= 8\n  ,\tlastLiterals\t= 5\n  ,\tmfLimit\t\t\t= copyLength + minMatch\n  ,\tskipStrength\t= 6\n  \n  ,\tmlBits  \t\t= 4\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\n  ,\trunBits \t\t= 8 - mlBits\n  ,\trunMask \t\t= (1 << runBits) - 1\n  \n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\n  \n  assert(hashShift === 16);\n  var hashTable = new Int16Array(1<<16);\n  var empty = new Int16Array(hashTable.length);\n  \n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\n  exports.compressBound = function (isize) {\n  \treturn isize > maxInputSize\n  \t\t? 0\n  \t\t: (isize + (isize/255) + 16) | 0\n  }\n  \n  /** @param {number=} sIdx\n  \t@param {number=} eIdx */\n  exports.compress = function (src, dst, sIdx, eIdx) {\n  \thashTable.set(empty);\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\n  }\n  \n  function compressBlock (src, dst, pos, sIdx, eIdx) {\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\n  \tvar dpos = sIdx\n  \tvar dlen = eIdx - sIdx\n  \tvar anchor = 0\n  \n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\n  \n  \t// Minimum of input bytes for compression (LZ4 specs)\n  \tif (src.length > mfLimit) {\n  \t\tvar n = exports.compressBound(src.length)\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\n  \n  \t\tvar \n  \t\t\tstep  = 1\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\n  \t\t// last 5 bytes must be literals\n  \t\t,\tsrcLength = src.length - mfLimit\n  \n  \t\twhile (pos + minMatch < srcLength) {\n  \t\t\t// Find a match\n  \t\t\t// min match of 4 bytes aka sequence\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\n  \t\t\t// compute hash for the current sequence\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\n  \t\t\t\t\t\t\t.multiply(hasher)\n  \t\t\t\t\t\t\t.shiftr(hashShift)\n  \t\t\t\t\t\t\t.toNumber() */\n  \t\t\t// get the position of the sequence matching the hash\n  \t\t\t// NB. since 2 different sequences may have the same hash\n  \t\t\t// it is double-checked below\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\n  \t\t\tvar ref = hashTable[hash] - 1\n  \t\t\t// save position of current sequence in hash table\n  \t\t\thashTable[hash] = pos + 1\n  \n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\n  \t\t\tif ( ref < 0 ||\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\n  \t\t\t\t(\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\n  \t\t\t\t)\n  \t\t\t) {\n  \t\t\t\t// increase step if nothing found within limit\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\n  \t\t\t\tpos += step\n  \t\t\t\tcontinue\n  \t\t\t}\n  \n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\n  \n  \t\t\t// got a match\n  \t\t\tvar literals_length = pos - anchor\n  \t\t\tvar offset = pos - ref\n  \n  \t\t\t// minMatch already verified\n  \t\t\tpos += minMatch\n  \t\t\tref += minMatch\n  \n  \t\t\t// move to the end of the match (>=minMatch)\n  \t\t\tvar match_length = pos\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\n  \t\t\t\tpos++\n  \t\t\t\tref++\n  \t\t\t}\n  \n  \t\t\t// match length\n  \t\t\tmatch_length = pos - match_length\n  \n  \t\t\t// token\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\n  \n  \t\t\t// encode literals length\n  \t\t\tif (literals_length >= runMask) {\n  \t\t\t\t// add match length to the token\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\n  \t\t\t\t\tdst[dpos++] = 255\n  \t\t\t\t}\n  \t\t\t\tdst[dpos++] = len\n  \t\t\t} else {\n  \t\t\t\t// add match length to the token\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\n  \t\t\t}\n  \n  \t\t\t// write literals\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\n  \t\t\t\tdst[dpos++] = src[anchor+i]\n  \t\t\t}\n  \n  \t\t\t// encode offset\n  \t\t\tdst[dpos++] = offset\n  \t\t\tdst[dpos++] = (offset >> 8)\n  \n  \t\t\t// encode match length\n  \t\t\tif (match_length >= mlMask) {\n  \t\t\t\tmatch_length -= mlMask\n  \t\t\t\twhile (match_length >= 255) {\n  \t\t\t\t\tmatch_length -= 255\n  \t\t\t\t\tdst[dpos++] = 255\n  \t\t\t\t}\n  \n  \t\t\t\tdst[dpos++] = match_length\n  \t\t\t}\n  \n  \t\t\tanchor = pos\n  \t\t}\n  \t}\n  \n  \t// cannot compress input\n  \tif (anchor == 0) return 0\n  \n  \t// Write last literals\n  \t// encode literals length\n  \tliterals_length = src.length - anchor\n  \tif (literals_length >= runMask) {\n  \t\t// add match length to the token\n  \t\tdst[dpos++] = (runMask << mlBits)\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\n  \t\t\tdst[dpos++] = 255\n  \t\t}\n  \t\tdst[dpos++] = ln\n  \t} else {\n  \t\t// add match length to the token\n  \t\tdst[dpos++] = (literals_length << mlBits)\n  \t}\n  \n  \t// write literals\n  \tpos = anchor\n  \twhile (pos < src.length) {\n  \t\tdst[dpos++] = src[pos++]\n  \t}\n  \n  \treturn dpos\n  }\n  \n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\n  \n  exports.compressPackage = function(data, verify) {\n    if (verify) {\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\n    }\n    // compress the data in chunks\n    assert(data instanceof ArrayBuffer);\n    data = new Uint8Array(data);\n    console.log('compressing package of size ' + data.length);\n    var compressedChunks = [];\n    var successes = [];\n    var offset = 0;\n    var total = 0;\n    while (offset < data.length) {\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\n      //console.log('compress a chunk ' + [offset, total, data.length]);\n      offset += exports.CHUNK_SIZE;\n      var bound = exports.compressBound(chunk.length);\n      var compressed = new Uint8Array(bound);\n      var compressedSize = exports.compress(chunk, compressed);\n      if (compressedSize > 0) {\n        assert(compressedSize <= bound);\n        compressed = compressed.subarray(0, compressedSize);\n        compressedChunks.push(compressed);\n        total += compressedSize;\n        successes.push(1);\n        if (verify) {\n          var back = exports.uncompress(compressed, temp);\n          assert(back === chunk.length, [back, chunk.length]);\n          for (var i = 0; i < chunk.length; i++) {\n            assert(chunk[i] === temp[i]);\n          }\n        }\n      } else {\n        assert(compressedSize === 0);\n        // failure to compress :(\n        compressedChunks.push(chunk);\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\n        successes.push(0);\n      }\n    }\n    data = null; // XXX null out pack['data'] too?\n    var compressedData = {\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\n      'cachedOffset': total,\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\n      'cachedChunks': [null, null],\n      'offsets': [], // chunk# => start in compressed data\n      'sizes': [],\n      'successes': successes, // 1 if chunk is compressed\n    };\n    offset = 0;\n    for (var i = 0; i < compressedChunks.length; i++) {\n      compressedData['data'].set(compressedChunks[i], offset);\n      compressedData['offsets'][i] = offset;\n      compressedData['sizes'][i] = compressedChunks[i].length\n      offset += compressedChunks[i].length;\n    }\n    console.log('compressed package into ' + [compressedData['data'].length]);\n    assert(offset === total);\n    return compressedData;\n  };\n  \n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\n  \n  return exports;\n  \n  })();\n  \n  ;\n          return MiniLZ4;\n        })();\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\n      },\n  loadPackage(pack, preloadPlugin) {\n        LZ4.init();\n        var compressedData = pack['compressedData'];\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\n          compressedData['cachedIndexes'][i] = -1;\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\n        }\n        pack['metadata'].files.forEach((file) => {\n          var dir = PATH.dirname(file.filename);\n          var name = PATH.basename(file.filename);\n          FS.createPath('', dir, true, true);\n          var parent = FS.analyzePath(dir).object;\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\n            compressedData,\n            start: file.start,\n            end: file.end,\n          });\n        });\n        // Preload files if necessary. This code is largely similar to\n        // createPreloadedFile in library_fs.js. However, a main difference here\n        // is that we only decompress the file if it can be preloaded.\n        // Abstracting out the common parts seems to be more effort than it is\n        // worth.\n        if (preloadPlugin) {\n          Browser.init();\n          pack['metadata'].files.forEach((file) => {\n            var handled = false;\n            var fullname = file.filename;\n            preloadPlugins.forEach((plugin) => {\n              if (handled) return;\n              if (plugin['canHandle'](fullname)) {\n                var dep = getUniqueRunDependency('fp ' + fullname);\n                addRunDependency(dep);\n                var finish = () => removeRunDependency(dep);\n                var byteArray = FS.readFile(fullname);\n                plugin['handle'](byteArray, fullname, finish, finish);\n                handled = true;\n              }\n            });\n          });\n        }\n      },\n  createNode(parent, name, mode, dev, contents, mtime) {\n        var node = FS.createNode(parent, name, mode);\n        node.mode = mode;\n        node.node_ops = LZ4.node_ops;\n        node.stream_ops = LZ4.stream_ops;\n        node.timestamp = (mtime || new Date).getTime();\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\n        if (mode === LZ4.FILE_MODE) {\n          node.size = contents.end - contents.start;\n          node.contents = contents;\n        } else {\n          node.size = 4096;\n          node.contents = {};\n        }\n        if (parent) {\n          parent.contents[name] = node;\n        }\n        return node;\n      },\n  node_ops:{\n  getattr(node) {\n          return {\n            dev: 1,\n            ino: node.id,\n            mode: node.mode,\n            nlink: 1,\n            uid: 0,\n            gid: 0,\n            rdev: 0,\n            size: node.size,\n            atime: new Date(node.timestamp),\n            mtime: new Date(node.timestamp),\n            ctime: new Date(node.timestamp),\n            blksize: 4096,\n            blocks: Math.ceil(node.size / 4096),\n          };\n        },\n  setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n        },\n  lookup(parent, name) {\n          throw new FS.ErrnoError(44);\n        },\n  mknod(parent, name, mode, dev) {\n          throw new FS.ErrnoError(63);\n        },\n  rename(oldNode, newDir, newName) {\n          throw new FS.ErrnoError(63);\n        },\n  unlink(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n  rmdir(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n  readdir(node) {\n          throw new FS.ErrnoError(63);\n        },\n  symlink(parent, newName, oldPath) {\n          throw new FS.ErrnoError(63);\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          //out('LZ4 read ' + [offset, length, position]);\n          length = Math.min(length, stream.node.size - position);\n          if (length <= 0) return 0;\n          var contents = stream.node.contents;\n          var compressedData = contents.compressedData;\n          var written = 0;\n          while (written < length) {\n            var start = contents.start + position + written; // start index in uncompressed data\n            var desired = length - written;\n            //out('current read: ' + ['start', start, 'desired', desired]);\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\n            var compressedStart = compressedData['offsets'][chunkIndex];\n            var compressedSize = compressedData['sizes'][chunkIndex];\n            var currChunk;\n            if (compressedData['successes'][chunkIndex]) {\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\n              if (found >= 0) {\n                currChunk = compressedData['cachedChunks'][found];\n              } else {\n                // decompress the chunk\n                compressedData['cachedIndexes'].pop();\n                compressedData['cachedIndexes'].unshift(chunkIndex);\n                currChunk = compressedData['cachedChunks'].pop();\n                compressedData['cachedChunks'].unshift(currChunk);\n                if (compressedData['debug']) {\n                  out('decompressing chunk ' + chunkIndex);\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\n                }\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\n                //var t = Date.now();\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\n                //out('decompress time: ' + (Date.now() - t));\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\n              }\n            } else {\n              // uncompressed\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\n            }\n            var startInChunk = start % LZ4.CHUNK_SIZE;\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\n            var currWritten = endInChunk - startInChunk;\n            written += currWritten;\n          }\n          return written;\n        },\n  write(stream, buffer, offset, length, position) {\n          throw new FS.ErrnoError(29);\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.size;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  },\n  };\n  var FS = {\n  root:null,\n  mounts:[],\n  devices:{\n  },\n  streams:[],\n  nextInode:1,\n  nameTable:null,\n  currentPath:\"/\",\n  initialized:false,\n  ignorePermissions:true,\n  ErrnoError:null,\n  genericErrors:{\n  },\n  filesystems:null,\n  syncFSRequests:0,\n  lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n  \n        if (!path) return { path: '', node: null };\n  \n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        opts = Object.assign(defaults, opts)\n  \n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\n          throw new FS.ErrnoError(32);\n        }\n  \n        // split the absolute path\n        var parts = path.split('/').filter((p) => !!p);\n  \n        // start at the root\n        var current = FS.root;\n        var current_path = '/';\n  \n        for (var i = 0; i < parts.length; i++) {\n          var islast = (i === parts.length-1);\n          if (islast && opts.parent) {\n            // stop resolving\n            break;\n          }\n  \n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n  \n          // jump to the mount's root node if this is a mountpoint\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n  \n          // by default, lookupPath will not follow a symlink if it is the final path component.\n          // setting opts.follow = true will override this behavior.\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n  \n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\n              current = lookup.node;\n  \n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n  \n        return { path: current_path, node: current };\n      },\n  getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length-1] !== '/' ? `${mount}/${path}` : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n  hashName(parentid, name) {\n        var hash = 0;\n  \n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n  hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n  hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n  lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        // if we failed to find it in the cache, call into the VFS\n        return FS.lookup(parent, name);\n      },\n  createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n  \n        FS.hashAddNode(node);\n  \n        return node;\n      },\n  destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n  isRoot(node) {\n        return node === node.parent;\n      },\n  isMountpoint(node) {\n        return !!node.mounted;\n      },\n  isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n  isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n  isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n  isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n  isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n  isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n  isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n  flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if ((flag & 512)) {\n          perms += 'w';\n        }\n        return perms;\n      },\n  nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        // return 0 if any user, group or owner bits are set.\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n  mayLookup(dir) {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n  mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {\n        }\n        return FS.nodePermissions(dir, 'wx');\n      },\n  mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n  mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n  MAX_OPEN_FDS:4096,\n  nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n  getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n  getStream:(fd) => FS.streams[fd],\n  createStream(stream, fd = -1) {\n        if (!FS.FSStream) {\n          FS.FSStream = /** @constructor */ function() {\n            this.shared = { };\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              /** @this {FS.FSStream} */\n              get() { return this.node; },\n              /** @this {FS.FSStream} */\n              set(val) { this.node = val; }\n            },\n            isRead: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 2097155) !== 1; }\n            },\n            isWrite: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 2097155) !== 0; }\n            },\n            isAppend: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 1024); }\n            },\n            flags: {\n              /** @this {FS.FSStream} */\n              get() { return this.shared.flags; },\n              /** @this {FS.FSStream} */\n              set(val) { this.shared.flags = val; },\n            },\n            position : {\n              /** @this {FS.FSStream} */\n              get() { return this.shared.position; },\n              /** @this {FS.FSStream} */\n              set(val) { this.shared.position = val; },\n            },\n          });\n        }\n        // clone it, so we can return an instance of FSStream\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n  closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n  chrdev_stream_ops:{\n  open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          // override node's stream ops with the device's\n          stream.stream_ops = device.stream_ops;\n          // forward the open call\n          stream.stream_ops.open?.(stream);\n        },\n  llseek() {\n          throw new FS.ErrnoError(70);\n        },\n  },\n  major:(dev) => ((dev) >> 8),\n  minor:(dev) => ((dev) & 0xff),\n  makedev:(ma, mi) => ((ma) << 8 | (mi)),\n  registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n  getDevice:(dev) => FS.devices[dev],\n  getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n  \n        while (check.length) {\n          var m = check.pop();\n  \n          mounts.push(m);\n  \n          check.push.apply(check, m.mounts);\n        }\n  \n        return mounts;\n      },\n  syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n  \n        FS.syncFSRequests++;\n  \n        if (FS.syncFSRequests > 1) {\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\n        }\n  \n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n  \n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n  \n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        };\n  \n        // sync all mounts\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n  mount(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n  \n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n          mountpoint = lookup.path;  // use the absolute path\n          node = lookup.node;\n  \n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n  \n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n  \n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: []\n        };\n  \n        // create a root node for the fs\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n  \n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          // set as a mountpoint\n          node.mounted = mount;\n  \n          // add the new mount to the current mount's children\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n  \n        return mountRoot;\n      },\n  unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n  \n        // destroy the nodes for this mount, and all its child mounts\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n  \n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n  \n          while (current) {\n            var next = current.name_next;\n  \n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n  \n            current = next;\n          }\n        });\n  \n        // no longer a mountpoint\n        node.mounted = null;\n  \n        // remove this mount from the child mounts\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n  lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n  mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n  create(path, mode) {\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch(e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n  mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438 /* 0666 */;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n  symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n  rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        // parents must exist\n        var lookup, old_dir, new_dir;\n  \n        // let the errors from non existant directories percolate up\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n  \n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        // need to be part of the same mount\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        // source must exist\n        var old_node = FS.lookupNode(old_dir, old_name);\n        // old path should not be an ancestor of the new path\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n        // new path should not be an ancestor of the old path\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n        // see if the new path already exists\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {\n          // not fatal\n        }\n        // early out if nothing needs to change\n        if (old_node === new_node) {\n          return;\n        }\n        // we'll need to delete the old entry\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        // need delete permissions if we'll be overwriting.\n        // need create permissions if new doesn't already exist.\n        errCode = new_node ?\n          FS.mayDelete(new_dir, new_name, isdir) :\n          FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n          throw new FS.ErrnoError(10);\n        }\n        // if we are going to change the parent, check write permissions\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // remove the node from the lookup hash\n        FS.hashRemoveNode(old_node);\n        // do the underlying fs rename\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          // add the node back to the hash (in case node_ops.rename\n          // changed its name)\n          FS.hashAddNode(old_node);\n        }\n      },\n  rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n  readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n  unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          // According to POSIX, we should map EISDIR to EPERM, but\n          // we instead do what Linux does (and we must, as we use\n          // the musl linux libc).\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n  readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n  stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n  lstat(path) {\n        return FS.stat(path, true);\n      },\n  chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now()\n        });\n      },\n  lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n  fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n  chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n          // we ignore the uid / gid for now\n        });\n      },\n  lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n  fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n  truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n  ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n  utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n  open(path, flags, mode) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\n        if ((flags & 64)) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {\n            // ignore\n          }\n        }\n        // perhaps we need to create the node\n        var created = false;\n        if ((flags & 64)) {\n          if (node) {\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\n            if ((flags & 128)) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            // node doesn't exist, try to create it\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        // can't truncate a device\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        // if asked only for a directory, then this must be one\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        // check permissions, if this is not a file we just created now (it is ok to\n        // create and write to a file with read-only permissions; it is read-only\n        // for later use)\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // do truncation if necessary\n        if ((flags & 512) && !created) {\n          FS.truncate(node, 0);\n        }\n        // we've already handled these, don't pass down to the underlying vfs\n        flags &= ~(128 | 512 | 131072);\n  \n        // register the stream with the filesystem\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),  // we want the absolute path to the node\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n          ungotten: [],\n          error: false\n        });\n        // call the new stream's open function\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n  close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null; // free readdir state\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n  isClosed(stream) {\n        return stream.fd === null;\n      },\n  llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n  read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n  write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          // seek to the end before writing in append mode\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n  allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n  mmap(stream, length, position, prot, flags) {\n        // User requests writing to file (prot & PROT_WRITE != 0).\n        // Checking if we have permissions to write to the file unless\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\n        // as all modifications will be visible only in the memory of\n        // the current process.\n        if ((prot & 2) !== 0\n            && (flags & 2) === 0\n            && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n  msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n  munmap:(stream) => 0,\n  ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n  readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n  writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n  cwd:() => FS.currentPath,\n  chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n  createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n  createDefaultDevices() {\n        // create /dev\n        FS.mkdir('/dev');\n        // setup /dev/null\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n        // setup /dev/tty and /dev/tty1\n        // stderr needs to print output using err() rather than out()\n        // so we register a second tty just for it.\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n        // setup /dev/[u]random\n        // use a buffer to avoid overhead of individual crypto calls per byte\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n        // we're not going to emulate the actual shm device,\n        // just create the tmp dirs that reside in it commonly\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n  createSpecialDirectories() {\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\n        // name of the stream for fd 6 (see test_unistd_ttyname)\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount({\n          mount() {\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\n            node.node_ops = {\n              lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStreamChecked(fd);\n                var ret = {\n                  parent: null,\n                  mount: { mountpoint: 'fake' },\n                  node_ops: { readlink: () => stream.path },\n                };\n                ret.parent = ret; // make it look like a simple root node\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, '/proc/self/fd');\n      },\n  createStandardStreams() {\n        // TODO deprecate the old functionality of a single\n        // input / output callback and that utilizes FS.createDevice\n        // and instead require a unique set of stream ops\n  \n        // by default, we symlink the standard streams to the\n        // default tty devices. however, if the standard streams\n        // have been overwritten we create a unique device for\n        // them instead.\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n  \n        // open default streams for the stdin, stdout and stderr devices\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n  ensureErrnoError() {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\n          // We set the `name` property to be able to identify `FS.ErrnoError`\n          // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\n          // - when using PROXYFS, an error can come from an underlying FS\n          // as different FS objects have their own FS.ErrnoError each,\n          // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\n          // we'll use the reliable test `err.name == \"ErrnoError\"` instead\n          this.name = 'ErrnoError';\n          this.node = node;\n          this.setErrno = /** @this{Object} */ function(errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n  \n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },\n  staticInit() {\n        FS.ensureErrnoError();\n  \n        FS.nameTable = new Array(4096);\n  \n        FS.mount(MEMFS, {}, '/');\n  \n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n  \n        FS.filesystems = {\n          'MEMFS': MEMFS,\n          'IDBFS': IDBFS,\n        };\n      },\n  init(input, output, error) {\n        FS.init.initialized = true;\n  \n        FS.ensureErrnoError();\n  \n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n  \n        FS.createStandardStreams();\n      },\n  quit() {\n        FS.init.initialized = false;\n        // force-flush all streams, so we get musl std streams printed out\n        // close all of our streams\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n  findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n  analyzePath(path, dontResolveLastLink) {\n        // operate from within the context of the symlink's target\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {\n        }\n        var ret = {\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\n          parentExists: false, parentPath: null, parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        };\n        return ret;\n      },\n  createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            // ignore EEXIST\n          }\n          parent = current;\n        }\n        return current;\n      },\n  createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n  createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          // make sure we can write to the file\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n  createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        // Create a fake device that a set of stream ops to emulate\n        // the old behavior.\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            // flush any pending line data\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos /* ignored */) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset+i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset+i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n  forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          // Command-line.\n          try {\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\n            //          read() will try to parse UTF8.\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n  createLazyFile(parent, name, url, canRead, canWrite) {\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\n        /** @constructor */\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = []; // Loaded chunks. Index is the chunk number\n        }\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\n          if (idx > this.length-1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize)|0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          // Find length\n          var xhr = new XMLHttpRequest();\n          xhr.open('HEAD', url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n  \n          var chunkSize = 1024*1024; // Chunk size in bytes\n  \n          if (!hasByteServing) chunkSize = datalength;\n  \n          // Function to get a range from the remote URL.\n          var doXHR = (from, to) => {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n  \n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n  \n            // Some hints to the browser that we want binary data.\n            xhr.responseType = 'arraybuffer';\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\n            }\n  \n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            if (xhr.response !== undefined) {\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\n            }\n            return intArrayFromString(xhr.responseText || '', true);\n          };\n          var lazyArray = this;\n          lazyArray.setDataGetter((chunkNum) => {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\n            return lazyArray.chunks[chunkNum];\n          });\n  \n          if (usesGzip || !datalength) {\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n  \n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: /** @this{Object} */ function() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: /** @this{Object} */ function() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              }\n            }\n          });\n  \n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n  \n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        // This is a total hack, but I want to get this lazy file code out of the\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\n        // be its own thin LAZYFS proxying calls to MEMFS.\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        // Add a function that defers querying the file size until it is asked the first time.\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\n          }\n        });\n        // override each stream op with one that tries to force load the lazy file first\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length)\n            return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) { // normal array\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n        // use a custom read function\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position)\n        };\n        // use a custom mmap function\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n  };\n  \n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */\n  var UTF8ToString = (ptr, maxBytesToRead) => {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n  var SYSCALLS = {\n  DEFAULT_POLLMASK:5,\n  calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n        // relative path\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);;\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n  doStat(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[((buf)>>2)] = stat.dev;\n        HEAP32[(((buf)+(4))>>2)] = stat.mode;\n        HEAPU32[(((buf)+(8))>>2)] = stat.nlink;\n        HEAP32[(((buf)+(12))>>2)] = stat.uid;\n        HEAP32[(((buf)+(16))>>2)] = stat.gid;\n        HEAP32[(((buf)+(20))>>2)] = stat.rdev;\n        (tempI64 = [stat.size>>>0,(tempDouble = stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(24))>>2)] = tempI64[0],HEAP32[(((buf)+(28))>>2)] = tempI64[1]);\n        HEAP32[(((buf)+(32))>>2)] = 4096;\n        HEAP32[(((buf)+(36))>>2)] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble = Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\n        HEAPU32[(((buf)+(48))>>2)] = (atime % 1000) * 1000;\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble = Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\n        HEAPU32[(((buf)+(64))>>2)] = (mtime % 1000) * 1000;\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble = Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\n        HEAPU32[(((buf)+(80))>>2)] = (ctime % 1000) * 1000;\n        (tempI64 = [stat.ino>>>0,(tempDouble = stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\n        return 0;\n      },\n  doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n  varargs:undefined,\n  get() {\n        // the `+` prepended here is necessary to convince the JSCompiler that varargs is indeed a number.\n        var ret = HEAP32[((+SYSCALLS.varargs)>>2)];\n        SYSCALLS.varargs += 4;\n        return ret;\n      },\n  getp() { return SYSCALLS.get() },\n  getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n  getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n  };\n  function ___syscall_chdir(path) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.chdir(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_dup3(fd, newfd, flags) {\n  try {\n  \n      var old = SYSCALLS.getStreamFromFD(fd);\n      if (old.fd === newfd) return -28;\n      var existing = FS.getStream(newfd);\n      if (existing) FS.close(existing);\n      return FS.createStream(old, newfd).fd;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_faccessat(dirfd, path, amode, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (amode & ~7) {\n        // need a valid mode\n        return -28;\n      }\n      var lookup = FS.lookupPath(path, { follow: true });\n      var node = lookup.node;\n      if (!node) {\n        return -44;\n      }\n      var perms = '';\n      if (amode & 4) perms += 'r';\n      if (amode & 2) perms += 'w';\n      if (amode & 1) perms += 'x';\n      if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {\n        return -2;\n      }\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var setErrNo = (value) => {\n      HEAP32[((___errno_location())>>2)] = value;\n      return value;\n    };\n  \n  function ___syscall_fcntl64(fd, cmd, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (cmd) {\n        case 0: {\n          var arg = SYSCALLS.get();\n          if (arg < 0) {\n            return -28;\n          }\n          while (FS.streams[arg]) {\n            arg++;\n          }\n          var newStream;\n          newStream = FS.createStream(stream, arg);\n          return newStream.fd;\n        }\n        case 1:\n        case 2:\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\n        case 3:\n          return stream.flags;\n        case 4: {\n          var arg = SYSCALLS.get();\n          stream.flags |= arg;\n          return 0;\n        }\n        case 5: {\n          var arg = SYSCALLS.getp();\n          var offset = 0;\n          // We're always unlocked.\n          HEAP16[(((arg)+(offset))>>1)] = 2;\n          return 0;\n        }\n        case 6:\n        case 7:\n          return 0; // Pretend that the locking is successful.\n        case 16:\n        case 8:\n          return -28; // These are for sockets. We don't have them fully implemented yet.\n        case 9:\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\n          setErrNo(28);\n          return -1;\n        default: {\n          return -28;\n        }\n      }\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_fstat64(fd, buf) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n  \n  function ___syscall_getcwd(buf, size) {\n  try {\n  \n      if (size === 0) return -28;\n      var cwd = FS.cwd();\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n      if (size < cwdLengthInBytes) return -68;\n      stringToUTF8(cwd, buf, size);\n      return cwdLengthInBytes;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  function ___syscall_getdents64(fd, dirp, count) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd)\n      stream.getdents ||= FS.readdir(stream.path);\n  \n      var struct_size = 280;\n      var pos = 0;\n      var off = FS.llseek(stream, 0, 1);\n  \n      var idx = Math.floor(off / struct_size);\n  \n      while (idx < stream.getdents.length && pos + struct_size <= count) {\n        var id;\n        var type;\n        var name = stream.getdents[idx];\n        if (name === '.') {\n          id = stream.node.id;\n          type = 4; // DT_DIR\n        }\n        else if (name === '..') {\n          var lookup = FS.lookupPath(stream.path, { parent: true });\n          id = lookup.node.id;\n          type = 4; // DT_DIR\n        }\n        else {\n          var child = FS.lookupNode(stream.node, name);\n          id = child.id;\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\n                 8;                             // DT_REG, regular file.\n        }\n        (tempI64 = [id>>>0,(tempDouble = id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble = (idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\n        stringToUTF8(name, dirp + pos + 19, 256);\n        pos += struct_size;\n        idx += 1;\n      }\n      FS.llseek(stream, idx * struct_size, 0);\n      return pos;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_ioctl(fd, op, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (op) {\n        case 21509: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21505: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcgets) {\n            var termios = stream.tty.ops.ioctl_tcgets(stream);\n            var argp = SYSCALLS.getp();\n            HEAP32[((argp)>>2)] = termios.c_iflag || 0;\n            HEAP32[(((argp)+(4))>>2)] = termios.c_oflag || 0;\n            HEAP32[(((argp)+(8))>>2)] = termios.c_cflag || 0;\n            HEAP32[(((argp)+(12))>>2)] = termios.c_lflag || 0;\n            for (var i = 0; i < 32; i++) {\n              HEAP8[(((argp + i)+(17))>>0)] = termios.c_cc[i] || 0;\n            }\n            return 0;\n          }\n          return 0;\n        }\n        case 21510:\n        case 21511:\n        case 21512: {\n          if (!stream.tty) return -59;\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21506:\n        case 21507:\n        case 21508: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcsets) {\n            var argp = SYSCALLS.getp();\n            var c_iflag = HEAP32[((argp)>>2)];\n            var c_oflag = HEAP32[(((argp)+(4))>>2)];\n            var c_cflag = HEAP32[(((argp)+(8))>>2)];\n            var c_lflag = HEAP32[(((argp)+(12))>>2)];\n            var c_cc = []\n            for (var i = 0; i < 32; i++) {\n              c_cc.push(HEAP8[(((argp + i)+(17))>>0)]);\n            }\n            return stream.tty.ops.ioctl_tcsets(stream.tty, op, { c_iflag, c_oflag, c_cflag, c_lflag, c_cc });\n          }\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21519: {\n          if (!stream.tty) return -59;\n          var argp = SYSCALLS.getp();\n          HEAP32[((argp)>>2)] = 0;\n          return 0;\n        }\n        case 21520: {\n          if (!stream.tty) return -59;\n          return -28; // not supported\n        }\n        case 21531: {\n          var argp = SYSCALLS.getp();\n          return FS.ioctl(stream, op, argp);\n        }\n        case 21523: {\n          // TODO: in theory we should write to the winsize struct that gets\n          // passed in, but for now musl doesn't read anything on it\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tiocgwinsz) {\n            var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n            var argp = SYSCALLS.getp();\n            HEAP16[((argp)>>1)] = winsize[0];\n            HEAP16[(((argp)+(2))>>1)] = winsize[1];\n          }\n          return 0;\n        }\n        case 21524: {\n          // TODO: technically, this ioctl call should change the window size.\n          // but, since emscripten doesn't have any concept of a terminal window\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21515: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        default: return -28; // not supported\n      }\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_lstat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doStat(FS.lstat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_mkdirat(dirfd, path, mode) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\n      // we want to create b in the context of this function\n      path = PATH.normalize(path);\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\n      FS.mkdir(path, mode, 0);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      var nofollow = flags & 256;\n      var allowEmpty = flags & 4096;\n      flags = flags & (~6400);\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_openat(dirfd, path, flags, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      var mode = varargs ? SYSCALLS.get() : 0;\n      return FS.open(path, flags, mode).fd;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  \n  function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (bufsize <= 0) return -28;\n      var ret = FS.readlink(path);\n  \n      var len = Math.min(bufsize, lengthBytesUTF8(ret));\n      var endChar = HEAP8[buf+len];\n      stringToUTF8(ret, buf, bufsize+1);\n      // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)\n      // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.\n      HEAP8[buf+len] = endChar;\n      return len;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_renameat(olddirfd, oldpath, newdirfd, newpath) {\n  try {\n  \n      oldpath = SYSCALLS.getStr(oldpath);\n      newpath = SYSCALLS.getStr(newpath);\n      oldpath = SYSCALLS.calculateAt(olddirfd, oldpath);\n      newpath = SYSCALLS.calculateAt(newdirfd, newpath);\n      FS.rename(oldpath, newpath);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_rmdir(path) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.rmdir(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_stat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doStat(FS.stat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_unlinkat(dirfd, path, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (flags === 0) {\n        FS.unlink(path);\n      } else if (flags === 512) {\n        FS.rmdir(path);\n      } else {\n        abort('Invalid flags passed to unlinkat');\n      }\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var nowIsMonotonic = 1;\n  var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\n\n  var __emscripten_throw_longjmp = () => {\n      throw Infinity;\n    };\n\n  var convertI32PairToI53Checked = (lo, hi) => {\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n    };\n  function __gmtime_js(time_low, time_high,tmPtr) {\n    var time = convertI32PairToI53Checked(time_low, time_high);;\n  \n    \n      var date = new Date(time * 1000);\n      HEAP32[((tmPtr)>>2)] = date.getUTCSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getUTCMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getUTCHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getUTCDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getUTCMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getUTCFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getUTCDay();\n      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n      var yday = ((date.getTime() - start) / (1000 * 60 * 60 * 24))|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n    ;\n  }\n\n  var isLeapYear = (year) => year%4 === 0 && (year%100 !== 0 || year%400 === 0);\n  \n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\n  \n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\n  var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\n  \n      return yday;\n    };\n  \n  function __localtime_js(time_low, time_high,tmPtr) {\n    var time = convertI32PairToI53Checked(time_low, time_high);;\n  \n    \n      var date = new Date(time*1000);\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n  \n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\n  \n      // Attention: DST is in December in South, and some regions don't have DST at all.\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\n    ;\n  }\n\n  \n  \n  \n  var __mktime_js = function(tmPtr) {\n  \n    var ret = (() => { \n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\n                          HEAP32[(((tmPtr)+(16))>>2)],\n                          HEAP32[(((tmPtr)+(12))>>2)],\n                          HEAP32[(((tmPtr)+(8))>>2)],\n                          HEAP32[(((tmPtr)+(4))>>2)],\n                          HEAP32[((tmPtr)>>2)],\n                          0);\n  \n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\n      var guessedOffset = date.getTimezoneOffset();\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\n      if (dst < 0) {\n        // Attention: some regions don't have DST at all.\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\n      }\n  \n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      // To match expected behavior, update fields from date\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\n  \n      var timeMs = date.getTime();\n      if (isNaN(timeMs)) {\n        setErrNo(61);\n        return -1;\n      }\n      // Return time in microseconds\n      return timeMs / 1000;\n     })();\n    return (setTempRet0((tempDouble = ret,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)), ret>>>0);\n  };\n\n  \n  \n  var stringToNewUTF8 = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8(str, ret, size);\n      return ret;\n    };\n  var __tzset_js = (timezone, daylight, tzname) => {\n      // TODO: Use (malleable) environment variables instead of system settings.\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n  \n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n  \n      // timezone is specified as seconds west of UTC (\"The external variable\n      // `timezone` shall be set to the difference, in seconds, between\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\n      // as returned by stdTimezoneOffset.\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\n  \n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\n  \n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : \"GMT\";\n      };\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = stringToNewUTF8(winterName);\n      var summerNamePtr = stringToNewUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        // Northern hemisphere\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\n      } else {\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\n      }\n    };\n\n  var _abort = () => {\n      abort('');\n    };\n\n  var _emscripten_set_main_loop_timing = (mode, value) => {\n      Browser.mainLoop.timingMode = mode;\n      Browser.mainLoop.timingValue = value;\n  \n      if (!Browser.mainLoop.func) {\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\n      }\n  \n      if (!Browser.mainLoop.running) {\n        \n        Browser.mainLoop.running = true;\n      }\n      if (mode == 0) {\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\n        };\n        Browser.mainLoop.method = 'timeout';\n      } else if (mode == 1) {\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\n        };\n        Browser.mainLoop.method = 'rAF';\n      } else if (mode == 2) {\n        if (typeof Browser.setImmediate == 'undefined') {\n          if (typeof setImmediate == 'undefined') {\n            // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\n            var setImmediates = [];\n            var emscriptenMainLoopMessageId = 'setimmediate';\n            /** @param {Event} event */\n            var Browser_setImmediate_messageHandler = (event) => {\n              // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\n              // so check for both cases.\n              if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\n                event.stopPropagation();\n                setImmediates.shift()();\n              }\n            };\n            addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\n            Browser.setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\n              setImmediates.push(func);\n              if (ENVIRONMENT_IS_WORKER) {\n                if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\n                Module['setImmediates'].push(func);\n                postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\n              } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\n            });\n          } else {\n            Browser.setImmediate = setImmediate;\n          }\n        }\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\n          Browser.setImmediate(Browser.mainLoop.runner);\n        };\n        Browser.mainLoop.method = 'immediate';\n      }\n      return 0;\n    };\n  \n  var _emscripten_get_now;\n      // Modern environment where performance.now() is supported:\n      // N.B. a shorter form \"_emscripten_get_now = performance.now;\" is\n      // unfortunately not allowed even in current browsers (e.g. FF Nightly 75).\n      _emscripten_get_now = () => performance.now();\n  ;\n  \n  \n    /**\n     * @param {number=} arg\n     * @param {boolean=} noSetTiming\n     */\n  var setMainLoop = (browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) => {\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\n  \n      Browser.mainLoop.func = browserIterationFunc;\n      Browser.mainLoop.arg = arg;\n  \n      // Closure compiler bug(?): Closure does not see that the assignment\n      //   var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop\n      // is a value copy of a number (even with the JSDoc @type annotation)\n      // but optimizeis the code as if the assignment was a reference assignment,\n      // which results in Browser.mainLoop.pause() not working. Hence use a\n      // workaround to make Closure believe this is a value copy that should occur:\n      // (TODO: Minimize this down to a small test case and report - was unable\n      // to reproduce in a small written test case)\n      /** @type{number} */\n      var thisMainLoopId = (() => Browser.mainLoop.currentlyRunningMainloop)();\n      function checkIsRunning() {\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\n          \n          return false;\n        }\n        return true;\n      }\n  \n      // We create the loop runner here but it is not actually running until\n      // _emscripten_set_main_loop_timing is called (which might happen a\n      // later time).  This member signifies that the current runner has not\n      // yet been started so that we can call runtimeKeepalivePush when it\n      // gets it timing set for the first time.\n      Browser.mainLoop.running = false;\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\n        if (ABORT) return;\n        if (Browser.mainLoop.queue.length > 0) {\n          var start = Date.now();\n          var blocker = Browser.mainLoop.queue.shift();\n          blocker.func(blocker.arg);\n          if (Browser.mainLoop.remainingBlockers) {\n            var remaining = Browser.mainLoop.remainingBlockers;\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\n            if (blocker.counted) {\n              Browser.mainLoop.remainingBlockers = next;\n            } else {\n              // not counted, but move the progress along a tiny bit\n              next = next + 0.5; // do not steal all the next one's progress\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\n            }\n          }\n          Browser.mainLoop.updateStatus();\n  \n          // catches pause/resume main loop from blocker execution\n          if (!checkIsRunning()) return;\n  \n          setTimeout(Browser.mainLoop.runner, 0);\n          return;\n        }\n  \n        // catch pauses from non-main loop sources\n        if (!checkIsRunning()) return;\n  \n        // Implement very basic swap interval control\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\n        if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\n          // Not the scheduled time to render this frame - skip.\n          Browser.mainLoop.scheduler();\n          return;\n        } else if (Browser.mainLoop.timingMode == 0) {\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\n        }\n  \n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\n        // VBO double-buffering and reduce GPU stalls.\n        GL.newRenderingFrameStarted();\n  \n        Browser.mainLoop.runIter(browserIterationFunc);\n  \n        // catch pauses from the main loop itself\n        if (!checkIsRunning()) return;\n  \n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\n        // to queue the newest produced audio samples.\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\n        //       do not need to be hardcoded into this function, but can be more generic.\n        if (typeof SDL == 'object') SDL.audio?.queueNewAudioData?.();\n  \n        Browser.mainLoop.scheduler();\n      }\n  \n      if (!noSetTiming) {\n        if (fps && fps > 0) {\n          _emscripten_set_main_loop_timing(0, 1000.0 / fps);\n        } else {\n          // Do rAF by rendering each frame (no decimating)\n          _emscripten_set_main_loop_timing(1, 1);\n        }\n  \n        Browser.mainLoop.scheduler();\n      }\n  \n      if (simulateInfiniteLoop) {\n        throw 'unwind';\n      }\n    };\n  \n  var handleException = (e) => {\n      // Certain exception types we do not treat as errors since they are used for\n      // internal control flow.\n      // 1. ExitStatus, which is thrown by exit()\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\n      //    that wish to return to JS event loop.\n      if (e instanceof ExitStatus || e == 'unwind') {\n        return EXITSTATUS;\n      }\n      quit_(1, e);\n    };\n  \n  \n  var runtimeKeepaliveCounter = 0;\n  var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n  \n  var _proc_exit = (code) => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        Module['onExit']?.(code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n  /** @suppress {duplicate } */\n  /** @param {boolean|number=} implicit */\n  var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n  \n      _proc_exit(status);\n    };\n  var _exit = exitJS;\n  \n  \n  var maybeExit = () => {\n      if (!keepRuntimeAlive()) {\n        try {\n          _exit(EXITSTATUS);\n        } catch (e) {\n          handleException(e);\n        }\n      }\n    };\n  var callUserCallback = (func) => {\n      if (ABORT) {\n        return;\n      }\n      try {\n        func();\n        maybeExit();\n      } catch (e) {\n        handleException(e);\n      }\n    };\n  \n  /** @param {number=} timeout */\n  var safeSetTimeout = (func, timeout) => {\n      \n      return setTimeout(() => {\n        \n        callUserCallback(func);\n      }, timeout);\n    };\n  \n  var warnOnce = (text) => {\n      warnOnce.shown ||= {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        err(text);\n      }\n    };\n  \n  \n  \n  var Browser = {\n  mainLoop:{\n  running:false,\n  scheduler:null,\n  method:\"\",\n  currentlyRunningMainloop:0,\n  func:null,\n  arg:0,\n  timingMode:0,\n  timingValue:0,\n  currentFrameNumber:0,\n  queue:[],\n  pause() {\n          Browser.mainLoop.scheduler = null;\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\n          Browser.mainLoop.currentlyRunningMainloop++;\n        },\n  resume() {\n          Browser.mainLoop.currentlyRunningMainloop++;\n          var timingMode = Browser.mainLoop.timingMode;\n          var timingValue = Browser.mainLoop.timingValue;\n          var func = Browser.mainLoop.func;\n          Browser.mainLoop.func = null;\n          // do not set timing and call scheduler, we will do it on the next lines\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\n          Browser.mainLoop.scheduler();\n        },\n  updateStatus() {\n          if (Module['setStatus']) {\n            var message = Module['statusMessage'] || 'Please wait...';\n            var remaining = Browser.mainLoop.remainingBlockers;\n            var expected = Browser.mainLoop.expectedBlockers;\n            if (remaining) {\n              if (remaining < expected) {\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\n              } else {\n                Module['setStatus'](message);\n              }\n            } else {\n              Module['setStatus']('');\n            }\n          }\n        },\n  runIter(func) {\n          if (ABORT) return;\n          if (Module['preMainLoop']) {\n            var preRet = Module['preMainLoop']();\n            if (preRet === false) {\n              return; // |return false| skips a frame\n            }\n          }\n          callUserCallback(func);\n          Module['postMainLoop']?.();\n        },\n  },\n  isFullscreen:false,\n  pointerLock:false,\n  moduleContextCreatedCallbacks:[],\n  workers:[],\n  init() {\n        if (Browser.initted) return;\n        Browser.initted = true;\n  \n        // Support for plugins that can process preloaded files. You can add more of these to\n        // your app by creating and appending to preloadPlugins.\n        //\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\n        // might create some side data structure for use later (like an Image element, etc.).\n  \n        var imagePlugin = {};\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\n        };\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          if (b.size !== byteArray.length) { // Safari bug #118630\n            // Safari's Blob can only take an ArrayBuffer\n            b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\n          }\n          var url = URL.createObjectURL(b);\n          var img = new Image();\n          img.onload = () => {\n            assert(img.complete, `Image ${name} could not be decoded`);\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\n            canvas.width = img.width;\n            canvas.height = img.height;\n            var ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            preloadedImages[name] = canvas;\n            URL.revokeObjectURL(url);\n            onload?.(byteArray);\n          };\n          img.onerror = (event) => {\n            err(`Image ${url} could not be decoded`);\n            onerror?.();\n          };\n          img.src = url;\n        };\n        preloadPlugins.push(imagePlugin);\n  \n        var audioPlugin = {};\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\n        };\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\n          var done = false;\n          function finish(audio) {\n            if (done) return;\n            done = true;\n            preloadedAudios[name] = audio;\n            onload?.(byteArray);\n          }\n          function fail() {\n            if (done) return;\n            done = true;\n            preloadedAudios[name] = new Audio(); // empty shim\n            onerror?.();\n          }\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          var url = URL.createObjectURL(b); // XXX we never revoke this!\n          var audio = new Audio();\n          audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\n          audio.onerror = function audio_onerror(event) {\n            if (done) return;\n            err(`warning: browser could not fully decode audio ${name}, trying slower base64 approach`);\n            function encode64(data) {\n              var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n              var PAD = '=';\n              var ret = '';\n              var leftchar = 0;\n              var leftbits = 0;\n              for (var i = 0; i < data.length; i++) {\n                leftchar = (leftchar << 8) | data[i];\n                leftbits += 8;\n                while (leftbits >= 6) {\n                  var curr = (leftchar >> (leftbits-6)) & 0x3f;\n                  leftbits -= 6;\n                  ret += BASE[curr];\n                }\n              }\n              if (leftbits == 2) {\n                ret += BASE[(leftchar&3) << 4];\n                ret += PAD + PAD;\n              } else if (leftbits == 4) {\n                ret += BASE[(leftchar&0xf) << 2];\n                ret += PAD;\n              }\n              return ret;\n            }\n            audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\n            finish(audio); // we don't wait for confirmation this worked - but it's worth trying\n          };\n          audio.src = url;\n          // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\n          safeSetTimeout(() => {\n            finish(audio); // try to use it even though it is not necessarily ready to play\n          }, 10000);\n        };\n        preloadPlugins.push(audioPlugin);\n  \n        // Canvas event setup\n  \n        function pointerLockChange() {\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\n                                document['mozPointerLockElement'] === Module['canvas'] ||\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\n                                document['msPointerLockElement'] === Module['canvas'];\n        }\n        var canvas = Module['canvas'];\n        if (canvas) {\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\n          // Module['forcedAspectRatio'] = 4 / 3;\n  \n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\n                                      canvas['mozRequestPointerLock'] ||\n                                      canvas['webkitRequestPointerLock'] ||\n                                      canvas['msRequestPointerLock'] ||\n                                      (() => {});\n          canvas.exitPointerLock = document['exitPointerLock'] ||\n                                   document['mozExitPointerLock'] ||\n                                   document['webkitExitPointerLock'] ||\n                                   document['msExitPointerLock'] ||\n                                   (() => {}); // no-op if function does not exist\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\n  \n          document.addEventListener('pointerlockchange', pointerLockChange, false);\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\n  \n          if (Module['elementPointerLock']) {\n            canvas.addEventListener(\"click\", (ev) => {\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\n                Module['canvas'].requestPointerLock();\n                ev.preventDefault();\n              }\n            }, false);\n          }\n        }\n      },\n  createContext(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\n  \n        var ctx;\n        var contextHandle;\n        if (useWebGL) {\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\n          var contextAttributes = {\n            antialias: false,\n            alpha: false,\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\n          };\n  \n          if (webGLContextAttributes) {\n            for (var attribute in webGLContextAttributes) {\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\n            }\n          }\n  \n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\n          // Browser.createContext() should not even be emitted.\n          if (typeof GL != 'undefined') {\n            contextHandle = GL.createContext(canvas, contextAttributes);\n            if (contextHandle) {\n              ctx = GL.getContext(contextHandle).GLctx;\n            }\n          }\n        } else {\n          ctx = canvas.getContext('2d');\n        }\n  \n        if (!ctx) return null;\n  \n        if (setInModule) {\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\n  \n          Module.ctx = ctx;\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\n          Module.useWebGL = useWebGL;\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\n          Browser.init();\n        }\n        return ctx;\n      },\n  destroyContext(canvas, useWebGL, setInModule) {},\n  fullscreenHandlersInstalled:false,\n  lockPointer:undefined,\n  resizeCanvas:undefined,\n  requestFullscreen(lockPointer, resizeCanvas) {\n        Browser.lockPointer = lockPointer;\n        Browser.resizeCanvas = resizeCanvas;\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\n  \n        var canvas = Module['canvas'];\n        function fullscreenChange() {\n          Browser.isFullscreen = false;\n          var canvasContainer = canvas.parentNode;\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\n            canvas.exitFullscreen = Browser.exitFullscreen;\n            if (Browser.lockPointer) canvas.requestPointerLock();\n            Browser.isFullscreen = true;\n            if (Browser.resizeCanvas) {\n              Browser.setFullscreenCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          } else {\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\n            canvasContainer.parentNode.removeChild(canvasContainer);\n  \n            if (Browser.resizeCanvas) {\n              Browser.setWindowedCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          }\n          Module['onFullScreen']?.(Browser.isFullscreen);\n          Module['onFullscreen']?.(Browser.isFullscreen);\n        }\n  \n        if (!Browser.fullscreenHandlersInstalled) {\n          Browser.fullscreenHandlersInstalled = true;\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\n        }\n  \n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\n        var canvasContainer = document.createElement(\"div\");\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\n        canvasContainer.appendChild(canvas);\n  \n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\n                                            canvasContainer['mozRequestFullScreen'] ||\n                                            canvasContainer['msRequestFullscreen'] ||\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\n  \n        canvasContainer.requestFullscreen();\n      },\n  exitFullscreen() {\n        // This is workaround for chrome. Trying to exit from fullscreen\n        // not in fullscreen state will cause \"TypeError: Document not active\"\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\n        if (!Browser.isFullscreen) {\n          return false;\n        }\n  \n        var CFS = document['exitFullscreen'] ||\n                  document['cancelFullScreen'] ||\n                  document['mozCancelFullScreen'] ||\n                  document['msExitFullscreen'] ||\n                  document['webkitCancelFullScreen'] ||\n            (() => {});\n        CFS.apply(document, []);\n        return true;\n      },\n  nextRAF:0,\n  fakeRequestAnimationFrame(func) {\n        // try to keep 60fps between calls to here\n        var now = Date.now();\n        if (Browser.nextRAF === 0) {\n          Browser.nextRAF = now + 1000/60;\n        } else {\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\n            Browser.nextRAF += 1000/60;\n          }\n        }\n        var delay = Math.max(Browser.nextRAF - now, 0);\n        setTimeout(func, delay);\n      },\n  requestAnimationFrame(func) {\n        if (typeof requestAnimationFrame == 'function') {\n          requestAnimationFrame(func);\n          return;\n        }\n        var RAF = Browser.fakeRequestAnimationFrame;\n        RAF(func);\n      },\n  safeSetTimeout(func, timeout) {\n        // Legacy function, this is used by the SDL2 port so we need to keep it\n        // around at least until that is updated.\n        // See https://github.com/libsdl-org/SDL/pull/6304\n        return safeSetTimeout(func, timeout);\n      },\n  safeRequestAnimationFrame(func) {\n        \n        return Browser.requestAnimationFrame(() => {\n          \n          callUserCallback(func);\n        });\n      },\n  getMimetype(name) {\n        return {\n          'jpg': 'image/jpeg',\n          'jpeg': 'image/jpeg',\n          'png': 'image/png',\n          'bmp': 'image/bmp',\n          'ogg': 'audio/ogg',\n          'wav': 'audio/wav',\n          'mp3': 'audio/mpeg'\n        }[name.substr(name.lastIndexOf('.')+1)];\n      },\n  getUserMedia(func) {\n        window.getUserMedia ||= navigator['getUserMedia'] ||\n                                navigator['mozGetUserMedia'];\n        window.getUserMedia(func);\n      },\n  getMovementX(event) {\n        return event['movementX'] ||\n               event['mozMovementX'] ||\n               event['webkitMovementX'] ||\n               0;\n      },\n  getMovementY(event) {\n        return event['movementY'] ||\n               event['mozMovementY'] ||\n               event['webkitMovementY'] ||\n               0;\n      },\n  getMouseWheelDelta(event) {\n        var delta = 0;\n        switch (event.type) {\n          case 'DOMMouseScroll':\n            // 3 lines make up a step\n            delta = event.detail / 3;\n            break;\n          case 'mousewheel':\n            // 120 units make up a step\n            delta = event.wheelDelta / 120;\n            break;\n          case 'wheel':\n            delta = event.deltaY\n            switch (event.deltaMode) {\n              case 0:\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\n                delta /= 100;\n                break;\n              case 1:\n                // DOM_DELTA_LINE: 3 lines make up a step\n                delta /= 3;\n                break;\n              case 2:\n                // DOM_DELTA_PAGE: A page makes up 80 steps\n                delta *= 80;\n                break;\n              default:\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\n            }\n            break;\n          default:\n            throw 'unrecognized mouse wheel event: ' + event.type;\n        }\n        return delta;\n      },\n  mouseX:0,\n  mouseY:0,\n  mouseMovementX:0,\n  mouseMovementY:0,\n  touches:{\n  },\n  lastTouches:{\n  },\n  calculateMouseCoords(pageX, pageY) {\n        // Calculate the movement based on the changes\n        // in the coordinates.\n        var rect = Module[\"canvas\"].getBoundingClientRect();\n        var cw = Module[\"canvas\"].width;\n        var ch = Module[\"canvas\"].height;\n  \n        // Neither .scrollX or .pageXOffset are defined in a spec, but\n        // we prefer .scrollX because it is currently in a spec draft.\n        // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\n        var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\n        var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\n        var adjustedX = pageX - (scrollX + rect.left);\n        var adjustedY = pageY - (scrollY + rect.top);\n  \n        // the canvas might be CSS-scaled compared to its backbuffer;\n        // SDL-using content will want mouse coordinates in terms\n        // of backbuffer units.\n        adjustedX = adjustedX * (cw / rect.width);\n        adjustedY = adjustedY * (ch / rect.height);\n  \n        return { x: adjustedX, y: adjustedY };\n      },\n  setMouseCoords(pageX, pageY) {\n        const {x, y} = Browser.calculateMouseCoords(pageX, pageY);\n        Browser.mouseMovementX = x - Browser.mouseX;\n        Browser.mouseMovementY = y - Browser.mouseY;\n        Browser.mouseX = x;\n        Browser.mouseY = y;\n      },\n  calculateMouseEvent(event) { // event should be mousemove, mousedown or mouseup\n        if (Browser.pointerLock) {\n          // When the pointer is locked, calculate the coordinates\n          // based on the movement of the mouse.\n          // Workaround for Firefox bug 764498\n          if (event.type != 'mousemove' &&\n              ('mozMovementX' in event)) {\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\n          } else {\n            Browser.mouseMovementX = Browser.getMovementX(event);\n            Browser.mouseMovementY = Browser.getMovementY(event);\n          }\n  \n          // check if SDL is available\n          if (typeof SDL != \"undefined\") {\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\n          } else {\n            // just add the mouse delta to the current absolut mouse position\n            // FIXME: ideally this should be clamped against the canvas size and zero\n            Browser.mouseX += Browser.mouseMovementX;\n            Browser.mouseY += Browser.mouseMovementY;\n          }\n        } else {\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\n            var touch = event.touch;\n            if (touch === undefined) {\n              return; // the \"touch\" property is only defined in SDL\n  \n            }\n            var coords = Browser.calculateMouseCoords(touch.pageX, touch.pageY);\n  \n            if (event.type === 'touchstart') {\n              Browser.lastTouches[touch.identifier] = coords;\n              Browser.touches[touch.identifier] = coords;\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\n              var last = Browser.touches[touch.identifier];\n              last ||= coords;\n              Browser.lastTouches[touch.identifier] = last;\n              Browser.touches[touch.identifier] = coords;\n            }\n            return;\n          }\n  \n          Browser.setMouseCoords(event.pageX, event.pageY);\n        }\n      },\n  resizeListeners:[],\n  updateResizeListeners() {\n        var canvas = Module['canvas'];\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\n      },\n  setCanvasSize(width, height, noUpdates) {\n        var canvas = Module['canvas'];\n        Browser.updateCanvasDimensions(canvas, width, height);\n        if (!noUpdates) Browser.updateResizeListeners();\n      },\n  windowedWidth:0,\n  windowedHeight:0,\n  setFullscreenCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Module['canvas']);\n        Browser.updateResizeListeners();\n      },\n  setWindowedCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Module['canvas']);\n        Browser.updateResizeListeners();\n      },\n  updateCanvasDimensions(canvas, wNative, hNative) {\n        if (wNative && hNative) {\n          canvas.widthNative = wNative;\n          canvas.heightNative = hNative;\n        } else {\n          wNative = canvas.widthNative;\n          hNative = canvas.heightNative;\n        }\n        var w = wNative;\n        var h = hNative;\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\n          if (w/h < Module['forcedAspectRatio']) {\n            w = Math.round(h * Module['forcedAspectRatio']);\n          } else {\n            h = Math.round(w / Module['forcedAspectRatio']);\n          }\n        }\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\n           var factor = Math.min(screen.width / w, screen.height / h);\n           w = Math.round(w * factor);\n           h = Math.round(h * factor);\n        }\n        if (Browser.resizeCanvas) {\n          if (canvas.width  != w) canvas.width  = w;\n          if (canvas.height != h) canvas.height = h;\n          if (typeof canvas.style != 'undefined') {\n            canvas.style.removeProperty( \"width\");\n            canvas.style.removeProperty(\"height\");\n          }\n        } else {\n          if (canvas.width  != wNative) canvas.width  = wNative;\n          if (canvas.height != hNative) canvas.height = hNative;\n          if (typeof canvas.style != 'undefined') {\n            if (w != wNative || h != hNative) {\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\n            } else {\n              canvas.style.removeProperty( \"width\");\n              canvas.style.removeProperty(\"height\");\n            }\n          }\n        }\n      },\n  };\n  \n  var EGL = {\n  errorCode:12288,\n  defaultDisplayInitialized:false,\n  currentContext:0,\n  currentReadSurface:0,\n  currentDrawSurface:0,\n  contextAttributes:{\n  alpha:false,\n  depth:false,\n  stencil:false,\n  antialias:false,\n  },\n  stringCache:{\n  },\n  setErrorCode(code) {\n        EGL.errorCode = code;\n      },\n  chooseConfig(display, attribList, config, config_size, numConfigs) {\n        if (display != 62000) {\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n          return 0;\n        }\n  \n        if (attribList) {\n          // read attribList if it is non-null\n          for (;;) {\n            var param = HEAP32[((attribList)>>2)];\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.alpha = (alphaSize > 0);\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.depth = (depthSize > 0);\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.stencil = (stencilSize > 0);\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples > 0);\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples == 1);\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\n            } else if (param == 0x3038 /*EGL_NONE*/) {\n                break;\n            }\n            attribList += 8;\n          }\n        }\n  \n        if ((!config || !config_size) && !numConfigs) {\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n        }\n        if (numConfigs) {\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\n        }\n        if (config && config_size > 0) {\n          HEAPU32[((config)>>2)] = 62002;\n        }\n  \n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      },\n  };\n  var _eglBindAPI = (api) => {\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      }\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n      return 0;\n    };\n\n  var _eglChooseConfig = (display, attrib_list, configs, config_size, numConfigs) => {\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\n    };\n\n  var webgl_enable_ANGLE_instanced_arrays = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\n      if (ext) {\n        ctx['vertexAttribDivisor'] = (index, divisor) => ext['vertexAttribDivisorANGLE'](index, divisor);\n        ctx['drawArraysInstanced'] = (mode, first, count, primcount) => ext['drawArraysInstancedANGLE'](mode, first, count, primcount);\n        ctx['drawElementsInstanced'] = (mode, count, type, indices, primcount) => ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount);\n        return 1;\n      }\n    };\n  \n  var webgl_enable_OES_vertex_array_object = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('OES_vertex_array_object');\n      if (ext) {\n        ctx['createVertexArray'] = () => ext['createVertexArrayOES']();\n        ctx['deleteVertexArray'] = (vao) => ext['deleteVertexArrayOES'](vao);\n        ctx['bindVertexArray'] = (vao) => ext['bindVertexArrayOES'](vao);\n        ctx['isVertexArray'] = (vao) => ext['isVertexArrayOES'](vao);\n        return 1;\n      }\n    };\n  \n  var webgl_enable_WEBGL_draw_buffers = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\n      if (ext) {\n        ctx['drawBuffers'] = (n, bufs) => ext['drawBuffersWEBGL'](n, bufs);\n        return 1;\n      }\n    };\n  \n  var webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance = (ctx) =>\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\n      !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\n  \n  var webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance = (ctx) => {\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\n    };\n  \n  var webgl_enable_WEBGL_multi_draw = (ctx) => {\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\n    };\n  \n  \n  var GL = {\n  counter:1,\n  buffers:[],\n  programs:[],\n  framebuffers:[],\n  renderbuffers:[],\n  textures:[],\n  shaders:[],\n  vaos:[],\n  contexts:[],\n  offscreenCanvases:{\n  },\n  queries:[],\n  samplers:[],\n  transformFeedbacks:[],\n  syncs:[],\n  byteSizeByTypeRoot:5120,\n  byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],\n  stringCache:{\n  },\n  stringiCache:{\n  },\n  unpackAlignment:4,\n  recordError:function recordError(errorCode) {\n        if (!GL.lastError) {\n          GL.lastError = errorCode;\n        }\n      },\n  getNewId:(table) => {\n        var ret = GL.counter++;\n        for (var i = table.length; i < ret; i++) {\n          table[i] = null;\n        }\n        return ret;\n      },\n  MAX_TEMP_BUFFER_SIZE:16777216,\n  numTempVertexBuffersPerSize:64,\n  log2ceilLookup:(i) => 32 - Math.clz32(i === 0 ? 0 : i - 1),\n  generateTempBuffers:(quads, context) => {\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\n        context.tempVertexBufferCounters1 = [];\n        context.tempVertexBufferCounters2 = [];\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\n        context.tempVertexBuffers1 = [];\n        context.tempVertexBuffers2 = [];\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\n        context.tempIndexBuffers = [];\n        context.tempIndexBuffers.length = largestIndex+1;\n        for (var i = 0; i <= largestIndex; ++i) {\n          context.tempIndexBuffers[i] = null; // Created on-demand\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\n          context.tempVertexBuffers1[i] = [];\n          context.tempVertexBuffers2[i] = [];\n          var ringbuffer1 = context.tempVertexBuffers1[i];\n          var ringbuffer2 = context.tempVertexBuffers2[i];\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\n          for (var j = 0; j < ringbufferLength; ++j) {\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\n          }\n        }\n  \n        if (quads) {\n          // GL_QUAD indexes can be precalculated\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\n          var quadIndexes = new Uint16Array(numIndexes);\n          var i = 0, v = 0;\n          while (1) {\n            quadIndexes[i++] = v;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+1;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+2;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+2;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+3;\n            if (i >= numIndexes) break;\n            v += 4;\n          }\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\n        }\n      },\n  getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\n        var idx = GL.log2ceilLookup(sizeBytes);\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\n        var vbo = ringbuffer[nextFreeBufferIndex];\n        if (vbo) {\n          return vbo;\n        }\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\n        return ringbuffer[nextFreeBufferIndex];\n      },\n  getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\n        var idx = GL.log2ceilLookup(sizeBytes);\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\n        if (ibo) {\n          return ibo;\n        }\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\n        return GL.currentContext.tempIndexBuffers[idx];\n      },\n  newRenderingFrameStarted:function newRenderingFrameStarted() {\n        if (!GL.currentContext) {\n          return;\n        }\n        var vb = GL.currentContext.tempVertexBuffers1;\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\n        GL.currentContext.tempVertexBuffers2 = vb;\n        vb = GL.currentContext.tempVertexBufferCounters1;\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\n        GL.currentContext.tempVertexBufferCounters2 = vb;\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\n        for (var i = 0; i <= largestIndex; ++i) {\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\n        }\n      },\n  getSource:(shader, count, string, length) => {\n        var source = '';\n        for (var i = 0; i < count; ++i) {\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\n        }\n        return source;\n      },\n  calcBufLength:function calcBufLength(size, type, stride, count) {\n        if (stride > 0) {\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\n        }\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\n        return size * typeSize * count;\n      },\n  usedTempBuffers:[],\n  preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\n        GL.resetBufferBinding = false;\n  \n        // TODO: initial pass to detect ranges we need to upload, might not need\n        // an upload per attrib\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\n          var cb = GL.currentContext.clientBuffers[i];\n          if (!cb.clientside || !cb.enabled) continue;\n  \n          GL.resetBufferBinding = true;\n  \n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\n          var buf = GL.getTempVertexBuffer(size);\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\n                                   0,\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\n        }\n      },\n  postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\n        if (GL.resetBufferBinding) {\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\n        }\n      },\n  createContext:(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) => {\n  \n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL\n        // context on a canvas, calling .getContext() will always return that\n        // context independent of which 'webgl' or 'webgl2'\n        // context version was passed. See:\n        //   https://bugs.webkit.org/show_bug.cgi?id=222758\n        // and:\n        //   https://github.com/emscripten-core/emscripten/issues/13295.\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari\n        // version field in above check.\n        if (!canvas.getContextSafariWebGL2Fixed) {\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\n          function fixedGetContext(ver, attrs) {\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\n          }\n          canvas.getContext = fixedGetContext;\n        }\n  \n        var ctx =\n          (webGLContextAttributes.majorVersion > 1)\n          ?\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\n          :\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\n            // https://caniuse.com/#feat=webgl\n            );\n  \n        if (!ctx) return 0;\n  \n        var handle = GL.registerContext(ctx, webGLContextAttributes);\n  \n        // If end user enables *glGetProcAddress() functionality, then we must filter out\n        // all future WebGL extensions from being passed to the user, and only restrict to advertising\n        // extensions that the *glGetProcAddress() function knows to handle.\n        var _allSupportedExtensions = ctx.getSupportedExtensions;\n        var supportedExtensionsForGetProcAddress = [\n          // WebGL 1 extensions\n          'ANGLE_instanced_arrays',\n          'EXT_blend_minmax',\n          'EXT_disjoint_timer_query',\n          'EXT_frag_depth',\n          'EXT_shader_texture_lod',\n          'EXT_sRGB',\n          'OES_element_index_uint',\n          'OES_fbo_render_mipmap',\n          'OES_standard_derivatives',\n          'OES_texture_float',\n          'OES_texture_half_float',\n          'OES_texture_half_float_linear',\n          'OES_vertex_array_object',\n          'WEBGL_color_buffer_float',\n          'WEBGL_depth_texture',\n          'WEBGL_draw_buffers',\n          // WebGL 2 extensions\n          'EXT_color_buffer_float',\n          'EXT_disjoint_timer_query_webgl2',\n          'EXT_texture_norm16',\n          'WEBGL_clip_cull_distance',\n          // WebGL 1 and WebGL 2 extensions\n          'EXT_color_buffer_half_float',\n          'EXT_float_blend',\n          'EXT_texture_compression_bptc',\n          'EXT_texture_compression_rgtc',\n          'EXT_texture_filter_anisotropic',\n          'KHR_parallel_shader_compile',\n          'OES_texture_float_linear',\n          'WEBGL_compressed_texture_s3tc',\n          'WEBGL_compressed_texture_s3tc_srgb',\n          'WEBGL_debug_renderer_info',\n          'WEBGL_debug_shaders',\n          'WEBGL_lose_context',\n          'WEBGL_multi_draw',\n        ];\n        ctx.getSupportedExtensions = function() {\n          return (_allSupportedExtensions.apply(this) || []).filter(ext => supportedExtensionsForGetProcAddress.includes(ext));\n        }\n  \n        return handle;\n      },\n  registerContext:(ctx, webGLContextAttributes) => {\n        // without pthreads a context is just an integer ID\n        var handle = GL.getNewId(GL.contexts);\n  \n        var context = {\n          handle,\n          attributes: webGLContextAttributes,\n          version: webGLContextAttributes.majorVersion,\n          GLctx: ctx\n        };\n  \n        // Store the created context object so that we can access the context\n        // given a canvas without having to pass the parameters again.\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\n        GL.contexts[handle] = context;\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\n          GL.initExtensions(context);\n        }\n  \n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\n        context.clientBuffers = [];\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\n          context.clientBuffers[i] = {\n            enabled: false,\n            clientside: false,\n            size: 0,\n            type: 0,\n            normalized: 0,\n            stride: 0,\n            ptr: 0,\n            vertexAttribPointerAdaptor: null,\n          };\n        }\n  \n        GL.generateTempBuffers(false, context);\n  \n        return handle;\n      },\n  makeContextCurrent:(contextHandle) => {\n  \n        // Active Emscripten GL layer context object.\n        GL.currentContext = GL.contexts[contextHandle];\n        // Active WebGL context object.\n        Module.ctx = GLctx = GL.currentContext?.GLctx;\n        return !(contextHandle && !GLctx);\n      },\n  getContext:(contextHandle) => {\n        return GL.contexts[contextHandle];\n      },\n  deleteContext:(contextHandle) => {\n        if (GL.currentContext === GL.contexts[contextHandle]) {\n          GL.currentContext = null;\n        }\n        if (typeof JSEvents == 'object') {\n          // Release all JS event handlers on the DOM element that the GL context is\n          // associated with since the context is now deleted.\n          JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\n        }\n        // Make sure the canvas object no longer refers to the context object so\n        // there are no GC surprises.\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) {\n          GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined;\n        }\n        GL.contexts[contextHandle] = null;\n      },\n  initExtensions:(context) => {\n        // If this function is called without a specific context object, init the\n        // extensions of the currently active context.\n        context ||= GL.currentContext;\n  \n        if (context.initExtensionsDone) return;\n        context.initExtensionsDone = true;\n  \n        var GLctx = context.GLctx;\n  \n        // Detect the presence of a few extensions manually, ction GL interop\n        // layer itself will need to know if they exist.\n  \n        // Extensions that are only available in WebGL 1 (the calls will be no-ops\n        // if called on a WebGL 2 context active)\n        webgl_enable_ANGLE_instanced_arrays(GLctx);\n        webgl_enable_OES_vertex_array_object(GLctx);\n        webgl_enable_WEBGL_draw_buffers(GLctx);\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\n  \n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\n        // that's based on core APIs, and exposes only the queryCounterEXT()\n        // entrypoint.\n        if (context.version >= 2) {\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\n        }\n  \n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\n        {\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\n        }\n  \n        webgl_enable_WEBGL_multi_draw(GLctx);\n  \n        // .getSupportedExtensions() can return null if context is lost, so coerce\n        // to empty array.\n        var exts = GLctx.getSupportedExtensions() || [];\n        exts.forEach((ext) => {\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders\n          // are not enabled by default.\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\n            // Call .getExtension() to enable that extension permanently.\n            GLctx.getExtension(ext);\n          }\n        });\n      },\n  getExtensions() {\n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n        var exts = GLctx.getSupportedExtensions() || [];\n        exts = exts.concat(exts.map((e) => \"GL_\" + e));\n        return exts;\n      },\n  };\n  \n  var _eglCreateContext = (display, config, hmm, contextAttribs) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n  \n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\n      var glesContextVersion = 1;\n      for (;;) {\n        var param = HEAP32[((contextAttribs)>>2)];\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\n        } else if (param == 0x3038 /*EGL_NONE*/) {\n          break;\n        } else {\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\n          return 0;\n        }\n        contextAttribs += 8;\n      }\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0; /* EGL_NO_CONTEXT */\n      }\n  \n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\n      EGL.contextAttributes.minorVersion = 0;\n  \n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\n  \n      if (EGL.context != 0) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n  \n        // Run callbacks so that GL emulation works\n        GL.makeContextCurrent(EGL.context);\n        Module.useWebGL = true;\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\n  \n        // Note: This function only creates a context, but it shall not make it active.\n        GL.makeContextCurrent(null);\n        return 62004;\n      } else {\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\n        return 0; /* EGL_NO_CONTEXT */\n      }\n    };\n\n  var _eglCreateWindowSurface = (display, config, win, attrib_list) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      // TODO: Examine attrib_list! Parameters that can be present there are:\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\n      // - EGL_VG_COLORSPACE (can't be set)\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 62006; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  \n  var _eglDestroyContext = (display, context) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (context != 62004) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n  \n      GL.deleteContext(EGL.context);\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.currentContext == context) {\n        EGL.currentContext = 0;\n      }\n      return 1 /* EGL_TRUE */;\n    };\n\n  var _eglDestroySurface = (display, surface) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 1;\n      }\n      if (EGL.currentReadSurface == surface) {\n        EGL.currentReadSurface = 0;\n      }\n      if (EGL.currentDrawSurface == surface) {\n        EGL.currentDrawSurface = 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  var _eglGetConfigAttrib = (display, config, attribute, value) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      if (!value) {\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n        return 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      switch (attribute) {\n      case 0x3020: // EGL_BUFFER_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\n        return 1;\n      case 0x3021: // EGL_ALPHA_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\n        return 1;\n      case 0x3022: // EGL_BLUE_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3023: // EGL_GREEN_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3024: // EGL_RED_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3025: // EGL_DEPTH_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\n        return 1;\n      case 0x3026: // EGL_STENCIL_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\n        return 1;\n      case 0x3027: // EGL_CONFIG_CAVEAT\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3028: // EGL_CONFIG_ID\n        HEAP32[((value)>>2)] = 62002;\n        return 1;\n      case 0x3029: // EGL_LEVEL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\n        HEAP32[((value)>>2)] = 16777216;\n        return 1;\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302D: // EGL_NATIVE_RENDERABLE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3031: // EGL_SAMPLES\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\n        return 1;\n      case 0x3032: // EGL_SAMPLE_BUFFERS\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\n        return 1;\n      case 0x3033: // EGL_SURFACE_TYPE\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3034: // EGL_TRANSPARENT_TYPE\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\n        HEAP32[((value)>>2)] = -1;\n        return 1;\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 1;\n        return 1;\n      case 0x303D: // EGL_LUMINANCE_SIZE\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\n        HEAP32[((value)>>2)] = 0x308E;\n        return 1;\n      case 0x3040: // EGL_RENDERABLE_TYPE\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3042: // EGL_CONFORMANT\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      default:\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\n        return 0;\n      }\n    };\n\n  var _eglGetDisplay = (nativeDisplayType) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      // Emscripten EGL implementation \"emulates\" X11, and eglGetDisplay is\n      // expected to accept/receive a pointer to an X11 Display object (or\n      // EGL_DEFAULT_DISPLAY).\n      if (nativeDisplayType != 0 /* EGL_DEFAULT_DISPLAY */ && nativeDisplayType != 1 /* see library_xlib.js */) {\n        return 0; // EGL_NO_DISPLAY\n      }\n      return 62000;\n    };\n\n  var _eglGetError = () => EGL.errorCode;\n\n  var _eglInitialize = (display, majorVersion, minorVersion) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (majorVersion) {\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\n      }\n      if (minorVersion) {\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\n      }\n      EGL.defaultDisplayInitialized = true;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  var _eglMakeCurrent = (display, draw, read, context) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0 /* EGL_FALSE */;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      if (context != 0 && context != 62004) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 0;\n      }\n  \n      GL.makeContextCurrent(context ? EGL.context : null);\n  \n      EGL.currentContext = context;\n      EGL.currentDrawSurface = draw;\n      EGL.currentReadSurface = read;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1 /* EGL_TRUE */;\n    };\n\n  \n  var _eglQueryString = (display, name) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\n      var ret;\n      switch (name) {\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\n        default:\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n      }\n      EGL.stringCache[name] = ret;\n      return ret;\n    };\n\n  var _eglSwapBuffers = (dpy, surface) => {\n  \n      if (!EGL.defaultDisplayInitialized) {\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\n      } else if (!Module.ctx) {\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\n      } else if (Module.ctx.isContextLost()) {\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\n      } else {\n        // According to documentation this does an implicit flush.\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\n        // the flush was removed since this _may_ result in slowing code down.\n        //_glFlush();\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1 /* EGL_TRUE */;\n      }\n      return 0 /* EGL_FALSE */;\n    };\n\n  \n  var _eglSwapInterval = (display, interval) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (interval == 0) _emscripten_set_main_loop_timing(0, 0);\n      else _emscripten_set_main_loop_timing(1, interval);\n  \n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var _eglTerminate = (display) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      EGL.currentContext = 0;\n      EGL.currentReadSurface = 0;\n      EGL.currentDrawSurface = 0;\n      EGL.defaultDisplayInitialized = false;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  /** @suppress {duplicate } */\n  var _eglWaitClient = () => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n  var _eglWaitGL = _eglWaitClient;\n\n  var _eglWaitNative = (nativeEngineId) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var readEmAsmArgsArray = [];\n  var readEmAsmArgs = (sigPtr, buf) => {\n      readEmAsmArgsArray.length = 0;\n      var ch;\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\n      // index into HEAP32.\n      while (ch = HEAPU8[sigPtr++]) {\n        // Floats are always passed as doubles, so all types except for 'i'\n        // are 8 bytes and require alignment.\n        var wide = (ch != 105);\n        wide &= (ch != 112);\n        buf += wide && (buf % 8) ? 4 : 0;\n        readEmAsmArgsArray.push(\n          // Special case for pointers under wasm64 or CAN_ADDRESS_2GB mode.\n          ch == 112 ? HEAPU32[((buf)>>2)] :\n          ch == 105 ?\n            HEAP32[((buf)>>2)] :\n            HEAPF64[((buf)>>3)]\n        );\n        buf += wide ? 8 : 4;\n      }\n      return readEmAsmArgsArray;\n    };\n  var runEmAsmFunction = (code, sigPtr, argbuf) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      return ASM_CONSTS[code].apply(null, args);\n    };\n  var _emscripten_asm_const_int = (code, sigPtr, argbuf) => {\n      return runEmAsmFunction(code, sigPtr, argbuf);\n    };\n\n  var runMainThreadEmAsm = (code, sigPtr, argbuf, sync) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      return ASM_CONSTS[code].apply(null, args);\n    };\n  var _emscripten_asm_const_int_sync_on_main_thread = (code, sigPtr, argbuf) => {\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\n    };\n\n  var _emscripten_date_now = () => Date.now();\n\n  var withStackSave = (f) => {\n      var stack = stackSave();\n      var ret = f();\n      stackRestore(stack);\n      return ret;\n    };\n  var JSEvents = {\n  inEventHandler:0,\n  removeAllEventListeners() {\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\n          JSEvents._removeHandler(i);\n        }\n        JSEvents.eventHandlers = [];\n        JSEvents.deferredCalls = [];\n      },\n  registerRemoveEventListeners() {\n        if (!JSEvents.removeEventListenersRegistered) {\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\n          JSEvents.removeEventListenersRegistered = true;\n        }\n      },\n  deferredCalls:[],\n  deferCall(targetFunction, precedence, argsList) {\n        function arraysHaveEqualContent(arrA, arrB) {\n          if (arrA.length != arrB.length) return false;\n  \n          for (var i in arrA) {\n            if (arrA[i] != arrB[i]) return false;\n          }\n          return true;\n        }\n        // Test if the given call was already queued, and if so, don't add it again.\n        for (var i in JSEvents.deferredCalls) {\n          var call = JSEvents.deferredCalls[i];\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n            return;\n          }\n        }\n        JSEvents.deferredCalls.push({\n          targetFunction,\n          precedence,\n          argsList\n        });\n  \n        JSEvents.deferredCalls.sort((x,y) => x.precedence < y.precedence);\n      },\n  removeDeferredCalls(targetFunction) {\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\n            JSEvents.deferredCalls.splice(i, 1);\n            --i;\n          }\n        }\n      },\n  canPerformEventHandlerRequests() {\n        if (navigator.userActivation) {\n          // Verify against transient activation status from UserActivation API\n          // whether it is possible to perform a request here without needing to defer. See\n          // https://developer.mozilla.org/en-US/docs/Web/Security/User_activation#transient_activation\n          // and https://caniuse.com/mdn-api_useractivation\n          // At the time of writing, Firefox does not support this API: https://bugzilla.mozilla.org/show_bug.cgi?id=1791079\n          return navigator.userActivation.isActive;\n        }\n  \n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n      },\n  runDeferredCalls() {\n        if (!JSEvents.canPerformEventHandlerRequests()) {\n          return;\n        }\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n          var call = JSEvents.deferredCalls[i];\n          JSEvents.deferredCalls.splice(i, 1);\n          --i;\n          call.targetFunction.apply(null, call.argsList);\n        }\n      },\n  eventHandlers:[],\n  removeAllHandlersOnTarget:(target, eventTypeString) => {\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n          if (JSEvents.eventHandlers[i].target == target &&\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n             JSEvents._removeHandler(i--);\n           }\n        }\n      },\n  _removeHandler(i) {\n        var h = JSEvents.eventHandlers[i];\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n        JSEvents.eventHandlers.splice(i, 1);\n      },\n  registerOrRemoveHandler(eventHandler) {\n        if (!eventHandler.target) {\n          return -4;\n        }\n        var jsEventHandler = function jsEventHandler(event) {\n          // Increment nesting count for the event handler.\n          ++JSEvents.inEventHandler;\n          JSEvents.currentEventHandler = eventHandler;\n          // Process any old deferred calls the user has placed.\n          JSEvents.runDeferredCalls();\n          // Process the actual event, calls back to user C code handler.\n          eventHandler.handlerFunc(event);\n          // Process any new deferred calls that were placed right now from this event handler.\n          JSEvents.runDeferredCalls();\n          // Out of event handler - restore nesting count.\n          --JSEvents.inEventHandler;\n        };\n  \n        if (eventHandler.callbackfunc) {\n          eventHandler.eventListenerFunc = jsEventHandler;\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\n          JSEvents.eventHandlers.push(eventHandler);\n          JSEvents.registerRemoveEventListeners();\n        } else {\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n               JSEvents._removeHandler(i--);\n             }\n          }\n        }\n        return 0;\n      },\n  getNodeNameForTarget(target) {\n        if (!target) return '';\n        if (target == window) return '#window';\n        if (target == screen) return '#screen';\n        return target?.nodeName || '';\n      },\n  fullscreenEnabled() {\n        return document.fullscreenEnabled\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\n        || document.webkitFullscreenEnabled\n         ;\n      },\n  };\n  \n  var setLetterbox = (element, topBottom, leftRight) => {\n      // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\n      element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\n      element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\n    };\n  \n  var hideEverythingExceptGivenElement = (onlyVisibleElement) => {\n      var child = onlyVisibleElement;\n      var parent = child.parentNode;\n      var hiddenElements = [];\n      while (child != document.body) {\n        var children = parent.children;\n        for (var i = 0; i < children.length; ++i) {\n          if (children[i] != child) {\n            hiddenElements.push({ node: children[i], displayState: children[i].style.display });\n            children[i].style.display = 'none';\n          }\n        }\n        child = parent;\n        parent = parent.parentNode;\n      }\n      return hiddenElements;\n    };\n  \n  var restoreOldWindowedStyle = null;\n  \n  \n  \n  var maybeCStringToJsString = (cString) => {\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\n      // In other words, if cString > 2 then it's a pointer to a valid place in\n      // memory, and points to a C string.\n      return cString > 2 ? UTF8ToString(cString) : cString;\n    };\n  \n  var specialHTMLTargets = [0, document, window];\n  var findEventTarget = (target) => {\n      target = maybeCStringToJsString(target);\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\n      return domElement;\n    };\n  var findCanvasEventTarget = (target) => findEventTarget(target);\n  var _emscripten_get_canvas_element_size = (target, width, height) => {\n      var canvas = findCanvasEventTarget(target);\n      if (!canvas) return -4;\n      HEAP32[((width)>>2)] = canvas.width;\n      HEAP32[((height)>>2)] = canvas.height;\n    };\n  \n  \n  \n  var stringToUTF8OnStack = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    };\n  var getCanvasElementSize = (target) => withStackSave(() => {\n      var w = stackAlloc(8);\n      var h = w + 4;\n  \n      var targetInt = stringToUTF8OnStack(target.id);\n      var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\n      var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\n      return size;\n    });\n  \n  \n  var _emscripten_set_canvas_element_size = (target, width, height) => {\n      var canvas = findCanvasEventTarget(target);\n      if (!canvas) return -4;\n      canvas.width = width;\n      canvas.height = height;\n      return 0;\n    };\n  \n  \n  var setCanvasElementSize = (target, width, height) => {\n      if (!target.controlTransferredOffscreen) {\n        target.width = width;\n        target.height = height;\n      } else {\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\n        withStackSave(() => {\n          var targetInt = stringToUTF8OnStack(target.id);\n          _emscripten_set_canvas_element_size(targetInt, width, height);\n        });\n      }\n    };\n  var registerRestoreOldStyle = (canvas) => {\n      var canvasSize = getCanvasElementSize(canvas);\n      var oldWidth = canvasSize[0];\n      var oldHeight = canvasSize[1];\n      var oldCssWidth = canvas.style.width;\n      var oldCssHeight = canvas.style.height;\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\n      // Firefox always has black background color.\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\n      var oldPaddingRight = canvas.style.paddingRight;\n      var oldPaddingTop = canvas.style.paddingTop;\n      var oldPaddingBottom = canvas.style.paddingBottom;\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\n      var oldMarginRight = canvas.style.marginRight;\n      var oldMarginTop = canvas.style.marginTop;\n      var oldMarginBottom = canvas.style.marginBottom;\n      var oldDocumentBodyMargin = document.body.style.margin;\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\n      var oldDocumentScroll = document.body.scroll; // IE\n      var oldImageRendering = canvas.style.imageRendering;\n  \n      function restoreOldStyle() {\n        var fullscreenElement = document.fullscreenElement\n          || document.webkitFullscreenElement\n          ;\n        if (!fullscreenElement) {\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\n  \n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\n  \n          setCanvasElementSize(canvas, oldWidth, oldHeight);\n  \n          canvas.style.width = oldCssWidth;\n          canvas.style.height = oldCssHeight;\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\n          canvas.style.paddingRight = oldPaddingRight;\n          canvas.style.paddingTop = oldPaddingTop;\n          canvas.style.paddingBottom = oldPaddingBottom;\n          canvas.style.marginLeft = oldMarginLeft; // IE11\n          canvas.style.marginRight = oldMarginRight;\n          canvas.style.marginTop = oldMarginTop;\n          canvas.style.marginBottom = oldMarginBottom;\n          document.body.style.margin = oldDocumentBodyMargin;\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\n          document.body.scroll = oldDocumentScroll; // IE\n          canvas.style.imageRendering = oldImageRendering;\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\n  \n          if (currentFullscreenStrategy.canvasResizedCallback) {\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\n          }\n        }\n      }\n      document.addEventListener('fullscreenchange', restoreOldStyle);\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\n      return restoreOldStyle;\n    };\n  \n  var restoreHiddenElements = (hiddenElements) => {\n      for (var i = 0; i < hiddenElements.length; ++i) {\n        hiddenElements[i].node.style.display = hiddenElements[i].displayState;\n      }\n    };\n  \n  var currentFullscreenStrategy = {\n  };\n  \n  \n  \n  \n  \n  \n  /** @suppress {checkTypes} */\n  var jstoi_q = (str) => parseInt(str);\n  var softFullscreenResizeWebGLRenderTarget = () => {\n      var dpr = devicePixelRatio;\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\n      var w = screenWidth;\n      var h = screenHeight;\n      var canvas = currentFullscreenStrategy.target;\n      var canvasSize = getCanvasElementSize(canvas);\n      var x = canvasSize[0];\n      var y = canvasSize[1];\n      var topMargin;\n  \n      if (inAspectRatioFixedFullscreenMode) {\n        if (w*y < x*h) h = (w * y / x) | 0;\n        else if (w*y > x*h) w = (h * x / y) | 0;\n        topMargin = ((screenHeight - h) / 2) | 0;\n      }\n  \n      if (inPixelPerfectFullscreenMode) {\n        setCanvasElementSize(canvas, w, h);\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\n      }\n  \n      // Back to CSS pixels.\n      if (inHiDPIFullscreenMode) {\n        topMargin /= dpr;\n        w /= dpr;\n        h /= dpr;\n        // Round to nearest 4 digits of precision.\n        w = Math.round(w*1e4)/1e4;\n        h = Math.round(h*1e4)/1e4;\n        topMargin = Math.round(topMargin*1e4)/1e4;\n      }\n  \n      if (inCenteredWithoutScalingFullscreenMode) {\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\n        setLetterbox(canvas, t, b);\n      } else {\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        var b = (innerWidth - w) / 2;\n        setLetterbox(canvas, topMargin, b);\n      }\n  \n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\n      }\n    };\n  \n  \n  \n  \n  \n  \n  \n  var getBoundingClientRect = (e) => specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\n  var JSEvents_resizeCanvasForFullscreen = (target, strategy) => {\n      var restoreOldStyle = registerRestoreOldStyle(target);\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\n      var rect = getBoundingClientRect(target);\n      var windowedCssWidth = rect.width;\n      var windowedCssHeight = rect.height;\n      var canvasSize = getCanvasElementSize(target);\n      var windowedRttWidth = canvasSize[0];\n      var windowedRttHeight = canvasSize[1];\n  \n      if (strategy.scaleMode == 3) {\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\n        cssWidth = windowedCssWidth;\n        cssHeight = windowedCssHeight;\n      } else if (strategy.scaleMode == 2) {\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\n          cssHeight = desiredCssHeight;\n        } else {\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\n          cssWidth = desiredCssWidth;\n        }\n      }\n  \n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\n      // padding a default white color. Do it only if user has not customized their own background color.\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\n      // IE11 does the same, but requires the color to be set in the document body.\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\n      // Firefox always shows black letterboxes independent of style color.\n  \n      target.style.width = cssWidth + 'px';\n      target.style.height = cssHeight + 'px';\n  \n      if (strategy.filteringMode == 1) {\n        target.style.imageRendering = 'optimizeSpeed';\n        target.style.imageRendering = '-moz-crisp-edges';\n        target.style.imageRendering = '-o-crisp-edges';\n        target.style.imageRendering = '-webkit-optimize-contrast';\n        target.style.imageRendering = 'optimize-contrast';\n        target.style.imageRendering = 'crisp-edges';\n        target.style.imageRendering = 'pixelated';\n      }\n  \n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\n      if (strategy.canvasResolutionScaleMode != 0) {\n        var newWidth = (cssWidth * dpiScale)|0;\n        var newHeight = (cssHeight * dpiScale)|0;\n        setCanvasElementSize(target, newWidth, newHeight);\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\n      }\n      return restoreOldStyle;\n    };\n  \n  var _emscripten_enter_soft_fullscreen = (target, fullscreenStrategy) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      var strategy = {\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\n          target,\n          softFullscreen: true\n      };\n  \n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\n  \n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\n      document.body.scroll = \"no\"; // IE11\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\n  \n      var hiddenElements = hideEverythingExceptGivenElement(target);\n  \n      function restoreWindowedState() {\n        restoreOldStyle();\n        restoreHiddenElements(hiddenElements);\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\n        if (strategy.canvasResizedCallback) {\n          ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\n        }\n        currentFullscreenStrategy = 0;\n      }\n      restoreOldWindowedStyle = restoreWindowedState;\n      currentFullscreenStrategy = strategy;\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\n  \n      // Inform the caller that the canvas size has changed.\n      if (strategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\n      }\n  \n      return 0;\n    };\n\n  \n  \n  \n  var JSEvents_requestFullscreen = (target, strategy) => {\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\n      }\n  \n      if (target.requestFullscreen) {\n        target.requestFullscreen();\n      } else if (target.webkitRequestFullscreen) {\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else {\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\n      }\n  \n      currentFullscreenStrategy = strategy;\n  \n      if (strategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\n      }\n  \n      return 0;\n    };\n  \n  var _emscripten_exit_fullscreen = () => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      // Make sure no queued up calls will fire after this.\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\n  \n      var d = specialHTMLTargets[1];\n      if (d.exitFullscreen) {\n        d.fullscreenElement && d.exitFullscreen();\n      } else if (d.webkitExitFullscreen) {\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\n      } else {\n        return -1;\n      }\n  \n      return 0;\n    };\n\n  \n  var requestPointerLock = (target) => {\n      if (target.requestPointerLock) {\n        target.requestPointerLock();\n      } else {\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\n        // or if the whole browser just doesn't support the feature.\n        if (document.body.requestPointerLock\n          ) {\n          return -3;\n        }\n        return -1;\n      }\n      return 0;\n    };\n  var _emscripten_exit_pointerlock = () => {\n      // Make sure no queued up calls will fire after this.\n      JSEvents.removeDeferredCalls(requestPointerLock);\n  \n      if (document.exitPointerLock) {\n        document.exitPointerLock();\n      } else {\n        return -1;\n      }\n      return 0;\n    };\n\n  var _emscripten_exit_soft_fullscreen = () => {\n      restoreOldWindowedStyle?.();\n      restoreOldWindowedStyle = null;\n  \n      return 0;\n    };\n\n  var _emscripten_get_device_pixel_ratio = () => {\n      return devicePixelRatio;\n    };\n\n  \n  \n  var _emscripten_get_element_css_size = (target, width, height) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      var rect = getBoundingClientRect(target);\n      HEAPF64[((width)>>3)] = rect.width;\n      HEAPF64[((height)>>3)] = rect.height;\n  \n      return 0;\n    };\n\n  \n  var fillGamepadEventData = (eventStruct, e) => {\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\n      for (var i = 0; i < e.axes.length; ++i) {\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\n      }\n      for (var i = 0; i < e.buttons.length; ++i) {\n        if (typeof e.buttons[i] == 'object') {\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\n        } else {\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\n        }\n      }\n      for (var i = 0; i < e.buttons.length; ++i) {\n        if (typeof e.buttons[i] == 'object') {\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\n        } else {\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\n          /** @suppress {checkTypes} */\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\n        }\n      }\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\n      stringToUTF8(e.id, eventStruct + 1304, 64);\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\n    };\n  var _emscripten_get_gamepad_status = (index, gamepadState) => {\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\n  \n      // NO_DATA is returned on a Gamepad index that was removed.\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\n      // This is because gamepads must keep their original position in the array.\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\n      if (!JSEvents.lastGamepadState[index]) return -7;\n  \n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\n      return 0;\n    };\n\n\n  var _emscripten_get_num_gamepads = () => {\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\n      // Otherwise the following line will throw an exception.\n      return JSEvents.lastGamepadState.length;\n    };\n\n  var _emscripten_get_screen_size = (width, height) => {\n      HEAP32[((width)>>2)] = screen.width;\n      HEAP32[((height)>>2)] = screen.height;\n    };\n\n  /** @suppress {duplicate } */\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\n  var _emscripten_glActiveTexture = _glActiveTexture;\n\n  /** @suppress {duplicate } */\n  var _glAttachShader = (program, shader) => {\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glAttachShader = _glAttachShader;\n\n  /** @suppress {duplicate } */\n  var _glBeginQuery = (target, id) => {\n      GLctx.beginQuery(target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQuery = _glBeginQuery;\n\n  /** @suppress {duplicate } */\n  var _glBeginQueryEXT = (target, id) => {\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\n\n  /** @suppress {duplicate } */\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindAttribLocation = (program, index, name) => {\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\n    };\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\n\n  /** @suppress {duplicate } */\n  var _glBindBuffer = (target, buffer) => {\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\n        GLctx.currentArrayBufferBinding = buffer;\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\n        GLctx.currentElementArrayBufferBinding = buffer;\n      }\n  \n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2\n        // API function call when a buffer is bound to\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelPackBufferBinding = buffer;\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\n        // use a different WebGL 2 API function call when a buffer is bound to\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelUnpackBufferBinding = buffer;\n      }\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBuffer = _glBindBuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferBase = (target, index, buffer) => {\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferRange = (target, index, buffer, offset, ptrsize) => {\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\n    };\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\n\n  /** @suppress {duplicate } */\n  var _glBindFramebuffer = (target, framebuffer) => {\n  \n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\n  \n    };\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindRenderbuffer = (target, renderbuffer) => {\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindSampler = (unit, sampler) => {\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\n    };\n  var _emscripten_glBindSampler = _glBindSampler;\n\n  /** @suppress {duplicate } */\n  var _glBindTexture = (target, texture) => {\n      GLctx.bindTexture(target, GL.textures[texture]);\n    };\n  var _emscripten_glBindTexture = _glBindTexture;\n\n  /** @suppress {duplicate } */\n  var _glBindTransformFeedback = (target, id) => {\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\n    };\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glBindVertexArray = (vao) => {\n      GLctx.bindVertexArray(GL.vaos[vao]);\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\n    };\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindVertexArrayOES = _glBindVertexArray;\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\n  var _emscripten_glBlendColor = _glBlendColor;\n\n  /** @suppress {duplicate } */\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\n  var _emscripten_glBlendEquation = _glBlendEquation;\n\n  /** @suppress {duplicate } */\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\n\n  /** @suppress {duplicate } */\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\n  var _emscripten_glBlendFunc = _glBlendFunc;\n\n  /** @suppress {duplicate } */\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\n\n  /** @suppress {duplicate } */\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBufferData = (target, size, data, usage) => {\n  \n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.  If size is zero, WebGL would interpret\n        // uploading the whole input arraybuffer (starting from given offset),\n        // which would not make sense in WebAssembly, so avoid uploading if size\n        // is zero. However we must still call bufferData to establish a backing\n        // storage of zero bytes.\n        if (data && size) {\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\n        } else {\n          GLctx.bufferData(target, size, usage);\n        }\n      } else {\n        // N.b. here first form specifies a heap subarray, second form an integer\n        // size, so the ?: code here is polymorphic. It is advised to avoid\n        // randomly mixing both uses in calling code, to avoid any potential JS\n        // engine JIT issues.\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\n      }\n    };\n  var _emscripten_glBufferData = _glBufferData;\n\n  /** @suppress {duplicate } */\n  var _glBufferSubData = (target, offset, size, data) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\n        return;\n      }\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\n    };\n  var _emscripten_glBufferSubData = _glBufferSubData;\n\n  /** @suppress {duplicate } */\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\n\n  /** @suppress {duplicate } */\n  function _glClear(x0) { GLctx.clear(x0) }\n  var _emscripten_glClear = _glClear;\n\n  /** @suppress {duplicate } */\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferfv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\n    };\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\n    };\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferuiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\n    };\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\n\n  /** @suppress {duplicate } */\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\n  var _emscripten_glClearColor = _glClearColor;\n\n  /** @suppress {duplicate } */\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\n  var _emscripten_glClearDepthf = _glClearDepthf;\n\n  /** @suppress {duplicate } */\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\n  var _emscripten_glClearStencil = _glClearStencil;\n\n  var convertI32PairToI53 = (lo, hi) => {\n      return (lo >>> 0) + hi * 4294967296;\n    };\n  /** @suppress {duplicate } */\n  var _glClientWaitSync = (sync, flags, timeout_low, timeout_high) => {\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\n\n  /** @suppress {duplicate } */\n  var _glColorMask = (red, green, blue, alpha) => {\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\n    };\n  var _emscripten_glColorMask = _glColorMask;\n\n  /** @suppress {duplicate } */\n  var _glCompileShader = (shader) => {\n      GLctx.compileShader(GL.shaders[shader]);\n    };\n  var _emscripten_glCompileShader = _glCompileShader;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage2D = (target, level, internalFormat, width, height, border, imageSize, data) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\n        } else {\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\n        }\n        return;\n      }\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\n    };\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage3D = (target, level, internalFormat, width, height, depth, border, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\n      } else {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, imageSize, data) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\n        } else {\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\n        }\n        return;\n      }\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\n    };\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\n      } else {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCreateProgram = () => {\n      var id = GL.getNewId(GL.programs);\n      var program = GLctx.createProgram();\n      // Store additional information needed for each shader program:\n      program.name = id;\n      // Lazy cache results of\n      // glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\n      program.uniformIdCounter = 1;\n      GL.programs[id] = program;\n      return id;\n    };\n  var _emscripten_glCreateProgram = _glCreateProgram;\n\n  /** @suppress {duplicate } */\n  var _glCreateShader = (shaderType) => {\n      var id = GL.getNewId(GL.shaders);\n      GL.shaders[id] = GLctx.createShader(shaderType);\n  \n      return id;\n    };\n  var _emscripten_glCreateShader = _glCreateShader;\n\n  /** @suppress {duplicate } */\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\n  var _emscripten_glCullFace = _glCullFace;\n\n  /** @suppress {duplicate } */\n  var _glDeleteBuffers = (n, buffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\n        var buffer = GL.buffers[id];\n  \n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\n        // correspond to existing buffer objects.\"\n        if (!buffer) continue;\n  \n        GLctx.deleteBuffer(buffer);\n        buffer.name = 0;\n        GL.buffers[id] = null;\n  \n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\n      }\n    };\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteFramebuffers = (n, framebuffers) => {\n      for (var i = 0; i < n; ++i) {\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\n        var framebuffer = GL.framebuffers[id];\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\n        GLctx.deleteFramebuffer(framebuffer);\n        framebuffer.name = 0;\n        GL.framebuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteProgram = (id) => {\n      if (!id) return;\n      var program = GL.programs[id];\n      if (!program) {\n        // glDeleteProgram actually signals an error when deleting a nonexisting\n        // object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteProgram(program);\n      program.name = 0;\n      GL.programs[id] = null;\n    };\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueries = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteQuery(query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\n\n  /** @suppress {duplicate } */\n  var _glDeleteRenderbuffers = (n, renderbuffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\n        var renderbuffer = GL.renderbuffers[id];\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\n        GLctx.deleteRenderbuffer(renderbuffer);\n        renderbuffer.name = 0;\n        GL.renderbuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSamplers = (n, samplers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\n        var sampler = GL.samplers[id];\n        if (!sampler) continue;\n        GLctx.deleteSampler(sampler);\n        sampler.name = 0;\n        GL.samplers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteShader = (id) => {\n      if (!id) return;\n      var shader = GL.shaders[id];\n      if (!shader) {\n        // glDeleteShader actually signals an error when deleting a nonexisting\n        // object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteShader(shader);\n      GL.shaders[id] = null;\n    };\n  var _emscripten_glDeleteShader = _glDeleteShader;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSync = (id) => {\n      if (!id) return;\n      var sync = GL.syncs[id];\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteSync(sync);\n      sync.name = 0;\n      GL.syncs[id] = null;\n    };\n  var _emscripten_glDeleteSync = _glDeleteSync;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTextures = (n, textures) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((textures)+(i*4))>>2)];\n        var texture = GL.textures[id];\n        // GL spec: \"glDeleteTextures silently ignores 0s and names that do not\n        // correspond to existing textures\".\n        if (!texture) continue;\n        GLctx.deleteTexture(texture);\n        texture.name = 0;\n        GL.textures[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTransformFeedbacks = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var transformFeedback = GL.transformFeedbacks[id];\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteTransformFeedback(transformFeedback);\n        transformFeedback.name = 0;\n        GL.transformFeedbacks[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\n\n  /** @suppress {duplicate } */\n  var _glDeleteVertexArrays = (n, vaos) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\n        GLctx.deleteVertexArray(GL.vaos[id]);\n        GL.vaos[id] = null;\n      }\n    };\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\n  var _emscripten_glDepthFunc = _glDepthFunc;\n\n  /** @suppress {duplicate } */\n  var _glDepthMask = (flag) => {\n      GLctx.depthMask(!!flag);\n    };\n  var _emscripten_glDepthMask = _glDepthMask;\n\n  /** @suppress {duplicate } */\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\n  var _emscripten_glDepthRangef = _glDepthRangef;\n\n  /** @suppress {duplicate } */\n  var _glDetachShader = (program, shader) => {\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glDetachShader = _glDetachShader;\n\n  /** @suppress {duplicate } */\n  function _glDisable(x0) { GLctx.disable(x0) }\n  var _emscripten_glDisable = _glDisable;\n\n  /** @suppress {duplicate } */\n  var _glDisableVertexAttribArray = (index) => {\n      var cb = GL.currentContext.clientBuffers[index];\n      cb.enabled = false;\n      GLctx.disableVertexAttribArray(index);\n    };\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  var _glDrawArrays = (mode, first, count) => {\n      // bind any client-side buffers\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\n  \n      GLctx.drawArrays(mode, first, count);\n  \n      GL.postDrawHandleClientVertexAttribBindings();\n    };\n  var _emscripten_glDrawArrays = _glDrawArrays;\n\n  /** @suppress {duplicate } */\n  var _glDrawArraysInstanced = (mode, first, count, primcount) => {\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\n    };\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\n\n  var tempFixedLengthArray = [];\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffers = (n, bufs) => {\n  \n      var bufArray = tempFixedLengthArray[n];\n      for (var i = 0; i < n; i++) {\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\n      }\n  \n      GLctx.drawBuffers(bufArray);\n    };\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersEXT = _glDrawBuffers;\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\n\n  /** @suppress {duplicate } */\n  var _glDrawElements = (mode, count, type, indices) => {\n      var buf;\n      if (!GLctx.currentElementArrayBufferBinding) {\n        var size = GL.calcBufLength(1, type, 0, count);\n        buf = GL.getTempIndexBuffer(size);\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\n                                 0,\n                                 HEAPU8.subarray(indices, indices + size));\n        // the index is now 0\n        indices = 0;\n      }\n  \n      // bind any client-side buffers\n      GL.preDrawHandleClientVertexAttribBindings(count);\n  \n      GLctx.drawElements(mode, count, type, indices);\n  \n      GL.postDrawHandleClientVertexAttribBindings(count);\n  \n      if (!GLctx.currentElementArrayBufferBinding) {\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\n      }\n    };\n  var _emscripten_glDrawElements = _glDrawElements;\n\n  /** @suppress {duplicate } */\n  var _glDrawElementsInstanced = (mode, count, type, indices, primcount) => {\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\n    };\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\n\n  /** @suppress {duplicate } */\n  var _glDrawRangeElements = (mode, start, end, count, type, indices) => {\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\n      // glFuncs[6][1] += ' drawRangeElements';\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\n      // we work around by ignoring the range.\n      _glDrawElements(mode, count, type, indices);\n    };\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\n\n  /** @suppress {duplicate } */\n  function _glEnable(x0) { GLctx.enable(x0) }\n  var _emscripten_glEnable = _glEnable;\n\n  /** @suppress {duplicate } */\n  var _glEnableVertexAttribArray = (index) => {\n      var cb = GL.currentContext.clientBuffers[index];\n      cb.enabled = true;\n      GLctx.enableVertexAttribArray(index);\n    };\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\n  var _emscripten_glEndQuery = _glEndQuery;\n\n  /** @suppress {duplicate } */\n  var _glEndQueryEXT = (target) => {\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\n    };\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\n\n  /** @suppress {duplicate } */\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glFenceSync = (condition, flags) => {\n      var sync = GLctx.fenceSync(condition, flags);\n      if (sync) {\n        var id = GL.getNewId(GL.syncs);\n        sync.name = id;\n        GL.syncs[id] = sync;\n        return id;\n      }\n      return 0; // Failed to create a sync object\n    };\n  var _emscripten_glFenceSync = _glFenceSync;\n\n  /** @suppress {duplicate } */\n  function _glFinish() { GLctx.finish() }\n  var _emscripten_glFinish = _glFinish;\n\n  /** @suppress {duplicate } */\n  function _glFlush() { GLctx.flush() }\n  var _emscripten_glFlush = _glFlush;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferRenderbuffer = (target, attachment, renderbuffertarget, renderbuffer) => {\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\n                                         GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTexture2D = (target, attachment, textarget, texture, level) => {\n      GLctx.framebufferTexture2D(target, attachment, textarget,\n                                      GL.textures[texture], level);\n    };\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTextureLayer = (target, attachment, texture, level, layer) => {\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\n    };\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\n\n  /** @suppress {duplicate } */\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\n  var _emscripten_glFrontFace = _glFrontFace;\n\n  var __glGenObject = (n, buffers, createFunction, objectTable\n      ) => {\n      for (var i = 0; i < n; i++) {\n        var buffer = GLctx[createFunction]();\n        var id = buffer && GL.getNewId(objectTable);\n        if (buffer) {\n          buffer.name = id;\n          objectTable[id] = buffer;\n        } else {\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n        }\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGenBuffers = (n, buffers) => {\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\n        );\n    };\n  var _emscripten_glGenBuffers = _glGenBuffers;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenFramebuffers = (n, ids) => {\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\n        );\n    };\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenQueries = (n, ids) => {\n      __glGenObject(n, ids, 'createQuery', GL.queries\n        );\n    };\n  var _emscripten_glGenQueries = _glGenQueries;\n\n  /** @suppress {duplicate } */\n  var _glGenQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\n        if (!query) {\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\n          return;\n        }\n        var id = GL.getNewId(GL.queries);\n        query.name = id;\n        GL.queries[id] = query;\n        HEAP32[(((ids)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenRenderbuffers = (n, renderbuffers) => {\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\n        );\n    };\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenSamplers = (n, samplers) => {\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\n        );\n    };\n  var _emscripten_glGenSamplers = _glGenSamplers;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenTextures = (n, textures) => {\n      __glGenObject(n, textures, 'createTexture', GL.textures\n        );\n    };\n  var _emscripten_glGenTextures = _glGenTextures;\n\n  /** @suppress {duplicate } */\n  var _glGenTransformFeedbacks = (n, ids) => {\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\n        );\n    };\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\n\n  \n  /** @suppress {duplicate } */\n  function _glGenVertexArrays(n, arrays) {\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\n        );\n    }\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenVertexArraysOES = _glGenVertexArrays;\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\n\n  \n  var __glGetActiveAttribOrUniform = (funcName, program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx[funcName](program, index);\n      if (info) {\n        // If an error occurs, nothing will be written to length, size and type and name.\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n        if (size) HEAP32[((size)>>2)] = info.size;\n        if (type) HEAP32[((type)>>2)] = info.type;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveAttrib = (program, index, bufSize, length, size, type, name) => {\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\n    };\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveUniform = (program, index, bufSize, length, size, type, name) => {\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\n    };\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockName = (program, uniformBlockIndex, bufSize, length, uniformBlockName) => {\n      program = GL.programs[program];\n  \n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\n      if (uniformBlockName && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockiv = (program, uniformBlockIndex, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n  \n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n        HEAP32[((params)>>2)] = name.length+1;\n        return;\n      }\n  \n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\n      if (result === null) return; // If an error occurs, nothing should be written to params.\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\n        for (var i = 0; i < result.length; i++) {\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\n        }\n      } else {\n        HEAP32[((params)>>2)] = result;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformsiv = (program, uniformCount, uniformIndices, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && uniformIndices == 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var ids = [];\n      for (var i = 0; i < uniformCount; i++) {\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\n      }\n  \n      var result = GLctx.getActiveUniforms(program, ids, pname);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\n\n  /** @suppress {duplicate } */\n  var _glGetAttachedShaders = (program, maxCount, count, shaders) => {\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\n      var len = result.length;\n      if (len > maxCount) {\n        len = maxCount;\n      }\n      HEAP32[((count)>>2)] = len;\n      for (var i = 0; i < len; ++i) {\n        var id = GL.shaders.indexOf(result[i]);\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetAttribLocation = (program, name) => {\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\n    };\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\n\n  var writeI53ToI64 = (ptr, num) => {\n      HEAPU32[((ptr)>>2)] = num;\n      var lower = HEAPU32[((ptr)>>2)];\n      HEAPU32[(((ptr)+(4))>>2)] = (num - lower)/4294967296;\n    };\n  \n  var emscriptenWebGLGet = (name_, p, type) => {\n      // Guard against user passing a null pointer.\n      // Note that GLES2 spec does not say anything about how passing a null\n      // pointer should be treated.  Testing on desktop core GL 3, the application\n      // crashes on glGetIntegerv to a null pointer, but better to report an error\n      // instead of doing anything random.\n      if (!p) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = undefined;\n      switch (name_) { // Handle a few trivial GLES values\n        case 0x8DFA: // GL_SHADER_COMPILER\n          ret = 1;\n          break;\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\n          if (type != 0 && type != 1) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n          }\n          // Do not write anything to the out pointer, since no binary formats are\n          // supported.\n          return;\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\n          ret = 0;\n          break;\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete\n          // since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be\n          // queried for length), so implement it ourselves to allow C++ GLES2\n          // code get the length.\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\n          ret = formats ? formats.length : 0;\n          break;\n  \n        case 0x821D: // GL_NUM_EXTENSIONS\n          if (GL.currentContext.version < 2) {\n            // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n            return;\n          }\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n          var exts = GLctx.getSupportedExtensions() || [];\n          // each extension is duplicated, first in unprefixed WebGL form, and\n          // then a second time with \"GL_\" prefix.\n          ret = 2 * exts.length;\n          break;\n        case 0x821B: // GL_MAJOR_VERSION\n        case 0x821C: // GL_MINOR_VERSION\n          if (GL.currentContext.version < 2) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\n          break;\n      }\n  \n      if (ret === undefined) {\n        var result = GLctx.getParameter(name_);\n        switch (typeof result) {\n          case \"number\":\n            ret = result;\n            break;\n          case \"boolean\":\n            ret = result ? 1 : 0;\n            break;\n          case \"string\":\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          case \"object\":\n            if (result === null) {\n              // null is a valid result for some (e.g., which buffer is bound -\n              // perhaps nothing is bound), but otherwise can mean an invalid\n              // name_, which we need to report as an error\n              switch (name_) {\n                case 0x8894: // ARRAY_BUFFER_BINDING\n                case 0x8B8D: // CURRENT_PROGRAM\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\n                case 0x8CA7: // RENDERBUFFER_BINDING\n                case 0x8069: // TEXTURE_BINDING_2D\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\n                case 0x8919: // SAMPLER_BINDING\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\n                case 0x806A: // TEXTURE_BINDING_3D\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\n                  ret = 0;\n                  break;\n                }\n                default: {\n                  GL.recordError(0x500); // GL_INVALID_ENUM\n                  return;\n                }\n              }\n            } else if (result instanceof Float32Array ||\n                       result instanceof Uint32Array ||\n                       result instanceof Int32Array ||\n                       result instanceof Array) {\n              for (var i = 0; i < result.length; ++i) {\n                switch (type) {\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\n                }\n              }\n              return;\n            } else {\n              try {\n                ret = result.name | 0;\n              } catch(e) {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                err(`GL_INVALID_ENUM in glGet${type}v: Unknown object returned from WebGL getParameter(${name_})! (error: ${e})`);\n                return;\n              }\n            }\n            break;\n          default:\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            err(`GL_INVALID_ENUM in glGet${type}v: Native code calling glGet${type}v(${name_}) and it returns ${result} of type ${typeof(result)}!`);\n            return;\n        }\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(p, ret); break;\n        case 0: HEAP32[((p)>>2)] = ret; break;\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetBooleanv = (name_, p) => emscriptenWebGLGet(name_, p, 4);\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteri64v = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\n    };\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteriv = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null\n        // pointer. Since calling this function does not make sense if data ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\n    };\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetError = () => {\n      var error = GLctx.getError() || GL.lastError;\n      GL.lastError = 0/*GL_NO_ERROR*/;\n      return error;\n    };\n  var _emscripten_glGetError = _glGetError;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetFloatv = (name_, p) => emscriptenWebGLGet(name_, p, 2);\n  var _emscripten_glGetFloatv = _glGetFloatv;\n\n  /** @suppress {duplicate } */\n  var _glGetFragDataLocation = (program, name) => {\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\n    };\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\n\n  /** @suppress {duplicate } */\n  var _glGetFramebufferAttachmentParameteriv = (target, attachment, pname, params) => {\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\n      if (result instanceof WebGLRenderbuffer ||\n          result instanceof WebGLTexture) {\n        result = result.name | 0;\n      }\n      HEAP32[((params)>>2)] = result;\n    };\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\n\n  var emscriptenWebGLGetIndexed = (target, index, data, type) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var result = GLctx.getIndexedParameter(target, index);\n      var ret;\n      switch (typeof result) {\n        case 'boolean':\n          ret = result ? 1 : 0;\n          break;\n        case 'number':\n          ret = result;\n          break;\n        case 'object':\n          if (result === null) {\n            switch (target) {\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\n                ret = 0;\n                break;\n              default: {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                return;\n              }\n            }\n          } else if (result instanceof WebGLBuffer) {\n            ret = result.name | 0;\n          } else {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          break;\n        default:\n          GL.recordError(0x500); // GL_INVALID_ENUM\n          return;\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(data, ret); break;\n        case 0: HEAP32[((data)>>2)] = ret; break;\n        case 2: HEAPF32[((data)>>2)] = ret; break;\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetInteger64i_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 1);\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\n\n  /** @suppress {duplicate } */\n  var _glGetInteger64v = (name_, p) => {\n      emscriptenWebGLGet(name_, p, 1);\n    };\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\n\n  /** @suppress {duplicate } */\n  var _glGetIntegeri_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 0);\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetIntegerv = (name_, p) => emscriptenWebGLGet(name_, p, 0);\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\n\n  /** @suppress {duplicate } */\n  var _glGetInternalformativ = (target, internalformat, pname, bufSize, params) => {\n      if (bufSize < 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!params) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\n      if (ret === null) return;\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\n      }\n    };\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramBinary = (program, bufSize, length, binaryFormat, binary) => {\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n    };\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramInfoLog = (program, maxLength, length, infoLog) => {\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramiv = (program, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      if (program >= GL.counter) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      program = GL.programs[program];\n  \n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getProgramInfoLog(program);\n        if (log === null) log = '(unknown error)';\n        HEAP32[((p)>>2)] = log.length + 1;\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\n        if (!program.maxUniformLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformLength;\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\n        if (!program.maxAttributeLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\n        if (!program.maxUniformBlockNameLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\n      }\n    };\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjecti64vEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param;\n      if (GL.currentContext.version < 2)\n      {\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      }\n      else {\n        param = GLctx.getQueryParameter(query, pname);\n      }\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      writeI53ToI64(params, ret);\n    };\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectivEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuiv = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.getQueryParameter(query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryiv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\n    };\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryivEXT = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\n    };\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetRenderbufferParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\n    };\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameterfv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameteriv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetShaderInfoLog = (shader, maxLength, length, infoLog) => {\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderPrecisionFormat = (shaderType, precisionType, range, precision) => {\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\n      HEAP32[((range)>>2)] = result.rangeMin;\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\n      HEAP32[((precision)>>2)] = result.precision;\n    };\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderSource = (shader, bufSize, length, source) => {\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderiv = (shader, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n        if (log === null) log = '(unknown error)';\n        // The GLES2 specification says that if the shader has an empty info log,\n        // a value of 0 is returned. Otherwise the log has a null char appended.\n        // (An empty string is falsey, so we can just check that instead of\n        // looking at log.length.)\n        var logLength = log ? log.length + 1 : 0;\n        HEAP32[((p)>>2)] = logLength;\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\n        // source may be a null, or the empty string, both of which are falsey\n        // values that we report a 0 length for.\n        var sourceLength = source ? source.length + 1 : 0;\n        HEAP32[((p)>>2)] = sourceLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\n      }\n    };\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetString = (name_) => {\n      var ret = GL.stringCache[name_];\n      if (!ret) {\n        switch (name_) {\n          case 0x1F03 /* GL_EXTENSIONS */:\n            ret = stringToNewUTF8(GL.getExtensions().join(' '));\n            break;\n          case 0x1F00 /* GL_VENDOR */:\n          case 0x1F01 /* GL_RENDERER */:\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\n            var s = GLctx.getParameter(name_);\n            if (!s) {\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            }\n            ret = s ? stringToNewUTF8(s) : 0;\n            break;\n  \n          case 0x1F02 /* GL_VERSION */:\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\n            // return GLES version string corresponding to the version of the WebGL context\n            if (GL.currentContext.version >= 2) glVersion = `OpenGL ES 3.0 (${glVersion})`;\n            else\n            {\n              glVersion = `OpenGL ES 2.0 (${glVersion})`;\n            }\n            ret = stringToNewUTF8(glVersion);\n            break;\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\n            var ver_num = glslVersion.match(ver_re);\n            if (ver_num !== null) {\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\n              glslVersion = `OpenGL ES GLSL ES ${ver_num[1]} (${glslVersion})`;\n            }\n            ret = stringToNewUTF8(glslVersion);\n            break;\n          default:\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            // fall through\n        }\n        GL.stringCache[name_] = ret;\n      }\n      return ret;\n    };\n  var _emscripten_glGetString = _glGetString;\n\n  /** @suppress {duplicate } */\n  var _glGetStringi = (name, index) => {\n      if (GL.currentContext.version < 2) {\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n        return 0;\n      }\n      var stringiCache = GL.stringiCache[name];\n      if (stringiCache) {\n        if (index < 0 || index >= stringiCache.length) {\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\n          return 0;\n        }\n        return stringiCache[index];\n      }\n      switch (name) {\n        case 0x1F03 /* GL_EXTENSIONS */:\n          var exts = GL.getExtensions().map((e) => stringToNewUTF8(e));\n          stringiCache = GL.stringiCache[name] = exts;\n          if (index < 0 || index >= stringiCache.length) {\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\n            return 0;\n          }\n          return stringiCache[index];\n        default:\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\n          return 0;\n      }\n    };\n  var _emscripten_glGetStringi = _glGetStringi;\n\n  /** @suppress {duplicate } */\n  var _glGetSynciv = (sync, pname, bufSize, length, values) => {\n      if (bufSize < 0) {\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\n        // so raise GL_INVALID_VALUE here as well.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!values) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\n      if (ret !== null) {\n        HEAP32[((values)>>2)] = ret;\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\n      }\n    };\n  var _emscripten_glGetSynciv = _glGetSynciv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameterfv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetTransformFeedbackVarying = (program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx.getTransformFeedbackVarying(program, index);\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\n  \n      if (name && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n  \n      if (size) HEAP32[((size)>>2)] = info.size;\n      if (type) HEAP32[((type)>>2)] = info.type;\n    };\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformBlockIndex = (program, uniformBlockName) => {\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\n    };\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformIndices = (program, uniformCount, uniformNames, uniformIndices) => {\n      if (!uniformIndices) {\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\n        // if uniformIndices == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var names = [];\n      for (var i = 0; i < uniformCount; i++)\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\n  \n      var result = GLctx.getUniformIndices(program, names);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\n\n  \n  /** @noinline */\n  var webglGetLeftBracePos = (name) => name.slice(-1) == ']' && name.lastIndexOf('[');\n  \n  var webglPrepareUniformLocationsBeforeFirstUse = (program) => {\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\n        i, j;\n  \n      // On the first time invocation of glGetUniformLocation on this shader program:\n      // initialize cache data structures and discover which uniforms are arrays.\n      if (!uniformLocsById) {\n        // maps GLint integer locations to WebGLUniformLocations\n        program.uniformLocsById = uniformLocsById = {};\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\n        program.uniformArrayNamesById = {};\n  \n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\n          var u = GLctx.getActiveUniform(program, i);\n          var nm = u.name;\n          var sz = u.size;\n          var lb = webglGetLeftBracePos(nm);\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\n  \n          // Assign a new location.\n          var id = program.uniformIdCounter;\n          program.uniformIdCounter += sz;\n          // Eagerly get the location of the uniformArray[0] base element.\n          // The remaining indices >0 will be left for lazy evaluation to\n          // improve performance. Those may never be needed to fetch, if the\n          // application fills arrays always in full starting from the first\n          // element of the array.\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\n  \n          // Store placeholder integers in place that highlight that these\n          // >0 index locations are array indices pending population.\n          for (j = 0; j < sz; ++j) {\n            uniformLocsById[id] = j;\n            program.uniformArrayNamesById[id++] = arrayName;\n          }\n        }\n      }\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glGetUniformLocation = (program, name) => {\n  \n      name = UTF8ToString(name);\n  \n      if (program = GL.programs[program]) {\n        webglPrepareUniformLocationsBeforeFirstUse(program);\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\n        var arrayIndex = 0;\n        var uniformBaseName = name;\n  \n        // Invariant: when populating integer IDs for uniform locations, we must\n        // maintain the precondition that arrays reside in contiguous addresses,\n        // i.e. for a 'vec4 colors[10];', colors[4] must be at location\n        // colors[0]+4.  However, user might call glGetUniformLocation(program,\n        // \"colors\") for an array, so we cannot discover based on the user input\n        // arguments whether the uniform we are dealing with is an array. The only\n        // way to discover which uniforms are arrays is to enumerate over all the\n        // active uniforms in the program.\n        var leftBrace = webglGetLeftBracePos(name);\n  \n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\n        if (leftBrace > 0) {\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\n          uniformBaseName = name.slice(0, leftBrace);\n        }\n  \n        // Have we cached the location of this uniform before?\n        // A pair [array length, GLint of the uniform location]\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName];\n  \n        // If an uniform with this name exists, and if its index is within the\n        // array limits (if it's even an array), query the WebGLlocation, or\n        // return an existing cached location.\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\n            return arrayIndex;\n          }\n        }\n      }\n      else {\n        // N.b. we are currently unable to distinguish between GL program IDs that\n        // never existed vs GL program IDs that have been deleted, so report\n        // GL_INVALID_VALUE in both cases.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n      }\n      return -1;\n    };\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\n\n  var webglGetUniformLocation = (location) => {\n      var p = GLctx.currentProgram;\n  \n      if (p) {\n        var webglLoc = p.uniformLocsById[location];\n        // p.uniformLocsById[location] stores either an integer, or a\n        // WebGLUniformLocation.\n        // If an integer, we have not yet bound the location, so do it now. The\n        // integer value specifies the array index we should bind to.\n        if (typeof webglLoc == 'number') {\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? `[${webglLoc}]` : ''));\n        }\n        // Else an already cached WebGLUniformLocation, return it.\n        return webglLoc;\n      } else {\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n      }\n    };\n  \n  \n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetUniform = (program, location, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if params ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      webglPrepareUniformLocationsBeforeFirstUse(program);\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\n      if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n          }\n        }\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformfv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 2);\n    };\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformiv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 0);\n    };\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformuiv = (program, location, params) =>\n      emscriptenWebGLGetUniform(program, location, params, 0);\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\n\n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetVertexAttrib = (index, pname, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if params ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (GL.currentContext.clientBuffers[index].enabled) {\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\n      }\n      var data = GLctx.getVertexAttrib(index, pname);\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\n        HEAP32[((params)>>2)] = data && data[\"name\"];\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\n          }\n        }\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\n    };\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\n\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribPointerv = (index, pname, pointer) => {\n      if (!pointer) {\n        // GLES2 specification does not specify how to behave if pointer is a null\n        // pointer. Since calling this function does not make sense if pointer ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (GL.currentContext.clientBuffers[index].enabled) {\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\n      }\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\n    };\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribfv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was\n      // specified using the function glVertexAttrib*f(), otherwise the results\n      // are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\n    };\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was\n      // specified using the function glVertexAttrib*f(), otherwise the results\n      // are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\n    };\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\n\n  /** @suppress {duplicate } */\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\n  var _emscripten_glHint = _glHint;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateFramebuffer = (target, numAttachments, attachments) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateFramebuffer(target, list);\n    };\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateSubFramebuffer = (target, numAttachments, attachments, x, y, width, height) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\n    };\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsBuffer = (buffer) => {\n      var b = GL.buffers[buffer];\n      if (!b) return 0;\n      return GLctx.isBuffer(b);\n    };\n  var _emscripten_glIsBuffer = _glIsBuffer;\n\n  /** @suppress {duplicate } */\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\n  var _emscripten_glIsEnabled = _glIsEnabled;\n\n  /** @suppress {duplicate } */\n  var _glIsFramebuffer = (framebuffer) => {\n      var fb = GL.framebuffers[framebuffer];\n      if (!fb) return 0;\n      return GLctx.isFramebuffer(fb);\n    };\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsProgram = (program) => {\n      program = GL.programs[program];\n      if (!program) return 0;\n      return GLctx.isProgram(program);\n    };\n  var _emscripten_glIsProgram = _glIsProgram;\n\n  /** @suppress {duplicate } */\n  var _glIsQuery = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.isQuery(query);\n    };\n  var _emscripten_glIsQuery = _glIsQuery;\n\n  /** @suppress {duplicate } */\n  var _glIsQueryEXT = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\n    };\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\n\n  /** @suppress {duplicate } */\n  var _glIsRenderbuffer = (renderbuffer) => {\n      var rb = GL.renderbuffers[renderbuffer];\n      if (!rb) return 0;\n      return GLctx.isRenderbuffer(rb);\n    };\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsSampler = (id) => {\n      var sampler = GL.samplers[id];\n      if (!sampler) return 0;\n      return GLctx.isSampler(sampler);\n    };\n  var _emscripten_glIsSampler = _glIsSampler;\n\n  /** @suppress {duplicate } */\n  var _glIsShader = (shader) => {\n      var s = GL.shaders[shader];\n      if (!s) return 0;\n      return GLctx.isShader(s);\n    };\n  var _emscripten_glIsShader = _glIsShader;\n\n  /** @suppress {duplicate } */\n  var _glIsSync = (sync) => GLctx.isSync(GL.syncs[sync]);\n  var _emscripten_glIsSync = _glIsSync;\n\n  /** @suppress {duplicate } */\n  var _glIsTexture = (id) => {\n      var texture = GL.textures[id];\n      if (!texture) return 0;\n      return GLctx.isTexture(texture);\n    };\n  var _emscripten_glIsTexture = _glIsTexture;\n\n  /** @suppress {duplicate } */\n  var _glIsTransformFeedback = (id) => GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glIsVertexArray = (array) => {\n  \n      var vao = GL.vaos[array];\n      if (!vao) return 0;\n      return GLctx.isVertexArray(vao);\n    };\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glIsVertexArrayOES = _glIsVertexArray;\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\n  var _emscripten_glLineWidth = _glLineWidth;\n\n  /** @suppress {duplicate } */\n  var _glLinkProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.linkProgram(program);\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\n      program.uniformSizeAndIdsByName = {};\n  \n    };\n  var _emscripten_glLinkProgram = _glLinkProgram;\n\n  /** @suppress {duplicate } */\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glPixelStorei = (pname, param) => {\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\n        GL.unpackAlignment = param;\n      }\n      GLctx.pixelStorei(pname, param);\n    };\n  var _emscripten_glPixelStorei = _glPixelStorei;\n\n  /** @suppress {duplicate } */\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\n\n  /** @suppress {duplicate } */\n  var _glProgramBinary = (program, binaryFormat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramBinary = _glProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glProgramParameteri = (program, pname, value) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\n\n  /** @suppress {duplicate } */\n  var _glQueryCounterEXT = (id, target) => {\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\n    };\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\n\n  /** @suppress {duplicate } */\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\n  var _emscripten_glReadBuffer = _glReadBuffer;\n\n  var computeUnpackAlignedImageSize = (width, height, sizePerPixel, alignment) => {\n      function roundedToNextMultipleOf(x, y) {\n        return (x + y - 1) & -y;\n      }\n      var plainRowSize = width * sizePerPixel;\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\n      return height * alignedRowSize;\n    };\n  \n  var colorChannelsInGlTextureFormat = (format) => {\n      // Micro-optimizations for size: map format to size by subtracting smallest\n      // enum value (0x1902) from all values first.  Also omit the most common\n      // size value (1) from the list, which is assumed by formats not on the\n      // list.\n      var colorChannels = {\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\n        5: 3,\n        6: 4,\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\n        8: 2,\n        29502: 3,\n        29504: 4,\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\n        26917: 2,\n        26918: 2,\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\n        29846: 3,\n        29847: 4\n      };\n      return colorChannels[format - 0x1902]||1;\n    };\n  \n  var heapObjectForWebGLType = (type) => {\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\n      // smaller values for the heap, for shorter generated code size.\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\n      // (since most types are HEAPU16)\n      type -= 0x1400;\n      if (type == 0) return HEAP8;\n  \n      if (type == 1) return HEAPU8;\n  \n      if (type == 2) return HEAP16;\n  \n      if (type == 4) return HEAP32;\n  \n      if (type == 6) return HEAPF32;\n  \n      if (type == 5\n        || type == 28922\n        || type == 28520\n        || type == 30779\n        || type == 30782\n        )\n        return HEAPU32;\n  \n      return HEAPU16;\n    };\n  \n  var heapAccessShiftForWebGLHeap = (heap) => 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\n  \n  var emscriptenWebGLGetTexPixelData = (type, format, width, height, pixels, internalFormat) => {\n      var heap = heapObjectForWebGLType(type);\n      var shift = heapAccessShiftForWebGLHeap(heap);\n      var byteSize = 1<<shift;\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glReadPixels = (x, y, width, height, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelPackBufferBinding) {\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\n        } else {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        }\n        return;\n      }\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\n      if (!pixelData) {\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\n        return;\n      }\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\n    };\n  var _emscripten_glReadPixels = _glReadPixels;\n\n  /** @suppress {duplicate } */\n  var _glReleaseShaderCompiler = () => {\n      // NOP (as allowed by GLES 2.0 spec)\n    };\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\n\n  /** @suppress {duplicate } */\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\n\n  /** @suppress {duplicate } */\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\n\n  /** @suppress {duplicate } */\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glSampleCoverage = (value, invert) => {\n      GLctx.sampleCoverage(value, !!invert);\n    };\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterf = (sampler, pname, param) => {\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterfv = (sampler, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteri = (sampler, pname, param) => {\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteriv = (sampler, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\n\n  /** @suppress {duplicate } */\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\n  var _emscripten_glScissor = _glScissor;\n\n  /** @suppress {duplicate } */\n  var _glShaderBinary = (count, shaders, binaryformat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glShaderBinary = _glShaderBinary;\n\n  /** @suppress {duplicate } */\n  var _glShaderSource = (shader, count, string, length) => {\n      var source = GL.getSource(shader, count, string, length);\n  \n      GLctx.shaderSource(GL.shaders[shader], source);\n    };\n  var _emscripten_glShaderSource = _glShaderSource;\n\n  /** @suppress {duplicate } */\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\n  var _emscripten_glStencilFunc = _glStencilFunc;\n\n  /** @suppress {duplicate } */\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\n\n  /** @suppress {duplicate } */\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\n  var _emscripten_glStencilMask = _glStencilMask;\n\n  /** @suppress {duplicate } */\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\n\n  /** @suppress {duplicate } */\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\n  var _emscripten_glStencilOp = _glStencilOp;\n\n  /** @suppress {duplicate } */\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\n\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexImage2D = (target, level, internalFormat, width, height, border, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\n        } else if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        } else {\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\n        }\n        return;\n      }\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\n    };\n  var _emscripten_glTexImage2D = _glTexImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexImage3D = (target, level, internalFormat, width, height, depth, border, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n      } else {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\n      }\n    };\n  var _emscripten_glTexImage3D = _glTexImage3D;\n\n  /** @suppress {duplicate } */\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\n  var _emscripten_glTexParameterf = _glTexParameterf;\n\n  /** @suppress {duplicate } */\n  var _glTexParameterfv = (target, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.texParameterf(target, pname, param);\n    };\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\n\n  /** @suppress {duplicate } */\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\n  var _emscripten_glTexParameteri = _glTexParameteri;\n\n  /** @suppress {duplicate } */\n  var _glTexParameteriv = (target, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.texParameteri(target, pname, param);\n    };\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\n\n  /** @suppress {duplicate } */\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\n\n  /** @suppress {duplicate } */\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\n\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\n        } else if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        } else {\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\n        }\n        return;\n      }\n      var pixelData = null;\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\n    };\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n      } else {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\n      }\n    };\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glTransformFeedbackVaryings = (program, count, varyings, bufferMode) => {\n      program = GL.programs[program];\n      var vars = [];\n      for (var i = 0; i < count; i++)\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\n  \n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\n    };\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1f = (location, v0) => {\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1f = _glUniform1f;\n\n  \n  var miniTempWebGLFloatBuffers = [];\n  \n  /** @suppress {duplicate } */\n  var _glUniform1fv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\n        return;\n      }\n  \n      if (count <= 288) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[count-1];\n        for (var i = 0; i < count; ++i) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\n      }\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform1fv = _glUniform1fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1i = (location, v0) => {\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1i = _glUniform1i;\n\n  \n  var miniTempWebGLIntBuffers = [];\n  \n  /** @suppress {duplicate } */\n  var _glUniform1iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\n        return;\n      }\n  \n      if (count <= 288) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[count-1];\n        for (var i = 0; i < count; ++i) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\n      }\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform1iv = _glUniform1iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform1ui = (location, v0) => {\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1ui = _glUniform1ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform1uiv = (location, count, value) => {\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\n    };\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2f = (location, v0, v1) => {\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2f = _glUniform2f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform2fv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\n        return;\n      }\n  \n      if (count <= 144) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[2*count-1];\n        for (var i = 0; i < 2*count; i += 2) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\n      }\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform2fv = _glUniform2fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2i = (location, v0, v1) => {\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2i = _glUniform2i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform2iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\n        return;\n      }\n  \n      if (count <= 144) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[2*count-1];\n        for (var i = 0; i < 2*count; i += 2) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\n      }\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform2iv = _glUniform2iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform2ui = (location, v0, v1) => {\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2ui = _glUniform2ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform2uiv = (location, count, value) => {\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\n    };\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3f = (location, v0, v1, v2) => {\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3f = _glUniform3f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform3fv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\n        return;\n      }\n  \n      if (count <= 96) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[3*count-1];\n        for (var i = 0; i < 3*count; i += 3) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\n      }\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform3fv = _glUniform3fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3i = (location, v0, v1, v2) => {\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3i = _glUniform3i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform3iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\n        return;\n      }\n  \n      if (count <= 96) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[3*count-1];\n        for (var i = 0; i < 3*count; i += 3) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\n      }\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform3iv = _glUniform3iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform3ui = (location, v0, v1, v2) => {\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3ui = _glUniform3ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform3uiv = (location, count, value) => {\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\n    };\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4f = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4f = _glUniform4f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform4fv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[4*count-1];\n        // hoist the heap out of the loop for size and for pthreads+growth.\n        var heap = HEAPF32;\n        value >>= 2;\n        for (var i = 0; i < 4 * count; i += 4) {\n          var dst = value + i;\n          view[i] = heap[dst];\n          view[i + 1] = heap[dst + 1];\n          view[i + 2] = heap[dst + 2];\n          view[i + 3] = heap[dst + 3];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform4fv = _glUniform4fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4i = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4i = _glUniform4i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform4iv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[4*count-1];\n        for (var i = 0; i < 4*count; i += 4) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform4iv = _glUniform4iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform4ui = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4ui = _glUniform4ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform4uiv = (location, count, value) => {\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\n    };\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\n\n  /** @suppress {duplicate } */\n  var _glUniformBlockBinding = (program, uniformBlockIndex, uniformBlockBinding) => {\n      program = GL.programs[program];\n  \n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\n    };\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix2fv = (location, count, transpose, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[4*count-1];\n        for (var i = 0; i < 4*count; i += 4) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\n    };\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\n    };\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix3fv = (location, count, transpose, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\n        return;\n      }\n  \n      if (count <= 32) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[9*count-1];\n        for (var i = 0; i < 9*count; i += 9) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\n      }\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\n    };\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\n    };\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix4fv = (location, count, transpose, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\n        return;\n      }\n  \n      if (count <= 18) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[16*count-1];\n        // hoist the heap out of the loop for size and for pthreads+growth.\n        var heap = HEAPF32;\n        value >>= 2;\n        for (var i = 0; i < 16 * count; i += 16) {\n          var dst = value + i;\n          view[i] = heap[dst];\n          view[i + 1] = heap[dst + 1];\n          view[i + 2] = heap[dst + 2];\n          view[i + 3] = heap[dst + 3];\n          view[i + 4] = heap[dst + 4];\n          view[i + 5] = heap[dst + 5];\n          view[i + 6] = heap[dst + 6];\n          view[i + 7] = heap[dst + 7];\n          view[i + 8] = heap[dst + 8];\n          view[i + 9] = heap[dst + 9];\n          view[i + 10] = heap[dst + 10];\n          view[i + 11] = heap[dst + 11];\n          view[i + 12] = heap[dst + 12];\n          view[i + 13] = heap[dst + 13];\n          view[i + 14] = heap[dst + 14];\n          view[i + 15] = heap[dst + 15];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\n      }\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\n    };\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\n    };\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUseProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.useProgram(program);\n      // Record the currently active program so that we can access the uniform\n      // mapping table of that program.\n      GLctx.currentProgram = program;\n    };\n  var _emscripten_glUseProgram = _glUseProgram;\n\n  /** @suppress {duplicate } */\n  var _glValidateProgram = (program) => {\n      GLctx.validateProgram(GL.programs[program]);\n    };\n  var _emscripten_glValidateProgram = _glValidateProgram;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib1fv = (index, v) => {\n  \n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\n    };\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib2fv = (index, v) => {\n  \n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\n    };\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib3fv = (index, v) => {\n  \n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\n    };\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib4fv = (index, v) => {\n  \n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisor = (index, divisor) => {\n      GLctx.vertexAttribDivisor(index, divisor);\n    };\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4iv = (index, v) => {\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4uiv = (index, v) => {\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribIPointer = (index, size, type, stride, ptr) => {\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\n    };\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribPointer = (index, size, type, normalized, stride, ptr) => {\n      var cb = GL.currentContext.clientBuffers[index];\n      if (!GLctx.currentArrayBufferBinding) {\n        cb.size = size;\n        cb.type = type;\n        cb.normalized = normalized;\n        cb.stride = stride;\n        cb.ptr = ptr;\n        cb.clientside = true;\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\n        };\n        return;\n      }\n      cb.clientside = false;\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\n    };\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\n\n  /** @suppress {duplicate } */\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\n  var _emscripten_glViewport = _glViewport;\n\n  /** @suppress {duplicate } */\n  var _glWaitSync = (sync, flags, timeout_low, timeout_high) => {\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glWaitSync = _glWaitSync;\n\n  var _emscripten_has_asyncify = () => 1;\n\n  var _emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n\n  \n  \n  \n  \n  \n  \n  \n  var doRequestFullscreen = (target, strategy) => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      if (!target.requestFullscreen\n        && !target.webkitRequestFullscreen\n        ) {\n        return -3;\n      }\n  \n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\n  \n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\n      if (!canPerformRequests) {\n        if (strategy.deferUntilInEventHandler) {\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\n          return 1;\n        }\n        return -2;\n      }\n  \n      return JSEvents_requestFullscreen(target, strategy);\n    };\n  \n  \n  var _emscripten_request_fullscreen_strategy = (target, deferUntilInEventHandler, fullscreenStrategy) => {\n      var strategy = {\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\n        deferUntilInEventHandler,\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\n      };\n  \n      return doRequestFullscreen(target, strategy);\n    };\n\n  \n  \n  var _emscripten_request_pointerlock = (target, deferUntilInEventHandler) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n      if (!target.requestPointerLock\n        ) {\n        return -1;\n      }\n  \n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\n  \n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\n      if (!canPerformRequests) {\n        if (deferUntilInEventHandler) {\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\n          return 1;\n        }\n        return -2;\n      }\n  \n      return requestPointerLock(target);\n    };\n\n  var getHeapMax = () =>\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n      // for any code that deals with heap sizes, which would require special\n      // casing all heap size related code to treat 0 specially.\n      2147483648;\n  \n  var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = (size - b.byteLength + 65535) / 65536;\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size\n        updateMemoryViews();\n        return 1 /*success*/;\n      } catch(e) {\n      }\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\n      // anyhow)\n    };\n  var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      requestedSize >>>= 0;\n      // With multithreaded builds, races can happen (another thread might increase the size\n      // in between), so return a failure, and let the caller retry.\n  \n      // Memory resize rules:\n      // 1.  Always increase heap size to at least the requested size, rounded up\n      //     to next page multiple.\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n      //     geometrically: increase the heap size according to\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n      //     linearly: increase the heap size by at least\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n      // 4.  If we were unable to allocate as much memory, it may be due to\n      //     over-eager decision to excessively reserve due to (3) above.\n      //     Hence if an allocation fails, cut down on the amount of excess\n      //     growth, in an attempt to succeed to perform a smaller allocation.\n  \n      // A limit is set for how much we can grow. We should not exceed that\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n  \n      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n  \n      // Loop through potential heap size increases. If we attempt a too eager\n      // reservation that fails, cut down on the attempted size and reserve a\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\n  \n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  \n        var replacement = growMemory(newSize);\n        if (replacement) {\n  \n          return true;\n        }\n      }\n      return false;\n    };\n\n  \n  /** @suppress {checkTypes} */\n  var disableGamepadApiIfItThrows = () => {\n      try {\n        navigator.getGamepads();\n      } catch(e) {\n        navigator.getGamepads = null; // Disable getGamepads() so that other functions will not attempt to use it.\n        return 1;\n      }\n    };\n  var _emscripten_sample_gamepad_data = () => {\n      if (!navigator.getGamepads || disableGamepadApiIfItThrows()) return -1;\n      return (JSEvents.lastGamepadState = navigator.getGamepads())\n        ? 0 : -1;\n    };\n\n  \n  \n  var registerBeforeUnloadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) => {\n      var beforeUnloadEventHandlerFunc = (e = event) => {\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\n  \n        if (confirmationMessage) {\n          confirmationMessage = UTF8ToString(confirmationMessage);\n        }\n        if (confirmationMessage) {\n          e.preventDefault();\n          e.returnValue = confirmationMessage;\n          return confirmationMessage;\n        }\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: beforeUnloadEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_beforeunload_callback_on_thread = (userData, callbackfunc, targetThread) => {\n      if (typeof onbeforeunload == 'undefined') return -1;\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\n      // and there is no time to start proxying it anywhere.\n      if (targetThread !== 1) return -5;\n      return registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\n    };\n\n  \n  \n  \n  var registerFocusEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc(256);\n  \n      var focusEventHandlerFunc = (e = event) => {\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\n        var id = e.target.id ? e.target.id : '';\n  \n        var focusEvent = JSEvents.focusEvent;\n        stringToUTF8(nodeName, focusEvent + 0, 128);\n        stringToUTF8(id, focusEvent + 128, 128);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: focusEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_blur_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      return registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\n    };\n\n\n  \n  var _emscripten_set_element_css_size = (target, width, height) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      target.style.width = width + \"px\";\n      target.style.height = height + \"px\";\n  \n      return 0;\n    };\n\n  var _emscripten_set_focus_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      return registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\n    };\n\n  \n  \n  \n  var fillFullscreenChangeEventData = (eventStruct) => {\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\n      var isFullscreen = !!fullscreenElement;\n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\n      var id = reportedElement?.id || '';\n      stringToUTF8(nodeName, eventStruct + 8, 128);\n      stringToUTF8(id, eventStruct + 136, 128);\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\n      if (isFullscreen) {\n        JSEvents.previousFullscreenElement = fullscreenElement;\n      }\n    };\n  \n  \n  var registerFullscreenChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc(280);\n  \n      var fullscreenChangeEventhandlerFunc = (e = event) => {\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\n  \n        fillFullscreenChangeEventData(fullscreenChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: fullscreenChangeEventhandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  \n  var _emscripten_set_fullscreenchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\n  \n      return registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\n    };\n\n  \n  \n  \n  var registerGamepadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc(1432);\n  \n      var gamepadEventHandlerFunc = (e = event) => {\n        var gamepadEvent = JSEvents.gamepadEvent;\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: gamepadEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_gamepadconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      if (!navigator.getGamepads || disableGamepadApiIfItThrows()) return -1;\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\n    };\n\n  \n  var _emscripten_set_gamepaddisconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      if (!navigator.getGamepads || disableGamepadApiIfItThrows()) return -1;\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\n    };\n\n  \n  \n  \n  var registerKeyEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc(176);\n  \n      var keyEventHandlerFunc = (e) => {\n  \n        var keyEventData = JSEvents.keyEvent;\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\n  \n        var idx =((keyEventData)>>2);\n  \n        HEAP32[idx + 2] = e.location;\n        HEAP32[idx + 3] = e.ctrlKey;\n        HEAP32[idx + 4] = e.shiftKey;\n        HEAP32[idx + 5] = e.altKey;\n        HEAP32[idx + 6] = e.metaKey;\n        HEAP32[idx + 7] = e.repeat;\n        HEAP32[idx + 8] = e.charCode;\n        HEAP32[idx + 9] = e.keyCode;\n        HEAP32[idx + 10] = e.which;\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: keyEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_keydown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\n\n  var _emscripten_set_keypress_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\n\n  var _emscripten_set_keyup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\n\n  \n  var _emscripten_set_main_loop = (func, fps, simulateInfiniteLoop) => {\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\n    };\n\n  \n  \n  \n  var fillMouseEventData = (eventStruct, e, target) => {\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\n      var idx = ((eventStruct)>>2);\n      HEAP32[idx + 2] = e.screenX;\n      HEAP32[idx + 3] = e.screenY;\n      HEAP32[idx + 4] = e.clientX;\n      HEAP32[idx + 5] = e.clientY;\n      HEAP32[idx + 6] = e.ctrlKey;\n      HEAP32[idx + 7] = e.shiftKey;\n      HEAP32[idx + 8] = e.altKey;\n      HEAP32[idx + 9] = e.metaKey;\n      HEAP16[idx*2 + 20] = e.button;\n      HEAP16[idx*2 + 21] = e.buttons;\n  \n      HEAP32[idx + 11] = e[\"movementX\"]\n        ;\n  \n      HEAP32[idx + 12] = e[\"movementY\"]\n        ;\n  \n      var rect = getBoundingClientRect(target);\n      HEAP32[idx + 13] = e.clientX - rect.left;\n      HEAP32[idx + 14] = e.clientY - rect.top;\n  \n    };\n  \n  \n  var registerMouseEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc(72);\n      target = findEventTarget(target);\n  \n      var mouseEventHandlerFunc = (e = event) => {\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: mouseEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_mousedown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\n\n  var _emscripten_set_mouseenter_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\n\n  var _emscripten_set_mouseleave_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\n\n  var _emscripten_set_mousemove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\n\n  var _emscripten_set_mouseup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\n\n  \n  \n  \n  var fillPointerlockChangeEventData = (eventStruct) => {\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\n      var isPointerlocked = !!pointerLockElement;\n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\n      var id = pointerLockElement?.id || '';\n      stringToUTF8(nodeName, eventStruct + 4, 128);\n      stringToUTF8(id, eventStruct + 132, 128);\n    };\n  \n  \n  var registerPointerlockChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc(260);\n  \n      var pointerlockChangeEventHandlerFunc = (e = event) => {\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: pointerlockChangeEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  \n  /** @suppress {missingProperties} */\n  var _emscripten_set_pointerlockchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\n        return -1;\n      }\n  \n      target = findEventTarget(target);\n      if (!target) return -4;\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\n      return registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\n    };\n\n  \n  \n  var registerUiEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc(36);\n  \n      target = findEventTarget(target);\n  \n      var uiEventHandlerFunc = (e = event) => {\n        if (e.target != target) {\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\n          // causing a new scroll, etc..\n          return;\n        }\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\n        if (!b) {\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\n          return;\n        }\n        var uiEvent = JSEvents.uiEvent;\n        HEAP32[((uiEvent)>>2)] = e.detail;\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: uiEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_resize_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\n\n  \n  \n  \n  var registerTouchEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc(1696);\n  \n      target = findEventTarget(target);\n  \n      var touchEventHandlerFunc = (e) => {\n        var t, touches = {}, et = e.touches;\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches,\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\n  \n        for (var i = 0; i < et.length; ++i) {\n          t = et[i];\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\n          // changed/target states we may have set from previous frame.\n          t.isChanged = t.onTarget = 0;\n          touches[t.identifier] = t;\n        }\n        // Mark which touches are part of the changedTouches list.\n        for (var i = 0; i < e.changedTouches.length; ++i) {\n          t = e.changedTouches[i];\n          t.isChanged = 1;\n          touches[t.identifier] = t;\n        }\n        // Mark which touches are part of the targetTouches list.\n        for (var i = 0; i < e.targetTouches.length; ++i) {\n          touches[e.targetTouches[i].identifier].onTarget = 1;\n        }\n  \n        var touchEvent = JSEvents.touchEvent;\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\n        var idx =((touchEvent)>>2);// Pre-shift the ptr to index to HEAP32 to save code size\n        HEAP32[idx + 3] = e.ctrlKey;\n        HEAP32[idx + 4] = e.shiftKey;\n        HEAP32[idx + 5] = e.altKey;\n        HEAP32[idx + 6] = e.metaKey;\n        idx += 7; // Advance to the start of the touch array.\n        var targetRect = getBoundingClientRect(target);\n        var numTouches = 0;\n        for (var i in touches) {\n          t = touches[i];\n          HEAP32[idx + 0] = t.identifier;\n          HEAP32[idx + 1] = t.screenX;\n          HEAP32[idx + 2] = t.screenY;\n          HEAP32[idx + 3] = t.clientX;\n          HEAP32[idx + 4] = t.clientY;\n          HEAP32[idx + 5] = t.pageX;\n          HEAP32[idx + 6] = t.pageY;\n          HEAP32[idx + 7] = t.isChanged;\n          HEAP32[idx + 8] = t.onTarget;\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\n  \n          idx += 13;\n  \n          if (++numTouches > 31) {\n            break;\n          }\n        }\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: touchEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_touchcancel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\n\n  var _emscripten_set_touchend_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\n\n  var _emscripten_set_touchmove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\n\n  var _emscripten_set_touchstart_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\n\n  \n  var fillVisibilityChangeEventData = (eventStruct) => {\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\n  \n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP32[((eventStruct)>>2)] = document.hidden;\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\n    };\n  \n  \n  var registerVisibilityChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc(8);\n  \n      var visibilityChangeEventHandlerFunc = (e = event) => {\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\n  \n        fillVisibilityChangeEventData(visibilityChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: visibilityChangeEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_visibilitychange_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      return registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\n    };\n\n  \n  \n  \n  \n  var registerWheelEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc(104);\n  \n      // The DOM Level 3 events spec event 'wheel'\n      var wheelHandlerFunc = (e = event) => {\n        var wheelEvent = JSEvents.wheelEvent;\n        fillMouseEventData(wheelEvent, e, target);\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: wheelHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_wheel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n      if (typeof target.onwheel != 'undefined') {\n        return registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\n      } else {\n        return -1;\n      }\n    };\n\n  \n  var _emscripten_set_window_title = (title) => document.title = UTF8ToString(title);\n\n  var _emscripten_sleep = (ms) => {\n      // emscripten_sleep() does not return a value, but we still need a |return|\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\n      // returns a Promise instead of nothing, and that Promise is what tells the\n      // wasm VM to pause the stack.\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\n    };\n  _emscripten_sleep.isAsync = true;\n\n  var ENV = {\n  };\n  \n  var getExecutableName = () => {\n      return thisProgram || './this.program';\n    };\n  var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        // Default values.\n        // Browser language detection #8751\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\n        var env = {\n          'USER': 'web_user',\n          'LOGNAME': 'web_user',\n          'PATH': '/',\n          'PWD': '/',\n          'HOME': '/home/web_user',\n          'LANG': lang,\n          '_': getExecutableName()\n        };\n        // Apply the user-provided values, if any.\n        for (var x in ENV) {\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\n          // explicitly set to be so. We allow user code to do that to\n          // force variables with default values to remain unset.\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n  \n  var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\n      }\n      // Null-terminate the string\n      HEAP8[((buffer)>>0)] = 0;\n    };\n  \n  var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n  \n  var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[((penviron_count)>>2)] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => bufSize += string.length + 1);\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\n      return 0;\n    };\n\n\n  function _fd_close(fd) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  /** @param {number=} offset */\n  var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break; // nothing more to read\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_read(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doReadv(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  \n  function _fd_seek(fd,offset_low, offset_high,whence,newOffset) {\n    var offset = convertI32PairToI53Checked(offset_low, offset_high);;\n  \n    \n  try {\n  \n      if (isNaN(offset)) return 61;\n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.llseek(stream, offset, whence);\n      (tempI64 = [stream.position>>>0,(tempDouble = stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  ;\n  }\n\n  /** @param {number=} offset */\n  var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_write(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doWritev(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n\n  \n  var arraySum = (array, index) => {\n      var sum = 0;\n      for (var i = 0; i <= index; sum += array[i++]) {\n        // no-op\n      }\n      return sum;\n    };\n  \n  \n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\n  \n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\n  var addDays = (date, days) => {\n      var newDate = new Date(date.getTime());\n      while (days > 0) {\n        var leap = isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n  \n        if (days > daysInCurrentMonth-newDate.getDate()) {\n          // we spill over to next month\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\n          newDate.setDate(1);\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth+1)\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear()+1);\n          }\n        } else {\n          // we stay in current month\n          newDate.setDate(newDate.getDate()+days);\n          return newDate;\n        }\n      }\n  \n      return newDate;\n    };\n  \n  \n  \n  \n  var writeArrayToMemory = (array, buffer) => {\n      HEAP8.set(array, buffer);\n    };\n  \n  var _strftime = (s, maxsize, format, tm) => {\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\n  \n      var tm_zone = HEAPU32[(((tm)+(40))>>2)];\n  \n      var date = {\n        tm_sec: HEAP32[((tm)>>2)],\n        tm_min: HEAP32[(((tm)+(4))>>2)],\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\n        tm_year: HEAP32[(((tm)+(20))>>2)],\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\n      };\n      \n  \n      var pattern = UTF8ToString(format);\n  \n      // expand format\n      var EXPANSION_RULES_1 = {\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\n        '%h': '%b',                       // Equivalent to %b\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\n        '%T': '%H:%M:%S',                 // Replaced by the time\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\n        // Modified Conversion Specifiers\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\n      };\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\n      }\n  \n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  \n      function leadingSomething(value, digits, character) {\n        var str = typeof value == 'number' ? value.toString() : (value || '');\n        while (str.length < digits) {\n          str = character[0]+str;\n        }\n        return str;\n      }\n  \n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, '0');\n      }\n  \n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\n        }\n  \n        var compare;\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate()-date2.getDate());\n          }\n        }\n        return compare;\n      }\n  \n      function getFirstWeekStartDate(janFourth) {\n          switch (janFourth.getDay()) {\n            case 0: // Sunday\n              return new Date(janFourth.getFullYear()-1, 11, 29);\n            case 1: // Monday\n              return janFourth;\n            case 2: // Tuesday\n              return new Date(janFourth.getFullYear(), 0, 3);\n            case 3: // Wednesday\n              return new Date(janFourth.getFullYear(), 0, 2);\n            case 4: // Thursday\n              return new Date(janFourth.getFullYear(), 0, 1);\n            case 5: // Friday\n              return new Date(janFourth.getFullYear()-1, 11, 31);\n            case 6: // Saturday\n              return new Date(janFourth.getFullYear()-1, 11, 30);\n          }\n      }\n  \n      function getWeekBasedYear(date) {\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\n  \n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\n  \n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  \n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n            // this date is after the start of the first week of this year\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n              return thisDate.getFullYear()+1;\n            }\n            return thisDate.getFullYear();\n          }\n          return thisDate.getFullYear()-1;\n      }\n  \n      var EXPANSION_RULES_2 = {\n        '%a': (date) => WEEKDAYS[date.tm_wday].substring(0,3) ,\n        '%A': (date) => WEEKDAYS[date.tm_wday],\n        '%b': (date) => MONTHS[date.tm_mon].substring(0,3),\n        '%B': (date) => MONTHS[date.tm_mon],\n        '%C': (date) => {\n          var year = date.tm_year+1900;\n          return leadingNulls((year/100)|0,2);\n        },\n        '%d': (date) => leadingNulls(date.tm_mday, 2),\n        '%e': (date) => leadingSomething(date.tm_mday, 2, ' '),\n        '%g': (date) => {\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\n          // January 4th, which is also the week that includes the first Thursday of the year, and\n          // is also the first week that contains at least four days in the year.\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\n  \n          return getWeekBasedYear(date).toString().substring(2);\n        },\n        '%G': (date) => getWeekBasedYear(date),\n        '%H': (date) => leadingNulls(date.tm_hour, 2),\n        '%I': (date) => {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;\n          else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        '%j': (date) => {\n          // Day of the year (001-366)\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\n        },\n        '%m': (date) => leadingNulls(date.tm_mon+1, 2),\n        '%M': (date) => leadingNulls(date.tm_min, 2),\n        '%n': () => '\\n',\n        '%p': (date) => {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return 'AM';\n          }\n          return 'PM';\n        },\n        '%S': (date) => leadingNulls(date.tm_sec, 2),\n        '%t': () => '\\t',\n        '%u': (date) => date.tm_wday || 7,\n        '%U': (date) => {\n          var days = date.tm_yday + 7 - date.tm_wday;\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        '%V': (date) => {\n          // Replaced by the week number of the year (Monday as the first day of the week)\n          // as a decimal number [01,53]. If the week containing 1 January has four\n          // or more days in the new year, then it is considered week 1.\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\n          // If 1 Jan is just 1-3 days past Monday, the previous week\n          // is also in this year.\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n            val++;\n          }\n          if (!val) {\n            val = 52;\n            // If 31 December of prev year a Thursday, or Friday of a\n            // leap year, then the prev year has 53 weeks.\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\n              val++;\n            }\n          } else if (val == 53) {\n            // If 1 January is not a Thursday, and not a Wednesday of a\n            // leap year, then this year has only 52 weeks.\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\n              val = 1;\n          }\n          return leadingNulls(val, 2);\n        },\n        '%w': (date) => date.tm_wday,\n        '%W': (date) => {\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        '%y': (date) => {\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\n          return (date.tm_year+1900).toString().substring(2);\n        },\n        // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\n        '%Y': (date) => date.tm_year+1900,\n        '%z': (date) => {\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\n          off = (off / 60)*100 + (off % 60);\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\n        },\n        '%Z': (date) => date.tm_zone,\n        '%%': () => '%'\n      };\n  \n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\n      // re-inject them after processing.\n      pattern = pattern.replace(/%%/g, '\\0\\0')\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\n        }\n      }\n      pattern = pattern.replace(/\\0\\0/g, '%')\n  \n      var bytes = intArrayFromString(pattern, false);\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n  \n      writeArrayToMemory(bytes, s);\n      return bytes.length-1;\n    };\n\n  var _system = (command) => {\n      // int system(const char *command);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/system.html\n      // Can't call external programs.\n      if (!command) return 0; // no shell available\n      setErrNo(52);\n      return -1;\n    };\n\n\n\n\n\n\n  var runAndAbortIfError = (func) => {\n      try {\n        return func();\n      } catch (e) {\n        abort(e);\n      }\n    };\n  \n  \n  var sigToWasmTypes = (sig) => {\n      var typeNames = {\n        'i': 'i32',\n        'j': 'i64',\n        'f': 'f32',\n        'd': 'f64',\n        'e': 'externref',\n        'p': 'i32',\n      };\n      var type = {\n        parameters: [],\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\n      };\n      for (var i = 1; i < sig.length; ++i) {\n        type.parameters.push(typeNames[sig[i]]);\n      }\n      return type;\n    };\n  \n  var runtimeKeepalivePush = () => {\n      runtimeKeepaliveCounter += 1;\n    };\n  \n  var runtimeKeepalivePop = () => {\n      runtimeKeepaliveCounter -= 1;\n    };\n  \n  \n  var Asyncify = {\n  instrumentWasmImports(imports) {\n        var importPattern = /^(invoke_.*|__asyncjs__.*)$/;\n  \n        for (let [x, original] of Object.entries(imports)) {\n          let sig = original.sig;\n          if (typeof original == 'function') {\n            let isAsyncifyImport = original.isAsync || importPattern.test(x);\n          }\n        }\n      },\n  instrumentWasmExports(exports) {\n        var ret = {};\n        for (let [x, original] of Object.entries(exports)) {\n          if (typeof original == 'function') {\n            ret[x] = function() {\n              Asyncify.exportCallStack.push(x);\n              try {\n                return original.apply(null, arguments);\n              } finally {\n                if (!ABORT) {\n                  var y = Asyncify.exportCallStack.pop();\n                  Asyncify.maybeStopUnwind();\n                }\n              }\n            };\n          } else {\n            ret[x] = original;\n          }\n        }\n        return ret;\n      },\n  State:{\n  Normal:0,\n  Unwinding:1,\n  Rewinding:2,\n  Disabled:3,\n  },\n  state:0,\n  StackSize:4096,\n  currData:null,\n  handleSleepReturnValue:0,\n  exportCallStack:[],\n  callStackNameToId:{\n  },\n  callStackIdToName:{\n  },\n  callStackId:0,\n  asyncPromiseHandlers:null,\n  sleepCallbacks:[],\n  getCallStackId(funcName) {\n        var id = Asyncify.callStackNameToId[funcName];\n        if (id === undefined) {\n          id = Asyncify.callStackId++;\n          Asyncify.callStackNameToId[funcName] = id;\n          Asyncify.callStackIdToName[id] = funcName;\n        }\n        return id;\n      },\n  maybeStopUnwind() {\n        if (Asyncify.currData &&\n            Asyncify.state === Asyncify.State.Unwinding &&\n            Asyncify.exportCallStack.length === 0) {\n          // We just finished unwinding.\n          // Be sure to set the state before calling any other functions to avoid\n          // possible infinite recursion here (For example in debug pthread builds\n          // the dbg() function itself can call back into WebAssembly to get the\n          // current pthread_self() pointer).\n          Asyncify.state = Asyncify.State.Normal;\n          \n          // Keep the runtime alive so that a re-wind can be done later.\n          runAndAbortIfError(_asyncify_stop_unwind);\n          if (typeof Fibers != 'undefined') {\n            Fibers.trampoline();\n          }\n        }\n      },\n  whenDone() {\n        return new Promise((resolve, reject) => {\n          Asyncify.asyncPromiseHandlers = { resolve, reject };\n        });\n      },\n  allocateData() {\n        // An asyncify data structure has three fields:\n        //  0  current stack pos\n        //  4  max stack pos\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\n        //\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\n        // We also embed a stack in the same memory region here, right next to the structure.\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\n        var ptr = _malloc(12 + Asyncify.StackSize);\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\n        Asyncify.setDataRewindFunc(ptr);\n        return ptr;\n      },\n  setDataHeader(ptr, stack, stackSize) {\n        HEAPU32[((ptr)>>2)] = stack;\n        HEAPU32[(((ptr)+(4))>>2)] = stack + stackSize;\n      },\n  setDataRewindFunc(ptr) {\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\n      },\n  getDataRewindFunc(ptr) {\n        var id = HEAP32[(((ptr)+(8))>>2)];\n        var name = Asyncify.callStackIdToName[id];\n        var func = wasmExports[name];\n        return func;\n      },\n  doRewind(ptr) {\n        var start = Asyncify.getDataRewindFunc(ptr);\n        // Once we have rewound and the stack we no longer need to artificially\n        // keep the runtime alive.\n        \n        return start();\n      },\n  handleSleep(startAsync) {\n        if (ABORT) return;\n        if (Asyncify.state === Asyncify.State.Normal) {\n          // Prepare to sleep. Call startAsync, and see what happens:\n          // if the code decided to call our callback synchronously,\n          // then no async operation was in fact begun, and we don't\n          // need to do anything.\n          var reachedCallback = false;\n          var reachedAfterCallback = false;\n          startAsync((handleSleepReturnValue = 0) => {\n            if (ABORT) return;\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\n            reachedCallback = true;\n            if (!reachedAfterCallback) {\n              // We are happening synchronously, so no need for async.\n              return;\n            }\n            Asyncify.state = Asyncify.State.Rewinding;\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\n              Browser.mainLoop.resume();\n            }\n            var asyncWasmReturnValue, isError = false;\n            try {\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\n            } catch (err) {\n              asyncWasmReturnValue = err;\n              isError = true;\n            }\n            // Track whether the return value was handled by any promise handlers.\n            var handled = false;\n            if (!Asyncify.currData) {\n              // All asynchronous execution has finished.\n              // `asyncWasmReturnValue` now contains the final\n              // return value of the exported async WASM function.\n              //\n              // Note: `asyncWasmReturnValue` is distinct from\n              // `Asyncify.handleSleepReturnValue`.\n              // `Asyncify.handleSleepReturnValue` contains the return\n              // value of the last C function to have executed\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\n              // contains the return value of the exported WASM function\n              // that may have called C functions that\n              // call `Asyncify.handleSleep()`.\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\n              if (asyncPromiseHandlers) {\n                Asyncify.asyncPromiseHandlers = null;\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\n                handled = true;\n              }\n            }\n            if (isError && !handled) {\n              // If there was an error and it was not handled by now, we have no choice but to\n              // rethrow that error into the global scope where it can be caught only by\n              // `onerror` or `onunhandledpromiserejection`.\n              throw asyncWasmReturnValue;\n            }\n          });\n          reachedAfterCallback = true;\n          if (!reachedCallback) {\n            // A true async operation was begun; start a sleep.\n            Asyncify.state = Asyncify.State.Unwinding;\n            // TODO: reuse, don't alloc/free every sleep\n            Asyncify.currData = Asyncify.allocateData();\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\n              Browser.mainLoop.pause();\n            }\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\n          }\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\n          // Stop a resume.\n          Asyncify.state = Asyncify.State.Normal;\n          runAndAbortIfError(_asyncify_stop_rewind);\n          _free(Asyncify.currData);\n          Asyncify.currData = null;\n          // Call all sleep callbacks now that the sleep-resume is all done.\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\n        } else {\n          abort(`invalid state: ${Asyncify.state}`);\n        }\n        return Asyncify.handleSleepReturnValue;\n      },\n  handleAsync(startAsync) {\n        return Asyncify.handleSleep((wakeUp) => {\n          // TODO: add error handling as a second param when handleSleep implements it.\n          startAsync().then(wakeUp);\n        });\n      },\n  };\n\n\n\n\n  var FS_unlink = (path) => FS.unlink(path);\n\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\n    if (!parent) {\n      parent = this;  // root node sets parent to itself\n    }\n    this.parent = parent;\n    this.mount = parent.mount;\n    this.mounted = null;\n    this.id = FS.nextInode++;\n    this.name = name;\n    this.mode = mode;\n    this.node_ops = {};\n    this.stream_ops = {};\n    this.rdev = rdev;\n  };\n  var readMode = 292/*292*/ | 73/*73*/;\n  var writeMode = 146/*146*/;\n  Object.defineProperties(FSNode.prototype, {\n   read: {\n    get: /** @this{FSNode} */function() {\n     return (this.mode & readMode) === readMode;\n    },\n    set: /** @this{FSNode} */function(val) {\n     val ? this.mode |= readMode : this.mode &= ~readMode;\n    }\n   },\n   write: {\n    get: /** @this{FSNode} */function() {\n     return (this.mode & writeMode) === writeMode;\n    },\n    set: /** @this{FSNode} */function(val) {\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\n    }\n   },\n   isFolder: {\n    get: /** @this{FSNode} */function() {\n     return FS.isDir(this.mode);\n    }\n   },\n   isDevice: {\n    get: /** @this{FSNode} */function() {\n     return FS.isChrdev(this.mode);\n    }\n   }\n  });\n  FS.FSNode = FSNode;\n  FS.createPreloadedFile = FS_createPreloadedFile;\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\n\n      // exports\n      Module[\"requestFullscreen\"] = Browser.requestFullscreen;\n      Module[\"requestAnimationFrame\"] = Browser.requestAnimationFrame;\n      Module[\"setCanvasSize\"] = Browser.setCanvasSize;\n      Module[\"pauseMainLoop\"] = Browser.mainLoop.pause;\n      Module[\"resumeMainLoop\"] = Browser.mainLoop.resume;\n      Module[\"getUserMedia\"] = Browser.getUserMedia;\n      Module[\"createContext\"] = Browser.createContext;\n      var preloadedImages = {};\n      var preloadedAudios = {};;\nvar GLctx;;\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\n    miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\n  };\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\n    miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\n  };\nvar wasmImports = {\n  /** @export */\n  __syscall_chdir: ___syscall_chdir,\n  /** @export */\n  __syscall_dup3: ___syscall_dup3,\n  /** @export */\n  __syscall_faccessat: ___syscall_faccessat,\n  /** @export */\n  __syscall_fcntl64: ___syscall_fcntl64,\n  /** @export */\n  __syscall_fstat64: ___syscall_fstat64,\n  /** @export */\n  __syscall_getcwd: ___syscall_getcwd,\n  /** @export */\n  __syscall_getdents64: ___syscall_getdents64,\n  /** @export */\n  __syscall_ioctl: ___syscall_ioctl,\n  /** @export */\n  __syscall_lstat64: ___syscall_lstat64,\n  /** @export */\n  __syscall_mkdirat: ___syscall_mkdirat,\n  /** @export */\n  __syscall_newfstatat: ___syscall_newfstatat,\n  /** @export */\n  __syscall_openat: ___syscall_openat,\n  /** @export */\n  __syscall_readlinkat: ___syscall_readlinkat,\n  /** @export */\n  __syscall_renameat: ___syscall_renameat,\n  /** @export */\n  __syscall_rmdir: ___syscall_rmdir,\n  /** @export */\n  __syscall_stat64: ___syscall_stat64,\n  /** @export */\n  __syscall_unlinkat: ___syscall_unlinkat,\n  /** @export */\n  _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n  /** @export */\n  _emscripten_throw_longjmp: __emscripten_throw_longjmp,\n  /** @export */\n  _gmtime_js: __gmtime_js,\n  /** @export */\n  _localtime_js: __localtime_js,\n  /** @export */\n  _mktime_js: __mktime_js,\n  /** @export */\n  _tzset_js: __tzset_js,\n  /** @export */\n  abort: _abort,\n  /** @export */\n  eglBindAPI: _eglBindAPI,\n  /** @export */\n  eglChooseConfig: _eglChooseConfig,\n  /** @export */\n  eglCreateContext: _eglCreateContext,\n  /** @export */\n  eglCreateWindowSurface: _eglCreateWindowSurface,\n  /** @export */\n  eglDestroyContext: _eglDestroyContext,\n  /** @export */\n  eglDestroySurface: _eglDestroySurface,\n  /** @export */\n  eglGetConfigAttrib: _eglGetConfigAttrib,\n  /** @export */\n  eglGetDisplay: _eglGetDisplay,\n  /** @export */\n  eglGetError: _eglGetError,\n  /** @export */\n  eglInitialize: _eglInitialize,\n  /** @export */\n  eglMakeCurrent: _eglMakeCurrent,\n  /** @export */\n  eglQueryString: _eglQueryString,\n  /** @export */\n  eglSwapBuffers: _eglSwapBuffers,\n  /** @export */\n  eglSwapInterval: _eglSwapInterval,\n  /** @export */\n  eglTerminate: _eglTerminate,\n  /** @export */\n  eglWaitGL: _eglWaitGL,\n  /** @export */\n  eglWaitNative: _eglWaitNative,\n  /** @export */\n  emscripten_asm_const_int: _emscripten_asm_const_int,\n  /** @export */\n  emscripten_asm_const_int_sync_on_main_thread: _emscripten_asm_const_int_sync_on_main_thread,\n  /** @export */\n  emscripten_date_now: _emscripten_date_now,\n  /** @export */\n  emscripten_enter_soft_fullscreen: _emscripten_enter_soft_fullscreen,\n  /** @export */\n  emscripten_exit_fullscreen: _emscripten_exit_fullscreen,\n  /** @export */\n  emscripten_exit_pointerlock: _emscripten_exit_pointerlock,\n  /** @export */\n  emscripten_exit_soft_fullscreen: _emscripten_exit_soft_fullscreen,\n  /** @export */\n  emscripten_get_device_pixel_ratio: _emscripten_get_device_pixel_ratio,\n  /** @export */\n  emscripten_get_element_css_size: _emscripten_get_element_css_size,\n  /** @export */\n  emscripten_get_gamepad_status: _emscripten_get_gamepad_status,\n  /** @export */\n  emscripten_get_now: _emscripten_get_now,\n  /** @export */\n  emscripten_get_num_gamepads: _emscripten_get_num_gamepads,\n  /** @export */\n  emscripten_get_screen_size: _emscripten_get_screen_size,\n  /** @export */\n  emscripten_glActiveTexture: _emscripten_glActiveTexture,\n  /** @export */\n  emscripten_glAttachShader: _emscripten_glAttachShader,\n  /** @export */\n  emscripten_glBeginQuery: _emscripten_glBeginQuery,\n  /** @export */\n  emscripten_glBeginQueryEXT: _emscripten_glBeginQueryEXT,\n  /** @export */\n  emscripten_glBeginTransformFeedback: _emscripten_glBeginTransformFeedback,\n  /** @export */\n  emscripten_glBindAttribLocation: _emscripten_glBindAttribLocation,\n  /** @export */\n  emscripten_glBindBuffer: _emscripten_glBindBuffer,\n  /** @export */\n  emscripten_glBindBufferBase: _emscripten_glBindBufferBase,\n  /** @export */\n  emscripten_glBindBufferRange: _emscripten_glBindBufferRange,\n  /** @export */\n  emscripten_glBindFramebuffer: _emscripten_glBindFramebuffer,\n  /** @export */\n  emscripten_glBindRenderbuffer: _emscripten_glBindRenderbuffer,\n  /** @export */\n  emscripten_glBindSampler: _emscripten_glBindSampler,\n  /** @export */\n  emscripten_glBindTexture: _emscripten_glBindTexture,\n  /** @export */\n  emscripten_glBindTransformFeedback: _emscripten_glBindTransformFeedback,\n  /** @export */\n  emscripten_glBindVertexArray: _emscripten_glBindVertexArray,\n  /** @export */\n  emscripten_glBindVertexArrayOES: _emscripten_glBindVertexArrayOES,\n  /** @export */\n  emscripten_glBlendColor: _emscripten_glBlendColor,\n  /** @export */\n  emscripten_glBlendEquation: _emscripten_glBlendEquation,\n  /** @export */\n  emscripten_glBlendEquationSeparate: _emscripten_glBlendEquationSeparate,\n  /** @export */\n  emscripten_glBlendFunc: _emscripten_glBlendFunc,\n  /** @export */\n  emscripten_glBlendFuncSeparate: _emscripten_glBlendFuncSeparate,\n  /** @export */\n  emscripten_glBlitFramebuffer: _emscripten_glBlitFramebuffer,\n  /** @export */\n  emscripten_glBufferData: _emscripten_glBufferData,\n  /** @export */\n  emscripten_glBufferSubData: _emscripten_glBufferSubData,\n  /** @export */\n  emscripten_glCheckFramebufferStatus: _emscripten_glCheckFramebufferStatus,\n  /** @export */\n  emscripten_glClear: _emscripten_glClear,\n  /** @export */\n  emscripten_glClearBufferfi: _emscripten_glClearBufferfi,\n  /** @export */\n  emscripten_glClearBufferfv: _emscripten_glClearBufferfv,\n  /** @export */\n  emscripten_glClearBufferiv: _emscripten_glClearBufferiv,\n  /** @export */\n  emscripten_glClearBufferuiv: _emscripten_glClearBufferuiv,\n  /** @export */\n  emscripten_glClearColor: _emscripten_glClearColor,\n  /** @export */\n  emscripten_glClearDepthf: _emscripten_glClearDepthf,\n  /** @export */\n  emscripten_glClearStencil: _emscripten_glClearStencil,\n  /** @export */\n  emscripten_glClientWaitSync: _emscripten_glClientWaitSync,\n  /** @export */\n  emscripten_glColorMask: _emscripten_glColorMask,\n  /** @export */\n  emscripten_glCompileShader: _emscripten_glCompileShader,\n  /** @export */\n  emscripten_glCompressedTexImage2D: _emscripten_glCompressedTexImage2D,\n  /** @export */\n  emscripten_glCompressedTexImage3D: _emscripten_glCompressedTexImage3D,\n  /** @export */\n  emscripten_glCompressedTexSubImage2D: _emscripten_glCompressedTexSubImage2D,\n  /** @export */\n  emscripten_glCompressedTexSubImage3D: _emscripten_glCompressedTexSubImage3D,\n  /** @export */\n  emscripten_glCopyBufferSubData: _emscripten_glCopyBufferSubData,\n  /** @export */\n  emscripten_glCopyTexImage2D: _emscripten_glCopyTexImage2D,\n  /** @export */\n  emscripten_glCopyTexSubImage2D: _emscripten_glCopyTexSubImage2D,\n  /** @export */\n  emscripten_glCopyTexSubImage3D: _emscripten_glCopyTexSubImage3D,\n  /** @export */\n  emscripten_glCreateProgram: _emscripten_glCreateProgram,\n  /** @export */\n  emscripten_glCreateShader: _emscripten_glCreateShader,\n  /** @export */\n  emscripten_glCullFace: _emscripten_glCullFace,\n  /** @export */\n  emscripten_glDeleteBuffers: _emscripten_glDeleteBuffers,\n  /** @export */\n  emscripten_glDeleteFramebuffers: _emscripten_glDeleteFramebuffers,\n  /** @export */\n  emscripten_glDeleteProgram: _emscripten_glDeleteProgram,\n  /** @export */\n  emscripten_glDeleteQueries: _emscripten_glDeleteQueries,\n  /** @export */\n  emscripten_glDeleteQueriesEXT: _emscripten_glDeleteQueriesEXT,\n  /** @export */\n  emscripten_glDeleteRenderbuffers: _emscripten_glDeleteRenderbuffers,\n  /** @export */\n  emscripten_glDeleteSamplers: _emscripten_glDeleteSamplers,\n  /** @export */\n  emscripten_glDeleteShader: _emscripten_glDeleteShader,\n  /** @export */\n  emscripten_glDeleteSync: _emscripten_glDeleteSync,\n  /** @export */\n  emscripten_glDeleteTextures: _emscripten_glDeleteTextures,\n  /** @export */\n  emscripten_glDeleteTransformFeedbacks: _emscripten_glDeleteTransformFeedbacks,\n  /** @export */\n  emscripten_glDeleteVertexArrays: _emscripten_glDeleteVertexArrays,\n  /** @export */\n  emscripten_glDeleteVertexArraysOES: _emscripten_glDeleteVertexArraysOES,\n  /** @export */\n  emscripten_glDepthFunc: _emscripten_glDepthFunc,\n  /** @export */\n  emscripten_glDepthMask: _emscripten_glDepthMask,\n  /** @export */\n  emscripten_glDepthRangef: _emscripten_glDepthRangef,\n  /** @export */\n  emscripten_glDetachShader: _emscripten_glDetachShader,\n  /** @export */\n  emscripten_glDisable: _emscripten_glDisable,\n  /** @export */\n  emscripten_glDisableVertexAttribArray: _emscripten_glDisableVertexAttribArray,\n  /** @export */\n  emscripten_glDrawArrays: _emscripten_glDrawArrays,\n  /** @export */\n  emscripten_glDrawArraysInstanced: _emscripten_glDrawArraysInstanced,\n  /** @export */\n  emscripten_glDrawArraysInstancedANGLE: _emscripten_glDrawArraysInstancedANGLE,\n  /** @export */\n  emscripten_glDrawArraysInstancedARB: _emscripten_glDrawArraysInstancedARB,\n  /** @export */\n  emscripten_glDrawArraysInstancedEXT: _emscripten_glDrawArraysInstancedEXT,\n  /** @export */\n  emscripten_glDrawArraysInstancedNV: _emscripten_glDrawArraysInstancedNV,\n  /** @export */\n  emscripten_glDrawBuffers: _emscripten_glDrawBuffers,\n  /** @export */\n  emscripten_glDrawBuffersEXT: _emscripten_glDrawBuffersEXT,\n  /** @export */\n  emscripten_glDrawBuffersWEBGL: _emscripten_glDrawBuffersWEBGL,\n  /** @export */\n  emscripten_glDrawElements: _emscripten_glDrawElements,\n  /** @export */\n  emscripten_glDrawElementsInstanced: _emscripten_glDrawElementsInstanced,\n  /** @export */\n  emscripten_glDrawElementsInstancedANGLE: _emscripten_glDrawElementsInstancedANGLE,\n  /** @export */\n  emscripten_glDrawElementsInstancedARB: _emscripten_glDrawElementsInstancedARB,\n  /** @export */\n  emscripten_glDrawElementsInstancedEXT: _emscripten_glDrawElementsInstancedEXT,\n  /** @export */\n  emscripten_glDrawElementsInstancedNV: _emscripten_glDrawElementsInstancedNV,\n  /** @export */\n  emscripten_glDrawRangeElements: _emscripten_glDrawRangeElements,\n  /** @export */\n  emscripten_glEnable: _emscripten_glEnable,\n  /** @export */\n  emscripten_glEnableVertexAttribArray: _emscripten_glEnableVertexAttribArray,\n  /** @export */\n  emscripten_glEndQuery: _emscripten_glEndQuery,\n  /** @export */\n  emscripten_glEndQueryEXT: _emscripten_glEndQueryEXT,\n  /** @export */\n  emscripten_glEndTransformFeedback: _emscripten_glEndTransformFeedback,\n  /** @export */\n  emscripten_glFenceSync: _emscripten_glFenceSync,\n  /** @export */\n  emscripten_glFinish: _emscripten_glFinish,\n  /** @export */\n  emscripten_glFlush: _emscripten_glFlush,\n  /** @export */\n  emscripten_glFramebufferRenderbuffer: _emscripten_glFramebufferRenderbuffer,\n  /** @export */\n  emscripten_glFramebufferTexture2D: _emscripten_glFramebufferTexture2D,\n  /** @export */\n  emscripten_glFramebufferTextureLayer: _emscripten_glFramebufferTextureLayer,\n  /** @export */\n  emscripten_glFrontFace: _emscripten_glFrontFace,\n  /** @export */\n  emscripten_glGenBuffers: _emscripten_glGenBuffers,\n  /** @export */\n  emscripten_glGenFramebuffers: _emscripten_glGenFramebuffers,\n  /** @export */\n  emscripten_glGenQueries: _emscripten_glGenQueries,\n  /** @export */\n  emscripten_glGenQueriesEXT: _emscripten_glGenQueriesEXT,\n  /** @export */\n  emscripten_glGenRenderbuffers: _emscripten_glGenRenderbuffers,\n  /** @export */\n  emscripten_glGenSamplers: _emscripten_glGenSamplers,\n  /** @export */\n  emscripten_glGenTextures: _emscripten_glGenTextures,\n  /** @export */\n  emscripten_glGenTransformFeedbacks: _emscripten_glGenTransformFeedbacks,\n  /** @export */\n  emscripten_glGenVertexArrays: _emscripten_glGenVertexArrays,\n  /** @export */\n  emscripten_glGenVertexArraysOES: _emscripten_glGenVertexArraysOES,\n  /** @export */\n  emscripten_glGenerateMipmap: _emscripten_glGenerateMipmap,\n  /** @export */\n  emscripten_glGetActiveAttrib: _emscripten_glGetActiveAttrib,\n  /** @export */\n  emscripten_glGetActiveUniform: _emscripten_glGetActiveUniform,\n  /** @export */\n  emscripten_glGetActiveUniformBlockName: _emscripten_glGetActiveUniformBlockName,\n  /** @export */\n  emscripten_glGetActiveUniformBlockiv: _emscripten_glGetActiveUniformBlockiv,\n  /** @export */\n  emscripten_glGetActiveUniformsiv: _emscripten_glGetActiveUniformsiv,\n  /** @export */\n  emscripten_glGetAttachedShaders: _emscripten_glGetAttachedShaders,\n  /** @export */\n  emscripten_glGetAttribLocation: _emscripten_glGetAttribLocation,\n  /** @export */\n  emscripten_glGetBooleanv: _emscripten_glGetBooleanv,\n  /** @export */\n  emscripten_glGetBufferParameteri64v: _emscripten_glGetBufferParameteri64v,\n  /** @export */\n  emscripten_glGetBufferParameteriv: _emscripten_glGetBufferParameteriv,\n  /** @export */\n  emscripten_glGetError: _emscripten_glGetError,\n  /** @export */\n  emscripten_glGetFloatv: _emscripten_glGetFloatv,\n  /** @export */\n  emscripten_glGetFragDataLocation: _emscripten_glGetFragDataLocation,\n  /** @export */\n  emscripten_glGetFramebufferAttachmentParameteriv: _emscripten_glGetFramebufferAttachmentParameteriv,\n  /** @export */\n  emscripten_glGetInteger64i_v: _emscripten_glGetInteger64i_v,\n  /** @export */\n  emscripten_glGetInteger64v: _emscripten_glGetInteger64v,\n  /** @export */\n  emscripten_glGetIntegeri_v: _emscripten_glGetIntegeri_v,\n  /** @export */\n  emscripten_glGetIntegerv: _emscripten_glGetIntegerv,\n  /** @export */\n  emscripten_glGetInternalformativ: _emscripten_glGetInternalformativ,\n  /** @export */\n  emscripten_glGetProgramBinary: _emscripten_glGetProgramBinary,\n  /** @export */\n  emscripten_glGetProgramInfoLog: _emscripten_glGetProgramInfoLog,\n  /** @export */\n  emscripten_glGetProgramiv: _emscripten_glGetProgramiv,\n  /** @export */\n  emscripten_glGetQueryObjecti64vEXT: _emscripten_glGetQueryObjecti64vEXT,\n  /** @export */\n  emscripten_glGetQueryObjectivEXT: _emscripten_glGetQueryObjectivEXT,\n  /** @export */\n  emscripten_glGetQueryObjectui64vEXT: _emscripten_glGetQueryObjectui64vEXT,\n  /** @export */\n  emscripten_glGetQueryObjectuiv: _emscripten_glGetQueryObjectuiv,\n  /** @export */\n  emscripten_glGetQueryObjectuivEXT: _emscripten_glGetQueryObjectuivEXT,\n  /** @export */\n  emscripten_glGetQueryiv: _emscripten_glGetQueryiv,\n  /** @export */\n  emscripten_glGetQueryivEXT: _emscripten_glGetQueryivEXT,\n  /** @export */\n  emscripten_glGetRenderbufferParameteriv: _emscripten_glGetRenderbufferParameteriv,\n  /** @export */\n  emscripten_glGetSamplerParameterfv: _emscripten_glGetSamplerParameterfv,\n  /** @export */\n  emscripten_glGetSamplerParameteriv: _emscripten_glGetSamplerParameteriv,\n  /** @export */\n  emscripten_glGetShaderInfoLog: _emscripten_glGetShaderInfoLog,\n  /** @export */\n  emscripten_glGetShaderPrecisionFormat: _emscripten_glGetShaderPrecisionFormat,\n  /** @export */\n  emscripten_glGetShaderSource: _emscripten_glGetShaderSource,\n  /** @export */\n  emscripten_glGetShaderiv: _emscripten_glGetShaderiv,\n  /** @export */\n  emscripten_glGetString: _emscripten_glGetString,\n  /** @export */\n  emscripten_glGetStringi: _emscripten_glGetStringi,\n  /** @export */\n  emscripten_glGetSynciv: _emscripten_glGetSynciv,\n  /** @export */\n  emscripten_glGetTexParameterfv: _emscripten_glGetTexParameterfv,\n  /** @export */\n  emscripten_glGetTexParameteriv: _emscripten_glGetTexParameteriv,\n  /** @export */\n  emscripten_glGetTransformFeedbackVarying: _emscripten_glGetTransformFeedbackVarying,\n  /** @export */\n  emscripten_glGetUniformBlockIndex: _emscripten_glGetUniformBlockIndex,\n  /** @export */\n  emscripten_glGetUniformIndices: _emscripten_glGetUniformIndices,\n  /** @export */\n  emscripten_glGetUniformLocation: _emscripten_glGetUniformLocation,\n  /** @export */\n  emscripten_glGetUniformfv: _emscripten_glGetUniformfv,\n  /** @export */\n  emscripten_glGetUniformiv: _emscripten_glGetUniformiv,\n  /** @export */\n  emscripten_glGetUniformuiv: _emscripten_glGetUniformuiv,\n  /** @export */\n  emscripten_glGetVertexAttribIiv: _emscripten_glGetVertexAttribIiv,\n  /** @export */\n  emscripten_glGetVertexAttribIuiv: _emscripten_glGetVertexAttribIuiv,\n  /** @export */\n  emscripten_glGetVertexAttribPointerv: _emscripten_glGetVertexAttribPointerv,\n  /** @export */\n  emscripten_glGetVertexAttribfv: _emscripten_glGetVertexAttribfv,\n  /** @export */\n  emscripten_glGetVertexAttribiv: _emscripten_glGetVertexAttribiv,\n  /** @export */\n  emscripten_glHint: _emscripten_glHint,\n  /** @export */\n  emscripten_glInvalidateFramebuffer: _emscripten_glInvalidateFramebuffer,\n  /** @export */\n  emscripten_glInvalidateSubFramebuffer: _emscripten_glInvalidateSubFramebuffer,\n  /** @export */\n  emscripten_glIsBuffer: _emscripten_glIsBuffer,\n  /** @export */\n  emscripten_glIsEnabled: _emscripten_glIsEnabled,\n  /** @export */\n  emscripten_glIsFramebuffer: _emscripten_glIsFramebuffer,\n  /** @export */\n  emscripten_glIsProgram: _emscripten_glIsProgram,\n  /** @export */\n  emscripten_glIsQuery: _emscripten_glIsQuery,\n  /** @export */\n  emscripten_glIsQueryEXT: _emscripten_glIsQueryEXT,\n  /** @export */\n  emscripten_glIsRenderbuffer: _emscripten_glIsRenderbuffer,\n  /** @export */\n  emscripten_glIsSampler: _emscripten_glIsSampler,\n  /** @export */\n  emscripten_glIsShader: _emscripten_glIsShader,\n  /** @export */\n  emscripten_glIsSync: _emscripten_glIsSync,\n  /** @export */\n  emscripten_glIsTexture: _emscripten_glIsTexture,\n  /** @export */\n  emscripten_glIsTransformFeedback: _emscripten_glIsTransformFeedback,\n  /** @export */\n  emscripten_glIsVertexArray: _emscripten_glIsVertexArray,\n  /** @export */\n  emscripten_glIsVertexArrayOES: _emscripten_glIsVertexArrayOES,\n  /** @export */\n  emscripten_glLineWidth: _emscripten_glLineWidth,\n  /** @export */\n  emscripten_glLinkProgram: _emscripten_glLinkProgram,\n  /** @export */\n  emscripten_glPauseTransformFeedback: _emscripten_glPauseTransformFeedback,\n  /** @export */\n  emscripten_glPixelStorei: _emscripten_glPixelStorei,\n  /** @export */\n  emscripten_glPolygonOffset: _emscripten_glPolygonOffset,\n  /** @export */\n  emscripten_glProgramBinary: _emscripten_glProgramBinary,\n  /** @export */\n  emscripten_glProgramParameteri: _emscripten_glProgramParameteri,\n  /** @export */\n  emscripten_glQueryCounterEXT: _emscripten_glQueryCounterEXT,\n  /** @export */\n  emscripten_glReadBuffer: _emscripten_glReadBuffer,\n  /** @export */\n  emscripten_glReadPixels: _emscripten_glReadPixels,\n  /** @export */\n  emscripten_glReleaseShaderCompiler: _emscripten_glReleaseShaderCompiler,\n  /** @export */\n  emscripten_glRenderbufferStorage: _emscripten_glRenderbufferStorage,\n  /** @export */\n  emscripten_glRenderbufferStorageMultisample: _emscripten_glRenderbufferStorageMultisample,\n  /** @export */\n  emscripten_glResumeTransformFeedback: _emscripten_glResumeTransformFeedback,\n  /** @export */\n  emscripten_glSampleCoverage: _emscripten_glSampleCoverage,\n  /** @export */\n  emscripten_glSamplerParameterf: _emscripten_glSamplerParameterf,\n  /** @export */\n  emscripten_glSamplerParameterfv: _emscripten_glSamplerParameterfv,\n  /** @export */\n  emscripten_glSamplerParameteri: _emscripten_glSamplerParameteri,\n  /** @export */\n  emscripten_glSamplerParameteriv: _emscripten_glSamplerParameteriv,\n  /** @export */\n  emscripten_glScissor: _emscripten_glScissor,\n  /** @export */\n  emscripten_glShaderBinary: _emscripten_glShaderBinary,\n  /** @export */\n  emscripten_glShaderSource: _emscripten_glShaderSource,\n  /** @export */\n  emscripten_glStencilFunc: _emscripten_glStencilFunc,\n  /** @export */\n  emscripten_glStencilFuncSeparate: _emscripten_glStencilFuncSeparate,\n  /** @export */\n  emscripten_glStencilMask: _emscripten_glStencilMask,\n  /** @export */\n  emscripten_glStencilMaskSeparate: _emscripten_glStencilMaskSeparate,\n  /** @export */\n  emscripten_glStencilOp: _emscripten_glStencilOp,\n  /** @export */\n  emscripten_glStencilOpSeparate: _emscripten_glStencilOpSeparate,\n  /** @export */\n  emscripten_glTexImage2D: _emscripten_glTexImage2D,\n  /** @export */\n  emscripten_glTexImage3D: _emscripten_glTexImage3D,\n  /** @export */\n  emscripten_glTexParameterf: _emscripten_glTexParameterf,\n  /** @export */\n  emscripten_glTexParameterfv: _emscripten_glTexParameterfv,\n  /** @export */\n  emscripten_glTexParameteri: _emscripten_glTexParameteri,\n  /** @export */\n  emscripten_glTexParameteriv: _emscripten_glTexParameteriv,\n  /** @export */\n  emscripten_glTexStorage2D: _emscripten_glTexStorage2D,\n  /** @export */\n  emscripten_glTexStorage3D: _emscripten_glTexStorage3D,\n  /** @export */\n  emscripten_glTexSubImage2D: _emscripten_glTexSubImage2D,\n  /** @export */\n  emscripten_glTexSubImage3D: _emscripten_glTexSubImage3D,\n  /** @export */\n  emscripten_glTransformFeedbackVaryings: _emscripten_glTransformFeedbackVaryings,\n  /** @export */\n  emscripten_glUniform1f: _emscripten_glUniform1f,\n  /** @export */\n  emscripten_glUniform1fv: _emscripten_glUniform1fv,\n  /** @export */\n  emscripten_glUniform1i: _emscripten_glUniform1i,\n  /** @export */\n  emscripten_glUniform1iv: _emscripten_glUniform1iv,\n  /** @export */\n  emscripten_glUniform1ui: _emscripten_glUniform1ui,\n  /** @export */\n  emscripten_glUniform1uiv: _emscripten_glUniform1uiv,\n  /** @export */\n  emscripten_glUniform2f: _emscripten_glUniform2f,\n  /** @export */\n  emscripten_glUniform2fv: _emscripten_glUniform2fv,\n  /** @export */\n  emscripten_glUniform2i: _emscripten_glUniform2i,\n  /** @export */\n  emscripten_glUniform2iv: _emscripten_glUniform2iv,\n  /** @export */\n  emscripten_glUniform2ui: _emscripten_glUniform2ui,\n  /** @export */\n  emscripten_glUniform2uiv: _emscripten_glUniform2uiv,\n  /** @export */\n  emscripten_glUniform3f: _emscripten_glUniform3f,\n  /** @export */\n  emscripten_glUniform3fv: _emscripten_glUniform3fv,\n  /** @export */\n  emscripten_glUniform3i: _emscripten_glUniform3i,\n  /** @export */\n  emscripten_glUniform3iv: _emscripten_glUniform3iv,\n  /** @export */\n  emscripten_glUniform3ui: _emscripten_glUniform3ui,\n  /** @export */\n  emscripten_glUniform3uiv: _emscripten_glUniform3uiv,\n  /** @export */\n  emscripten_glUniform4f: _emscripten_glUniform4f,\n  /** @export */\n  emscripten_glUniform4fv: _emscripten_glUniform4fv,\n  /** @export */\n  emscripten_glUniform4i: _emscripten_glUniform4i,\n  /** @export */\n  emscripten_glUniform4iv: _emscripten_glUniform4iv,\n  /** @export */\n  emscripten_glUniform4ui: _emscripten_glUniform4ui,\n  /** @export */\n  emscripten_glUniform4uiv: _emscripten_glUniform4uiv,\n  /** @export */\n  emscripten_glUniformBlockBinding: _emscripten_glUniformBlockBinding,\n  /** @export */\n  emscripten_glUniformMatrix2fv: _emscripten_glUniformMatrix2fv,\n  /** @export */\n  emscripten_glUniformMatrix2x3fv: _emscripten_glUniformMatrix2x3fv,\n  /** @export */\n  emscripten_glUniformMatrix2x4fv: _emscripten_glUniformMatrix2x4fv,\n  /** @export */\n  emscripten_glUniformMatrix3fv: _emscripten_glUniformMatrix3fv,\n  /** @export */\n  emscripten_glUniformMatrix3x2fv: _emscripten_glUniformMatrix3x2fv,\n  /** @export */\n  emscripten_glUniformMatrix3x4fv: _emscripten_glUniformMatrix3x4fv,\n  /** @export */\n  emscripten_glUniformMatrix4fv: _emscripten_glUniformMatrix4fv,\n  /** @export */\n  emscripten_glUniformMatrix4x2fv: _emscripten_glUniformMatrix4x2fv,\n  /** @export */\n  emscripten_glUniformMatrix4x3fv: _emscripten_glUniformMatrix4x3fv,\n  /** @export */\n  emscripten_glUseProgram: _emscripten_glUseProgram,\n  /** @export */\n  emscripten_glValidateProgram: _emscripten_glValidateProgram,\n  /** @export */\n  emscripten_glVertexAttrib1f: _emscripten_glVertexAttrib1f,\n  /** @export */\n  emscripten_glVertexAttrib1fv: _emscripten_glVertexAttrib1fv,\n  /** @export */\n  emscripten_glVertexAttrib2f: _emscripten_glVertexAttrib2f,\n  /** @export */\n  emscripten_glVertexAttrib2fv: _emscripten_glVertexAttrib2fv,\n  /** @export */\n  emscripten_glVertexAttrib3f: _emscripten_glVertexAttrib3f,\n  /** @export */\n  emscripten_glVertexAttrib3fv: _emscripten_glVertexAttrib3fv,\n  /** @export */\n  emscripten_glVertexAttrib4f: _emscripten_glVertexAttrib4f,\n  /** @export */\n  emscripten_glVertexAttrib4fv: _emscripten_glVertexAttrib4fv,\n  /** @export */\n  emscripten_glVertexAttribDivisor: _emscripten_glVertexAttribDivisor,\n  /** @export */\n  emscripten_glVertexAttribDivisorANGLE: _emscripten_glVertexAttribDivisorANGLE,\n  /** @export */\n  emscripten_glVertexAttribDivisorARB: _emscripten_glVertexAttribDivisorARB,\n  /** @export */\n  emscripten_glVertexAttribDivisorEXT: _emscripten_glVertexAttribDivisorEXT,\n  /** @export */\n  emscripten_glVertexAttribDivisorNV: _emscripten_glVertexAttribDivisorNV,\n  /** @export */\n  emscripten_glVertexAttribI4i: _emscripten_glVertexAttribI4i,\n  /** @export */\n  emscripten_glVertexAttribI4iv: _emscripten_glVertexAttribI4iv,\n  /** @export */\n  emscripten_glVertexAttribI4ui: _emscripten_glVertexAttribI4ui,\n  /** @export */\n  emscripten_glVertexAttribI4uiv: _emscripten_glVertexAttribI4uiv,\n  /** @export */\n  emscripten_glVertexAttribIPointer: _emscripten_glVertexAttribIPointer,\n  /** @export */\n  emscripten_glVertexAttribPointer: _emscripten_glVertexAttribPointer,\n  /** @export */\n  emscripten_glViewport: _emscripten_glViewport,\n  /** @export */\n  emscripten_glWaitSync: _emscripten_glWaitSync,\n  /** @export */\n  emscripten_has_asyncify: _emscripten_has_asyncify,\n  /** @export */\n  emscripten_memcpy_js: _emscripten_memcpy_js,\n  /** @export */\n  emscripten_request_fullscreen_strategy: _emscripten_request_fullscreen_strategy,\n  /** @export */\n  emscripten_request_pointerlock: _emscripten_request_pointerlock,\n  /** @export */\n  emscripten_resize_heap: _emscripten_resize_heap,\n  /** @export */\n  emscripten_sample_gamepad_data: _emscripten_sample_gamepad_data,\n  /** @export */\n  emscripten_set_beforeunload_callback_on_thread: _emscripten_set_beforeunload_callback_on_thread,\n  /** @export */\n  emscripten_set_blur_callback_on_thread: _emscripten_set_blur_callback_on_thread,\n  /** @export */\n  emscripten_set_canvas_element_size: _emscripten_set_canvas_element_size,\n  /** @export */\n  emscripten_set_element_css_size: _emscripten_set_element_css_size,\n  /** @export */\n  emscripten_set_focus_callback_on_thread: _emscripten_set_focus_callback_on_thread,\n  /** @export */\n  emscripten_set_fullscreenchange_callback_on_thread: _emscripten_set_fullscreenchange_callback_on_thread,\n  /** @export */\n  emscripten_set_gamepadconnected_callback_on_thread: _emscripten_set_gamepadconnected_callback_on_thread,\n  /** @export */\n  emscripten_set_gamepaddisconnected_callback_on_thread: _emscripten_set_gamepaddisconnected_callback_on_thread,\n  /** @export */\n  emscripten_set_keydown_callback_on_thread: _emscripten_set_keydown_callback_on_thread,\n  /** @export */\n  emscripten_set_keypress_callback_on_thread: _emscripten_set_keypress_callback_on_thread,\n  /** @export */\n  emscripten_set_keyup_callback_on_thread: _emscripten_set_keyup_callback_on_thread,\n  /** @export */\n  emscripten_set_main_loop: _emscripten_set_main_loop,\n  /** @export */\n  emscripten_set_mousedown_callback_on_thread: _emscripten_set_mousedown_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseenter_callback_on_thread: _emscripten_set_mouseenter_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseleave_callback_on_thread: _emscripten_set_mouseleave_callback_on_thread,\n  /** @export */\n  emscripten_set_mousemove_callback_on_thread: _emscripten_set_mousemove_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseup_callback_on_thread: _emscripten_set_mouseup_callback_on_thread,\n  /** @export */\n  emscripten_set_pointerlockchange_callback_on_thread: _emscripten_set_pointerlockchange_callback_on_thread,\n  /** @export */\n  emscripten_set_resize_callback_on_thread: _emscripten_set_resize_callback_on_thread,\n  /** @export */\n  emscripten_set_touchcancel_callback_on_thread: _emscripten_set_touchcancel_callback_on_thread,\n  /** @export */\n  emscripten_set_touchend_callback_on_thread: _emscripten_set_touchend_callback_on_thread,\n  /** @export */\n  emscripten_set_touchmove_callback_on_thread: _emscripten_set_touchmove_callback_on_thread,\n  /** @export */\n  emscripten_set_touchstart_callback_on_thread: _emscripten_set_touchstart_callback_on_thread,\n  /** @export */\n  emscripten_set_visibilitychange_callback_on_thread: _emscripten_set_visibilitychange_callback_on_thread,\n  /** @export */\n  emscripten_set_wheel_callback_on_thread: _emscripten_set_wheel_callback_on_thread,\n  /** @export */\n  emscripten_set_window_title: _emscripten_set_window_title,\n  /** @export */\n  emscripten_sleep: _emscripten_sleep,\n  /** @export */\n  environ_get: _environ_get,\n  /** @export */\n  environ_sizes_get: _environ_sizes_get,\n  /** @export */\n  exit: _exit,\n  /** @export */\n  fd_close: _fd_close,\n  /** @export */\n  fd_read: _fd_read,\n  /** @export */\n  fd_seek: _fd_seek,\n  /** @export */\n  fd_write: _fd_write,\n  /** @export */\n  glGetFloatv: _glGetFloatv,\n  /** @export */\n  invoke_vii: invoke_vii,\n  /** @export */\n  strftime: _strftime,\n  /** @export */\n  system: _system\n};\nvar wasmExports = createWasm();\nvar ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports['__wasm_call_ctors'])();\nvar _malloc = (a0) => (_malloc = wasmExports['malloc'])(a0);\nvar _free = (a0) => (_free = wasmExports['free'])(a0);\nvar ___errno_location = () => (___errno_location = wasmExports['__errno_location'])();\nvar _WebSetFullscreen = Module['_WebSetFullscreen'] = (a0) => (_WebSetFullscreen = Module['_WebSetFullscreen'] = wasmExports['WebSetFullscreen'])(a0);\nvar _WebOpenGameMenu = Module['_WebOpenGameMenu'] = (a0) => (_WebOpenGameMenu = Module['_WebOpenGameMenu'] = wasmExports['WebOpenGameMenu'])(a0);\nvar _WebSyncScreenSize = Module['_WebSyncScreenSize'] = () => (_WebSyncScreenSize = Module['_WebSyncScreenSize'] = wasmExports['WebSyncScreenSize'])();\nvar _WebMain = Module['_WebMain'] = (a0, a1) => (_WebMain = Module['_WebMain'] = wasmExports['WebMain'])(a0, a1);\nvar _main = Module['_main'] = (a0, a1) => (_main = Module['_main'] = wasmExports['__main_argc_argv'])(a0, a1);\nvar setTempRet0 = (a0) => (setTempRet0 = wasmExports['setTempRet0'])(a0);\nvar _setThrew = (a0, a1) => (_setThrew = wasmExports['setThrew'])(a0, a1);\nvar stackSave = () => (stackSave = wasmExports['stackSave'])();\nvar stackRestore = (a0) => (stackRestore = wasmExports['stackRestore'])(a0);\nvar stackAlloc = (a0) => (stackAlloc = wasmExports['stackAlloc'])(a0);\nvar dynCall_vii = Module['dynCall_vii'] = (a0, a1, a2) => (dynCall_vii = Module['dynCall_vii'] = wasmExports['dynCall_vii'])(a0, a1, a2);\nvar dynCall_viii = Module['dynCall_viii'] = (a0, a1, a2, a3) => (dynCall_viii = Module['dynCall_viii'] = wasmExports['dynCall_viii'])(a0, a1, a2, a3);\nvar dynCall_vi = Module['dynCall_vi'] = (a0, a1) => (dynCall_vi = Module['dynCall_vi'] = wasmExports['dynCall_vi'])(a0, a1);\nvar dynCall_iii = Module['dynCall_iii'] = (a0, a1, a2) => (dynCall_iii = Module['dynCall_iii'] = wasmExports['dynCall_iii'])(a0, a1, a2);\nvar dynCall_iiiiii = Module['dynCall_iiiiii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_iiiiii = Module['dynCall_iiiiii'] = wasmExports['dynCall_iiiiii'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_viiiiii = Module['dynCall_viiiiii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viiiiii = Module['dynCall_viiiiii'] = wasmExports['dynCall_viiiiii'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_v = Module['dynCall_v'] = (a0) => (dynCall_v = Module['dynCall_v'] = wasmExports['dynCall_v'])(a0);\nvar dynCall_ii = Module['dynCall_ii'] = (a0, a1) => (dynCall_ii = Module['dynCall_ii'] = wasmExports['dynCall_ii'])(a0, a1);\nvar dynCall_viifff = Module['dynCall_viifff'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viifff = Module['dynCall_viifff'] = wasmExports['dynCall_viifff'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_viifffii = Module['dynCall_viifffii'] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_viifffii = Module['dynCall_viifffii'] = wasmExports['dynCall_viifffii'])(a0, a1, a2, a3, a4, a5, a6, a7);\nvar dynCall_viiiifiiiii = Module['dynCall_viiiifiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) => (dynCall_viiiifiiiii = Module['dynCall_viiiifiiiii'] = wasmExports['dynCall_viiiifiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\nvar dynCall_viiiiiii = Module['dynCall_viiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_viiiiiii = Module['dynCall_viiiiiii'] = wasmExports['dynCall_viiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7);\nvar dynCall_iiii = Module['dynCall_iiii'] = (a0, a1, a2, a3) => (dynCall_iiii = Module['dynCall_iiii'] = wasmExports['dynCall_iiii'])(a0, a1, a2, a3);\nvar dynCall_iiiii = Module['dynCall_iiiii'] = (a0, a1, a2, a3, a4) => (dynCall_iiiii = Module['dynCall_iiiii'] = wasmExports['dynCall_iiiii'])(a0, a1, a2, a3, a4);\nvar dynCall_iiji = Module['dynCall_iiji'] = (a0, a1, a2, a3, a4) => (dynCall_iiji = Module['dynCall_iiji'] = wasmExports['dynCall_iiji'])(a0, a1, a2, a3, a4);\nvar dynCall_iiiiiiiii = Module['dynCall_iiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_iiiiiiiii = Module['dynCall_iiiiiiiii'] = wasmExports['dynCall_iiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\nvar dynCall_viiii = Module['dynCall_viiii'] = (a0, a1, a2, a3, a4) => (dynCall_viiii = Module['dynCall_viiii'] = wasmExports['dynCall_viiii'])(a0, a1, a2, a3, a4);\nvar dynCall_i = Module['dynCall_i'] = (a0) => (dynCall_i = Module['dynCall_i'] = wasmExports['dynCall_i'])(a0);\nvar dynCall_viiffi = Module['dynCall_viiffi'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viiffi = Module['dynCall_viiffi'] = wasmExports['dynCall_viiffi'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_iiid = Module['dynCall_iiid'] = (a0, a1, a2, a3) => (dynCall_iiid = Module['dynCall_iiid'] = wasmExports['dynCall_iiid'])(a0, a1, a2, a3);\nvar dynCall_iijii = Module['dynCall_iijii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_iijii = Module['dynCall_iijii'] = wasmExports['dynCall_iijii'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_diii = Module['dynCall_diii'] = (a0, a1, a2, a3) => (dynCall_diii = Module['dynCall_diii'] = wasmExports['dynCall_diii'])(a0, a1, a2, a3);\nvar dynCall_viiid = Module['dynCall_viiid'] = (a0, a1, a2, a3, a4) => (dynCall_viiid = Module['dynCall_viiid'] = wasmExports['dynCall_viiid'])(a0, a1, a2, a3, a4);\nvar dynCall_viiiddd = Module['dynCall_viiiddd'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viiiddd = Module['dynCall_viiiddd'] = wasmExports['dynCall_viiiddd'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_vid = Module['dynCall_vid'] = (a0, a1, a2) => (dynCall_vid = Module['dynCall_vid'] = wasmExports['dynCall_vid'])(a0, a1, a2);\nvar dynCall_vff = Module['dynCall_vff'] = (a0, a1, a2) => (dynCall_vff = Module['dynCall_vff'] = wasmExports['dynCall_vff'])(a0, a1, a2);\nvar dynCall_vf = Module['dynCall_vf'] = (a0, a1) => (dynCall_vf = Module['dynCall_vf'] = wasmExports['dynCall_vf'])(a0, a1);\nvar dynCall_viffff = Module['dynCall_viffff'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viffff = Module['dynCall_viffff'] = wasmExports['dynCall_viffff'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_vffff = Module['dynCall_vffff'] = (a0, a1, a2, a3, a4) => (dynCall_vffff = Module['dynCall_vffff'] = wasmExports['dynCall_vffff'])(a0, a1, a2, a3, a4);\nvar dynCall_vfff = Module['dynCall_vfff'] = (a0, a1, a2, a3) => (dynCall_vfff = Module['dynCall_vfff'] = wasmExports['dynCall_vfff'])(a0, a1, a2, a3);\nvar dynCall_vif = Module['dynCall_vif'] = (a0, a1, a2) => (dynCall_vif = Module['dynCall_vif'] = wasmExports['dynCall_vif'])(a0, a1, a2);\nvar dynCall_viif = Module['dynCall_viif'] = (a0, a1, a2, a3) => (dynCall_viif = Module['dynCall_viif'] = wasmExports['dynCall_viif'])(a0, a1, a2, a3);\nvar dynCall_viiiiiiiii = Module['dynCall_viiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_viiiiiiiii = Module['dynCall_viiiiiiiii'] = wasmExports['dynCall_viiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\nvar dynCall_jiji = Module['dynCall_jiji'] = (a0, a1, a2, a3, a4) => (dynCall_jiji = Module['dynCall_jiji'] = wasmExports['dynCall_jiji'])(a0, a1, a2, a3, a4);\nvar dynCall_ji = Module['dynCall_ji'] = (a0, a1) => (dynCall_ji = Module['dynCall_ji'] = wasmExports['dynCall_ji'])(a0, a1);\nvar dynCall_viiiii = Module['dynCall_viiiii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viiiii = Module['dynCall_viiiii'] = wasmExports['dynCall_viiiii'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_viiiiiiii = Module['dynCall_viiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_viiiiiiii = Module['dynCall_viiiiiiii'] = wasmExports['dynCall_viiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\nvar dynCall_vfi = Module['dynCall_vfi'] = (a0, a1, a2) => (dynCall_vfi = Module['dynCall_vfi'] = wasmExports['dynCall_vfi'])(a0, a1, a2);\nvar dynCall_viff = Module['dynCall_viff'] = (a0, a1, a2, a3) => (dynCall_viff = Module['dynCall_viff'] = wasmExports['dynCall_viff'])(a0, a1, a2, a3);\nvar dynCall_vifff = Module['dynCall_vifff'] = (a0, a1, a2, a3, a4) => (dynCall_vifff = Module['dynCall_vifff'] = wasmExports['dynCall_vifff'])(a0, a1, a2, a3, a4);\nvar dynCall_viiiiiiiiii = Module['dynCall_viiiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) => (dynCall_viiiiiiiiii = Module['dynCall_viiiiiiiiii'] = wasmExports['dynCall_viiiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\nvar dynCall_viiiiiiiiiii = Module['dynCall_viiiiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) => (dynCall_viiiiiiiiiii = Module['dynCall_viiiiiiiiiii'] = wasmExports['dynCall_viiiiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\nvar dynCall_viifi = Module['dynCall_viifi'] = (a0, a1, a2, a3, a4) => (dynCall_viifi = Module['dynCall_viifi'] = wasmExports['dynCall_viifi'])(a0, a1, a2, a3, a4);\nvar dynCall_iidiiii = Module['dynCall_iidiiii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iidiiii = Module['dynCall_iidiiii'] = wasmExports['dynCall_iidiiii'])(a0, a1, a2, a3, a4, a5, a6);\nvar _asyncify_start_unwind = (a0) => (_asyncify_start_unwind = wasmExports['asyncify_start_unwind'])(a0);\nvar _asyncify_stop_unwind = () => (_asyncify_stop_unwind = wasmExports['asyncify_stop_unwind'])();\nvar _asyncify_start_rewind = (a0) => (_asyncify_start_rewind = wasmExports['asyncify_start_rewind'])(a0);\nvar _asyncify_stop_rewind = () => (_asyncify_stop_rewind = wasmExports['asyncify_stop_rewind'])();\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    dynCall_vii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nModule['addRunDependency'] = addRunDependency;\nModule['removeRunDependency'] = removeRunDependency;\nModule['FS_createPath'] = FS.createPath;\nModule['FS_createLazyFile'] = FS.createLazyFile;\nModule['FS_createDevice'] = FS.createDevice;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_unlink'] = FS.unlink;\nModule['LZ4'] = LZ4;\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction callMain(args = []) {\n\n  var entryFunction = _main;\n\n  args.unshift(thisProgram);\n\n  var argc = args.length;\n  var argv = stackAlloc((argc + 1) * 4);\n  var argv_ptr = argv;\n  args.forEach((arg) => {\n    HEAPU32[((argv_ptr)>>2)] = stringToUTF8OnStack(arg);\n    argv_ptr += 4;\n  });\n  HEAPU32[((argv_ptr)>>2)] = 0;\n\n  try {\n\n    var ret = entryFunction(argc, argv);\n\n    // if we're not running an evented main loop, it's time to exit\n    exitJS(ret, /* implicit = */ true);\n    return ret;\n  }\n  catch (e) {\n    return handleException(e);\n  }\n}\n\nfunction run(args = arguments_) {\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    readyPromiseResolve(Module);\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    if (shouldRunNow) callMain(args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n// shouldRunNow refers to calling main(), not run().\nvar shouldRunNow = true;\n\nif (Module['noInitialRun']) shouldRunNow = false;\n\nrun();\n\n\n// end include: postamble.js\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nexport default createEdgeModule;","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal__bCOJk\",\"modal_content\":\"modal_content__O8DzT\",\"animatetop\":\"animatetop__1b7Bz\",\"close\":\"close__jJbSs\",\"modal_header\":\"modal_header__7dLiC\",\"modal_body\":\"modal_body__8R0ze\",\"modal_footer\":\"modal_footer__P6GcC\"};","import { FunctionComponent, h } from 'preact';\r\nimport style from './style.css';\r\n\r\nconst LicenseModal: FunctionComponent<{ onClose: () => void }> = ({ onClose }) => (\r\n    <div id=\"myModal\" class={style.modal}>\r\n        <div class={style.modal_content}>\r\n            <div class={style.modal_header}>\r\n                <span class={style.close} onClick={() => onClose()}>&times;</span>\r\n                <h2>EDGE-Classic Licenses</h2>\r\n            </div>\r\n            <div class={style.modal_body}>\r\n                <div style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"512px\" }}>\r\n                    <div style={{ fontFamily: \"monospace\", whiteSpace: \"pre\", fontSize: 11 }}>{license}</div>\r\n                </div>\r\n            </div>\r\n            <div class={style.modal_footer}>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nconst license = `===========================================================================================\r\nBSD 3-Clause License\r\n===========================================================================================\r\n\r\n\"16-Bit Game Station\" soundfont (select melodic instruments)\r\n  Copyright (c) 2009 Beatnik, Inc\r\n\r\nANGLE (Almost Native Graphics Layer Engine) - Copyright (c) 2018 Google Inc. and ANGLE Project Authors\r\n\r\nAlmostEquals Google Test Framework Component - Copyright (c) 2005 Google, Inc.\r\n\r\nBlasphemer (various assets) - Copyright (c) 2021 Contributors to the Blasphemer project\r\n\r\nFreedoom (various assets) - Copyright (c) 2001-2019 Contributors to the Freedoom project\r\n\r\n\"FDDMX\" instrument bank - Copyright (c) 2023 Contributors to the Freedoom project\r\n  Copyright (c) ConSiGno (\"DMXOPL\" instrument bank which formed the basis for FDDMX)\r\n\r\nlibRAD (patches.cpp/radmidi.cpp, adapted from YMFMIDI) - Copyright (c) 2021-2023 Devin Acker\r\n\r\nMod4Play library - Copyright (c) 2024 dashodanger\r\n  Copyright (c) 2022 Olav Sørensen\r\n\r\nminivorbis library - Copyright (c) 2020 Eduardo Bart\r\n  Copyright (c) 2002-2020 Xiph.org Foundation\r\n\r\nZDoom FName implementation - Copyright (c) 2005-2007 Randy Heit\r\n\r\n===========================================================================================\r\nCC 1.0 Universal License\r\n===========================================================================================\r\n\r\nHandmadeMath.h - Ben Visness\r\n\r\n\"ProtoSquare!\" soundfont - Yingchun Soul\r\n\r\n===========================================================================================\r\nCC-BY-3.0 Unported License\r\n===========================================================================================\r\n\r\nGerman Shepherd Dog Sprites - Copyright (c) 2017 Nash Muhandes\r\n\r\n===========================================================================================\r\nCC-BY-NC-4.0 International License\r\n===========================================================================================\r\n\r\nREKKR (various assets) - Copyright (c) 2021 Mockingbird Softworks\r\n\r\n===========================================================================================\r\nCC-BY-SA-4.0 International License\r\n===========================================================================================\r\n\r\n\"ChipFreak\" soundfont - Copyright (c) Jayvee Enaguas\r\n\r\n===========================================================================================\r\nGPL3 License\r\n===========================================================================================\r\n\r\n\"Apogee\" instrument bank - Melodic instruments Copyright (C) 1994-1995 Apogee Software, Ltd.\r\n\tPercussion instruments Copyright (C) 1999, 2000, 2001 Simon Peter, et al.\r\n\r\nAJBSP - Copyright (c) 2000-2023 Andrew Apted, et al\r\n\tCopyright (c) 1994-1998 Colin Reed\r\n\tCopyright (c) 1997-1998 Lee Killough\r\n\r\nCOAL - Copyright (c) 2021-2024 The EDGE Team\r\n\tCopyright (c) 2009-2021 Andrew Apted, et al\r\n  Copyright (c) 1996-1997 Id Software, Inc.\r\n\r\nDDF library - Copyright (c) 1999-2024 The EDGE Team\r\n\r\nDEH_EDGE library - Copyright (c) 2004-2024 The EDGE Team\r\n\r\nEDGE-Classic - Copyright (c) 1999-2024 The EDGE Team\r\n\r\nEPI library - Copyright (c) 2002-2024 The EDGE Team\r\n\r\nFluidlite - Copyright (c) 2016 Robin Lobel\r\n\r\nSLADE (IMF->WAV conversion and sky drawing routines) - Copyright (c) 2008 - 2023 Simon Judd\r\n\r\nSuperFastHash - Copyright (c) 2004-2010 Paul Hsieh\r\n\r\nXMIDI library (MIDI conversion) - Copyright (c) 2015-2022 Vitaly Novichkov\r\n\tCopyright (c) 2015-2016 WildMIDI Developers\r\n\tCopyright (c) 2014 Bret Curtis\r\n\tCopyright (c) 2001 Ryan Nunn\r\n\r\n===========================================================================================\r\nHacX License\r\n===========================================================================================\r\n\r\nHacX 1.2/2.0 (various assets) - Copyright (c) 1997-2012 Banjo Software, et al\r\n\r\n===========================================================================================\r\nMIT License\r\n===========================================================================================\r\n\r\n3dreamEngine Lua Math Libraries - Copyright (c) 2019 Luke100000 \r\n\r\n\"16-Bit Game Station\" soundfont (percussion and select melodic instruments) - Copyright (c) 2022 Yingchun Soul\r\n\r\nbase64.lua - Copyright (c) 2018 Ilya Kolbin \r\n\r\nBW_Midi_Sequencer library - Copyright (c) 2015-2022 Vitaly Novichkov\r\n\r\n\"C++ implementation of a fast Gaussian blur algorithm by Ivan Kutskir - Integer Version\"\r\n\tCopyright (C) 2017 Basile Fraboni\r\n\tCopyright (C) 2014 Ivan Kutskir\r\n\r\ndebugger.lua -Copyright (c) 2023 Scott Lembcke and Howling Moon Software\r\n\r\ngl4es library - Copyright (c) 2016-2018 Sebastien Chevalier\r\n\tCopyright (c) 2013-2016 Ryan Hileman\r\n\r\nglad library - Copyright (c) 2013-2022 David Herberth\r\n\r\njson.lua - Copyright (c) 2020 rxi\r\n\r\nLua - Copyright (C) 1994-2023 Lua.org, PUC-Rio.\r\n\r\nminiz library - Copyright (c) 2013-2014 RAD Game Tools and Valve Software\r\n\tCopyright (c) 2010-2014 Rich Geldreich and Tenacious Software LLC\r\n\r\nPL_MPEG library - Copyright(c) 2019 Dominic Szablewski\r\n\r\nPNPOLY algorithm - Copyright (c) 1970-2003 Wm. Randolph Franklin\r\n\r\nutf8proc library - Copyright (c) 2014-2021 Steven G. Johnson, Jiahao Chen, Tony Kelman, \r\n\tJonas Fonseca, et al\r\n\r\n===========================================================================================\r\nPublic Domain\r\n===========================================================================================\r\n\r\ndr_wav, dr_mp3, and dr_flac libraries - David Reid\r\n\r\nFraction.hpp - Bisqwit\r\n\r\nlibRAD (opal.cpp/radplay.cpp) - Reality Productions\r\n\r\n\"sf_GMbank\" soundfont (renamed to Default.sf2) - The Csound Developers\r\n\r\nstb_image, stb_image_write, stb_rect_pack and stb_truetype libraries - Sean Barrett\r\n\r\n===========================================================================================\r\nSIL Open Font License\r\n===========================================================================================\r\n\r\nFira Code (renamed to ECFONT02.ttf) - Copyright 2014-2020 The Fira Code Project Authors\r\n\r\nGermania One (renamed to ECFONT03.ttf) - Copyright (c) 2011, John Vargas Beltrán,\r\n\twith Reserved Font Name \"Germania One\"\r\n\r\nRusso One (renamed to ECFONT01.ttf) - Copyright (c) 2011-2012, Jovanny Lemonad,\r\n\twith Reserved Font Name \"Russo\"\r\n\r\n===========================================================================================\r\nWidePix License\r\n===========================================================================================\r\n\r\nWidePix (various assets) - Copyright (c) 2020-2021 Nash Muhandes\r\n\r\n===========================================================================================\r\nzlib License\r\n===========================================================================================\r\n\r\nLOVE2D (Windows swapbuffers code) - Copyright (c) 2006-2024 LOVE Development Team\r\n\r\nSDL2 library - Copyright (c) 1997-2020 Sam Lantinga\r\n`\r\n\r\nexport default LicenseModal;\r\n","import './style/index.css';\r\nimport App from './components/app';\r\n\r\nexport default App;\r\n","import { h } from 'preact';\r\n\r\nimport Player from './player';\r\n\r\nconst App = () => (\r\n\t<div id=\"app\">\r\n\t\t<main>\r\n\t\t\t<Player/>\r\n\t\t</main>\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n"],"sourceRoot":""}