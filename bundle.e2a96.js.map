{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/webpack/buildin/module.js","webpack:///./edge-classic.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/index.tsx","webpack:///./components/player/style.css","webpack:///./components/licenses/style.css","webpack:///./components/licenses/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","Preact","render","hydrate","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","init","webpackPolyfill","deprecate","paths","children","_document$currentScri","_scriptName","createEdgeModule","currentScript","src","undefined","_asyncToGenerator","assert","condition","text","abort","updateMemoryViews","b","wasmMemory","buffer","HEAP8","Int8Array","HEAP16","Int16Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAP32","Int32Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","HEAP64","BigInt64Array","BigUint64Array","addRunDependency","_Module$monitorRunDep","_Module6","runDependencies","Module","removeRunDependency","_Module$monitorRunDep2","_Module7","dependenciesFulfilled","callback","what","_Module$onAbort","_Module8","_readyPromiseReject","err","ABORT","e","WebAssembly","RuntimeError","readyPromiseReject","findWasmBinary","path","scriptDirectory","_getWasmBinary","binaryFile","wasmBinary","response","readAsync","_unused2","file","wasmBinaryFile","getBinarySync","apply","arguments","_instantiateArrayBuffer","imports","binary","_x2","getWasmBinary","instantiate","reason","concat","_instantiateAsync","instantiateStreaming","fetch","credentials","_x3","_x4","instantiateArrayBuffer","_createWasm","receiveInstance","instance","wasmExports","Asyncify","instrumentWasmExports","_malloc","_free","_main","_ma_device__on_notification_unlocked","_ma_device_process_pcm_frames_capture__webaudio","_ma_device_process_pcm_frames_playback__webaudio","_setThrew","__emscripten_stack_restore","__emscripten_stack_alloc","_emscripten_stack_get_current","dynCalls","dynCall_vii","dynCall_v","dynCall_iiii","_asyncify_start_unwind","_asyncify_stop_unwind","_asyncify_start_rewind","_asyncify_stop_rewind","assignWasmExports","info","wasmImports","Promise","resolve","mod","result","_x5","_x6","_x7","instantiateAsync","receiveInstantiationResult","setValue","ptr","type","endsWith","BigInt","_Module","_Module$_expectedData","isPthread","isWasmWorker","ENVIRONMENT_IS_PTHREAD","ENVIRONMENT_IS_WASM_WORKER","metadata","fetchRemotePackage","packageName","packageSize","_Module2","_Module2$_dataFileDow","catch","cause","reject","Error","then","_headers$get","_Module$setStatus2","_Module4","ok","status","arrayBuffer","reader","getReader","iterate","read","handleChunk","chunks","total","Number","headers","loaded","_ref2","done","_Module$setStatus","_Module3","push","totalLoaded","totalSize","_i","_Object$values","values","download","packageData","map","reduce","a","offset","_i2","_chunks","chunk","set","runWithFS","check","msg","stack","processPackageData","constructor","ArrayBuffer","byteArray","compressedData","_typeof","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","_Module$_preloadResul","_Module$setStatus3","PACKAGE_UUID","IDB_RO","IDB_RW","METADATA_STORE_NAME","PACKAGE_STORE_NAME","errback","indexedDB","openRequest","open","onupgradeneeded","event","db","target","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","onerror","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","chunkCount","Array","chunkId","byteLength","tempTyped","byteOffset","fetchCachedPackage","packageMeta","chunkSliceStart","nextChunkSliceStart","Math","ceil","finishedChunks","putPackageRequest","put","slice","putMetadataRequest","uuid","cacheRemotePackage","window","substring","lastIndexOf","process","encodeURIComponent","_Module5","_Module5$_preRun","REMOTE_PACKAGE_BASE","readBinary","arguments_","thisProgram","quit_","toThrow","URL","href","_unused","_ref3","_x","EXITSTATUS","readyPromiseResolve","GLctx","out","log","runtimeInitialized","ExitStatus","_createClass","_defineProperty","this","message","callRuntimeCallbacks","callbacks","shift","onPostRuns","addOnPostRun","cb","onPreRuns","addOnPreRun","dynCall","sig","rtn","args","replace","_toConsumableArray","dynCallLegacy","noExitRuntime","stackRestore","val","stackSave","PATH","isAbs","charAt","splitPath","filename","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","trailingSlash","split","filter","join","dirname","dir","basename","match","_len","_key","join2","randomFill","view","crypto","getRandomValues","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","min","samePartsLength","outputParts","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","endPtr","maxBytesToRead","ignoreNul","maxIdx","findStringEnd","decode","subarray","str","u0","u1","u2","String","fromCharCode","ch","FS_stdin_getChar_buffer","lengthBytesUTF8","len","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","u","codePointAt","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","TTY","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","fsync","get_char","bytesRead","atime","Date","now","write","put_char","mtime","ctime","default_tty_ops","prompt","FS_stdin_getChar","_tty$output","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","ioctl_tiocgwinsz","default_tty1_ops","_tty$output2","mmapAlloc","MEMFS","ops_table","mount","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","id","ino","nlink","uid","gid","size","blksize","blocks","_i3","_arr","doesNotExistError","old_node","new_dir","new_name","new_node","lookupNode","hashRemoveNode","keys","newname","oldpath","position","canOwn","whence","prot","flags","allocated","asyncLoad","_ref4","_x8","FS_createDataFile","createDataFile","preloadPlugins","FS_createPreloadedFile","canRead","canWrite","onload","dontCreateFile","preFinish","processData","finish","fullname","Browser","handled","forEach","plugin","FS_handledByPreloadPlugin","FS_getMode","IDBFS","dbs","_indexedDB","toString","DB_VERSION","DB_STORE_NAME","queuePersist","onPersistComplete","idbPersistState","startPersist","syncfs","setTimeout","_mount2$opts","mnt","opts","autoPersist","memfs_node_ops","_objectSpread","idbfs_mount","memfs_stream_ops","isModified","mkdir","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","getDB","req","fileStore","indexNames","createIndex","unique","preventDefault","isRealDir","toAbsolute","entries","mountpoint","stat","pop","index","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","mkdirTree","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","dst","errored","e2","getTime","remove","onabort","oncomplete","sort","reverse","LZ4","DIR_MODE","FILE_MODE","CHUNK_SIZE","codec","MiniLZ4","sIdx","eIdx","j","token","literals_length","match_length","pos","maxInputSize","hashShift","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","copyLength","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","minMatch","ref","runMask","ln","compressBlock","compressPackage","data","verify","temp","compressedChunks","successes","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","analyzePath","readFile","_i4","_arr2","written","currChunk","desired","chunkIndex","floor","compressedStart","found","indexOf","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","readFiles","errno","FSStream","shared","FSNode","readMode","writeMode","_opts$follow_mount","follow_mount","linkloop","nlinks","current","current_path","islast","noent_okay","isMountpoint","mounted","follow","isRoot","getPath","hashName","parentid","hashAddNode","name_next","errCode","mayLookup","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","mayOpen","checkOpExists","op","MAX_OPEN_FDS","nextfd","fd","getStreamChecked","getStream","createStream","_extends","closeStream","dupStream","origStream","_stream$stream_ops","_stream$stream_ops$du","dup","doSetAttr","arg","_stream$stream_ops$op","_stream$stream_ops2","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","unmount","next","statfs","statfsNode","statfsStream","bsize","frsize","bfree","bavail","ffree","fsid","namelen","_step","_iterator","_createForOfIteratorHelper","f","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","fstat","lstat","doChmod","lchmod","fchmod","doChown","timestamp","chown","lchown","fchown","doTruncate","truncate","ftruncate","isDirPath","FS_modeStringToFlags","created","ungotten","isClosed","getdents","seeking","bytesWritten","mmapFlags","ioctl","cmd","encoding","buf","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","ret","_ref5","_ref6","_slicedToArray","_ref7","_ref8","createStandardStreams","staticInit","_step2","_iterator2","findObject","dontResolveLastLink","exists","parentExists","parentPath","parentObject","part","createFile","properties","_FS$createDevice","_FS$createDevice$majo","_output$buffer","forceLoadFile","obj","isDevice","isFolder","XMLHttpRequest","createLazyFile","writeChunks","defineProperties","fn","UTF8ToString","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","writeStat","writeStatFs","stats","doMsync","addr","varargs","getStr","syscallGetVarargI","syscallGetVarargP","stringToUTF8","outPtr","bigintToI53Checked","num","NaN","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","year","getFullYear","getMonth","getDate","_emscripten_get_now","performance","_emscripten_date_now","handleException","runtimeKeepaliveCounter","keepRuntimeAlive","exitJS","code","_Module$onExit","_Module9","_exit","maybeExit","callUserCallback","func","safeSetTimeout","timeout","useWebGL","isFullscreen","pointerLock","moduleContextCreatedCallbacks","workers","preloadedImages","preloadedAudios","getCanvas","initted","imagePlugin","test","Blob","getMimetype","createObjectURL","img","Image","canvas","createElement","width","height","getContext","drawImage","revokeObjectURL","audioPlugin","audio","Audio","addEventListener","BASE","leftchar","leftbits","curr","PAD","encode64","pointerLockElement","ev","requestPointerLock","createContext","setInModule","webGLContextAttributes","ctx","contextHandle","contextAttributes","antialias","alpha","majorVersion","attribute","GL","makeContextCurrent","fullscreenHandlersInstalled","lockPointer","resizeCanvas","requestFullscreen","fullscreenChange","_Module$onFullScreen","_Module0","_Module$onFullscreen","_Module1","canvasContainer","parentNode","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","insertBefore","removeChild","setWindowedCanvasSize","appendChild","Element","getUserMedia","_window","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","touches","lastTouches","calculateMouseCoords","pageX","pageY","rect","getBoundingClientRect","scrollX","pageXOffset","scrollY","pageYOffset","adjustedX","left","adjustedY","top","x","y","setMouseCoords","_Browser$calculateMou","calculateMouseEvent","touch","coords","identifier","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","SDL","screen","wNative","hNative","widthNative","heightNative","w","round","factor","style","removeProperty","setProperty","EGL","errorCode","defaultDisplayInitialized","currentContext","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","param","lowLatency","getEmscriptenSupportedExtensions","supportedExtensions","getSupportedExtensions","ext","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","vaos","contexts","offscreenCanvases","queries","samplers","transformFeedbacks","syncs","stringiCache","unpackAlignment","unpackRowLength","recordError","lastError","getNewId","table","genObject","createFunction","objectTable","getSource","shader","count","string","source","getContextSafariWebGL2Fixed","ver","attrs","gl","WebGLRenderingContext","registerContext","handle","context","attributes","version","GLctxObject","enableExtensionsByDefault","initExtensions","_GL$currentContext","deleteContext","_GL$contexts$contextH","JSEvents","removeAllHandlersOnTarget","initExtensionsDone","multiDrawWebgl","getExtension","extPolygonOffsetClamp","webgl_enable_EXT_polygon_offset_clamp","extClipControl","webgl_enable_EXT_clip_control","webglPolygonMode","webgl_enable_WEBGL_polygon_mode","dibvbi","webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","disjointTimerQueryExt","stringToNewUTF8","setMainLoop","iterFunc","fps","simulateInfiniteLoop","noSetTiming","checkIsRunning","thisMainLoopId","MainLoop","currentlyRunningMainloop","running","runner","queue","blocker","remainingBlockers","remaining","counted","updateStatus","currentFrameNumber","timingMode","timingValue","scheduler","tickStartTime","runIter","_emscripten_set_main_loop_timing","method","preMainLoop","postMainLoop","pause","resume","_MainLoop$remainingBl","_MainLoop$expectedBlo","expected","expectedBlockers","_step3","_iterator3","pre","_step4","_iterator4","post","nextRAF","fakeRequestAnimationFrame","delay","requestAnimationFrame","_requestAnimationFrame","_x9","RAF","timeUntilNextTick","setImmediate","setImmediates","emscriptenMainLoopMessageId","stopPropagation","postMessage","_eglWaitGL","readEmAsmArgsArray","readEmAsmArgs","sigPtr","wide","runMainThreadEmAsm","emAsmAddr","argbuf","ASM_CONSTS","memcpy","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","inEventHandler","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","_step5","_iterator5","removeDeferredCalls","canPerformEventHandlerRequests","userActivation","isActive","currentEventHandler","allowsDeferredCalls","runDeferredCalls","_step6","_iterator6","_call","eventTypeString","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","callbackfunc","handlerFunc","getNodeNameForTarget","nodeName","fullscreenEnabled","webkitFullscreenEnabled","restoreOldWindowedStyle","currentFullscreenStrategy","setLetterbox","element","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","specialHTMLTargets","findEventTarget","cString","findCanvasEventTarget","stackAlloc","sz","stringToUTF8OnStack","getCanvasElementSize","sp","_emscripten_get_canvas_element_size","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","targetInt","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","innerWidth","screenHeight","innerHeight","canvasSize","viewport","canvasResizedCallback","canvasResizedCallbackUserData","JSEvents_resizeCanvasForFullscreen","strategy","_target$style","_document$body$style","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","cssHeight","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","webkitRequestFullscreen","ALLOW_KEYBOARD_INPUT","fillGamepadEventData","eventStruct","axes","buttons","pressed","connected","mapping","_glActiveTexture","x0","activeTexture","_emscripten_glActiveTexture","_glAttachShader","program","attachShader","_emscripten_glAttachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_glBindBuffer","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","bindBuffer","_emscripten_glBindBuffer","_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindFramebuffer","_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindRenderbuffer","_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindSampler","_glBindTexture","texture","bindTexture","_emscripten_glBindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_glBindVertexArray","vao","bindVertexArray","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendColor","_emscripten_glBlendEquation","blendEquation","_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlendFuncSeparate","_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBlitFramebuffer","_glBufferData","usage","bufferData","_emscripten_glBufferData","_glBufferSubData","bufferSubData","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfi","_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferfv","_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","_emscripten_glClientWaitSync","sync","clientWaitSync","_emscripten_glClipControlEXT","origin","_glColorMask","red","green","blue","colorMask","_emscripten_glColorMask","_glCompileShader","compileShader","_emscripten_glCompileShader","_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage2D","_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","format","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","uniformIdCounter","_emscripten_glCreateProgram","_glCreateShader","shaderType","createShader","_emscripten_glCreateShader","_glCullFace","cullFace","_emscripten_glCullFace","_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteBuffers","_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteFramebuffers","_glDeleteProgram","deleteProgram","_emscripten_glDeleteProgram","_emscripten_glDeleteQueries","ids","query","deleteQuery","_emscripten_glDeleteQueriesEXT","_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteRenderbuffers","_glDeleteSamplers","deleteSampler","_emscripten_glDeleteSamplers","_glDeleteShader","deleteShader","_emscripten_glDeleteShader","_emscripten_glDeleteSync","deleteSync","_glDeleteTextures","deleteTexture","_emscripten_glDeleteTextures","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_glDeleteVertexArrays","deleteVertexArray","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_glDepthFunc","depthFunc","_emscripten_glDepthFunc","_glDepthMask","depthMask","_emscripten_glDepthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_glDisable","disable","_emscripten_glDisable","_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDisableVertexAttribArray","_glDrawArrays","first","drawArrays","_emscripten_glDrawArrays","_glDrawArraysInstanced","primcount","drawArraysInstanced","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","tempFixedLengthArray","_glDrawBuffers","bufs","bufArray","drawBuffers","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_glDrawElements","indices","drawElements","_emscripten_glDrawElements","_glDrawElementsInstanced","drawElementsInstanced","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_glEnable","enable","_emscripten_glEnable","_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEnableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_glFrontFace","frontFace","_emscripten_glFrontFace","_glGenBuffers","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_glGenRenderbuffers","_emscripten_glGenRenderbuffers","_glGenSamplers","_emscripten_glGenSamplers","_glGenTextures","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_glGenVertexArrays","arrays","_emscripten_glGenVertexArrays","_glGenVertexArraysOES","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","__glGetActiveAttribOrUniform","funcName","bufSize","numBytesWrittenExclNull","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","pname","params","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_glGetAttribLocation","getAttribLocation","_emscripten_glGetAttribLocation","writeI53ToI64","webglGetExtensions","exts","emscriptenWebGLGet","name_","formats","getParameter","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_glGetIntegerv","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramInfoLog","_glGetProgramiv","numActiveUniforms","getProgramParameter","getActiveUniform","numActiveAttributes","getActiveAttrib","numActiveUniformBlocks","_emscripten_glGetProgramiv","_glGetQueryObjecti64vEXT","getQueryParameter","_emscripten_glGetQueryObjecti64vEXT","_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectivEXT","_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_glGetQueryObjectuivEXT","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_glGetShaderiv","getShaderParameter","_emscripten_glGetShaderiv","_emscripten_glGetString","webGLVersion","glVersion","glslVersion","ver_num","_glGetStringi","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","webglGetLeftBracePos","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","nm","lb","arrayName","_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","getUniformLocation","_emscripten_glGetUniformLocation","webglGetUniformLocation","currentProgram","webglLoc","emscriptenWebGLGetUniform","getUniform","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","emscriptenWebGLGetVertexAttrib","getVertexAttrib","fround","_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIiv","_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_glIsVertexArray","array","isVertexArray","_emscripten_glIsVertexArray","_glIsVertexArrayOES","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_glLinkProgram","linkProgram","_emscripten_glLinkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_glPixelStorei","pixelStorei","_emscripten_glPixelStorei","_emscripten_glPolygonModeWEBGL","face","_glPolygonOffset","polygonOffset","_emscripten_glPolygonOffset","_emscripten_glPolygonOffsetClampEXT","units","clamp","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_glReadBuffer","readBuffer","_emscripten_glReadBuffer","heapObjectForWebGLType","toTypedArrayIndex","clz32","BYTES_PER_ELEMENT","_glReadPixels","pixels","readPixels","_emscripten_glReadPixels","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glRenderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterf","_emscripten_glSamplerParameterfv","_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteri","_emscripten_glSamplerParameteriv","_glScissor","scissor","_emscripten_glScissor","_emscripten_glShaderBinary","_glShaderSource","shaderSource","_emscripten_glShaderSource","_glStencilFunc","stencilFunc","_emscripten_glStencilFunc","_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilFuncSeparate","_glStencilMask","stencilMask","_emscripten_glStencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_glStencilOp","stencilOp","_emscripten_glStencilOp","_glStencilOpSeparate","stencilOpSeparate","_emscripten_glStencilOpSeparate","emscriptenWebGLGetTexPixelData","sizePerPixel","colorChannelsInGlTextureFormat","bytes","computeUnpackAlignedImageSize","_glTexImage2D","texImage2D","pixelData","_emscripten_glTexImage2D","_glTexImage3D","texImage3D","_emscripten_glTexImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_glTexParameteri","texParameteri","_emscripten_glTexParameteri","_emscripten_glTexParameteriv","_glTexStorage2D","texStorage2D","_emscripten_glTexStorage2D","_glTexStorage3D","texStorage3D","_emscripten_glTexStorage3D","_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage2D","_glTexSubImage3D","texSubImage3D","_emscripten_glTexSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","_glUniform1fv","uniform1fv","_emscripten_glUniform1fv","_glUniform1i","uniform1i","_emscripten_glUniform1i","_glUniform1iv","uniform1iv","_emscripten_glUniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_glUniform2fv","uniform2fv","_emscripten_glUniform2fv","_emscripten_glUniform2i","uniform2i","_glUniform2iv","uniform2iv","_emscripten_glUniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_glUniform3fv","uniform3fv","_emscripten_glUniform3fv","_emscripten_glUniform3i","uniform3i","_glUniform3iv","uniform3iv","_emscripten_glUniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_glUniform4fv","uniform4fv","_emscripten_glUniform4fv","_emscripten_glUniform4i","uniform4i","_glUniform4iv","uniform4iv","_emscripten_glUniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_glUseProgram","useProgram","_emscripten_glUseProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","v","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_glVertexAttribDivisor","divisor","vertexAttribDivisor","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_glVertexAttribIPointer","stride","vertexAttribIPointer","_emscripten_glVertexAttribIPointer","_glVertexAttribPointer","normalized","vertexAttribPointer","_emscripten_glVertexAttribPointer","_glViewport","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","growMemory","pages","grow","_emscripten_sample_gamepad_data","getGamepads","lastGamepadState","registerFocusEventCallback","userData","eventTypeId","focusEvent","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","_step9","_iterator9","isChanged","onTarget","_step0","_iterator0","changedTouches","_step1","_iterator1","targetTouches","targetRect","numTouches","_i5","_Object$values2","idx32","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","handleSleep","wakeUp","isAsync","ENV","getEnvStrings","strings","env","language","runAndAbortIfError","instrumentWasmImports","importPattern","_i6","_Object$entries","_Object$entries$_i","original","instrumentFunction","wrapper","exportCallStack","maybeStopUnwind","funcWrappers","_i7","_Object$entries2","_Object$entries2$_i","State","Normal","Unwinding","Rewinding","Disabled","state","StackSize","currData","handleSleepReturnValue","callstackFuncToId","Map","callStackIdToFunc","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","has","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","doRewind","startAsync","reachedCallback","reachedAfterCallback","asyncWasmReturnValue","isError","handleAsync","createPreloadedFile","edgePostInit","$0","$1","homeIndex","startsWith","homeDir","_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","$2","$3","$4","AudioContext","webkitAudioContext","miniaudio","referenceCount","device_type","playback","capture","duplex","device_state","stopped","started","track_device","iDevice","untrack_device_by_index","deviceIndex","untrack_device","get_device_by_index","unlock_event_types","unlock","webaudio","pDevice","event_type","mediaDevices","sampleRate","$5","deviceType","channels","bufferSize","pIntermediaryBuffer","audioContextOptions","suspend","channelCountIn","scriptNode","createScriptProcessor","onaudioprocess","intermediaryBufferView","iChannel","inputBuffer","getChannelData","intermediaryBuffer","iFrame","outputBuffer","numberOfChannels","fill","video","streamNode","createMediaStreamSource","connect","destination","disconnect","reply","allocate","ALLOC_NORMAL","webkitGetUserMedia","elements","SDL2","audioContext","have_microphone","silenceTimer","clearInterval","silenceBuffer","mediaStreamNode","scriptProcessorNode","audioProcessingEvent","currentCaptureBuffer","no_microphone","createBuffer","setInterval","currentOutputBuffer","hasBeenActive","numChannels","channelData","tracks","getAudioTracks","removeTrack","ctxCanvas","imageCtx","image","createImageData","CanvasPixelArray","data32Data","data32","data8","putImageData","hot_x","hot_y","toDataURL","urlBuf","alert","__syscall_dup3","newfd","old","existing","__syscall_faccessat","amode","__syscall_fcntl64","__syscall_fstat64","__syscall_getdents64","dirp","struct_size","off","child","__syscall_ioctl","termios","argp","winsize","__syscall_lstat64","__syscall_mkdirat","__syscall_newfstatat","nofollow","__syscall_openat","__syscall_readlinkat","bufsize","endChar","__syscall_renameat","olddirfd","newdirfd","__syscall_rmdir","__syscall_stat64","__syscall_unlinkat","_abort_js","_emscripten_system","command","_emscripten_throw_longjmp","Infinity","_gmtime_js","time","tmPtr","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","yday","_localtime_js","getSeconds","getMinutes","getHours","getDay","getTimezoneOffset","summerOffset","winterOffset","_mktime_js","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timeMs","isNaN","_tzset_js","timezone","daylight","std_name","dst_name","currentYear","winter","summer","stdTimezoneOffset","extractZone","timezoneOffset","sign","absOffset","abs","hours","padStart","minutes","winterName","summerName","clock_time_get","clk_id","ignored_precision","ptime","clock_id","nsec","eglBindAPI","api","eglChooseConfig","attrib_list","configs","eglCreateContext","hmm","contextAttribs","glesContextVersion","minorVersion","eglCreateWindowSurface","eglDestroyContext","eglDestroySurface","surface","eglGetConfigAttrib","eglGetDisplay","nativeDisplayType","eglGetError","eglInitialize","eglMakeCurrent","draw","eglQueryString","eglSwapBuffers","isContextLost","eglSwapInterval","interval","eglTerminate","eglWaitGL","eglWaitNative","emscripten_asm_const_int","runEmAsmFunction","emscripten_asm_const_int_sync_on_main_thread","emscripten_asm_const_ptr_sync_on_main_thread","emscripten_date_now","emscripten_enter_soft_fullscreen","fullscreenStrategy","hiddenElements","onlyVisibleElement","_step7","_iterator7","currChild","displayState","hideEverythingExceptGivenElement","_step8","_iterator8","elem","restoreHiddenElements","emscripten_err","emscripten_exit_fullscreen","webkitExitFullscreen","emscripten_exit_pointerlock","exitPointerLock","emscripten_exit_soft_fullscreen","_restoreOldWindowedSt","emscripten_get_device_pixel_ratio","emscripten_get_element_css_size","emscripten_get_gamepad_status","gamepadState","emscripten_get_now","emscripten_get_num_gamepads","emscripten_get_screen_size","emscripten_glActiveTexture","emscripten_glAttachShader","emscripten_glBeginQuery","emscripten_glBeginQueryEXT","emscripten_glBeginTransformFeedback","emscripten_glBindAttribLocation","emscripten_glBindBuffer","emscripten_glBindBufferBase","emscripten_glBindBufferRange","emscripten_glBindFramebuffer","emscripten_glBindRenderbuffer","emscripten_glBindSampler","emscripten_glBindTexture","emscripten_glBindTransformFeedback","emscripten_glBindVertexArray","emscripten_glBindVertexArrayOES","emscripten_glBlendColor","emscripten_glBlendEquation","emscripten_glBlendEquationSeparate","emscripten_glBlendFunc","emscripten_glBlendFuncSeparate","emscripten_glBlitFramebuffer","emscripten_glBufferData","emscripten_glBufferSubData","emscripten_glCheckFramebufferStatus","emscripten_glClear","emscripten_glClearBufferfi","emscripten_glClearBufferfv","emscripten_glClearBufferiv","emscripten_glClearBufferuiv","emscripten_glClearColor","emscripten_glClearDepthf","emscripten_glClearStencil","emscripten_glClientWaitSync","emscripten_glClipControlEXT","emscripten_glColorMask","emscripten_glCompileShader","emscripten_glCompressedTexImage2D","emscripten_glCompressedTexImage3D","emscripten_glCompressedTexSubImage2D","emscripten_glCompressedTexSubImage3D","emscripten_glCopyBufferSubData","emscripten_glCopyTexImage2D","emscripten_glCopyTexSubImage2D","emscripten_glCopyTexSubImage3D","emscripten_glCreateProgram","emscripten_glCreateShader","emscripten_glCullFace","emscripten_glDeleteBuffers","emscripten_glDeleteFramebuffers","emscripten_glDeleteProgram","emscripten_glDeleteQueries","emscripten_glDeleteQueriesEXT","emscripten_glDeleteRenderbuffers","emscripten_glDeleteSamplers","emscripten_glDeleteShader","emscripten_glDeleteSync","emscripten_glDeleteTextures","emscripten_glDeleteTransformFeedbacks","emscripten_glDeleteVertexArrays","emscripten_glDeleteVertexArraysOES","emscripten_glDepthFunc","emscripten_glDepthMask","emscripten_glDepthRangef","emscripten_glDetachShader","emscripten_glDisable","emscripten_glDisableVertexAttribArray","emscripten_glDrawArrays","emscripten_glDrawArraysInstanced","emscripten_glDrawArraysInstancedANGLE","emscripten_glDrawArraysInstancedARB","emscripten_glDrawArraysInstancedEXT","emscripten_glDrawArraysInstancedNV","emscripten_glDrawBuffers","emscripten_glDrawBuffersEXT","emscripten_glDrawBuffersWEBGL","emscripten_glDrawElements","emscripten_glDrawElementsInstanced","emscripten_glDrawElementsInstancedANGLE","emscripten_glDrawElementsInstancedARB","emscripten_glDrawElementsInstancedEXT","emscripten_glDrawElementsInstancedNV","emscripten_glDrawRangeElements","emscripten_glEnable","emscripten_glEnableVertexAttribArray","emscripten_glEndQuery","emscripten_glEndQueryEXT","emscripten_glEndTransformFeedback","emscripten_glFenceSync","emscripten_glFinish","emscripten_glFlush","emscripten_glFramebufferRenderbuffer","emscripten_glFramebufferTexture2D","emscripten_glFramebufferTextureLayer","emscripten_glFrontFace","emscripten_glGenBuffers","emscripten_glGenFramebuffers","emscripten_glGenQueries","emscripten_glGenQueriesEXT","emscripten_glGenRenderbuffers","emscripten_glGenSamplers","emscripten_glGenTextures","emscripten_glGenTransformFeedbacks","emscripten_glGenVertexArrays","emscripten_glGenVertexArraysOES","emscripten_glGenerateMipmap","emscripten_glGetActiveAttrib","emscripten_glGetActiveUniform","emscripten_glGetActiveUniformBlockName","emscripten_glGetActiveUniformBlockiv","emscripten_glGetActiveUniformsiv","emscripten_glGetAttachedShaders","emscripten_glGetAttribLocation","emscripten_glGetBooleanv","emscripten_glGetBufferParameteri64v","emscripten_glGetBufferParameteriv","emscripten_glGetError","emscripten_glGetFloatv","emscripten_glGetFragDataLocation","emscripten_glGetFramebufferAttachmentParameteriv","emscripten_glGetInteger64i_v","emscripten_glGetInteger64v","emscripten_glGetIntegeri_v","emscripten_glGetIntegerv","emscripten_glGetInternalformativ","emscripten_glGetProgramBinary","emscripten_glGetProgramInfoLog","emscripten_glGetProgramiv","emscripten_glGetQueryObjecti64vEXT","emscripten_glGetQueryObjectivEXT","emscripten_glGetQueryObjectui64vEXT","emscripten_glGetQueryObjectuiv","emscripten_glGetQueryObjectuivEXT","emscripten_glGetQueryiv","emscripten_glGetQueryivEXT","emscripten_glGetRenderbufferParameteriv","emscripten_glGetSamplerParameterfv","emscripten_glGetSamplerParameteriv","emscripten_glGetShaderInfoLog","emscripten_glGetShaderPrecisionFormat","emscripten_glGetShaderSource","emscripten_glGetShaderiv","emscripten_glGetString","emscripten_glGetStringi","emscripten_glGetSynciv","emscripten_glGetTexParameterfv","emscripten_glGetTexParameteriv","emscripten_glGetTransformFeedbackVarying","emscripten_glGetUniformBlockIndex","emscripten_glGetUniformIndices","emscripten_glGetUniformLocation","emscripten_glGetUniformfv","emscripten_glGetUniformiv","emscripten_glGetUniformuiv","emscripten_glGetVertexAttribIiv","emscripten_glGetVertexAttribIuiv","emscripten_glGetVertexAttribPointerv","emscripten_glGetVertexAttribfv","emscripten_glGetVertexAttribiv","emscripten_glHint","emscripten_glInvalidateFramebuffer","emscripten_glInvalidateSubFramebuffer","emscripten_glIsBuffer","emscripten_glIsEnabled","emscripten_glIsFramebuffer","emscripten_glIsProgram","emscripten_glIsQuery","emscripten_glIsQueryEXT","emscripten_glIsRenderbuffer","emscripten_glIsSampler","emscripten_glIsShader","emscripten_glIsSync","emscripten_glIsTexture","emscripten_glIsTransformFeedback","emscripten_glIsVertexArray","emscripten_glIsVertexArrayOES","emscripten_glLineWidth","emscripten_glLinkProgram","emscripten_glPauseTransformFeedback","emscripten_glPixelStorei","emscripten_glPolygonModeWEBGL","emscripten_glPolygonOffset","emscripten_glPolygonOffsetClampEXT","emscripten_glProgramBinary","emscripten_glProgramParameteri","emscripten_glQueryCounterEXT","emscripten_glReadBuffer","emscripten_glReadPixels","emscripten_glReleaseShaderCompiler","emscripten_glRenderbufferStorage","emscripten_glRenderbufferStorageMultisample","emscripten_glResumeTransformFeedback","emscripten_glSampleCoverage","emscripten_glSamplerParameterf","emscripten_glSamplerParameterfv","emscripten_glSamplerParameteri","emscripten_glSamplerParameteriv","emscripten_glScissor","emscripten_glShaderBinary","emscripten_glShaderSource","emscripten_glStencilFunc","emscripten_glStencilFuncSeparate","emscripten_glStencilMask","emscripten_glStencilMaskSeparate","emscripten_glStencilOp","emscripten_glStencilOpSeparate","emscripten_glTexImage2D","emscripten_glTexImage3D","emscripten_glTexParameterf","emscripten_glTexParameterfv","emscripten_glTexParameteri","emscripten_glTexParameteriv","emscripten_glTexStorage2D","emscripten_glTexStorage3D","emscripten_glTexSubImage2D","emscripten_glTexSubImage3D","emscripten_glTransformFeedbackVaryings","emscripten_glUniform1f","emscripten_glUniform1fv","emscripten_glUniform1i","emscripten_glUniform1iv","emscripten_glUniform1ui","emscripten_glUniform1uiv","emscripten_glUniform2f","emscripten_glUniform2fv","emscripten_glUniform2i","emscripten_glUniform2iv","emscripten_glUniform2ui","emscripten_glUniform2uiv","emscripten_glUniform3f","emscripten_glUniform3fv","emscripten_glUniform3i","emscripten_glUniform3iv","emscripten_glUniform3ui","emscripten_glUniform3uiv","emscripten_glUniform4f","emscripten_glUniform4fv","emscripten_glUniform4i","emscripten_glUniform4iv","emscripten_glUniform4ui","emscripten_glUniform4uiv","emscripten_glUniformBlockBinding","emscripten_glUniformMatrix2fv","emscripten_glUniformMatrix2x3fv","emscripten_glUniformMatrix2x4fv","emscripten_glUniformMatrix3fv","emscripten_glUniformMatrix3x2fv","emscripten_glUniformMatrix3x4fv","emscripten_glUniformMatrix4fv","emscripten_glUniformMatrix4x2fv","emscripten_glUniformMatrix4x3fv","emscripten_glUseProgram","emscripten_glValidateProgram","emscripten_glVertexAttrib1f","emscripten_glVertexAttrib1fv","emscripten_glVertexAttrib2f","emscripten_glVertexAttrib2fv","emscripten_glVertexAttrib3f","emscripten_glVertexAttrib3fv","emscripten_glVertexAttrib4f","emscripten_glVertexAttrib4fv","emscripten_glVertexAttribDivisor","emscripten_glVertexAttribDivisorANGLE","emscripten_glVertexAttribDivisorARB","emscripten_glVertexAttribDivisorEXT","emscripten_glVertexAttribDivisorNV","emscripten_glVertexAttribI4i","emscripten_glVertexAttribI4iv","emscripten_glVertexAttribI4ui","emscripten_glVertexAttribI4uiv","emscripten_glVertexAttribIPointer","emscripten_glVertexAttribPointer","emscripten_glViewport","emscripten_glWaitSync","emscripten_has_asyncify","emscripten_request_fullscreen_strategy","deferUntilInEventHandler","doRequestFullscreen","emscripten_request_pointerlock","emscripten_resize_heap","requestedSize","alignment","oldSize","maxHeapSize","cutDown","overGrownHeapSize","emscripten_sample_gamepad_data","emscripten_set_beforeunload_callback_on_thread","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","emscripten_set_blur_callback_on_thread","emscripten_set_canvas_element_size","emscripten_set_element_css_size","emscripten_set_focus_callback_on_thread","emscripten_set_fullscreenchange_callback_on_thread","emscripten_set_gamepadconnected_callback_on_thread","emscripten_set_gamepaddisconnected_callback_on_thread","emscripten_set_keydown_callback_on_thread","emscripten_set_keypress_callback_on_thread","emscripten_set_keyup_callback_on_thread","emscripten_set_main_loop","emscripten_set_mousedown_callback_on_thread","emscripten_set_mouseenter_callback_on_thread","emscripten_set_mouseleave_callback_on_thread","emscripten_set_mousemove_callback_on_thread","emscripten_set_mouseup_callback_on_thread","emscripten_set_pointerlockchange_callback_on_thread","_document$body","emscripten_set_resize_callback_on_thread","uiEvent","outerWidth","outerHeight","registerUiEventCallback","emscripten_set_touchcancel_callback_on_thread","emscripten_set_touchend_callback_on_thread","emscripten_set_touchmove_callback_on_thread","emscripten_set_touchstart_callback_on_thread","emscripten_set_visibilitychange_callback_on_thread","emscripten_set_wheel_callback_on_thread","onwheel","wheelEvent","registerWheelEventCallback","emscripten_set_window_title","title","emscripten_sleep","environ_get","__environ","environ_buf","_step10","envp","_iterator10","environ_sizes_get","penviron_count","penviron_buf_size","_step11","_iterator11","exit","fd_close","fd_read","iov","iovcnt","pnum","doReadv","fd_seek","newOffset","fd_write","doWritev","glActiveTexture","glAttachShader","glBindBuffer","glBindBufferBase","glBindFramebuffer","glBindRenderbuffer","glBindSampler","glBindTexture","glBindVertexArray","glBlendColor","glBlendEquationSeparate","glBlendFuncSeparate","glBlitFramebuffer","glBufferData","glBufferSubData","glClearBufferfi","glClearBufferfv","glClearBufferiv","glColorMask","glCompileShader","glCompressedTexImage2D","glCompressedTexImage3D","glCreateProgram","glCreateShader","glCullFace","glDeleteBuffers","glDeleteFramebuffers","glDeleteProgram","glDeleteRenderbuffers","glDeleteSamplers","glDeleteShader","glDeleteTextures","glDeleteVertexArrays","glDepthFunc","glDepthMask","glDisable","glDisableVertexAttribArray","glDrawArrays","glDrawArraysInstanced","glDrawElements","glDrawElementsInstanced","glEnable","glEnableVertexAttribArray","glFrontFace","glGenBuffers","glGenRenderbuffers","glGenSamplers","glGenTextures","glGenVertexArrays","glGetAttribLocation","glGetIntegerv","glGetProgramInfoLog","glGetProgramiv","glGetShaderInfoLog","glGetShaderiv","glGetStringi","glGetUniformLocation","glInvalidateFramebuffer","glLinkProgram","glPixelStorei","glPolygonOffset","glReadBuffer","glReadPixels","glRenderbufferStorageMultisample","glSamplerParameterf","glSamplerParameteri","glScissor","glShaderSource","glStencilFunc","glStencilFuncSeparate","glStencilMask","glStencilOp","glStencilOpSeparate","glTexImage2D","glTexImage3D","glTexParameteri","glTexStorage2D","glTexStorage3D","glTexSubImage2D","glTexSubImage3D","glUniform1fv","glUniform1i","glUniform1iv","glUniform2fv","glUniform2iv","glUniform3fv","glUniform3iv","glUniform4fv","glUniform4iv","glUniformMatrix4fv","glUseProgram","glVertexAttribDivisor","glVertexAttribIPointer","glVertexAttribPointer","glViewport","invoke_vii","a1","a2","random_get","slog_js_log","c_str","warn","createWasm","preInit","run","doRun","_readyPromiseResolve","_Module$onRuntimeInit","_Module11","entryFunction","argc","argv","argv_ptr","callMain","postRun","preRun","g","_","defaultProps","props","__k","__","__b","__e","__c","__v","__i","__u","vnode","k","S","C","base","M","__d","$","__r","debounceRendering","__P","O","__n","namespaceURI","z","I","P","q","A","nextSibling","L","B","nodeType","T","cssText","toLowerCase","removeAttribute","setAttribute","F","H","contextType","__E","D","sub","__h","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","some","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","V","diffed","localName","createTextNode","createElementNS","is","__m","childNodes","__html","content","componentWillUnmount","E","firstChild","G","isArray","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","__H","__N","__f","every","clearTimeout","cancelAnimationFrame","U","useSignal","__$f","__$u","peek","ownerSVGElement","getCookie","cname","ca","cookie","for","brand","subscribe","valueOf","toJSON","displayName","configurable","__np","queueMicrotask","license","LicenseModal","_ref","onClose","class","onClick","overflowY","overflowX","fontFamily","whiteSpace","fontSize","defaultDoomIWad","defaultHereticIWad","indexDBName","WadHandler","signal","trace","wads","wadState","_uploadWads","_ret","_this","_loop","database","_database","upload","FileReader","readAsArrayBuffer","iwad","trans","wadName","isIWAD","_database2","wad","_database3","setWads","_openDatabase","_this2","dbrequest","projects","WadChooser","_getCookie$trim","_getCookie","_useState2","useState","showLicense","setShowLicense","pelements","flex","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","singleton","click","placeholder","spellcheck","onChange","_ev$target","_ev$target2","multiple","badFile","find","uploadWads","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","_useState4","loading","pointerLockChange","useEffect","syncCanvasSize","offsetWidth","offsetHeight","doSyncTimeout","canvasSync","_WebSyncScreenSize","iwadPath","customCommandLine","_WebOpenGameMenu","preEdgeSyncFS","postEdgeSyncFS","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_canvasRef$current","Player","App"],"mappings":"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AU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAA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U,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC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C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,4CAA6C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,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AAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SA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AAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IA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C,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yBAA0B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iBAAkB,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uBAAwB,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yBAA0B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yBAA0B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yBAA0B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yBAA0B,MAAS,SAAU,IAAO,SAAW,CAAC,SAAY,4BAA6B,MAAS,QAAU,IAAO,UAAW,CAAC,SAAY,4BAA6B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2BAA4B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,WAAY,oBAAuB,SAAU,aAAgB,4EAMhx+I,IAgBI9H,EAAW+L,EAhBXC,EAAa,GACbC,EAAc,iBACdC,EAAQ,SAAC9G,EAAQ+G,GACnB,MAAMA,CACR,EAGIxM,EAAkB,GAepB,IACEA,EAAkB,IAAIyM,IAAI,IAAKhQ,GAAaiQ,IAC9C,CAAE,MAAAC,GAEA,CAKJtM,EAAS,eAAAuM,EAAA9P,GAAG,UAAOnC,GACf,IAAIyF,QAAiBkB,MAAM3G,EAAK,CAAE4G,YAAa,gBAC/C,GAAInB,EAASoF,GACX,OAAOpF,EAASsF,cAElB,MAAM,IAAIP,MAAM/E,EAASqF,OAAS,MAAQrF,EAASzF,IACrD,IAAC,gBANMkS,GAAA,OAAAD,EAAAlM,MAAA,KAAAC,UAAA,KAaT,IAgBIR,EAeA2M,EA6BAC,EAAqBlN,EAIrBxC,EAIFE,EAEAI,EAEAF,EAEAI,EAEAE,EAEAE,EAEAE,EAEAE,EAKAE,EA2IEiC,EAuzJEwM,EAzhKFC,EAAM3E,QAAQ4E,IAAItT,KAAK0O,SACvB9I,EAAM8I,QAAQD,MAAMzO,KAAK0O,SAyBzB7I,GAAQ,EAkER0N,GAAqB,EA0ErBtO,EAAkB,EAClBK,GAAwB,KAiMpBkO,GAAUC,GAEZ,SAAY5H,GAAQ6H,EAAA,YADb,cAELC,KAAKC,QAAO,gCAAArM,OAAmCsE,EAAM,KACrD8H,KAAK9H,OAASA,CAChB,IAGAgI,GAAuB,SAACC,GACxB,KAAOA,EAAU9S,OAAS,GAExB8S,EAAUC,OAAVD,CAAkB5O,EAEtB,EACE8O,GAAa,GACbC,GAAe,SAACC,GAAE,OAAKF,GAAWnH,KAAKqH,EAAI,EAE3CC,GAAY,GACZC,GAAc,SAACF,GAAE,OAAKC,GAAUtH,KAAKqH,EAAI,EAGzCnL,GAAW,CACf,EAMIsL,GAAU,SAACC,EAAKlK,GAAuC,IACnDmK,EANY,SAACD,EAAKlK,EAAKoK,GAG3B,OAFAF,EAAMA,EAAIG,QAAQ,KAAM,KAChB1L,GAASuL,GACTxN,WAAC,EAAD,CAACsD,GAAG7C,OAAAmN,EAAKF,IACnB,CAEYG,CAAcL,EAAKlK,EADJrD,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG,IAO5B,OAAewN,CACjB,EAsBEK,IAAgB,EAuBhBC,GAAe,SAACC,GAAG,OAAKlM,GAA2BkM,EAAK,EAExDC,GAAY,WAAH,OAASjM,IAAgC,EAElDkM,GAAO,CACXC,MAAM,SAAC9O,GAAI,MAAwB,MAAnBA,EAAK+O,OAAO,EAAU,EACtCC,UAAU,SAACC,GAEL,MADkB,gEACCC,KAAKD,GAAUxD,MAAM,EAC1C,EACJ0D,eAAe,SAACC,EAAOC,GAGjB,IADA,IAAIC,EAAK,EACAjX,EAAI+W,EAAMvU,OAAS,EAAGxC,GAAK,EAAGA,IAAK,CAC1C,IAAIkX,EAAOH,EAAM/W,GACJ,MAATkX,EACFH,EAAMI,OAAOnX,EAAG,GACE,OAATkX,GACTH,EAAMI,OAAOnX,EAAG,GAChBiX,KACSA,IACTF,EAAMI,OAAOnX,EAAG,GAChBiX,IAEJ,CAEA,GAAID,EACF,KAAOC,EAAIA,IACTF,EAAMK,QAAQ,MAGlB,OAAOL,CACT,EACJM,UAAU,SAAC1P,GACL,IAAI2P,EAAad,GAAKC,MAAM9O,GACxB4P,EAAmC,MAAnB5P,EAAKyL,OAAO,GAShC,OAPAzL,EAAO6O,GAAKM,eAAenP,EAAK6P,MAAM,KAAKC,QAAO,SAAC3V,GAAC,QAAOA,CAAC,KAAIwV,GAAYI,KAAK,OACnEJ,IACZ3P,EAAO,KAELA,GAAQ4P,IACV5P,GAAQ,MAEF2P,EAAa,IAAM,IAAM3P,CACnC,EACJgQ,QAAQ,SAAChQ,GACH,IAAI0D,EAASmL,GAAKG,UAAUhP,GACxB7E,EAAOuI,EAAO,GACduM,EAAMvM,EAAO,GACjB,OAAKvI,GAAS8U,GAIVA,IAEFA,EAAMA,EAAIxE,MAAM,GAAI,IAEftQ,EAAO8U,GANL,GAOX,EACJC,SAAS,SAAClQ,GAAI,OAAKA,GAAQA,EAAKmQ,MAAM,mBAAmB,EAAE,EAC3DJ,KAAK,WAAD,QAAAK,EAAAxP,UAAA/F,OAAK0B,EAAK,IAAAoO,MAAAyF,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAL9T,EAAK8T,GAAAzP,UAAAyP,GAAA,OAAKxB,GAAKa,UAAUnT,EAAMwT,KAAK,KAAK,EAClDO,MAAM,SAAChY,EAAGa,GAAC,OAAK0V,GAAKa,UAAUpX,EAAI,IAAMa,EAAE,GAOvCoX,GAAa,SAACC,IAEbD,GAJM,SAACC,GAAI,OAAKC,OAAOC,gBAAgBF,EAAM,GAIdA,EAClC,EAIEG,GAAU,CACdnN,QAAQ,WAGF,IAFA,IAAIoN,EAAe,GACjBC,GAAmB,EACZxY,EAAIuI,UAAK/F,OAAS,EAAGxC,IAAM,IAAMwY,EAAkBxY,IAAK,CAC/D,IAAI2H,EAAQ3H,GAAK,EAAUA,EAAC,GAAAuI,UAAA/F,QAADxC,OAACyE,EAAA8D,UAADvI,GAAKyY,GAAGC,MAEnC,GAAmB,iBAAR/Q,EACT,MAAM,IAAIgR,UAAU,6CACf,IAAKhR,EACV,MAAO,GAET4Q,EAAe5Q,EAAO,IAAM4Q,EAC5BC,EAAmBhC,GAAKC,MAAM9O,EAChC,CAIA,OAAS6Q,EAAmB,IAAM,KADlCD,EAAe/B,GAAKM,eAAeyB,EAAaf,MAAM,KAAKC,QAAO,SAAC3V,GAAC,QAAOA,CAAC,KAAI0W,GAAkBd,KAAK,OAC9C,GAC3D,EACJkB,SAAS,SAACC,EAAMC,GAGV,SAASC,EAAKC,GAEZ,IADA,IAAIC,EAAQ,EACLA,EAAQD,EAAIxW,QACE,KAAfwW,EAAIC,GADiBA,KAI3B,IADA,IAAIC,EAAMF,EAAIxW,OAAS,EAChB0W,GAAO,GACK,KAAbF,EAAIE,GADOA,KAGjB,OAAID,EAAQC,EAAY,GACjBF,EAAI5F,MAAM6F,EAAOC,EAAMD,EAAQ,EACxC,CAbAJ,EAAOP,GAAQnN,QAAQ0N,GAAMzF,MAAM,GACnC0F,EAAKR,GAAQnN,QAAQ2N,GAAI1F,MAAM,GAiB/B,IAJA,IAAI+F,EAAYJ,EAAKF,EAAKrB,MAAM,MAC5B4B,EAAUL,EAAKD,EAAGtB,MAAM,MACxBhV,EAASuQ,KAAKsG,IAAIF,EAAU3W,OAAQ4W,EAAQ5W,QAC5C8W,EAAkB9W,EACbxC,EAAI,EAAGA,EAAIwC,EAAQxC,IAC1B,GAAImZ,EAAUnZ,KAAOoZ,EAAQpZ,GAAI,CAC/BsZ,EAAkBtZ,EAClB,KACF,CAEF,IAAIuZ,EAAc,GAClB,IAASvZ,EAAIsZ,EAAiBtZ,EAAImZ,EAAU3W,OAAQxC,IAClDuZ,EAAYlL,KAAK,MAGnB,OADAkL,EAAcA,EAAYxQ,OAAOqQ,EAAQhG,MAAMkG,KAC5B5B,KAAK,IAC1B,GAIA8B,GAAoC,oBAAfC,YAA6B,IAAIA,iBAAgBhV,EAuBtEiV,GAAoB,SAACC,GAAqD,IAAxCC,EAAGrR,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG,EAEpCsR,EAvBY,SAACF,EAAaC,EAAKE,EAAgBC,GACnD,IAAIC,EAASJ,EAAME,EACnB,GAAIC,EAAW,OAAOC,EAKtB,KAAOL,EAAYC,MAAUA,GAAOI,MAAWJ,EAC/C,OAAOA,CACT,CAceK,CAAcN,EAAaC,EAFiBrR,UAAA/F,OAAA,EAAA+F,UAAA,QAAA9D,EAAW8D,UAAA/F,OAAA,EAAA+F,UAAA,QAAA9D,GAKpE,GAAIoV,EAASD,EAAM,IAAMD,EAAYzU,QAAUsU,GAC7C,OAAOA,GAAYU,OAAOP,EAAYQ,SAASP,EAAKC,IAKtD,IAHA,IAAIO,EAAM,GAGHR,EAAMC,GAAQ,CAKnB,IAAIQ,EAAKV,EAAYC,KACrB,GAAW,IAALS,EAAN,CACA,IAAIC,EAA0B,GAArBX,EAAYC,KACrB,GAAmB,MAAT,IAALS,GAAL,CACA,IAAIE,EAA0B,GAArBZ,EAAYC,KAOrB,IALES,EADiB,MAAT,IAALA,IACS,GAALA,IAAY,GAAOC,GAAM,EAAKC,GAEzB,EAALF,IAAW,GAAOC,GAAM,GAAOC,GAAM,EAA2B,GAArBZ,EAAYC,MAGvD,MACPQ,GAAOI,OAAOC,aAAaJ,OACtB,CACL,IAAIK,EAAKL,EAAK,MACdD,GAAOI,OAAOC,aAAa,MAAUC,GAAM,GAAK,MAAe,KAALA,EAC5D,CAbwF,MAA7DN,GAAOI,OAAOC,cAAoB,GAALJ,IAAY,EAAKC,EAFX,MAA1CF,GAAOI,OAAOC,aAAaJ,EAgBjD,CACA,OAAOD,CACT,EAEEO,GAA0B,GAE1BC,GAAkB,SAACR,GAEnB,IADA,IAAIS,EAAM,EACD7a,EAAI,EAAGA,EAAIoa,EAAI5X,SAAUxC,EAAG,CAKnC,IAAIK,EAAI+Z,EAAIU,WAAW9a,GACnBK,GAAK,IACPwa,IACSxa,GAAK,KACdwa,GAAO,EACExa,GAAK,OAAUA,GAAK,OAC7Bwa,GAAO,IAAK7a,GAEZ6a,GAAO,CAEX,CACA,OAAOA,CACT,EAEEE,GAAoB,SAACX,EAAKY,EAAMC,EAAQC,GAGxC,KAAMA,EAAkB,GACtB,OAAO,EAIT,IAFA,IAAIC,EAAWF,EACXG,EAASH,EAASC,EAAkB,EAC/Blb,EAAI,EAAGA,EAAIoa,EAAI5X,SAAUxC,EAAG,CAInC,IAAIqb,EAAIjB,EAAIkB,YAAYtb,GACxB,GAAIqb,GAAK,IAAM,CACb,GAAIJ,GAAUG,EAAQ,MACtBJ,EAAKC,KAAYI,CACnB,MAAO,GAAIA,GAAK,KAAO,CACrB,GAAIJ,EAAS,GAAKG,EAAQ,MAC1BJ,EAAKC,KAAY,IAAQI,GAAK,EAC9BL,EAAKC,KAAY,IAAY,GAAJI,CAC3B,MAAO,GAAIA,GAAK,MAAQ,CACtB,GAAIJ,EAAS,GAAKG,EAAQ,MAC1BJ,EAAKC,KAAY,IAAQI,GAAK,GAC9BL,EAAKC,KAAY,IAASI,GAAK,EAAK,GACpCL,EAAKC,KAAY,IAAY,GAAJI,CAC3B,KAAO,CACL,GAAIJ,EAAS,GAAKG,EAAQ,MAC1BJ,EAAKC,KAAY,IAAQI,GAAK,GAC9BL,EAAKC,KAAY,IAASI,GAAK,GAAM,GACrCL,EAAKC,KAAY,IAASI,GAAK,EAAK,GACpCL,EAAKC,KAAY,IAAY,GAAJI,EAGzBrb,GACF,CACF,CAGA,OADAgb,EAAKC,GAAU,EACRA,EAASE,CAClB,EAEEI,GAAqB,SAACC,EAASC,EAAajZ,GAC5C,IAAIqY,EAAMrY,EAAS,EAAIA,EAASoY,GAAgBY,GAAS,EACrDE,EAAU,IAAIpJ,MAAMuI,GACpBc,EAAkBZ,GAAkBS,EAASE,EAAS,EAAGA,EAAQlZ,QAErE,OADIiZ,IAAaC,EAAQlZ,OAASmZ,GAC3BD,CACT,EAoBEE,GAAM,CACVC,KAAK,GACL9X,KAAI,WAQE,EAEN+X,SAAQ,WASF,EAENnZ,SAAQ,SAACoZ,EAAKC,GACRJ,GAAIC,KAAKE,GAAO,CAAEE,MAAO,GAAIC,OAAQ,GAAIF,IAAKA,GAC9CvD,GAAG0D,eAAeJ,EAAKH,GAAIQ,WAC7B,EACJA,WAAW,CACXrL,KAAI,SAACsL,GACG,IAAIC,EAAMV,GAAIC,KAAKQ,EAAOE,KAAKC,MAC/B,IAAKF,EACH,MAAM,IAAI7D,GAAGgE,WAAW,IAE1BJ,EAAOC,IAAMA,EACbD,EAAOK,UAAW,CACpB,EACNC,MAAK,SAACN,GAEEA,EAAOC,IAAIN,IAAIY,MAAMP,EAAOC,IAC9B,EACNM,MAAK,SAACP,GACEA,EAAOC,IAAIN,IAAIY,MAAMP,EAAOC,IAC9B,EACN5O,KAAI,SAAC2O,EAAQnX,EAAQ8J,EAAQxM,GACrB,IAAK6Z,EAAOC,MAAQD,EAAOC,IAAIN,IAAIa,SACjC,MAAM,IAAIpE,GAAGgE,WAAW,IAG1B,IADA,IAAIK,EAAY,EACP9c,EAAI,EAAGA,EAAIwC,EAAQxC,IAAK,CAC/B,IAAIqL,EACJ,IACEA,EAASgR,EAAOC,IAAIN,IAAIa,SAASR,EAAOC,IAC1C,CAAE,MAAOhV,GACP,MAAM,IAAImR,GAAGgE,WAAW,GAC1B,CACA,QAAehY,IAAX4G,GAAsC,IAAdyR,EAC1B,MAAM,IAAIrE,GAAGgE,WAAW,GAE1B,GAAIpR,QAAyC,MAC7CyR,IACA5X,EAAO8J,EAAOhP,GAAKqL,CACrB,CAIA,OAHIyR,IACFT,EAAOE,KAAKQ,MAAQC,KAAKC,OAEpBH,CACT,EACNI,MAAK,SAACb,EAAQnX,EAAQ8J,EAAQxM,GACtB,IAAK6Z,EAAOC,MAAQD,EAAOC,IAAIN,IAAImB,SACjC,MAAM,IAAI1E,GAAGgE,WAAW,IAE1B,IACE,IAAK,IAAIzc,EAAI,EAAGA,EAAIwC,EAAQxC,IAC1Bqc,EAAOC,IAAIN,IAAImB,SAASd,EAAOC,IAAKpX,EAAO8J,EAAOhP,GAEtD,CAAE,MAAOsH,GACP,MAAM,IAAImR,GAAGgE,WAAW,GAC1B,CAIA,OAHIja,IACF6Z,EAAOE,KAAKa,MAAQf,EAAOE,KAAKc,MAAQL,KAAKC,OAExCjd,CACT,GAENsd,gBAAgB,CAChBT,SAAQ,WACA,OAzGe,WACnB,IAAKlC,GAAwBnY,OAAQ,CACnC,IAAI6I,EAAS,KAUb,GATqB,oBAAVmI,QACe,mBAAjBA,OAAO+J,QAGC,QADflS,EAASmI,OAAO+J,OAAO,cAErBlS,GAAU,OAITA,EACH,OAAO,KAETsP,GAA0BY,GAAmBlQ,GAAQ,EACvD,CACA,OAAOsP,GAAwBpF,OACjC,CAuFaiI,EACT,EACNL,SAAQ,SAACb,EAAKhG,GACM,OAARA,GAAwB,KAARA,GAClBzB,EAAI6E,GAAkB4C,EAAIJ,SAC1BI,EAAIJ,OAAS,IAEF,GAAP5F,GAAUgG,EAAIJ,OAAO7N,KAAKiI,EAElC,EACNsG,MAAK,SAACN,GAAM,IAADmB,GACW,QAAVA,EAAAnB,EAAIJ,cAAM,IAAAuB,OAAA,EAAVA,EAAYjb,QAAS,IACvBqS,EAAI6E,GAAkB4C,EAAIJ,SAC1BI,EAAIJ,OAAS,GAEjB,EACNwB,aAAY,WAEJ,MAAO,CACLC,QAAS,MACTC,QAAS,EACTC,QAAS,IACTC,QAAS,MACTC,KAAM,CACJ,EAAM,GAAM,IAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,EAClE,GAAM,GAAM,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAClE,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAGhD,EACNC,aAAY,WAEJ,OAAO,CACT,EACNC,iBAAgB,WACR,MAAO,CAAC,GAAI,GACd,GAENC,iBAAiB,CACjBf,SAAQ,SAACb,EAAKhG,GACM,OAARA,GAAwB,KAARA,GAClBlP,EAAIsS,GAAkB4C,EAAIJ,SAC1BI,EAAIJ,OAAS,IAEF,GAAP5F,GAAUgG,EAAIJ,OAAO7N,KAAKiI,EAElC,EACNsG,MAAK,SAACN,GAAM,IAAD6B,GACW,QAAVA,EAAA7B,EAAIJ,cAAM,IAAAiC,OAAA,EAAVA,EAAY3b,QAAS,IACvB4E,EAAIsS,GAAkB4C,EAAIJ,SAC1BI,EAAIJ,OAAS,GAEjB,IAKFkC,GAAY,WACZtZ,GACF,EACEuZ,GAAQ,CACZC,UAAU,KACVC,MAAK,WACC,OAAOF,GAAMG,WAAW,KAAM,IAAK,MAAO,EAC5C,EACJA,WAAU,SAACC,EAAQle,EAAMY,EAAM4a,GACzB,GAAItD,GAAGiG,SAASvd,IAASsX,GAAGkG,OAAOxd,GAEjC,MAAM,IAAIsX,GAAGgE,WAAW,IAE1B4B,GAAMC,YAAND,GAAMC,UAAc,CAClB1G,IAAK,CACH2E,KAAM,CACJqC,QAASP,GAAMQ,SAASD,QACxBE,QAAST,GAAMQ,SAASC,QACxBC,OAAQV,GAAMQ,SAASE,OACvBC,MAAOX,GAAMQ,SAASG,MACtBC,OAAQZ,GAAMQ,SAASI,OACvBC,OAAQb,GAAMQ,SAASK,OACvBC,MAAOd,GAAMQ,SAASM,MACtBC,QAASf,GAAMQ,SAASO,QACxBC,QAAShB,GAAMQ,SAASQ,SAE1BhD,OAAQ,CACNiD,OAAQjB,GAAMjC,WAAWkD,SAG7BnX,KAAM,CACJoU,KAAM,CACJqC,QAASP,GAAMQ,SAASD,QACxBE,QAAST,GAAMQ,SAASC,SAE1BzC,OAAQ,CACNiD,OAAQjB,GAAMjC,WAAWkD,OACzB5R,KAAM2Q,GAAMjC,WAAW1O,KACvBwP,MAAOmB,GAAMjC,WAAWc,MACxBqC,KAAMlB,GAAMjC,WAAWmD,KACvBC,MAAOnB,GAAMjC,WAAWoD,QAG5BC,KAAM,CACJlD,KAAM,CACJqC,QAASP,GAAMQ,SAASD,QACxBE,QAAST,GAAMQ,SAASC,QACxBY,SAAUrB,GAAMQ,SAASa,UAE3BrD,OAAQ,CAAC,GAEXsD,OAAQ,CACNpD,KAAM,CACJqC,QAASP,GAAMQ,SAASD,QACxBE,QAAST,GAAMQ,SAASC,SAE1BzC,OAAQ5D,GAAGmH,qBAGf,IAAIrD,EAAO9D,GAAG+F,WAAWC,EAAQle,EAAMY,EAAM4a,GA0B7C,OAzBItD,GAAGoH,MAAMtD,EAAKpb,OAChBob,EAAKsC,SAAWR,GAAMC,UAAU1G,IAAI2E,KACpCA,EAAKH,WAAaiC,GAAMC,UAAU1G,IAAIyE,OACtCE,EAAKuD,SAAW,CAAC,GACRrH,GAAGsH,OAAOxD,EAAKpb,OACxBob,EAAKsC,SAAWR,GAAMC,UAAUnW,KAAKoU,KACrCA,EAAKH,WAAaiC,GAAMC,UAAUnW,KAAKkU,OACvCE,EAAKyD,UAAY,EAIjBzD,EAAKuD,SAAW,MACPrH,GAAGwH,OAAO1D,EAAKpb,OACxBob,EAAKsC,SAAWR,GAAMC,UAAUmB,KAAKlD,KACrCA,EAAKH,WAAaiC,GAAMC,UAAUmB,KAAKpD,QAC9B5D,GAAGyH,SAAS3D,EAAKpb,QAC1Bob,EAAKsC,SAAWR,GAAMC,UAAUqB,OAAOpD,KACvCA,EAAKH,WAAaiC,GAAMC,UAAUqB,OAAOtD,QAE3CE,EAAKQ,MAAQR,EAAKa,MAAQb,EAAKc,MAAQL,KAAKC,MAExCwB,IACFA,EAAOqB,SAASvf,GAAQgc,EACxBkC,EAAO1B,MAAQ0B,EAAOrB,MAAQqB,EAAOpB,MAAQd,EAAKQ,OAE7CR,CACT,EACJ4D,wBAAuB,SAAC5D,GAClB,OAAKA,EAAKuD,SACNvD,EAAKuD,SAAS3F,SAAiBoC,EAAKuD,SAAS3F,SAAS,EAAGoC,EAAKyD,WAC3D,IAAIxa,WAAW+W,EAAKuD,UAFA,IAAIta,WAAW,EAG5C,EACJ4a,kBAAiB,SAAC7D,EAAM8D,GAClB,IAAIC,EAAe/D,EAAKuD,SAAWvD,EAAKuD,SAAStd,OAAS,EAC1D,KAAI8d,GAAgBD,GAApB,CAKAA,EAActN,KAAKwN,IAAIF,EAAcC,GAAgBA,EADzB,QACgE,EAAM,SAAY,GAC1F,GAAhBA,IAAmBD,EAActN,KAAKwN,IAAIF,EAAa,MAC3D,IAAIG,EAAcjE,EAAKuD,SACvBvD,EAAKuD,SAAW,IAAIta,WAAW6a,GAC3B9D,EAAKyD,UAAY,GAAGzD,EAAKuD,SAAS1Q,IAAIoR,EAAYrG,SAAS,EAAGoC,EAAKyD,WAAY,EAT5C,CAUzC,EACJS,kBAAiB,SAAClE,EAAMmE,GAClB,GAAInE,EAAKyD,WAAaU,EACtB,GAAe,GAAXA,EACFnE,EAAKuD,SAAW,KAChBvD,EAAKyD,UAAY,MACZ,CACL,IAAIQ,EAAcjE,EAAKuD,SACvBvD,EAAKuD,SAAW,IAAIta,WAAWkb,GAC3BF,GACFjE,EAAKuD,SAAS1Q,IAAIoR,EAAYrG,SAAS,EAAGpH,KAAKsG,IAAIqH,EAASnE,EAAKyD,aAEnEzD,EAAKyD,UAAYU,CACnB,CACF,EACJ7B,SAAS,CACTD,QAAO,SAACrC,GACA,IAAIoE,EAAO,CAAC,EAyBZ,OAvBAA,EAAK5E,IAAMtD,GAAGyH,SAAS3D,EAAKpb,MAAQob,EAAKqE,GAAK,EAC9CD,EAAKE,IAAMtE,EAAKqE,GAChBD,EAAKxf,KAAOob,EAAKpb,KACjBwf,EAAKG,MAAQ,EACbH,EAAKI,IAAM,EACXJ,EAAKK,IAAM,EACXL,EAAKnE,KAAOD,EAAKC,KAEfmE,EAAKM,KADHxI,GAAGoH,MAAMtD,EAAKpb,MACJ,KACHsX,GAAGsH,OAAOxD,EAAKpb,MACZob,EAAKyD,UACRvH,GAAGwH,OAAO1D,EAAKpb,MACZob,EAAKkD,KAAKjd,OAEV,EAEdme,EAAK5D,MAAQ,IAAIC,KAAKT,EAAKQ,OAC3B4D,EAAKvD,MAAQ,IAAIJ,KAAKT,EAAKa,OAC3BuD,EAAKtD,MAAQ,IAAIL,KAAKT,EAAKc,OAG3BsD,EAAKO,QAAU,KACfP,EAAKQ,OAASpO,KAAKC,KAAK2N,EAAKM,KAAON,EAAKO,SAClCP,CACT,EACN7B,QAAO,SAACvC,EAAMoE,GACN,QAAAS,EAAA,EAAAC,EAAkB,CAAC,OAAQ,QAAS,QAAS,SAAQD,EAAAC,EAAA7e,OAAA4e,IAAE,CAAlD,IAAM7f,EAAG8f,EAAAD,GACK,MAAbT,EAAKpf,KACPgb,EAAKhb,GAAOof,EAAKpf,GAErB,MACkBkD,IAAdkc,EAAKM,MACP5C,GAAMoC,kBAAkBlE,EAAMoE,EAAKM,KAEvC,EACNlC,OAAM,WAQE,MALKV,GAAMiD,oBACTjD,GAAMiD,kBAAoB,IAAI7I,GAAGgE,WAAW,IAE5C4B,GAAMiD,kBAAkB9R,MAAQ,6BAE5B6O,GAAMiD,iBACd,EACNtC,MAAK,SAACP,EAAQle,EAAMY,EAAM4a,GAClB,OAAOsC,GAAMG,WAAWC,EAAQle,EAAMY,EAAM4a,EAC9C,EACNkD,OAAM,SAACsC,EAAUC,EAASC,GAClB,IAAIC,EACJ,IACEA,EAAWjJ,GAAGkJ,WAAWH,EAASC,EACpC,CAAE,MAAOna,GAAI,CACb,GAAIoa,EAAU,CACZ,GAAIjJ,GAAGoH,MAAM0B,EAASpgB,MAEpB,IAAK,IAAInB,KAAK0hB,EAAS5B,SACrB,MAAM,IAAIrH,GAAGgE,WAAW,IAG5BhE,GAAGmJ,eAAeF,EACpB,QAEOH,EAAS9C,OAAOqB,SAASyB,EAAShhB,MACzCihB,EAAQ1B,SAAS2B,GAAYF,EAC7BA,EAAShhB,KAAOkhB,EAChBD,EAAQnE,MAAQmE,EAAQpE,MAAQmE,EAAS9C,OAAOpB,MAAQkE,EAAS9C,OAAOrB,MAAQJ,KAAKC,KACvF,EACNiC,OAAM,SAACT,EAAQle,UACAke,EAAOqB,SAASvf,GACvBke,EAAOpB,MAAQoB,EAAOrB,MAAQJ,KAAKC,KACrC,EACNkC,MAAK,SAACV,EAAQle,GACN,IAAIgc,EAAO9D,GAAGkJ,WAAWlD,EAAQle,GACjC,IAAK,IAAIP,KAAKuc,EAAKuD,SACjB,MAAM,IAAIrH,GAAGgE,WAAW,WAEnBgC,EAAOqB,SAASvf,GACvBke,EAAOpB,MAAQoB,EAAOrB,MAAQJ,KAAKC,KACrC,EACNmC,QAAO,SAAC7C,GACA,MAAM,CAAE,IAAK,MAAIxT,OAAAmN,EAAKxV,OAAOmhB,KAAKtF,EAAKuD,WACzC,EACNT,QAAO,SAACZ,EAAQqD,EAASC,GACjB,IAAIxF,EAAO8B,GAAMG,WAAWC,EAAQqD,EAAS,MAAe,GAE5D,OADAvF,EAAKkD,KAAOsC,EACLxF,CACT,EACNmD,SAAQ,SAACnD,GACD,IAAK9D,GAAGwH,OAAO1D,EAAKpb,MAClB,MAAM,IAAIsX,GAAGgE,WAAW,IAE1B,OAAOF,EAAKkD,IACd,GAENrD,WAAW,CACX1O,KAAI,SAAC2O,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,GAC7B,IAAIlC,EAAWzD,EAAOE,KAAKuD,SAC3B,GAAIkC,GAAY3F,EAAOE,KAAKyD,UAAW,OAAO,EAC9C,IAAIiB,EAAOlO,KAAKsG,IAAIgD,EAAOE,KAAKyD,UAAYgC,EAAUxf,GACtD,GAAIye,EAAO,GAAKnB,EAAS3F,SACvBjV,EAAOkK,IAAI0Q,EAAS3F,SAAS6H,EAAUA,EAAWf,GAAOjS,QAEzD,IAAK,IAAIhP,EAAI,EAAGA,EAAIihB,EAAMjhB,IAAKkF,EAAO8J,EAAShP,GAAK8f,EAASkC,EAAWhiB,GAE1E,OAAOihB,CACT,EACN/D,MAAK,SAACb,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,EAAUC,GASxC,GAJI/c,EAAOA,SAAWC,EAAMD,SAC1B+c,GAAS,IAGNzf,EAAQ,OAAO,EACpB,IAAI+Z,EAAOF,EAAOE,KAGlB,GAFAA,EAAKa,MAAQb,EAAKc,MAAQL,KAAKC,MAE3B/X,EAAOiV,YAAcoC,EAAKuD,UAAYvD,EAAKuD,SAAS3F,UAAW,CACjE,GAAI8H,EAGF,OAFA1F,EAAKuD,SAAW5a,EAAOiV,SAASnL,EAAQA,EAASxM,GACjD+Z,EAAKyD,UAAYxd,EACVA,EACF,GAAuB,IAAnB+Z,EAAKyD,WAAgC,IAAbgC,EAGjC,OAFAzF,EAAKuD,SAAW5a,EAAOkO,MAAMpE,EAAQA,EAASxM,GAC9C+Z,EAAKyD,UAAYxd,EACVA,EACF,GAAIwf,EAAWxf,GAAU+Z,EAAKyD,UAEnC,OADAzD,EAAKuD,SAAS1Q,IAAIlK,EAAOiV,SAASnL,EAAQA,EAASxM,GAASwf,GACrDxf,CAEX,CAIA,GADA6b,GAAM+B,kBAAkB7D,EAAMyF,EAASxf,GACnC+Z,EAAKuD,SAAS3F,UAAYjV,EAAOiV,SAEnCoC,EAAKuD,SAAS1Q,IAAIlK,EAAOiV,SAASnL,EAAQA,EAASxM,GAASwf,QAE5D,IAAK,IAAIhiB,EAAI,EAAGA,EAAIwC,EAAQxC,IAC3Buc,EAAKuD,SAASkC,EAAWhiB,GAAKkF,EAAO8J,EAAShP,GAIjD,OADAuc,EAAKyD,UAAYjN,KAAKwN,IAAIhE,EAAKyD,UAAWgC,EAAWxf,GAC9CA,CACT,EACN8c,OAAM,SAACjD,EAAQrN,EAAQkT,GACf,IAAIF,EAAWhT,EAQf,GAPe,IAAXkT,EACFF,GAAY3F,EAAO2F,SACC,IAAXE,GACLzJ,GAAGsH,OAAO1D,EAAOE,KAAKpb,QACxB6gB,GAAY3F,EAAOE,KAAKyD,WAGxBgC,EAAW,EACb,MAAM,IAAIvJ,GAAGgE,WAAW,IAE1B,OAAOuF,CACT,EACNzC,KAAI,SAAClD,EAAQ7Z,EAAQwf,EAAUG,EAAMC,GAC7B,IAAK3J,GAAGsH,OAAO1D,EAAOE,KAAKpb,MACzB,MAAM,IAAIsX,GAAGgE,WAAW,IAE1B,IAAI7Q,EACAyW,EACAvC,EAAWzD,EAAOE,KAAKuD,SAE3B,GAAc,EAARsC,IAActC,GAAYA,EAAS5a,SAAWC,EAAMD,OAKnD,CAGL,GAFAmd,GAAY,IACZzW,EAAMwS,MAEJ,MAAM,IAAI3F,GAAGgE,WAAW,IAEtBqD,KAEEkC,EAAW,GAAKA,EAAWxf,EAASsd,EAAStd,UAE7Csd,EADEA,EAAS3F,SACA2F,EAAS3F,SAAS6H,EAAUA,EAAWxf,GAEvC8P,MAAM1Q,UAAUwR,MAAMjT,KAAK2f,EAAUkC,EAAUA,EAAWxf,IAGzE2C,EAAMiK,IAAI0Q,EAAUlU,GAExB,MAnBEyW,GAAY,EACZzW,EAAMkU,EAASpN,WAmBjB,MAAO,CAAE9G,MAAKyW,YAChB,EACN7C,MAAK,SAACnD,EAAQnX,EAAQ8J,EAAQxM,GAGtB,OAFA6b,GAAMjC,WAAWc,MAAMb,EAAQnX,EAAQ,EAAG1C,EAAQwM,GAAQ,GAEnD,CACT,IAIFsT,GAAS,eAAAC,EAAA7d,GAAG,UAAOnC,GACnB,IAAI+K,QAAoBrF,EAAU1F,GAClC,OAAO,IAAIiD,WAAW8H,EACxB,IAAC,gBAHUkV,GAAA,OAAAD,EAAAja,MAAA,KAAAC,UAAA,KAMTka,GAAoB,WAAH,OAAgBhK,GAAGiK,eAAcpa,MAAjBmQ,GAAElQ,UAAyB,EAM5Doa,GAAiB,GAejBC,GAAyB,SAACnE,EAAQle,EAAMgC,EAAKsgB,EAASC,EAAUC,EAAQtR,EAASuR,EAAgBf,EAAQgB,GAKzG,SAASC,EAAYtT,GACnB,SAASuT,EAAOvT,GACdqT,aACKD,GACHP,GAAkBhE,EAAQle,EAAMqP,EAAWiT,EAASC,EAAUb,GAEhEc,aACApc,GACF,EA3B0B,SAACiJ,EAAWwT,EAAUD,EAAQ1R,QAEpC,IAAX4R,IAAwBA,GAAQtf,OAE3C,IAAIuf,GAAU,EAQd,OAPAX,GAAeY,SAAQ,SAACC,GAClBF,GACAE,EAAkB,UAAEJ,KACtBI,EAAe,OAAE5T,EAAWwT,EAAUD,EAAQ1R,GAC9C6R,GAAU,EAEd,IACOA,CACT,EAeQG,CAA0B7T,EAAWwT,EAAUD,GAAQ,WACzD1R,aACA9K,GACF,KAGAwc,EAAOvT,EACT,CAlBA,IAAIwT,EAAW7iB,EAAO+X,GAAQnN,QAAQqL,GAAKyB,MAAMwG,EAAQle,IAASke,EACjC,MAAD1V,OAAOqa,GAkBvC9c,IACkB,iBAAP/D,EACT+f,GAAU/f,GAAKyK,KAAKkW,EAAazR,GAEjCyR,EAAY3gB,EAEhB,EAkBEmhB,GAAa,SAACb,EAASC,GACvB,IAAI3hB,EAAO,EAGX,OAFI0hB,IAAS1hB,GAAQ,KACjB2hB,IAAU3hB,GAAQ,KACfA,CACT,EAKEwiB,GAAQ,CACZC,IAAI,CACJ,EACA/S,UAAU,SAADgT,GAAA,SAAThT,IAAS,OAAAgT,EAAAvb,MAAA,KAAAC,UAAA,QAATsI,EAASiT,SAAA,kBAAAD,EAAAC,UAAA,EAATjT,CAAS,CAAC,aACJ,OAAOA,SACT,IACJkT,WAAW,GACXC,cAAc,YACdC,aAAa,SAAC1F,GACR,SAAS2F,IACuB,UAA1B3F,EAAM4F,gBAA6BC,IAClC7F,EAAM4F,gBAAkB,CAC/B,CACA,SAASC,IACP7F,EAAM4F,gBAAkB,MACxBR,GAAMU,OAAO9F,GAAoB,EAAO2F,EAC1C,CAEK3F,EAAM4F,gBAO0B,QAA1B5F,EAAM4F,kBAKf5F,EAAM4F,gBAAkB,SANxB5F,EAAM4F,gBAAkBG,WAAWF,EAAc,EAQrD,EACJ7F,MAAM,SAACA,GAAW,IAADgG,EAEPC,EAAMnG,GAAME,MAAMA,GAGtB,GAAIA,SAAW,QAANgG,EAALhG,EAAOkG,YAAI,IAAAF,GAAXA,EAAaG,YAAa,CAC5BF,EAAIL,gBAAkB,EACtB,IAAIQ,EAAiBH,EAAI3F,SACzB2F,EAAI3F,SAAQ+F,EAAA,GAAOJ,EAAI3F,UACvB2F,EAAI3F,SAASG,MAAQ,SAACP,EAAQle,EAAMY,EAAM4a,GACxC,IAAIQ,EAAOoI,EAAe3F,MAAMP,EAAQle,EAAMY,EAAM4a,GA2BpD,OAzBAQ,EAAKsC,SAAW2F,EAAI3F,SAEpBtC,EAAKsI,YAAcL,EAAIjG,MAEvBhC,EAAKuI,iBAAmBvI,EAAKH,WAE7BG,EAAKH,WAAUwI,EAAA,GAAOrI,EAAKH,YAG3BG,EAAKH,WAAWc,MAAQ,SAACb,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,EAAUC,GAGjE,OADA5F,EAAOE,KAAKwI,YAAa,EAClBxI,EAAKuI,iBAAiB5H,MAAMb,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,EAAUC,EAC/E,EAGA1F,EAAKH,WAAWO,MAAQ,SAACN,GACvB,IAAI5a,EAAI4a,EAAOE,KAKf,GAJI9a,EAAEsjB,aACJpB,GAAMM,aAAaxiB,EAAEojB,aACrBpjB,EAAEsjB,YAAa,GAEbtjB,EAAEqjB,iBAAiBnI,MAAO,OAAOlb,EAAEqjB,iBAAiBnI,MAAMN,EAChE,EAEOE,CACT,EAEAiI,EAAI3F,SAASmG,MAAU,kBAAcrB,GAAMM,aAAaO,EAAIjG,OAAQoG,EAAeK,MAAK1c,MAApBqc,EAAcpc,UAAe,EACjGic,EAAI3F,SAASM,MAAU,kBAAcwE,GAAMM,aAAaO,EAAIjG,OAAQoG,EAAexF,MAAK7W,MAApBqc,EAAcpc,UAAe,EACjGic,EAAI3F,SAASQ,QAAU,kBAAcsE,GAAMM,aAAaO,EAAIjG,OAAQoG,EAAetF,QAAO/W,MAAtBqc,EAAcpc,UAAiB,EACnGic,EAAI3F,SAASK,OAAU,kBAAcyE,GAAMM,aAAaO,EAAIjG,OAAQoG,EAAezF,OAAM5W,MAArBqc,EAAcpc,UAAgB,EAClGic,EAAI3F,SAASI,OAAU,kBAAc0E,GAAMM,aAAaO,EAAIjG,OAAQoG,EAAe1F,OAAM3W,MAArBqc,EAAcpc,UAAgB,CACpG,CACA,OAAOic,CACT,EACJH,OAAO,SAAC9F,EAAO0G,EAAUle,GACnB4c,GAAMuB,YAAY3G,GAAO,SAACnX,EAAK+d,GAC7B,GAAI/d,EAAK,OAAOL,EAASK,GAEzBuc,GAAMyB,aAAa7G,GAAO,SAACnX,EAAKie,GAC9B,GAAIje,EAAK,OAAOL,EAASK,GAKzBuc,GAAM2B,UAHIL,EAAWI,EAASF,EACpBF,EAAWE,EAAQE,EAEHte,EAC5B,GACF,GACF,EACJwe,KAAK,WACC7kB,OAAOgO,OAAOiV,GAAMC,KAAKL,SAAQ,SAACtiB,GAAK,OAAKA,EAAM0b,OAAO,IACzDgH,GAAMC,IAAM,CAAC,CACf,EACJ4B,MAAM,SAACjlB,EAAMwG,GAEP,IAKI0e,EALAvU,EAAKyS,GAAMC,IAAIrjB,GACnB,GAAI2Q,EACF,OAAOnK,EAAS,KAAMmK,GAIxB,IACEuU,EAAM9B,GAAM9S,YAAYE,KAAKxQ,EAAMojB,GAAMI,WAC3C,CAAE,MAAOzc,GACP,OAAOP,EAASO,EAClB,CACA,IAAKme,EACH,OAAO1e,EAAS,kCAElB0e,EAAIzU,gBAAkB,SAAC1J,GACrB,IAGIoe,EAHAxU,EAAiC5J,EAAE6J,OAAO9F,OAC1CuG,EAActK,EAAE6J,OAAOS,aAKzB8T,EADExU,EAAGE,iBAAiBC,SAASsS,GAAMK,eACzBpS,EAAYC,YAAY8R,GAAMK,eAE9B9S,EAAGK,kBAAkBoS,GAAMK,gBAG1B2B,WAAWtU,SAAS,cACjCqU,EAAUE,YAAY,YAAa,YAAa,CAAEC,QAAQ,GAE9D,EACAJ,EAAIjU,UAAY,WAIdmS,GAAMC,IAAIrjB,GAHV2Q,EAAiCuU,EAAIpa,OAIrCtE,EAAS,KAAMmK,EACjB,EACAuU,EAAIhU,QAAU,SAACnK,GACbP,EAASO,EAAE6J,OAAOlB,OAClB3I,EAAEwe,gBACJ,CACF,EACJZ,YAAY,SAAC3G,EAAOxX,GAGd,SAASgf,EAAUjkB,GACjB,MAAa,MAANA,GAAmB,OAANA,CACtB,CACA,SAASkkB,EAAWljB,GAClB,OAAO,SAAChB,GAAC,OAAK0U,GAAKyB,MAAMnV,EAAMhB,EAAG,CACpC,CAIA,IAXA,IAAImkB,EAAU,CAAC,EASX3W,EAAQmJ,GAAG2G,QAAQb,EAAM2H,YAAYzO,OAAOsO,GAAWlX,IAAImX,EAAWzH,EAAM2H,aAEzE5W,EAAM9M,QAAQ,CACnB,IACI2jB,EADAxe,EAAO2H,EAAM8W,MAGjB,IACED,EAAO1N,GAAG0N,KAAKxe,EACjB,CAAE,MAAOL,GACP,OAAOP,EAASO,EAClB,CAEImR,GAAGoH,MAAMsG,EAAKhlB,OAChBmO,EAAMjB,KAAI/F,MAAVgH,EAAK4G,EAASuC,GAAG2G,QAAQzX,GAAM8P,OAAOsO,GAAWlX,IAAImX,EAAWre,MAGlEse,EAAQte,GAAQ,CAAE,UAAawe,EAAK/I,MACtC,CAEA,OAAOrW,EAAS,KAAM,CAAE8E,KAAM,QAASoa,QAASA,GAClD,EACJb,aAAa,SAAC7G,EAAOxX,GACf,IAAIkf,EAAU,CAAC,EAEftC,GAAM6B,MAAMjH,EAAM2H,YAAY,SAAC9e,EAAK8J,GAClC,GAAI9J,EAAK,OAAOL,EAASK,GAEzB,IACE,IAAIwK,EAAcV,EAAGU,YAAY,CAAC+R,GAAMK,eAAgB,YACxDpS,EAAYH,QAAU,SAACnK,GACrBP,EAASO,EAAE6J,OAAOlB,OAClB3I,EAAEwe,gBACJ,EAEYlU,EAAYC,YAAY8R,GAAMK,eACxBqC,MAAM,aAElBC,gBAAgB9U,UAAY,SAACP,GACjC,IAAIsV,EAAStV,EAAME,OAAO9F,OAE1B,IAAKkb,EACH,OAAOxf,EAAS,KAAM,CAAE8E,KAAM,SAAUqF,KAAI+U,YAG9CA,EAAQM,EAAOC,YAAc,CAAE,UAAaD,EAAOhlB,KAEnDglB,EAAOE,UACT,CACF,CAAE,MAAOnf,GACP,OAAOP,EAASO,EAClB,CACF,GACF,EACJof,eAAe,SAAC/e,EAAMZ,GAChB,IAAIof,EAAM5J,EAEV,IAEEA,EADa9D,GAAGkO,WAAWhf,GACb4U,KACd4J,EAAO1N,GAAG0N,KAAKxe,EACjB,CAAE,MAAOL,GACP,OAAOP,EAASO,EAClB,CAEA,OAAImR,GAAGoH,MAAMsG,EAAKhlB,MACT4F,EAAS,KAAM,CAAE,UAAaof,EAAK/I,MAAO,KAAQ+I,EAAKhlB,OACrDsX,GAAGsH,OAAOoG,EAAKhlB,OAGxBob,EAAKuD,SAAWzB,GAAM8B,wBAAwB5D,GACvCxV,EAAS,KAAM,CAAE,UAAaof,EAAK/I,MAAO,KAAQ+I,EAAKhlB,KAAM,SAAYob,EAAKuD,YAE9E/Y,EAAS,IAAIgG,MAAM,2BAE9B,EACJ6Z,gBAAgB,SAACjf,EAAMkf,EAAO9f,GACxB,IACE,GAAI0R,GAAGoH,MAAMgH,EAAY,MACvBpO,GAAGqO,UAAUnf,EAAMkf,EAAY,UAC1B,KAAIpO,GAAGsH,OAAO8G,EAAY,MAG/B,OAAO9f,EAAS,IAAIgG,MAAM,4BAF1B0L,GAAGsO,UAAUpf,EAAMkf,EAAgB,SAAG,CAAE5E,QAAQ,GAGlD,CAEAxJ,GAAGuO,MAAMrf,EAAMkf,EAAY,MAC3BpO,GAAGwO,MAAMtf,EAAMkf,EAAiB,UAAGA,EAAiB,UACtD,CAAE,MAAOvf,GACP,OAAOP,EAASO,EAClB,CAEAP,EAAS,KACX,EACJmgB,iBAAiB,SAACvf,EAAMZ,GAClB,IACE,IAAIof,EAAO1N,GAAG0N,KAAKxe,GAEf8Q,GAAGoH,MAAMsG,EAAKhlB,MAChBsX,GAAG0G,MAAMxX,GACA8Q,GAAGsH,OAAOoG,EAAKhlB,OACxBsX,GAAGyG,OAAOvX,EAEd,CAAE,MAAOL,GACP,OAAOP,EAASO,EAClB,CAEAP,EAAS,KACX,EACJogB,gBAAgB,SAACC,EAAOzf,EAAMZ,GACxB,IAAI0e,EAAM2B,EAAMvmB,IAAI8G,GACpB8d,EAAIjU,UAAY,SAACP,GAAK,OAAKlK,EAAS,KAAMkK,EAAME,OAAO9F,OAAQ,EAC/Doa,EAAIhU,QAAU,SAACnK,GACbP,EAASO,EAAE6J,OAAOlB,OAClB3I,EAAEwe,gBACJ,CACF,EACJuB,iBAAiB,SAACD,EAAOzf,EAAMkf,EAAO9f,GAChC,IACE,IAAI0e,EAAM2B,EAAMjU,IAAI0T,EAAOlf,EAC7B,CAAE,MAAOL,GAEP,YADAP,EAASO,EAEX,CACAme,EAAIjU,UAAY,WAAM,OAAKzK,GAAW,EACtC0e,EAAIhU,QAAU,SAACnK,GACbP,EAASO,EAAE6J,OAAOlB,OAClB3I,EAAEwe,gBACJ,CACF,EACJwB,kBAAkB,SAACF,EAAOzf,EAAMZ,GAC1B,IAAI0e,EAAM2B,EAAMG,OAAO5f,GACvB8d,EAAIjU,UAAY,WAAM,OAAKzK,GAAW,EACtC0e,EAAIhU,QAAU,SAACnK,GACbP,EAASO,EAAE6J,OAAOlB,OAClB3I,EAAEwe,gBACJ,CACF,EACJR,UAAU,SAAC9gB,EAAKgjB,EAAKzgB,GA8Bf,SAASmH,EAAK9G,GACZ,GAAIA,IAAQqgB,EAEV,OADAA,GAAU,EACH1gB,EAASK,EAEpB,CAlCA,IAAIyG,EAAQ,EAERvM,EAAS,GACbZ,OAAOmhB,KAAKrd,EAAIyhB,SAAS1C,SAAQ,SAAChiB,GAChC,IACImmB,EAAKF,EAAIvB,QAAQ1kB,GAChBmmB,GAFGljB,EAAIyhB,QAAQ1kB,GAEI,UAAEomB,WAAaD,EAAc,UAAEC,YACrDrmB,EAAO+M,KAAK9M,GACZsM,IAEJ,IAEA,IAAI+Z,EAAS,GAQb,GAPAlnB,OAAOmhB,KAAK2F,EAAIvB,SAAS1C,SAAQ,SAAChiB,GAC3BiD,EAAIyhB,QAAQ1kB,KACfqmB,EAAOvZ,KAAK9M,GACZsM,IAEJ,KAEKA,EACH,OAAO9G,EAAS,MAGlB,IAAI0gB,GAAU,EAEV7V,GADkB,WAAbpN,EAAIqH,KAAoBrH,EAAI0M,GAAKsW,EAAItW,IACzBU,YAAY,CAAC+R,GAAMK,eAAgB,aACpDoD,EAAQxV,EAAYC,YAAY8R,GAAMK,eAU1CpS,EAAYH,QAAUG,EAAYiW,QAAU,SAACvgB,GAC3C4G,EAAK5G,EAAE6J,OAAOlB,OACd3I,EAAEwe,gBACJ,EAEAlU,EAAYkW,WAAa,WAClBL,GACH1gB,EAAS,KAEb,EAIAzF,EAAOymB,OAAOxE,SAAQ,SAAC5b,GACJ,UAAb6f,EAAI3b,KACN8X,GAAMwD,gBAAgBC,EAAOzf,GAAM,SAACP,EAAKyf,GACvC,GAAIzf,EAAK,OAAO8G,EAAK9G,GACrBuc,GAAMiD,gBAAgBjf,EAAMkf,EAAO3Y,EACrC,IAEAyV,GAAM+C,eAAe/e,GAAM,SAACP,EAAKyf,GAC/B,GAAIzf,EAAK,OAAO8G,EAAK9G,GACrBuc,GAAM0D,iBAAiBD,EAAOzf,EAAMkf,EAAO3Y,EAC7C,GAEJ,IAIA0Z,EAAOG,OAAOC,UAAUzE,SAAQ,SAAC5b,GACd,UAAb6f,EAAI3b,KACN8X,GAAMuD,iBAAiBvf,EAAMuG,GAE7ByV,GAAM2D,kBAAkBF,EAAOzf,EAAMuG,EAEzC,GACF,GAKA+Z,GAAM,CACVC,SAAS,MACTC,UAAU,MACVC,YAAY,EACZC,MAAM,KACNtkB,KAAI,WAEe,IA+BfukB,EAhCML,GAAII,QACRJ,GAAII,OA+BNC,EAAW,WAEf,IAAIxoB,EAAU,CAedA,WAAqB,SAAUmc,EAAOC,EAAQqM,EAAMC,GAInD,IAAK,IAAIxoB,EAHTuoB,EAAOA,GAAQ,EAGI9mB,EAFnB+mB,EAAOA,GAASvM,EAAMzZ,OAAS+lB,EAEFE,EAAI,EAAGzoB,EAAIyB,GAAI,CAC3C,IAAIinB,EAAQzM,EAAMjc,KAGd2oB,EAAmBD,GAAS,EAChC,GAAIC,EAAkB,EAAG,CAGxB,IADA,IAAI1oB,EAAI0oB,EAAkB,IACb,MAAN1oB,GAEN0oB,GADA1oB,EAAIgc,EAAMjc,KAMX,IADA,IAAIkZ,EAAMlZ,EAAI2oB,EACP3oB,EAAIkZ,GAAKgD,EAAOuM,KAAOxM,EAAMjc,KAGpC,GAAIA,IAAMyB,EAAG,OAAOgnB,CACrB,CAIA,IAAIzZ,EAASiN,EAAMjc,KAAQic,EAAMjc,MAAQ,EAGzC,GAAe,IAAXgP,EAAc,OAAOyZ,EACzB,GAAIzZ,EAASyZ,EAAG,QAASzoB,EAAE,GAG3B,IAAI4oB,EAAwB,GAARF,EAEpB,IADIzoB,EAAI2oB,EAAe,IACV,MAAN3oB,GAEN2oB,GADA3oB,EAAIgc,EAAMjc,KAKX,IAAI6oB,EAAMJ,EAAIzZ,EAEd,IADIkK,EAAMuP,EAAIG,EAAe,EACtBH,EAAIvP,GAAKgD,EAAOuM,KAAOvM,EAAO2M,IACtC,CAEA,OAAOJ,CACR,GAGCK,EAAe,WAmBhBnkB,GAAOokB,GACP,IAAIC,EAAY,IAAI1jB,WAAW,OAC3B2jB,EAAQ,IAAI3jB,WAAW0jB,EAAUxmB,QA8NrC,OA3NA1C,EAAQopB,cAAgB,SAAUC,GACjC,OAAOA,EAAQL,EACZ,EACCK,EAASA,EAAM,IAAO,GAAM,CACjC,EAIArpB,EAAQspB,SAAW,SAAU5kB,EAAKgjB,EAAKe,EAAMC,GAE5C,OADAQ,EAAU5Z,IAAI6Z,GAIf,SAAwBzkB,EAAKgjB,EAAKqB,EAAKN,EAAMC,GAE5C,IAAIa,EAAOd,EACPe,EAAOd,EAAOD,EACdgB,EAAS,EAEb,GAAI/kB,EAAIhC,QAAUsmB,EAAc,MAAM,IAAI/b,MAAM,mBAGhD,GAAIvI,EAAIhC,OArCKgnB,GAqCa,CACzB,IAAI/nB,EAAI3B,EAAQopB,cAAc1kB,EAAIhC,QAClC,GAAK8mB,EAAO7nB,EAAI,MAAMsL,MAAM,qBAAuBuc,EAAO,MAAQ7nB,GASlE,IAPA,IAEEgoB,EAAoB,GAGpBC,EAAYllB,EAAIhC,OA9CNgnB,GAgDLX,EAxDK,EAwDYa,GAAW,CAGlC,IAAIC,EAAkBnlB,EAAIqkB,EAAI,IAAI,EAAIrkB,EAAIqkB,GACtCe,EAAmBplB,EAAIqkB,EAAI,IAAI,EAAIrkB,EAAIqkB,EAAI,GAE3CgB,EAAO9W,KAAK+W,KAAKH,EAAmBC,GAAoB,GA9C/B,cAbhBG,GAoETC,EAAMhB,EAAUa,GAAQ,EAK5B,GAHAb,EAAUa,GAAQhB,EAAM,EAGnBmB,EAAM,GACRnB,EAAMmB,IAAS,GAAM,IAEpBxlB,EAAIwlB,EAAI,IAAI,EAAIxlB,EAAIwlB,EAAI,KAAOJ,IAC/BplB,EAAIwlB,EAAI,IAAI,EAAIxlB,EAAIwlB,KAASL,EAKhCd,GADOY,KA3EM,MAmEd,CAaAA,EAAoB,GAGpB,IAAId,EAAkBE,EAAMU,EACxBva,EAAS6Z,EAAMmB,EAInBA,GAjGW,EAqGX,IADA,IAAIpB,EAJJC,GAhGW,EAqGJA,EAAMa,GAAallB,EAAIqkB,IAAQrkB,EAAIwlB,IACzCnB,IACAmB,IAOD,IAAItB,GAHJE,EAAeC,EAAMD,GA/FV,GAkGyBA,EAlGzB,GAqGX,GAAID,GAnGO,GAmGqB,CAE/BnB,EAAI6B,KAAU,IAAsBX,EACpC,IAAK,IAAI7N,EAAM8N,EAtGL,GAsGgC9N,EAAM,IAAKA,GAAO,IAC3D2M,EAAI6B,KAAU,IAEf7B,EAAI6B,KAAUxO,CACf,MAEC2M,EAAI6B,MAAWV,GA/GL,GA+GkCD,EAI7C,IAAK,IAAI1oB,EAAI,EAAGA,EAAI2oB,EAAiB3oB,IACpCwnB,EAAI6B,KAAU7kB,EAAI+kB,EAAOvpB,GAQ1B,GAJAwnB,EAAI6B,KAAUra,EACdwY,EAAI6B,KAAWra,GAAU,EAGrB4Z,GA3HO,GA2HiB,CAE3B,IADAA,GA5HU,GA6HHA,GAAgB,KACtBA,GAAgB,IAChBpB,EAAI6B,KAAU,IAGf7B,EAAI6B,KAAUT,CACf,CAEAW,EAASV,CA1DT,CA2DD,CACD,CAGA,GAAc,GAAVU,EAAa,OAAO,EAKxB,IADAZ,EAAkBnkB,EAAIhC,OAAS+mB,IA5IlB,GA6ImB,CAE/B/B,EAAI6B,KAAWY,IACf,IAAK,IAAIC,EAAKvB,EAhJF,GAgJ6BuB,EAAK,IAAKA,GAAM,IACxD1C,EAAI6B,KAAU,IAEf7B,EAAI6B,KAAUa,CACf,MAEC1C,EAAI6B,KAAWV,GAzJH,EA8Jb,IADAE,EAAMU,EACCV,EAAMrkB,EAAIhC,QAChBglB,EAAI6B,KAAU7kB,EAAIqkB,KAGnB,OAAOQ,CACR,CA7IQc,CAAc3lB,EAAKgjB,EAAK,EAAGe,GAAQ,EAAGC,GAAQhB,EAAIhlB,OAC1D,EA8IA1C,EAAQsoB,WAAa,KAErBtoB,EAAQsqB,gBAAkB,SAASC,EAAMC,GACvC,GAAIA,EACF,IAAIC,EAAO,IAAI/kB,WAAW1F,EAAQsoB,YAGpCzjB,EAAO0lB,aAAgB1a,aACvB0a,EAAO,IAAI7kB,WAAW6kB,GACtBna,QAAQ4E,IAAI,+BAAiCuV,EAAK7nB,QAKlD,IAJA,IAAIgoB,EAAmB,GACnBC,EAAY,GACZzb,EAAS,EACTnB,EAAQ,EACLmB,EAASqb,EAAK7nB,QAAQ,CAC3B,IAAI2M,EAAQkb,EAAKlQ,SAASnL,EAAQA,EAASlP,EAAQsoB,YAEnDpZ,GAAUlP,EAAQsoB,WAClB,IAAIsC,EAAQ5qB,EAAQopB,cAAc/Z,EAAM3M,QACpCmoB,EAAa,IAAInlB,WAAWklB,GAC5BE,EAAiB9qB,EAAQspB,SAASja,EAAOwb,GAC7C,GAAIC,EAAiB,GAMnB,GALAjmB,EAAOimB,GAAkBF,GACzBC,EAAaA,EAAWxQ,SAAS,EAAGyQ,GACpCJ,EAAiBnc,KAAKsc,GACtB9c,GAAS+c,EACTH,EAAUpc,KAAK,GACXic,EAAQ,CACV,IAAIO,EAAO/qB,EAAQgrB,WAAWH,EAAYJ,GAC1C5lB,EAAOkmB,IAAS1b,EAAM3M,OAAQ,CAACqoB,EAAM1b,EAAM3M,SAC3C,IAAK,IAAIxC,EAAI,EAAGA,EAAImP,EAAM3M,OAAQxC,IAChC2E,EAAOwK,EAAMnP,KAAOuqB,EAAKvqB,GAE7B,OAEA2E,EAA0B,IAAnBimB,GAEPJ,EAAiBnc,KAAKc,GACtBtB,GAASsB,EAAM3M,OACfioB,EAAUpc,KAAK,EAEnB,CACAgc,EAAO,KACP,IAAIxa,EAAiB,CACnB,KAAQ,IAAIrK,WAAWqI,EAA2B,EAAnB/N,EAAQsoB,YACvC,aAAgBva,EAChB,cAAiB,EAAE,GAAI,GACvB,aAAgB,CAAC,KAAM,MACvB,QAAW,GACX,MAAS,GACT,UAAa4c,GAGf,IADAzb,EAAS,EACAhP,EAAI,EAAGA,EAAIwqB,EAAiBhoB,OAAQxC,IAC3C6P,EAAqB,KAAET,IAAIob,EAAiBxqB,GAAIgP,GAChDa,EAAwB,QAAE7P,GAAKgP,EAC/Ba,EAAsB,MAAE7P,GAAKwqB,EAAiBxqB,GAAGwC,OACjDwM,GAAUwb,EAAiBxqB,GAAGwC,OAIhC,OAFA0N,QAAQ4E,IAAI,2BAA6B,CAACjF,EAAqB,KAAErN,SACjEmC,EAAOqK,IAAWnB,GACXgC,CACT,EAEAlL,EAAO7E,EAAQsoB,WAAc,OAEtBtoB,CAEP,CAzTe,GA4TbC,EAAOD,QAAUwoB,EAGJA,GAETL,GAAIG,WAAaH,GAAII,MAAMD,WAC7B,EACJrY,YAAW,SAACgb,EAAMC,GACZ/C,GAAIlkB,OACJ,IAAI8L,EAAiBkb,EAAqB,gBAAK9C,GAAII,MAAM+B,gBAAgBW,EAAW,MACpFpmB,EAAOkL,EAA8B,cAAErN,SAAWqN,EAA6B,aAAErN,QACjF,IAAK,IAAIxC,EAAI,EAAGA,EAAI6P,EAA8B,cAAErN,OAAQxC,IAC1D6P,EAA8B,cAAE7P,IAAM,EACtC6P,EAA6B,aAAE7P,GAAK6P,EAAqB,KAAEsK,SAAStK,EAA6B,aAAI7P,EAAEioB,GAAIG,WAC7CvY,EAA6B,cAAK7P,EAAE,GAAGioB,GAAIG,YACzGzjB,EAAOkL,EAA6B,aAAE7P,GAAGwC,SAAWylB,GAAIG,YAE1D2C,EAAe,SAAEE,MAAM1H,SAAQ,SAACpb,GAC9B,IAAIyP,EAAMpB,GAAKmB,QAAQxP,EAAKyO,UACxBrW,EAAOiW,GAAKqB,SAAS1P,EAAKyO,UAC9B6B,GAAGyS,WAAW,GAAItT,GAAK,GAAM,GAC7B,IAAI6G,EAAShG,GAAG0S,YAAYvT,GAAKlW,OACjCumB,GAAIzJ,WAAWC,EAAQle,EAAM0nB,GAAIE,UAAW,EAAG,CAC7CtY,iBACAoJ,MAAO9Q,EAAK8Q,MACZC,IAAK/Q,EAAK+Q,KAEd,IAMI8R,IACF3H,GAAQtf,OACRgnB,EAAe,SAAEE,MAAM1H,SAAQ,SAACpb,GAC9B,IAAImb,GAAU,EACVF,EAAWjb,EAAKyO,SACpB+L,GAAeY,SAAQ,SAACC,GACtB,IAAIF,GACAE,EAAkB,UAAEJ,GAAW,CAEjC9c,IACA,IAAI6c,EAAS,WAAH,OAASxc,GAAyB,EACxCiJ,EAAY6I,GAAG2S,SAAShI,GAC5BI,EAAe,OAAE5T,EAAWwT,EAAUD,EAAQA,GAC9CG,GAAU,CACZ,CACF,GACF,IAEJ,EACJ9E,WAAU,SAACC,EAAQle,EAAMY,EAAM4a,EAAK+D,EAAU1C,GACxC,IAAIb,EAAO9D,GAAG+F,WAAWC,EAAQle,EAAMY,GAgBvC,OAfAob,EAAKpb,KAAOA,EACZob,EAAKsC,SAAWoJ,GAAIpJ,SACpBtC,EAAKH,WAAa6L,GAAI7L,WACtBjH,KAAK4H,MAAQ5H,KAAKiI,MAAQjI,KAAKkI,OAASD,GAAS,IAAIJ,MAAM2K,UAC3DhjB,EAAOsjB,GAAIE,YAAcF,GAAIC,UACzB/mB,IAAS8mB,GAAIE,WACf5L,EAAK0E,KAAOnB,EAAS5G,IAAM4G,EAAS7G,MACpCsD,EAAKuD,SAAWA,IAEhBvD,EAAK0E,KAAO,KACZ1E,EAAKuD,SAAW,CAAC,GAEfrB,IACFA,EAAOqB,SAASvf,GAAQgc,GAEnBA,CACT,EACJsC,SAAS,CACTD,QAAO,SAACrC,GACA,MAAO,CACLR,IAAK,EACL8E,IAAKtE,EAAKqE,GACVzf,KAAMob,EAAKpb,KACX2f,MAAO,EACPC,IAAK,EACLC,IAAK,EACLxE,KAAM,EACNyE,KAAM1E,EAAK0E,KACXlE,MAAO,IAAIC,KAAKT,EAAKQ,OACrBK,MAAO,IAAIJ,KAAKT,EAAKa,OACrBC,MAAO,IAAIL,KAAKT,EAAKc,OACrB6D,QAAS,KACTC,OAAQpO,KAAKC,KAAKuJ,EAAK0E,KAAO,MAElC,EACNnC,QAAO,SAACvC,EAAMoE,GACN,QAAA0K,EAAA,EAAAC,EAAkB,CAAC,OAAQ,QAAS,QAAS,SAAQD,EAAAC,EAAA9oB,OAAA6oB,IAAE,CAAlD,IAAM9pB,EAAG+pB,EAAAD,GACR1K,EAAKpf,KACPgb,EAAKhb,GAAOof,EAAKpf,GAErB,CACF,EACNwd,OAAM,WACE,MAAM,IAAItG,GAAGgE,WAAW,GAC1B,EACNuC,MAAK,WACG,MAAM,IAAIvG,GAAGgE,WAAW,GAC1B,EACNwC,OAAM,WACE,MAAM,IAAIxG,GAAGgE,WAAW,GAC1B,EACNyC,OAAM,WACE,MAAM,IAAIzG,GAAGgE,WAAW,GAC1B,EACN0C,MAAK,WACG,MAAM,IAAI1G,GAAGgE,WAAW,GAC1B,EACN2C,QAAO,WACC,MAAM,IAAI3G,GAAGgE,WAAW,GAC1B,EACN4C,QAAO,WACC,MAAM,IAAI5G,GAAGgE,WAAW,GAC1B,GAENL,WAAW,CACX1O,KAAI,SAAC2O,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,GAG7B,IADAxf,EAASuQ,KAAKsG,IAAI7W,EAAQ6Z,EAAOE,KAAK0E,KAAOe,KAC/B,EAAG,OAAO,EAIxB,IAHA,IAAIlC,EAAWzD,EAAOE,KAAKuD,SACvBjQ,EAAiBiQ,EAASjQ,eAC1B0b,EAAU,EACPA,EAAU/oB,GAAQ,CACvB,IAMIgpB,EANAvS,EAAQ6G,EAAS7G,MAAQ+I,EAAWuJ,EACpCE,EAAUjpB,EAAS+oB,EAEnBG,EAAa3Y,KAAK4Y,MAAM1S,EAAQgP,GAAIG,YACpCwD,EAAkB/b,EAAwB,QAAE6b,GAC5Cd,EAAiB/a,EAAsB,MAAE6b,GAE7C,GAAI7b,EAA0B,UAAE6b,GAAa,CAC3C,IAAIG,EAAQhc,EAA8B,cAAEic,QAAQJ,GACpD,GAAIG,GAAS,EACXL,EAAY3b,EAA6B,aAAEgc,OACtC,CAELhc,EAA8B,cAAEuW,MAChCvW,EAA8B,cAAEuH,QAAQsU,GACxCF,EAAY3b,EAA6B,aAAEuW,MAC3CvW,EAA6B,aAAEuH,QAAQoU,GACnC3b,EAAsB,QACxBgF,EAAI,uBAAyB6W,GAC7BhlB,EAA2B,oBAAKA,EAA2B,oBAAK,GAAK,GAEvE,IAAIikB,EAAa9a,EAAqB,KAAEsK,SAASyR,EAAiBA,EAAkBhB,GAEhFmB,EAAe9D,GAAII,MAAMyC,WAAWH,EAAYa,GAEhDE,EAAa7b,EAA0B,UAAErN,OAAO,GAAGmC,EAAOonB,IAAiB9D,GAAIG,WACrF,CACF,MAEEoD,EAAY3b,EAAqB,KAAEsK,SAASyR,EAAiBA,EAAkB3D,GAAIG,YAErF,IAAI4D,EAAe/S,EAAQgP,GAAIG,WAC3B6D,EAAalZ,KAAKsG,IAAI2S,EAAeP,EAASxD,GAAIG,YACtDljB,EAAOkK,IAAIoc,EAAUrR,SAAS6R,EAAcC,GAAajd,EAASuc,GAElEA,GADkBU,EAAaD,CAEjC,CACA,OAAOT,CACT,EACNrO,MAAK,WACG,MAAM,IAAIzE,GAAGgE,WAAW,GAC1B,EACN6C,OAAM,SAACjD,EAAQrN,EAAQkT,GACf,IAAIF,EAAWhT,EAQf,GAPe,IAAXkT,EACFF,GAAY3F,EAAO2F,SACC,IAAXE,GACLzJ,GAAGsH,OAAO1D,EAAOE,KAAKpb,QACxB6gB,GAAY3F,EAAOE,KAAK0E,MAGxBe,EAAW,EACb,MAAM,IAAIvJ,GAAGgE,WAAW,IAE1B,OAAOuF,CACT,IAGFvJ,GAAK,CACT3V,KAAK,KACLopB,OAAO,GACPC,QAAQ,CACR,EACAC,QAAQ,GACRC,UAAU,EACVC,UAAU,KACVC,YAAY,IACZC,aAAY,EACZC,mBAAkB,EAClBC,YAAY,KACZC,eAAe,EACfC,UAAU,CACV,EACAnQ,WAAUxH,GAQJ,SAAY4X,GAAO3X,EAAA,YAPZ,cAQLC,KAAK0X,MAAQA,CACf,IAENC,SAAQ,WACS,OAAA7X,GADT,WAAAC,EAAA,cACO,CAAC,EAAC,KAAA3T,IAAA,SAAAV,IACX,WACE,OAAOsU,KAAKoH,IACd,EAACnN,IACD,SAAWkH,GACTnB,KAAKoH,KAAOjG,CACd,GAAC,CAAA/U,IAAA,SAAAV,IACD,WACE,OAAkC,IAAb,QAAbsU,KAAKiN,MACf,GAAC,CAAA7gB,IAAA,UAAAV,IACD,WACE,SAAqB,QAAbsU,KAAKiN,MACf,GAAC,CAAA7gB,IAAA,WAAAV,IACD,WACE,OAAqB,KAAbsU,KAAKiN,KACf,GAAC,CAAA7gB,IAAA,QAAAV,IACD,WACE,OAAOsU,KAAK4X,OAAO3K,KACrB,EAAChT,IACD,SAAUkH,GACRnB,KAAK4X,OAAO3K,MAAQ9L,CACtB,GAAC,CAAA/U,IAAA,WAAAV,IACD,WACE,OAAOsU,KAAK4X,OAAO/K,QACrB,EAAC5S,IACD,SAAakH,GACXnB,KAAK4X,OAAO/K,SAAW1L,CACzB,IAAC,CA5BC,GA8BR0W,OAAM,WAiBC,OAAA/X,GAXD,SAAYwJ,EAAQle,EAAMY,EAAMqb,GAAMtH,EAAA,gBAL3B,CAAC,GAACA,EAAA,kBACA,CAAC,GAACA,EAAA,gBACJ,KAAQA,EAAA,iBACP,KAAGA,EAAA,eACL,MAEHuJ,IACHA,EAAStJ,MAEXA,KAAKsJ,OAASA,EACdtJ,KAAKoJ,MAAQE,EAAOF,MACpBpJ,KAAKyL,GAAKnI,GAAG4T,YACblX,KAAK5U,KAAOA,EACZ4U,KAAKhU,KAAOA,EACZgU,KAAKqH,KAAOA,EACZrH,KAAK4H,MAAQ5H,KAAKiI,MAAQjI,KAAKkI,MAAQL,KAAKC,KAC9C,GAAC,EAAA1b,IAAA,OAAAV,IACD,WACE,OAAQsU,KAAKhU,KAAOgU,KAAK8X,YAAc9X,KAAK8X,QAC9C,EAAC7d,IACD,SAASkH,GACPA,EAAMnB,KAAKhU,MAAQgU,KAAK8X,SAAW9X,KAAKhU,OAASgU,KAAK8X,QACxD,GAAC,CAAA1rB,IAAA,QAAAV,IACD,WACE,OAAQsU,KAAKhU,KAAOgU,KAAK+X,aAAe/X,KAAK+X,SAC/C,EAAC9d,IACD,SAAUkH,GACRA,EAAMnB,KAAKhU,MAAQgU,KAAK+X,UAAY/X,KAAKhU,OAASgU,KAAK+X,SACzD,GAAC,CAAA3rB,IAAA,WAAAV,IACD,WACE,OAAO4X,GAAGoH,MAAM1K,KAAKhU,KACvB,GAAC,CAAAI,IAAA,WAAAV,IACD,WACE,OAAO4X,GAAGyH,SAAS/K,KAAKhU,KAC1B,IAAC,CAnCD,GAqCNwlB,WAAU,SAAChf,GAAkB,IAADwlB,EAAX1I,EAAIlc,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnB,IAAKZ,EACH,MAAM,IAAI8Q,GAAGgE,WAAW,IAET,QAAjB0Q,EAAA1I,EAAK2I,oBAAY,IAAAD,IAAjB1I,EAAK2I,cAAiB,GAEjB5W,GAAKC,MAAM9O,KACdA,EAAO8Q,GAAGC,MAAQ,IAAM/Q,GAI1B0lB,EAAU,IAAK,IAAIC,EAAS,EAAGA,EAAS,GAAIA,IAAU,CAQpD,IANA,IAAIvW,EAAQpP,EAAK6P,MAAM,KAAKC,QAAO,SAAC3V,GAAC,QAAOA,CAAC,IAGzCyrB,EAAU9U,GAAG3V,KACb0qB,EAAe,IAEVxtB,EAAI,EAAGA,EAAI+W,EAAMvU,OAAQxC,IAAK,CACrC,IAAIytB,EAAUztB,IAAM+W,EAAMvU,OAAO,EACjC,GAAIirB,GAAUhJ,EAAKhG,OAEjB,MAGF,GAAiB,MAAb1H,EAAM/W,GAIV,GAAiB,OAAb+W,EAAM/W,GAAV,CAcAwtB,EAAehX,GAAKyB,MAAMuV,EAAczW,EAAM/W,IAC9C,IACEutB,EAAU9U,GAAGkJ,WAAW4L,EAASxW,EAAM/W,GACzC,CAAE,MAAOsH,GAIP,GAAkB,MAAbA,aAAC,EAADA,EAAGulB,QAAiBY,GAAUhJ,EAAKiJ,WACtC,MAAO,CAAE/lB,KAAM6lB,GAEjB,MAAMlmB,CACR,CASA,IANImR,GAAGkV,aAAaJ,IAAcE,IAAUhJ,EAAK2I,eAC/CG,EAAUA,EAAQK,QAAQ9qB,MAKxB2V,GAAGwH,OAAOsN,EAAQpsB,SAAWssB,GAAUhJ,EAAKoJ,QAAS,CACvD,IAAKN,EAAQ1O,SAASa,SACpB,MAAM,IAAIjH,GAAGgE,WAAW,IAE1B,IAAIgD,EAAO8N,EAAQ1O,SAASa,SAAS6N,GAChC/W,GAAKC,MAAMgJ,KACdA,EAAOjJ,GAAKmB,QAAQ6V,GAAgB,IAAM/N,GAE5C9X,EAAO8X,EAAO,IAAM1I,EAAM3D,MAAMpT,EAAI,GAAG0X,KAAK,KAC5C,SAAS2V,CACX,CAhCA,KAZA,CAEE,GADAG,EAAehX,GAAKmB,QAAQ6V,GACxB/U,GAAGqV,OAAOP,GAAU,CACtB5lB,EAAO6lB,EAAe,IAAMzW,EAAM3D,MAAMpT,EAAI,GAAG0X,KAAK,KAGpD4V,IACA,SAASD,CACX,CACEE,EAAUA,EAAQ9O,MAGtB,CAiCF,CACA,MAAO,CAAE9W,KAAM6lB,EAAcjR,KAAMgR,EACrC,CACA,MAAM,IAAI9U,GAAGgE,WAAW,GAC1B,EACJsR,QAAO,SAACxR,GAEF,IADA,IAAI5U,IACS,CACX,GAAI8Q,GAAGqV,OAAOvR,GAAO,CACnB,IAAIgC,EAAQhC,EAAKgC,MAAM2H,WACvB,OAAKve,EAC4B,MAA1B4W,EAAMA,EAAM/b,OAAO,GAAU,GAAAuG,OAAMwV,EAAK,KAAAxV,OAAIpB,GAAS4W,EAAQ5W,EADlD4W,CAEpB,CACA5W,EAAOA,EAAI,GAAAoB,OAAMwT,EAAKhc,KAAI,KAAAwI,OAAIpB,GAAS4U,EAAKhc,KAC5Cgc,EAAOA,EAAKkC,MACd,CACF,EACJuP,SAAQ,SAACC,EAAU1tB,GAGb,IAFA,IAAIspB,EAAO,EAEF7pB,EAAI,EAAGA,EAAIO,EAAKiC,OAAQxC,IAC/B6pB,GAASA,GAAQ,GAAKA,EAAOtpB,EAAKua,WAAW9a,GAAM,EAErD,OAASiuB,EAAWpE,IAAU,GAAKpR,GAAG6T,UAAU9pB,MAClD,EACJ0rB,YAAW,SAAC3R,GACN,IAAIsN,EAAOpR,GAAGuV,SAASzR,EAAKkC,OAAOmC,GAAIrE,EAAKhc,MAC5Cgc,EAAK4R,UAAY1V,GAAG6T,UAAUzC,GAC9BpR,GAAG6T,UAAUzC,GAAQtN,CACvB,EACJqF,eAAc,SAACrF,GACT,IAAIsN,EAAOpR,GAAGuV,SAASzR,EAAKkC,OAAOmC,GAAIrE,EAAKhc,MAC5C,GAAIkY,GAAG6T,UAAUzC,KAAUtN,EACzB9D,GAAG6T,UAAUzC,GAAQtN,EAAK4R,eAG1B,IADA,IAAIZ,EAAU9U,GAAG6T,UAAUzC,GACpB0D,GAAS,CACd,GAAIA,EAAQY,YAAc5R,EAAM,CAC9BgR,EAAQY,UAAY5R,EAAK4R,UACzB,KACF,CACAZ,EAAUA,EAAQY,SACpB,CAEJ,EACJxM,WAAU,SAAClD,EAAQle,GACb,IAAI6tB,EAAU3V,GAAG4V,UAAU5P,GAC3B,GAAI2P,EACF,MAAM,IAAI3V,GAAGgE,WAAW2R,GAG1B,IADA,IAAIvE,EAAOpR,GAAGuV,SAASvP,EAAOmC,GAAIrgB,GACzBgc,EAAO9D,GAAG6T,UAAUzC,GAAOtN,EAAMA,EAAOA,EAAK4R,UAEpD,GAAI5R,EAAKkC,OAAOmC,KAAOnC,EAAOmC,IADfrE,EAAKhc,OAC6BA,EAC/C,OAAOgc,EAIX,OAAO9D,GAAGsG,OAAON,EAAQle,EAC3B,EACJie,WAAU,SAACC,EAAQle,EAAMY,EAAMqb,GACzB,IAAID,EAAO,IAAI9D,GAAGuU,OAAOvO,EAAQle,EAAMY,EAAMqb,GAI7C,OAFA/D,GAAGyV,YAAY3R,GAERA,CACT,EACJ+R,YAAW,SAAC/R,GACN9D,GAAGmJ,eAAerF,EACpB,EACJuR,OAAM,SAACvR,GACD,OAAOA,IAASA,EAAKkC,MACvB,EACJkP,aAAY,SAACpR,GACP,QAASA,EAAKqR,OAChB,EACJ7N,OAAM,SAAC5e,GACD,OAA0B,QAAX,MAAPA,EACV,EACJ0e,MAAK,SAAC1e,GACA,OAA0B,QAAX,MAAPA,EACV,EACJ8e,OAAM,SAAC9e,GACD,OAA0B,QAAX,MAAPA,EACV,EACJ+e,SAAQ,SAAC/e,GACH,OAA0B,OAAX,MAAPA,EACV,EACJud,SAAQ,SAACvd,GACH,OAA0B,QAAX,MAAPA,EACV,EACJwd,OAAM,SAACxd,GACD,OAA0B,OAAX,MAAPA,EACV,EACJotB,SAAQ,SAACptB,GACH,QAA0B,OAAlBA,EACV,EACJqtB,wBAAuB,SAACC,GAClB,IAAIC,EAAQ,CAAC,IAAK,IAAK,MAAa,EAAPD,GAI7B,OAHY,IAAPA,IACHC,GAAS,KAEJA,CACT,EACJC,gBAAe,SAACpS,EAAMmS,GAChB,OAAIjW,GAAGgU,qBAIHiC,EAAME,SAAS,MAAsB,IAAZrS,EAAKpb,SAEvButB,EAAME,SAAS,MAAsB,IAAZrS,EAAKpb,SAE9ButB,EAAME,SAAS,MAAsB,GAAZrS,EAAKpb,MAPhC,EAIA,CAOX,EACJktB,UAAS,SAACzW,GACJ,IAAKa,GAAGoH,MAAMjI,EAAIzW,MAAO,OAAO,GAChC,IAAIitB,EAAU3V,GAAGkW,gBAAgB/W,EAAK,KACtC,OAAIwW,IACCxW,EAAIiH,SAASE,OACX,EAD0B,EAEnC,EACJ8P,UAAS,SAACjX,EAAKrX,GACT,IAAKkY,GAAGoH,MAAMjI,EAAIzW,MAChB,OAAO,GAET,IAEE,OADWsX,GAAGkJ,WAAW/J,EAAKrX,GACvB,EACT,CAAE,MAAO+G,GACT,CACA,OAAOmR,GAAGkW,gBAAgB/W,EAAK,KACjC,EACJkX,UAAS,SAAClX,EAAKrX,EAAMwuB,GACf,IAAIxS,EACJ,IACEA,EAAO9D,GAAGkJ,WAAW/J,EAAKrX,EAC5B,CAAE,MAAO+G,GACP,OAAOA,EAAEulB,KACX,CACA,IAAIuB,EAAU3V,GAAGkW,gBAAgB/W,EAAK,MACtC,GAAIwW,EACF,OAAOA,EAET,GAAIW,EAAO,CACT,IAAKtW,GAAGoH,MAAMtD,EAAKpb,MACjB,OAAO,GAET,GAAIsX,GAAGqV,OAAOvR,IAAS9D,GAAGsV,QAAQxR,KAAU9D,GAAGC,MAC7C,OAAO,EAEX,MACE,GAAID,GAAGoH,MAAMtD,EAAKpb,MAChB,OAAO,GAGX,OAAO,CACT,EACJ6tB,QAAO,SAACzS,EAAM6F,GACR,OAAK7F,EAGD9D,GAAGwH,OAAO1D,EAAKpb,MACV,GACEsX,GAAGoH,MAAMtD,EAAKpb,QACmB,MAAtCsX,GAAG+V,wBAAwBpM,IAClB,IAALA,GACC,GAGJ3J,GAAGkW,gBAAgBpS,EAAM9D,GAAG+V,wBAAwBpM,IAVlD,EAWX,EACJ6M,cAAa,SAACC,EAAI9nB,GACZ,IAAK8nB,EACH,MAAM,IAAIzW,GAAGgE,WAAWrV,GAE1B,OAAO8nB,CACT,EACJC,aAAa,KACbC,OAAM,WACA,IAAK,IAAIC,EAAK,EAAGA,GAAM5W,GAAG0W,aAAcE,IACtC,IAAK5W,GAAG2T,QAAQiD,GACd,OAAOA,EAGX,MAAM,IAAI5W,GAAGgE,WAAW,GAC1B,EACJ6S,iBAAgB,SAACD,GACX,IAAIhT,EAAS5D,GAAG8W,UAAUF,GAC1B,IAAKhT,EACH,MAAM,IAAI5D,GAAGgE,WAAW,GAE1B,OAAOJ,CACT,EACJkT,UAAU,SAACF,GAAE,OAAK5W,GAAG2T,QAAQiD,EAAG,EAChCG,aAAY,SAACnT,GAAkB,IAAVgT,EAAE9mB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,IAAI,EASrB,OANA8T,EAASoT,EAAc,IAAIhX,GAAGqU,SAAYzQ,IAC/B,GAAPgT,IACFA,EAAK5W,GAAG2W,UAEV/S,EAAOgT,GAAKA,EACZ5W,GAAG2T,QAAQiD,GAAMhT,EACVA,CACT,EACJqT,YAAW,SAACL,GACN5W,GAAG2T,QAAQiD,GAAM,IACnB,EACJM,UAAS,SAACC,GAAsB,IAADC,EAAAC,EACrBzT,EAAS5D,GAAG+W,aAAaI,EADXrnB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,IAAI,GAGtB,OADiB,QAAjBsnB,EAAAxT,EAAOD,kBAAU,IAAAyT,GAAK,QAALC,EAAjBD,EAAmBE,WAAG,IAAAD,GAAtBA,EAAA3vB,KAAA0vB,EAAyBxT,GAClBA,CACT,EACJ2T,UAAS,SAAC3T,EAAQE,EAAMoE,GAClB,IAAI7B,EAAUzC,aAAM,EAANA,EAAQD,WAAW0C,QAC7BmR,EAAMnR,EAAUzC,EAASE,EAC7BuC,YAAYvC,EAAKsC,SAASC,SAC1BrG,GAAGwW,cAAcnQ,EAAS,IAC1BA,EAAQmR,EAAKtP,EACf,EACJf,kBAAkB,CAClB7O,KAAI,SAACsL,GAAS,IAAD6T,EAAAC,EACDC,EAAS3X,GAAG4X,UAAUhU,EAAOE,KAAKC,MAEtCH,EAAOD,WAAagU,EAAOhU,WAEL,QAAtB8T,GAAAC,EAAA9T,EAAOD,YAAWrL,YAAI,IAAAmf,GAAtBA,EAAA/vB,KAAAgwB,EAAyB9T,EAC3B,EACNiD,OAAM,WACE,MAAM,IAAI7G,GAAGgE,WAAW,GAC1B,GAEN6T,MAAM,SAACvU,GAAG,OAAOA,GAAQ,CAAC,EAC1BwU,MAAM,SAACxU,GAAG,OAAc,IAAPA,CAAW,EAC5ByU,QAAQ,SAACC,EAAIC,GAAE,OAAOD,GAAO,EAAKC,CAAG,EACrCvU,eAAc,SAACJ,EAAKC,GACdvD,GAAG0T,QAAQpQ,GAAO,CAAEK,WAAYJ,EAClC,EACJqU,UAAU,SAACtU,GAAG,OAAKtD,GAAG0T,QAAQpQ,EAAI,EAClC4U,UAAS,SAACpS,GAIJ,IAHA,IAAI2N,EAAS,GACT5c,EAAQ,CAACiP,GAENjP,EAAM9M,QAAQ,CACnB,IAAIpC,EAAIkP,EAAM8W,MAEd8F,EAAO7d,KAAKjO,GAEZkP,EAAMjB,KAAI/F,MAAVgH,EAAK4G,EAAS9V,EAAE8rB,QAClB,CAEA,OAAOA,CACT,EACJ7H,OAAM,SAACY,EAAUle,GAeX,SAAS6pB,EAAWxC,GAElB,OADA3V,GAAGkU,iBACI5lB,EAASqnB,EAClB,CAEA,SAASlgB,EAAKkgB,GACZ,GAAIA,EACF,OAAKlgB,EAAKuZ,aAIV,GAHEvZ,EAAKuZ,SAAU,EACRmJ,EAAWxC,MAIhByC,GAAa3E,EAAO1pB,QACxBouB,EAAW,KAEf,CA9BuB,mBAAZ3L,IACTle,EAAWke,EACXA,GAAW,GAGbxM,GAAGkU,iBAEClU,GAAGkU,eAAiB,GACtBvlB,EAAI,YAAD2B,OAAa0P,GAAGkU,eAAc,4EAGnC,IAAIT,EAASzT,GAAGkY,UAAUlY,GAAG3V,KAAKyb,OAC9BsS,EAAY,EAqBhB3E,EAAO3I,SAAQ,SAAChF,GACd,IAAKA,EAAM1S,KAAKwY,OACd,OAAOnW,EAAK,MAEdqQ,EAAM1S,KAAKwY,OAAO9F,EAAO0G,EAAU/W,EACrC,GACF,EACJqQ,MAAK,SAAC1S,EAAM4Y,EAAMyB,GACZ,IAEI3J,EAFAzZ,EAAsB,MAAfojB,EACP4K,GAAU5K,EAGd,GAAIpjB,GAAQ2V,GAAG3V,KACb,MAAM,IAAI2V,GAAGgE,WAAW,IACnB,IAAK3Z,IAASguB,EAAQ,CAC3B,IAAI/R,EAAStG,GAAGkO,WAAWT,EAAY,CAAEkH,cAAc,IAKvD,GAHAlH,EAAanH,EAAOpX,KAGhB8Q,GAAGkV,aAFPpR,EAAOwC,EAAOxC,MAGZ,MAAM,IAAI9D,GAAGgE,WAAW,IAG1B,IAAKhE,GAAGoH,MAAMtD,EAAKpb,MACjB,MAAM,IAAIsX,GAAGgE,WAAW,GAE5B,CAEA,IAAI8B,EAAQ,CACV1S,OACA4Y,OACAyB,aACAgG,OAAQ,IAIN6E,EAAYllB,EAAK0S,MAAMA,GAgB3B,OAfAwS,EAAUxS,MAAQA,EAClBA,EAAMzb,KAAOiuB,EAETjuB,EACF2V,GAAG3V,KAAOiuB,EACDxU,IAETA,EAAKqR,QAAUrP,EAGXhC,EAAKgC,OACPhC,EAAKgC,MAAM2N,OAAO7d,KAAKkQ,IAIpBwS,CACT,EACJC,QAAO,SAAC9K,GACF,IAAInH,EAAStG,GAAGkO,WAAWT,EAAY,CAAEkH,cAAc,IAEvD,IAAK3U,GAAGkV,aAAa5O,EAAOxC,MAC1B,MAAM,IAAI9D,GAAGgE,WAAW,IAI1B,IAAIF,EAAOwC,EAAOxC,KACdgC,EAAQhC,EAAKqR,QACb1B,EAASzT,GAAGkY,UAAUpS,GAE1B7d,OAAOmhB,KAAKpJ,GAAG6T,WAAW/I,SAAQ,SAACsG,GAGjC,IAFA,IAAI0D,EAAU9U,GAAG6T,UAAUzC,GAEpB0D,GAAS,CACd,IAAI0D,EAAO1D,EAAQY,UAEfjC,EAAO0C,SAASrB,EAAQhP,QAC1B9F,GAAG6V,YAAYf,GAGjBA,EAAU0D,CACZ,CACF,IAGA1U,EAAKqR,QAAU,KAGf,IAAIhU,EAAM2C,EAAKgC,MAAM2N,OAAOJ,QAAQvN,GACpChC,EAAKgC,MAAM2N,OAAO/U,OAAOyC,EAAK,EAChC,EACJmF,OAAM,SAACN,EAAQle,GACT,OAAOke,EAAOI,SAASE,OAAON,EAAQle,EACxC,EACJye,MAAK,SAACrX,EAAMxG,EAAM4a,GACZ,IACI0C,EADShG,GAAGkO,WAAWhf,EAAM,CAAE8W,QAAQ,IACvBlC,KAChBhc,EAAOiW,GAAKqB,SAASlQ,GACzB,IAAKpH,EACH,MAAM,IAAIkY,GAAGgE,WAAW,IAE1B,GAAa,MAATlc,GAAyB,OAATA,EAClB,MAAM,IAAIkY,GAAGgE,WAAW,IAE1B,IAAI2R,EAAU3V,GAAGoW,UAAUpQ,EAAQle,GACnC,GAAI6tB,EACF,MAAM,IAAI3V,GAAGgE,WAAW2R,GAE1B,IAAK3P,EAAOI,SAASG,MACnB,MAAM,IAAIvG,GAAGgE,WAAW,IAE1B,OAAOgC,EAAOI,SAASG,MAAMP,EAAQle,EAAMY,EAAM4a,EACnD,EACJmV,OAAM,SAACvpB,GACD,OAAO8Q,GAAG0Y,WAAW1Y,GAAGkO,WAAWhf,EAAM,CAACkmB,QAAQ,IAAOtR,KAC3D,EACJ6U,aAAY,SAAC/U,GAIP,OAAO5D,GAAG0Y,WAAW9U,EAAOE,KAC9B,EACJ4U,WAAU,SAAC5U,GAIL,IAAIxG,EAAM,CACRsb,MAAO,KACPC,OAAQ,KACRnQ,OAAQ,IACRoQ,MAAO,IACPC,OAAQ,IACRvG,MAAOxS,GAAG4T,UACVoF,MAAOhZ,GAAG4T,UAAY,EACtBqF,KAAM,GACNtP,MAAO,EACPuP,QAAS,KAMX,OAHIpV,EAAKsC,SAASqS,QAChBzB,EAAc1Z,EAAKwG,EAAKsC,SAASqS,OAAO3U,EAAKgC,MAAMkG,KAAK3hB,OAEnDiT,CACT,EACJzU,OAAM,SAACqG,GAAqB,IAAfxG,EAAIoH,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG,IAGd,OAFApH,GAAQ,KAEDsX,GAAGuG,MAAMrX,EADhBxG,GAAQ,MACoB,EAC9B,EACJ6jB,MAAK,SAACrd,GAAqB,IAAfxG,EAAIoH,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG,IAGb,OAFApH,GAAQ,KAEDsX,GAAGuG,MAAMrX,EADhBxG,GAAQ,MACoB,EAC9B,EACJ2lB,UAAS,SAACnf,EAAMxG,GACV,IAEoBywB,EADhBtxB,EAAI,GAAGuxB,EAAAC,EADAnqB,EAAK6P,MAAM,MAEF,IAApB,IAAAqa,EAAA9vB,MAAA6vB,EAAAC,EAAApwB,KAAAyM,MAAsB,CAAC,IAAd0J,EAAGga,EAAA3wB,MACV,GAAK2W,EAAL,EACItX,GAAKkW,GAAKC,MAAM9O,MAAOrH,GAAK,KAChCA,GAAKsX,EACL,IACEa,GAAGuM,MAAM1kB,EAAGa,EACd,CAAE,MAAMmG,GACN,GAAe,IAAXA,EAAEulB,MAAa,MAAMvlB,CAC3B,CAPkB,CAQpB,CAAC,OAAAF,GAAAyqB,EAAAvqB,EAAAF,EAAA,SAAAyqB,EAAAE,GAAA,CACH,EACJC,MAAK,SAACrqB,EAAMxG,EAAM4a,GAMZ,YALkB,IAAPA,IACTA,EAAM5a,EACNA,EAAO,KAGFsX,GAAGuG,MAAMrX,EADhBxG,GAAQ,KACoB4a,EAC9B,EACJsD,QAAO,SAAC0C,EAASkQ,GACX,IAAK3Z,GAAQnN,QAAQ4W,GACnB,MAAM,IAAItJ,GAAGgE,WAAW,IAE1B,IACIgC,EADShG,GAAGkO,WAAWsL,EAAS,CAAExT,QAAQ,IAC1BlC,KACpB,IAAKkC,EACH,MAAM,IAAIhG,GAAGgE,WAAW,IAE1B,IAAIqF,EAAUtL,GAAKqB,SAASoa,GACxB7D,EAAU3V,GAAGoW,UAAUpQ,EAAQqD,GACnC,GAAIsM,EACF,MAAM,IAAI3V,GAAGgE,WAAW2R,GAE1B,IAAK3P,EAAOI,SAASQ,QACnB,MAAM,IAAI5G,GAAGgE,WAAW,IAE1B,OAAOgC,EAAOI,SAASQ,QAAQZ,EAAQqD,EAASC,EAClD,EACJ9C,OAAM,SAACiT,EAAUC,GACX,IAKYC,EAAS5Q,EALjB6Q,EAAc7b,GAAKmB,QAAQua,GAC3BI,EAAc9b,GAAKmB,QAAQwa,GAC3BI,EAAW/b,GAAKqB,SAASqa,GACzBzQ,EAAWjL,GAAKqB,SAASsa,GAU7B,GAJAC,EADS3Z,GAAGkO,WAAWuL,EAAU,CAAEzT,QAAQ,IAC1BlC,KAEjBiF,EADS/I,GAAGkO,WAAWwL,EAAU,CAAE1T,QAAQ,IAC1BlC,MAEZ6V,IAAY5Q,EAAS,MAAM,IAAI/I,GAAGgE,WAAW,IAElD,GAAI2V,EAAQ7T,QAAUiD,EAAQjD,MAC5B,MAAM,IAAI9F,GAAGgE,WAAW,IAG1B,IAYIiF,EAZAH,EAAW9I,GAAGkJ,WAAWyQ,EAASG,GAElC3Z,EAAWN,GAAQM,SAASsZ,EAAUI,GAC1C,GAA2B,MAAvB1Z,EAASlC,OAAO,GAClB,MAAM,IAAI+B,GAAGgE,WAAW,IAI1B,GAA2B,OAD3B7D,EAAWN,GAAQM,SAASuZ,EAAUE,IACzB3b,OAAO,GAClB,MAAM,IAAI+B,GAAGgE,WAAW,IAI1B,IACEiF,EAAWjJ,GAAGkJ,WAAWH,EAASC,EACpC,CAAE,MAAOna,GACP,CAGF,GAAIia,IAAaG,EAAjB,CAIA,IAAIqN,EAAQtW,GAAGoH,MAAM0B,EAASpgB,MAC1BitB,EAAU3V,GAAGqW,UAAUsD,EAASG,EAAUxD,GAC9C,GAAIX,EACF,MAAM,IAAI3V,GAAGgE,WAAW2R,GAO1B,GAHAA,EAAU1M,EACRjJ,GAAGqW,UAAUtN,EAASC,EAAUsN,GAChCtW,GAAGoW,UAAUrN,EAASC,GAEtB,MAAM,IAAIhJ,GAAGgE,WAAW2R,GAE1B,IAAKgE,EAAQvT,SAASI,OACpB,MAAM,IAAIxG,GAAGgE,WAAW,IAE1B,GAAIhE,GAAGkV,aAAapM,IAAcG,GAAYjJ,GAAGkV,aAAajM,GAC5D,MAAM,IAAIjJ,GAAGgE,WAAW,IAG1B,GAAI+E,IAAY4Q,IACdhE,EAAU3V,GAAGkW,gBAAgByD,EAAS,MAEpC,MAAM,IAAI3Z,GAAGgE,WAAW2R,GAI5B3V,GAAGmJ,eAAeL,GAElB,IACE6Q,EAAQvT,SAASI,OAAOsC,EAAUC,EAASC,GAG3CF,EAAS9C,OAAS+C,CACpB,CAAE,MAAOla,GACP,MAAMA,CACR,CAAC,QAGCmR,GAAGyV,YAAY3M,EACjB,CA1CA,CA2CF,EACJpC,MAAK,SAACxX,GACA,IACI8W,EADShG,GAAGkO,WAAWhf,EAAM,CAAE8W,QAAQ,IACvBlC,KAChBhc,EAAOiW,GAAKqB,SAASlQ,GACrB4U,EAAO9D,GAAGkJ,WAAWlD,EAAQle,GAC7B6tB,EAAU3V,GAAGqW,UAAUrQ,EAAQle,GAAM,GACzC,GAAI6tB,EACF,MAAM,IAAI3V,GAAGgE,WAAW2R,GAE1B,IAAK3P,EAAOI,SAASM,MACnB,MAAM,IAAI1G,GAAGgE,WAAW,IAE1B,GAAIhE,GAAGkV,aAAapR,GAClB,MAAM,IAAI9D,GAAGgE,WAAW,IAE1BgC,EAAOI,SAASM,MAAMV,EAAQle,GAC9BkY,GAAG6V,YAAY/R,EACjB,EACJ6C,QAAO,SAACzX,GACF,IACI4U,EADS9D,GAAGkO,WAAWhf,EAAM,CAAEkmB,QAAQ,IACzBtR,KACd6C,EAAU3G,GAAGwW,cAAc1S,EAAKsC,SAASO,QAAS,IACtD,OAAOA,EAAQ7C,EACjB,EACJ2C,OAAM,SAACvX,GACD,IACI8W,EADShG,GAAGkO,WAAWhf,EAAM,CAAE8W,QAAQ,IACvBlC,KACpB,IAAKkC,EACH,MAAM,IAAIhG,GAAGgE,WAAW,IAE1B,IAAIlc,EAAOiW,GAAKqB,SAASlQ,GACrB4U,EAAO9D,GAAGkJ,WAAWlD,EAAQle,GAC7B6tB,EAAU3V,GAAGqW,UAAUrQ,EAAQle,GAAM,GACzC,GAAI6tB,EAIF,MAAM,IAAI3V,GAAGgE,WAAW2R,GAE1B,IAAK3P,EAAOI,SAASK,OACnB,MAAM,IAAIzG,GAAGgE,WAAW,IAE1B,GAAIhE,GAAGkV,aAAapR,GAClB,MAAM,IAAI9D,GAAGgE,WAAW,IAE1BgC,EAAOI,SAASK,OAAOT,EAAQle,GAC/BkY,GAAG6V,YAAY/R,EACjB,EACJmD,SAAQ,SAAC/X,GACH,IACI8X,EADShH,GAAGkO,WAAWhf,GACT4U,KAClB,IAAKkD,EACH,MAAM,IAAIhH,GAAGgE,WAAW,IAE1B,IAAKgD,EAAKZ,SAASa,SACjB,MAAM,IAAIjH,GAAGgE,WAAW,IAE1B,OAAOgD,EAAKZ,SAASa,SAASD,EAChC,EACJ0G,KAAI,SAACxe,EAAM6qB,GACL,IACIjW,EADS9D,GAAGkO,WAAWhf,EAAM,CAAEkmB,QAAS2E,IAC1BjW,KAElB,OADc9D,GAAGwW,cAAc1S,EAAKsC,SAASD,QAAS,GAC/CA,CAAQrC,EACjB,EACJkW,MAAK,SAACpD,GACA,IAAIhT,EAAS5D,GAAG6W,iBAAiBD,GAC7B9S,EAAOF,EAAOE,KACdqC,EAAUvC,EAAOD,WAAWwC,QAC5BqR,EAAMrR,EAAUvC,EAASE,EAG7B,OAFAqC,YAAYrC,EAAKsC,SAASD,SAC1BnG,GAAGwW,cAAcrQ,EAAS,IACnBA,EAAQqR,EACjB,EACJyC,MAAK,SAAC/qB,GACA,OAAO8Q,GAAG0N,KAAKxe,GAAM,EACvB,EACJgrB,QAAO,SAACtW,EAAQE,EAAMpb,EAAMqxB,GACtB/Z,GAAGuX,UAAU3T,EAAQE,EAAM,CACzBpb,KAAc,KAAPA,GAA4B,KAAZob,EAAKpb,KAC5Bkc,MAAOL,KAAKC,MACZuV,cAEJ,EACJxL,MAAK,SAACrf,EAAMxG,EAAMqxB,GACZ,IAAIjW,EAGFA,EAFiB,iBAAR5U,EACI8Q,GAAGkO,WAAWhf,EAAM,CAAEkmB,QAAS2E,IAC9BjW,KAEP5U,EAET8Q,GAAGka,QAAQ,KAAMpW,EAAMpb,EAAMqxB,EAC/B,EACJI,OAAM,SAACjrB,EAAMxG,GACPsX,GAAGuO,MAAMrf,EAAMxG,GAAM,EACvB,EACJ0xB,OAAM,SAACxD,EAAIluB,GACL,IAAIkb,EAAS5D,GAAG6W,iBAAiBD,GACjC5W,GAAGka,QAAQtW,EAAQA,EAAOE,KAAMpb,GAAM,EACxC,EACJ2xB,QAAO,SAACzW,EAAQE,EAAMiW,GAChB/Z,GAAGuX,UAAU3T,EAAQE,EAAM,CACzBwW,UAAW/V,KAAKC,MAChBuV,cAGJ,EACJQ,MAAK,SAACrrB,EAAMoZ,EAAKC,EAAKwR,GAChB,IAAIjW,EAGFA,EAFiB,iBAAR5U,EACI8Q,GAAGkO,WAAWhf,EAAM,CAAEkmB,QAAS2E,IAC9BjW,KAEP5U,EAET8Q,GAAGqa,QAAQ,KAAMvW,EAAMiW,EACzB,EACJS,OAAM,SAACtrB,EAAMoZ,EAAKC,GACZvI,GAAGua,MAAMrrB,EAAMoZ,EAAKC,GAAK,EAC3B,EACJkS,OAAM,SAAC7D,GACD,IAAIhT,EAAS5D,GAAG6W,iBAAiBD,GACjC5W,GAAGqa,QAAQzW,EAAQA,EAAOE,MAAM,EAClC,EACJ4W,WAAU,SAAC9W,EAAQE,EAAM1B,GACnB,GAAIpC,GAAGoH,MAAMtD,EAAKpb,MAChB,MAAM,IAAIsX,GAAGgE,WAAW,IAE1B,IAAKhE,GAAGsH,OAAOxD,EAAKpb,MAClB,MAAM,IAAIsX,GAAGgE,WAAW,IAE1B,IAAI2R,EAAU3V,GAAGkW,gBAAgBpS,EAAM,KACvC,GAAI6R,EACF,MAAM,IAAI3V,GAAGgE,WAAW2R,GAE1B3V,GAAGuX,UAAU3T,EAAQE,EAAM,CACzB0E,KAAMpG,EACNkY,UAAW/V,KAAKC,OAEpB,EACJmW,SAAQ,SAACzrB,EAAMkT,GACT,GAAIA,EAAM,EACR,MAAM,IAAIpC,GAAGgE,WAAW,IAE1B,IAAIF,EAGFA,EAFiB,iBAAR5U,EACI8Q,GAAGkO,WAAWhf,EAAM,CAAEkmB,QAAQ,IAC7BtR,KAEP5U,EAET8Q,GAAG0a,WAAW,KAAM5W,EAAM1B,EAC5B,EACJwY,UAAS,SAAChE,EAAIxU,GACR,IAAIwB,EAAS5D,GAAG6W,iBAAiBD,GACjC,GAAIxU,EAAM,KAAqB,QAAfwB,EAAO+F,OACrB,MAAM,IAAI3J,GAAGgE,WAAW,IAE1BhE,GAAG0a,WAAW9W,EAAQA,EAAOE,KAAM1B,EACrC,EACJoM,MAAK,SAACtf,EAAMoV,EAAOK,GACb,IACIb,EADS9D,GAAGkO,WAAWhf,EAAM,CAAEkmB,QAAQ,IACzBtR,KACJ9D,GAAGwW,cAAc1S,EAAKsC,SAASC,QAAS,GACtDA,CAAQvC,EAAM,CACZQ,MAAOA,EACPK,MAAOA,GAEX,EACJrM,KAAI,SAACpJ,EAAMya,GAAsB,IAUvB7F,EACA+W,EAXQnyB,EAAIoH,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG,IACnB,GAAa,KAATZ,EACF,MAAM,IAAI8Q,GAAGgE,WAAW,IAU1B,GANEtb,EADW,IADbihB,EAAwB,iBAATA,EArzDM,SAAChI,GACxB,IAQIgI,EARY,CACd,EAAK,EACL,KAAM,EACN,EAAK,IACL,KAAM,IACN,EAAK,KACL,KAAM,MAEchI,GACtB,QAAoB,IAATgI,EACT,MAAM,IAAIrV,MAAM,2BAADhE,OAA4BqR,IAE7C,OAAOgI,CACT,CAuyDuCmR,CAAqBnR,GAASA,GAEhD,KAAPjhB,EAAe,MAEhB,EAIU,UAAf2O,EAAOnI,GACT4U,EAAO5U,MACF,CACL2rB,EAAY3rB,EAAKmE,SAAS,KAI1B,IAAIiT,EAAStG,GAAGkO,WAAWhf,EAAM,CAC/BkmB,SAAkB,OAARzL,GACVsL,YAAY,IAEdnR,EAAOwC,EAAOxC,KACd5U,EAAOoX,EAAOpX,IAChB,CAEA,IAAI6rB,GAAU,EACd,GAAa,GAARpR,EACH,GAAI7F,GAEF,GAAa,IAAR6F,EACH,MAAM,IAAI3J,GAAGgE,WAAW,QAErB,IAAI6W,EACT,MAAM,IAAI7a,GAAGgE,WAAW,IAMxBF,EAAO9D,GAAGuG,MAAMrX,EAAa,IAAPxG,EAAc,GACpCqyB,GAAU,CACZ,CAEF,IAAKjX,EACH,MAAM,IAAI9D,GAAGgE,WAAW,IAO1B,GAJIhE,GAAGyH,SAAS3D,EAAKpb,QACnBihB,IAAS,KAGE,MAARA,IAAmB3J,GAAGoH,MAAMtD,EAAKpb,MACpC,MAAM,IAAIsX,GAAGgE,WAAW,IAK1B,IAAK+W,EAAS,CACZ,IAAIpF,EAAU3V,GAAGuW,QAAQzS,EAAM6F,GAC/B,GAAIgM,EACF,MAAM,IAAI3V,GAAGgE,WAAW2R,EAE5B,CAEa,IAARhM,IAAiBoR,GACpB/a,GAAG2a,SAAS7W,EAAM,GAGpB6F,IAAS,OAGT,IAAI/F,EAAS5D,GAAG+W,aAAa,CAC3BjT,OACA5U,KAAM8Q,GAAGsV,QAAQxR,GACjB6F,QACA1F,UAAU,EACVsF,SAAU,EACV5F,WAAYG,EAAKH,WAEjBqX,SAAU,GACVxjB,OAAO,IAcT,OAXIoM,EAAOD,WAAWrL,MACpBsL,EAAOD,WAAWrL,KAAKsL,GAErBmX,GACF/a,GAAGuO,MAAMzK,EAAa,IAAPpb,IAEbuF,EAAqB,cAAe,EAAR0b,GACxBza,KAAQ8Q,GAAGmU,YACfnU,GAAGmU,UAAUjlB,GAAQ,GAGlB0U,CACT,EACJM,MAAK,SAACN,GACA,GAAI5D,GAAGib,SAASrX,GACd,MAAM,IAAI5D,GAAGgE,WAAW,GAEtBJ,EAAOsX,WAAUtX,EAAOsX,SAAW,MACvC,IACMtX,EAAOD,WAAWO,OACpBN,EAAOD,WAAWO,MAAMN,EAE5B,CAAE,MAAO/U,GACP,MAAMA,CACR,CAAC,QACCmR,GAAGiX,YAAYrT,EAAOgT,GACxB,CACAhT,EAAOgT,GAAK,IACd,EACJqE,SAAQ,SAACrX,GACH,OAAqB,OAAdA,EAAOgT,EAChB,EACJ/P,OAAM,SAACjD,EAAQrN,EAAQkT,GACjB,GAAIzJ,GAAGib,SAASrX,GACd,MAAM,IAAI5D,GAAGgE,WAAW,GAE1B,IAAKJ,EAAOK,WAAaL,EAAOD,WAAWkD,OACzC,MAAM,IAAI7G,GAAGgE,WAAW,IAE1B,GAAc,GAAVyF,GAAyB,GAAVA,GAAyB,GAAVA,EAChC,MAAM,IAAIzJ,GAAGgE,WAAW,IAI1B,OAFAJ,EAAO2F,SAAW3F,EAAOD,WAAWkD,OAAOjD,EAAQrN,EAAQkT,GAC3D7F,EAAOoX,SAAW,GACXpX,EAAO2F,QAChB,EACJtU,KAAI,SAAC2O,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,GAC/B,GAAIxf,EAAS,GAAKwf,EAAW,EAC3B,MAAM,IAAIvJ,GAAGgE,WAAW,IAE1B,GAAIhE,GAAGib,SAASrX,GACd,MAAM,IAAI5D,GAAGgE,WAAW,GAE1B,GAAiC,IAAb,QAAfJ,EAAO+F,OACV,MAAM,IAAI3J,GAAGgE,WAAW,GAE1B,GAAIhE,GAAGoH,MAAMxD,EAAOE,KAAKpb,MACvB,MAAM,IAAIsX,GAAGgE,WAAW,IAE1B,IAAKJ,EAAOD,WAAW1O,KACrB,MAAM,IAAI+K,GAAGgE,WAAW,IAE1B,IAAImX,OAA6B,IAAZ5R,EACrB,GAAK4R,GAEE,IAAKvX,EAAOK,SACjB,MAAM,IAAIjE,GAAGgE,WAAW,SAFxBuF,EAAW3F,EAAO2F,SAIpB,IAAIlF,EAAYT,EAAOD,WAAW1O,KAAK2O,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,GAEvE,OADK4R,IAASvX,EAAO2F,UAAYlF,GAC1BA,CACT,EACJI,MAAK,SAACb,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,EAAUC,GAC1C,GAAIzf,EAAS,GAAKwf,EAAW,EAC3B,MAAM,IAAIvJ,GAAGgE,WAAW,IAE1B,GAAIhE,GAAGib,SAASrX,GACd,MAAM,IAAI5D,GAAGgE,WAAW,GAE1B,KAAoB,QAAfJ,EAAO+F,OACV,MAAM,IAAI3J,GAAGgE,WAAW,GAE1B,GAAIhE,GAAGoH,MAAMxD,EAAOE,KAAKpb,MACvB,MAAM,IAAIsX,GAAGgE,WAAW,IAE1B,IAAKJ,EAAOD,WAAWc,MACrB,MAAM,IAAIzE,GAAGgE,WAAW,IAEtBJ,EAAOK,UAA2B,KAAfL,EAAO+F,OAE5B3J,GAAG6G,OAAOjD,EAAQ,EAAG,GAEvB,IAAIuX,OAA6B,IAAZ5R,EACrB,GAAK4R,GAEE,IAAKvX,EAAOK,SACjB,MAAM,IAAIjE,GAAGgE,WAAW,SAFxBuF,EAAW3F,EAAO2F,SAIpB,IAAI6R,EAAexX,EAAOD,WAAWc,MAAMb,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,EAAUC,GAErF,OADK2R,IAASvX,EAAO2F,UAAY6R,GAC1BA,CACT,EACJtU,KAAI,SAAClD,EAAQ7Z,EAAQwf,EAAUG,EAAMC,GAO/B,GAAY,EAAPD,KACW,EAARC,IAC4B,IAAb,QAAf/F,EAAO+F,OACb,MAAM,IAAI3J,GAAGgE,WAAW,GAE1B,GAAiC,IAAb,QAAfJ,EAAO+F,OACV,MAAM,IAAI3J,GAAGgE,WAAW,GAE1B,IAAKJ,EAAOD,WAAWmD,KACrB,MAAM,IAAI9G,GAAGgE,WAAW,IAE1B,IAAKja,EACH,MAAM,IAAIiW,GAAGgE,WAAW,IAE1B,OAAOJ,EAAOD,WAAWmD,KAAKlD,EAAQ7Z,EAAQwf,EAAUG,EAAMC,EAChE,EACJ5C,MAAK,SAACnD,EAAQnX,EAAQ8J,EAAQxM,EAAQsxB,GAChC,OAAKzX,EAAOD,WAAWoD,MAGhBnD,EAAOD,WAAWoD,MAAMnD,EAAQnX,EAAQ8J,EAAQxM,EAAQsxB,GAFtD,CAGX,EACJC,MAAK,SAAC1X,EAAQ2X,EAAK/D,GACb,IAAK5T,EAAOD,WAAW2X,MACrB,MAAM,IAAItb,GAAGgE,WAAW,IAE1B,OAAOJ,EAAOD,WAAW2X,MAAM1X,EAAQ2X,EAAK/D,EAC9C,EACJ7E,SAAQ,SAACzjB,GAAkB,IAAZ8c,EAAIlc,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGjB,GAFAkc,EAAKrC,MAAQqC,EAAKrC,OAAS,EAC3BqC,EAAKwP,SAAWxP,EAAKwP,UAAY,SACX,SAAlBxP,EAAKwP,UAAyC,WAAlBxP,EAAKwP,SACnC,MAAM,IAAIlnB,MAAM,0BAADhE,OAA2B0b,EAAKwP,SAAQ,MAEzD,IAAI5X,EAAS5D,GAAG1H,KAAKpJ,EAAM8c,EAAKrC,OAE5B5f,EADOiW,GAAG0N,KAAKxe,GACDsZ,KACdiT,EAAM,IAAI1uB,WAAWhD,GAMzB,OALAiW,GAAG/K,KAAK2O,EAAQ6X,EAAK,EAAG1xB,EAAQ,GACV,SAAlBiiB,EAAKwP,WACPC,EAAMxa,GAAkBwa,IAE1Bzb,GAAGkE,MAAMN,GACF6X,CACT,EACJnN,UAAS,SAACpf,EAAM0iB,GAAkB,IAAZ5F,EAAIlc,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxBkc,EAAKrC,MAAQqC,EAAKrC,OAAS,IAC3B,IAAI/F,EAAS5D,GAAG1H,KAAKpJ,EAAM8c,EAAKrC,MAAOqC,EAAKtjB,MAI5C,GAHmB,iBAARkpB,IACTA,EAAO,IAAI7kB,WAAW+V,GAAmB8O,GAAM,MAE7C1a,YAAYwkB,OAAO9J,GAGrB,MAAM,IAAItd,MAAM,yBAFhB0L,GAAGyE,MAAMb,EAAQgO,EAAM,EAAGA,EAAK7X,gBAAY/N,EAAWggB,EAAKxC,QAI7DxJ,GAAGkE,MAAMN,EACX,EACJ3D,IAAI,WAAD,OAAOD,GAAG8T,WAAW,EACxB6H,MAAK,SAACzsB,GACA,IAAIoX,EAAStG,GAAGkO,WAAWhf,EAAM,CAAEkmB,QAAQ,IAC3C,GAAoB,OAAhB9O,EAAOxC,KACT,MAAM,IAAI9D,GAAGgE,WAAW,IAE1B,IAAKhE,GAAGoH,MAAMd,EAAOxC,KAAKpb,MACxB,MAAM,IAAIsX,GAAGgE,WAAW,IAE1B,IAAI2R,EAAU3V,GAAGkW,gBAAgB5P,EAAOxC,KAAM,KAC9C,GAAI6R,EACF,MAAM,IAAI3V,GAAGgE,WAAW2R,GAE1B3V,GAAG8T,YAAcxN,EAAOpX,IAC1B,EACJ0sB,yBAAwB,WAClB5b,GAAGuM,MAAM,QACTvM,GAAGuM,MAAM,SACTvM,GAAGuM,MAAM,iBACX,EACJsP,qBAAoB,WAEd7b,GAAGuM,MAAM,QAETvM,GAAG0D,eAAe1D,GAAG+X,QAAQ,EAAG,GAAI,CAClC9iB,KAAM,WAAF,OAAQ,CAAC,EACbwP,MAAO,SAACb,EAAQnX,EAAQ8J,EAAQxM,GAAW,OAAKA,CAAM,EACtD8c,OAAQ,WAAF,OAAQ,CAAC,IAEjB7G,GAAGuZ,MAAM,YAAavZ,GAAG+X,QAAQ,EAAG,IAIpC5U,GAAIjZ,SAAS8V,GAAG+X,QAAQ,EAAG,GAAI5U,GAAI0B,iBACnC1B,GAAIjZ,SAAS8V,GAAG+X,QAAQ,EAAG,GAAI5U,GAAIsC,kBACnCzF,GAAGuZ,MAAM,WAAYvZ,GAAG+X,QAAQ,EAAG,IACnC/X,GAAGuZ,MAAM,YAAavZ,GAAG+X,QAAQ,EAAG,IAGpC,IAAI+D,EAAe,IAAI/uB,WAAW,MAAOgvB,EAAa,EAClDC,EAAa,WAKf,OAJmB,IAAfD,IACFtc,GAAWqc,GACXC,EAAaD,EAAa/hB,YAErB+hB,IAAeC,EACxB,EACA/b,GAAGic,aAAa,OAAQ,SAAUD,GAClChc,GAAGic,aAAa,OAAQ,UAAWD,GAGnChc,GAAGuM,MAAM,YACTvM,GAAGuM,MAAM,eACX,EACJ2P,yBAAwB,WAGlBlc,GAAGuM,MAAM,SACT,IAAI4P,EAAYnc,GAAGuM,MAAM,cACzBvM,GAAGuM,MAAM,iBACTvM,GAAG8F,MAAM,CACPA,MAAK,WACH,IAAIhC,EAAO9D,GAAG+F,WAAWoW,EAAW,KAAM,MAAO,IAuBjD,OAtBArY,EAAKH,WAAa,CAChBkD,OAAQjB,GAAMjC,WAAWkD,QAE3B/C,EAAKsC,SAAW,CACdE,OAAM,SAACN,EAAQle,GACb,IAAI8uB,GAAM9uB,EACN8b,EAAS5D,GAAG6W,iBAAiBD,GAC7BwF,EAAM,CACRpW,OAAQ,KACRF,MAAO,CAAE2H,WAAY,QACrBrH,SAAU,CAAEa,SAAU,WAAF,OAAQrD,EAAO1U,IAAI,GACvCiZ,GAAIyO,EAAK,GAGX,OADAwF,EAAIpW,OAASoW,EACNA,CACT,EACAzV,QAAO,WACL,OAAO9M,MAAMuG,KAAKJ,GAAG2T,QAAQnG,WAC1BxO,QAAO,SAAAqd,GAAA,IAAAC,EAAAC,EAAAF,EAAA,GAAM,OAAAC,EAAA,EAAO,IACpBlmB,KAAI,SAAAomB,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAM,OAAHC,EAAA,GAAWpR,UAAU,GACjC,GAEKvH,CACT,GACC,CAAC,EAAG,gBACT,EACJ4Y,sBAAqB,SAAClZ,EAAOC,EAAQjM,GAS3BgM,EACFxD,GAAGic,aAAa,OAAQ,QAASzY,GAEjCxD,GAAG4G,QAAQ,WAAY,cAErBnD,EACFzD,GAAGic,aAAa,OAAQ,SAAU,KAAMxY,GAExCzD,GAAG4G,QAAQ,WAAY,eAErBpP,EACFwI,GAAGic,aAAa,OAAQ,SAAU,KAAMzkB,GAExCwI,GAAG4G,QAAQ,YAAa,eAId5G,GAAG1H,KAAK,aAAc,GACrB0H,GAAG1H,KAAK,cAAe,GACvB0H,GAAG1H,KAAK,cAAe,EACtC,EACJqkB,WAAU,WACJ3c,GAAG6T,UAAY,IAAIha,MAAM,MAEzBmG,GAAG8F,MAAMF,GAAO,CAAC,EAAG,KAEpB5F,GAAG4b,2BACH5b,GAAG6b,uBACH7b,GAAGkc,2BAEHlc,GAAGiU,YAAc,CACf,MAASrO,GACT,MAASsF,GAEb,EACJ5f,KAAI,SAACkY,EAAOC,EAAQjM,GACdwI,GAAG+T,aAAc,EAGjBvQ,YAAUvV,EAAc,OACxBwV,YAAWxV,EAAe,QAC1BuJ,YAAUvJ,EAAe,QAEzB+R,GAAG0c,sBAAsBlZ,EAAOC,EAAQjM,EAC1C,EACJsV,KAAI,WACE9M,GAAG+T,aAAc,EAEjB,IAC6B6I,EAD7BC,EAAAxD,EACmBrZ,GAAG2T,SAAO,IAA7B,IAAAkJ,EAAAvzB,MAAAszB,EAAAC,EAAA7zB,KAAAyM,MAA+B,CAAC,IAAvBmO,EAAMgZ,EAAAp0B,MACTob,GACF5D,GAAGkE,MAAMN,EAEb,CAAC,OAAAjV,GAAAkuB,EAAAhuB,EAAAF,EAAA,SAAAkuB,EAAAvD,GAAA,CACH,EACJwD,WAAU,SAAC5tB,EAAM6tB,GACX,IAAIX,EAAMpc,GAAG0S,YAAYxjB,EAAM6tB,GAC/B,OAAKX,EAAIY,OAGFZ,EAAInzB,OAFF,IAGX,EACJypB,YAAW,SAACxjB,EAAM6tB,GAEZ,IAEE7tB,GADIoX,EAAStG,GAAGkO,WAAWhf,EAAM,CAAEkmB,QAAS2H,KAC9B7tB,IAChB,CAAE,MAAOL,GACT,CACA,IAAIutB,EAAM,CACR/G,QAAQ,EAAO2H,QAAQ,EAAOxlB,MAAO,EAAG1P,KAAM,KAAMoH,KAAM,KAAMjG,OAAQ,KACxEg0B,cAAc,EAAOC,WAAY,KAAMC,aAAc,MAEvD,IACE,IAAI7W,EAAStG,GAAGkO,WAAWhf,EAAM,CAAE8W,QAAQ,IAC3CoW,EAAIa,cAAe,EACnBb,EAAIc,WAAa5W,EAAOpX,KACxBktB,EAAIe,aAAe7W,EAAOxC,KAC1BsY,EAAIt0B,KAAOiW,GAAKqB,SAASlQ,GACzBoX,EAAStG,GAAGkO,WAAWhf,EAAM,CAAEkmB,QAAS2H,IACxCX,EAAIY,QAAS,EACbZ,EAAIltB,KAAOoX,EAAOpX,KAClBktB,EAAInzB,OAASqd,EAAOxC,KACpBsY,EAAIt0B,KAAOwe,EAAOxC,KAAKhc,KACvBs0B,EAAI/G,OAAyB,MAAhB/O,EAAOpX,IACtB,CAAE,MAAOL,GACPutB,EAAI5kB,MAAQ3I,EAAEulB,KAChB,CACA,OAAOgI,CACT,EACJ3J,WAAU,SAACzM,EAAQ9W,GACb8W,EAA0B,iBAAVA,EAAqBA,EAAShG,GAAGsV,QAAQtP,GAEzD,IADA,IAAI1H,EAAQpP,EAAK6P,MAAM,KAAKwQ,UACrBjR,EAAMvU,QAAQ,CACnB,IAAIqzB,EAAO9e,EAAMqP,MACjB,GAAKyP,EAAL,CACA,IAAItI,EAAU/W,GAAKyB,MAAMwG,EAAQoX,GACjC,IACEpd,GAAGuM,MAAMuI,EACX,CAAE,MAAOjmB,GACP,GAAe,IAAXA,EAAEulB,MAAa,MAAMvlB,CAC3B,CACAmX,EAAS8O,CAPU,CAQrB,CACA,OAAOA,CACT,EACJuI,WAAU,SAACrX,EAAQle,EAAMw1B,EAAYlT,EAASC,GACxC,IAAInb,EAAO6O,GAAKyB,MAAuB,iBAAVwG,EAAqBA,EAAShG,GAAGsV,QAAQtP,GAASle,GAC3EY,EAAOuiB,GAAWb,EAASC,GAC/B,OAAOrK,GAAGnX,OAAOqG,EAAMxG,EACzB,EACJuhB,eAAc,SAACjE,EAAQle,EAAM8pB,EAAMxH,EAASC,EAAUb,GAChD,IAAIta,EAAOpH,EACPke,IACFA,EAA0B,iBAAVA,EAAqBA,EAAShG,GAAGsV,QAAQtP,GACzD9W,EAAOpH,EAAOiW,GAAKyB,MAAMwG,EAAQle,GAAQke,GAE3C,IAAItd,EAAOuiB,GAAWb,EAASC,GAC3BvG,EAAO9D,GAAGnX,OAAOqG,EAAMxG,GAC3B,GAAIkpB,EAAM,CACR,GAAmB,iBAARA,EAAkB,CAE3B,IADA,IAAIrR,EAAM,IAAI1G,MAAM+X,EAAK7nB,QAChBxC,EAAI,EAAG6a,EAAMwP,EAAK7nB,OAAQxC,EAAI6a,IAAO7a,EAAGgZ,EAAIhZ,GAAKqqB,EAAKvP,WAAW9a,GAC1EqqB,EAAOrR,CACT,CAEAP,GAAGuO,MAAMzK,EAAa,IAAPpb,GACf,IAAIkb,EAAS5D,GAAG1H,KAAKwL,EAAM,KAC3B9D,GAAGyE,MAAMb,EAAQgO,EAAM,EAAGA,EAAK7nB,OAAQ,EAAGyf,GAC1CxJ,GAAGkE,MAAMN,GACT5D,GAAGuO,MAAMzK,EAAMpb,EACjB,CACF,EACJuzB,aAAY,SAACjW,EAAQle,EAAM0b,EAAOC,GAAS,IAAD8Z,EAAAC,EAChCtuB,EAAO6O,GAAKyB,MAAuB,iBAAVwG,EAAqBA,EAAShG,GAAGsV,QAAQtP,GAASle,GAC3EY,EAAOuiB,KAAazH,IAASC,GACZ,QAArB+Z,GAAAD,EAAAvd,GAAGic,cAAapE,aAAK,IAAA2F,IAArBD,EAAgB1F,MAAU,IAC1B,IAAIvU,EAAMtD,GAAG+X,QAAQ/X,GAAGic,aAAapE,QAAS,GAgD9C,OA7CA7X,GAAG0D,eAAeJ,EAAK,CACrBhL,KAAI,SAACsL,GACHA,EAAOK,UAAW,CACpB,EACAC,MAAK,WAAU,IAADuZ,EAERha,SAAc,QAARga,EAANha,EAAQhX,cAAM,IAAAgxB,GAAdA,EAAgB1zB,QAClB0Z,EAAO,GAEX,EACAxO,KAAI,SAAC2O,EAAQnX,EAAQ8J,EAAQxM,GAE3B,IADA,IAAIsa,EAAY,EACP9c,EAAI,EAAGA,EAAIwC,EAAQxC,IAAK,CAC/B,IAAIqL,EACJ,IACEA,EAAS4Q,GACX,CAAE,MAAO3U,GACP,MAAM,IAAImR,GAAGgE,WAAW,GAC1B,CACA,QAAehY,IAAX4G,GAAsC,IAAdyR,EAC1B,MAAM,IAAIrE,GAAGgE,WAAW,GAE1B,GAAIpR,QAAyC,MAC7CyR,IACA5X,EAAO8J,EAAOhP,GAAKqL,CACrB,CAIA,OAHIyR,IACFT,EAAOE,KAAKQ,MAAQC,KAAKC,OAEpBH,CACT,EACAI,MAAK,SAACb,EAAQnX,EAAQ8J,EAAQxM,GAC5B,IAAK,IAAIxC,EAAI,EAAGA,EAAIwC,EAAQxC,IAC1B,IACEkc,EAAOhX,EAAO8J,EAAOhP,GACvB,CAAE,MAAOsH,GACP,MAAM,IAAImR,GAAGgE,WAAW,GAC1B,CAKF,OAHIja,IACF6Z,EAAOE,KAAKa,MAAQf,EAAOE,KAAKc,MAAQL,KAAKC,OAExCjd,CACT,IAEKyY,GAAGuZ,MAAMrqB,EAAMxG,EAAM4a,EAC9B,EACJoa,cAAa,SAACC,GACR,GAAIA,EAAIC,UAAYD,EAAIE,UAAYF,EAAI3W,MAAQ2W,EAAItW,SAAU,OAAO,EACrE,GAA6B,oBAAlByW,eACT,MAAM,IAAIxpB,MAAM,oMAEhB,IACEqpB,EAAItW,SAAW9L,EAAWoiB,EAAI7zB,KAC9B6zB,EAAIpW,UAAYoW,EAAItW,SAAStd,MAC/B,CAAE,MAAO8E,GACP,MAAM,IAAImR,GAAGgE,WAAW,GAC1B,CAEJ,EACJ+Z,eAAc,SAAC/X,EAAQle,EAAMgC,EAAKsgB,EAASC,GA+HrC,SAAS2T,EAAYpa,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,GACnD,IAAIlC,EAAWzD,EAAOE,KAAKuD,SAC3B,GAAIkC,GAAYlC,EAAStd,OACvB,OAAO,EACT,IAAIye,EAAOlO,KAAKsG,IAAIyG,EAAStd,OAASwf,EAAUxf,GAChD,GAAIsd,EAAS1M,MACX,IAAK,IAAIpT,EAAI,EAAGA,EAAIihB,EAAMjhB,IACxBkF,EAAO8J,EAAShP,GAAK8f,EAASkC,EAAWhiB,QAG3C,IAASA,EAAI,EAAGA,EAAIihB,EAAMjhB,IACxBkF,EAAO8J,EAAShP,GAAK8f,EAASjf,IAAImhB,EAAWhiB,GAGjD,OAAOihB,CACT,CAjDA,GAA6B,oBAAlBsV,eACmB,KAAM,sHAIlC,IAAIR,EAGFxZ,EAAO9D,GAAGqd,WAAWrX,EAAQle,EAH3Bw1B,EAAa,CAAEM,UAAU,EAAO9zB,IAAKA,GAGQsgB,EAASC,GAIxDiT,EAAWjW,SACbvD,EAAKuD,SAAWiW,EAAWjW,SAClBiW,EAAWxzB,MACpBga,EAAKuD,SAAW,KAChBvD,EAAKha,IAAMwzB,EAAWxzB,KAGxB7B,OAAOg2B,iBAAiBna,EAAM,CAC5ByD,UAAW,CACTnf,IAAK,WAAa,OAAOsU,KAAK2K,SAAStd,MAAQ,KAInD,IAAI4Z,EAAa,CAAC,EAyClB,OAxCW1b,OAAOmhB,KAAKtF,EAAKH,YACvBmH,SAAQ,SAAChiB,GACZ,IAAIo1B,EAAKpa,EAAKH,WAAW7a,GACzB6a,EAAW7a,GAAO,WAEhB,OADAkX,GAAG0d,cAAc5Z,GACVoa,EAAEruB,WAAC,EAADC,UACX,CACF,IAkBA6T,EAAW1O,KAAO,SAAC2O,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,GAEjD,OADAvJ,GAAG0d,cAAc5Z,GACVka,EAAYpa,EAAQnX,EAAQ8J,EAAQxM,EAAQwf,EACrD,EAEA5F,EAAWmD,KAAO,SAAClD,EAAQ7Z,EAAQwf,GACjCvJ,GAAG0d,cAAc5Z,GACjB,IAAI3Q,EAAMwS,KACV,IAAKxS,EACH,MAAM,IAAI6M,GAAGgE,WAAW,IAG1B,OADAga,EAAYpa,EAAQlX,EAAOyG,EAAKpJ,EAAQwf,GACjC,CAAEpW,MAAKyW,WAAW,EAC3B,EACA9F,EAAKH,WAAaA,EACXG,CACT,GAiBAqa,GAAe,SAAChrB,EAAKkO,EAAgBC,GACrC,OAAOnO,EAAM8N,GAAkBnU,EAAQqG,EAAKkO,EAAgBC,GAAa,EAC3E,EACE8c,GAAW,CACfC,iBAAiB,EACjBC,YAAW,SAACC,EAAOrvB,EAAMsvB,GACnB,GAAIzgB,GAAKC,MAAM9O,GACb,OAAOA,EAGT,IAAIiQ,EAOJ,GALEA,GADa,MAAXof,EACIve,GAAGC,MAEOme,GAASK,gBAAgBF,GACzBrvB,KAEC,GAAfA,EAAKnF,OAAa,CACpB,IAAKy0B,EACH,MAAM,IAAIxe,GAAGgE,WAAW,IAE1B,OAAO7E,CACT,CACA,OAAOA,EAAM,IAAMjQ,CACrB,EACJwvB,UAAS,SAACjD,EAAK/N,GACTxgB,EAASuuB,GAAM,GAAM/N,EAAKpK,IAC1BpW,EAAUuuB,EAAM,GAAK,GAAM/N,EAAKhlB,KAChC0E,EAAWquB,EAAM,GAAK,GAAM/N,EAAKrF,MACjCnb,EAAUuuB,EAAM,IAAM,GAAM/N,EAAKpF,IACjCpb,EAAUuuB,EAAM,IAAM,GAAM/N,EAAKnF,IACjCrb,EAAUuuB,EAAM,IAAM,GAAM/N,EAAK3J,KACjCrW,EAAU+tB,EAAM,IAAM,GAAMnoB,OAAOoa,EAAKlF,MACxCtb,EAAUuuB,EAAM,IAAM,GAAM,KAC5BvuB,EAAUuuB,EAAM,IAAM,GAAM/N,EAAKhF,OACjC,IAAIpE,EAAQoJ,EAAKpJ,MAAM4K,UACnBvK,EAAQ+I,EAAK/I,MAAMuK,UACnBtK,EAAQ8I,EAAK9I,MAAMsK,UAQvB,OAPAxhB,EAAU+tB,EAAM,IAAM,GAAMnoB,OAAOgH,KAAK4Y,MAAM5O,EAAQ,MACtDlX,EAAWquB,EAAM,IAAM,GAAOnX,EAAQ,IAAQ,IAAO,IACrD5W,EAAU+tB,EAAM,IAAM,GAAMnoB,OAAOgH,KAAK4Y,MAAMvO,EAAQ,MACtDvX,EAAWquB,EAAM,IAAM,GAAO9W,EAAQ,IAAQ,IAAO,IACrDjX,EAAU+tB,EAAM,IAAM,GAAMnoB,OAAOgH,KAAK4Y,MAAMtO,EAAQ,MACtDxX,EAAWquB,EAAM,IAAM,GAAO7W,EAAQ,IAAQ,IAAO,IACrDlX,EAAU+tB,EAAM,IAAM,GAAMnoB,OAAOoa,EAAKtF,KACjC,CACT,EACJuW,YAAW,SAAClD,EAAKmD,GACX1xB,EAAUuuB,EAAM,GAAK,GAAMmD,EAAMhG,MACjC1rB,EAAUuuB,EAAM,IAAM,GAAMmD,EAAMhG,MAClC1rB,EAAUuuB,EAAM,GAAK,GAAMmD,EAAMlW,OACjCxb,EAAUuuB,EAAM,IAAM,GAAMmD,EAAM9F,MAClC5rB,EAAUuuB,EAAM,IAAM,GAAMmD,EAAM7F,OAClC7rB,EAAUuuB,EAAM,IAAM,GAAMmD,EAAMpM,MAClCtlB,EAAUuuB,EAAM,IAAM,GAAMmD,EAAM5F,MAClC9rB,EAAUuuB,EAAM,IAAM,GAAMmD,EAAM3F,KAClC/rB,EAAUuuB,EAAM,IAAM,GAAMmD,EAAMjV,MAClCzc,EAAUuuB,EAAM,IAAM,GAAMmD,EAAM1F,OACpC,EACJ2F,QAAO,SAACC,EAAMlb,EAAQxB,EAAKuH,EAAOpT,GAC5B,IAAKyJ,GAAGsH,OAAO1D,EAAOE,KAAKpb,MACzB,MAAM,IAAIsX,GAAGgE,WAAW,IAE1B,GAAY,EAAR2F,EAEF,OAAO,EAET,IAAIld,EAASK,EAAO6N,MAAMmkB,EAAMA,EAAO1c,GACvCpC,GAAG+G,MAAMnD,EAAQnX,EAAQ8J,EAAQ6L,EAAKuH,EACxC,EACJ8U,gBAAe,SAAC7H,GAEV,OADa5W,GAAG6W,iBAAiBD,EAEnC,EACJmI,aAAQ/yB,EACRgzB,OAAM,SAAC7rB,GAED,OADUgrB,GAAahrB,EAEzB,GA+CA8rB,GAAoB,WAEpB,IAAI7C,EAAMlvB,GAAUkxB,GAASW,SAAU,GAEvC,OADAX,GAASW,SAAW,EACb3C,CACT,EACE8C,GAAoBD,GA+DpBE,GAAe,SAACxd,EAAKyd,EAAQ3c,GAC7B,OAAOH,GAAkBX,EAAK7U,EAAQsyB,EAAQ3c,EAChD,EAqTE4c,GAAqB,SAACC,GAAG,OAAMA,GADnB,kBACsCA,EAHtC,iBAGyDC,IAAMlqB,OAAOiqB,EAAK,EAqBvFE,GAA6B,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAErEC,GAAgC,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KACxEC,GAAe,SAACC,GAChB,IANcC,EAUd,QAVcA,EAMQD,EAAKE,eANC,GAAM,GAAMD,EAAK,KAAQ,GAAKA,EAAK,KAAQ,EAORH,GAA7BD,IACHG,EAAKG,YAAcH,EAAKI,UAAY,CAGrE,EAiIEC,GAAsB,WAAH,OAASC,YAAYzb,KAAM,EAE9C0b,GAAuB,WAAH,OAAS3b,KAAKC,KAAM,EA6BxC2b,GAAkB,SAACtxB,GAMnB,GAAIA,aAAa0N,IAAmB,UAAL1N,EAC7B,OAAOoN,EAETP,EAAM,EAAG7M,EACX,EAGEuxB,GAA0B,EAC1BC,GAAmB,WAAH,OAAS1iB,IAAiByiB,GAA0B,CAAE,EAWtEE,GAAS,SAAC1rB,GAVG,IAAC2rB,EAEWC,EAAAC,EASzBxkB,EAAarH,EAVbqH,EADcskB,EAaH3rB,EAXNyrB,OACa,QAAhBG,GAAAC,EAAAxyB,GAAe,cAAC,IAAAuyB,GAAhBA,EAAA94B,KAAA+4B,EAAmBF,GACnB3xB,GAAQ,GAEV8M,EAAM6kB,EAAM,IAAIhkB,GAAWgkB,GAQ7B,EACEG,GAAQJ,GAGRK,GAAY,WACZ,IAAKN,KACH,IACEK,GAAMzkB,EACR,CAAE,MAAOpN,GACPsxB,GAAgBtxB,EAClB,CAEJ,EACE+xB,GAAmB,SAACC,GACpB,IAAIjyB,EAGJ,IACEiyB,IACAF,IACF,CAAE,MAAO9xB,GACPsxB,GAAgBtxB,EAClB,CACF,EAGEiyB,GAAiB,SAACD,EAAME,GAExB,OAAOlV,YAAW,WAEhB+U,GAAiBC,EACnB,GAAGE,EACL,EAWEnW,GAAU,CACdoW,UAAS,EACTC,cAAa,EACbC,aAAY,EACZC,8BAA8B,GAC9BC,QAAQ,GACRC,gBAAgB,CAChB,EACAC,gBAAgB,CAChB,EACAC,UAAU,WAAD,OAAOtzB,EAAe,MAAC,EAChC3C,KAAI,WACE,IAAIsf,GAAQ4W,QAAZ,CACA5W,GAAQ4W,SAAU,EAUlB,IAAIC,EAAc,CAClBA,UAA2B,SAA+B35B,GACxD,OAAQmG,EAAwB,iBAAK,8BAA8ByzB,KAAK55B,EAC1E,EACA25B,OAAwB,SAA4BtqB,EAAWrP,EAAMwiB,EAAQtR,GAC3E,IAAIzM,EAAI,IAAIo1B,KAAK,CAACxqB,GAAY,CAAE/D,KAAMwX,GAAQgX,YAAY95B,KACtDyE,EAAEic,OAASrR,EAAUpN,SAEvBwC,EAAI,IAAIo1B,KAAK,CAAE,IAAI50B,WAAWoK,GAAY1K,QAAS,CAAE2G,KAAMwX,GAAQgX,YAAY95B,MAEjF,IAAIgC,EAAM8R,IAAIimB,gBAAgBt1B,GAC1Bu1B,EAAM,IAAIC,MACdD,EAAIxX,OAAS,WACX,IAAI0X,EAA4C13B,SAAS23B,cAAc,UACvED,EAAOE,MAAQJ,EAAII,MACnBF,EAAOG,OAASL,EAAIK,OACVH,EAAOI,WAAW,MACxBC,UAAUP,EAAK,EAAG,GACtBlX,GAAQyW,gBAAgBv5B,GAAQk6B,EAChCpmB,IAAI0mB,gBAAgBx4B,GACpBwgB,WAASnT,EACX,EACA2qB,EAAI9oB,QAAU,WACZrK,EAAI,SAAD2B,OAAUxG,EAAG,0BAChBkP,YACF,EACA8oB,EAAI/1B,IAAMjC,CACZ,GACAogB,GAAetU,KAAK6rB,GAEpB,IAAIc,EAAc,CAClBA,UAA2B,SAA+Bz6B,GACxD,OAAQmG,EAAwB,iBAAKnG,EAAK6S,OAAO,IAAM,CAAE,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EACzF,EACA4nB,OAAwB,SAA4BprB,EAAWrP,EAAMwiB,GAEnE,SAASI,EAAO8X,GACV/sB,IACJA,GAAO,EACPmV,GAAQ0W,gBAAgBx5B,GAAQ06B,EAChClY,WAASnT,GACX,CANA,IAAI1B,GAAO,EAaPlJ,EAAI,IAAIo1B,KAAK,CAACxqB,GAAY,CAAE/D,KAAMwX,GAAQgX,YAAY95B,KACtDgC,EAAM8R,IAAIimB,gBAAgBt1B,GAC1Bi2B,EAAQ,IAAIC,MAChBD,EAAME,iBAAiB,kBAAkB,kBAAMhY,EAAO8X,EAAM,IAAE,GAC9DA,EAAMxpB,QAAU,WACVvD,IACJ9G,EAAI,iDAAD2B,OAAkDxI,EAAI,oCAyBzD06B,EAAMz2B,IAAM,gBAAkBjE,EAAK6S,OAAO,GAAK,WAxB/C,SAAkBiX,GAMhB,IALA,IAAI+Q,EAAO,mEAEPvG,EAAM,GACNwG,EAAW,EACXC,EAAW,EACNt7B,EAAI,EAAGA,EAAIqqB,EAAK7nB,OAAQxC,IAG/B,IAFAq7B,EAAYA,GAAY,EAAKhR,EAAKrqB,GAClCs7B,GAAY,EACLA,GAAY,GAAG,CACpB,IAAIC,EAAQF,GAAaC,EAAS,EAAM,GACxCA,GAAY,EACZzG,GAAOuG,EAAKG,EACd,CASF,OAPgB,GAAZD,GACFzG,GAAOuG,GAAe,EAATC,IAAe,GAC5BxG,GAAO2G,MACc,GAAZF,IACTzG,GAAOuG,GAAe,GAATC,IAAiB,GAC9BxG,GAlBQ,KAoBHA,CACT,CAC4D4G,CAAS7rB,GACrEuT,EAAO8X,GACT,EACAA,EAAMz2B,IAAMjC,EAEZg3B,IAAe,WACbpW,EAAO8X,EACT,GAAG,IACL,GACAtY,GAAetU,KAAK2sB,GAQpB,IAAIP,EAASpX,GAAQ2W,YACjBS,IAIF13B,SAASo4B,iBAAiB,qBAT5B,WACE,IAAIV,EAASpX,GAAQ2W,YACrB3W,GAAQsW,YAAc52B,SAAS24B,qBAAuBjB,CACxD,IAMoE,GAE9D/zB,EAA2B,oBAC7B+zB,EAAOU,iBAAiB,SAAS,SAACQ,IAC3BtY,GAAQsW,aAAetW,GAAQ2W,YAAY4B,qBAC9CvY,GAAQ2W,YAAY4B,qBACpBD,EAAG7V,iBAEP,IAAG,GAxHoB,CA2H7B,EACJ+V,cAAa,SAAkCpB,EAAQhB,EAAUqC,EAAaC,GACxE,GAAItC,GAAY/yB,EAAY,KAAK+zB,GAAUpX,GAAQ2W,YAAa,OAAOtzB,EAAY,IAEnF,IAAIs1B,EACAC,EACJ,GAAIxC,EAAU,CAEZ,IAAIyC,EAAoB,CACtBC,WAAW,EACXC,OAAO,EACPC,aAAc,GAGhB,GAAIN,EACF,IAAK,IAAIO,KAAaP,EACpBG,EAAkBI,GAAaP,EAAuBO,QAOzC,IAANC,KACTN,EAAgBM,GAAGV,cAAcpB,EAAQyB,MAEvCF,EAAMO,GAAG1B,WAAWoB,GAAernB,MAGzC,MACEonB,EAAMvB,EAAOI,WAAW,MAG1B,OAAKmB,GAEDF,IACFp1B,EAAY,IAAIs1B,EACZvC,GAAU8C,GAAGC,mBAAmBP,GACpC5Y,GAAQoW,SAAWA,EACnBpW,GAAQuW,8BAA8BrW,SAAQ,SAACxc,GAAQ,OAAKA,GAAU,IACtEsc,GAAQtf,QAEHi4B,GATU,IAUnB,EACJS,6BAA4B,EAC5BC,iBAAYj4B,EACZk4B,kBAAal4B,EACbm4B,kBAAiB,SAACF,EAAaC,GAOzB,SAASE,IAAoB,IAADC,EAAAC,EAAAC,EAAAC,EAC1B5Z,GAAQqW,cAAe,EACvB,IAAIwD,EAAkBzC,EAAO0C,YACxBp6B,SAA4B,mBAAKA,SAA+B,sBAChEA,SAA8B,qBAAKA,SAAkC,yBACrEA,SAAyC,kCAAOm6B,GACnDzC,EAAO2C,eAAiB/Z,GAAQ+Z,eAC5B/Z,GAAQqZ,aAAajC,EAAOmB,qBAChCvY,GAAQqW,cAAe,EACnBrW,GAAQsZ,aACVtZ,GAAQga,0BAERha,GAAQia,uBAAuB7C,KAIjCyC,EAAgBC,WAAWI,aAAa9C,EAAQyC,GAChDA,EAAgBC,WAAWK,YAAYN,GAEnC7Z,GAAQsZ,aACVtZ,GAAQoa,wBAERpa,GAAQia,uBAAuB7C,IAGb,QAAtBqC,GAAAC,EAAAr2B,GAAqB,oBAAC,IAAAo2B,GAAtBA,EAAA38B,KAAA48B,EAAyB1Z,GAAQqW,cACX,QAAtBsD,GAAAC,EAAAv2B,GAAqB,oBAAC,IAAAs2B,GAAtBA,EAAA78B,KAAA88B,EAAyB5Z,GAAQqW,aACnC,CAjCArW,GAAQqZ,YAAcA,EACtBrZ,GAAQsZ,aAAeA,OACW,IAAvBtZ,GAAQqZ,cAA4BrZ,GAAQqZ,aAAc,QAClC,IAAxBrZ,GAAQsZ,eAA6BtZ,GAAQsZ,cAAe,GAEvE,IAAIlC,EAASpX,GAAQ2W,YA8BhB3W,GAAQoZ,8BACXpZ,GAAQoZ,6BAA8B,EACtC15B,SAASo4B,iBAAiB,mBAAoB0B,GAAkB,GAChE95B,SAASo4B,iBAAiB,sBAAuB0B,GAAkB,GACnE95B,SAASo4B,iBAAiB,yBAA0B0B,GAAkB,GACtE95B,SAASo4B,iBAAiB,qBAAsB0B,GAAkB,IAIpE,IAAIK,EAAkBn6B,SAAS23B,cAAc,OAC7CD,EAAO0C,WAAWI,aAAaL,EAAiBzC,GAChDyC,EAAgBQ,YAAYjD,GAG5ByC,EAAgBN,kBAAoBM,EAAmC,mBACnCA,EAAsC,sBACtCA,EAAqC,sBACrCA,EAAyC,wBAAI,kBAAMA,EAAyC,wBAAES,QAA8B,qBAAE,EAAG,QACjIT,EAAyC,wBAAI,kBAAMA,EAAyC,wBAAES,QAA8B,qBAAE,EAAG,MAErKT,EAAgBN,mBAClB,EACJQ,eAAc,WAIR,QAAK/Z,GAAQqW,gBAIH32B,SAAyB,gBACzBA,SAA2B,kBAC3BA,SAA8B,qBAC9BA,SAA2B,kBAC3BA,SAAiC,wBACtC,WAAO,GACRuF,MAAMvF,SAAU,KACb,EACT,EACJw2B,eAAc,SAACD,EAAME,GAIf,OAAOD,GAAeD,EAAME,EAC9B,EACJa,YAAW,SAAC95B,GACN,MAAO,CACL,IAAO,aACP,KAAQ,aACR,IAAO,YACP,IAAO,YACP,IAAO,YACP,IAAO,YACP,IAAO,cACPA,EAAK6S,MAAM7S,EAAKmT,YAAY,KAAK,GACrC,EACJkqB,aAAY,SAACtE,GAAO,IAADuE,GACbA,EAAArqB,QAAOoqB,eAAPC,EAAOD,aAAiBn7B,UAAwB,cACxBA,UAA2B,iBACnD+Q,OAAOoqB,aAAatE,EACtB,EACJwE,aAAY,SAAC7sB,GACP,OAAOA,EAAiB,WACjBA,EAAoB,cACpBA,EAAuB,iBACvB,CACT,EACJ8sB,aAAY,SAAC9sB,GACP,OAAOA,EAAiB,WACjBA,EAAoB,cACpBA,EAAuB,iBACvB,CACT,EACJ+sB,mBAAkB,SAAC/sB,GACb,IAAIgtB,EAAQ,EACZ,OAAQhtB,EAAMpF,MACZ,IAAK,iBAEHoyB,EAAQhtB,EAAMitB,OAAS,EACvB,MACF,IAAK,aAEHD,EAAQhtB,EAAMktB,WAAa,IAC3B,MACF,IAAK,QAEH,OADAF,EAAQhtB,EAAMmtB,OACNntB,EAAMotB,WACZ,KAAK,EAEHJ,GAAS,IACT,MACF,KAAK,EAEHA,GAAS,EACT,MACF,KAAK,EAEHA,GAAS,GACT,MACF,QACE,KAAM,wCAA0ChtB,EAAMotB,UAE1D,MACF,QACE,KAAM,mCAAqCptB,EAAMpF,KAErD,OAAOoyB,CACT,EACJK,OAAO,EACPC,OAAO,EACPC,eAAe,EACfC,eAAe,EACfC,QAAQ,CACR,EACAC,YAAY,CACZ,EACAC,qBAAoB,SAACC,EAAOC,GAGtB,IAAIrE,EAASpX,GAAQ2W,YACjB+E,EAAOtE,EAAOuE,wBAKdC,OAAqC,IAAlBzrB,OAAOyrB,QAA0BzrB,OAAOyrB,QAAUzrB,OAAO0rB,YAC5EC,OAAqC,IAAlB3rB,OAAO2rB,QAA0B3rB,OAAO2rB,QAAU3rB,OAAO4rB,YAC5EC,EAAYR,GAASI,EAAUF,EAAKO,MACpCC,EAAYT,GAASK,EAAUJ,EAAKS,KAQxC,MAAO,CAAEC,EAHTJ,GAAyB5E,EAAOE,MAAQoE,EAAKpE,MAGtB+E,EAFvBH,GAAyB9E,EAAOG,OAASmE,EAAKnE,OAGhD,EACJ+E,eAAc,SAACd,EAAOC,GAChB,IAAAc,EAAevc,GAAQub,qBAAqBC,EAAOC,GAA5CW,EAACG,EAADH,EAAGC,EAACE,EAADF,EACVrc,GAAQmb,eAAiBiB,EAAIpc,GAAQib,OACrCjb,GAAQob,eAAiBiB,EAAIrc,GAAQkb,OACrClb,GAAQib,OAASmB,EACjBpc,GAAQkb,OAASmB,CACnB,EACJG,oBAAmB,SAAC5uB,GACd,GAAIoS,GAAQsW,YAIQ,aAAd1oB,EAAMpF,MACL,iBAAkBoF,EACrBoS,GAAQmb,eAAiBnb,GAAQob,eAAiB,GAElDpb,GAAQmb,eAAiBnb,GAAQya,aAAa7sB,GAC9CoS,GAAQob,eAAiBpb,GAAQ0a,aAAa9sB,IAIhDoS,GAAQib,QAAUjb,GAAQmb,eAC1Bnb,GAAQkb,QAAUlb,GAAQob,mBACrB,CACL,GAAmB,eAAfxtB,EAAMpF,MAAwC,aAAfoF,EAAMpF,MAAsC,cAAfoF,EAAMpF,KAAsB,CAC1F,IAAIi0B,EAAQ7uB,EAAM6uB,MAClB,QAAcr7B,IAAVq7B,EACF,OAGF,IAAIC,EAAS1c,GAAQub,qBAAqBkB,EAAMjB,MAAOiB,EAAMhB,OAE7D,GAAmB,eAAf7tB,EAAMpF,KACRwX,GAAQsb,YAAYmB,EAAME,YAAcD,EACxC1c,GAAQqb,QAAQoB,EAAME,YAAcD,OAC/B,GAAmB,aAAf9uB,EAAMpF,MAAsC,cAAfoF,EAAMpF,KAAsB,CAClE,IAAIqL,EAAOmM,GAAQqb,QAAQoB,EAAME,YACjC9oB,MAAS6oB,GACT1c,GAAQsb,YAAYmB,EAAME,YAAc9oB,EACxCmM,GAAQqb,QAAQoB,EAAME,YAAcD,CACtC,CACA,MACF,CAEA1c,GAAQsc,eAAe1uB,EAAM4tB,MAAO5tB,EAAM6tB,MAC5C,CACF,EACJmB,gBAAgB,GAChBC,sBAAqB,WACf,IAAIzF,EAASpX,GAAQ2W,YACrB3W,GAAQ4c,gBAAgB1c,SAAQ,SAAC4c,GAAQ,OAAKA,EAAS1F,EAAOE,MAAOF,EAAOG,OAAO,GACrF,EACJwF,cAAa,SAACzF,EAAOC,EAAQyF,GACvB,IAAI5F,EAASpX,GAAQ2W,YACrB3W,GAAQia,uBAAuB7C,EAAQE,EAAOC,GACzCyF,GAAWhd,GAAQ6c,uBAC1B,EACJI,cAAc,EACdC,eAAe,EACflD,wBAAuB,WAEjB,GAAkB,oBAAPmD,IAAoB,CAC7B,IAAIpe,EAAQvc,EAAU26B,IAAIC,QAAS,GACnCre,GAAgB,QAChBzc,EAAS66B,IAAIC,QAAS,GAAMre,CAC9B,CACAiB,GAAQia,uBAAuBja,GAAQ2W,aACvC3W,GAAQ6c,uBACV,EACJzC,sBAAqB,WAEf,GAAkB,oBAAP+C,IAAoB,CAC7B,IAAIpe,EAAQvc,EAAU26B,IAAIC,QAAS,GACnCre,IAAgB,QAChBzc,EAAS66B,IAAIC,QAAS,GAAMre,CAC9B,CACAiB,GAAQia,uBAAuBja,GAAQ2W,aACvC3W,GAAQ6c,uBACV,EACJ5C,uBAAsB,SAAC7C,EAAQiG,EAASC,GAC9BD,GAAWC,GACblG,EAAOmG,YAAcF,EACrBjG,EAAOoG,aAAeF,IAEtBD,EAAUjG,EAAOmG,YACjBD,EAAUlG,EAAOoG,cAEnB,IAAIC,EAAIJ,EACJ1+B,EAAI2+B,EAQR,GAPIj6B,EAA0B,kBAAI,IAC5Bo6B,EAAE9+B,EAAI0E,EAA0B,kBAClCo6B,EAAI/tB,KAAKguB,MAAM/+B,EAAI0E,EAA0B,mBAE7C1E,EAAI+Q,KAAKguB,MAAMD,EAAIp6B,EAA0B,qBAG3C3D,SAA4B,mBAAKA,SAA+B,sBACjEA,SAA8B,qBAAKA,SAAkC,yBACrEA,SAAyC,kCAAO03B,EAAO0C,YAAiC,oBAAVsD,OAAwB,CACxG,IAAIO,EAASjuB,KAAKsG,IAAIonB,OAAO9F,MAAQmG,EAAGL,OAAO7F,OAAS54B,GACxD8+B,EAAI/tB,KAAKguB,MAAMD,EAAIE,GACnBh/B,EAAI+Q,KAAKguB,MAAM/+B,EAAIg/B,EACtB,CACI3d,GAAQsZ,cACNlC,EAAOE,OAAUmG,IAAGrG,EAAOE,MAASmG,GACpCrG,EAAOG,QAAU54B,IAAGy4B,EAAOG,OAAS54B,QACb,IAAhBy4B,EAAOwG,QAChBxG,EAAOwG,MAAMC,eAAgB,SAC7BzG,EAAOwG,MAAMC,eAAe,aAG1BzG,EAAOE,OAAU+F,IAASjG,EAAOE,MAAS+F,GAC1CjG,EAAOG,QAAU+F,IAASlG,EAAOG,OAAS+F,QACnB,IAAhBlG,EAAOwG,QACZH,GAAKJ,GAAW1+B,GAAK2+B,GACvBlG,EAAOwG,MAAME,YAAa,QAASL,EAAI,KAAM,aAC7CrG,EAAOwG,MAAME,YAAY,SAAUn/B,EAAI,KAAM,eAE7Cy4B,EAAOwG,MAAMC,eAAgB,SAC7BzG,EAAOwG,MAAMC,eAAe,YAIpC,GAGAE,GAAM,CACVC,UAAU,MACVC,2BAA0B,EAC1BC,eAAe,EACfC,mBAAmB,EACnBC,mBAAmB,EACnBvF,kBAAkB,CAClBE,OAAM,EACNsF,OAAM,EACNC,SAAQ,EACRxF,WAAU,GAEVyF,YAAY,CACZ,EACAC,aAAY,SAAC7I,GACPoI,GAAIC,UAAYrI,CAClB,EACJ8I,aAAY,SAACC,EAASC,EAAYC,EAAQC,EAAaC,GACjD,GAAe,MAAXJ,EAEF,OADAX,GAAIS,aAAa,OACV,EAGT,GAAIG,EAEF,OAAS,CACP,IAAII,EAAQz8B,EAASq8B,GAAa,GAClC,GAAa,OAATI,EAEFhB,GAAIlF,kBAAkBE,MADNz2B,EAAUq8B,EAAa,GAAK,GACD,OACtC,GAAa,OAATI,EAEThB,GAAIlF,kBAAkBwF,MADN/7B,EAAUq8B,EAAa,GAAK,GACD,OACtC,GAAa,OAATI,EAEThB,GAAIlF,kBAAkByF,QADJh8B,EAAUq8B,EAAa,GAAK,GACC,OAC1C,GAAa,OAATI,EAEThB,GAAIlF,kBAAkBC,UADRx2B,EAAUq8B,EAAa,GAAK,GACG,OACxC,GAAa,OAATI,EAEThB,GAAIlF,kBAAkBC,UAAwB,GADhCx2B,EAAUq8B,EAAa,GAAK,QAErC,GAAa,OAATI,EAEThB,GAAIlF,kBAAkBmG,WAAmC,OADjC18B,EAAUq8B,EAAa,GAAK,QAE/C,GAAa,OAATI,EACP,MAEJJ,GAAc,CAChB,CAGF,OAAMC,GAAWC,GAAiBC,GAI9BA,IACFx8B,EAASw8B,GAAa,GAAM,GAE1BF,GAAUC,EAAc,IAC1Br8B,EAAUo8B,GAAS,GAAM,OAG3Bb,GAAIS,aAAa,OACV,IAXLT,GAAIS,aAAa,OACV,EAWX,GAuCAS,GAAmC,SAACtG,GAGpC,IAAIuG,EAAsB,CAExB,yBACA,yBACA,kCACA,qBACA,wCACA,2BAEA,mBACA,8BACA,kBACA,kBACA,2BACA,+BACA,+BACA,iCACA,8BACA,2BACA,4BACA,gCACA,+BACA,gCACA,gCACA,qCACA,4BACA,sBACA,qBACA,mBACA,sBAGF,OAAQvG,EAAIwG,0BAA4B,IAAI/qB,QAAO,SAAAgrB,GAAG,OAAIF,EAAoB3T,SAAS6T,EAAI,GAC7F,EAGElG,GAAK,CACTmG,QAAQ,EACRC,QAAQ,GACRC,SAAS,GACTC,aAAa,GACbC,cAAc,GACdC,SAAS,GACTC,QAAQ,GACRC,KAAK,GACLC,SAAS,GACTC,kBAAkB,CAClB,EACAC,QAAQ,GACRC,SAAS,GACTC,mBAAmB,GACnBC,MAAM,GACN3B,YAAY,CACZ,EACA4B,aAAa,CACb,EACAC,gBAAgB,EAChBC,gBAAgB,EAChBC,YAAY,SAACtC,GACF9E,GAAGqH,YACNrH,GAAGqH,UAAYvC,EAEnB,EACJwC,SAAS,SAACC,GAEJ,IADA,IAAIjP,EAAM0H,GAAGmG,UACJ1iC,EAAI8jC,EAAMthC,OAAQxC,EAAI60B,EAAK70B,IAClC8jC,EAAM9jC,GAAK,KAEb,OAAO60B,CACT,EACJkP,UAAU,SAACtiC,EAAGkhC,EAASqB,EAAgBC,GAEjC,IAAK,IAAIjkC,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAIkF,EAAS0P,EAAMovB,KACfpjB,EAAK1b,GAAUq3B,GAAGsH,SAASI,GAC3B/+B,GACFA,EAAO3E,KAAOqgB,EACdqjB,EAAYrjB,GAAM1b,GAElBq3B,GAAGoH,YAAY,MAEjBh+B,EAAUg9B,EAAY,EAAF3iC,GAAO,GAAM4gB,CACnC,CACF,EACJsjB,UAAU,SAACC,EAAQC,EAAOC,EAAQ7hC,GAE5B,IADA,IAAI8hC,EAAS,GACJtkC,EAAI,EAAGA,EAAIokC,IAASpkC,EAE3BskC,GAAU1N,GAAa/wB,EAAWw+B,EAAW,EAAFrkC,GAAO,GADxCwC,EAASqD,EAAWrD,EAAW,EAAFxC,GAAO,QAAMyE,GAGtD,OAAO6/B,CACT,EACJzI,cAAc,SAAkCpB,EAAQsB,GAW7CtB,EAAO8J,8BACV9J,EAAO8J,4BAA8B9J,EAAOI,WAM5CJ,EAAOI,WAJP,SAAyB2J,EAAKC,GAC5B,IAAIC,EAAKjK,EAAO8J,4BAA4BC,EAAKC,GACjD,MAAgB,SAAPD,GAAoBE,aAAcC,sBAA0BD,EAAK,IAC5E,GAIF,IAAI1I,EAAMvB,EAAOI,WAAW,SAAUkB,GAEtC,OAAKC,EAEQO,GAAGqI,gBAAgB5I,EAAKD,GAFpB,CAKnB,EACJ6I,gBAAgB,SAAC5I,EAAKD,GAEhB,IAAI8I,EAAStI,GAAGsH,SAAStH,GAAG2G,UAExB4B,EAAU,CACZD,SACAE,WAAYhJ,EACZiJ,QAASjJ,EAAuBM,aAChCznB,MAAOonB,GAWT,OANIA,EAAIvB,SAAQuB,EAAIvB,OAAOwK,YAAcH,GACzCvI,GAAG2G,SAAS2B,GAAUC,QACyC,IAApD/I,EAAuBmJ,2BAA4CnJ,EAAuBmJ,4BACnG3I,GAAG4I,eAAeL,GAGbD,CACT,EACJrI,mBAAmB,SAACP,GAAmB,IAADmJ,EAMhC,OAHA7I,GAAGgF,eAAiBhF,GAAG2G,SAASjH,GAEhCv1B,EAAY,IAAIkO,EAAyB,QAApBwwB,EAAG7I,GAAGgF,sBAAc,IAAA6D,OAAA,EAAjBA,EAAmBxwB,QAClCqnB,IAAkBrnB,EAC7B,EACJimB,WAAW,SAACoB,GACN,OAAOM,GAAG2G,SAASjH,EACrB,EACJoJ,cAAc,SAACpJ,GAAmB,IAADqJ,EACvB/I,GAAGgF,iBAAmBhF,GAAG2G,SAASjH,KACpCM,GAAGgF,eAAiB,MAEC,UAAnBzxB,EAAOy1B,KAGTA,GAASC,0BAA0BjJ,GAAG2G,SAASjH,GAAernB,MAAM6lB,QAIxC,QAA9B6K,EAAI/I,GAAG2G,SAASjH,UAAc,IAAAqJ,GAA1BA,EAA4B1wB,MAAM6lB,SACpC8B,GAAG2G,SAASjH,GAAernB,MAAM6lB,OAAOwK,iBAAcxgC,GAExD83B,GAAG2G,SAASjH,GAAiB,IAC/B,EACJkJ,eAAe,SAACL,GAKV,GAFAA,MAAYvI,GAAGgF,iBAEXuD,EAAQW,mBAAZ,CACAX,EAAQW,oBAAqB,EAE7B,IAxL+BzJ,EAwL3BpnB,EAAQkwB,EAAQlwB,OAxLWonB,EA8LDpnB,GA5LzB8wB,eAAiB1J,EAAI2J,aAAa,oBAXD,SAAC3J,GACtCA,EAAI4J,sBAAwB5J,EAAI2J,aAAa,2BAA6B,CAuM3EE,CAAsCjxB,GArMR,SAAConB,GAC9BA,EAAI8J,eAAiB9J,EAAI2J,aAAa,mBAAqB,CAqM5DI,CAA8BnxB,GAnME,SAAConB,GAChCA,EAAIgK,iBAAmBhK,EAAI2J,aAAa,qBAAuB,CAmMhEM,CAAgCrxB,GAnN4B,SAAConB,GAE5DA,EAAIkK,OAASlK,EAAI2J,aAAa,iDAAkD,CAmNjFQ,CAA4DvxB,GAjNM,SAAConB,GAE3DA,EAAIoK,QAAUpK,EAAI2J,aAAa,uDAC3C,CA+MIU,CAAkEzxB,GAK9DkwB,EAAQE,SAAW,IACrBpwB,EAAM0xB,sBAAwB1xB,EAAM+wB,aAAa,qCAM/Cb,EAAQE,QAAU,IAAMpwB,EAAM0xB,yBAEhC1xB,EAAM0xB,sBAAwB1xB,EAAM+wB,aAAa,6BAGnDrD,GAAiC1tB,GAAO2O,SAAQ,SAACkf,GAG1CA,EAAI7T,SAAS,iBAAoB6T,EAAI7T,SAAS,UAEjDha,EAAM+wB,aAAalD,EAEvB,GAvCsC,CAwCxC,GAsRA8D,GAAkB,SAACnsB,GACnB,IAAI6G,EAAOrG,GAAgBR,GAAO,EAC9Bya,EAAMhrB,GAAQoX,GAElB,OADI4T,GAAK+C,GAAaxd,EAAKya,EAAK5T,GACzB4T,CACT,EAoDE2R,GAAc,SAACC,EAAUC,EAAKC,EAAsB1W,EAAK2W,GAKzD,SAASC,IACP,QAAIC,EAAiBC,GAASC,2BAE5B5N,KACO,GAGX,CAXA2N,GAASzN,KAAOmN,EAChBM,GAAS9W,IAAMA,EAEf,IAAI6W,EAAiBC,GAASC,yBA0E9B,GA3DAD,GAASE,SAAU,EACnBF,GAASG,OAAS,WAChB,IAAI7/B,EACJ,GAAI0/B,GAASI,MAAM3kC,OAAS,EAA5B,CACcwa,KAAKC,MAAjB,IACImqB,EAAUL,GAASI,MAAM5xB,QAE7B,GADA6xB,EAAQ9N,KAAK8N,EAAQnX,KACjB8W,GAASM,kBAAmB,CAC9B,IAAIC,EAAYP,GAASM,kBACrBpW,EAAOqW,EAAU,GAAK,EAAIA,EAAU,EAAIv0B,KAAK4Y,MAAM2b,GAErDP,GAASM,kBADPD,EAAQG,QACmBtW,GAIC,EAAEqW,GADhCrW,GAAc,KACoC,CAEtD,CAIA,GAHA8V,GAASS,gBAGJX,IAAkB,OAEvBviB,WAAWyiB,GAASG,OAAQ,EAE9B,MAGKL,MAGLE,GAASU,mBAAqBV,GAASU,mBAAqB,EAAI,EACrC,GAAvBV,GAASW,YAAmBX,GAASY,YAAc,GAAKZ,GAASU,mBAAqBV,GAASY,aAAe,EAEhHZ,GAASa,aAEuB,GAAvBb,GAASW,aAClBX,GAASc,cAAgBpP,MAG3BsO,GAASe,QAAQrB,GAGZI,KAELE,GAASa,aACX,EAEKhB,IACCF,EAAM,EACRqB,GAAiC,EAAG,IAASrB,GAG7CqB,GAAiC,EAAG,GAGtChB,GAASa,aAGPjB,EACF,KAAM,QAEV,EAGEI,GAAW,CACfE,SAAQ,EACRW,UAAU,KACVI,OAAO,GACPhB,yBAAyB,EACzB1N,KAAK,KACLrJ,IAAI,EACJyX,WAAW,EACXC,YAAY,EACZF,mBAAmB,EACnBN,MAAM,GACNc,YAAY,GACZC,aAAa,GACbC,MAAK,WACCpB,GAASa,UAAY,KAErBb,GAASC,0BACX,EACJoB,OAAM,WACArB,GAASC,2BACT,IAAIU,EAAaX,GAASW,WACtBC,EAAcZ,GAASY,YACvBrO,EAAOyN,GAASzN,KACpByN,GAASzN,KAAO,KAEhBkN,GAAYlN,EAAM,GAAG,EAAOyN,GAAS9W,KAAK,GAC1C8X,GAAiCL,EAAYC,GAC7CZ,GAASa,WACX,EACJJ,aAAY,WACN,GAAI9gC,EAAkB,UAAG,CAAC,IAAD2hC,EAAAC,EAEnBhB,EAAsC,QAA7Be,EAAGtB,GAASM,yBAAiB,IAAAgB,IAAI,EAC1CE,EAAoC,QAA5BD,EAAGvB,GAASyB,wBAAgB,IAAAF,IAAI,EAGxC5hC,EAAkB,UAFlB4gC,EACEA,EAAYiB,EACM,gDALV7hC,EAAsB,eAAK,iBAUnB,GAExB,CACF,EACJ3C,KAAI,WACE2C,EAAoB,aAAKqgC,GAASkB,YAAY55B,KAAK3H,EAAoB,aACvEA,EAAqB,cAAKqgC,GAASmB,aAAa75B,KAAK3H,EAAqB,aAC5E,EACJohC,QAAO,SAACxO,GACF,IAAIjyB,EAAJ,CAAkB,IACkBohC,EADlBC,EAAA5W,EACFiV,GAASkB,aAAW,IAApC,IAAAS,EAAA3mC,MAAA0mC,EAAAC,EAAAjnC,KAAAyM,MACE,IAAc,KAAVy6B,EADMF,EAAAxnC,SAER,MAEH,OAAAmG,GAAAshC,EAAAphC,EAAAF,EAAA,SAAAshC,EAAA3W,GAAA,CACDsH,GAAiBC,GAAM,IACesP,EADfC,EAAA/W,EACNiV,GAASmB,cAAY,IAAtC,IAAAW,EAAA9mC,MAAA6mC,EAAAC,EAAApnC,KAAAyM,OACE46B,EADWF,EAAA3nC,QAEZ,OAAAmG,GAAAyhC,EAAAvhC,EAAAF,EAAA,SAAAyhC,EAAA9W,GAAA,CATgB,CAUnB,EACJgX,QAAQ,EACRC,0BAAyB,SAAC1P,GAEpB,IAAIrc,EAAMD,KAAKC,MACf,GAAyB,IAArB8pB,GAASgC,QACXhC,GAASgC,QAAU9rB,EAAM,IAAK,QAE9B,KAAOA,EAAM,GAAK8pB,GAASgC,SACzBhC,GAASgC,SAAW,IAAK,GAG7B,IAAIE,EAAQl2B,KAAKwN,IAAIwmB,GAASgC,QAAU9rB,EAAK,GAC7CqH,WAAWgV,EAAM2P,EACnB,EACJC,sBAAqB,SAAAC,GAAA,SAArBD,EAAqBE,GAAA,OAAAD,EAAA7gC,MAAC,KAADC,UAAA,QAArB2gC,EAAqBplB,SAAA,kBAAAqlB,EAAArlB,UAAA,EAArBolB,CAAqB,YAAC5P,GACoB,mBAAzB4P,uBAKXG,EADUtC,GAASiC,2BACf1P,GAJF4P,sBAAsB5P,EAK1B,KAEAyO,GAAmC,SAAC5mC,EAAMF,GAI1C,GAHA8lC,GAASW,WAAavmC,EACtB4lC,GAASY,YAAc1mC,GAElB8lC,GAASzN,KACZ,OAAO,EAOT,GAJKyN,GAASE,UAEZF,GAASE,SAAU,GAET,GAAR9lC,EACF4lC,GAASa,UAAY,WACnB,IAAI0B,EAAwF,EAApEv2B,KAAKwN,IAAI,EAAGwmB,GAASc,cAAgB5mC,EAAQw3B,MACrEnU,WAAWyiB,GAASG,OAAQoC,EAC9B,EACAvC,GAASiB,OAAS,eACb,GAAY,GAAR7mC,EACT4lC,GAASa,UAAY,WACnBb,GAASmC,sBAAsBnC,GAASG,OAC1C,EACAH,GAASiB,OAAS,WACb,GAAY,GAAR7mC,EAAW,CACpB,QAAoC,IAAzB4lC,GAASwC,aAClB,GAA2B,oBAAhBA,aAA6B,CAEtC,IAAIC,EAAgB,GAChBC,EAA8B,eAUlCtO,iBAAiB,WAR0B,SAAClqB,GAGtCA,EAAMoZ,OAASof,GAA+Bx4B,EAAMoZ,KAAKlZ,SAAWs4B,IACtEx4B,EAAMy4B,kBACNF,EAAcj0B,OAAdi0B,GAEJ,IACkE,GAClEzC,GAASwC,aAAmE,SAACjQ,GAC3EkQ,EAAcn7B,KAAKirB,GAKZqQ,YAAYF,EAA6B,IAClD,CACF,MACE1C,GAASwC,aAAeA,aAG5BxC,GAASa,UAAY,WACnBb,GAASwC,aAAaxC,GAASG,OACjC,EACAH,GAASiB,OAAS,WACpB,CACA,OAAO,CACT,EAiCE4B,GAJiB,WAEjB,OADAxI,GAAIS,aAAa,OACV,CACT,EAQEgI,GAAqB,GACrBC,GAAgB,SAACC,EAAQ7V,GAEzB,IAAIxZ,EAGJ,IAJAmvB,GAAmBrnC,OAAS,EAIrBkY,EAAKnV,EAAOwkC,MAAW,CAG5B,IAAIC,EAAc,KAANtvB,EAEZwZ,IADA8V,GAAe,KAANtvB,IACOwZ,EAAM,EAAK,EAAI,EAC/B2V,GAAmBx7B,KAEX,KAANqM,EAAY7U,EAAUquB,GAAM,GACtB,KAANxZ,EAAYvU,EAAS+tB,GAAM,GACrB,KAANxZ,EACE/U,EAASuuB,GAAM,GACfjuB,EAAUiuB,GAAM,IAEpBA,GAAO8V,EAAO,EAAI,CACpB,CACA,OAAOH,EACT,EASEI,GAAqB,SAACC,EAAWH,EAAQI,GACzC,IAAIn0B,EAAO8zB,GAAcC,EAAQI,GACjC,OAAOC,GAAWF,GAAU5hC,MAArB8hC,GAAUl0B,EAAeF,GAClC,EAQEuvB,GAAW,CACf8E,OAAM,SAACl5B,EAAQ3M,EAAKyc,GACd9b,EAAMiK,IAAIjK,EAAMgV,SAAS3V,EAAKA,EAAMyc,GAAO9P,EAC7C,EACJm5B,wBAAuB,WACjB,KAAO/E,GAASgF,cAAc/nC,QAC5B+iC,GAASiF,eAAejF,GAASgF,cAAc/nC,OAAS,GAE1D+iC,GAASkF,cAAgB,EAC3B,EACJC,eAAe,EACfD,cAAc,GACdE,UAAS,SAACC,EAAgBC,EAAYC,GAChC,SAASC,EAAuBC,EAAMC,GACpC,GAAID,EAAKxoC,QAAUyoC,EAAKzoC,OAAQ,OAAO,EAEvC,IAAK,IAAIxC,KAAKgrC,EACZ,GAAIA,EAAKhrC,IAAMirC,EAAKjrC,GAAI,OAAO,EAEjC,OAAO,CACT,CACA,IACuCkrC,EADvCC,EAAArZ,EACiByT,GAASkF,eAAa,IAAvC,IAAAU,EAAAppC,MAAAmpC,EAAAC,EAAA1pC,KAAAyM,MAAyC,CAAC,IAAjC/N,EAAI+qC,EAAAjqC,MACX,GAAId,EAAKyqC,gBAAkBA,GAAkBG,EAAuB5qC,EAAK2qC,SAAUA,GACjF,MAEJ,CAAC,OAAA1jC,GAAA+jC,EAAA7jC,EAAAF,EAAA,SAAA+jC,EAAApZ,GAAA,CACDwT,GAASkF,cAAcp8B,KAAK,CAC1Bu8B,iBACAC,aACAC,aAGFvF,GAASkF,cAAc1iB,MAAK,SAAC0X,EAAEC,GAAC,OAAKD,EAAEoL,WAAanL,EAAEmL,UAAU,GAClE,EACJO,oBAAmB,SAACR,GACdrF,GAASkF,cAAgBlF,GAASkF,cAAchzB,QAAO,SAACtX,GAAI,OAAKA,EAAKyqC,gBAAkBA,CAAc,GACxG,EACJS,+BAA8B,WACxB,OAAI5oC,UAAU6oC,eAML7oC,UAAU6oC,eAAeC,SAG3BhG,GAASmF,gBAAkBnF,GAASiG,oBAAoBC,mBACjE,EACJC,iBAAgB,WACV,GAAKnG,GAAS8F,iCAAd,CAGA,IAAIZ,EAAgBlF,GAASkF,cAC7BlF,GAASkF,cAAgB,GAAG,IACEkB,EADFC,EAAA9Z,EACX2Y,GAAa,IAA9B,IAAAmB,EAAA7pC,MAAA4pC,EAAAC,EAAAnqC,KAAAyM,MAAgC,CAAC,IAAD29B,EAAvB1rC,EAAIwrC,EAAA1qC,OACX4qC,EAAA1rC,GAAKyqC,eAActiC,MAAAujC,EAAA31B,EAAI/V,EAAK2qC,UAC9B,CAAC,OAAA1jC,GAAAwkC,EAAAtkC,EAAAF,EAAA,SAAAwkC,EAAA7Z,GAAA,CALD,CAMF,EACJwY,cAAc,GACd/E,0BAA0B,SAACr0B,EAAQ26B,GAC7B,IAAK,IAAI9rC,EAAI,EAAGA,EAAIulC,GAASgF,cAAc/nC,SAAUxC,EAC/CulC,GAASgF,cAAcvqC,GAAGmR,QAAUA,GACpC26B,GAAmBA,GAAmBvG,GAASgF,cAAcvqC,GAAG8rC,iBACjEvG,GAASiF,eAAexqC,IAG/B,EACJwqC,eAAc,SAACxqC,GACT,IAAIgC,EAAIujC,GAASgF,cAAcvqC,GAC/BgC,EAAEmP,OAAO46B,oBAAoB/pC,EAAE8pC,gBAAiB9pC,EAAEgqC,kBAAmBhqC,EAAEiqC,YACvE1G,GAASgF,cAAcpzB,OAAOnX,EAAG,EACnC,EACJksC,wBAAuB,SAACC,GAClB,IAAKA,EAAah7B,OAChB,OAAQ,EAEV,GAAIg7B,EAAaC,aACfD,EAAaH,kBAAoB,SAAS/6B,KAEtCs0B,GAASmF,eACXnF,GAASiG,oBAAsBW,EAE/B5G,GAASmG,mBAETS,EAAaE,YAAYp7B,GAEzBs0B,GAASmG,qBAEPnG,GAASmF,cACb,EAEAyB,EAAah7B,OAAOgqB,iBAAiBgR,EAAaL,gBACbK,EAAaH,kBACbG,EAAaF,YAClD1G,GAASgF,cAAcl8B,KAAK89B,QAE5B,IAAK,IAAInsC,EAAI,EAAGA,EAAIulC,GAASgF,cAAc/nC,SAAUxC,EAC/CulC,GAASgF,cAAcvqC,GAAGmR,QAAUg7B,EAAah7B,QACjDo0B,GAASgF,cAAcvqC,GAAG8rC,iBAAmBK,EAAaL,iBAC3DvG,GAASiF,eAAexqC,KAI/B,OAAO,CACT,EACJssC,qBAAoB,SAACn7B,GACf,OAAKA,EACDA,GAAUqC,OAAe,UACzBrC,GAAUsvB,OAAe,WACtBtvB,aAAM,EAANA,EAAQo7B,WAAY,GAHP,EAItB,EACJC,kBAAiB,WACX,OAAOzpC,SAASypC,mBAGbzpC,SAAS0pC,uBAEd,GAqBAC,GAA0B,KAQ1BC,GAA4B,CAChC,EAEIC,GAAe,SAACC,EAASC,EAAWC,GAEpCF,EAAQ5L,MAAM+L,YAAcH,EAAQ5L,MAAMgM,aAAeF,EAAY,KACrEF,EAAQ5L,MAAMiM,WAAaL,EAAQ5L,MAAMkM,cAAgBL,EAAY,IACvE,EAYEM,GAAqB,CAAC,EAAGrqC,SAAUyQ,QAEnC65B,GAAkB,SAACl8B,GAXM,IAACm8B,EAc1B,OAFAn8B,GAZ0Bm8B,EAYMn8B,GAPf,EAAIylB,GAAa0W,GAAWA,EAQ5BF,GAAmBj8B,IAAWpO,SAASO,cAAc6N,EAExE,EACEo8B,GAAwBF,GAYxBG,GAAa,SAACC,GAAE,OAAKpjC,GAAyBojC,EAAI,EAClDC,GAAsB,SAACtzB,GACvB,IAAI6G,EAAOrG,GAAgBR,GAAO,EAC9Bya,EAAM2Y,GAAWvsB,GAErB,OADA2W,GAAaxd,EAAKya,EAAK5T,GAChB4T,CACT,EACE8Y,GAAuB,SAACx8B,GACxB,IAAIy8B,EAAKr3B,KACLuqB,EAAI0M,GAAW,GACfxrC,EAAI8+B,EAAI,EAIR7f,GAzBkC,SAAC9P,EAAQwpB,EAAOC,GACtD,IAAIH,EAAS8S,GAAsBp8B,GACnC,IAAKspB,EAAQ,OAAQ,EACrB90B,EAASg1B,GAAQ,GAAMF,EAAOE,MAC9Bh1B,EAASi1B,GAAS,GAAMH,EAAOG,MACjC,CAmBYiT,CADMH,GAAoBv8B,EAAOyP,IACckgB,EAAG9+B,GACjD,CAAC2D,EAASm7B,GAAI,GAAKn7B,EAAS3D,GAAI,KAE3C,OADAqU,GAAau3B,GACN3sB,CACT,EAEE6sB,GAAsC,SAAC38B,EAAQwpB,EAAOC,GACtD,IAAIH,EAAS8S,GAAsBp8B,GACnC,OAAKspB,GACLA,EAAOE,MAAQA,EACfF,EAAOG,OAASA,EACT,IAHc,CAIvB,EAIEmT,GAAuB,SAAC58B,EAAQwpB,EAAOC,GACvC,GAAKzpB,EAAO68B,4BAGL,CAGL,IAAIJ,EAAKr3B,KACL03B,EAAYP,GAAoBv8B,EAAOyP,IAC3CktB,GAAoCG,EAAWtT,EAAOC,GACtDvkB,GAAau3B,EACf,MATEz8B,EAAOwpB,MAAQA,EACfxpB,EAAOypB,OAASA,CASpB,EAGEsT,GAAU,SAAC9zB,GAAG,OAAK+zB,SAAS/zB,EAAK,EACjCg0B,GAAwC,WACxC,IAaIC,EAbAC,EAAMC,iBACNC,EAA+E,GAAvD7B,GAA0B8B,0BAClDC,EAA0E,GAAvC/B,GAA0BgC,UAC7DC,EAAsF,GAAvDjC,GAA0B8B,0BACzDI,EAAgF,GAAvClC,GAA0BgC,UACnEG,EAAcN,EAAwBz7B,KAAKguB,MAAMgO,WAAWT,GAAOS,WACnEC,EAAeR,EAAwBz7B,KAAKguB,MAAMkO,YAAYX,GAAOW,YACrEnO,EAAIgO,EACJ9sC,EAAIgtC,EACJvU,EAASkS,GAA0Bx7B,OACnC+9B,EAAavB,GAAqBlT,GAClCgF,EAAIyP,EAAW,GACfxP,EAAIwP,EAAW,GAyBnB,GAtBIR,IACE5N,EAAEpB,EAAID,EAAEz9B,EAAGA,EAAK8+B,EAAIpB,EAAID,EAAK,EACxBqB,EAAEpB,EAAID,EAAEz9B,IAAG8+B,EAAK9+B,EAAIy9B,EAAIC,EAAK,GACtC2O,GAAcW,EAAehtC,GAAK,EAAK,GAGrC4sC,IACFb,GAAqBtT,EAAQqG,EAAG9+B,GAC5By4B,EAAOwK,aAAaxK,EAAOwK,YAAYrwB,MAAMu6B,SAAS,EAAG,EAAGrO,EAAG9+B,IAIjEwsC,IACFH,GAAaC,EACbxN,GAAKwN,EACLtsC,GAAKssC,EAELxN,EAAI/tB,KAAKguB,MAAQ,IAAFD,GAAO,IACtB9+B,EAAI+Q,KAAKguB,MAAQ,IAAF/+B,GAAO,IACtBqsC,EAAYt7B,KAAKguB,MAAgB,IAAVsN,GAAe,KAGpCQ,EAAwC,CAC1C,IAAI3tC,GAAK+tC,YAAcf,GAAQzT,EAAOwG,MAAMrG,SAAW,EACnD51B,GAAK+pC,WAAab,GAAQzT,EAAOwG,MAAMtG,QAAU,EACrDiS,GAAanS,EAAQv5B,EAAG8D,EAC1B,MACEy1B,EAAOwG,MAAMtG,MAAQmG,EAAI,KACzBrG,EAAOwG,MAAMrG,OAAS54B,EAAI,KACtBgD,GAAK+pC,WAAajO,GAAK,EAC3B8L,GAAanS,EAAQ4T,EAAWrpC,IAG7B6pC,GAA0ClC,GAA0ByC,uBACtD1kC,GAAaiiC,GAA0ByC,sBAAoC,GAAI,EAAGzC,GAA0B0C,8BAEjI,EA4EErQ,GAAwB,SAAC13B,GAAC,OAAK8lC,GAAmBthB,QAAQxkB,GAAK,EAAIA,EAAE03B,wBAA0B,CAAC,KAAO,EAAE,IAAM,EAAG,EAClHsQ,GAAqC,SAACn+B,EAAQo+B,GAAc,IAADC,EAAAC,EACvDC,EA1EsB,SAACjV,GAsB3B,SAASiV,IACiB3sC,SAAS4sC,mBAC5B5sC,SAAS6sC,0BAGZ7sC,SAASgpC,oBAAoB,mBAAoB2D,GAIjD3sC,SAASgpC,oBAAoB,yBAA0B2D,GAEvD3B,GAAqBtT,EAAQoV,EAAUC,GAEvCrV,EAAOwG,MAAMtG,MAAQoV,EACrBtV,EAAOwG,MAAMrG,OAASoV,EACtBvV,EAAOwG,MAAMgP,gBAAkBC,EAI1BC,IAA4BptC,SAASE,KAAKg+B,MAAMgP,gBAAkB,SACvEltC,SAASE,KAAKg+B,MAAMgP,gBAAkBE,EACtC1V,EAAOwG,MAAM+L,YAAcoD,EAC3B3V,EAAOwG,MAAMgM,aAAeoD,EAC5B5V,EAAOwG,MAAMiM,WAAaoD,EAC1B7V,EAAOwG,MAAMkM,cAAgBoD,EAC7B9V,EAAOwG,MAAMuP,WAAaC,EAC1BhW,EAAOwG,MAAMyP,YAAcC,EAC3BlW,EAAOwG,MAAM2P,UAAYC,EACzBpW,EAAOwG,MAAM6P,aAAeC,EAC5BhuC,SAASE,KAAKg+B,MAAM+P,OAASC,EAC7BluC,SAASmuC,gBAAgBjQ,MAAMkQ,SAAWC,EAC1CruC,SAASE,KAAKouC,OAASC,EACvB7W,EAAOwG,MAAMsQ,eAAiBC,EAC1B/W,EAAOwK,aAAaxK,EAAOwK,YAAYrwB,MAAMu6B,SAAS,EAAG,EAAGU,EAAUC,GAEtEnD,GAA0ByC,uBACX1kC,GAAaiiC,GAA0ByC,sBAAoC,GAAI,EAAGzC,GAA0B0C,+BAGnI,CA5DA,IAAIH,EAAavB,GAAqBlT,GAClCoV,EAAWX,EAAW,GACtBY,EAAYZ,EAAW,GACvBa,EAActV,EAAOwG,MAAMtG,MAC3BqV,EAAevV,EAAOwG,MAAMrG,OAC5BsV,EAAqBzV,EAAOwG,MAAMgP,gBAClCE,EAA6BptC,SAASE,KAAKg+B,MAAMgP,gBAEjDG,EAAiB3V,EAAOwG,MAAM+L,YAC9BqD,EAAkB5V,EAAOwG,MAAMgM,aAC/BqD,EAAgB7V,EAAOwG,MAAMiM,WAC7BqD,EAAmB9V,EAAOwG,MAAMkM,cAChCsD,EAAgBhW,EAAOwG,MAAMuP,WAC7BG,EAAiBlW,EAAOwG,MAAMyP,YAC9BG,EAAepW,EAAOwG,MAAM2P,UAC5BG,EAAkBtW,EAAOwG,MAAM6P,aAC/BG,EAAwBluC,SAASE,KAAKg+B,MAAM+P,OAC5CI,EAAsBruC,SAASmuC,gBAAgBjQ,MAAMkQ,SACrDG,EAAoBvuC,SAASE,KAAKouC,OAClCG,EAAoB/W,EAAOwG,MAAMsQ,eA8CrC,OAJAxuC,SAASo4B,iBAAiB,mBAAoBuU,GAG9C3sC,SAASo4B,iBAAiB,yBAA0BuU,GAC7CA,CACT,CAOwB+B,CAAwBtgC,GAC1CugC,EAAWnC,EAASoC,eAAiB5C,WAAatO,OAAO9F,MACzDiX,EAAYrC,EAASoC,eAAiB1C,YAAcxO,OAAO7F,OAC3DmE,EAAOC,GAAsB7tB,GAC7B0gC,EAAmB9S,EAAKpE,MACxBmX,EAAoB/S,EAAKnE,OACzBsU,EAAavB,GAAqBx8B,GAClC4gC,EAAmB7C,EAAW,GAC9B8C,EAAoB9C,EAAW,GAEnC,GAA0B,GAAtBK,EAASZ,UACX/B,GAAaz7B,GAASygC,EAAYE,GAAqB,GAAIJ,EAAWG,GAAoB,GAC1FH,EAAWG,EACXD,EAAYE,OACP,GAA0B,GAAtBvC,EAASZ,UAClB,GAAI+C,EAASM,EAAoBD,EAAiBH,EAAW,CAC3D,IAAIK,EAAmBD,EAAoBN,EAAWK,EACtDnF,GAAaz7B,GAASygC,EAAYK,GAAoB,EAAG,GACzDL,EAAYK,CACd,KAAO,CACL,IAAIC,EAAkBH,EAAmBH,EAAYI,EACrDpF,GAAaz7B,EAAQ,GAAIugC,EAAWQ,GAAmB,GACvDR,EAAWQ,CACb,EAKF1C,EAAAr+B,EAAO8vB,OAAMgP,kBAAbT,EAAaS,gBAAoB,UAEjCR,EAAA1sC,SAASE,KAAKg+B,OAAMgP,kBAApBR,EAAoBQ,gBAAoB,SAGxC9+B,EAAO8vB,MAAMtG,MAAQ+W,EAAW,KAChCvgC,EAAO8vB,MAAMrG,OAASgX,EAAY,KAEJ,GAA1BrC,EAAS4C,gBACXhhC,EAAO8vB,MAAMsQ,eAAiB,gBAC9BpgC,EAAO8vB,MAAMsQ,eAAiB,mBAC9BpgC,EAAO8vB,MAAMsQ,eAAiB,iBAC9BpgC,EAAO8vB,MAAMsQ,eAAiB,4BAC9BpgC,EAAO8vB,MAAMsQ,eAAiB,oBAC9BpgC,EAAO8vB,MAAMsQ,eAAiB,cAC9BpgC,EAAO8vB,MAAMsQ,eAAiB,aAGhC,IAAIa,EAAkD,GAAtC7C,EAASd,0BAAkCF,iBAAmB,EAC9E,GAA0C,GAAtCgB,EAASd,0BAAgC,CAC3C,IAAI4D,EAAYX,EAAWU,EAAU,EACjCE,EAAaV,EAAYQ,EAAU,EACvCrE,GAAqB58B,EAAQkhC,EAAUC,GACnCnhC,EAAO8zB,aAAa9zB,EAAO8zB,YAAYrwB,MAAMu6B,SAAS,EAAG,EAAGkD,EAAUC,EAC5E,CACA,OAAO5C,CACT,EAkDE6C,GAA6B,SAACphC,EAAQo+B,GAMtC,GAJ0B,GAAtBA,EAASZ,WAAwD,GAAtCY,EAASd,2BACtCa,GAAmCn+B,EAAQo+B,GAGzCp+B,EAAOyrB,kBACTzrB,EAAOyrB,wBACF,KAAIzrB,EAAOqhC,wBAGhB,OAAOjN,GAASiH,qBAAuB,GAAK,EAF5Cr7B,EAAOqhC,wBAAwB7U,QAAQ8U,qBAGzC,CAQA,OANA9F,GAA4B4C,EAExBA,EAASH,uBACM1kC,GAAa6kC,EAASH,sBAAoC,GAAI,EAAGG,EAASF,+BAGtF,CACT,EAmBEzT,GAAqB,SAACzqB,GACtB,OAAIA,EAAOyqB,oBACTzqB,EAAOyqB,qBASF,GALD74B,SAASE,KAAK24B,oBACR,GAEF,CAGZ,EAiCE8W,GAAuB,SAACC,EAAarrC,GACrCrB,EAAU0sC,GAAc,GAAMrrC,EAAEyrB,UAChC,IAAK,IAAI/yB,EAAI,EAAGA,EAAIsH,EAAEsrC,KAAKpwC,SAAUxC,EACnCiG,EAAW0sC,EAAc,EAAF3yC,EAAM,IAAM,GAAMsH,EAAEsrC,KAAK5yC,GAElD,IAASA,EAAI,EAAGA,EAAIsH,EAAEurC,QAAQrwC,SAAUxC,EAEpCiG,EAAW0sC,EAAc,EAAF3yC,EAAM,KAAO,GADX,UAAvB8P,EAAOxI,EAAEurC,QAAQ7yC,IACuBsH,EAAEurC,QAAQ7yC,GAAGiB,MAEbqG,EAAEurC,QAAQ7yC,GAGxD,IAASA,EAAI,EAAGA,EAAIsH,EAAEurC,QAAQrwC,SAAUxC,EAEpCmF,EAAOwtC,EAAY3yC,EAAI,MADE,UAAvB8P,EAAOxI,EAAEurC,QAAQ7yC,IACasH,EAAEurC,QAAQ7yC,GAAG8yC,QAIG,GAAhBxrC,EAAEurC,QAAQ7yC,GAG9CmF,EAAOwtC,EAAc,MAASrrC,EAAEyrC,UAChCptC,EAAUgtC,EAAc,MAAQ,GAAMrrC,EAAE+e,MACxC1gB,EAAUgtC,EAAc,GAAK,GAAMrrC,EAAEsrC,KAAKpwC,OAC1CmD,EAAUgtC,EAAc,IAAM,GAAMrrC,EAAEurC,QAAQrwC,OAC9Co1B,GAAatwB,EAAEsZ,GAAI+xB,EAAc,KAAM,IACvC/a,GAAatwB,EAAE0rC,QAASL,EAAc,KAAM,GAC9C,EA4BEM,GAAmB,SAACC,GAAE,OAAKt+B,EAAMu+B,cAAcD,EAAI,EACnDE,GAA8BH,GAG9BI,GAAkB,SAACC,EAASnP,GAC5BvvB,EAAM2+B,aAAahX,GAAGqG,SAAS0Q,GAAU/W,GAAGyG,QAAQmB,GACtD,EACEqP,GAA6BH,GAM7BI,GAHgB,SAACtiC,EAAQyP,GACzBhM,EAAM8+B,WAAWviC,EAAQorB,GAAG6G,QAAQxiB,GACtC,EAOE+yB,GAHmB,SAACxiC,EAAQyP,GAC5BhM,EAAM0xB,sBAAqC,cAAEn1B,EAAQorB,GAAG6G,QAAQxiB,GAClE,EAKEgzB,GAD4B,SAACV,GAAE,OAAKt+B,EAAMi/B,uBAAuBX,EAAI,EAQrEY,GAHwB,SAACR,EAASjtB,EAAO9lB,GACzCqU,EAAMm/B,mBAAmBxX,GAAGqG,SAAS0Q,GAAUjtB,EAAOuQ,GAAar2B,GACrE,EAIEyzC,GAAgB,SAAC7iC,EAAQjM,GAEX,OAAViM,EAMFyD,EAAMq/B,8BAAgC/uC,EACnB,OAAViM,IAMTyD,EAAMs/B,gCAAkChvC,GAE1C0P,EAAMu/B,WAAWhjC,EAAQorB,GAAGoG,QAAQz9B,GACtC,EACEkvC,GAA2BJ,GAG3BK,GAAoB,SAACljC,EAAQkV,EAAOnhB,GACpC0P,EAAM0/B,eAAenjC,EAAQkV,EAAOkW,GAAGoG,QAAQz9B,GACjD,EACEqvC,GAA+BF,GAM/BG,GAHqB,SAACrjC,EAAQkV,EAAOnhB,EAAQ8J,EAAQylC,GACrD7/B,EAAM8/B,gBAAgBvjC,EAAQkV,EAAOkW,GAAGoG,QAAQz9B,GAAS8J,EAAQylC,EACnE,EAIEE,GAAqB,SAACxjC,EAAQyjC,GAE9BhgC,EAAMigC,gBAAgB1jC,EAAQorB,GAAGsG,aAAa+R,GAEhD,EACEE,GAAgCH,GAGhCI,GAAsB,SAAC5jC,EAAQ6jC,GAC/BpgC,EAAMqgC,iBAAiB9jC,EAAQorB,GAAGuG,cAAckS,GAClD,EACEE,GAAiCH,GAGjCI,GAAiB,SAACC,EAAMC,GACxBzgC,EAAM0gC,YAAYF,EAAM7Y,GAAG8G,SAASgS,GACtC,EACEE,GAA4BJ,GAG5BK,GAAiB,SAACrkC,EAAQskC,GAC1B7gC,EAAM8gC,YAAYvkC,EAAQorB,GAAGwG,SAAS0S,GACxC,EACEE,GAA4BH,GAM5BI,GAH2B,SAACzkC,EAAQyP,GACpChM,EAAMihC,sBAAsB1kC,EAAQorB,GAAG+G,mBAAmB1iB,GAC5D,EAIEk1B,GAAqB,SAACC,GACtBnhC,EAAMohC,gBAAgBzZ,GAAG0G,KAAK8S,GAChC,EACEE,GAAgCH,GAIhCI,GAAwBJ,GACxBK,GAAmCD,GAGnCE,GAAgB,SAAClD,EAAImD,EAAIC,EAAIC,GAAE,OAAK3hC,EAAM4hC,WAAWtD,EAAImD,EAAIC,EAAIC,EAAI,EACrEE,GAA2BL,GAI3BM,GADmB,SAACxD,GAAE,OAAKt+B,EAAM+hC,cAAczD,EAAI,EAInD0D,GAA2B,SAAC1D,EAAImD,GAAE,OAAKzhC,EAAMiiC,sBAAsB3D,EAAImD,EAAI,EAC3ES,GAAsCF,GAItCG,GADe,SAAC7D,EAAImD,GAAE,OAAKzhC,EAAMoiC,UAAU9D,EAAImD,EAAI,EAInDY,GAAuB,SAAC/D,EAAImD,EAAIC,EAAIC,GAAE,OAAK3hC,EAAMsiC,kBAAkBhE,EAAImD,EAAIC,EAAIC,EAAI,EACnFY,GAAkCF,GAGlCG,GAAqB,SAAClE,EAAImD,EAAIC,EAAIC,EAAIc,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAE,OAAK9iC,EAAM+iC,gBAAgBzE,EAAImD,EAAIC,EAAIC,EAAIc,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAI,EAC/HE,GAAgCR,GAGhCS,GAAgB,SAAC1mC,EAAQ8P,EAAMoJ,EAAMytB,GAO/BztB,GAAQpJ,EACVrM,EAAMmjC,WAAW5mC,EAAQ5L,EAAQuyC,EAAOztB,EAAMpJ,GAE9CrM,EAAMmjC,WAAW5mC,EAAQ8P,EAAM62B,EAIrC,EACEE,GAA2BH,GAG3BI,GAAmB,SAAC9mC,EAAQnC,EAAQiS,EAAMoJ,GAExCpJ,GAAQrM,EAAMsjC,cAAc/mC,EAAQnC,EAAQzJ,EAAQ8kB,EAAMpJ,EAG9D,EACEk3B,GAA8BF,GAI9BG,GAD4B,SAAClF,GAAE,OAAKt+B,EAAMyjC,uBAAuBnF,EAAI,EAKrEoF,GADW,SAACpF,GAAE,OAAKt+B,EAAM2jC,MAAMrF,EAAI,EAInCsF,GAAmB,SAACtF,EAAImD,EAAIC,EAAIC,GAAE,OAAK3hC,EAAM6jC,cAAcvF,EAAImD,EAAIC,EAAIC,EAAI,EAC3EmC,GAA8BF,GAG9BG,GAAmB,SAACzzC,EAAQ0zC,EAAY33C,GAExC2T,EAAMikC,cAAc3zC,EAAQ0zC,EAAY7yC,EAAW9E,GAAQ,EAC7D,EACE63C,GAA8BH,GAG9BI,GAAmB,SAAC7zC,EAAQ0zC,EAAY33C,GAExC2T,EAAMokC,cAAc9zC,EAAQ0zC,EAAYjzC,EAAU1E,GAAQ,EAC5D,EACEg4C,GAA8BF,GAO9BG,GAJoB,SAACh0C,EAAQ0zC,EAAY33C,GAEzC2T,EAAMukC,eAAej0C,EAAQ0zC,EAAY/yC,EAAW5E,GAAQ,EAC9D,EAKEm4C,GADgB,SAAClG,EAAImD,EAAIC,EAAIC,GAAE,OAAK3hC,EAAMykC,WAAWnG,EAAImD,EAAIC,EAAIC,EAAI,EAKrE+C,GADiB,SAACpG,GAAE,OAAKt+B,EAAM2kC,WAAWrG,EAAI,EAK9CsG,GADkB,SAACtG,GAAE,OAAKt+B,EAAM6kC,aAAavG,EAAI,EAYjDwG,GARoB,SAACC,EAAMv3B,EAAOoX,GAMlC,OADAA,EAAU1rB,OAAO0rB,GACV5kB,EAAMglC,eAAerd,GAAGgH,MAAMoW,GAAOv3B,EAAOoX,EACrD,EAOEqgB,GAHoB,SAACC,EAAQpY,GAC7B9sB,EAAMkxB,eAA+B,eAAEgU,EAAQpY,EACjD,EAIEqY,GAAe,SAACC,EAAKC,EAAOC,EAAM9d,GAClCxnB,EAAMulC,YAAYH,IAAOC,IAASC,IAAQ9d,EAC5C,EACEge,GAA0BL,GAG1BM,GAAmB,SAAClW,GACpBvvB,EAAM0lC,cAAc/d,GAAGyG,QAAQmB,GACjC,EACEoW,GAA8BF,GAG9BG,GAA0B,SAACrpC,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ+f,EAAQC,EAAWvwB,GAO1F,OAAIzV,EAAMs/B,kCAAoC0G,OAC5ChmC,EAAMimC,qBAAqB1pC,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ+f,EAAQC,EAAWvwB,QAG9FzV,EAAMimC,qBAAqB1pC,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ+f,EAAQp1C,EAAQ8kB,EAAMuwB,EAGnG,EACEE,GAAqCN,GAGrCO,GAA0B,SAAC5pC,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ8G,EAAOiZ,EAAQC,EAAWvwB,GAC/FzV,EAAMs/B,gCACRt/B,EAAMomC,qBAAqB7pC,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ8G,EAAOiZ,EAAQC,EAAWvwB,GAEnGzV,EAAMomC,qBAAqB7pC,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ8G,EAAOiZ,EAAQp1C,EAAQ8kB,EAAMuwB,EAE1G,EACEK,GAAqCF,GAarCG,GAV6B,SAAC/pC,EAAQspC,EAAOU,EAASC,EAASzgB,EAAOC,EAAQygB,EAAQT,EAAWvwB,GAE/F,OAAIzV,EAAMs/B,kCAAoC0G,OAC5ChmC,EAAM0mC,wBAAwBnqC,EAAQspC,EAAOU,EAASC,EAASzgB,EAAOC,EAAQygB,EAAQT,EAAWvwB,QAGnGzV,EAAM0mC,wBAAwBnqC,EAAQspC,EAAOU,EAASC,EAASzgB,EAAOC,EAAQygB,EAAQ91C,EAAQ8kB,EAAMuwB,EAGxG,EAWEW,GAP6B,SAACpqC,EAAQspC,EAAOU,EAASC,EAASI,EAAS7gB,EAAOC,EAAQ8G,EAAO2Z,EAAQT,EAAWvwB,GAC7GzV,EAAMs/B,gCACRt/B,EAAM6mC,wBAAwBtqC,EAAQspC,EAAOU,EAASC,EAASI,EAAS7gB,EAAOC,EAAQ8G,EAAO2Z,EAAQT,EAAWvwB,GAEjHzV,EAAM6mC,wBAAwBtqC,EAAQspC,EAAOU,EAASC,EAASI,EAAS7gB,EAAOC,EAAQ8G,EAAO2Z,EAAQ91C,EAAQ8kB,EAAMuwB,EAExH,EAKEc,GADuB,SAACxI,EAAImD,EAAIC,EAAIC,EAAIc,GAAE,OAAKziC,EAAM+mC,kBAAkBzI,EAAImD,EAAIC,EAAIC,EAAIc,EAAI,EAK3FuE,GADoB,SAAC1I,EAAImD,EAAIC,EAAIC,EAAIc,EAAIC,EAAIC,EAAIC,GAAE,OAAK5iC,EAAMinC,eAAe3I,EAAImD,EAAIC,EAAIC,EAAIc,EAAIC,EAAIC,EAAIC,EAAI,EAK7GsE,GADuB,SAAC5I,EAAImD,EAAIC,EAAIC,EAAIc,EAAIC,EAAIC,EAAIC,GAAE,OAAK5iC,EAAMmnC,kBAAkB7I,EAAImD,EAAIC,EAAIC,EAAIc,EAAIC,EAAIC,EAAIC,EAAI,EAKnHwE,GADuB,SAAC9I,EAAImD,EAAIC,EAAIC,EAAIc,EAAIC,EAAIC,EAAIC,EAAIC,GAAE,OAAK7iC,EAAMqnC,kBAAkB/I,EAAImD,EAAIC,EAAIC,EAAIc,EAAIC,EAAIC,EAAIC,EAAIC,EAAI,EAI3HyE,GAAmB,WACnB,IAAIt7B,EAAK2b,GAAGsH,SAAStH,GAAGqG,UACpB0Q,EAAU1+B,EAAMunC,gBAQpB,OANA7I,EAAQ/yC,KAAOqgB,EAGf0yB,EAAQ8I,iBAAmB9I,EAAQ+I,mBAAqB/I,EAAQgJ,0BAA4B,EAC5FhJ,EAAQiJ,iBAAmB,EAC3BhgB,GAAGqG,SAAShiB,GAAM0yB,EACX1yB,CACT,EACE47B,GAA8BN,GAG9BO,GAAkB,SAACC,GACnB,IAAI97B,EAAK2b,GAAGsH,SAAStH,GAAGyG,SAGxB,OAFAzG,GAAGyG,QAAQpiB,GAAMhM,EAAM+nC,aAAaD,GAE7B97B,CACT,EACEg8B,GAA6BH,GAG7BI,GAAc,SAAC3J,GAAE,OAAKt+B,EAAMkoC,SAAS5J,EAAI,EACzC6J,GAAyBF,GAGzBG,GAAmB,SAACv7C,EAAGkhC,GACvB,IAAK,IAAI3iC,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI4gB,EAAKjb,EAAUg9B,EAAY,EAAF3iC,GAAO,GAChCkF,EAASq3B,GAAGoG,QAAQ/hB,GAInB1b,IAEL0P,EAAMqoC,aAAa/3C,GACnBA,EAAO3E,KAAO,EACdg8B,GAAGoG,QAAQ/hB,GAAM,KAEbA,GAAMhM,EAAMq/B,gCAA+Br/B,EAAMq/B,8BAAgC,GACjFrzB,GAAMhM,EAAMs/B,kCAAiCt/B,EAAMs/B,gCAAkC,GAC3F,CACF,EACEgJ,GAA8BF,GAG9BG,GAAwB,SAAC17C,EAAGohC,GAC5B,IAAK,IAAI7iC,EAAI,EAAGA,EAAIyB,IAAKzB,EAAG,CAC1B,IAAI4gB,EAAKjb,EAAUk9B,EAAiB,EAAF7iC,GAAO,GACrC40C,EAAcrY,GAAGsG,aAAajiB,GAC7Bg0B,IACLhgC,EAAMwoC,kBAAkBxI,GACxBA,EAAYr0C,KAAO,EACnBg8B,GAAGsG,aAAajiB,GAAM,KACxB,CACF,EACEy8B,GAAmCF,GAGnCG,GAAmB,SAAC18B,GACpB,GAAKA,EAAL,CACA,IAAI0yB,EAAU/W,GAAGqG,SAAShiB,GACrB0yB,GAML1+B,EAAM2oC,cAAcjK,GACpBA,EAAQ/yC,KAAO,EACfg8B,GAAGqG,SAAShiB,GAAM,MALhB2b,GAAGoH,YAAY,KALF,CAWjB,EACE6Z,GAA8BF,GAY9BG,GATmB,SAACh8C,EAAGi8C,GACvB,IAAK,IAAI19C,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI4gB,EAAKjb,EAAU+3C,EAAQ,EAAF19C,GAAO,GAC5B29C,EAAQphB,GAAG6G,QAAQxiB,GAClB+8B,IACL/oC,EAAMgpC,YAAYD,GAClBphB,GAAG6G,QAAQxiB,GAAM,KACnB,CACF,EAaEi9B,GATsB,SAACp8C,EAAGi8C,GAC1B,IAAK,IAAI19C,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI4gB,EAAKjb,EAAU+3C,EAAQ,EAAF19C,GAAO,GAC5B29C,EAAQphB,GAAG6G,QAAQxiB,GAClB+8B,IACL/oC,EAAM0xB,sBAAsC,eAAEqX,GAC9CphB,GAAG6G,QAAQxiB,GAAM,KACnB,CACF,EAIEk9B,GAAyB,SAACr8C,EAAGqhC,GAC7B,IAAK,IAAI9iC,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI4gB,EAAKjb,EAAUm9B,EAAkB,EAAF9iC,GAAO,GACtCg1C,EAAezY,GAAGuG,cAAcliB,GAC/Bo0B,IACLpgC,EAAMmpC,mBAAmB/I,GACzBA,EAAaz0C,KAAO,EACpBg8B,GAAGuG,cAAcliB,GAAM,KACzB,CACF,EACEo9B,GAAoCF,GAGpCG,GAAoB,SAACx8C,EAAG4hC,GACxB,IAAK,IAAIrjC,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI4gB,EAAKjb,EAAU09B,EAAa,EAAFrjC,GAAO,GACjCq1C,EAAU9Y,GAAG8G,SAASziB,GACrBy0B,IACLzgC,EAAMspC,cAAc7I,GACpBA,EAAQ90C,KAAO,EACfg8B,GAAG8G,SAASziB,GAAM,KACpB,CACF,EACEu9B,GAA+BF,GAG/BG,GAAkB,SAACx9B,GACnB,GAAKA,EAAL,CACA,IAAIujB,EAAS5H,GAAGyG,QAAQpiB,GACnBujB,GAMLvvB,EAAMypC,aAAala,GACnB5H,GAAGyG,QAAQpiB,GAAM,MAJf2b,GAAGoH,YAAY,KALF,CAUjB,EACE2a,GAA6BF,GAc7BG,GAXgB,SAAC39B,GACjB,GAAKA,EAAL,CACA,IAAI+4B,EAAOpd,GAAGgH,MAAM3iB,GACf+4B,GAIL/kC,EAAM4pC,WAAW7E,GACjBA,EAAKp5C,KAAO,EACZg8B,GAAGgH,MAAM3iB,GAAM,MALb2b,GAAGoH,YAAY,KAHF,CASjB,EAIE8a,GAAoB,SAACh9C,EAAGshC,GACxB,IAAK,IAAI/iC,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI4gB,EAAKjb,EAAUo9B,EAAa,EAAF/iC,GAAO,GACjCy1C,EAAUlZ,GAAGwG,SAASniB,GAGrB60B,IACL7gC,EAAM8pC,cAAcjJ,GACpBA,EAAQl1C,KAAO,EACfg8B,GAAGwG,SAASniB,GAAM,KACpB,CACF,EACE+9B,GAA+BF,GAa/BG,GAV8B,SAACn9C,EAAGi8C,GAClC,IAAK,IAAI19C,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI4gB,EAAKjb,EAAU+3C,EAAQ,EAAF19C,GAAO,GAC5B6+C,EAAoBtiB,GAAG+G,mBAAmB1iB,GACzCi+B,IACLjqC,EAAMkqC,wBAAwBD,GAC9BA,EAAkBt+C,KAAO,EACzBg8B,GAAG+G,mBAAmB1iB,GAAM,KAC9B,CACF,EAIEm+B,GAAwB,SAACt9C,EAAGwhC,GAC5B,IAAK,IAAIjjC,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI4gB,EAAKjb,EAAUs9B,EAAS,EAAFjjC,GAAO,GACjC4U,EAAMoqC,kBAAkBziB,GAAG0G,KAAKriB,IAChC2b,GAAG0G,KAAKriB,GAAM,IAChB,CACF,EACEq+B,GAAmCF,GAInCG,GAA2BH,GAC3BI,GAAsCD,GAGtCE,GAAe,SAAClM,GAAE,OAAKt+B,EAAMyqC,UAAUnM,EAAI,EAC3CoM,GAA0BF,GAG1BG,GAAe,SAAC9wB,GAChB7Z,EAAM4qC,YAAY/wB,EACpB,EACEgxB,GAA0BF,GAI1BG,GADiB,SAACxM,EAAImD,GAAE,OAAKzhC,EAAM+qC,WAAWzM,EAAImD,EAAI,EAOtDuJ,GAHkB,SAACtM,EAASnP,GAC5BvvB,EAAMirC,aAAatjB,GAAGqG,SAAS0Q,GAAU/W,GAAGyG,QAAQmB,GACtD,EAIE2b,GAAa,SAAC5M,GAAE,OAAKt+B,EAAMmrC,QAAQ7M,EAAI,EACvC8M,GAAwBF,GAGxBG,GAA8B,SAAC55B,GAC/BzR,EAAMsrC,yBAAyB75B,EACjC,EACE85B,GAAyCF,GAGzCG,GAAgB,SAACj/C,EAAMk/C,EAAOjc,GAE9BxvB,EAAM0rC,WAAWn/C,EAAMk/C,EAAOjc,EAEhC,EACEmc,GAA2BH,GAG3BI,GAAyB,SAACr/C,EAAMk/C,EAAOjc,EAAOqc,GAC9C7rC,EAAM8rC,oBAAoBv/C,EAAMk/C,EAAOjc,EAAOqc,EAChD,EACEE,GAAoCH,GAIpCI,GAA8BJ,GAC9BK,GAAyCD,GAIzCE,GAA4BN,GAC5BO,GAAuCD,GAIvCE,GAA4BR,GAC5BS,GAAuCD,GAIvCE,GAA2BV,GAC3BW,GAAsCD,GAEtCE,GAAuB,GAGvBC,GAAiB,SAAC5/C,EAAG6/C,GAGrB,IADA,IAAIC,EAAWH,GAAqB3/C,GAC3BzB,EAAI,EAAGA,EAAIyB,EAAGzB,IACrBuhD,EAASvhD,GAAK2F,EAAU27C,EAAS,EAAFthD,GAAO,GAGxC4U,EAAM4sC,YAAYD,EACpB,EACEE,GAA4BJ,GAI5BK,GAAoBL,GACpBM,GAA+BD,GAI/BE,GAAsBP,GACtBQ,GAAiCD,GAGjCE,GAAkB,SAAC3gD,EAAMijC,EAAOv4B,EAAMk2C,GAEtCntC,EAAMotC,aAAa7gD,EAAMijC,EAAOv4B,EAAMk2C,EAExC,EACEE,GAA6BH,GAG7BI,GAA2B,SAAC/gD,EAAMijC,EAAOv4B,EAAMk2C,EAAStB,GACxD7rC,EAAMutC,sBAAsBhhD,EAAMijC,EAAOv4B,EAAMk2C,EAAStB,EAC1D,EACE2B,GAAsCF,GAItCG,GAAgCH,GAChCI,GAA2CD,GAI3CE,GAA8BL,GAC9BM,GAAyCD,GAIzCE,GAA8BP,GAC9BQ,GAAyCD,GAIzCE,GAA6BT,GAC7BU,GAAwCD,GAUxCE,GAPuB,SAAC1hD,EAAM8X,EAAOC,EAAKkrB,EAAOv4B,EAAMk2C,GAKvDD,GAAgB3gD,EAAMijC,EAAOv4B,EAAMk2C,EACrC,EAIEe,GAAY,SAAC5P,GAAE,OAAKt+B,EAAMmuC,OAAO7P,EAAI,EACrC8P,GAAuBF,GAGvBG,GAA6B,SAAC58B,GAC9BzR,EAAMsuC,wBAAwB78B,EAChC,EACE88B,GAAwCF,GAIxCG,GADc,SAAClQ,GAAE,OAAKt+B,EAAMyuC,SAASnQ,EAAI,EAOzCoQ,GAHiB,SAACnyC,GAClByD,EAAM0xB,sBAAmC,YAAEn1B,EAC7C,EAKEoyC,GAD0B,WAAH,OAAS3uC,EAAM4uC,sBAAuB,EAc7DC,GAVe,SAAC7+C,EAAWwd,GAC3B,IAAIu3B,EAAO/kC,EAAM8uC,UAAU9+C,EAAWwd,GACtC,GAAIu3B,EAAM,CACR,IAAI/4B,EAAK2b,GAAGsH,SAAStH,GAAGgH,OAGxB,OAFAoW,EAAKp5C,KAAOqgB,EACZ2b,GAAGgH,MAAM3iB,GAAM+4B,EACR/4B,CACT,CACA,OAAO,CACT,EAKE+iC,GADY,WAAH,OAAS/uC,EAAMuO,QAAS,EAKjCygC,GADW,WAAH,OAAShvC,EAAMivC,OAAQ,EAQ/BC,GAJ6B,SAAC3yC,EAAQ4yC,EAAYC,EAAoBhP,GACtEpgC,EAAMqvC,wBAAwB9yC,EAAQ4yC,EAAYC,EACfznB,GAAGuG,cAAckS,GACtD,EAQEkP,GAJ0B,SAAC/yC,EAAQ4yC,EAAYI,EAAW1O,EAASgF,GACnE7lC,EAAMwvC,qBAAqBjzC,EAAQ4yC,EAAYI,EACf5nB,GAAGwG,SAAS0S,GAAUgF,EACxD,EAOE4J,GAH6B,SAAClzC,EAAQ4yC,EAAYtO,EAASgF,EAAO6J,GAClE1vC,EAAM2vC,wBAAwBpzC,EAAQ4yC,EAAYxnB,GAAGwG,SAAS0S,GAAUgF,EAAO6J,EACjF,EAIEE,GAAe,SAACtR,GAAE,OAAKt+B,EAAM6vC,UAAUvR,EAAI,EAC3CwR,GAA0BF,GAG1BG,GAAgB,SAACljD,EAAGkhC,GACpBpG,GAAGwH,UAAUtiC,EAAGkhC,EAAS,eAAgBpG,GAAGoG,QAE9C,EACEiiB,GAA2BD,GAO3BE,GAJqB,SAACpjD,EAAGi8C,GACzBnhB,GAAGwH,UAAUtiC,EAAGi8C,EAAK,oBAAqBnhB,GAAGsG,aAE/C,EAQEiiB,GAJgB,SAACrjD,EAAGi8C,GACpBnhB,GAAGwH,UAAUtiC,EAAGi8C,EAAK,cAAenhB,GAAG6G,QAEzC,EAkBE2hB,GAdmB,SAACtjD,EAAGi8C,GACvB,IAAK,IAAI19C,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CAC1B,IAAI29C,EAAQ/oC,EAAM0xB,sBAAsC,iBACxD,IAAKqX,EAAO,CAEV,IADAphB,GAAGoH,YAAY,MACR3jC,EAAIyB,GAAGkE,EAAU+3C,EAAU,EAAJ19C,KAAS,GAAM,EAC7C,MACF,CACA,IAAI4gB,EAAK2b,GAAGsH,SAAStH,GAAG6G,SACxBua,EAAMp9C,KAAOqgB,EACb2b,GAAG6G,QAAQxiB,GAAM+8B,EACjBh4C,EAAU+3C,EAAQ,EAAF19C,GAAO,GAAM4gB,CAC/B,CACF,EAIEokC,GAAsB,SAACvjD,EAAGqhC,GAC1BvG,GAAGwH,UAAUtiC,EAAGqhC,EAAe,qBAAsBvG,GAAGuG,cAE1D,EACEmiB,GAAiCD,GAGjCE,GAAiB,SAACzjD,EAAG4hC,GACrB9G,GAAGwH,UAAUtiC,EAAG4hC,EAAU,gBAAiB9G,GAAG8G,SAEhD,EACE8hB,GAA4BD,GAG5BE,GAAiB,SAAC3jD,EAAGshC,GACrBxG,GAAGwH,UAAUtiC,EAAGshC,EAAU,gBAAiBxG,GAAGwG,SAEhD,EACEsiB,GAA4BD,GAO5BE,GAJ2B,SAAC7jD,EAAGi8C,GAC/BnhB,GAAGwH,UAAUtiC,EAAGi8C,EAAK,0BAA2BnhB,GAAG+G,mBAErD,EAIEiiB,GAAqB,SAAC9jD,EAAG+jD,GACzBjpB,GAAGwH,UAAUtiC,EAAG+jD,EAAQ,oBAAqBjpB,GAAG0G,KAElD,EACEwiB,GAAgCF,GAIhCG,GAAwBH,GACxBI,GAAmCD,GAInCE,GADoB,SAAC1S,GAAE,OAAKt+B,EAAMixC,eAAe3S,EAAI,EAIrD4S,GAA+B,SAACC,EAAUzS,EAASjtB,EAAO2/B,EAASxjD,EAAQye,EAAMpV,EAAMtL,GAEvF,IAAIyK,EAAO4J,EAAMmxC,GADjBzS,EAAU/W,GAAGqG,SAAS0Q,GACcjtB,GACpC,GAAIrb,EAAM,CAER,IAAIi7C,EAA0B1lD,GAAQq3B,GAAa5sB,EAAKzK,KAAMA,EAAMylD,GAChExjD,IAAQmD,EAASnD,GAAS,GAAMyjD,GAChChlC,IAAMtb,EAASsb,GAAO,GAAMjW,EAAKiW,MACjCpV,IAAMlG,EAASkG,GAAO,GAAMb,EAAKa,KACvC,CACF,EAKEq6C,GAFqB,SAAC5S,EAASjtB,EAAO2/B,EAASxjD,EAAQye,EAAMpV,EAAMtL,GAAI,OACvEulD,GAA6B,kBAAmBxS,EAASjtB,EAAO2/B,EAASxjD,EAAQye,EAAMpV,EAAMtL,EAAM,EAOnG4lD,GAFsB,SAAC7S,EAASjtB,EAAO2/B,EAASxjD,EAAQye,EAAMpV,EAAMtL,GAAI,OACxEulD,GAA6B,mBAAoBxS,EAASjtB,EAAO2/B,EAASxjD,EAAQye,EAAMpV,EAAMtL,EAAM,EAgBpG6lD,GAZ+B,SAAC9S,EAAS+S,EAAmBL,EAASxjD,EAAQ8jD,GAG7E,IAAIj7C,EAASuJ,EAAM2xC,0BAFnBjT,EAAU/W,GAAGqG,SAAS0Q,GAEgC+S,GACtD,GAAKh7C,EACL,GAAIi7C,GAAoBN,EAAU,EAAG,CACnC,IAAIC,EAA0BruB,GAAavsB,EAAQi7C,EAAkBN,GACjExjD,IAAQmD,EAASnD,GAAS,GAAMyjD,EACtC,MACMzjD,IAAQmD,EAASnD,GAAS,GAAM,EAExC,EA6BEgkD,GAzB6B,SAAClT,EAAS+S,EAAmBI,EAAOC,GACjE,GAAKA,EAQL,GAFApT,EAAU/W,GAAGqG,SAAS0Q,GAET,OAATmT,EAAJ,CAMA,IAAIp7C,EAASuJ,EAAM+xC,+BAA+BrT,EAAS+S,EAAmBI,GAC9E,GAAe,OAAXp7C,EACJ,GAAa,OAATo7C,EACF,IAAK,IAAIzmD,EAAI,EAAGA,EAAIqL,EAAO7I,OAAQxC,IACjC2F,EAAU+gD,EAAW,EAAF1mD,GAAO,GAAMqL,EAAOrL,QAGzC2F,EAAS+gD,GAAS,GAAMr7C,CAT1B,KAJA,CACE,IAAI9K,EAAOqU,EAAM2xC,0BAA0BjT,EAAS+S,GACpD1gD,EAAS+gD,GAAS,GAAMnmD,EAAKiC,OAAO,CAEtC,MATE+5B,GAAGoH,YAAY,KAoBnB,EA6BEijB,GAzByB,SAACtT,EAASuT,EAAcC,EAAgBL,EAAOC,GACxE,GAAKA,EAML,GAAIG,EAAe,GAAuB,GAAlBC,EACtBvqB,GAAGoH,YAAY,UADjB,CAIA2P,EAAU/W,GAAGqG,SAAS0Q,GAEtB,IADA,IAAIoK,EAAM,GACD19C,EAAI,EAAGA,EAAI6mD,EAAc7mD,IAChC09C,EAAIrvC,KAAK1I,EAAUmhD,EAAmB,EAAF9mD,GAAO,IAG7C,IAAIqL,EAASuJ,EAAMmyC,kBAAkBzT,EAASoK,EAAK+I,GACnD,GAAKp7C,EAEL,KAAIwP,EAAMxP,EAAO7I,OACjB,IAASxC,EAAI,EAAGA,EAAI6a,EAAK7a,IACvB2F,EAAU+gD,EAAW,EAAF1mD,GAAO,GAAMqL,EAAOrL,EAFlB,CAVvB,MANEu8B,GAAGoH,YAAY,KAoBnB,EAgBEqjB,GAZwB,SAAC1T,EAAS2T,EAAU7iB,EAAOpB,GACnD,IAAI33B,EAASuJ,EAAMsyC,mBAAmB3qB,GAAGqG,SAAS0Q,IAC9Cz4B,EAAMxP,EAAO7I,OACbqY,EAAMosC,IACRpsC,EAAMosC,GAERthD,EAASy+B,GAAQ,GAAMvpB,EACvB,IAAK,IAAI7a,EAAI,EAAGA,EAAI6a,IAAO7a,EAAG,CAC5B,IAAI4gB,EAAK2b,GAAGyG,QAAQlX,QAAQzgB,EAAOrL,IACnC2F,EAAUq9B,EAAY,EAAFhjC,GAAO,GAAM4gB,CACnC,CACF,EAKEumC,GAAuB,SAAC7T,EAAS/yC,GAAI,OACrCqU,EAAMwyC,kBAAkB7qB,GAAGqG,SAAS0Q,GAAU1c,GAAar2B,GAAO,EAClE8mD,GAAkCF,GAElCG,GAAgB,SAAC17C,EAAKmsB,GACtBlyB,EAAU+F,GAAM,GAAMmsB,EAEtBlyB,EAAW+F,EAAM,GAAK,IAAOmsB,EADjBlyB,EAAU+F,GAAM,IACc,UAC5C,EAGE27C,GAAqB,WACrB,IAAIC,EAAOllB,GAAiC1tB,GAE5C,OADA4yC,EAAOA,EAAKz+C,OAAOy+C,EAAK34C,KAAI,SAACvH,GAAC,MAAK,MAAQA,CAAC,IAE9C,EAEEmgD,GAAqB,SAACC,EAAO5lD,EAAG+J,GAMhC,GAAK/J,EAAL,CAIA,IAAI+yB,OAAMpwB,EACV,OAAQijD,GACN,KAAK,MACH7yB,EAAM,EACN,MACF,KAAK,MAMH,YALY,GAARhpB,GAAqB,GAARA,GACf0wB,GAAGoH,YAAY,OAKnB,KAAK,MACL,KAAK,MACH9O,EAAM,EACN,MACF,KAAK,MAKH,IAAI8yB,EAAU/yC,EAAMgzC,aAAa,OACjC/yB,EAAM8yB,EAAUA,EAAQnlD,OAAS,EACjC,MAEF,KAAK,MACH,GAAI+5B,GAAGgF,eAAeyD,QAAU,EAG9B,YADAzI,GAAGoH,YAAY,MAGjB9O,EAAM0yB,KAAqB/kD,OAC3B,MACF,KAAK,MACL,KAAK,MACH,GAAI+5B,GAAGgF,eAAeyD,QAAU,EAE9B,YADAzI,GAAGoH,YAAY,MAGjB9O,EAAe,OAAT6yB,EAAkB,EAAI,EAIhC,QAAYjjD,IAARowB,EAAmB,CACrB,IAAIxpB,EAASuJ,EAAMgzC,aAAaF,GAChC,OAAA53C,EAAezE,IACb,IAAK,SACHwpB,EAAMxpB,EACN,MACF,IAAK,UACHwpB,EAAMxpB,EAAS,EAAI,EACnB,MACF,IAAK,SAEH,YADAkxB,GAAGoH,YAAY,MAEjB,IAAK,SACH,GAAe,OAAXt4B,EAIF,OAAQq8C,GACN,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACH7yB,EAAM,EACN,MAEF,QAEE,YADA0H,GAAGoH,YAAY,UAId,IAAIt4B,aAAkBrF,cAClBqF,aAAkBvF,aAClBuF,aAAkBzF,YAClByF,aAAkBiH,MAAO,CAClC,IAAK,IAAItS,EAAI,EAAGA,EAAIqL,EAAO7I,SAAUxC,EACnC,OAAQ6L,GACN,KAAK,EAAGlG,EAAU7D,EAAM,EAAF9B,GAAO,GAAMqL,EAAOrL,GAAI,MAC9C,KAAK,EAAG+F,EAAWjE,EAAM,EAAF9B,GAAO,GAAMqL,EAAOrL,GAAI,MAC/C,KAAK,EAAGmF,EAAOrD,EAAI9B,GAAMqL,EAAOrL,GAAK,EAAI,EAG7C,MACF,CACE,IACE60B,EAAoB,EAAdxpB,EAAO9K,IACf,CAAE,MAAM+G,GAGN,OAFAi1B,GAAGoH,YAAY,WACfv8B,EAAI,2BAAD2B,OAA4B8C,EAAI,uDAAA9C,OAAsD2+C,EAAK,eAAA3+C,OAAczB,EAAC,KAE/G,CACF,CACA,MACF,QAGE,OAFAi1B,GAAGoH,YAAY,WACfv8B,EAAI,2BAAD2B,OAA4B8C,EAAI,gCAAA9C,OAA+B8C,EAAI,MAAA9C,OAAK2+C,EAAK,qBAAA3+C,OAAoBsC,EAAM,aAAAtC,OAAA+G,EAAmBzE,GAAM,MAGzI,CAEA,OAAQQ,GACN,KAAK,EAAGy7C,GAAcxlD,EAAG+yB,GAAM,MAC/B,KAAK,EAAGlvB,EAAS7D,GAAI,GAAM+yB,EAAK,MAChC,KAAK,EAAK9uB,EAAUjE,GAAI,GAAM+yB,EAAK,MACnC,KAAK,EAAG1vB,EAAMrD,GAAK+yB,EAAM,EAAI,EA1H/B,MAFE0H,GAAGoH,YAAY,KA8HnB,EAIEkkB,GADiB,SAACH,EAAO5lD,GAAC,OAAK2lD,GAAmBC,EAAO5lD,EAAG,EAAG,EAa/DgmD,GAT4B,SAAC32C,EAAQlQ,EAAOopB,GACvCA,EAMLi9B,GAAcj9B,EAAMzV,EAAMmzC,mBAAmB52C,EAAQlQ,IAHnDs7B,GAAGoH,YAAY,KAInB,EAcEqkB,GAV0B,SAAC72C,EAAQlQ,EAAOopB,GACrCA,EAOL1kB,EAAS0kB,GAAO,GAAMzV,EAAMmzC,mBAAmB52C,EAAQlQ,GAHrDs7B,GAAGoH,YAAY,KAInB,EASEskB,GALc,WACd,IAAIh4C,EAAQ2E,EAAMszC,YAAc3rB,GAAGqH,UAEnC,OADArH,GAAGqH,UAAY,EACR3zB,CACT,EAMEk4C,GADe,SAACT,EAAO5lD,GAAC,OAAK2lD,GAAmBC,EAAO5lD,EAAG,EAAG,EAO7DsmD,GAHyB,SAAC9U,EAAS/yC,GACnC,OAAOqU,EAAMyzC,oBAAoB9rB,GAAGqG,SAAS0Q,GAAU1c,GAAar2B,GACtE,EAYE+nD,GARyC,SAACn3C,EAAQ4yC,EAAY0C,EAAOC,GACrE,IAAIr7C,EAASuJ,EAAM2zC,kCAAkCp3C,EAAQ4yC,EAAY0C,IACrEp7C,aAAkBm9C,mBAClBn9C,aAAkBo9C,gBACpBp9C,EAAuB,EAAdA,EAAO9K,MAElBoF,EAAS+gD,GAAS,GAAMr7C,CAC1B,EAGEq9C,GAA4B,SAACv3C,EAAQkV,EAAOgE,EAAMxe,GAClD,GAAKwe,EAAL,CAMA,IACIwK,EADAxpB,EAASuJ,EAAM+zC,oBAAoBx3C,EAAQkV,GAE/C,OAAAvW,EAAezE,IACb,IAAK,UACHwpB,EAAMxpB,EAAS,EAAI,EACnB,MACF,IAAK,SACHwpB,EAAMxpB,EACN,MACF,IAAK,SACH,GAAe,OAAXA,EACF,OAAQ8F,GACN,KAAK,MACL,KAAK,MACH0jB,EAAM,EACN,MACF,QAEE,YADA0H,GAAGoH,YAAY,UAId,MAAIt4B,aAAkBu9C,aAI3B,YADArsB,GAAGoH,YAAY,MAFf9O,EAAoB,EAAdxpB,EAAO9K,IAIf,CACA,MACF,QAEE,YADAg8B,GAAGoH,YAAY,MAInB,OAAQ93B,GACN,KAAK,EAAGy7C,GAAcj9B,EAAMwK,GAAM,MAClC,KAAK,EAAGlvB,EAAS0kB,GAAO,GAAMwK,EAAK,MACnC,KAAK,EAAG9uB,EAAUskB,GAAO,GAAMwK,EAAK,MACpC,KAAK,EAAG1vB,EAAMklB,GAAQwK,EAAM,EAAI,EAAG,MACnC,QAAS,KAAM,yDAA2DhpB,EAvC5E,MAFE0wB,GAAGoH,YAAY,KA2CnB,EAIEklB,GAFqB,SAAC13C,EAAQkV,EAAOgE,GAAI,OACzCq+B,GAA0Bv3C,EAAQkV,EAAOgE,EAAM,EAAG,EAOlDy+B,GAHmB,SAACpB,EAAO5lD,GAC3B2lD,GAAmBC,EAAO5lD,EAAG,EAC/B,EAMEinD,GAFmB,SAAC53C,EAAQkV,EAAOgE,GAAI,OACvCq+B,GAA0Bv3C,EAAQkV,EAAOgE,EAAM,EAAG,EAKlD2+B,GAAiB,SAACtB,EAAO5lD,GAAC,OAAK2lD,GAAmBC,EAAO5lD,EAAG,EAAG,EAC/DmnD,GAA4BD,GAoB5BE,GAjByB,SAAC/3C,EAAQg4C,EAAgB1C,EAAOT,EAASU,GAClE,GAAIV,EAAU,EACZzpB,GAAGoH,YAAY,WAGjB,GAAK+iB,EAAL,CAMA,IAAI7xB,EAAMjgB,EAAMw0C,2BAA2Bj4C,EAAQg4C,EAAgB1C,GACnE,GAAY,OAAR5xB,EACJ,IAAK,IAAI70B,EAAI,EAAGA,EAAI60B,EAAIryB,QAAUxC,EAAIgmD,IAAWhmD,EAC/C2F,EAAU+gD,EAAW,EAAF1mD,GAAO,GAAM60B,EAAI70B,EAJtC,MAFEu8B,GAAGoH,YAAY,KAQnB,EAOE0lB,GAHsB,WACtB9sB,GAAGoH,YAAY,KACjB,EAIE2lB,GAAuB,SAAChW,EAASiW,EAAW/mD,EAAQgnD,GACpD,IAAI10C,EAAMF,EAAM60C,kBAAkBltB,GAAGqG,SAAS0Q,IAClC,OAARx+B,IAAcA,EAAM,mBACxB,IAAImxC,EAA2BsD,EAAY,GAAKC,EAAW5xB,GAAa9iB,EAAK00C,EAASD,GAAa,EAC/F/mD,IAAQmD,EAASnD,GAAS,GAAMyjD,EACtC,EACEyD,GAAkCJ,GAGlCK,GAAkB,SAACrW,EAASmT,EAAO3kD,GACnC,GAAKA,EAQL,GAAIwxC,GAAW/W,GAAGmG,QAChBnG,GAAGoH,YAAY,WAMjB,GAFA2P,EAAU/W,GAAGqG,SAAS0Q,GAET,OAATmT,EAAiB,CACnB,IAAI3xC,EAAMF,EAAM60C,kBAAkBnW,GACtB,OAARx+B,IAAcA,EAAM,mBACxBnP,EAAS7D,GAAI,GAAMgT,EAAItS,OAAS,CAClC,MAAO,GAAa,OAATikD,EAAoD,CAC7D,IAAKnT,EAAQ8I,iBAEX,IADA,IAAIwN,EAAoBh1C,EAAMi1C,oBAAoBvW,EAAS,OAClDtzC,EAAI,EAAGA,EAAI4pD,IAAqB5pD,EACvCszC,EAAQ8I,iBAAmBrpC,KAAKwN,IAAI+yB,EAAQ8I,iBAAkBxnC,EAAMk1C,iBAAiBxW,EAAStzC,GAAGO,KAAKiC,OAAO,GAGjHmD,EAAS7D,GAAI,GAAMwxC,EAAQ8I,gBAC7B,MAAO,GAAa,OAATqK,EAAsD,CAC/D,IAAKnT,EAAQ+I,mBACX,KAAI0N,EAAsBn1C,EAAMi1C,oBAAoBvW,EAAS,OAC7D,IAAStzC,EAAI,EAAGA,EAAI+pD,IAAuB/pD,EACzCszC,EAAQ+I,mBAAqBtpC,KAAKwN,IAAI+yB,EAAQ+I,mBAAoBznC,EAAMo1C,gBAAgB1W,EAAStzC,GAAGO,KAAKiC,OAAO,EAFtB,CAK9FmD,EAAS7D,GAAI,GAAMwxC,EAAQ+I,kBAC7B,MAAO,GAAa,OAAToK,EAA+D,CACxE,IAAKnT,EAAQgJ,0BACX,KAAI2N,EAAyBr1C,EAAMi1C,oBAAoBvW,EAAS,OAChE,IAAStzC,EAAI,EAAGA,EAAIiqD,IAA0BjqD,EAC5CszC,EAAQgJ,0BAA4BvpC,KAAKwN,IAAI+yB,EAAQgJ,0BAA2B1nC,EAAM2xC,0BAA0BjT,EAAStzC,GAAGwC,OAAO,EAFlC,CAKrGmD,EAAS7D,GAAI,GAAMwxC,EAAQgJ,yBAC7B,MACE32C,EAAS7D,GAAI,GAAM8S,EAAMi1C,oBAAoBvW,EAASmT,QAxCtDlqB,GAAGoH,YAAY,KA0CnB,EACEumB,GAA6BP,GAI7BQ,GAA2B,SAACvpC,EAAI6lC,EAAOC,GACvC,GAAKA,EAAL,CAMA,IACItkB,EADAub,EAAQphB,GAAG6G,QAAQxiB,GAIrBwhB,EAFE7F,GAAGgF,eAAeyD,QAAU,EAEtBpwB,EAAM0xB,sBAAyC,kBAAEqX,EAAO8I,GAGxD7xC,EAAMw1C,kBAAkBzM,EAAO8I,GAQzCa,GAAcZ,EALM,kBAATtkB,EACHA,EAAQ,EAAI,EAEZA,EAdR,MAFE7F,GAAGoH,YAAY,KAmBnB,EACE0mB,GAAsCF,GAGtCG,GAAyB,SAAC1pC,EAAI6lC,EAAOC,GACrC,GAAKA,EAAL,CAMA,IACItkB,EAAQxtB,EAAM0xB,sBAAyC,kBAD/C/J,GAAG6G,QAAQxiB,GAC6C6lC,GAOpE9gD,EAAS+gD,GAAS,GALE,kBAATtkB,EACHA,EAAQ,EAAI,EAEZA,CAPR,MAFE7F,GAAGoH,YAAY,KAYnB,EACE4mB,GAAoCD,GAIpCE,GAA4BL,GAC5BM,GAAuCD,GAoBvCE,GAjBuB,SAAC9pC,EAAI6lC,EAAOC,GACnC,GAAKA,EAAL,CAMA,IACItkB,EAAQxtB,EAAMw1C,kBADN7tB,GAAG6G,QAAQxiB,GACoB6lC,GAO3C9gD,EAAS+gD,GAAS,GALE,kBAATtkB,EACHA,EAAQ,EAAI,EAEZA,CAPR,MAFE7F,GAAGoH,YAAY,KAYnB,EAKEgnB,GAA0BL,GAC1BM,GAAqCD,GAYrCE,GATgB,SAAC15C,EAAQs1C,EAAOC,GAC3BA,EAML/gD,EAAS+gD,GAAS,GAAM9xC,EAAMk2C,SAAS35C,EAAQs1C,GAH7ClqB,GAAGoH,YAAY,KAInB,EAaEonB,GATmB,SAAC55C,EAAQs1C,EAAOC,GAC9BA,EAML/gD,EAAS+gD,GAAS,GAAM9xC,EAAM0xB,sBAAmC,YAAEn1B,EAAQs1C,GAHzElqB,GAAGoH,YAAY,KAInB,EAaEqnB,GATgC,SAAC75C,EAAQs1C,EAAOC,GAC3CA,EAML/gD,EAAS+gD,GAAS,GAAM9xC,EAAMq2C,yBAAyB95C,EAAQs1C,GAH7DlqB,GAAGoH,YAAY,KAInB,EAaEunB,GAT2B,SAAC7V,EAASoR,EAAOC,GACvCA,EAML3gD,EAAU2gD,GAAS,GAAM9xC,EAAMu2C,oBAAoB5uB,GAAG8G,SAASgS,GAAUoR,GAHvElqB,GAAGoH,YAAY,KAInB,EAaEynB,GAT2B,SAAC/V,EAASoR,EAAOC,GACvCA,EAML/gD,EAAS+gD,GAAS,GAAM9xC,EAAMu2C,oBAAoB5uB,GAAG8G,SAASgS,GAAUoR,GAHtElqB,GAAGoH,YAAY,KAInB,EAKE0nB,GAAsB,SAAClnB,EAAQolB,EAAW/mD,EAAQgnD,GAClD,IAAI10C,EAAMF,EAAM02C,iBAAiB/uB,GAAGyG,QAAQmB,IAChC,OAARrvB,IAAcA,EAAM,mBACxB,IAAImxC,EAA2BsD,EAAY,GAAKC,EAAW5xB,GAAa9iB,EAAK00C,EAASD,GAAa,EAC/F/mD,IAAQmD,EAASnD,GAAS,GAAMyjD,EACtC,EACEsF,GAAiCF,GASjCG,GAN8B,SAAC9O,EAAY+O,EAAeC,EAAOC,GACjE,IAAItgD,EAASuJ,EAAMg3C,yBAAyBlP,EAAY+O,GACxD9lD,EAAS+lD,GAAQ,GAAMrgD,EAAOwgD,SAC9BlmD,EAAU+lD,EAAQ,GAAK,GAAMrgD,EAAOygD,SACpCnmD,EAASgmD,GAAY,GAAMtgD,EAAOsgD,SACpC,EAUEI,GANqB,SAAC5nB,EAAQ6hB,EAASxjD,EAAQ8hC,GAC/C,IAAIj5B,EAASuJ,EAAMo3C,gBAAgBzvB,GAAGyG,QAAQmB,IAC9C,GAAK94B,EAAL,CACA,IAAI46C,EAA2BD,EAAU,GAAK1hB,EAAU1M,GAAavsB,EAAQi5B,EAAQ0hB,GAAW,EAC5FxjD,IAAQmD,EAASnD,GAAS,GAAMyjD,EAFjB,CAGrB,EAIEgG,GAAiB,SAAC9nB,EAAQsiB,EAAO3kD,GACjC,GAAKA,EAOL,GAAa,OAAT2kD,EAAiB,CACnB,IAAI3xC,EAAMF,EAAM02C,iBAAiB/uB,GAAGyG,QAAQmB,IAChC,OAARrvB,IAAcA,EAAM,mBAMxBnP,EAAS7D,GAAI,GADGgT,EAAMA,EAAItS,OAAS,EAAI,CAEzC,MAAO,GAAa,OAATikD,EAAiB,CAC1B,IAAIniB,EAAS1vB,EAAMo3C,gBAAgBzvB,GAAGyG,QAAQmB,IAI9Cx+B,EAAS7D,GAAI,GADMwiC,EAASA,EAAO9hC,OAAS,EAAI,CAElD,MACEmD,EAAS7D,GAAI,GAAM8S,EAAMs3C,mBAAmB3vB,GAAGyG,QAAQmB,GAASsiB,QAnBhElqB,GAAGoH,YAAY,KAqBnB,EACEwoB,GAA4BF,GAiD5BG,GA5Ce,SAAC1E,GAChB,IAAI7yB,EAAM0H,GAAGqF,YAAY8lB,GACzB,IAAK7yB,EAAK,CACR,OAAQ6yB,GACN,KAAK,KACH7yB,EAAM0R,GAAgBghB,KAAqB7vC,KAAK,MAChD,MACF,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACH,IAAI3V,EAAI6S,EAAMgzC,aAAaF,GACtB3lD,GACHw6B,GAAGoH,YAAY,MAEjB9O,EAAM9yB,EAAIwkC,GAAgBxkC,GAAK,EAC/B,MAEF,KAAK,KACH,IAAIsqD,EAAez3C,EAAMgzC,aAAa,MAElC0E,EAAS,kBAAAvjD,OAAqBsjD,EAAY,KACpCC,EAAS,kBAAAvjD,OAAqBsjD,EAAY,KACpDx3B,EAAM0R,GAAgB+lB,GACtB,MACF,KAAK,MACH,IAAIC,EAAc33C,EAAMgzC,aAAa,OAGjC4E,EAAUD,EAAYz0C,MADb,gDAEG,OAAZ00C,IACuB,GAArBA,EAAQ,GAAGhqD,SAAagqD,EAAQ,GAAKA,EAAQ,GAAK,KACtDD,EAAW,qBAAAxjD,OAAwByjD,EAAQ,GAAE,MAAAzjD,OAAKwjD,EAAW,MAE/D13B,EAAM0R,GAAgBgmB,GACtB,MACF,QACEhwB,GAAGoH,YAAY,MAGnBpH,GAAGqF,YAAY8lB,GAAS7yB,CAC1B,CACA,OAAOA,CACT,EAKE43B,GAAgB,SAAClsD,EAAM8lB,GACvB,GAAIkW,GAAGgF,eAAeyD,QAAU,EAE9B,OADAzI,GAAGoH,YAAY,MACR,EAET,IAAIH,EAAejH,GAAGiH,aAAajjC,GACnC,GAAIijC,EACF,OAAInd,EAAQ,GAAKA,GAASmd,EAAahhC,QACrC+5B,GAAGoH,YAAY,MACR,GAEFH,EAAand,GAEtB,GACO,OADC9lB,EACN,CACE,IAAIinD,EAAOD,KAAqB14C,IAAI03B,IAEpC,OADA/C,EAAejH,GAAGiH,aAAajjC,GAAQinD,EACnCnhC,EAAQ,GAAKA,GAASmd,EAAahhC,QACrC+5B,GAAGoH,YAAY,MACR,GAEFH,EAAand,EAAM,CAG1B,OADAkW,GAAGoH,YAAY,MACR,CAEb,EACE+oB,GAA2BD,GAsB3BE,GAnBe,SAAChT,EAAM8M,EAAOT,EAASxjD,EAAQkM,GAC9C,GAAIs3C,EAAU,EAGZzpB,GAAGoH,YAAY,WAGjB,GAAKj1B,EAAL,CAMA,IAAImmB,EAAMjgB,EAAMg4C,iBAAiBrwB,GAAGgH,MAAMoW,GAAO8M,GACrC,OAAR5xB,IACFlvB,EAAS+I,GAAS,GAAMmmB,EACpBryB,IAAQmD,EAASnD,GAAS,GAAM,GAJtC,MAFE+5B,GAAGoH,YAAY,KAQnB,EAcEkpB,GAVuB,SAAC17C,EAAQs1C,EAAOC,GAClCA,EAOL3gD,EAAU2gD,GAAS,GAAM9xC,EAAMk4C,gBAAgB37C,EAAQs1C,GAHrDlqB,GAAGoH,YAAY,KAInB,EAcEopB,GAVuB,SAAC57C,EAAQs1C,EAAOC,GAClCA,EAOL/gD,EAAS+gD,GAAS,GAAM9xC,EAAMk4C,gBAAgB37C,EAAQs1C,GAHpDlqB,GAAGoH,YAAY,KAInB,EAmBEqpB,GAfiC,SAAC1Z,EAASjtB,EAAO2/B,EAASxjD,EAAQye,EAAMpV,EAAMtL,GAE/E,IAAIyK,EAAO4J,EAAMq4C,4BADjB3Z,EAAU/W,GAAGqG,SAAS0Q,GACgCjtB,GACtD,GAAKrb,EAAL,CAEA,GAAIzK,GAAQylD,EAAU,EAAG,CACvB,IAAIC,EAA0BruB,GAAa5sB,EAAKzK,KAAMA,EAAMylD,GACxDxjD,IAAQmD,EAASnD,GAAS,GAAMyjD,EACtC,MACMzjD,IAAQmD,EAASnD,GAAS,GAAM,GAGlCye,IAAMtb,EAASsb,GAAO,GAAMjW,EAAKiW,MACjCpV,IAAMlG,EAASkG,GAAO,GAAMb,EAAKa,KAVpB,CAWnB,EAOEqhD,GAH0B,SAAC5Z,EAASgT,GACpC,OAAO1xC,EAAMu4C,qBAAqB5wB,GAAGqG,SAAS0Q,GAAU1c,GAAa0vB,GACvE,EA4BE8G,GAxBuB,SAAC9Z,EAASuT,EAAcwG,EAAcvG,GAC7D,GAAKA,EAML,GAAID,EAAe,IAAsB,GAAhBwG,GAAuC,GAAlBvG,GAC5CvqB,GAAGoH,YAAY,UADjB,CAIA2P,EAAU/W,GAAGqG,SAAS0Q,GAEtB,IADA,IAAIga,EAAQ,GACHttD,EAAI,EAAGA,EAAI6mD,EAAc7mD,IAChCstD,EAAMj/C,KAAKuoB,GAAajxB,EAAU0nD,EAAiB,EAAFrtD,GAAO,KAE1D,IAAIqL,EAASuJ,EAAM24C,kBAAkBja,EAASga,GAC9C,GAAKjiD,EAEL,KAAIwP,EAAMxP,EAAO7I,OACjB,IAASxC,EAAI,EAAGA,EAAI6a,EAAK7a,IACvB2F,EAAUmhD,EAAmB,EAAF9mD,GAAO,GAAMqL,EAAOrL,EAF1B,CATvB,MANEu8B,GAAGoH,YAAY,KAmBnB,EAKE6pB,GAAuB,SAACjtD,GAAI,MAAuB,KAAlBA,EAAK6S,OAAO,IAAa7S,EAAKmT,YAAY,IAAK,EAEhF+5C,GAA6C,SAACna,GAC9C,IAEEtzC,EAAGyoB,EAFDilC,EAAkBpa,EAAQoa,gBAC5BC,EAA0Bra,EAAQqa,wBAKpC,IAAKD,EAAiB,CAEpBpa,EAAQoa,gBAAkBA,EAAkB,CAAC,EAE7Cpa,EAAQsa,sBAAwB,CAAC,EAEjC,IAAIhE,EAAoBh1C,EAAMi1C,oBAAoBvW,EAAS,OAC3D,IAAKtzC,EAAI,EAAGA,EAAI4pD,IAAqB5pD,EAAG,CACtC,IAAIqb,EAAIzG,EAAMk1C,iBAAiBxW,EAAStzC,GACpC6tD,EAAKxyC,EAAE9a,KACPktC,EAAKpyB,EAAE4F,KACP6sC,EAAKN,GAAqBK,GAC1BE,EAAYD,EAAK,EAAID,EAAGz6C,MAAM,EAAG06C,GAAMD,EAGvCjtC,EAAK0yB,EAAQiJ,iBAWjB,IAVAjJ,EAAQiJ,kBAAoB9O,EAM5BkgB,EAAwBI,GAAa,CAACtgB,EAAI7sB,GAIrC6H,EAAI,EAAGA,EAAIglB,IAAMhlB,EACpBilC,EAAgB9sC,GAAM6H,EACtB6qB,EAAQsa,sBAAsBhtC,KAAQmtC,CAE1C,CACF,CACF,EAKEC,GAAwB,SAAC1a,EAAS/yC,GAIlC,GAFAA,EAAOq2B,GAAar2B,GAEhB+yC,EAAU/W,GAAGqG,SAAS0Q,GAAU,CAClCma,GAA2Cna,GAC3C,IAAIoa,EAAkBpa,EAAQoa,gBAC1BO,EAAa,EACbC,EAAkB3tD,EAUlB4tD,EAAYX,GAAqBjtD,GAGjC4tD,EAAY,IACdF,EAAa/f,GAAQ3tC,EAAK6S,MAAM+6C,EAAY,MAAQ,EACpDD,EAAkB3tD,EAAK6S,MAAM,EAAG+6C,IAKlC,IAAIC,EAAY9a,EAAQqa,wBAAwBO,GAKhD,GAAIE,GAAaH,EAAaG,EAAU,KAEjCV,EADLO,GAAcG,EAAU,IACWV,EAAgBO,IAAer5C,EAAMy5C,mBAAmB/a,EAAS/yC,IAClG,OAAO0tD,CAGb,MAKE1xB,GAAGoH,YAAY,MAEjB,OAAQ,CACV,EACE2qB,GAAmCN,GAEnCO,GAA0B,SAAC1qD,GAC3B,IAAI/B,EAAI8S,EAAM45C,eAEd,GAAI1sD,EAAG,CACL,IAAI2sD,EAAW3sD,EAAE4rD,gBAAgB7pD,GASjC,MAJuB,iBAAZ4qD,IACT3sD,EAAE4rD,gBAAgB7pD,GAAY4qD,EAAW75C,EAAMy5C,mBAAmBvsD,EAAGA,EAAE8rD,sBAAsB/pD,IAAa4qD,EAAW,EAAC,IAAA1lD,OAAO0lD,EAAQ,KAAM,MAGtIA,CACT,CACElyB,GAAGoH,YAAY,KAEnB,EAIE+qB,GAA4B,SAACpb,EAASzvC,EAAU6iD,EAAQ76C,GACxD,GAAK66C,EAAL,CAQA+G,GADAna,EAAU/W,GAAGqG,SAAS0Q,IAEtB,IAAIjpB,EAAOzV,EAAM+5C,WAAWrb,EAASib,GAAwB1qD,IAC7D,GAAmB,iBAARwmB,GAAmC,kBAARA,EACpC,OAAQxe,GACN,KAAK,EAAGlG,EAAS+gD,GAAS,GAAMr8B,EAAM,MACtC,KAAK,EAAGtkB,EAAU2gD,GAAS,GAAMr8B,OAGnC,IAAK,IAAIrqB,EAAI,EAAGA,EAAIqqB,EAAK7nB,OAAQxC,IAC/B,OAAQ6L,GACN,KAAK,EAAGlG,EAAU+gD,EAAW,EAAF1mD,GAAO,GAAMqqB,EAAKrqB,GAAI,MACjD,KAAK,EAAG+F,EAAW2gD,EAAW,EAAF1mD,GAAO,GAAMqqB,EAAKrqB,GAbpD,MAFEu8B,GAAGoH,YAAY,KAmBnB,EAMEirB,GAHkB,SAACtb,EAASzvC,EAAU6iD,GACtCgI,GAA0Bpb,EAASzvC,EAAU6iD,EAAQ,EACvD,EAQEmI,GAHkB,SAACvb,EAASzvC,EAAU6iD,GACtCgI,GAA0Bpb,EAASzvC,EAAU6iD,EAAQ,EACvD,EAMEoI,GAFmB,SAACxb,EAASzvC,EAAU6iD,GAAM,OAC7CgI,GAA0Bpb,EAASzvC,EAAU6iD,EAAQ,EAAG,EAIxDqI,GAAiC,SAAC1oC,EAAOogC,EAAOC,EAAQ76C,GACxD,GAAK66C,EAAL,CAOA,IAAIr8B,EAAOzV,EAAMo6C,gBAAgB3oC,EAAOogC,GACxC,GAAa,OAATA,EACF9gD,EAAS+gD,GAAS,GAAMr8B,GAAQA,EAAW,UACtC,GAAmB,iBAARA,GAAmC,kBAARA,EAC3C,OAAQxe,GACN,KAAK,EAAGlG,EAAS+gD,GAAS,GAAMr8B,EAAM,MACtC,KAAK,EAAGtkB,EAAU2gD,GAAS,GAAMr8B,EAAM,MACvC,KAAK,EAAG1kB,EAAS+gD,GAAS,GAAM3zC,KAAKk8C,OAAO5kC,QAG9C,IAAK,IAAIrqB,EAAI,EAAGA,EAAIqqB,EAAK7nB,OAAQxC,IAC/B,OAAQ6L,GACN,KAAK,EAAGlG,EAAU+gD,EAAW,EAAF1mD,GAAO,GAAMqqB,EAAKrqB,GAAI,MACjD,KAAK,EAAG+F,EAAW2gD,EAAW,EAAF1mD,GAAO,GAAMqqB,EAAKrqB,GAAI,MAClD,KAAK,EAAG2F,EAAU+gD,EAAW,EAAF1mD,GAAO,GAAM+S,KAAKk8C,OAAO5kC,EAAKrqB,IAf/D,MAFEu8B,GAAGoH,YAAY,KAqBnB,EAEEurB,GAAwB,SAAC7oC,EAAOogC,EAAOC,GAGvCqI,GAA+B1oC,EAAOogC,EAAOC,EAAQ,EACvD,EACEyI,GAAmCD,GAInCE,GAAyBF,GACzBG,GAAoCD,GAapCE,GAV6B,SAACjpC,EAAOogC,EAAO8I,GACvCA,EAOL5pD,EAAS4pD,GAAU,GAAM36C,EAAM46C,sBAAsBnpC,EAAOogC,GAH1DlqB,GAAGoH,YAAY,KAInB,EAWE8rB,GANuB,SAACppC,EAAOogC,EAAOC,GAItCqI,GAA+B1oC,EAAOogC,EAAOC,EAAQ,EACvD,EAWEgJ,GANuB,SAACrpC,EAAOogC,EAAOC,GAItCqI,GAA+B1oC,EAAOogC,EAAOC,EAAQ,EACvD,EAKEiJ,GADU,SAACzc,EAAImD,GAAE,OAAKzhC,EAAMg7C,KAAK1c,EAAImD,EAAI,EAIzCwZ,GAA2B,SAAC1+C,EAAQ2+C,EAAgBC,GAEpD,IADA,IAAIC,EAAO5O,GAAqB0O,GACvB9vD,EAAI,EAAGA,EAAI8vD,EAAgB9vD,IAClCgwD,EAAKhwD,GAAK2F,EAAUoqD,EAAgB,EAAF/vD,GAAO,GAG3C4U,EAAMq7C,sBAAsB9+C,EAAQ6+C,EACtC,EACEE,GAAsCL,GAWtCM,GAR8B,SAACh/C,EAAQ2+C,EAAgBC,EAAatwB,EAAGC,EAAG/E,EAAOC,GAEjF,IADA,IAAIo1B,EAAO5O,GAAqB0O,GACvB9vD,EAAI,EAAGA,EAAI8vD,EAAgB9vD,IAClCgwD,EAAKhwD,GAAK2F,EAAUoqD,EAAgB,EAAF/vD,GAAO,GAG3C4U,EAAMw7C,yBAAyBj/C,EAAQ6+C,EAAMvwB,EAAGC,EAAG/E,EAAOC,EAC5D,EASEy1B,GALc,SAACnrD,GACf,IAAIF,EAAIu3B,GAAGoG,QAAQz9B,GACnB,OAAKF,EACE4P,EAAM07C,SAAStrD,GADP,CAEjB,EAKEurD,GADe,SAACrd,GAAE,OAAKt+B,EAAM47C,UAAUtd,EAAI,EAS3Cud,GALmB,SAAC7b,GACpB,IAAI8b,EAAKn0B,GAAGsG,aAAa+R,GACzB,OAAK8b,EACE97C,EAAM+7C,cAAcD,GADX,CAElB,EASEE,GALe,SAACtd,GAEhB,OADAA,EAAU/W,GAAGqG,SAAS0Q,IAEf1+B,EAAMi8C,UAAUvd,GADF,CAEvB,EASEwd,GALa,SAAClwC,GACd,IAAI+8B,EAAQphB,GAAG6G,QAAQxiB,GACvB,OAAK+8B,EACE/oC,EAAMm8C,QAAQpT,GADF,CAErB,EASEqT,GALgB,SAACpwC,GACjB,IAAI+8B,EAAQphB,GAAG6G,QAAQxiB,GACvB,OAAK+8B,EACE/oC,EAAM0xB,sBAAkC,WAAEqX,GAD9B,CAErB,EASEsT,GALoB,SAACjc,GACrB,IAAIkc,EAAK30B,GAAGuG,cAAckS,GAC1B,OAAKkc,EACEt8C,EAAMu8C,eAAeD,GADZ,CAElB,EASEE,GALe,SAACxwC,GAChB,IAAIy0B,EAAU9Y,GAAG8G,SAASziB,GAC1B,OAAKy0B,EACEzgC,EAAMy8C,UAAUhc,GADF,CAEvB,EASEic,GALc,SAACntB,GACf,IAAIpiC,EAAIw6B,GAAGyG,QAAQmB,GACnB,OAAKpiC,EACE6S,EAAM28C,SAASxvD,GADP,CAEjB,EAKEyvD,GADY,SAAC7X,GAAI,OAAK/kC,EAAM68C,OAAOl1B,GAAGgH,MAAMoW,GAAO,EASnD+X,GALe,SAAC9wC,GAChB,IAAI60B,EAAUlZ,GAAGwG,SAASniB,GAC1B,OAAK60B,EACE7gC,EAAM+8C,UAAUlc,GADF,CAEvB,EAKEmc,GADyB,SAAChxC,GAAE,OAAKhM,EAAMi9C,oBAAoBt1B,GAAG+G,mBAAmB1iB,GAAK,EAItFkxC,GAAmB,SAACC,GAEpB,IAAIhc,EAAMxZ,GAAG0G,KAAK8uB,GAClB,OAAKhc,EACEnhC,EAAMo9C,cAAcjc,GADV,CAEnB,EACEkc,GAA8BH,GAI9BI,GAAsBJ,GACtBK,GAAiCD,GAIjCE,GADe,SAAClf,GAAE,OAAKt+B,EAAMy9C,UAAUnf,EAAI,EAI3Cof,GAAiB,SAAChf,GAElB1+B,EAAM29C,YADNjf,EAAU/W,GAAGqG,SAAS0Q,IAGtBA,EAAQoa,gBAAkB,EAC1Bpa,EAAQqa,wBAA0B,CAAC,CAErC,EACE6E,GAA4BF,GAI5BG,GAD4B,WAAH,OAAS79C,EAAM89C,wBAAyB,EAIjEC,GAAiB,SAAClM,EAAOrkB,GACZ,MAATqkB,EACFlqB,GAAGkH,gBAAkBrB,EACH,MAATqkB,IACTlqB,GAAGmH,gBAAkBtB,GAEvBxtB,EAAMg+C,YAAYnM,EAAOrkB,EAC3B,EACEywB,GAA4BF,GAM5BG,GAHsB,SAACC,EAAM5xD,GAC7ByT,EAAMoxB,iBAAmC,iBAAE+sB,EAAM5xD,EACnD,EAIE6xD,GAAmB,SAAC9f,EAAImD,GAAE,OAAKzhC,EAAMq+C,cAAc/f,EAAImD,EAAI,EAC3D6c,GAA8BF,GAM9BG,GAH2B,SAACnyB,EAAQoyB,EAAOC,GAC3Cz+C,EAAMgxB,sBAA6C,sBAAE5E,EAAQoyB,EAAOC,EACtE,EAOEC,GAHmB,WACnB/2B,GAAGoH,YAAY,KACjB,EAOE4vB,GAHuB,WACvBh3B,GAAGoH,YAAY,KACjB,EAOE6vB,GAHqB,SAAC5yC,EAAIzP,GAC1ByD,EAAM0xB,sBAAuC,gBAAE/J,GAAG6G,QAAQxiB,GAAKzP,EACjE,EAIEsiD,GAAgB,SAACvgB,GAAE,OAAKt+B,EAAM8+C,WAAWxgB,EAAI,EAC7CygB,GAA2BF,GAE3BG,GAAyB,SAAC/nD,GAM1B,OAAY,IADZA,GAAQ,MACc1G,EAEV,GAAR0G,EAAkBtG,EAEV,GAARsG,EAAkBxG,EAEV,GAARwG,EAAkBlG,EAEV,GAARkG,EAAkB9F,EAEV,GAAR8F,GACS,OAARA,GACQ,OAARA,GACQ,OAARA,GACQ,OAARA,EAEIhG,EAEFJ,CACT,EAEEouD,GAAoB,SAACtE,EAASv0C,GAAI,OAClCu0C,IAAa,GAAKx8C,KAAK+gD,MAAM94C,EAAK+4C,kBAAoB,EAGtDC,GAAgB,SAACv0B,EAAGC,EAAG/E,EAAOC,EAAQygB,EAAQxvC,EAAMooD,GAElD,GAAIr/C,EAAMq/B,8BACRr/B,EAAMs/C,WAAWz0B,EAAGC,EAAG/E,EAAOC,EAAQygB,EAAQxvC,EAAMooD,OADtD,CAIA,IAAIj5C,EAAO44C,GAAuB/nD,GAC9BsF,EAAS0iD,GAAkBI,EAAQj5C,GACvCpG,EAAMs/C,WAAWz0B,EAAGC,EAAG/E,EAAOC,EAAQygB,EAAQxvC,EAAMmP,EAAM7J,EAH1D,CAMJ,EACEgjD,GAA2BH,GAM3BI,GAH2B,WAC3B,EAMAC,GADyB,SAACnhB,EAAImD,EAAIC,EAAIC,GAAE,OAAK3hC,EAAM0/C,oBAAoBphB,EAAImD,EAAIC,EAAIC,EAAI,EAIvFge,GAAoC,SAACrhB,EAAImD,EAAIC,EAAIC,EAAIc,GAAE,OAAKziC,EAAM4/C,+BAA+BthB,EAAImD,EAAIC,EAAIC,EAAIc,EAAI,EACrHod,GAA+CF,GAI/CG,GAD6B,WAAH,OAAS9/C,EAAM+/C,yBAA0B,EAOnEC,GAHoB,SAAC3zD,EAAO4zD,GAC5BjgD,EAAMkgD,eAAe7zD,IAAS4zD,EAChC,EAIEE,GAAuB,SAAC1f,EAASoR,EAAOrkB,GACxCxtB,EAAMogD,kBAAkBz4B,GAAG8G,SAASgS,GAAUoR,EAAOrkB,EACvD,EACE6yB,GAAkCF,GAOlCG,GAJwB,SAAC7f,EAASoR,EAAOC,GAEzC9xC,EAAMogD,kBAAkBz4B,GAAG8G,SAASgS,GAAUoR,EADlC1gD,EAAU2gD,GAAS,GAEjC,EAIEyO,GAAuB,SAAC9f,EAASoR,EAAOrkB,GACxCxtB,EAAMwgD,kBAAkB74B,GAAG8G,SAASgS,GAAUoR,EAAOrkB,EACvD,EACEizB,GAAkCF,GAOlCG,GAJwB,SAACjgB,EAASoR,EAAOC,GAEzC9xC,EAAMwgD,kBAAkB74B,GAAG8G,SAASgS,GAAUoR,EADlC9gD,EAAS+gD,GAAS,GAEhC,EAIE6O,GAAa,SAACriB,EAAImD,EAAIC,EAAIC,GAAE,OAAK3hC,EAAM4gD,QAAQtiB,EAAImD,EAAIC,EAAIC,EAAI,EAC/Dkf,GAAwBF,GAMxBG,GAHkB,WAClBn5B,GAAGoH,YAAY,KACjB,EAIEgyB,GAAkB,SAACxxB,EAAQC,EAAOC,EAAQ7hC,GAC1C,IAAI8hC,EAAS/H,GAAG2H,UAAUC,EAAQC,EAAOC,EAAQ7hC,GAEjDoS,EAAMghD,aAAar5B,GAAGyG,QAAQmB,GAASG,EACzC,EACEuxB,GAA6BF,GAG7BG,GAAiB,SAAC5iB,EAAImD,EAAIC,GAAE,OAAK1hC,EAAMmhD,YAAY7iB,EAAImD,EAAIC,EAAI,EAC/D0f,GAA4BF,GAG5BG,GAAyB,SAAC/iB,EAAImD,EAAIC,EAAIC,GAAE,OAAK3hC,EAAMshD,oBAAoBhjB,EAAImD,EAAIC,EAAIC,EAAI,EACvF4f,GAAoCF,GAGpCG,GAAiB,SAACljB,GAAE,OAAKt+B,EAAMyhD,YAAYnjB,EAAI,EAC/CojB,GAA4BF,GAI5BG,GADyB,SAACrjB,EAAImD,GAAE,OAAKzhC,EAAM4hD,oBAAoBtjB,EAAImD,EAAI,EAIvEogB,GAAe,SAACvjB,EAAImD,EAAIC,GAAE,OAAK1hC,EAAM8hD,UAAUxjB,EAAImD,EAAIC,EAAI,EAC3DqgB,GAA0BF,GAG1BG,GAAuB,SAAC1jB,EAAImD,EAAIC,EAAIC,GAAE,OAAK3hC,EAAMiiD,kBAAkB3jB,EAAImD,EAAIC,EAAIC,EAAI,EACnFugB,GAAkCF,GAqClCG,GAAiC,SAAClrD,EAAMwvC,EAAQ1gB,EAAOC,EAAQq5B,GAC/D,IAAIj5C,EAAO44C,GAAuB/nD,GAC9BmrD,EA5B6B,SAAC3b,GAqBlC,MAhBoB,CAGlB,EAAG,EACH,EAAG,EAEH,EAAG,EACH,MAAO,EACP,MAAO,EAEP,MAAO,EACP,MAAO,EAEP,MAAO,EACP,MAAO,GAEYA,EAAS,OAAS,CACzC,CAMqB4b,CAA+B5b,GAAUrgC,EAAK+4C,kBAC7DmD,EAtC4B,SAACv8B,EAAOC,EAAQo8B,GAIhD,IAHoCt3B,EAKpC,OAAO9E,IAFa2B,GAAGmH,iBAAmB/I,GAASq8B,GAHft3B,EAIuBnD,GAAGkH,iBAH5C,GAAM/D,EAK1B,CA+Bcy3B,CAA8Bx8B,EAAOC,EAAQo8B,GACzD,OAAOh8C,EAAKb,SAAS05C,GAAkBI,EAAQj5C,GAAO64C,GAAkBI,EAASiD,EAAOl8C,GAC1F,EAKEo8C,GAAgB,SAACjmD,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ+f,EAAQU,EAAQxvC,EAAMooD,GAEnF,GAAIr/C,EAAMs/B,gCACRt/B,EAAMyiD,WAAWlmD,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ+f,EAAQU,EAAQxvC,EAAMooD,QAGvF,GAAIA,EAAJ,CACE,IAAIj5C,EAAO44C,GAAuB/nD,GAC9Bwa,EAAQwtC,GAAkBI,EAAQj5C,GACtCpG,EAAMyiD,WAAWlmD,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ+f,EAAQU,EAAQxvC,EAAMmP,EAAMqL,EAE7F,KALA,CAOF,IAAIixC,EAAYrD,EAAS8C,GAA+BlrD,EAAMwvC,EAAQ1gB,EAAOC,EAAQq5B,GAA0B,KAC/Gr/C,EAAMyiD,WAAWlmD,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ+f,EAAQU,EAAQxvC,EAAMyrD,EAHnF,CAIJ,EACEC,GAA2BH,GAI3BI,GAAgB,SAACrmD,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ8G,EAAOiZ,EAAQU,EAAQxvC,EAAMooD,GAC5F,GAAIr/C,EAAMs/B,gCACRt/B,EAAM6iD,WAAWtmD,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ8G,EAAOiZ,EAAQU,EAAQxvC,EAAMooD,QACvF,GAAIA,EAAQ,CACjB,IAAIj5C,EAAO44C,GAAuB/nD,GAClC+I,EAAM6iD,WAAWtmD,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ8G,EAAOiZ,EAAQU,EAAQxvC,EAAMmP,EAAM64C,GAAkBI,EAAQj5C,GAC9H,MACEpG,EAAM6iD,WAAWtmD,EAAQspC,EAAOC,EAAgB/f,EAAOC,EAAQ8G,EAAOiZ,EAAQU,EAAQxvC,EAAM,KAEhG,EACE6rD,GAA2BF,GAI3BG,GADmB,SAACzkB,EAAImD,EAAIC,GAAE,OAAK1hC,EAAMgjD,cAAc1kB,EAAImD,EAAIC,EAAI,EAQnEuhB,GAJoB,SAAC1mD,EAAQs1C,EAAOC,GAEpC9xC,EAAMgjD,cAAczmD,EAAQs1C,EADhB1gD,EAAU2gD,GAAS,GAEjC,EAIEoR,GAAmB,SAAC5kB,EAAImD,EAAIC,GAAE,OAAK1hC,EAAMmjD,cAAc7kB,EAAImD,EAAIC,EAAI,EACnE0hB,GAA8BF,GAO9BG,GAJoB,SAAC9mD,EAAQs1C,EAAOC,GAEpC9xC,EAAMmjD,cAAc5mD,EAAQs1C,EADhB9gD,EAAS+gD,GAAS,GAEhC,EAIEwR,GAAkB,SAAChlB,EAAImD,EAAIC,EAAIC,EAAIc,GAAE,OAAKziC,EAAMujD,aAAajlB,EAAImD,EAAIC,EAAIC,EAAIc,EAAI,EACjF+gB,GAA6BF,GAG7BG,GAAkB,SAACnlB,EAAImD,EAAIC,EAAIC,EAAIc,EAAIC,GAAE,OAAK1iC,EAAM0jD,aAAaplB,EAAImD,EAAIC,EAAIC,EAAIc,EAAIC,EAAI,EACzFihB,GAA6BF,GAM7BG,GAAmB,SAACrnD,EAAQspC,EAAOU,EAASC,EAASzgB,EAAOC,EAAQygB,EAAQxvC,EAAMooD,GAEhF,GAAIr/C,EAAMs/B,gCACRt/B,EAAM6jD,cAActnD,EAAQspC,EAAOU,EAASC,EAASzgB,EAAOC,EAAQygB,EAAQxvC,EAAMooD,QAGpF,GAAIA,EAAJ,CACE,IAAIj5C,EAAO44C,GAAuB/nD,GAClC+I,EAAM6jD,cAActnD,EAAQspC,EAAOU,EAASC,EAASzgB,EAAOC,EAAQygB,EAAQxvC,EAAMmP,EAAM64C,GAAkBI,EAAQj5C,GAEpH,KAJA,CAMF,IAAIs8C,EAAYrD,EAAS8C,GAA+BlrD,EAAMwvC,EAAQ1gB,EAAOC,EAAQq5B,GAAa,KAClGr/C,EAAM6jD,cAActnD,EAAQspC,EAAOU,EAASC,EAASzgB,EAAOC,EAAQygB,EAAQxvC,EAAMyrD,EAHhF,CAIJ,EACEoB,GAA8BF,GAI9BG,GAAmB,SAACxnD,EAAQspC,EAAOU,EAASC,EAASI,EAAS7gB,EAAOC,EAAQ8G,EAAO2Z,EAAQxvC,EAAMooD,GAClG,GAAIr/C,EAAMs/B,gCACRt/B,EAAMgkD,cAAcznD,EAAQspC,EAAOU,EAASC,EAASI,EAAS7gB,EAAOC,EAAQ8G,EAAO2Z,EAAQxvC,EAAMooD,QAC7F,GAAIA,EAAQ,CACjB,IAAIj5C,EAAO44C,GAAuB/nD,GAClC+I,EAAMgkD,cAAcznD,EAAQspC,EAAOU,EAASC,EAASI,EAAS7gB,EAAOC,EAAQ8G,EAAO2Z,EAAQxvC,EAAMmP,EAAM64C,GAAkBI,EAAQj5C,GACpI,MACEpG,EAAMgkD,cAAcznD,EAAQspC,EAAOU,EAASC,EAASI,EAAS7gB,EAAOC,EAAQ8G,EAAO2Z,EAAQxvC,EAAM,KAEtG,EACEgtD,GAA8BF,GAW9BG,GAR+B,SAACxlB,EAASlP,EAAO20B,EAAUC,GAC1D1lB,EAAU/W,GAAGqG,SAAS0Q,GAEtB,IADA,IAAI2lB,EAAO,GACFj5D,EAAI,EAAGA,EAAIokC,EAAOpkC,IACzBi5D,EAAK5qD,KAAKuoB,GAAajxB,EAAUozD,EAAa,EAAF/4D,GAAO,KAErD4U,EAAMskD,0BAA0B5lB,EAAS2lB,EAAMD,EACjD,EAQEG,GAHe,SAACt1D,EAAUu1D,GAC1BxkD,EAAMykD,UAAU9K,GAAwB1qD,GAAWu1D,EACrD,EAKEE,GAAgB,SAACz1D,EAAUugC,EAAOnjC,GAElCmjC,GAASxvB,EAAM2kD,WAAWhL,GAAwB1qD,GAAWkC,EAAW9E,GAAQ,EAAImjC,EACtF,EACEo1B,GAA2BF,GAI3BG,GAAe,SAAC51D,EAAUu1D,GAC1BxkD,EAAM8kD,UAAUnL,GAAwB1qD,GAAWu1D,EACrD,EACEO,GAA0BF,GAI1BG,GAAgB,SAAC/1D,EAAUugC,EAAOnjC,GAElCmjC,GAASxvB,EAAMilD,WAAWtL,GAAwB1qD,GAAW8B,EAAU1E,GAAQ,EAAImjC,EACrF,EACE01B,GAA2BF,GAM3BG,GAHgB,SAACl2D,EAAUu1D,GAC3BxkD,EAAMolD,WAAWzL,GAAwB1qD,GAAWu1D,EACtD,EAOEa,GAHiB,SAACp2D,EAAUugC,EAAOnjC,GACnCmjC,GAASxvB,EAAMslD,YAAY3L,GAAwB1qD,GAAWgC,EAAW5E,GAAQ,EAAImjC,EACvF,EAQE+1B,GAHe,SAACt2D,EAAUu1D,EAAIgB,GAC9BxlD,EAAMylD,UAAU9L,GAAwB1qD,GAAWu1D,EAAIgB,EACzD,EAKEE,GAAgB,SAACz2D,EAAUugC,EAAOnjC,GAElCmjC,GAASxvB,EAAM2lD,WAAWhM,GAAwB1qD,GAAWkC,EAAW9E,GAAQ,EAAU,EAANmjC,EACtF,EACEo2B,GAA2BF,GAO3BG,GAHe,SAAC52D,EAAUu1D,EAAIgB,GAC9BxlD,EAAM8lD,UAAUnM,GAAwB1qD,GAAWu1D,EAAIgB,EACzD,EAKEO,GAAgB,SAAC92D,EAAUugC,EAAOnjC,GAElCmjC,GAASxvB,EAAMgmD,WAAWrM,GAAwB1qD,GAAW8B,EAAU1E,GAAQ,EAAU,EAANmjC,EACrF,EACEy2B,GAA2BF,GAM3BG,GAHgB,SAACj3D,EAAUu1D,EAAIgB,GAC/BxlD,EAAMmmD,WAAWxM,GAAwB1qD,GAAWu1D,EAAIgB,EAC1D,EAOEY,GAHiB,SAACn3D,EAAUugC,EAAOnjC,GACnCmjC,GAASxvB,EAAMqmD,YAAY1M,GAAwB1qD,GAAWgC,EAAW5E,GAAQ,EAAU,EAANmjC,EACvF,EAQE82B,GAHe,SAACr3D,EAAUu1D,EAAIgB,EAAIe,GAClCvmD,EAAMwmD,UAAU7M,GAAwB1qD,GAAWu1D,EAAIgB,EAAIe,EAC7D,EAKEE,GAAgB,SAACx3D,EAAUugC,EAAOnjC,GAElCmjC,GAASxvB,EAAM0mD,WAAW/M,GAAwB1qD,GAAWkC,EAAW9E,GAAQ,EAAU,EAANmjC,EACtF,EACEm3B,GAA2BF,GAO3BG,GAHe,SAAC33D,EAAUu1D,EAAIgB,EAAIe,GAClCvmD,EAAM6mD,UAAUlN,GAAwB1qD,GAAWu1D,EAAIgB,EAAIe,EAC7D,EAKEO,GAAgB,SAAC73D,EAAUugC,EAAOnjC,GAElCmjC,GAASxvB,EAAM+mD,WAAWpN,GAAwB1qD,GAAW8B,EAAU1E,GAAQ,EAAU,EAANmjC,EACrF,EACEw3B,GAA2BF,GAM3BG,GAHgB,SAACh4D,EAAUu1D,EAAIgB,EAAIe,GACnCvmD,EAAMknD,WAAWvN,GAAwB1qD,GAAWu1D,EAAIgB,EAAIe,EAC9D,EAOEY,GAHiB,SAACl4D,EAAUugC,EAAOnjC,GACnCmjC,GAASxvB,EAAMonD,YAAYzN,GAAwB1qD,GAAWgC,EAAW5E,GAAQ,EAAU,EAANmjC,EACvF,EAQE63B,GAHe,SAACp4D,EAAUu1D,EAAIgB,EAAIe,EAAIe,GACtCtnD,EAAMunD,UAAU5N,GAAwB1qD,GAAWu1D,EAAIgB,EAAIe,EAAIe,EACjE,EAKEE,GAAgB,SAACv4D,EAAUugC,EAAOnjC,GAElCmjC,GAASxvB,EAAMynD,WAAW9N,GAAwB1qD,GAAWkC,EAAW9E,GAAQ,EAAU,EAANmjC,EACtF,EACEk4B,GAA2BF,GAO3BG,GAHe,SAAC14D,EAAUu1D,EAAIgB,EAAIe,EAAIe,GACtCtnD,EAAM4nD,UAAUjO,GAAwB1qD,GAAWu1D,EAAIgB,EAAIe,EAAIe,EACjE,EAKEO,GAAgB,SAAC54D,EAAUugC,EAAOnjC,GAElCmjC,GAASxvB,EAAM8nD,WAAWnO,GAAwB1qD,GAAW8B,EAAU1E,GAAQ,EAAU,EAANmjC,EACrF,EACEu4B,GAA2BF,GAM3BG,GAHgB,SAAC/4D,EAAUu1D,EAAIgB,EAAIe,EAAIe,GACvCtnD,EAAMioD,WAAWtO,GAAwB1qD,GAAWu1D,EAAIgB,EAAIe,EAAIe,EAClE,EAOEY,GAHiB,SAACj5D,EAAUugC,EAAOnjC,GACnCmjC,GAASxvB,EAAMmoD,YAAYxO,GAAwB1qD,GAAWgC,EAAW5E,GAAQ,EAAU,EAANmjC,EACvF,EASE44B,GALyB,SAAC1pB,EAAS+S,EAAmB4W,GAGtDroD,EAAMqoD,oBAFN3pB,EAAU/W,GAAGqG,SAAS0Q,GAEa+S,EAAmB4W,EACxD,EASEC,GAJsB,SAACr5D,EAAUugC,EAAO+4B,EAAWl8D,GAEnDmjC,GAASxvB,EAAMwoD,iBAAiB7O,GAAwB1qD,KAAas5D,EAAWp3D,EAAW9E,GAAQ,EAAU,EAANmjC,EACzG,EAOEi5B,GAHwB,SAACx5D,EAAUugC,EAAO+4B,EAAWl8D,GACrDmjC,GAASxvB,EAAM0oD,mBAAmB/O,GAAwB1qD,KAAas5D,EAAWp3D,EAAW9E,GAAQ,EAAU,EAANmjC,EAC3G,EAOEm5B,GAHwB,SAAC15D,EAAUugC,EAAO+4B,EAAWl8D,GACrDmjC,GAASxvB,EAAM4oD,mBAAmBjP,GAAwB1qD,KAAas5D,EAAWp3D,EAAW9E,GAAQ,EAAU,EAANmjC,EAC3G,EASEq5B,GAJsB,SAAC55D,EAAUugC,EAAO+4B,EAAWl8D,GAEnDmjC,GAASxvB,EAAM8oD,iBAAiBnP,GAAwB1qD,KAAas5D,EAAWp3D,EAAW9E,GAAQ,EAAU,EAANmjC,EACzG,EAOEu5B,GAHwB,SAAC95D,EAAUugC,EAAO+4B,EAAWl8D,GACrDmjC,GAASxvB,EAAMgpD,mBAAmBrP,GAAwB1qD,KAAas5D,EAAWp3D,EAAW9E,GAAQ,EAAU,EAANmjC,EAC3G,EAOEy5B,GAHwB,SAACh6D,EAAUugC,EAAO+4B,EAAWl8D,GACrDmjC,GAASxvB,EAAMkpD,mBAAmBvP,GAAwB1qD,KAAas5D,EAAWp3D,EAAW9E,GAAQ,EAAU,GAANmjC,EAC3G,EAKE25B,GAAsB,SAACl6D,EAAUugC,EAAO+4B,EAAWl8D,GAEnDmjC,GAASxvB,EAAMopD,iBAAiBzP,GAAwB1qD,KAAas5D,EAAWp3D,EAAW9E,GAAQ,EAAU,GAANmjC,EACzG,EACE65B,GAAiCF,GAMjCG,GAHwB,SAACr6D,EAAUugC,EAAO+4B,EAAWl8D,GACrDmjC,GAASxvB,EAAMupD,mBAAmB5P,GAAwB1qD,KAAas5D,EAAWp3D,EAAW9E,GAAQ,EAAU,EAANmjC,EAC3G,EAOEg6B,GAHwB,SAACv6D,EAAUugC,EAAO+4B,EAAWl8D,GACrDmjC,GAASxvB,EAAMypD,mBAAmB9P,GAAwB1qD,KAAas5D,EAAWp3D,EAAW9E,GAAQ,EAAU,GAANmjC,EAC3G,EAIEk6B,GAAgB,SAAChrB,GAEjB1+B,EAAM2pD,WADNjrB,EAAU/W,GAAGqG,SAAS0Q,IAItB1+B,EAAM45C,eAAiBlb,CACzB,EACEkrB,GAA2BF,GAM3BG,GAHqB,SAACnrB,GACtB1+B,EAAM8pD,gBAAgBniC,GAAGqG,SAAS0Q,GACpC,EAKEqrB,GADoB,SAACzrB,EAAImD,GAAE,OAAKzhC,EAAMgqD,eAAe1rB,EAAImD,EAAI,EAQ7DwoB,GAJqB,SAACx4C,EAAOy4C,GAE7BlqD,EAAMgqD,eAAev4C,EAAOtgB,EAAQ+4D,GAAG,GACzC,EAKEC,GADoB,SAAC7rB,EAAImD,EAAIC,GAAE,OAAK1hC,EAAMoqD,eAAe9rB,EAAImD,EAAIC,EAAI,EAQrE2oB,GAJqB,SAAC54C,EAAOy4C,GAE7BlqD,EAAMoqD,eAAe34C,EAAOtgB,EAAQ+4D,GAAG,GAAI/4D,EAAQ+4D,EAAE,GAAG,GAC1D,EAKEI,GADoB,SAAChsB,EAAImD,EAAIC,EAAIC,GAAE,OAAK3hC,EAAMuqD,eAAejsB,EAAImD,EAAIC,EAAIC,EAAI,EAQ7E6oB,GAJqB,SAAC/4C,EAAOy4C,GAE7BlqD,EAAMuqD,eAAe94C,EAAOtgB,EAAQ+4D,GAAG,GAAI/4D,EAAQ+4D,EAAE,GAAG,GAAI/4D,EAAQ+4D,EAAE,GAAG,GAC3E,EAKEO,GADoB,SAACnsB,EAAImD,EAAIC,EAAIC,EAAIc,GAAE,OAAKziC,EAAM0qD,eAAepsB,EAAImD,EAAIC,EAAIC,EAAIc,EAAI,EAQrFkoB,GAJqB,SAACl5C,EAAOy4C,GAE7BlqD,EAAM0qD,eAAej5C,EAAOtgB,EAAQ+4D,GAAG,GAAI/4D,EAAQ+4D,EAAE,GAAG,GAAI/4D,EAAQ+4D,EAAE,GAAG,GAAI/4D,EAAQ+4D,EAAE,IAAI,GAC7F,EAIEU,GAAyB,SAACn5C,EAAOo5C,GACjC7qD,EAAM8qD,oBAAoBr5C,EAAOo5C,EACnC,EACEE,GAAoCH,GAKpCI,GAD8BJ,GAM9BK,GAD4BL,GAM5BM,GAD4BN,GAM5BO,GAD2BP,GAK3BQ,GADqB,SAAC9sB,EAAImD,EAAIC,EAAIC,EAAIc,GAAE,OAAKziC,EAAMqrD,gBAAgB/sB,EAAImD,EAAIC,EAAIC,EAAIc,EAAI,EAOvF6oB,GAHsB,SAAC75C,EAAOy4C,GAC9BlqD,EAAMqrD,gBAAgB55C,EAAO1gB,EAAOm5D,GAAG,GAAIn5D,EAAOm5D,EAAE,GAAG,GAAIn5D,EAAOm5D,EAAE,GAAG,GAAIn5D,EAAOm5D,EAAE,IAAI,GAC1F,EAKEqB,GADsB,SAACjtB,EAAImD,EAAIC,EAAIC,EAAIc,GAAE,OAAKziC,EAAMwrD,iBAAiBltB,EAAImD,EAAIC,EAAIC,EAAIc,EAAI,EAOzFgpB,GAHuB,SAACh6C,EAAOy4C,GAC/BlqD,EAAMwrD,iBAAiB/5C,EAAOxgB,EAAQi5D,GAAG,GAAIj5D,EAAQi5D,EAAE,GAAG,GAAIj5D,EAAQi5D,EAAE,GAAG,GAAIj5D,EAAQi5D,EAAE,IAAI,GAC/F,EAIEwB,GAA0B,SAACj6C,EAAOpF,EAAMpV,EAAM00D,EAAQ30D,GACtDgJ,EAAM4rD,qBAAqBn6C,EAAOpF,EAAMpV,EAAM00D,EAAQ30D,EACxD,EACE60D,GAAqCH,GAGrCI,GAAyB,SAACr6C,EAAOpF,EAAMpV,EAAM80D,EAAYJ,EAAQ30D,GACjEgJ,EAAMgsD,oBAAoBv6C,EAAOpF,EAAMpV,IAAQ80D,EAAYJ,EAAQ30D,EACrE,EACEi1D,GAAoCH,GAGpCI,GAAc,SAAC5tB,EAAImD,EAAIC,EAAIC,GAAE,OAAK3hC,EAAMu6B,SAAS+D,EAAImD,EAAIC,EAAIC,EAAI,EACjEwqB,GAAyBD,GAQzBE,GALc,SAACrnB,EAAMv3B,EAAOoX,GAE5BA,EAAU1rB,OAAO0rB,GACjB5kB,EAAMqsD,SAAS1kC,GAAGgH,MAAMoW,GAAOv3B,EAAOoX,EACxC,EA4EE0nC,GAAa,SAACjgD,GACd,IACIkgD,GAAUlgD,EADIhc,EAAWC,OAAOsN,WACD,OAAS,MAAS,EACrD,IAIE,OAFAvN,EAAWm8D,KAAKD,GAChBp8D,IACO,CACT,CAAE,MAAMuC,GACR,CAGF,EAoDE+5D,GAAkC,WAClC,IACE,GAAI5+D,UAAU6+D,YAAa,OAAQ/7B,GAASg8B,iBAAmB9+D,UAAU6+D,eACrE,GAAK,CACX,CAAE,MAAMh6D,GACN7E,UAAU6+D,YAAc,IAC1B,CACA,OAAQ,CACV,EAuCEE,GAA6B,SAACrwD,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GACvFvG,GAASo8B,aAATp8B,GAASo8B,WAAe93D,GAAQ,MAEhC,IAWIsiC,EAAe,CACjBh7B,OAAQk8B,GAAgBl8B,GACxB26B,kBACAM,eACAC,YAf0B,WAAgB,IAAf/kC,EAACiB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG0I,MAC3Bs7B,EAAWhH,GAAS+G,qBAAqBhlC,EAAE6J,QAC3CyP,EAAKtZ,EAAE6J,OAAOyP,GAAKtZ,EAAE6J,OAAOyP,GAAK,GAEjC+gD,EAAap8B,GAASo8B,WAC1B/pC,GAAa2U,EAAUo1B,EAAa,EAAG,KACvC/pC,GAAahX,EAAI+gD,EAAa,IAAK,KAEdj3D,GAAa0hC,EAA2Bs1B,EAAaC,EAAYF,IAAWn6D,EAAEwe,gBACrG,EAOEmmB,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,EA4CEy1B,GAAwC,SAACzwD,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GAClGvG,GAASs8B,wBAATt8B,GAASs8B,sBAA0Bh4D,GAAQ,MAE3C,IAQIsiC,EAAe,CACjBh7B,SACA26B,kBACAM,eACAC,YAZqC,WAAgB,IAAf/kC,EAACiB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG0I,MACtC4wD,EAAwBt8B,GAASs8B,uBA3BP,SAAClvB,GACjC,IAAIhD,EAAoB5sC,SAAS4sC,mBAAqB5sC,SAAS++D,sBAAwB/+D,SAAS6sC,yBAA2B7sC,SAASg/D,oBAChIroC,IAAiBiW,EAGrBxqC,EAAMwtC,GAAejZ,EACrBv0B,EAAOwtC,EAAc,GAAMpN,GAASiH,oBAGpC,IAAIw1B,EAAkBtoC,EAAeiW,EAAoBpK,GAAS08B,0BAC9D11B,EAAWhH,GAAS+G,qBAAqB01B,GACzCphD,GAAKohD,aAAe,EAAfA,EAAiBphD,KAAM,GAChCgX,GAAa2U,EAAUoG,EAAc,EAAG,KACxC/a,GAAahX,EAAI+xB,EAAc,IAAK,KACpChtC,EAAUgtC,EAAc,KAAO,GAAMqvB,EAAkBA,EAAgBE,YAAc,EACrFv8D,EAAUgtC,EAAc,KAAO,GAAMqvB,EAAkBA,EAAgBG,aAAe,EACtFx8D,EAAUgtC,EAAc,KAAO,GAAMlS,OAAO9F,MAC5Ch1B,EAAUgtC,EAAc,KAAO,GAAMlS,OAAO7F,OACxClB,IACF6L,GAAS08B,0BAA4BtyB,EAEzC,CAQIyyB,CAA8BP,GAETn3D,GAAa0hC,EAA2Bs1B,EAAaG,EAAuBJ,IAAWn6D,EAAEwe,gBAChH,EAOEmmB,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,EAiBEk2B,GAA+B,SAAClxD,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GACzFvG,GAAS+8B,eAAT/8B,GAAS+8B,aAAiBz4D,GAAQ,OAElC,IAOIsiC,EAAe,CACjBh7B,OAAQk8B,GAAgBl8B,GACxBs6B,qBAAqB,EACrBK,kBACAM,eACAC,YAZ4B,WAAgB,IAAf/kC,EAACiB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG0I,MAC7BqxD,EAAe/8B,GAAS+8B,aAC5B5vB,GAAqB4vB,EAAch7D,EAAW,SAEzBoD,GAAa0hC,EAA2Bs1B,EAAaY,EAAcb,IAAWn6D,EAAEwe,gBACvG,EAQEmmB,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,EAgBEo2B,GAA2B,SAACpxD,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GACrFvG,GAASi9B,WAATj9B,GAASi9B,SAAa34D,GAAQ,MAE9B,IAwBIsiC,EAAe,CACjBh7B,OAAQk8B,GAAgBl8B,GACxB26B,kBACAM,eACAC,YA5BwB,SAAC/kC,GAEzB,IAAIm7D,EAAel9B,GAASi9B,SAC5Bv8D,EAAUw8D,GAAe,GAAMn7D,EAAEo7D,UAEjC,IAAI9oD,EAAQ6oD,GAAe,EAE3B98D,EAAOiU,EAAM,GAAKtS,EAAEzD,SACpBsB,EAAMs9D,EAAe,IAAMn7D,EAAEq7D,QAC7Bx9D,EAAMs9D,EAAe,IAAMn7D,EAAEs7D,SAC7Bz9D,EAAMs9D,EAAe,IAAMn7D,EAAEu7D,OAC7B19D,EAAMs9D,EAAe,IAAMn7D,EAAEw7D,QAC7B39D,EAAMs9D,EAAe,IAAMn7D,EAAEy7D,OAC7Bp9D,EAAOiU,EAAM,GAAKtS,EAAE07D,SACpBr9D,EAAOiU,EAAM,GAAKtS,EAAE27D,QACpBt9D,EAAOiU,EAAM,GAAKtS,EAAE47D,MACpBtrC,GAAatwB,EAAE/F,KAAO,GAAIkhE,EAAe,GAAI,IAC7C7qC,GAAatwB,EAAE0xB,MAAQ,GAAIypC,EAAe,GAAI,IAC9C7qC,GAAatwB,EAAE67D,MAAQ,GAAIV,EAAe,GAAI,IAC9C7qC,GAAatwB,EAAE87D,QAAU,GAAIX,EAAe,IAAK,IAE5B/3D,GAAa0hC,EAA2Bs1B,EAAae,EAAchB,IAAWn6D,EAAEwe,gBACvG,EAOEmmB,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,EAgBEk3B,GAAqB,SAAC1wB,EAAarrC,EAAG6J,GACtClL,EAAU0sC,GAAc,GAAMrrC,EAAEo7D,UAChC,IAAI9oD,EAAQ+4B,GAAc,EAC1BhtC,EAAOiU,EAAM,GAAKtS,EAAEg8D,QACpB39D,EAAOiU,EAAM,GAAKtS,EAAEi8D,QACpB59D,EAAOiU,EAAM,GAAKtS,EAAEk8D,QACpB79D,EAAOiU,EAAM,GAAKtS,EAAEm8D,QACpBt+D,EAAMwtC,EAAc,IAAMrrC,EAAEq7D,QAC5Bx9D,EAAMwtC,EAAc,IAAMrrC,EAAEs7D,SAC5Bz9D,EAAMwtC,EAAc,IAAMrrC,EAAEu7D,OAC5B19D,EAAMwtC,EAAc,IAAMrrC,EAAEw7D,QAC5Bz9D,EAAW,EAAJuU,EAAQ,IAAMtS,EAAEo8D,OACvBr+D,EAAW,EAAJuU,EAAQ,IAAMtS,EAAEurC,QAEvBltC,EAAOiU,EAAM,GAAKtS,EAAa,UAE/B3B,EAAOiU,EAAM,GAAKtS,EAAa,UAG/B,IAAIy3B,EAAOC,GAAsB7tB,GACjCxL,EAAOiU,EAAM,IAAMtS,EAAEk8D,SAAuB,EAAZzkC,EAAKO,MACrC35B,EAAOiU,EAAM,IAAMtS,EAAEm8D,SAAuB,EAAZ1kC,EAAKS,IACvC,EAGEmkC,GAA6B,SAACxyD,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GACvFvG,GAASq+B,aAATr+B,GAASq+B,WAAe/5D,GAAQ,KAGhC,IAOIsiC,EAAe,CACjBh7B,OAVFA,EAASk8B,GAAgBl8B,GAWvBs6B,oBAAwC,aAAnBK,GAAqD,cAAnBA,GAAsD,cAAnBA,EAC1FA,kBACAM,eACAC,YAZ0B,WAAgB,IAAf/kC,EAACiB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG0I,MAE/BoyD,GAAmB99B,GAASq+B,WAAYt8D,EAAG6J,GAEtBzG,GAAa0hC,EAA2Bs1B,EAAan8B,GAASq+B,WAAYnC,IAAWn6D,EAAEwe,gBAC9G,EAQEmmB,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,EA8BE03B,GAAyC,SAAC1yD,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GACnGvG,GAASu+B,yBAATv+B,GAASu+B,uBAA2Bj6D,GAAQ,MAE5C,IAOIsiC,EAAe,CACjBh7B,SACA26B,kBACAM,eACAC,YAXsC,WAAgB,IAAf/kC,EAACiB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG0I,MACvC6yD,EAAyBv+B,GAASu+B,wBAhBP,SAACnxB,GAClC,IAAIjX,EAAqB34B,SAAS24B,mBAIlCv2B,EAAMwtC,KAHkBjX,EAIxB,IAAI6Q,EAAWhH,GAAS+G,qBAAqB5Q,GACzC9a,GAAK8a,aAAkB,EAAlBA,EAAoB9a,KAAM,GACnCgX,GAAa2U,EAAUoG,EAAc,EAAG,KACxC/a,GAAahX,EAAI+xB,EAAc,IAAK,IACtC,CAOIoxB,CAA+BD,GAEVp5D,GAAa0hC,EAA2Bs1B,EAAaoC,EAAwBrC,IAAWn6D,EAAEwe,gBACjH,EAOEmmB,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,EA4DE63B,GAA6B,SAAC7yD,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GACvFvG,GAAS0+B,aAAT1+B,GAAS0+B,WAAep6D,GAAQ,OAIhC,IAwDIsiC,EAAe,CACjBh7B,OA3DFA,EAASk8B,GAAgBl8B,GA4DvBs6B,oBAAwC,cAAnBK,GAAsD,YAAnBA,EACxDA,kBACAM,eACAC,YA7D0B,SAAC/kC,GAC3B,IAKgB48D,EALTxlC,EAAU,CAAC,EAGlBylC,EAAAryC,EAH0BxqB,EAAEo3B,SAKZ,IAAhB,IAAAylC,EAAApiE,MAAAmiE,EAAAC,EAAA1iE,KAAAyM,MAAkB,CAAC,IAAVhN,EAACgjE,EAAAjjE,MAGRC,EAAEkjE,UAAYljE,EAAEmjE,SAAW,EAC3B3lC,EAAQx9B,EAAE8+B,YAAc9+B,CAC1B,CACA,OAAAkG,GAAA+8D,EAAA78D,EAAAF,EAAA,SAAA+8D,EAAApyC,GAAA,KAC8BuyC,EAD9BC,EAAAzyC,EACcxqB,EAAEk9D,gBAAc,IAA9B,IAAAD,EAAAxiE,MAAAuiE,EAAAC,EAAA9iE,KAAAyM,MAAgC,CAAC,IAAxBhN,EAACojE,EAAArjE,MACRC,EAAEkjE,UAAY,EACd1lC,EAAQx9B,EAAE8+B,YAAc9+B,CAC1B,CACA,OAAAkG,GAAAm9D,EAAAj9D,EAAAF,EAAA,SAAAm9D,EAAAxyC,GAAA,KAC6B0yC,EAD7BC,EAAA5yC,EACcxqB,EAAEq9D,eAAa,IAA7B,IAAAD,EAAA3iE,MAAA0iE,EAAAC,EAAAjjE,KAAAyM,MACEwwB,EADQ+lC,EAAAxjE,MACE++B,YAAYqkC,SAAW,CAClC,OAAAj9D,GAAAs9D,EAAAp9D,EAAAF,EAAA,SAAAs9D,EAAA3yC,GAAA,CAED,IAAIkyC,EAAa1+B,GAAS0+B,WAC1Bh+D,EAAUg+D,GAAa,GAAM38D,EAAEo7D,UAC/Bv9D,EAAM8+D,EAAa,IAAM38D,EAAEq7D,QAC3Bx9D,EAAM8+D,EAAa,IAAM38D,EAAEs7D,SAC3Bz9D,EAAM8+D,EAAa,IAAM38D,EAAEu7D,OAC3B19D,EAAM8+D,EAAa,IAAM38D,EAAEw7D,QAI3B,IAHA,IAAIlpD,EAAMqqD,EAAa,GACnBW,EAAa5lC,GAAsB7tB,GACnC0zD,EAAa,EACjBC,EAAA,EAAAC,EAAcrkE,OAAOgO,OAAOgwB,GAAQomC,EAAAC,EAAAviE,OAAAsiE,IAAE,CAAjC,IAAI5jE,EAAC6jE,EAAAD,GACJE,EAAUprD,GAAM,EAepB,GAdAjU,EAAOq/D,EAAQ,GAAK9jE,EAAE8+B,WACtBr6B,EAAOq/D,EAAQ,GAAK9jE,EAAEoiE,QACtB39D,EAAOq/D,EAAQ,GAAK9jE,EAAEqiE,QACtB59D,EAAOq/D,EAAQ,GAAK9jE,EAAEsiE,QACtB79D,EAAOq/D,EAAQ,GAAK9jE,EAAEuiE,QACtB99D,EAAOq/D,EAAQ,GAAK9jE,EAAE29B,MACtBl5B,EAAOq/D,EAAQ,GAAK9jE,EAAE49B,MACtB35B,EAAMyU,EAAM,IAAM1Y,EAAEkjE,UACpBj/D,EAAMyU,EAAM,IAAM1Y,EAAEmjE,SACpB1+D,EAAOq/D,EAAQ,GAAK9jE,EAAEsiE,SAA6B,EAAlBoB,EAAWtlC,MAC5C35B,EAAOq/D,EAAQ,GAAK9jE,EAAEuiE,SAA6B,EAAlBmB,EAAWplC,KAE5C5lB,GAAO,KAEDirD,EAAa,GACjB,KAEJ,CACAl/D,EAAUs+D,EAAa,GAAK,GAAMY,EAEbn6D,GAAa0hC,EAA2Bs1B,EAAauC,EAAYxC,IAAWn6D,EAAEwe,gBACrG,EAQEmmB,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,EAwBE84B,GAAwC,SAAC9zD,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GAClGvG,GAAS2/B,wBAAT3/B,GAAS2/B,sBAA0Br7D,GAAQ,IAE3C,IAQIsiC,EAAe,CACjBh7B,SACA26B,kBACAM,eACAC,YAZqC,WAAgB,IAbtBsG,EAE7BwyB,EAWoC79D,EAACiB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG0I,MACtCi0D,EAAwB3/B,GAAS2/B,sBAdNvyB,EAgBDuyB,EAd5BC,EADmB,CAAE,SAAU,UAAW,YAAa,YACpBr5C,QAAQ/oB,SAASoiE,iBAIxDhgE,EAAMwtC,GAAe5vC,SAASqiE,OAC9Bz/D,EAAUgtC,EAAc,GAAK,GAAMwyB,EAWZz6D,GAAa0hC,EAA2Bs1B,EAAawD,EAAuBzD,IAAWn6D,EAAEwe,gBAChH,EAOEmmB,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,EA8CEk5B,GAAoB,SAACC,GAAE,OAAK37D,GAAS47D,aAAY,SAACC,GAAM,OAAKjsC,GAAeisC,EAAQF,EAAG,GAAE,EAC7FD,GAAkBI,SAAU,EAE5B,IAAIC,GAAM,CACV,EAGIC,GAAgB,WAChB,IAAKA,GAAcC,QAAS,CAG1B,IACIC,EAAM,CACR,KAAQ,WACR,QAAW,WACX,KAAQ,IACR,IAAO,IACP,KAAQ,iBACR,MAP+B,WAAJ,oBAATpjE,UAAS,YAAAqN,EAATrN,aAAyBA,UAAUqjE,UAAa,KAAK7vD,QAAQ,IAAK,KAAO,SAQ3F,EAbsB/B,GAAe,kBAgBvC,IAAK,IAAIurB,KAAKimC,QAIGjhE,IAAXihE,GAAIjmC,UAAyBomC,EAAIpmC,GAChComC,EAAIpmC,GAAKimC,GAAIjmC,GAEpB,IAAImmC,EAAU,GACd,IAAK,IAAInmC,KAAKomC,EACZD,EAAQv3D,KAAK,GAADtF,OAAI02B,EAAC,KAAA12B,OAAI88D,EAAIpmC,KAE3BkmC,GAAcC,QAAUA,CAC1B,CACA,OAAOD,GAAcC,OACvB,EA+QEG,GAAqB,SAACzsC,GACtB,IACE,OAAOA,GACT,CAAE,MAAOhyB,GACPxC,EAAMwC,EACR,CACF,EAYEqC,GAAW,CACfq8D,sBAAqB,SAACv9D,GAGhB,IAFA,IAAIw9D,EAAgB,8BAEpBC,EAAA,EAAAC,EAA0BzlE,OAAOulB,QAAQxd,GAAQy9D,EAAAC,EAAA3jE,OAAA0jE,IAAE,CAA9C,IAAAE,EAAApxC,EAAAmxC,EAAAD,GAAA,GAAQG,EAAQD,EAAA,GACI,mBAAZC,IACcA,EAASZ,SAAWQ,EAAc9rC,KAFlDisC,EAAA,IAIX,CACF,EACJE,mBAAkB,SAACD,GACb,IAAIE,EAAU,WACZ58D,GAAS68D,gBAAgBn4D,KAAKg4D,GAC9B,IACE,OAAOA,EAAQ/9D,WAAC,EAADC,UACjB,CAAC,QACMlB,IACOsC,GAAS68D,gBAAgBpgD,MACnCzc,GAAS88D,kBAEb,CACF,EAEA,OADA98D,GAAS+8D,aAAat3D,IAAIi3D,EAAUE,GAC7BA,CACT,EACJ38D,sBAAqB,SAAC9J,GAEhB,IADA,IAAI+0B,EAAM,CAAC,EACX8xC,EAAA,EAAAC,EAA0BlmE,OAAOulB,QAAQnmB,GAAQ6mE,EAAAC,EAAApkE,OAAAmkE,IAAE,CAA9C,IAAAE,EAAA7xC,EAAA4xC,EAAAD,GAAA,GAAKlnC,EAAConC,EAAA,GAAER,EAAQQ,EAAA,GACnB,GAAuB,mBAAZR,EAAwB,CACjC,IAAIE,EAAU58D,GAAS28D,mBAAmBD,GAC1CxxC,EAAI4K,GAAK8mC,CAEZ,MACG1xC,EAAI4K,GAAK4mC,CAEb,CACA,OAAOxxC,CACT,EACJiyC,MAAM,CACNC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,SAAS,GAETC,MAAM,EACNC,UAAU,KACVC,SAAS,KACTC,uBAAuB,EACvBd,gBAAgB,GAChBe,kBAAkB,IAAIC,IACtBC,kBAAkB,IAAID,IACtBd,aAAa,IAAIc,IACjBE,YAAY,EACZC,qBAAqB,KACrBC,eAAe,GACfC,eAAc,SAACvuC,GACT,IAAK3vB,GAAS49D,kBAAkBO,IAAIxuC,GAAO,CACzC,IAAI1Y,EAAKjX,GAAS+9D,cAClB/9D,GAAS49D,kBAAkBn4D,IAAIkqB,EAAM1Y,GACrCjX,GAAS89D,kBAAkBr4D,IAAIwR,EAAI0Y,EACrC,CACA,OAAO3vB,GAAS49D,kBAAkB1mE,IAAIy4B,EACxC,EACJmtC,gBAAe,WACL98D,GAAS09D,UACT19D,GAASw9D,QAAUx9D,GAASm9D,MAAME,WACE,IAApCr9D,GAAS68D,gBAAgBhkE,SAM3BmH,GAASw9D,MAAQx9D,GAASm9D,MAAMC,OAGhChB,GAAmBn7D,IACE,oBAAVm9D,QACTA,OAAOC,aAGb,EACJC,SAAQ,WACF,OAAO,IAAI/8D,SAAQ,SAACC,EAAS2B,GAC3BnD,GAASg+D,qBAAuB,CAAEx8D,UAAS2B,SAC7C,GACF,EACJo7D,aAAY,WASN,IAAIt8D,EAAM/B,GAAQ,GAAKF,GAASy9D,WAGhC,OAFAz9D,GAASw+D,cAAcv8D,EAAKA,EAAM,GAAIjC,GAASy9D,WAC/Cz9D,GAASy+D,kBAAkBx8D,GACpBA,CACT,EACJu8D,cAAa,SAACv8D,EAAK4D,EAAO64D,GACpBxiE,EAAU+F,GAAM,GAAM4D,EACtB3J,EAAW+F,EAAM,GAAK,GAAM4D,EAAQ64D,CACtC,EACJD,kBAAiB,SAACx8D,GACZ,IACI08D,EAAW3+D,GAASk+D,eADAl+D,GAAS68D,gBAAgB,IAEjD7gE,EAAUiG,EAAM,GAAK,GAAM08D,CAC7B,EACJC,kBAAiB,SAAC38D,GAGZ,OADWjC,GAAS89D,kBAAkB5mE,IAD7B8E,EAAUiG,EAAM,GAAK,GAGhC,EACJ48D,SAAQ,SAAC58D,GACH,IAAIy6D,EAAW18D,GAAS4+D,kBAAkB38D,GAK1C,OAJWjC,GAAS+8D,aAAa7lE,IAAIwlE,EAI9B/sC,EACT,EACJisC,YAAW,SAACkD,GACN,IAAIphE,EAAJ,CACA,GAAIsC,GAASw9D,QAAUx9D,GAASm9D,MAAMC,OAAQ,CAK5C,IAAI2B,GAAkB,EAClBC,GAAuB,EAC3BF,GAAW,WACT,IAAIphE,IACJsC,GAAS29D,uBAFuB/+D,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG,EAGnCmgE,GAAkB,EACbC,GAAL,CAIAh/D,GAASw9D,MAAQx9D,GAASm9D,MAAMG,UAChClB,IAAmB,kBAAMl7D,GAAuBlB,GAAS09D,SAAS,SAC3C,IAAZtgC,IAA2BA,GAASzN,MAC7CyN,GAASqB,SAEX,IAAIwgC,EAAsBC,GAAU,EACpC,IACED,EAAuBj/D,GAAS6+D,SAAS7+D,GAAS09D,SACpD,CAAE,MAAOjgE,GACPwhE,EAAuBxhE,EACvByhE,GAAU,CACZ,CAEA,IAAIvlD,GAAU,EACd,IAAK3Z,GAAS09D,SAAU,CAatB,IAAIM,EAAuBh+D,GAASg+D,qBAChCA,IACFh+D,GAASg+D,qBAAuB,MAC/BkB,EAAUlB,EAAqB76D,OAAS66D,EAAqBx8D,SAASy9D,GACvEtlD,GAAU,EAEd,CACA,GAAIulD,IAAYvlD,EAId,MAAMslD,CAvCR,CAyCF,IACAD,GAAuB,EAClBD,IAEH/+D,GAASw9D,MAAQx9D,GAASm9D,MAAME,UAEhCr9D,GAAS09D,SAAW19D,GAASu+D,oBACN,IAAZnhC,IAA2BA,GAASzN,MAC7CyN,GAASoB,QAEX49B,IAAmB,kBAAMp7D,GAAuBhB,GAAS09D,SAAS,IAEtE,MAAW19D,GAASw9D,QAAUx9D,GAASm9D,MAAMG,WAE3Ct9D,GAASw9D,MAAQx9D,GAASm9D,MAAMC,OAChChB,GAAmBj7D,IACnBhB,GAAMH,GAAS09D,UACf19D,GAAS09D,SAAW,KAEpB19D,GAASi+D,eAAerkD,QAAQ8V,KAEhCv0B,EAAM,kBAADiE,OAAmBY,GAASw9D,QAEnC,OAAOx9D,GAAS29D,sBA/EC,CAgFnB,EACJwB,YAAY,SAACL,GAAU,OAAK9+D,GAAS47D,aAAY,SAACC,GAE5CiD,IAAaz7D,KAAKw4D,EACpB,GAAE,GAcF3pC,GAAgBxY,GAAQwY,cAE5BpjB,GAAGswD,oBAAsBnmD,GACzBnK,GAAG2c,aAEC1uB,EAA8B,sBAAIqgC,GAASmC,sBAC3CxiC,EAAsB,cAAIqgC,GAASoB,MACnCzhC,EAAuB,eAAIqgC,GAASqB,OACpCrB,GAAShjC,OACf,IAAK,IAAI/D,GAAI,EAAGA,GAAI,KAAMA,GAAGohD,GAAqB/yC,KAAK,IAAIiE,MAAMtS,KAU3D0G,EAAsB,gBAAG0P,GAAgB1P,EAAsB,eACjEA,EAAuB,iBAAGic,GAAiBjc,EAAuB,gBAClEA,EAAc,QAAGmO,EAAMnO,EAAc,OACrCA,EAAiB,WAAGU,EAAMV,EAAiB,UAC3CA,EAAmB,aAAGqB,EAAarB,EAAmB,YAGpDA,EAAkB,YAAGuN,EAAavN,EAAkB,WACpDA,EAAoB,cAAGwN,EAAcxN,EAAoB,aAK7DA,EAAyB,iBAAIJ,EAC7BI,EAA4B,oBAAIC,EAChCD,EAAsB,cAAIm1B,GAC1Bn1B,EAA+B,uBAAIkc,GACnClc,EAAkB,UA1CF,WAAH,OAAgB+R,GAAGyG,OAAM5W,MAATmQ,GAAElQ,UAAiB,EA2ChD7B,EAAsB,cA/CF,WAAH,OAAgB+R,GAAGyS,WAAU5iB,MAAbmQ,GAAElQ,UAAqB,EAgDxD7B,EAAwB,gBAxCF,WAAH,OAAgB+R,GAAGic,aAAYpsB,MAAfmQ,GAAElQ,UAAuB,EAyC5D7B,EAA0B,kBAAI+b,GAC9B/b,EAA0B,kBA5CF,WAAH,OAAgB+R,GAAG+d,eAAcluB,MAAjBmQ,GAAElQ,UAAyB,EA6ChE7B,EAAY,IAAIuhB,GAOlB,IAuCEpe,GACAC,GAOAC,GACAC,GAGAC,GACAC,GAkBAC,GACAC,GACAC,GACAC,GAKAE,GAGAC,GAYAC,GA+BAC,GACAC,GACAC,GACAC,GA/HEs/B,GAAa,CACf,OAAQ,WAAY1jC,EAAOsiE,cAAgBtiE,EAAOsiE,cAAkB,EACrE,OAAQ,SAACC,EAAIC,GAA0B,IAAjB,IAAMlzD,EAAO,GAAahW,EAAI,EAAGA,EAAIipE,EAAIjpE,IAAOgW,EAAK3H,KAAKuoB,GAAajxB,GAAQujE,GAAM,GAAKlpE,KAAQkQ,QAAQ4E,IAAI,kCAAmC,IAAMq0D,EAAYnzD,EAAK8V,QAAQ,SAAU,IAAmB,IAAfq9C,GAAoBA,GAAanzD,EAAKxT,QAAUwT,EAAKmzD,EAAY,GAAGC,WAAW,KAAQ,KAAM,wCAA0C,IAAMC,EAAUrzD,EAAKmzD,EAAY,GAAS1wD,GAAG0S,YAAYk+C,GAAS5zC,QAAUhd,GAAGqO,UAAUuiD,GAAY5wD,GAAG8F,MAAMoF,GAAO,CAAC,EAAG0lD,GAAU5wD,GAAG4L,QAAQ,GAAM,SAASjd,GAAWA,EAAO8I,QAAQD,MAAM,qCAAgDvJ,EAAO4iE,SAASL,EAAIC,EAAK,GAAI,EACrmB,OAAQ,WAAYxiE,EAAO6iE,cAAgB7iE,EAAO6iE,cAAkB,EACpE,OAAQ,SAACN,GAAaviE,EAAO8iE,eAAiB9iE,EAAO8iE,gBAAmB/wD,GAAG4L,OAAQ4kD,GAAI,WAAoBviE,EAAO+iE,gBAAkB/iE,EAAO+iE,gBAAoB,GAAI,EACnK,OAAQ,SAACR,EAAIC,EAAIQ,EAAIC,EAAIC,GAAS,GAAsB,oBAAXp2D,aAAiF/O,KAAtD+O,OAAOq2D,cAAgBr2D,OAAOs2D,oBAAqC,OAAO,EAAK,QAAiC,IAAtBt2D,OAAOu2D,UAA4B,CAAEv2D,OAAOu2D,UAAY,CAAEC,eAAgB,GAAKx2D,OAAOu2D,UAAUE,YAAc,CAAC,EAAGz2D,OAAOu2D,UAAUE,YAAYC,SAAWjB,EAAIz1D,OAAOu2D,UAAUE,YAAYE,QAAUjB,EAAI11D,OAAOu2D,UAAUE,YAAYG,OAASV,EAAIl2D,OAAOu2D,UAAUM,aAAe,CAAC,EAAG72D,OAAOu2D,UAAUM,aAAaC,QAAUX,EAAIn2D,OAAOu2D,UAAUM,aAAaE,QAAUX,EAAI,IAAIG,EAAYv2D,OAAOu2D,UAAWA,EAAU59C,QAAU,GAAI49C,EAAUS,aAAe,SAASp6C,GAAU,IAAK,IAAIq6C,EAAU,EAAGA,EAAUV,EAAU59C,QAAQ3pB,SAAUioE,EAAW,GAAkC,MAA9BV,EAAU59C,QAAQs+C,GAAyD,OAArCV,EAAU59C,QAAQs+C,GAAWr6C,EAAeq6C,EAA6C,OAAhCV,EAAU59C,QAAQ9d,KAAK+hB,GAAgB25C,EAAU59C,QAAQ3pB,OAAS,CAAG,EAAGunE,EAAUW,wBAA0B,SAASC,GAAsD,IAAvCZ,EAAU59C,QAAQw+C,GAAe,KAAaZ,EAAU59C,QAAQ3pB,OAAS,GAA0D,MAAjDunE,EAAU59C,QAAQ49C,EAAU59C,QAAQ3pB,OAAO,IAAcunE,EAAU59C,QAAQ/F,KAA2B,EAAG2jD,EAAUa,eAAiB,SAASx6C,GAAU,IAAK,IAAIq6C,EAAU,EAAGA,EAAUV,EAAU59C,QAAQ3pB,SAAUioE,EAAW,GAAIV,EAAU59C,QAAQs+C,IAAYr6C,EAAU,OAAO25C,EAAUW,wBAAwBD,EAAc,EAAGV,EAAUc,oBAAsB,SAASF,GAAe,OAAOZ,EAAU59C,QAAQw+C,EAAc,EAAGZ,EAAUe,mBAAyC,CAAC,WAAY,SAAgBf,EAAUgB,OAAS,WAAa,IAAI,IAAI/qE,EAAI,EAAGA,EAAI+pE,EAAU59C,QAAQ3pB,SAAUxC,EAAG,CAAE,IAAIowB,EAAS25C,EAAU59C,QAAQnsB,GAAkB,MAAVowB,GAAqC,MAAnBA,EAAO46C,UAAoB56C,EAAO+2C,QAAU4C,EAAUM,aAAaE,SAAWn6C,EAAO46C,SAAS5iC,SAASp7B,MAAK,WAAQhD,GAAqComB,EAAO66C,QAAU,IAAG,SAACh7D,GAAWC,QAAQD,MAAM,gCAAiCA,EAAQ,GAAM,CAAE85D,EAAUe,mBAAmBj8D,KAAI,SAASq8D,GAAcnoE,SAASgpC,oBAAoBm/B,EAAYnB,EAAUgB,QAAQ,EAAO,GAAI,EAAGhB,EAAUe,mBAAmBj8D,KAAI,SAASq8D,GAAcnoE,SAASo4B,iBAAiB+vC,EAAYnB,EAAUgB,QAAQ,EAAO,GAAI,CAAwC,OAAtCv3D,OAAOu2D,UAAUC,gBAAkB,EAAU,CAAG,EAChqE,OAAQ,gBAAyC,IAAtBx2D,OAAOu2D,YAA8BA,UAAUe,mBAAmBj8D,KAAI,SAASq8D,GAAcnoE,SAASgpC,oBAAoBm/B,EAAYnB,UAAUgB,QAAQ,EAAO,IAAIv3D,OAAOu2D,UAAUC,gBAAkB,EAA2C,IAApCx2D,OAAOu2D,UAAUC,uBAA+Bx2D,OAAOu2D,UAAe,EAC9S,OAAQ,WAAQ,YAAmCtlE,IAA3BhC,UAAU0oE,mBAAsE1mE,IAAxChC,UAAU0oE,aAAavtC,YAA6B,EACpH,OAAQ,WAAQ,IAAM,IAAIrT,EAAO,IAAK/W,OAAOq2D,cAAgBr2D,OAAOs2D,oBAA2BsB,EAAa7gD,EAAK6gD,WAA0B,OAAd7gD,EAAK5N,QAAgByuD,CAAY,CAAE,MAAM9jE,GAAK,OAAO,CAAG,CAAE,EACvL,OAAQ,SAAC2hE,EAAIC,EAAIQ,EAAIC,EAAIC,EAAIyB,GAAS,IAAIC,EAAarC,EAAQsC,EAAWrC,EAA6BsC,EAAa7B,EAAQ8B,EAAsB7B,EAAQqB,EAAUI,EAAI,QAAiC,IAAtB73D,OAAOu2D,UAA8B,OAAQ,EAAK,IAAI35C,EAAS,CAAC,EAAOs7C,EAAsB,CAAC,EAAOJ,GAAc93D,OAAOu2D,UAAUE,YAAYC,UAA0B,GAA9PR,IAAmQgC,EAAoBN,WAAvR1B,GAAkTt5C,EAAO46C,SAAW,IAAKx3D,OAAOq2D,cAAgBr2D,OAAOs2D,oBAAoB4B,GAAsBt7C,EAAO46C,SAASW,UAAWv7C,EAAO+2C,MAAQ3zD,OAAOu2D,UAAUM,aAAaC,QAAS,IAAIsB,EAAiB,EAA2tE,OAAprEN,GAAc93D,OAAOu2D,UAAUE,YAAYC,WAAY0B,EAAiBL,GAAYn7C,EAAOy7C,WAAaz7C,EAAO46C,SAASc,sBAAsBN,EAAYI,EAAxKL,GAA0Mn7C,EAAOy7C,WAAWE,eAAiB,SAASzkE,GAA+M,GAArK,MAAjC8oB,EAAO47C,wBAA0E,GAAxC57C,EAAO47C,uBAAuBxpE,SAAe4tB,EAAO47C,uBAAyB,IAAIhmE,aAAaD,EAAQb,OAAQumE,EAAqBD,EAAaD,IAAiBD,GAAc93D,OAAOu2D,UAAUE,YAAYE,SAAWmB,GAAc93D,OAAOu2D,UAAUE,YAAYG,OAAQ,CAAE,IAAK,IAAI6B,EAAW,EAAGA,EAAWV,EAAUU,GAAY,EAAuH,IAAlH,IAAIC,EAAc5kE,EAAE4kE,YAAYC,eAAeF,GAAeG,EAAqBh8C,EAAO47C,uBAAiCK,EAAS,EAAGA,EAASb,EAAYa,GAAU,EAAKD,EAAmBC,EAAOd,EAAWU,GAAYC,EAAYG,GAAapiE,GAAgDghE,EAASO,EAAYC,EAAsB,CAAE,GAAIH,GAAc93D,OAAOu2D,UAAUE,YAAYC,UAAYoB,GAAc93D,OAAOu2D,UAAUE,YAAYG,OAAsG,IAA5FlgE,GAAiD+gE,EAASO,EAAYC,GAA+BQ,EAAW,EAAGA,EAAW3kE,EAAEglE,aAAaC,mBAAoBN,EAAY,KAAIK,EAAehlE,EAAEglE,aAAaH,eAAeF,GAAmE,IAApDG,EAAqBh8C,EAAO47C,uBAAiCK,EAAS,EAAGA,EAASb,EAAYa,GAAU,EAAKC,EAAaD,GAAUD,EAAmBC,EAAOd,EAAWU,EAA/K,MAAuM,IAASA,EAAW,EAAGA,EAAW3kE,EAAEglE,aAAaC,mBAAoBN,EAAY3kE,EAAEglE,aAAaH,eAAeF,GAAUO,KAAK,EAAU,EAAOlB,GAAc93D,OAAOu2D,UAAUE,YAAYE,SAAWmB,GAAc93D,OAAOu2D,UAAUE,YAAYG,QAAU3nE,UAAU0oE,aAAavtC,aAAa,CAAC3C,OAAM,EAAMwxC,OAAM,IAASz/D,MAAK,SAASqP,GAAU+T,EAAOs8C,WAAat8C,EAAO46C,SAAS2B,wBAAwBtwD,GAAS+T,EAAOs8C,WAAWE,QAAQx8C,EAAOy7C,YAAaz7C,EAAOy7C,WAAWe,QAAQx8C,EAAO46C,SAAS6B,YAAc,IAAIjgE,OAAM,SAASqD,GAASC,QAAQ4E,IAAI,6BAA+B7E,EAAQ,IAAUq7D,GAAc93D,OAAOu2D,UAAUE,YAAYC,UAAY95C,EAAOy7C,WAAWe,QAAQx8C,EAAO46C,SAAS6B,aAAgBz8C,EAAO66C,QAAUA,EAAgBz3D,OAAOu2D,UAAUS,aAAap6C,EAAS,EAC/1F,OAAQ,SAAC64C,GAAS,OAAOz1D,OAAOu2D,UAAUc,oBAAoB5B,GAAI+B,SAASI,UAAY,EACvF,OAAQ,SAACnC,GAAS,IAAI74C,EAAS5c,OAAOu2D,UAAUc,oBAAoB5B,QAA+BxkE,IAAtB2rB,EAAOy7C,aAA4Bz7C,EAAOy7C,WAAWE,eAAiB,WAAa,EAAG37C,EAAOy7C,WAAWiB,aAAc18C,EAAOy7C,gBAAapnE,QAAuCA,IAAtB2rB,EAAOs8C,aAA4Bt8C,EAAOs8C,WAAWI,aAAc18C,EAAOs8C,gBAAajoE,GAAa2rB,EAAO46C,SAASruD,QAASyT,EAAO46C,cAAWvmE,EAAW2rB,EAAO66C,aAAUxmE,CAAW,EAC9Z,OAAQ,SAACwkE,GAASz1D,OAAOu2D,UAAUW,wBAAwBzB,EAAK,EAChE,OAAQ,SAACA,GAAS,IAAI74C,EAAS5c,OAAOu2D,UAAUc,oBAAoB5B,GAAK74C,EAAO46C,SAAS5iC,SAAUhY,EAAO+2C,MAAQ3zD,OAAOu2D,UAAUM,aAAaE,OAAS,EACzJ,OAAQ,SAACtB,GAAS,IAAI74C,EAAS5c,OAAOu2D,UAAUc,oBAAoB5B,GAAK74C,EAAO46C,SAASW,UAAWv7C,EAAO+2C,MAAQ3zD,OAAOu2D,UAAUM,aAAaC,OAAS,EAC1J,OAAQ,SAACrB,GAAS,IAAI7uD,EAAMwc,GAAaqyC,GAAbryC,gDAA6Em2C,EAAQv5D,OAAO+J,OAAOnD,EAAK,KAA2C,OAAvB,OAAV2yD,IAAkBA,EAAQ,KAAcC,SAASzxD,GAAmBwxD,GAAQ,KAAME,aAAe,EAC/O,OAAQ,WAAQ,MAA6B,oBAAlBpD,cAAwF,oBAAxBC,kBAAoE,EAC/J,OAAQ,WAAQ,YAAwC,IAA5BrnE,UAAU0oE,mBAAmF,IAAzC1oE,UAAU0oE,aAAavtC,mBAAmG,IAAlCn7B,UAAUyqE,kBAAoE,EACtP,OAAQ,SAACjE,QAAuC,IAApBviE,EAAa,OAAsBA,EAAa,KAAI,CAAC,GAAK,IAtVvDs1B,EAAKmxC,EAsVsDC,EAAO1mE,EAAa,KAAuZ,OAA/YuiE,EAAgCmE,EAAKjD,QAAU,CAAC,EAA1CiD,EAAKnyC,MAAQ,CAAC,EAAsCmyC,EAAKC,eAA6C,oBAAlBxD,aAAiCuD,EAAKC,aAAe,IAAIxD,aAA0D,oBAAxBC,qBAAuCsD,EAAKC,aAAe,IAAIvD,oBAA4BsD,EAAKC,mBAA0D,IAA9B5qE,UAAU6oC,iBAtVlZtP,EAsV4coxC,EAAKC,aArVteF,IACHA,EAAW,CAACpqE,SAAUA,SAASC,eAAe,YAEhD,CAAC,UAAW,YAAa,cAAcugB,SAAQ,SAACtS,GAC9Ck8D,EAAS5pD,SAAQ,SAACspB,GAChBA,WAAS1R,iBAAiBlqB,GAAO,WACb,cAAd+qB,EAAImrC,OAAuBnrC,EAAIoM,QACrC,GAAG,CAAE,MAAQ,GACf,GACF,WA4U6hB3jC,IAAtB2oE,EAAKC,cAA8B,EAAI,CAAG,EACtjB,OAAQ,WAAmC,OAAhB3mE,EAAa,KAAe2mE,aAAajC,UAAY,EAChF,OAAQ,SAACnC,EAAIC,EAAIQ,EAAIC,GAAS,IAAIyD,EAAO1mE,EAAa,KAAO4mE,EAAkB,SAASjxD,QAA4C5X,IAA9B2oE,EAAKjD,QAAQoD,eAA8BC,cAAcJ,EAAKjD,QAAQoD,cAAeH,EAAKjD,QAAQoD,kBAAe9oE,EAAW2oE,EAAKjD,QAAQsD,mBAAgBhpE,GAAY2oE,EAAKjD,QAAQuD,gBAAkBN,EAAKC,aAAaV,wBAAwBtwD,GAAS+wD,EAAKjD,QAAQwD,oBAAsBP,EAAKC,aAAavB,sBAAsB5C,EAAID,EAAI,GAAImE,EAAKjD,QAAQwD,oBAAoB5B,eAAiB,SAAS6B,QAAsCnpE,IAAT2oE,QAAyC3oE,IAAjB2oE,EAAKjD,UAAoCyD,EAAqBtB,aAAaH,eAAe,GAAGK,KAAK,GAAMY,EAAKjD,QAAQ0D,qBAAuBD,EAAqB1B,YAAar2D,GAAQ,KAAM6zD,EAAI,CAACC,IAAM,EAAGyD,EAAKjD,QAAQuD,gBAAgBd,QAAQQ,EAAKjD,QAAQwD,qBAAsBP,EAAKjD,QAAQwD,oBAAoBf,QAAQQ,EAAKC,aAAaR,aAAcO,EAAKjD,QAAQ9tD,OAASA,CAAQ,EAAOyxD,EAAgB,WAAkB,EAAGV,EAAKjD,QAAQsD,cAAgBL,EAAKC,aAAaU,aAAa9E,EAAIC,EAAIkE,EAAKC,aAAajC,YAAagC,EAAKjD,QAAQsD,cAActB,eAAe,GAAGK,KAAK,GAAsIY,EAAKjD,QAAQoD,aAAeS,aAArI,WAAaZ,EAAKjD,QAAQ0D,qBAAuBT,EAAKjD,QAAQsD,cAAe53D,GAAQ,KAAM6zD,EAAI,CAACC,GAAM,GAA8DT,EAAKkE,EAAKC,aAAajC,WAAc,UAAuC3mE,IAA3BhC,UAAU0oE,mBAAwE1mE,IAAxChC,UAAU0oE,aAAavtC,aAA+Bn7B,UAAU0oE,aAAavtC,aAAa,CAAE3C,OAAO,EAAMwxC,OAAO,IAASz/D,KAAKsgE,GAAiB1gE,MAAMkhE,QAA4DrpE,IAAjChC,UAAUyqE,oBAAoCzqE,UAAUyqE,mBAAmB,CAAEjyC,OAAO,EAAMwxC,OAAO,GAASa,EAAiBQ,EAAkB,EACvrD,OAAQ,SAAC7E,EAAIC,EAAIQ,EAAIC,GAAS,IAAIyD,EAAO1mE,EAAa,KAAG0mE,EAAKnyC,MAAM0yC,oBAAsBP,EAAKC,aAAoC,sBAAEnE,EAAI,EAAGD,GAAKmE,EAAKnyC,MAAM0yC,oBAAoC,eAAI,SAAUrmE,QAAmB7C,IAAT2oE,QAAuC3oE,IAAf2oE,EAAKnyC,aAAkEx2B,IAA5B2oE,EAAKnyC,MAAMsyC,eAA8BC,cAAcJ,EAAKnyC,MAAMsyC,cAAeH,EAAKnyC,MAAMsyC,kBAAe9oE,EAAW2oE,EAAKnyC,MAAMwyC,mBAAgBhpE,GAAa2oE,EAAKnyC,MAAMgzC,oBAAsB3mE,EAAgB,aAAGuO,GAAQ,KAAM6zD,EAAI,CAACC,IAAM,EAAGyD,EAAKnyC,MAAM0yC,oBAA6B,QAAEP,EAAKC,aAA0B,aAAoC,cAA5BD,EAAKC,aAAalG,QAAyBiG,EAAKnyC,MAAMwyC,cAAgBL,EAAKC,aAAaU,aAAa9E,EAAIC,EAAIkE,EAAKC,aAAajC,YAAagC,EAAKnyC,MAAMwyC,cAActB,eAAe,GAAGK,KAAK,GAAoTY,EAAKnyC,MAAMsyC,aAAeS,aAAjT,gBAAuD,IAA9BvrE,UAAU6oC,gBAAuC7oC,UAAU6oC,eAAe4iC,eAAiBd,EAAKC,aAAajlC,SAAcglC,EAAKnyC,MAAMgzC,oBAAsBb,EAAKnyC,MAAMwyC,cAAe53D,GAAQ,KAAM6zD,EAAI,CAACC,IAAMyD,EAAKnyC,MAAMgzC,yBAAsBxpE,CAAW,GAA4DykE,EAAKkE,EAAKC,aAAajC,WAAc,KAAS,EACjrC,OAAQ,SAACnC,EAAIC,GAA0G,IAAjG,IAAIkE,EAAO1mE,EAAa,KAAOynE,EAAcf,EAAKjD,QAAQ0D,qBAAqBtB,iBAA2BlsE,EAAI,EAAGA,EAAI8tE,IAAe9tE,EAAG,CAAE,IAAI+tE,EAAchB,EAAKjD,QAAQ0D,qBAAqB1B,eAAe9rE,GAAI,GAAI+tE,EAAY5rE,QAAU0mE,EAAM,KAAM,+DAAiEkF,EAAY5rE,OAAS,wBAA0B0mE,EAAK,YAAe,GAAmB,GAAfiF,EAAoB,IAAK,IAAI1lD,EAAI,EAAGA,EAAIygD,IAAMzgD,EAAK9c,EAASs9D,EAAU,EAAJxgD,EAAQ2lD,EAAY3lD,GAAI,cAAqB,IAASA,EAAI,EAAGA,EAAIygD,IAAMzgD,EAAK9c,EAASs9D,EAAgC,GAAxBxgD,EAAI0lD,EAAe9tE,GAAS+tE,EAAY3lD,GAAI,QAAc,CAAE,EAC/mB,OAAQ,SAACwgD,EAAIC,GAA8H,IAArH,IAAIkE,EAAO1mE,EAAa,KAAOwtB,EAAM+0C,IAAO,EAAOkF,EAAcf,EAAKnyC,MAAMgzC,oBAAsC,iBAAY5tE,EAAI,EAAGA,EAAI8tE,IAAe9tE,EAAG,CAAE,IAAI+tE,EAAchB,EAAKnyC,MAAMgzC,oBAAoC,eAAE5tE,GAAI,GAAI+tE,EAAY5rE,QAAU0mE,EAAM,KAAM,8DAAgEkF,EAAY5rE,OAAS,wBAA0B0mE,EAAK,YAAe,IAAK,IAAIzgD,EAAI,EAAGA,EAAIygD,IAAMzgD,EAAK2lD,EAAY3lD,GAAK1iB,EAAQmuB,GAAOzL,EAAE0lD,EAAc9tE,GAAO,CAAE,EAC3f,OAAQ,SAAC4oE,GAAS,IAAImE,EAAO1mE,EAAa,KAAG,GAAIuiE,EAAI,CAA6F,QAAzDxkE,IAA9B2oE,EAAKjD,QAAQoD,cAA8BC,cAAcJ,EAAKjD,QAAQoD,mBAA6C9oE,IAAxB2oE,EAAKjD,QAAQ9tD,OAA2E,IAAnD,IAAIgyD,EAASjB,EAAKjD,QAAQ9tD,OAAOiyD,iBAA2BtuE,EAAI,EAAGA,EAAIquE,EAAO7rE,OAAQxC,IAAOotE,EAAKjD,QAAQ9tD,OAAOkyD,YAAYF,EAAOruE,SAAkDyE,IAArC2oE,EAAKjD,QAAQwD,sBAAqCP,EAAKjD,QAAQwD,oBAAoB5B,eAAiB,WAAgC,EAAGqB,EAAKjD,QAAQwD,oBAAoBb,mBAAqDroE,IAAjC2oE,EAAKjD,QAAQuD,iBAAiCN,EAAKjD,QAAQuD,gBAAgBZ,aAAgBM,EAAKjD,aAAU1lE,CAAW,MAA+CA,MAAlC2oE,EAAKnyC,MAAM0yC,qBAAoCP,EAAKnyC,MAAM0yC,oBAAoBb,kBAAgDroE,IAA5B2oE,EAAKnyC,MAAMsyC,cAA8BC,cAAcJ,EAAKnyC,MAAMsyC,cAAiBH,EAAKnyC,WAAQx2B,OAAwCA,IAAtB2oE,EAAKC,mBAA+C5oE,IAAf2oE,EAAKnyC,YAA0Cx2B,IAAjB2oE,EAAKjD,UAA0BiD,EAAKC,aAAa1wD,QAASywD,EAAKC,kBAAe5oE,EAAa,EAC5/B,OAAQ,SAACwkE,EAAIC,EAAIQ,GAAS,IAAI5oC,EAAImoC,EAAQjnE,EAAIknE,EAAQjV,EAASyV,EAAShjE,EAAa,OAAGA,EAAa,KAAI,CAAC,GAAG,IAAI0mE,EAAO1mE,EAAa,KAAO0mE,EAAKoB,YAAc9nE,EAAe,SAAK0mE,EAAKpxC,IAAMt1B,EAAsB,cAAEA,EAAe,QAAG,GAAO,GAAO0mE,EAAKoB,UAAY9nE,EAAe,QAAS0mE,EAAKtsC,IAAMA,GAAKssC,EAAKprE,IAAMA,GAAKorE,EAAKqB,WAAarB,EAAKpxC,MAAOoxC,EAAKsB,MAAQtB,EAAKpxC,IAAI2yC,gBAAgB7tC,EAAG9+B,GAAIorE,EAAKtsC,EAAIA,EAAGssC,EAAKprE,EAAIA,EAAGorE,EAAKqB,SAAWrB,EAAKpxC,KAAO,IAAmEjE,EAA/D1N,EAAO+iD,EAAKsB,MAAMrkD,KAAU7lB,EAAMyvD,EAAS,EAAOzsC,EAAM,EAAY,GAAgC,oBAArBonD,kBAAoCvkD,aAAgBukD,iBAAuC,IAAnB72C,EAAM1N,EAAK7nB,OAAeglB,EAAMuQ,GAAK,CAAE,IAAIzhB,EAAM3Q,EAAOnB,GAAM6lB,EAAK7C,GAAc,IAANlR,EAAY+T,EAAK7C,EAAI,GAAMlR,GAAO,EAAK,IAAM+T,EAAK7C,EAAI,GAAMlR,GAAO,GAAM,IAAM+T,EAAK7C,EAAI,GAAK,IAAMhjB,IAAOgjB,GAAO,CAAG,KAAS,CAAM4lD,EAAKyB,aAAexkD,IAAQ+iD,EAAK0B,OAAS,IAAIlpE,WAAWykB,EAAKnlB,QAASkoE,EAAK2B,MAAQ,IAAIvpE,WAAW6kB,EAAKnlB,QAASkoE,EAAKyB,WAAaxkD,GAAQ,IAAIykD,EAAS1B,EAAK0B,OAA6BA,EAAO1/D,IAAIzJ,EAAOwU,SAAS3V,EAAKA,GAArDuzB,EAAM+2C,EAAOtsE,UAAqD,IAAIusE,EAAQ3B,EAAK2B,MAAW/uE,EAAI,EAAOyoB,EAAIzoB,EAAI,EAAE+3B,EAAK,GAAIA,EAAM,GAAK,EAAK,KAAO/3B,EAAIyoB,GAAKsmD,EAAM/uE,GAAK,IAAqB+uE,EAAf/uE,EAAIA,EAAI,EAAI,GAAc,IAAqB+uE,EAAf/uE,EAAIA,EAAI,EAAI,GAAc,IAAqB+uE,EAAf/uE,EAAIA,EAAI,EAAI,GAAc,IAAqB+uE,EAAf/uE,EAAIA,EAAI,EAAI,GAAc,IAAqB+uE,EAAf/uE,EAAIA,EAAI,EAAI,GAAc,IAAqB+uE,EAAf/uE,EAAIA,EAAI,EAAI,GAAc,IAAqB+uE,EAAf/uE,EAAIA,EAAI,EAAI,GAAc,IAAMA,EAAIA,EAAI,EAAI,OAAc,KAAOA,EAAIyoB,GAAKsmD,EAAM/uE,GAAK,IAAMA,EAAIA,EAAI,EAAI,CAAO,CAAEotE,EAAKpxC,IAAIgzC,aAAa5B,EAAKsB,MAAO,EAAG,EAAI,EACl9C,OAAQ,SAACzF,EAAIC,EAAIQ,EAAIC,EAAIC,GAAS,IAAI9oC,EAAImoC,EAAQjnE,EAAIknE,EAAQ+F,EAAQvF,EAAQwF,EAAQvF,EAAQ1V,EAAS2V,EAAQnvC,EAAS13B,SAAS23B,cAAc,UAAWD,EAAOE,MAAQmG,EAAGrG,EAAOG,OAAS54B,EAAG,IAAwI+1B,EAApIiE,EAAMvB,EAAOI,WAAW,MAAW6zC,EAAQ1yC,EAAI2yC,gBAAgB7tC,EAAG9+B,GAAQqoB,EAAOqkD,EAAMrkD,KAAU7lB,EAAMyvD,EAAS,EAAOzsC,EAAM,EAAY,GAAgC,oBAArBonD,kBAAoCvkD,aAAgBukD,iBAAuC,IAAnB72C,EAAM1N,EAAK7nB,OAAeglB,EAAMuQ,GAAK,CAAE,IAAIzhB,EAAM3Q,EAAOnB,GAAM6lB,EAAK7C,GAAc,IAANlR,EAAY+T,EAAK7C,EAAI,GAAMlR,GAAO,EAAK,IAAM+T,EAAK7C,EAAI,GAAMlR,GAAO,GAAM,IAAM+T,EAAK7C,EAAI,GAAMlR,GAAO,GAAM,IAAM9R,IAAOgjB,GAAO,CAAG,KAAS,CAAE,IAAIsnD,EAAS,IAAIlpE,WAAWykB,EAAKnlB,QAA8B4pE,EAAO1/D,IAAIzJ,EAAOwU,SAAS3V,EAAKA,GAArDuzB,EAAM+2C,EAAOtsE,SAAqD,CAAEw5B,EAAIgzC,aAAaN,EAAO,EAAG,GAAI,IAAInsE,EAAgB,IAAV0sE,GAAyB,IAAVC,EAAc,OAASz0C,EAAO00C,YAAc,UAAY,OAAS10C,EAAO00C,YAAc,KAAOF,EAAQ,IAAMC,EAAQ,SAAcE,EAASvlE,GAAQtH,EAAIC,OAAS,GAA+C,OAA3Co1B,GAAar1B,EAAK6sE,EAAQ7sE,EAAIC,OAAS,GAAW4sE,CAAQ,EAC1/B,OAAQ,SAACnG,GAAaviE,EAAe,SAAKA,EAAe,OAAEu6B,MAAc,OAAIrK,GAAaqyC,GAAO,EACjG,OAAQ,WAAYviE,EAAe,SAAKA,EAAe,OAAEu6B,MAAc,OAAI,OAAU,EACrF,OAAQ,WAAQ,OAAOztB,OAAOu7B,UAAY,EAC1C,OAAQ,WAAQ,OAAOv7B,OAAOy7B,WAAa,EAC3C,OAAQ,SAACg6B,EAAIC,GAASmG,MAAMz4C,GAAaqyC,GAAM,OAASryC,GAAasyC,GAAM,GAiMxEj+D,GAAc,CAEhBqkE,eAnzNA,SAAyBjgD,EAAIkgD,GAC7B,IAEI,IAAIC,EAAM34C,GAASK,gBAAgB7H,GACnC,GAAImgD,EAAIngD,KAAOkgD,EAAO,OAAQ,GAE9B,GAAIA,EAAQ,GAAKA,GAAS92D,GAAG0W,aAAc,OAAQ,EACnD,IAAIsgD,EAAWh3D,GAAG8W,UAAUggD,GAE5B,OADIE,GAAUh3D,GAAGkE,MAAM8yD,GAChBh3D,GAAGkX,UAAU6/C,EAAKD,GAAOlgD,EAClC,CAAE,MAAO/nB,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EAuyNA6iD,oBAryNA,SAA8B14C,EAAOrvB,EAAMgoE,GAC3C,IAII,GAFAhoE,EAAOkvB,GAASY,OAAO9vB,GACvBA,EAAOkvB,GAASE,YAAYC,EAAOrvB,IACvB,EAARgoE,EAEF,OAAQ,GAEV,IACIpzD,EADS9D,GAAGkO,WAAWhf,EAAM,CAAEkmB,QAAQ,IACzBtR,KAClB,IAAKA,EACH,OAAQ,GAEV,IAAImS,EAAQ,GAIZ,OAHY,EAARihD,IAAWjhD,GAAS,KACZ,EAARihD,IAAWjhD,GAAS,KACZ,EAARihD,IAAWjhD,GAAS,KACpBA,GAAmDjW,GAAGkW,gBAAgBpS,EAAMmS,IACtE,EAEH,CACT,CAAE,MAAOpnB,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EA6wNA+iD,kBAjwNA,SAA4BvgD,EAAI2E,EAAKwD,GACrCX,GAASW,QAAUA,EACnB,IAEI,IAAInb,EAASwa,GAASK,gBAAgB7H,GACtC,OAAQ2E,GACN,KAAK,EAEH,IADI/D,EAAMyH,MACA,EACR,OAAQ,GAEV,KAAOjf,GAAG2T,QAAQ6D,IAChBA,IAIF,OADYxX,GAAGkX,UAAUtT,EAAQ4T,GAChBZ,GAEnB,KAAK,EACL,KAAK,EAgBL,KAAK,GACL,KAAK,GAKH,OAAO,EApBT,KAAK,EACH,OAAOhT,EAAO+F,MAChB,KAAK,EACH,IAAI6N,EAAMyH,KAEV,OADArb,EAAO+F,OAAS6N,EACT,EAET,KAAK,GAKH,OAJIA,EAAM0H,KAGVtyB,EAAU4qB,EAFG,GAEa,GAAM,EACzB,EAUX,OAAQ,EACV,CAAE,MAAO3oB,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EAmtNAgjD,kBAjtNA,SAA4BxgD,EAAI6E,GAChC,IAEI,OAAO2C,GAASM,UAAUjD,EAAKzb,GAAGga,MAAMpD,GAC1C,CAAE,MAAO/nB,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EA2sNAijD,qBArsNA,SAA+BzgD,EAAI0gD,EAAM3rC,GACzC,IAEI,IAAI/nB,EAASwa,GAASK,gBAAgB7H,GACtChT,EAAOsX,WAAPtX,EAAOsX,SAAalb,GAAG2G,QAAQ/C,EAAO1U,OAQtC,IANA,IAAIqoE,EAAc,IACdnnD,EAAM,EACNonD,EAAMx3D,GAAG6G,OAAOjD,EAAQ,EAAG,GAE3BlB,EAAWpI,KAAK4Y,MAAMskD,EAAMD,GAC5B50D,EAASrI,KAAKsG,IAAIgD,EAAOsX,SAASnxB,OAAQ2Y,EAAWpI,KAAK4Y,MAAMyY,EAAM4rC,IACjEp2D,EAAMuB,EAAUvB,EAAMwB,EAAQxB,IAAO,CAC5C,IAAIgH,EACA/U,EACAtL,EAAO8b,EAAOsX,SAAS/Z,GAC3B,GAAa,MAATrZ,EACFqgB,EAAKvE,EAAOE,KAAKqE,GACjB/U,EAAO,OAEJ,GAAa,OAATtL,EAEPqgB,EADanI,GAAGkO,WAAWtK,EAAO1U,KAAM,CAAE8W,QAAQ,IACtClC,KAAKqE,GACjB/U,EAAO,MAEJ,CACH,IAAIqkE,EACJ,IACEA,EAAQz3D,GAAGkJ,WAAWtF,EAAOE,KAAMhc,EACrC,CAAE,MAAO+G,GAGP,GAAiB,MAAbA,aAAC,EAADA,EAAGulB,OACL,SAEF,MAAMvlB,CACR,CACAsZ,EAAKsvD,EAAMtvD,GACX/U,EAAO4M,GAAGyH,SAASgwD,EAAM/uE,MAAQ,EAC1BsX,GAAGoH,MAAMqwD,EAAM/uE,MAAQ,EACvBsX,GAAGwH,OAAOiwD,EAAM/uE,MAAQ,GACxB,CACT,CACAgF,EAAS4pE,EAAOlnD,GAAM,GAAM9c,OAAO6U,GACnCza,EAAU4pE,EAAOlnD,EAAM,GAAK,GAAM9c,QAAQ6N,EAAM,GAAKo2D,GACrD3qE,EAAU0qE,EAAOlnD,EAAM,IAAM,GAAM,IACnC1jB,EAAO4qE,EAAOlnD,EAAM,IAAOhd,EAC3B+rB,GAAar3B,EAAMwvE,EAAOlnD,EAAM,GAAI,KACpCA,GAAOmnD,CACT,CAEA,OADAv3D,GAAG6G,OAAOjD,EAAQzC,EAAMo2D,EAAa,GAC9BnnD,CACT,CAAE,MAAOvhB,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EA+oNAsjD,gBA5oNA,SAA0B9gD,EAAIH,EAAIsI,GAClCX,GAASW,QAAUA,EACnB,IAEI,IAAInb,EAASwa,GAASK,gBAAgB7H,GACtC,OAAQH,GACN,KAAK,MAoBL,KAAK,MACL,KAAK,MACL,KAAK,MAiDL,KAAK,MAOL,KAAK,MACH,OAAK7S,EAAOC,IACL,GADkB,GA3E3B,KAAK,MACH,IAAKD,EAAOC,IAAK,OAAQ,GACzB,GAAID,EAAOC,IAAIN,IAAI0B,aAAc,CAC/B,IAAI0yD,EAAU/zD,EAAOC,IAAIN,IAAI0B,aAAarB,GACtCg0D,EAAO14C,KACXhyB,EAAS0qE,GAAO,GAAMD,EAAQzyD,SAAW,EACzChY,EAAU0qE,EAAO,GAAK,GAAMD,EAAQxyD,SAAW,EAC/CjY,EAAU0qE,EAAO,GAAK,GAAMD,EAAQvyD,SAAW,EAC/ClY,EAAU0qE,EAAO,IAAM,GAAMD,EAAQtyD,SAAW,EAChD,IAAK,IAAI9d,EAAI,EAAGA,EAAI,GAAIA,IACtBmF,EAAOkrE,EAAOrwE,EAAI,IAAOowE,EAAQryD,KAAK/d,IAAM,EAE9C,OAAO,CACT,CACA,OAAO,EAQT,KAAK,MACL,KAAK,MACL,KAAK,MACH,IAAKqc,EAAOC,IAAK,OAAQ,GACzB,GAAID,EAAOC,IAAIN,IAAIgC,aAAc,CAC3BqyD,EAAO14C,KAAX,IACIha,EAAUhY,EAAS0qE,GAAO,GAC1BzyD,EAAUjY,EAAU0qE,EAAO,GAAK,GAChCxyD,EAAUlY,EAAU0qE,EAAO,GAAK,GAChCvyD,EAAUnY,EAAU0qE,EAAO,IAAM,GACjCtyD,EAAO,GACX,IAAS/d,EAAI,EAAGA,EAAI,GAAIA,IACtB+d,EAAK1P,KAAKlJ,EAAOkrE,EAAOrwE,EAAI,KAE9B,OAAOqc,EAAOC,IAAIN,IAAIgC,aAAa3B,EAAOC,IAAK4S,EAAI,CAAEvR,UAASC,UAASC,UAASC,UAASC,QAC3F,CACA,OAAO,EAET,KAAK,MACH,OAAK1B,EAAOC,KACR+zD,EAAO14C,KACXhyB,EAAS0qE,GAAO,GAAM,EACf,IAHkB,GAK3B,KAAK,MACH,OAAKh0D,EAAOC,KACJ,IADiB,GAG3B,KAAK,MACL,KAAK,MAEH,OADI+zD,EAAO14C,KACJlf,GAAGsb,MAAM1X,EAAQ6S,EAAImhD,GAE9B,KAAK,MAGH,IAAKh0D,EAAOC,IAAK,OAAQ,GACzB,GAAID,EAAOC,IAAIN,IAAIiC,iBAAkB,CACnC,IAAIqyD,EAAUj0D,EAAOC,IAAIN,IAAIiC,iBAAiB5B,EAAOC,KACjD+zD,EAAO14C,KACXtyB,EAASgrE,GAAO,GAAMC,EAAQ,GAC9BjrE,EAAUgrE,EAAO,GAAK,GAAMC,EAAQ,EACtC,CACA,OAAO,EAaT,QAAS,OAAQ,GAErB,CAAE,MAAOhpE,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EAgjNA0jD,kBA9iNA,SAA4B5oE,EAAMusB,GAClC,IAGI,OADAvsB,EAAOkvB,GAASY,OAAO9vB,GAChBkvB,GAASM,UAAUjD,EAAKzb,GAAGia,MAAM/qB,GAC1C,CAAE,MAAOL,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EAuiNA2jD,kBAriNA,SAA4Bx5C,EAAOrvB,EAAMxG,GACzC,IAKI,OAHAwG,EAAOkvB,GAASY,OAAO9vB,GACvBA,EAAOkvB,GAASE,YAAYC,EAAOrvB,GACnC8Q,GAAGuM,MAAMrd,EAAMxG,EAAM,GACd,CACT,CAAE,MAAOmG,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EA4hNA4jD,qBA1hNA,SAA+Bz5C,EAAOrvB,EAAMusB,EAAK9R,GACjD,IAEIza,EAAOkvB,GAASY,OAAO9vB,GACvB,IAAI+oE,EAAmB,IAARtuD,EACX6U,EAAqB,KAAR7U,EAGjB,OAFAA,IAAiB,KACjBza,EAAOkvB,GAASE,YAAYC,EAAOrvB,EAAMsvB,GAClCJ,GAASM,UAAUjD,EAAKw8C,EAAWj4D,GAAGia,MAAM/qB,GAAQ8Q,GAAG0N,KAAKxe,GACrE,CAAE,MAAOL,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EA+gNA8jD,iBA5gNA,SAA2B35C,EAAOrvB,EAAMya,EAAOoV,GAC/CX,GAASW,QAAUA,EACnB,IAEI7vB,EAAOkvB,GAASY,OAAO9vB,GACvBA,EAAOkvB,GAASE,YAAYC,EAAOrvB,GACnC,IAAIxG,EAAOq2B,EAAUE,KAAsB,EAC3C,OAAOjf,GAAG1H,KAAKpJ,EAAMya,EAAOjhB,GAAMkuB,EACpC,CAAE,MAAO/nB,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EAkgNA+jD,qBA9/MA,SAA+B55C,EAAOrvB,EAAMusB,EAAK28C,GACjD,IAII,GAFAlpE,EAAOkvB,GAASY,OAAO9vB,GACvBA,EAAOkvB,GAASE,YAAYC,EAAOrvB,GAC/BkpE,GAAW,EAAG,OAAQ,GAC1B,IAAIh8C,EAAMpc,GAAGiH,SAAS/X,GAElBkT,EAAM9H,KAAKsG,IAAIw3D,EAASj2D,GAAgBia,IACxCi8C,EAAU3rE,EAAM+uB,EAAIrZ,GAKxB,OAJA+c,GAAa/C,EAAKX,EAAK28C,EAAQ,GAG/B1rE,EAAM+uB,EAAIrZ,GAAOi2D,EACVj2D,CACT,CAAE,MAAOvT,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EA6+MAkkD,mBA3+MA,SAA6BC,EAAUjvD,EAASkvD,EAAUh/C,GAC1D,IAOI,OALAlQ,EAAU8U,GAASY,OAAO1V,GAC1BkQ,EAAU4E,GAASY,OAAOxF,GAC1BlQ,EAAU8U,GAASE,YAAYi6C,EAAUjvD,GACzCkQ,EAAU4E,GAASE,YAAYk6C,EAAUh/C,GACzCxZ,GAAGwG,OAAO8C,EAASkQ,GACZ,CACT,CAAE,MAAO3qB,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EAg+MAqkD,gBA99MA,SAA0BvpE,GAC1B,IAII,OAFAA,EAAOkvB,GAASY,OAAO9vB,GACvB8Q,GAAG0G,MAAMxX,GACF,CACT,CAAE,MAAOL,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EAs9MAskD,iBAp9MA,SAA2BxpE,EAAMusB,GACjC,IAGI,OADAvsB,EAAOkvB,GAASY,OAAO9vB,GAChBkvB,GAASM,UAAUjD,EAAKzb,GAAG0N,KAAKxe,GACzC,CAAE,MAAOL,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EA68MAukD,mBA38MA,SAA6Bp6C,EAAOrvB,EAAMya,GAC1C,IAII,GAFAza,EAAOkvB,GAASY,OAAO9vB,GACvBA,EAAOkvB,GAASE,YAAYC,EAAOrvB,GAC9Bya,EAEE,IAAc,MAAVA,EAGT,OAAQ,GAFR3J,GAAG0G,MAAMxX,EAGX,MALE8Q,GAAGyG,OAAOvX,GAMZ,OAAO,CACT,CAAE,MAAOL,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAQA,EAAEulB,KACZ,CACA,EA47MAwkD,UA17MiB,WAAH,OACVvsE,EAAM,GAAI,EA27MdwsE,mBAz7M0B,SAACC,GAIvB,OAAKA,GACG,GADa,CAEvB,EAq7MFC,0BAn7MiC,WAC7B,MAAMC,GACR,EAm7MFC,WA76MA,SAAqBC,EAAMC,GACzBD,EAAO75C,GAAmB65C,GAGxB,IAAIv5C,EAAO,IAAIpb,KAAY,IAAP20D,GACpBhsE,EAASisE,GAAQ,GAAMx5C,EAAKy5C,gBAC5BlsE,EAAUisE,EAAQ,GAAK,GAAMx5C,EAAK05C,gBAClCnsE,EAAUisE,EAAQ,GAAK,GAAMx5C,EAAK25C,cAClCpsE,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAK45C,aACnCrsE,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAK65C,cACnCtsE,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAK85C,iBAAiB,KACpDvsE,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAK+5C,YACnC,IAAIl5D,EAAQ+D,KAAKo1D,IAAIh6C,EAAK85C,iBAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,GACvDG,GAASj6C,EAAKzQ,UAAY1O,GAAK,MAA2B,EAC9DtT,EAAUisE,EAAQ,IAAM,GAAMS,CAElC,EA+5MAC,cAh5MA,SAAwBX,EAAMC,GAC5BD,EAAO75C,GAAmB65C,GAGxB,IAAIv5C,EAAO,IAAIpb,KAAU,IAAL20D,GACpBhsE,EAASisE,GAAQ,GAAMx5C,EAAKm6C,aAC5B5sE,EAAUisE,EAAQ,GAAK,GAAMx5C,EAAKo6C,aAClC7sE,EAAUisE,EAAQ,GAAK,GAAMx5C,EAAKq6C,WAClC9sE,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAKI,UACnC7yB,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAKG,WACnC5yB,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAKE,cAAc,KACjD3yB,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAKs6C,SAEnC,IAAIL,EAA0B,EAAnBl6C,GAAaC,GACxBzyB,EAAUisE,EAAQ,IAAM,GAAMS,EAC9B1sE,EAAUisE,EAAQ,IAAM,IAAmC,GAA3Bx5C,EAAKu6C,oBAGrC,IAAI15D,EAAQ,IAAI+D,KAAKob,EAAKE,cAAe,EAAG,GACxCs6C,EAAe,IAAI51D,KAAKob,EAAKE,cAAe,EAAG,GAAGq6C,oBAClDE,EAAe55D,EAAM05D,oBACrBnrD,EAAyG,GAAlGorD,GAAgBC,GAAgBz6C,EAAKu6C,qBAAuB5/D,KAAKsG,IAAIw5D,EAAcD,IAC9FjtE,EAAUisE,EAAQ,IAAM,GAAMpqD,CAElC,EA03MAsrD,WAv3MkB,SAASlB,GAE3B,IAAI/8C,EAAO,WACP,IAAIuD,EAAO,IAAIpb,KAAKrX,EAAUisE,EAAQ,IAAM,GAAM,KAC9BjsE,EAAUisE,EAAQ,IAAM,GACxBjsE,EAAUisE,EAAQ,IAAM,GACxBjsE,EAAUisE,EAAQ,GAAK,GACvBjsE,EAAUisE,EAAQ,GAAK,GACvBjsE,EAASisE,GAAQ,GACjB,GAKhBpqD,EAAM7hB,EAAUisE,EAAQ,IAAM,GAC9BmB,EAAgB36C,EAAKu6C,oBACrB15D,EAAQ,IAAI+D,KAAKob,EAAKE,cAAe,EAAG,GACxCs6C,EAAe,IAAI51D,KAAKob,EAAKE,cAAe,EAAG,GAAGq6C,oBAClDE,EAAe55D,EAAM05D,oBACrBK,EAAYjgE,KAAKsG,IAAIw5D,EAAcD,GACvC,GAAIprD,EAAM,EAER7hB,EAAUisE,EAAQ,IAAM,GAAM9jE,OAAO8kE,GAAgBC,GAAgBG,GAAaD,QAC7E,GAAKvrD,EAAM,IAAOwrD,GAAaD,GAAgB,CACpD,IAAIE,EAAelgE,KAAKwN,IAAIsyD,EAAcD,GACtCM,EAAa1rD,EAAM,EAAIwrD,EAAYC,EAEvC76C,EAAK+6C,QAAQ/6C,EAAKzQ,UAAyC,KAA5BurD,EAAaH,GAC9C,CAEAptE,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAKs6C,SACnC,IAAIL,EAA0B,EAAnBl6C,GAAaC,GACxBzyB,EAAUisE,EAAQ,IAAM,GAAMS,EAE9B1sE,EAASisE,GAAQ,GAAMx5C,EAAKm6C,aAC5B5sE,EAAUisE,EAAQ,GAAK,GAAMx5C,EAAKo6C,aAClC7sE,EAAUisE,EAAQ,GAAK,GAAMx5C,EAAKq6C,WAClC9sE,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAKI,UACnC7yB,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAKG,WACnC5yB,EAAUisE,EAAQ,IAAM,GAAMx5C,EAAKg7C,UAEnC,IAAIC,EAASj7C,EAAKzQ,UAClB,OAAI2rD,MAAMD,IACA,EAGHA,EAAS,GACjB,CA7CQ,GA8CX,OAAOtnE,OAAO8oB,EACd,EAw0MA0+C,UAt0MiB,SAACC,EAAUC,EAAUC,EAAUC,GAE5C,IAAIC,GAAc,IAAI52D,MAAOsb,cACzBu7C,EAAS,IAAI72D,KAAK42D,EAAa,EAAG,GAClCE,EAAS,IAAI92D,KAAK42D,EAAa,EAAG,GAClCf,EAAegB,EAAOlB,oBACtBC,EAAekB,EAAOnB,oBAQtBoB,EAAoBhhE,KAAKwN,IAAIsyD,EAAcD,GAO/C/sE,EAAU2tE,GAAW,GAA0B,GAApBO,EAE3BpuE,EAAS8tE,GAAW,GAAM3lE,OAAO+kE,GAAgBD,GAEjD,IAAIoB,EAAc,SAACC,GAGjB,IAAIC,EAAOD,GAAkB,EAAI,IAAM,IAEnCE,EAAYphE,KAAKqhE,IAAIH,GACrBI,EAAQ75D,OAAOzH,KAAK4Y,MAAMwoD,EAAY,KAAKG,SAAS,EAAG,KACvDC,EAAU/5D,OAAO25D,EAAY,IAAIG,SAAS,EAAG,KAEjD,MAAM,MAANvrE,OAAamrE,GAAInrE,OAAGsrE,GAAKtrE,OAAGwrE,EAC9B,EAEIC,EAAaR,EAAYnB,GACzB4B,EAAaT,EAAYpB,GACzBA,EAAeC,GAEjBj7C,GAAa48C,EAAYd,EAAU,IACnC97C,GAAa68C,EAAYd,EAAU,MAEnC/7C,GAAa48C,EAAYb,EAAU,IACnC/7C,GAAa68C,EAAYf,EAAU,IAEvC,EAyxMFgB,eA/wMA,SAAyBC,EAAQC,EAAmBC,GAIhD,GAHFD,EAAoB98C,GAAmB88C,MAHnBE,EAMEH,IANuB,GAAKG,GAAY,GAO1D,OAAO,GAPQ,IAACA,EASd73D,EAGFA,EADa,IAAX03D,EACIh8C,KAEAF,KAKR,IAAIs8C,EAAOhiE,KAAKguB,MAAY,IAAN9jB,EAAa,KAEnC,OADA9W,EAAS0uE,GAAQ,GAAM9oE,OAAOgpE,GACvB,CAEX,EA4vMAC,WA7oLkB,SAACC,GACf,OAAW,OAAPA,GACF7zC,GAAIS,aAAa,OACV,IAGTT,GAAIS,aAAa,OACV,EACT,EAuoLFqzC,gBAroLuB,SAACnzC,EAASozC,EAAaC,EAASlzC,EAAaC,GAAU,OAC1Ef,GAAIU,aAAaC,EAASozC,EAAaC,EAASlzC,EAAaC,EAAY,EAsoL7EkzC,iBAh5KwB,SAACtzC,EAASE,EAAQqzC,EAAKC,GAC3C,GAAe,MAAXxzC,EAEF,OADAX,GAAIS,aAAa,OACV,EAMT,IADA,IAAI2zC,EAAqB,IAChB,CACP,IAAIpzC,EAAQz8B,EAAS4vE,GAAiB,GACtC,GAAa,OAATnzC,EAEG,IAAa,OAATA,EACT,MAIA,OADAhB,GAAIS,aAAa,OACV,CACT,CAPE2zC,EAAqB7vE,EAAU4vE,EAAiB,GAAK,GAQvDA,GAAkB,CACpB,CACA,OAAIC,EAAqB,GAAKA,EAAqB,GACjDp0C,GAAIS,aAAa,OACV,IAGTT,GAAIlF,kBAAkBG,aAAem5C,EAAqB,EAC1Dp0C,GAAIlF,kBAAkBu5C,aAAe,EAErCr0C,GAAI0D,QAAUvI,GAAGV,cAAcxY,GAAQ2W,YAAaoH,GAAIlF,mBAErC,GAAfkF,GAAI0D,SACN1D,GAAIS,aAAa,OAGjBtF,GAAGC,mBAAmB4E,GAAI0D,SAC1BzhB,GAAQoW,UAAW,EACnBpW,GAAQuW,8BAA8BrW,SAAQ,SAACxc,GAAQ,OAAKA,GAAU,IAGtEw1B,GAAGC,mBAAmB,MACf,QAEP4E,GAAIS,aAAa,OACV,GAEX,EAm2KF6zC,uBAj2K8B,SAAC3zC,EAASE,GACpC,OAAe,MAAXF,GACFX,GAAIS,aAAa,OACV,GAEK,OAAVI,GACFb,GAAIS,aAAa,OACV,IAMTT,GAAIS,aAAa,OACV,MACT,EAo1KF8zC,kBAj1KyB,SAAC5zC,EAAS+C,GAC/B,OAAe,MAAX/C,GACFX,GAAIS,aAAa,OACV,GAEM,OAAXiD,GACF1D,GAAIS,aAAa,OACV,IAGTtF,GAAG8I,cAAcjE,GAAI0D,SACrB1D,GAAIS,aAAa,OACbT,GAAIG,gBAAkBuD,IACxB1D,GAAIG,eAAiB,GAEhB,EACT,EAm0KFq0C,kBAj0KyB,SAAC7zC,EAAS8zC,GAC/B,OAAe,MAAX9zC,GACFX,GAAIS,aAAa,OACV,GAEM,OAAXg0C,GACFz0C,GAAIS,aAAa,OACV,IAELT,GAAII,oBAAsBq0C,IAC5Bz0C,GAAII,mBAAqB,GAEvBJ,GAAIK,oBAAsBo0C,IAC5Bz0C,GAAIK,mBAAqB,GAE3BL,GAAIS,aAAa,OACV,EACT,EAkzKFi0C,mBAhzK0B,SAAC/zC,EAASE,EAAQ3F,EAAWr7B,GACnD,GAAe,MAAX8gC,EAEF,OADAX,GAAIS,aAAa,OACV,EAET,GAAc,OAAVI,EAEF,OADAb,GAAIS,aAAa,OACV,EAET,IAAK5gC,EAEH,OADAmgC,GAAIS,aAAa,OACV,EAGT,OADAT,GAAIS,aAAa,OACTvF,GACR,KAAK,MAEH,OADA32B,EAAS1E,GAAQ,GAAMmgC,GAAIlF,kBAAkBE,MAAQ,GAAK,GACnD,EACT,KAAK,MAEH,OADAz2B,EAAS1E,GAAQ,GAAMmgC,GAAIlF,kBAAkBE,MAAQ,EAAI,EAClD,EACT,KAAK,MAGL,KAAK,MAGL,KAAK,MAEH,OADAz2B,EAAS1E,GAAQ,GAAM,EAChB,EACT,KAAK,MAEH,OADA0E,EAAS1E,GAAQ,GAAMmgC,GAAIlF,kBAAkBwF,MAAQ,GAAK,EACnD,EACT,KAAK,MAEH,OADA/7B,EAAS1E,GAAQ,GAAMmgC,GAAIlF,kBAAkByF,QAAU,EAAI,EACpD,EACT,KAAK,MAyBL,KAAK,MAYL,KAAK,MAGH,OADAh8B,EAAS1E,GAAQ,GAAM,MAChB,EApCT,KAAK,MAEH,OADA0E,EAAS1E,GAAQ,GAAM,MAChB,EACT,KAAK,MAYL,KAAK,MAGL,KAAK,MAyBL,KAAK,MACL,KAAK,MAGL,KAAK,MAML,KAAK,MACL,KAAK,MAWL,KAAK,MAGH,OADA0E,EAAS1E,GAAQ,GAAM,EAChB,EA9DT,KAAK,MAML,KAAK,MAEH,OADA0E,EAAS1E,GAAQ,GAAM,KAChB,EALT,KAAK,MAEH,OADA0E,EAAS1E,GAAQ,GAAM,SAChB,EAaT,KAAK,MAEH,OADA0E,EAAS1E,GAAQ,GAAMmgC,GAAIlF,kBAAkBC,UAAY,EAAI,EACtD,EACT,KAAK,MAEH,OADAx2B,EAAS1E,GAAQ,GAAMmgC,GAAIlF,kBAAkBC,UAAY,EAAI,EACtD,EACT,KAAK,MA+BL,KAAK,MAGH,OADAx2B,EAAS1E,GAAQ,GAAM,EAChB,EA3BT,KAAK,MACL,KAAK,MACL,KAAK,MAGH,OADA0E,EAAS1E,GAAQ,IAAO,EACjB,EAQT,KAAK,MAEH,OADA0E,EAAS1E,GAAQ,GAAM,EAChB,EAKT,KAAK,MAGH,OADA0E,EAAS1E,GAAQ,GAAM,MAChB,EAST,QAEE,OADAmgC,GAAIS,aAAa,OACV,EAEX,EAisKFk0C,cA/rKqB,SAACC,GAKlB,OAJA50C,GAAIS,aAAa,OAIQ,GAArBm0C,GAAyE,GAArBA,EAC/C,EAEF,IACT,EAwrKFC,YAtrKmB,WAAH,OAAS70C,GAAIC,SAAU,EAwrKvC60C,cAtrKqB,SAACn0C,EAAS1F,EAAco5C,GACzC,OAAe,MAAX1zC,GACFX,GAAIS,aAAa,OACV,IAELxF,IACF12B,EAAS02B,GAAe,GAAM,GAE5Bo5C,IACF9vE,EAAS8vE,GAAe,GAAM,GAEhCr0C,GAAIE,2BAA4B,EAChCF,GAAIS,aAAa,OACV,EACT,EA0qKFs0C,eAvqKsB,SAACp0C,EAASq0C,EAAM1oE,EAAMo3B,GACxC,OAAe,MAAX/C,GACFX,GAAIS,aAAa,OACV,GAGM,GAAXiD,GAA2B,OAAXA,GAClB1D,GAAIS,aAAa,OACV,GAEI,GAARn0B,GAAqB,OAARA,GAA2B,GAAR0oE,GAAqB,OAARA,GAChDh1C,GAAIS,aAAa,OACV,IAGTtF,GAAGC,mBAAmBsI,EAAU1D,GAAI0D,QAAU,MAE9C1D,GAAIG,eAAiBuD,EACrB1D,GAAIK,mBAAqB20C,EACzBh1C,GAAII,mBAAqB9zB,EACzB0zB,GAAIS,aAAa,OACV,EACT,EAmpKFw0C,eAxoKsB,SAACt0C,EAASxhC,GAC5B,GAAe,MAAXwhC,EAEF,OADAX,GAAIS,aAAa,OACV,EAIT,GADAT,GAAIS,aAAa,OACbT,GAAIQ,YAAYrhC,GAAO,OAAO6gC,GAAIQ,YAAYrhC,GAClD,IAAIs0B,EACJ,OAAQt0B,GACN,KAAK,MAAyBs0B,EAAM0R,GAAgB,cAAe,MACnE,KAAK,MAA0B1R,EAAM0R,GAAgB,sBAAuB,MAC5E,KAAK,MAA8B1R,EAAM0R,GAAgB,IAAK,MAC9D,KAAK,MAA8B1R,EAAM0R,GAAgB,aAAc,MACvE,QAEE,OADAnF,GAAIS,aAAa,OACV,EAGX,OADAT,GAAIQ,YAAYrhC,GAAQs0B,EACjBA,CACT,EAsnKFyhD,eAnnKsB,WAElB,GAAKl1C,GAAIE,0BAEF,GAAK1sB,EAEL,KAAIA,EAAM2hE,gBAQf,OADAn1C,GAAIS,aAAa,OACV,EAPPT,GAAIS,aAAa,MAQnB,MAVET,GAAIS,aAAa,YAFjBT,GAAIS,aAAa,OAanB,OAAO,CACT,EAomKF20C,gBAv3JuB,SAACz0C,EAAS00C,GAC7B,OAAe,MAAX10C,GACFX,GAAIS,aAAa,OACV,IAEO,GAAZ40C,EAAe1uC,GAAiC,EAAG,GAClDA,GAAiC,EAAG0uC,GAEzCr1C,GAAIS,aAAa,OACV,EACT,EA+2JF60C,aA72JoB,SAAC30C,GACjB,OAAe,MAAXA,GACFX,GAAIS,aAAa,OACV,IAETT,GAAIG,eAAiB,EACrBH,GAAII,mBAAqB,EACzBJ,GAAIK,mBAAqB,EACzBL,GAAIE,2BAA4B,EAChCF,GAAIS,aAAa,OACV,EACT,EAo2JF80C,UAAW/sC,GAEXgtC,cA51JqB,WAEjB,OADAx1C,GAAIS,aAAa,OACV,CACT,EA21JFg1C,yBA7zJgC,SAAC79C,EAAM+Q,EAAQI,GAC3C,OALmB,SAACnR,EAAM+Q,EAAQI,GAClC,IAAIn0B,EAAO8zB,GAAcC,EAAQI,GACjC,OAAOC,GAAWpR,GAAK1wB,MAAhB8hC,GAAUl0B,EAAUF,GAC7B,CAES8gE,CAAiB99C,EAAM+Q,EAAQI,EACxC,EA6zJF4sC,6CAvzJoD,SAAC7sC,EAAWH,EAAQI,GAAM,OAAKF,GAAmBC,EAAWH,EAAQI,EAAW,EAyzJpI6sC,6CAvzJoD,SAAC9sC,EAAWH,EAAQI,GAAM,OAAKF,GAAmBC,EAAWH,EAAQI,EAAW,EAyzJpI8sC,oBAAqBt+C,GAErBu+C,iCAr5IwC,SAAC/lE,EAAQgmE,GAE7C,KADAhmE,EAASk8B,GAAgBl8B,IACZ,OAAQ,EAErB,IAAIo+B,EAAW,CACXZ,UAAWhpC,EAASwxE,GAAqB,GACzC1oC,0BAA2B9oC,EAAUwxE,EAAqB,GAAK,GAC/DhlC,cAAexsC,EAAUwxE,EAAqB,GAAK,GACnD/nC,sBAAuBzpC,EAAUwxE,EAAqB,IAAM,GAC5D9nC,8BAA+B1pC,EAAUwxE,EAAqB,IAAM,GACpEhmE,SACAwgC,gBAAgB,GAGhBjC,EAAkBJ,GAAmCn+B,EAAQo+B,GAEjExsC,SAASmuC,gBAAgBjQ,MAAMkQ,SAAW,SAC1CpuC,SAASE,KAAKouC,OAAS,KACvBtuC,SAASE,KAAKg+B,MAAM+P,OAAS,MAE7B,IAAIomC,EA3T+B,SAACC,GAIpC,IAHA,IAAInH,EAAQmH,EACR54D,EAASyxD,EAAM/yC,WACfi6C,EAAiB,GACdlH,GAASntE,SAASE,MAAM,CAC7B,IAC8Bq0E,EADCC,EAAAzlD,EAAhBrT,EAAOta,UACQ,IAA9B,IAAAozE,EAAAx1E,MAAAu1E,EAAAC,EAAA91E,KAAAyM,MAAgC,CAAC,IAAxBspE,EAASF,EAAAr2E,MACZu2E,GAAatH,IACfkH,EAAe/oE,KAAK,CAAEkO,KAAMi7D,EAAWC,aAAcD,EAAUv2C,MAAMc,UACrEy1C,EAAUv2C,MAAMc,QAAU,OAE9B,CAAC,OAAA36B,GAAAmwE,EAAAjwE,EAAAF,EAAA,SAAAmwE,EAAAxlD,GAAA,CACDm+C,EAAQzxD,EACRA,EAASA,EAAO0e,UAClB,CACA,OAAOi6C,CACT,CA2SuBM,CAAiCvmE,GAoBtD,OATAu7B,GATA,WACEgD,IA1SsB,SAAC0nC,GAAoB,IACdO,EADaC,EAAA9lD,EAC3BslD,GAAc,IAA/B,IAAAQ,EAAA71E,MAAA41E,EAAAC,EAAAn2E,KAAAyM,MAAiC,CAAC,IAAzB2pE,EAAIF,EAAA12E,MACX42E,EAAKt7D,KAAK0kB,MAAMc,QAAU81C,EAAKJ,YACjC,CAAC,OAAArwE,GAAAwwE,EAAAtwE,EAAAF,EAAA,SAAAwwE,EAAA7lD,GAAA,CACH,CAuSI+lD,CAAsBV,GACtBrrC,oBAAoB,SAAUqC,IAC1BmB,EAASH,uBACM1kC,GAAa6kC,EAASH,sBAAoC,GAAI,EAAGG,EAASF,+BAE7F1C,GAA4B,CAC9B,EAEAA,GAA4B4C,EAC5BpU,iBAAiB,SAAUiT,IAGvBmB,EAASH,uBACM1kC,GAAa6kC,EAASH,sBAAoC,GAAI,EAAGG,EAASF,+BAGtF,CACT,EA82IF0oC,eA52IsB,SAAC39D,GAAG,OAAKhT,EAAIwvB,GAAaxc,GAAM,EA82ItD49D,2BAn1IkC,WAC9B,IAAKzyC,GAASiH,oBAAqB,OAAQ,EAE3CjH,GAAS6F,oBAAoBmH,IAE7B,IAAIjyC,EAAI8sC,GAAmB,GAC3B,GAAI9sC,EAAE88B,eACJ98B,EAAEqvC,mBAAqBrvC,EAAE88B,qBACpB,KAAI98B,EAAE23E,qBAGX,OAAQ,EAFR33E,EAAEsvC,yBAA2BtvC,EAAE23E,sBAGjC,CAEA,OAAO,CACT,EAs0IFC,4BAtzImC,WAG/B,OADA3yC,GAAS6F,oBAAoBxP,IACxB74B,SAASo1E,iBACdp1E,SAASo1E,kBACF,IAFgC,CAGzC,EAkzIFC,gCAhzIuC,WAAO,IAADC,EAIzC,OAHuB,QAAvBA,EAAA3rC,UAAuB,IAAA2rC,GAAvBA,IACA3rC,GAA0B,KAEnB,CACT,EA6yIF4rC,kCA3yIyC,WACrC,OAAO/pC,gBACT,EA2yIFgqC,gCAxyIuC,SAACpnE,EAAQwpB,EAAOC,GAEnD,KADAzpB,EAASk8B,GAAgBl8B,IACZ,OAAQ,EAErB,IAAI4tB,EAAOC,GAAsB7tB,GAIjC,OAHAlL,EAAU00B,GAAQ,GAAMoE,EAAKpE,MAC7B10B,EAAU20B,GAAS,GAAMmE,EAAKnE,OAEvB,CACT,EAiyIF49C,8BAlwIqC,SAACnyD,EAAOoyD,GAEzC,OAAIpyD,EAAQ,GAAKA,GAASkf,GAASg8B,iBAAiB/+D,QAAgB,EAM/D+iC,GAASg8B,iBAAiBl7C,IAE/BqsB,GAAqB+lC,EAAclzC,GAASg8B,iBAAiBl7C,IACtD,IAHwC,CAIjD,EAwvIFqyD,mBAAoBjgD,GAEpBkgD,4BAvvImC,WAG/B,OAAOpzC,GAASg8B,iBAAiB/+D,MACnC,EAqvIFo2E,2BAnvIkC,SAACj+C,EAAOC,GACtCj1B,EAASg1B,GAAQ,GAAM8F,OAAO9F,MAC9Bh1B,EAASi1B,GAAS,GAAM6F,OAAO7F,MACjC,EAkvIFi+C,2BAA4BzlC,GAE5B0lC,0BAA2BtlC,GAE3BulC,wBAAyBtlC,GAEzBulC,2BAA4BrlC,GAE5BslC,oCAAqCrlC,GAErCslC,gCAAiCplC,GAEjCqlC,wBAAyB/kC,GAEzBglC,4BAA6B7kC,GAE7B8kC,6BAA8B7kC,GAE9B8kC,6BAA8BxkC,GAE9BykC,8BAA+BrkC,GAE/BskC,yBAA0BjkC,GAE1BkkC,yBAA0B9jC,GAE1B+jC,mCAAoC9jC,GAEpC+jC,6BAA8B1jC,GAE9B2jC,gCAAiCzjC,GAEjC0jC,wBAAyBpjC,GAEzBqjC,2BAA4BpjC,GAE5BqjC,mCAAoCjjC,GAEpCkjC,uBAAwBjjC,GAExBkjC,+BAAgC9iC,GAEhC+iC,6BAA8BtiC,GAE9BuiC,wBAAyBniC,GAEzBoiC,2BAA4BjiC,GAE5BkiC,oCAAqCjiC,GAErCkiC,mBAAoBhiC,GAEpBiiC,2BAA4B7hC,GAE5B8hC,2BAA4B1hC,GAE5B2hC,2BAA4BxhC,GAE5ByhC,4BAA6BxhC,GAE7ByhC,wBAAyBvhC,GAEzBwhC,yBAA0BthC,GAE1BuhC,0BAA2BrhC,GAE3BshC,4BAA6BphC,GAE7BqhC,4BAA6BlhC,GAE7BmhC,uBAAwB5gC,GAExB6gC,2BAA4B1gC,GAE5B2gC,kCAAmCpgC,GAEnCqgC,kCAAmClgC,GAEnCmgC,qCAAsClgC,GAEtCmgC,qCAAsC9/B,GAEtC+/B,+BAAgC5/B,GAEhC6/B,4BAA6B3/B,GAE7B4/B,+BAAgC1/B,GAEhC2/B,+BAAgCz/B,GAEhC0/B,2BAA4Bl/B,GAE5Bm/B,0BAA2B/+B,GAE3Bg/B,sBAAuB7+B,GAEvB8+B,2BAA4B3+B,GAE5B4+B,gCAAiCz+B,GAEjC0+B,2BAA4Bv+B,GAE5Bw+B,2BAA4Bv+B,GAE5Bw+B,8BAA+Bp+B,GAE/Bq+B,iCAAkCl+B,GAElCm+B,4BAA6Bh+B,GAE7Bi+B,0BAA2B99B,GAE3B+9B,wBAAyB99B,GAEzB+9B,4BAA6B39B,GAE7B49B,sCAAuC39B,GAEvC49B,gCAAiCv9B,GAEjCw9B,mCAAoCt9B,GAEpCu9B,uBAAwBp9B,GAExBq9B,uBAAwBl9B,GAExBm9B,yBAA0Bl9B,GAE1Bm9B,0BAA2Bj9B,GAE3Bk9B,qBAAsB98B,GAEtB+8B,sCAAuC58B,GAEvC68B,wBAAyBz8B,GAEzB08B,iCAAkCt8B,GAElCu8B,sCAAuCr8B,GAEvCs8B,oCAAqCp8B,GAErCq8B,oCAAqCn8B,GAErCo8B,mCAAoCl8B,GAEpCm8B,yBAA0B77B,GAE1B87B,4BAA6B57B,GAE7B67B,8BAA+B37B,GAE/B47B,0BAA2Bx7B,GAE3By7B,mCAAoCt7B,GAEpCu7B,wCAAyCr7B,GAEzCs7B,sCAAuCp7B,GAEvCq7B,sCAAuCn7B,GAEvCo7B,qCAAsCl7B,GAEtCm7B,+BAAgCl7B,GAEhCm7B,oBAAqBh7B,GAErBi7B,qCAAsC96B,GAEtC+6B,sBAAuB96B,GAEvB+6B,yBAA0B76B,GAE1B86B,kCAAmC76B,GAEnC86B,uBAAwB56B,GAExB66B,oBAAqB36B,GAErB46B,mBAAoB36B,GAEpB46B,qCAAsC16B,GAEtC26B,kCAAmCv6B,GAEnCw6B,qCAAsCr6B,GAEtCs6B,uBAAwBj6B,GAExBk6B,wBAAyBh6B,GAEzBi6B,6BAA8Bh6B,GAE9Bi6B,wBAAyBh6B,GAEzBi6B,2BAA4Bh6B,GAE5Bi6B,8BAA+B/5B,GAE/Bg6B,yBAA0B95B,GAE1B+5B,yBAA0B75B,GAE1B85B,mCAAoC75B,GAEpC85B,6BAA8B35B,GAE9B45B,gCAAiC15B,GAEjC25B,4BAA6B15B,GAE7B25B,6BAA8Br5B,GAE9Bs5B,8BAA+Br5B,GAE/Bs5B,uCAAwCr5B,GAExCs5B,qCAAsCl5B,GAEtCm5B,iCAAkC/4B,GAElCg5B,gCAAiC54B,GAEjC64B,+BAAgCx4B,GAEhCy4B,yBAA0Bj4B,GAE1Bk4B,oCAAqCj4B,GAErCk4B,kCAAmCh4B,GAEnCi4B,sBAAuBh4B,GAEvBi4B,uBAAwB/3B,GAExBg4B,iCAAkC/3B,GAElCg4B,iDAAkD93B,GAElD+3B,6BAA8Bx3B,GAE9By3B,2BAA4Bx3B,GAE5By3B,2BAA4Bx3B,GAE5By3B,yBAA0Bv3B,GAE1Bw3B,iCAAkCv3B,GAElCw3B,8BAA+Br3B,GAE/Bs3B,+BAAgCj3B,GAEhCk3B,0BAA2B12B,GAE3B22B,mCAAoCx2B,GAEpCy2B,iCAAkCv2B,GAElCw2B,oCAAqCt2B,GAErCu2B,+BAAgCt2B,GAEhCu2B,kCAAmCr2B,GAEnCs2B,wBAAyBr2B,GAEzBs2B,2BAA4Bp2B,GAE5Bq2B,wCAAyCp2B,GAEzCq2B,mCAAoCn2B,GAEpCo2B,mCAAoCl2B,GAEpCm2B,8BAA+Bh2B,GAE/Bi2B,sCAAuCh2B,GAEvCi2B,6BAA8B11B,GAE9B21B,yBAA0Bv1B,GAE1Bw1B,uBAAwBv1B,GAExBw1B,wBAAyBl1B,GAEzBm1B,uBAAwBl1B,GAExBm1B,+BAAgCj1B,GAEhCk1B,+BAAgCh1B,GAEhCi1B,yCAA0Ch1B,GAE1Ci1B,kCAAmC/0B,GAEnCg1B,+BAAgC90B,GAEhC+0B,gCAAiC7zB,GAEjC8zB,0BAA2BxzB,GAE3ByzB,0BAA2BxzB,GAE3ByzB,2BAA4BxzB,GAE5ByzB,gCAAiCpzB,GAEjCqzB,iCAAkCnzB,GAElCozB,qCAAsCnzB,GAEtCozB,+BAAgCjzB,GAEhCkzB,+BAAgCjzB,GAEhCkzB,kBAAmBjzB,GAEnBkzB,mCAAoC3yB,GAEpC4yB,sCAAuC3yB,GAEvC4yB,sBAAuB1yB,GAEvB2yB,uBAAwBzyB,GAExB0yB,2BAA4BxyB,GAE5ByyB,uBAAwBtyB,GAExBuyB,qBAAsBryB,GAEtBsyB,wBAAyBpyB,GAEzBqyB,4BAA6BpyB,GAE7BqyB,uBAAwBlyB,GAExBmyB,sBAAuBjyB,GAEvBkyB,oBAAqBhyB,GAErBiyB,uBAAwB/xB,GAExBgyB,iCAAkC9xB,GAElC+xB,2BAA4B1xB,GAE5B2xB,8BAA+BzxB,GAE/B0xB,uBAAwBzxB,GAExB0xB,yBAA0BtxB,GAE1BuxB,oCAAqCtxB,GAErCuxB,yBAA0BnxB,GAE1BoxB,8BAA+BnxB,GAE/BoxB,2BAA4BhxB,GAE5BixB,mCAAoChxB,GAEpCixB,2BAA4B9wB,GAE5B+wB,+BAAgC9wB,GAEhC+wB,6BAA8B9wB,GAE9B+wB,wBAAyB5wB,GAEzB6wB,wBAAyBrwB,GAEzBswB,mCAAoCrwB,GAEpCswB,iCAAkCrwB,GAElCswB,4CAA6ClwB,GAE7CmwB,qCAAsClwB,GAEtCmwB,4BAA6BjwB,GAE7BkwB,+BAAgC7vB,GAEhC8vB,gCAAiC7vB,GAEjC8vB,+BAAgC3vB,GAEhC4vB,gCAAiC3vB,GAEjC4vB,qBAAsBzvB,GAEtB0vB,0BAA2BzvB,GAE3B0vB,0BAA2BvvB,GAE3BwvB,yBAA0BrvB,GAE1BsvB,iCAAkCnvB,GAElCovB,yBAA0BjvB,GAE1BkvB,iCAAkCjvB,GAElCkvB,uBAAwB9uB,GAExB+uB,+BAAgC5uB,GAEhC6uB,wBAAyBpuB,GAEzBquB,wBAAyBluB,GAEzBmuB,2BAA4BluB,GAE5BmuB,4BAA6BjuB,GAE7BkuB,2BAA4B/tB,GAE5BguB,4BAA6B/tB,GAE7BguB,0BAA2B7tB,GAE3B8tB,0BAA2B3tB,GAE3B4tB,2BAA4BztB,GAE5B0tB,2BAA4BvtB,GAE5BwtB,uCAAwCvtB,GAExCwtB,uBAAwBntB,GAExBotB,wBAAyB/sB,GAEzBgtB,uBAAwB7sB,GAExB8sB,wBAAyB3sB,GAEzB4sB,wBAAyB3sB,GAEzB4sB,yBAA0B1sB,GAE1B2sB,uBAAwBzsB,GAExB0sB,wBAAyBrsB,GAEzBssB,uBAAwBrsB,GAExBssB,wBAAyBlsB,GAEzBmsB,wBAAyBlsB,GAEzBmsB,yBAA0BjsB,GAE1BksB,uBAAwBhsB,GAExBisB,wBAAyB5rB,GAEzB6rB,uBAAwB5rB,GAExB6rB,wBAAyBzrB,GAEzB0rB,wBAAyBzrB,GAEzB0rB,yBAA0BxrB,GAE1ByrB,uBAAwBvrB,GAExBwrB,wBAAyBnrB,GAEzBorB,uBAAwBnrB,GAExBorB,wBAAyBhrB,GAEzBirB,wBAAyBhrB,GAEzBirB,yBAA0B/qB,GAE1BgrB,iCAAkC9qB,GAElC+qB,8BAA+B7qB,GAE/B8qB,gCAAiC3qB,GAEjC4qB,gCAAiC1qB,GAEjC2qB,8BAA+BzqB,GAE/B0qB,gCAAiCxqB,GAEjCyqB,gCAAiCvqB,GAEjCwqB,8BAA+BpqB,GAE/BqqB,gCAAiCpqB,GAEjCqqB,gCAAiCnqB,GAEjCoqB,wBAAyBhqB,GAEzBiqB,6BAA8BhqB,GAE9BiqB,4BAA6B/pB,GAE7BgqB,6BAA8B9pB,GAE9B+pB,4BAA6B7pB,GAE7B8pB,6BAA8B5pB,GAE9B6pB,4BAA6B5pB,GAE7B6pB,6BAA8B3pB,GAE9B4pB,4BAA6B3pB,GAE7B4pB,6BAA8B1pB,GAE9B2pB,iCAAkCvpB,GAElCwpB,sCAAuCvpB,GAEvCwpB,oCAAqCvpB,GAErCwpB,oCAAqCvpB,GAErCwpB,mCAAoCvpB,GAEpCwpB,6BAA8BvpB,GAE9BwpB,8BAA+BtpB,GAE/BupB,8BAA+BtpB,GAE/BupB,+BAAgCrpB,GAEhCspB,kCAAmClpB,GAEnCmpB,iCAAkC/oB,GAElCgpB,sBAAuB9oB,GAEvB+oB,sBAAuB9oB,GAEvB+oB,wBAlnE+B,WAAH,OAAS,CAAE,EAonEvCC,uCAzlE8C,SAAC74E,EAAQ84E,EAA0B9S,GAU7E,OAjCsB,SAAChmE,EAAQo+B,GAC/B,OAAKhK,GAASiH,qBACdr7B,EAASk8B,GAAgBl8B,IAGpBA,EAAOyrB,mBACNzrB,EAAOqhC,wBAORjN,GAAS8F,iCAQPkH,GAA2BphC,EAAQo+B,GAPpCA,EAAS06C,0BACX1kD,GAASoF,UAAU4H,GAA4B,EAAoC,CAACphC,EAAQo+B,IACrF,IAED,GAVA,GALW,GAFsB,CAqB7C,CAWS26C,CAAoB/4E,EATZ,CACbw9B,UAAWhpC,EAASwxE,GAAqB,GACzC1oC,0BAA2B9oC,EAAUwxE,EAAqB,GAAK,GAC/DhlC,cAAexsC,EAAUwxE,EAAqB,GAAK,GACnD8S,2BACA76C,sBAAuBzpC,EAAUwxE,EAAqB,IAAM,GAC5D9nC,8BAA+B1pC,EAAUwxE,EAAqB,IAAM,IAIxE,EAglEFgT,+BA5kEsC,SAACh5E,EAAQ84E,GAE3C,OADA94E,EAASk8B,GAAgBl8B,IAEpBA,EAAOyqB,mBAMP2J,GAAS8F,iCAQPzP,GAAmBzqB,GAPpB84E,GACF1kD,GAASoF,UAAU/O,GAAoB,EAAmC,CAACzqB,IACpE,IAED,GAVA,GAFW,CAgBvB,EA4jEFi5E,uBAliE8B,SAACC,GAC3B,IAlBeppE,EAAMqpE,EAkBjBC,EAAUhlF,EAAO/C,OAyBjBgoF,EAlDM,WAmDV,IAxBAH,KAAmB,GAwBCG,EAClB,OAAO,EAMT,IAAK,IAAIC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CAChD,IAAIC,EAAoBH,GAAW,EAAI,GAAME,GAE7CC,EAAoB33E,KAAKsG,IAAIqxE,EAAmBL,EAAgB,WAEhE,IAAI3pE,EAAU3N,KAAKsG,IAAImxE,GAxDVvpE,EAwDmClO,KAAKwN,IAAI8pE,EAAeK,GAxDrDJ,EAwDyE,MAvDvFv3E,KAAKC,KAAKiO,EAAOqpE,GAAaA,IA0DnC,GADkBppB,GAAWxgD,GAG3B,OAAO,CAEX,CACA,OAAO,CACT,EAo/DFiqE,+BAAgCtpB,GAEhCupB,+CA/8DsD,SAACnpB,EAAUr1B,EAAcy+C,GAC3E,MAA6B,oBAAlBC,gBAAuC,EAG7B,IAAjBD,GAA4B,EA5BI,SAAC15E,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GAC9F,IAcIK,EAAe,CACjBh7B,OAAQk8B,GAAgBl8B,GACxB26B,kBACAM,eACAC,YAlBiC,WAAgB,IAAf/kC,EAACiB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG0I,MAElC85E,EAAuCrgF,GAAa0hC,EAA2Bs1B,EAAa,EAAGD,GAKnG,GAHIspB,IACFA,EAAsBn0D,GAAam0D,IAEjCA,EAGF,OAFAzjF,EAAEwe,iBACFxe,EAAE0jF,YAAcD,EACTA,CAEX,EAOE9+C,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,CAMS8+C,CAAkC,EAAGxpB,GAAU,EAAMr1B,EAAc,GAAI,eAChF,EA28DF8+C,uCA/6D8C,SAAC/5E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACnGo1B,GAA2BrwD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,OAAsB,EAg7DrG++C,mCAAoCr9C,GAEpCs9C,gCA/6DuC,SAACj6E,EAAQwpB,EAAOC,GAEnD,OADAzpB,EAASk8B,GAAgBl8B,KAGzBA,EAAO8vB,MAAMtG,MAAQA,EAAQ,KAC7BxpB,EAAO8vB,MAAMrG,OAASA,EAAS,KAExB,IALc,CAMvB,EAy6DFywD,wCAv6D+C,SAACl6E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACpGo1B,GAA2BrwD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,QAAuB,EAw6DtGk/C,mDAv3D0D,SAACn6E,EAAQswD,EAAUx1B,EAAYG,GACrF,OAAK7G,GAASiH,qBACdr7B,EAASk8B,GAAgBl8B,KAKzBywD,GAAsCzwD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,0BAE/Ew1B,GAAsCzwD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,sBANxE,GAFsB,CAS7C,EA+2DFm/C,mDAr1D0D,SAAC9pB,EAAUx1B,EAAYG,GAC7E,OAAIi1B,MAA2C,EACxCgB,GAA6B,EAAGZ,EAAUx1B,EAAYG,EAAc,GAAI,mBACjF,EAo1DFo/C,sDAj1D6D,SAAC/pB,EAAUx1B,EAAYG,GAChF,OAAIi1B,MAA2C,EACxCgB,GAA6B,EAAGZ,EAAUx1B,EAAYG,EAAc,GAAI,sBACjF,EAg1DFq/C,0CAvyDiD,SAACt6E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACtGm2B,GAAyBpxD,EAAQswD,EAAUx1B,EAAYG,EAAc,EAAG,UAAyB,EAwyDrGs/C,2CAtyDkD,SAACv6E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACvGm2B,GAAyBpxD,EAAQswD,EAAUx1B,EAAYG,EAAc,EAAG,WAA0B,EAuyDtGu/C,wCAryD+C,SAACx6E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACpGm2B,GAAyBpxD,EAAQswD,EAAUx1B,EAAYG,EAAc,EAAG,QAAuB,EAsyDnGw/C,yBApyDgC,SAACtyD,EAAMoN,EAAKC,GAExCH,IADgB,WAAJ,OAAU/7B,GAAU6uB,EAAK,GACfoN,EAAKC,EAC7B,EAmyDFklD,4CAlvDmD,SAAC16E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACxGu3B,GAA2BxyD,EAAQswD,EAAUx1B,EAAYG,EAAc,EAAG,YAA2B,EAmvDzG0/C,6CAjvDoD,SAAC36E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACzGu3B,GAA2BxyD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,aAA4B,EAkvD3G2/C,6CAhvDoD,SAAC56E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACzGu3B,GAA2BxyD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,aAA4B,EAivD3G4/C,4CA/uDmD,SAAC76E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACxGu3B,GAA2BxyD,EAAQswD,EAAUx1B,EAAYG,EAAc,EAAG,YAA2B,EAgvDzG6/C,0CA9uDiD,SAAC96E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACtGu3B,GAA2BxyD,EAAQswD,EAAUx1B,EAAYG,EAAc,EAAG,UAAyB,EA+uDvG8/C,oDA3sD2D,SAAC/6E,EAAQswD,EAAUx1B,EAAYG,GAAgC,IAAD+/C,EACrH,OAAkB,QAAdA,EAACppF,SAASE,YAAI,IAAAkpF,GAAbA,EAAevwD,oBAIpBzqB,EAASk8B,GAAgBl8B,IAElB0yD,GAAuC1yD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,sBADzE,GAJX,CAMZ,EAqsDFggD,yCAzpDgD,SAACj7E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OAxC3E,SAACj7B,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GACpFvG,GAAS8mD,UAAT9mD,GAAS8mD,QAAYxiF,GAAQ,KAI7B,IA0BIsiC,EAAe,CACjBh7B,OA7BFA,EAASk8B,GAAgBl8B,GA8BvB26B,kBACAM,eACAC,YA9BuB,WAAgB,IAAf/kC,EAACiB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG0I,MAC5B,GAAI3J,EAAE6J,QAAUA,EAAhB,CAOA,IAAInM,EAAIjC,SAASE,KACjB,GAAK+B,EAAL,CAIA,IAAIqnF,EAAU9mD,GAAS8mD,QACvB1mF,EAAS0mF,GAAU,GAAM,EACzB1mF,EAAU0mF,EAAU,GAAK,GAAMrnF,EAAEk9D,YACjCv8D,EAAU0mF,EAAU,GAAK,GAAMrnF,EAAEm9D,aACjCx8D,EAAU0mF,EAAU,IAAM,GAAMt9C,WAChCppC,EAAU0mF,EAAU,IAAM,GAAMp9C,YAChCtpC,EAAU0mF,EAAU,IAAM,GAAMC,WAChC3mF,EAAU0mF,EAAU,IAAM,GAAME,YAChC5mF,EAAU0mF,EAAU,IAAM,GAAoB,EAAdntD,YAChCv5B,EAAU0mF,EAAU,IAAM,GAAoB,EAAdjtD,YACX10B,GAAa0hC,EAA2Bs1B,EAAa2qB,EAAS5qB,IAAWn6D,EAAEwe,gBAXhG,CALA,CAiBF,EAOEmmB,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,CAEEqgD,CAAwBr7E,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,SAAwB,EA0pDpGqgD,8CA9kDqD,SAACt7E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OAC1G43B,GAA2B7yD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,cAA6B,EA+kD5GsgD,2CA7kDkD,SAACv7E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACvG43B,GAA2B7yD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,WAA0B,EA8kDzGugD,4CA5kDmD,SAACx7E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACxG43B,GAA2B7yD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,YAA2B,EA6kD1GwgD,6CA3kDoD,SAACz7E,EAAQswD,EAAUx1B,EAAYG,GAA0B,OACzG43B,GAA2B7yD,EAAQswD,EAAUx1B,EAAYG,EAAc,GAAI,aAA4B,EA4kD3GygD,mDA1iD0D,SAACprB,EAAUx1B,EAAYG,GAC7E,OAAO64B,GAAsC73B,GAAmB,GAAIq0B,EAAUx1B,EAAYG,EAAc,GAAI,mBAC9G,EA0iDF0gD,wCA7gD+C,SAAC37E,EAAQswD,EAAUx1B,EAAYG,GAE1E,OADAj7B,EAASk8B,GAAgBl8B,SAEI,IAAlBA,EAAO47E,QA5BW,SAAC57E,EAAQswD,EAAUx1B,EAAYG,EAAcs1B,EAAa51B,GACvFvG,GAASynD,aAATznD,GAASynD,WAAenjF,GAAQ,KAGhC,IAUIsiC,EAAe,CACjBh7B,SACAs6B,qBAAqB,EACrBK,kBACAM,eACAC,YAfqB,WAAgB,IAAf/kC,EAACiB,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG0I,MACtB+7E,EAAaznD,GAASynD,WAC1B3pB,GAAmB2pB,EAAY1lF,EAAG6J,GAClClL,EAAW+mF,EAAa,IAAM,GAAM1lF,EAAU,OAC9CrB,EAAW+mF,EAAa,IAAM,GAAM1lF,EAAU,OAC9CrB,EAAW+mF,EAAa,IAAM,GAAM1lF,EAAU,OAC9C3B,EAAUqnF,EAAa,IAAM,GAAM1lF,EAAa,UAC3BoD,GAAa0hC,EAA2Bs1B,EAAasrB,EAAYvrB,IAAWn6D,EAAEwe,gBACrG,EAQEmmB,cAEF,OAAO1G,GAAS2G,wBAAwBC,EAC1C,CAMW8gD,CAA2B97E,EAAQswD,EAAUx1B,EAAYG,EAAc,EAAG,UAEzE,GAJW,CAMvB,EAugDF8gD,4BApgDmC,SAACC,GAAK,OAAKpqF,SAASoqF,MAAQv2D,GAAau2D,EAAO,EAsgDnFC,iBAAkB/nB,GAElBgoB,YAh+CmB,SAACC,EAAWC,GAC3B,IAEkCC,EAF9BxnC,EAAU,EACVynC,EAAO,EAAEC,EAAA57D,EACM6zC,MAAe,IAAlC,IAAA+nB,EAAA3rF,MAAAyrF,EAAAE,EAAAjsF,KAAAyM,MAAoC,CAAC,IAA5Bm2B,EAAMmpD,EAAAvsF,MACT2K,EAAM2hF,EAAcvnC,EACxBngD,EAAWynF,EAAYG,GAAQ,GAAM7hF,EACrCo6C,GAAWpuB,GAAayM,EAAQz4B,EAAK6lE,KAAY,EACjDgc,GAAQ,CACV,CAAC,OAAArmF,GAAAsmF,EAAApmF,EAAAF,EAAA,SAAAsmF,EAAA37D,GAAA,CACD,OAAO,CACT,EAw9CF47D,kBAr9CyB,SAACC,EAAgBC,GACtC,IAAIjoB,EAAUD,KACd9/D,EAAU+nF,GAAiB,GAAMhoB,EAAQpjE,OACzC,IAC0BsrF,EADtB9nC,EAAU,EAAE+nC,EAAAj8D,EACG8zC,GAAO,IAA1B,IAAAmoB,EAAAhsF,MAAA+rF,EAAAC,EAAAtsF,KAAAyM,MACE83C,GAAWprC,GADEkzE,EAAA7sF,OACwB,CACtC,OAAAmG,GAAA2mF,EAAAzmF,EAAAF,EAAA,SAAA2mF,EAAAh8D,GAAA,CAED,OADAlsB,EAAUgoF,GAAoB,GAAM7nC,EAC7B,CACT,EA88CFgoC,KAAM70D,GAEN80D,SA78CA,SAAmB5+D,GACnB,IAEI,IAAIhT,EAASwa,GAASK,gBAAgB7H,GAEtC,OADA5W,GAAGkE,MAAMN,GACF,CACT,CAAE,MAAO/U,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAOA,EAAEulB,KACX,CACA,EAq8CAqhE,QAj7CA,SAAkB7+D,EAAI8+D,EAAKC,EAAQC,GACnC,IAEI,IACIt2D,EArBM,SAAC1b,EAAQ8xE,EAAKC,EAAQp/E,GAEhC,IADA,IAAI6lB,EAAM,EACD70B,EAAI,EAAGA,EAAIouF,EAAQpuF,IAAK,CAC/B,IAAI4L,EAAM/F,EAAUsoF,GAAM,GACtBtzE,EAAMhV,EAAWsoF,EAAM,GAAK,GAChCA,GAAO,EACP,IAAI5yD,EAAO9iB,GAAG/K,KAAK2O,EAAQlX,EAAOyG,EAAKiP,EAAK7L,GAC5C,GAAIusB,EAAO,EAAG,OAAQ,EAEtB,GADA1G,GAAO0G,EACHA,EAAO1gB,EAAK,WACK,IAAV7L,IACTA,GAAUusB,EAEd,CACA,OAAO1G,CACT,CAMYy5D,CADGz3D,GAASK,gBAAgB7H,GACZ8+D,EAAKC,GAE/B,OADAvoF,EAAUwoF,GAAO,GAAMt2D,EAChB,CACT,CAAE,MAAOzwB,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAOA,EAAEulB,KACX,CACA,EAw6CA0hE,QAr6CA,SAAkBl/D,EAAIrgB,EAAQkT,EAAQssE,GACpCx/E,EAAS8oB,GAAmB9oB,GAG9B,IAEI,GAAIskE,MAAMtkE,GAAS,OAAO,GAC1B,IAAIqN,EAASwa,GAASK,gBAAgB7H,GAItC,OAHA5W,GAAG6G,OAAOjD,EAAQrN,EAAQkT,GAC1B/b,EAASqoF,GAAY,GAAMziF,OAAOsQ,EAAO2F,UACrC3F,EAAOsX,UAAuB,IAAX3kB,GAA2B,IAAXkT,IAAc7F,EAAOsX,SAAW,MAChE,CACT,CAAE,MAAOrsB,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAOA,EAAEulB,KACX,CAEA,EAs5CA4hE,SA/3CA,SAAmBp/D,EAAI8+D,EAAKC,EAAQC,GACpC,IAEI,IACIt2D,EAxBO,SAAC1b,EAAQ8xE,EAAKC,EAAQp/E,GAEjC,IADA,IAAI6lB,EAAM,EACD70B,EAAI,EAAGA,EAAIouF,EAAQpuF,IAAK,CAC/B,IAAI4L,EAAM/F,EAAUsoF,GAAM,GACtBtzE,EAAMhV,EAAWsoF,EAAM,GAAK,GAChCA,GAAO,EACP,IAAI5yD,EAAO9iB,GAAGyE,MAAMb,EAAQlX,EAAOyG,EAAKiP,EAAK7L,GAC7C,GAAIusB,EAAO,EAAG,OAAQ,EAEtB,GADA1G,GAAO0G,EACHA,EAAO1gB,EAET,WAEmB,IAAV7L,IACTA,GAAUusB,EAEd,CACA,OAAO1G,CACT,CAMY65D,CADG73D,GAASK,gBAAgB7H,GACX8+D,EAAKC,GAEhC,OADAvoF,EAAUwoF,GAAO,GAAMt2D,EAChB,CACT,CAAE,MAAOzwB,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAOA,EAAEulB,KACX,CACA,EAs3CA8hE,gBAAiB17C,GAEjB27C,eAAgBv7C,GAEhBw7C,aAAc76C,GAEd86C,iBAAkBz6C,GAElB06C,kBAAmBp6C,GAEnBq6C,mBAAoBj6C,GAEpBk6C,cAAe95C,GAEf+5C,cAAe15C,GAEf25C,kBAAmBr5C,GAEnBs5C,aAAch5C,GAEdi5C,wBAAyBz4C,GAEzB04C,oBAAqBr4C,GAErBs4C,kBAAmBn4C,GAEnBo4C,aAAc33C,GAEd43C,gBAAiBx3C,GAEjBy3C,gBAAiBl3C,GAEjBm3C,gBAAiBh3C,GAEjBi3C,gBAAiB72C,GAEjB82C,YAAa91C,GAEb+1C,gBAAiBz1C,GAEjB01C,uBAAwBv1C,GAExBw1C,uBAAwBj1C,GAExBk1C,gBAAiB/zC,GAEjBg0C,eAAgBzzC,GAEhB0zC,WAAYtzC,GAEZuzC,gBAAiBpzC,GAEjBqzC,qBAAsBlzC,GAEtBmzC,gBAAiBhzC,GAEjBizC,sBAAuBzyC,GAEvB0yC,iBAAkBvyC,GAElBwyC,eAAgBryC,GAEhBsyC,iBAAkBjyC,GAElBkyC,qBAAsB5xC,GAEtB6xC,YAAaxxC,GAEbyxC,YAAatxC,GAEbuxC,UAAWhxC,GAEXixC,2BAA4B9wC,GAE5B+wC,aAAc5wC,GAEd6wC,sBAAuBzwC,GAEvB0wC,eAAgBpvC,GAEhBqvC,wBAAyBjvC,GAEzBkvC,SAAUtuC,GAEVuuC,0BAA2BpuC,GAE3BquC,YAAa9sC,GAEb+sC,aAAc5sC,GAEd6sC,mBAAoBxsC,GAEpBysC,cAAevsC,GAEfwsC,cAAetsC,GAEfusC,kBAAmBpsC,GAEnBqsC,oBAAqBzqC,GAErB0qC,cAAe7oC,GAEf8oC,oBAAqBxoC,GAErByoC,eAAgBpoC,GAEhBqoC,mBAAoB3mC,GAEpB4mC,cAAehmC,GAEfimC,aAAczlC,GAEd0lC,qBAAsBnkC,GAEtBokC,wBAAyBviC,GAEzBwiC,cAAe//B,GAEfggC,cAAe3/B,GAEf4/B,gBAAiBv/B,GAEjBw/B,aAAc/+B,GAEdg/B,aAAcz+B,GAEd0+B,iCAAkCn+B,GAElCo+B,oBAAqB59B,GAErB69B,oBAAqBz9B,GAErB09B,UAAWt9B,GAEXu9B,eAAgBn9B,GAEhBo9B,cAAej9B,GAEfk9B,sBAAuB/8B,GAEvBg9B,cAAe78B,GAEf88B,YAAaz8B,GAEb08B,oBAAqBv8B,GAErBw8B,aAAch8B,GAEdi8B,aAAc77B,GAEd87B,gBAAiBx7B,GAEjBy7B,eAAgBr7B,GAEhBs7B,eAAgBn7B,GAEhBo7B,gBAAiBj7B,GAEjBk7B,gBAAiB/6B,GAEjBg7B,aAAcr6B,GAEds6B,YAAan6B,GAEbo6B,aAAcj6B,GAEdk6B,aAAcx5B,GAEdy5B,aAAcp5B,GAEdq5B,aAAc34B,GAEd44B,aAAcv4B,GAEdw4B,aAAc93B,GAEd+3B,aAAc13B,GAEd23B,mBAAoBr2B,GAEpBs2B,aAAc/1B,GAEdg2B,sBAAuB90B,GAEvB+0B,uBAAwBj0B,GAExBk0B,sBAAuB9zB,GAEvB+zB,WAAY3zB,GAEZ4zB,WAQF,SAAoBruE,EAAMsuE,EAAGC,GAC3B,IAAIhnD,EAAKr3B,KACT,IACE/L,GAAY6b,EAAMsuE,EAAGC,EACvB,CAAE,MAAMttF,GAEN,GADA+O,GAAau3B,GACTtmC,IAAMA,EAAE,EAAG,MAAMA,EACrB6C,GAAU,EAAG,EACf,CACF,EAfE0qF,WAr9CA,SAAqB3vF,EAAQ+b,GAC7B,IAGI,OADA/I,GAAW3S,EAAO4U,SAASjV,EAAQA,EAAS+b,IACrC,CACT,CAAE,MAAO3Z,GACT,QAAiB,IAANmR,IAAkC,eAAXnR,EAAE/G,KAAwB,MAAM+G,EAClE,OAAOA,EAAEulB,KACX,CACA,EA88CAioE,YAnmCF,SAAqBr6C,EAAMs6C,GAAS,IAAM36E,EAAMwc,GAAam+D,GAAQ,OAAQt6C,GAAS,KAAK,EAA8B,KAAK,EAAGvqC,QAAQD,MAAMmK,GAAM,MAAO,KAAK,EAAGlK,QAAQ8kF,KAAK56E,GAAM,MAAO,QAASlK,QAAQlF,KAAKoP,GAAe,GAqmC/N1Q,SAtuWJ,WACyB,OAAAH,EAAAjB,MAAC,KAADC,UAAA,CAquWD0sF,GA8HpB,OAnCJ,WACE,GAAIvuF,EAAgB,QAElB,IADgC,mBAArBA,EAAgB,UAAiBA,EAAgB,QAAI,CAACA,EAAgB,UAC1EA,EAAgB,QAAElE,OAAS,GAChCkE,EAAgB,QAAE6O,OAAlB7O,EAGN,CAEAwuF,GAxDA,SAASC,IAeP,SAASC,IAAS,IAADC,EAAAC,EAAAC,EAGf7uF,EAAkB,WAAI,EAElBW,IAj9WN0N,GAAqB,EAGhBrO,EAAiB,UAAM+R,GAAG+T,aAAa/T,GAAG1U,OACjD6X,GAAI7X,OAGF2F,GAA+B,oBAG/B+O,GAAGgU,mBAAoB,EA68WF,QAAnB4oE,EAAA1gF,SAAmB,IAAA0gF,GAAnBA,EAAsB3uF,GACQ,QAA9B4uF,GAAAC,EAAA7uF,GAA6B,4BAAC,IAAA4uF,GAA9BA,EAAAn1F,KAAAo1F,GAEmB7uF,EAAqB,cAxD5C,WAA8B,IAAZsP,EAAIzN,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG,GAEnBitF,EAAgBzrF,GAEpBiM,EAAKoB,QAAQlD,GAEb,IAAIuhF,EAAOz/E,EAAKxT,OACZkzF,EAAOloD,GAAwB,GAAZioD,EAAO,IAC1BE,EAAWD,EACf1/E,EAAKuN,SAAQ,SAAC0M,GACZpqB,EAAU8vF,GAAW,GAAMjoD,GAAoBzd,GAC/C0lE,GAAY,CACd,IACA9vF,EAAU8vF,GAAW,GAAM,EAE3B,IAEE,IAAI9gE,EAAM2gE,EAAcC,EAAMC,GAI9B,OADA38D,GAAOlE,GACAA,CACT,CAAE,MAAOvtB,GACP,OAAOsxB,GAAgBtxB,EACzB,CACF,CAgCuBsuF,CAAS5/E,GAz8WhC,WAGE,GAAItP,EAAgB,QAElB,IADgC,mBAArBA,EAAgB,UAAiBA,EAAgB,QAAI,CAACA,EAAgB,UAC1EA,EAAgB,QAAElE,QACvBiT,GAAa/O,EAAgB,QAAE6O,SAKnCF,GAAqBG,GAEvB,CA87WIqgF,GACF,CAjC+B,IAApB7/E,EAAIzN,UAAA/F,OAAA,QAAAiC,IAAA8D,UAAA,GAAAA,UAAA,GAAG0L,EAEdxN,EAAkB,EACpBK,GAAwBquF,GA78W5B,WACE,GAAIzuF,EAAe,OAEjB,IAD+B,mBAApBA,EAAe,SAAiBA,EAAe,OAAI,CAACA,EAAe,SACvEA,EAAe,OAAElE,QACtBoT,GAAYlP,EAAe,OAAE6O,SAIjCF,GAAqBM,GAEvB,CAu8WEmgF,GAGIrvF,EAAkB,EACpBK,GAAwBquF,EAwBtBzuF,EAAkB,WACpBA,EAAkB,UAAE,cACpB4d,YAAW,WACTA,YAAW,kBAAM5d,EAAkB,UAAE,GAAG,GAAE,GAC1C0uF,GACF,GAAG,IAGHA,IAEJ,CAYAD,GAWIpgF,EACUrO,EAGA,IAAIwE,SAAQ,SAACC,EAAS2B,GAChC6H,EAAsBxJ,EACtB1D,EAAqBqF,CACvB,GAQA,KAIqB,WAALgD,EAAPhQ,IAA0C,WAALgQ,EAAN/P,IACxCA,EAAOD,QAAUwE,EAGjBvE,EAAOD,QAAQuC,QAAUiC,QAEQ,KAAtB,EAAF,WAAE,OAAMA,CAAgB,UAA1B,OAA0B,Y,oSClmY5B,SAAShE,EAAOmB,EAAKxB,GAE3B,IAAK,IAAIob,KAAKpb,EAAOwB,EAAI4Z,GAAKpb,EAAMob,GACpC,OAA6B5Z,CAC9B,CAQgB,SAAAs0F,EAAWt0F,GACtBA,GAAQA,EAAK07B,YAAY17B,EAAK07B,WAAWK,YAAY/7B,EAC1D,CCVgB,SAAAu0F,EAAc/1F,EAAMob,EAAOna,GAC1C,IACClB,EACAc,EACAL,EAHG6G,EAAkB,CAAC,EAIvB,IAAK7G,KAAK4a,EACA,OAAL5a,EAAYT,EAAMqb,EAAM5a,GACd,OAALA,EAAYK,EAAMua,EAAM5a,GAC5B6G,EAAgB7G,GAAK4a,EAAM5a,GAUjC,GAPI8H,UAAU/F,OAAS,IACtB8E,EAAgBnD,SACfoE,UAAU/F,OAAS,EAAIf,EAAMtB,KAAKoI,UAAW,GAAKrH,GAKjC,mBAARjB,GCjBQ,MDiBcA,EAAKg2F,aACrC,IAAKx1F,KAAKR,EAAKg2F,aCjBQ,MDkBlB3uF,EAAgB7G,KACnB6G,EAAgB7G,GAAKR,EAAKg2F,aAAax1F,IAK1C,OAAOL,EAAYH,EAAMqH,EAAiBtH,EAAKc,ECzB5B,KD0BpB,CAcgB,SAAAV,EAAYqB,EAAMP,EAAOlB,EAAKc,EAAKL,GAIlD,IAAM6G,EAAQ,CACbuE,KAAApK,EACAy0F,MAAAh1F,EACAK,IAAAvB,EACAgqB,IAAAlpB,EACAq1F,ICjDkB,KDkDlBC,GClDkB,KDmDlBC,IAAQ,EACRC,ICpDkB,KDqDlBC,ICrDkB,KDsDlB7mF,iBAAA,EACA8mF,ICvDkB,MDuDP/1F,IAAqB4a,EAAU5a,EAC1Cg2F,KAAS,EACTC,IAAQ,GAMT,OC/DmB,MD6Dfj2F,GC7De,MD6DKR,EAAQ02F,OAAe12F,EAAQ02F,MAAMrvF,GAEtDA,CACR,CAMgB,SAAAsvF,EAASn1F,GACxB,OAAOA,EAAM0C,QACd,CE3EO,SAASs7B,EAAch+B,EAAOxB,GACpCkV,KAAK+gF,MAAQz0F,EACb0T,KAAK2vB,QAAU7kC,CAChB,UA0EgB42F,EAAcp1F,EAAOxB,GACpC,GD3EmB,MC2EfA,EAEH,OAAOwB,EAAK20F,GACTS,EAAcp1F,EAAK20F,GAAU30F,EAAKg1F,IAAU,GD9E7B,KCmFnB,IADA,IAAIp7E,EACGpb,EAAawB,EAAK00F,IAAW3zF,OAAQvC,IAG3C,GDtFkB,OCoFlBob,EAAU5Z,EAAK00F,IAAWl2F,KDpFR,MCsFKob,EAAOi7E,IAI7B,OAAOj7E,EAAOi7E,IAShB,MAA4B,mBAAd70F,EAAMoK,KAAqBgrF,EAAcp1F,GDnGpC,ICoGpB,CA2CA,SAASq1F,EAAwBr1F,GAAjC,IAGWxB,EACJob,EAHN,GDhJmB,OCgJd5Z,EAAQA,EAAK20F,KDhJC,MCgJoB30F,EAAK80F,IAAqB,CAEhE,IADA90F,EAAK60F,IAAQ70F,EAAK80F,IAAYQ,KDjJZ,KCkJT92F,EAAI,EAAGA,EAAIwB,EAAK00F,IAAW3zF,OAAQvC,IAE3C,GDpJiB,OCmJbob,EAAQ5Z,EAAK00F,IAAWl2F,KDnJX,MCoJIob,EAAKi7E,IAAe,CACxC70F,EAAK60F,IAAQ70F,EAAK80F,IAAYQ,KAAO17E,EAAKi7E,IAC1C,KACD,CAGD,OAAOQ,EAAwBr1F,EAChC,CACD,CA4BgB,SAAAu1F,EAAcv1F,KAE1BA,EAACw1F,MACDx1F,EAACw1F,KAAA,IACFj3F,EAAcqO,KAAK5M,KAClBy1F,EAAOC,OACTr2F,GAAgBb,EAAQm3F,sBAExBt2F,EAAeb,EAAQm3F,oBACN32F,GAAOy2F,EAE1B,CASA,SAASA,IAMR,IALA,IAAIz1F,EAnGoB4Z,EAOjBna,EANHJ,EACHL,EACAsxB,EACA1xB,EAgGA0B,EAAI,EAIE/B,EAAcwC,QAOhBxC,EAAcwC,OAAST,GAC1B/B,EAAc+nB,KAAKzgB,GAGpB7F,EAAIzB,EAAcuV,QAClBxT,EAAI/B,EAAcwC,OAEdf,EAACw1F,MA/GC/1F,OAAA,EALNT,GADGK,GADoBua,EAuHN5Z,GAtHM+0F,KACNF,IACjBvkE,EAAc,GACd1xB,EAAW,GAERgb,EAASg8E,OACNn2F,EAAWZ,EAAO,CAAC,EAAGQ,IACpB01F,IAAa11F,EAAQ01F,IAAa,EACtCv2F,EAAQ02F,OAAO12F,EAAQ02F,MAAMz1F,GAEjCo2F,EACCj8E,EAASg8E,IACTn2F,EACAJ,EACAua,EAASk8E,IACTl8E,EAASg8E,IAAYG,aDzII,GC0IzB12F,EAAQ41F,IAAyB,CAACj2F,GD3HjB,KC4HjBsxB,ED5HiB,MC6HjBtxB,EAAiBo2F,EAAc/1F,GAAYL,KD5IlB,GC6ItBK,EAAQ41F,KACXr2F,GAGDa,EAAQs1F,IAAa11F,EAAQ01F,IAC7Bt1F,EAAQk1F,GAAAD,IAAmBj1F,EAAQu1F,KAAWv1F,EAC9Cu2F,EAAW1lE,EAAa7wB,EAAUb,GAE9Ba,EAAQo1F,KAAS71F,GACpBq2F,EAAwB51F,KA6F1Bg2F,EAAOC,IAAkB,CAC1B,UC3MgBO,EACfj2F,EACAxB,EACAob,EACAna,EACAlB,EACAc,EACAL,EACA6G,EACAyqB,EACA1xB,EACA0B,GAAA,IAEIgN,EAEH/M,EAEA88D,EAEAh+B,EAEAxgC,EAiCIy1F,EA5BDC,EAAe90F,GAAkBA,EAAci1F,KAAez2D,EAE9Dt/B,EAAoBH,EAAauC,OAUrC,IARAuvB,EAAS4lE,EACRt8E,EACApb,EACA+1F,EACAjkE,EACA3xB,GAGI2O,EAAI,EAAGA,EAAI3O,EAAmB2O,IFhEhB,OEiElB+vD,EAAazjD,EAAc86E,IAAWpnF,MAMrC/M,GADyB,GAAtB88D,EAAU23B,IACF30F,EAEAk0F,EAAYl3B,EAAU23B,MAAY30F,EAI9Cg9D,EAAU23B,IAAU1nF,EAGhBgnF,EAASuB,EACZ71F,EACAq9D,EACA98D,EACAhC,EACAc,EACAL,EACA6G,EACAyqB,EACA1xB,EACA0B,GAID++B,EAASg+B,EAAUw3B,IACfx3B,EAAW90C,KAAOhoB,EAASgoB,KAAO80C,EAAW90C,MAC5ChoB,EAASgoB,KACZ4tE,EAAS51F,EAASgoB,IFjGF,KEiGa80C,GAE9B/8D,EAASsM,KACRywD,EAAW90C,IACX80C,EAAUy3B,KAAez1D,EACzBg+B,IFtGgB,ME0Gdx+D,GF1Gc,ME0GWwgC,IAC5BxgC,EAAgBwgC,GFtHS,EE0HzBg+B,EAAU43B,KACV10F,EAAQm0F,MAAer3B,EAAUq3B,IAEjCpkE,EAAS8lE,EAAO/4B,EAAY/sC,EAAQtwB,GACA,mBAAnBq9D,EAAWjzD,WAAA,IAAsBkqF,EAClDhkE,EAASgkE,EACCj1D,IACV/O,EAAS+O,EAAOg3D,aAIjBh5B,EAAU43B,MAAW,GAKtB,OAFAr7E,EAAci7E,IAAQh2F,EAEfyxB,CACR,CAOA,SAAS4lE,EACRl2F,EACAxB,EACAob,EACAna,EACAlB,GALD,IAQKc,EAEAL,EAEA6G,EA8DGyqB,EAOA1xB,EAnEH0B,EAAoBsZ,EAAY7Y,OACnCuM,EAAuBhN,EAEpBC,EAAO,EAGX,IADAP,EAAc00F,IAAa,IAAI7jF,MAAMtS,GAChCc,EAAI,EAAGA,EAAId,EAAmBc,IF3JhB,OE8JlBL,EAAaR,EAAaa,KAIJ,kBAAdL,GACc,mBAAdA,GA8CFsxB,EAAcjxB,EAAIkB,GA/BvBvB,EAAagB,EAAc00F,IAAWr1F,GANjB,iBAAdL,GACc,iBAAdA,GAEc,iBAAdA,GACPA,EAAWiP,aAAe8K,OAEiBpa,EFlL1B,KEoLhBK,EFpLgB,gBEyLPqgC,EAAQrgC,GACyBL,EAC1Cw2F,EACA,CAAEzyF,SAAU1D,GF5LI,gBACK,MEgMZA,EAAWiP,aAA4BjP,EAAU41F,IAAU,EAK1Bj2F,EAC1CK,EAAWoL,KACXpL,EAAWy1F,MACXz1F,EAAWc,IACXd,EAAWupB,IAAMvpB,EAAWupB,IF1MZ,KE2MhBvpB,EAAU+1F,KAGgC/1F,GAIlC21F,GAAW30F,EACrBhB,EAAU41F,IAAU50F,EAAc40F,IAAU,EAY5C/uF,EF/NkB,MEgOI,IARhBjH,EAAiBI,EAAUg2F,IAAUsB,EAC1Ct3F,EACA4a,EACA0W,EACAhjB,MAMAA,KADAzH,EAAW+T,EAAYhb,MAGtBiH,EAAQovF,KF7OW,IASH,ME2OCpvF,GF3OD,ME2OqBA,EAAQkvF,MAGxB,GAAlBn2F,IAeCL,EAAoB+B,EACvBC,IACUhC,EAAoB+B,GAC9BC,KAK4B,mBAAnBvB,EAAWoL,OACrBpL,EAAUi2F,KFjRc,IEmRfr2F,GAAiB0xB,IAiBvB1xB,GAAiB0xB,EAAc,EAClC/vB,IACU3B,GAAiB0xB,EAAc,EACzC/vB,KAEI3B,EAAgB0xB,EACnB/vB,IAEAA,IAMDvB,EAAUi2F,KFlTc,KEgLzBj1F,EAAc00F,IAAWr1F,GFrKR,KEgTnB,GAAIiO,EACH,IAAKjO,EAAI,EAAGA,EAAIiB,EAAmBjB,IFjTjB,OEkTjBwG,EAAW+T,EAAYva,OF3TH,EE4TKwG,EAAQovF,OAC5BpvF,EAAQgvF,KAASp1F,IACpBA,EAAS21F,EAAcvvF,IAGxB0wF,EAAQ1wF,EAAUA,IAKrB,OAAOpG,CACR,CAQA,SAAS22F,EAAOp2F,EAAaxB,EAAQob,GAArC,IAIMna,EACKlB,EAFV,GAA+B,mBAApByB,EAAYoK,KAAoB,CAE1C,IADI3K,EAAWO,EAAW00F,IACjBn2F,EAAI,EAAGkB,GAAYlB,EAAIkB,EAASsB,OAAQxC,IAC5CkB,EAASlB,KAKZkB,EAASlB,GAAEo2F,GAAW30F,EACtBxB,EAAS43F,EAAO32F,EAASlB,GAAIC,EAAQob,IAIvC,OAAOpb,CACR,CAAWwB,EAAW60F,KAASr2F,IAC1BA,GAAUwB,EAAYoK,OAASwP,EAAUhK,SAASpR,KACrDA,EAAS42F,EAAcp1F,IAExB4Z,EAAUkiB,aAAa97B,EAAW60F,IAAOr2F,GF3VvB,ME4VlBA,EAASwB,EAAW60F,KAGrB,GACCr2F,EAASA,GAAUA,EAAO63F,kBFhWR,MEiWV73F,GAAqC,GAAnBA,EAAOg4F,UAElC,OAAOh4F,CACR,CA4BA,SAAS83F,EACRt2F,EACAxB,EACAob,EACAna,GAJD,IAmCMlB,EACAc,EA9BCL,EAAMgB,EAAWF,IACjB+F,EAAO7F,EAAWoK,KACpBkmB,EAAW9xB,EAAYob,GAkB3B,GF1ZmB,OE2ZjB0W,GAAuC,MAAlBtwB,EAAWF,KAChCwwB,GACAtxB,GAAOsxB,EAASxwB,KAChB+F,GAAQyqB,EAASlmB,QFvaG,EEwanBkmB,EAAQ2kE,KAEV,OAAOr7E,EAAA,GAVPna,GFvZkB,MEwZjB6wB,GFjaoB,EEiaCA,EAAQ2kE,IAA8B,EAAJ,GAaxD,IAFI12F,EAAIqb,EAAc,EAClBva,EAAIua,EAAc,EACfrb,GAAK,GAAKc,EAAIb,EAAYuC,QAAQ,CACxC,GAAIxC,GAAK,EAAG,CAEX,IADA+xB,EAAW9xB,EAAYD,OFhbJ,EEmbjB+xB,EAAQ2kE,MACTj2F,GAAOsxB,EAASxwB,KAChB+F,GAAQyqB,EAASlmB,KAEjB,OAAO7L,EAERA,GACD,CAEA,GAAIc,EAAIb,EAAYuC,OAAQ,CAE3B,IADAuvB,EAAW9xB,EAAYa,OF7bJ,EEgcjBixB,EAAQ2kE,MACTj2F,GAAOsxB,EAASxwB,KAChB+F,GAAQyqB,EAASlmB,KAEjB,OAAO/K,EAERA,GACD,CACD,CAGD,OAAQ,CACT,CChdA,SAASo3F,EAASz2F,EAAOxB,EAAKob,GACf,KAAVpb,EAAI,GACPwB,EAAM0/B,YAAYlhC,EHWA,MGXKob,EAAgB,GAAKA,GAE5C5Z,EAAMxB,GHSY,MGVRob,EACG,GACa,iBAATA,GAAqByjD,EAAmB3kC,KAAKl6B,GACjDob,EAEAA,EAAQ,IAEvB,CAyBgB,SAAAoN,EAAYhnB,EAAKxB,EAAMob,EAAOna,EAAUlB,GACvD,IAAIc,EAEJW,EAAG,GAAY,SAARxB,EACN,GAAoB,iBAATob,EACV5Z,EAAIw/B,MAAMk3D,QAAU98E,MACd,CAKN,GAJuB,iBAAZna,IACVO,EAAIw/B,MAAMk3D,QAAUj3F,EAAW,IAG5BA,EACH,IAAKjB,KAAQiB,EACNma,GAASpb,KAAQob,GACtB68E,EAASz2F,EAAIw/B,MAAOhhC,EAAM,IAK7B,GAAIob,EACH,IAAKpb,KAAQob,EACPna,GAAYma,EAAMpb,IAASiB,EAASjB,IACxCi4F,EAASz2F,EAAIw/B,MAAOhhC,EAAMob,EAAMpb,GAIpC,MAGI,GAAe,KAAXA,EAAK,IAAwB,KAAXA,EAAK,GAC/Ba,EAAab,IAASA,EAAOA,EAAKgW,QAAQ8b,EAAe,OAQxD9xB,EAJAA,EAAKm4F,gBAAiB32F,GACd,cAARxB,GACQ,aAARA,EAEOA,EAAKm4F,cAAchlF,MAAM,GACrBnT,EAAKmT,MAAM,GAElB3R,EAAGxB,IAAawB,EAAGxB,EAAc,CAAC,GACvCwB,EAAGxB,EAAYA,EAAOa,GAAcua,EAEhCA,EACEna,EAQJma,EAAMA,EAAYna,EAASma,GAP3BA,EAAMA,EAAYhb,EAClBoB,EAAI05B,iBACHl7B,EACAa,EAAaiO,EAAoBhN,EACjCjB,IAMFW,EAAIsqC,oBACH9rC,EACAa,EAAaiO,EAAoBhN,EACjCjB,OAGI,CACN,GHzF2B,8BGyFvBd,EAIHC,EAAOA,EAAKgW,QAAQ,cAAe,KAAKA,QAAQ,SAAU,UACpD,GACE,SAARhW,GACQ,UAARA,GACQ,QAARA,GACQ,QAARA,GACQ,QAARA,GAGQ,YAARA,GACQ,YAARA,GACQ,WAARA,GACQ,WAARA,GACQ,QAARA,GACQ,WAARA,GACAA,KAAQwB,EAER,IACCA,EAAIxB,GH3GY,MG2GJob,EAAgB,GAAKA,EAEjC,MAAM5Z,CAAA,CACL,MAAOA,GAAA,CAUU,mBAAT4Z,IHxHO,MG0HPA,IAAA,IAAkBA,GAA8B,KAAXpb,EAAK,GAGpDwB,EAAI42F,gBAAgBp4F,GAFpBwB,EAAI62F,aAAar4F,EAAc,WAARA,GAA8B,GAATob,EAAgB,GAAKA,GAInE,CACD,CAOA,SAASk9E,EAAiB92F,GAMzB,OAAO,SAAU4Z,GAChB,GAAIlG,KAAIlV,EAAa,CACpB,IAAMiB,EAAeiU,KAAIlV,EAAYob,EAAExP,KAAOpK,GAC9C,GHhJiB,MGgJb4Z,EAAEna,EACLma,EAAEna,EAAcb,SAKV,GAAIgb,EAAEna,EAAcA,EAAama,EACvC,OAED,OAAOna,EAAajB,EAAQgR,MAAQhR,EAAQgR,MAAMoK,GAAKA,EACxD,CACD,CACD,UC5HgBi8E,EACf71F,EACA4Z,EACAna,EACAlB,EACAc,EACAL,EACA6G,EACAyqB,EACA1xB,EACA0B,GAAA,IAGIgN,EAkBE/M,EAAGF,EAAO49B,EAAUo/B,EAAUk3B,EAAU51F,EACxC4E,EACE6xF,EAMFC,EACAE,EAyGOE,EA4BPS,EACHE,EASSW,EA6BNT,EAgDOG,EAtPZzvE,EAAUpN,EAASxP,KAIpB,GJjDwB,MIiDpBwP,EAAS3L,YAA0B,OJlDpB,KAbU,IIkEzBxO,EAAQw1F,MACXr2F,KJrE0B,GIqETa,EAAQw1F,KAEzBj2F,EAAoB,CADpBsxB,EAAS1W,EAAQi7E,IAAQp1F,EAAQo1F,OAI7BvnF,EAAM9O,EAAOo2F,MAAStnF,EAAIsM,GAE/B5Z,EAAO,GAAsB,mBAAXgnB,EACjB,IAkEC,GAhEIzjB,EAAWqW,EAAS66E,MAClBW,EACL,cAAepuE,GAAWA,EAAQ7mB,UAAUM,OAKzC40F,GADJ/nF,EAAM0Z,EAAQgwE,cACQz4F,EAAc+O,EAAGwnF,KACnCS,EAAmBjoF,EACpB+nF,EACCA,EAASZ,MAAMj1F,MACf8N,EAAGqnF,GACJp2F,EAGCkB,EAAQq1F,IAEXn2F,GADA4B,EAAIqZ,EAAQk7E,IAAcr1F,EAAQq1F,KACNH,GAAwBp0F,EAAC02F,KAGjD7B,EAEHx7E,EAAQk7E,IAAcv0F,EAAI,IAAIymB,EAAQzjB,EAAUgyF,IAGhD37E,EAAQk7E,IAAcv0F,EAAI,IAAIy9B,EAC7Bz6B,EACAgyF,GAEDh1F,EAAE0N,YAAc+Y,EAChBzmB,EAAEE,OAASy2F,GAER7B,GAAUA,EAAS8B,IAAI52F,GAE3BA,EAAEk0F,MAAQlxF,EACLhD,EAAEmlE,QAAOnlE,EAAEmlE,MAAQ,CAAC,GACzBnlE,EAAE8iC,QAAUkyD,EACZh1F,EAACu1F,IAAkBv3F,EACnB8B,EAAQE,EAACi1F,KAAA,EACTj1F,EAAC62F,IAAoB,GACrB72F,EAAC82F,IAAmB,IAIjBjC,GJ5Ga,MI4GO70F,EAAC+2F,MACxB/2F,EAAC+2F,IAAc/2F,EAAEmlE,OAGd0vB,GJhHa,MIgHOpuE,EAAQuwE,2BAC3Bh3F,EAAC+2F,KAAe/2F,EAAEmlE,QACrBnlE,EAAC+2F,IAAcz4F,EAAO,CAAC,EAAG0B,EAAC+2F,MAG5Bz4F,EACC0B,EAAC+2F,IACDtwE,EAAQuwE,yBAAyBh0F,EAAUhD,EAAC+2F,OAI9Cr5D,EAAW19B,EAAEk0F,MACbp3B,EAAW98D,EAAEmlE,MACbnlE,EAACw0F,IAAUn7E,EAGPvZ,EAEF+0F,GJlIe,MImIfpuE,EAAQuwE,0BJnIO,MIoIfh3F,EAAEi3F,oBAEFj3F,EAAEi3F,qBAGCpC,GJzIY,MIyIQ70F,EAAEk3F,mBACzBl3F,EAAC62F,IAAkBxqF,KAAKrM,EAAEk3F,uBAErB,CAUN,GARCrC,GJ9Ie,MI+IfpuE,EAAQuwE,0BACRh0F,IAAa06B,GJhJE,MIiJf19B,EAAEm3F,2BAEFn3F,EAAEm3F,0BAA0Bn0F,EAAUgyF,IAIpCh1F,EAACs0F,KJvJY,MIwJdt0F,EAAEo3F,wBAAA,IACFp3F,EAAEo3F,sBACDp0F,EACAhD,EAAC+2F,IACD/B,IAEF37E,EAAQm7E,KAAct1F,EAAQs1F,IAC7B,CAkBD,IAhBIn7E,EAAQm7E,KAAct1F,EAAQs1F,MAKjCx0F,EAAEk0F,MAAQlxF,EACVhD,EAAEmlE,MAAQnlE,EAAC+2F,IACX/2F,EAACi1F,KAAA,GAGF57E,EAAQi7E,IAAQp1F,EAAQo1F,IACxBj7E,EAAQ86E,IAAaj1F,EAAQi1F,IAC7B96E,EAAQ86E,IAAWkD,MAAK,SAAA53F,GACnBA,IAAOA,EAAK20F,GAAW/6E,EAC5B,IAES67E,EAAI,EAAGA,EAAIl1F,EAAC82F,IAAiBt2F,OAAQ00F,IAC7Cl1F,EAAC62F,IAAkBxqF,KAAKrM,EAAC82F,IAAiB5B,IAE3Cl1F,EAAC82F,IAAmB,GAEhB92F,EAAC62F,IAAkBr2F,QACtB8E,EAAY+G,KAAKrM,GAGlB,MAAMP,CACP,CJ3LgB,MI6LZO,EAAEs3F,qBACLt3F,EAAEs3F,oBAAoBt0F,EAAUhD,EAAC+2F,IAAa/B,GAG3CH,GJjMY,MIiMQ70F,EAAEu3F,oBACzBv3F,EAAC62F,IAAkBxqF,MAAK,WACvBrM,EAAEu3F,mBAAmB75D,EAAUo/B,EAAUk3B,EAC1C,GAEF,CASA,GAPAh0F,EAAE8iC,QAAUkyD,EACZh1F,EAAEk0F,MAAQlxF,EACVhD,EAACq1F,IAAc51F,EACfO,EAACs0F,KAAA,EAEGqB,EAAa13F,EAAOk3F,IACvBU,EAAQ,EACLhB,EAAkB,CAQrB,IAPA70F,EAAEmlE,MAAQnlE,EAAC+2F,IACX/2F,EAACi1F,KAAA,EAEGU,GAAYA,EAAWt8E,GAE3BtM,EAAM/M,EAAEE,OAAOF,EAAEk0F,MAAOl0F,EAAEmlE,MAAOnlE,EAAE8iC,SAE1B0zD,EAAI,EAAGA,EAAIx2F,EAAC82F,IAAiBt2F,OAAQg2F,IAC7Cx2F,EAAC62F,IAAkBxqF,KAAKrM,EAAC82F,IAAiBN,IAE3Cx2F,EAAC82F,IAAmB,EACrB,MACC,GACC92F,EAACi1F,KAAA,EACGU,GAAYA,EAAWt8E,GAE3BtM,EAAM/M,EAAEE,OAAOF,EAAEk0F,MAAOl0F,EAAEmlE,MAAOnlE,EAAE8iC,SAGnC9iC,EAAEmlE,MAAQnlE,EAAC+2F,UACH/2F,EAACi1F,OAAaY,EAAQ,IAIhC71F,EAAEmlE,MAAQnlE,EAAC+2F,IJxOM,MI0Ob/2F,EAAEw3F,kBACLx5F,EAAgBM,EAAOA,EAAO,CAAE,EAAEN,GAAgBgC,EAAEw3F,oBAGjD3C,IAAqB/0F,GJ9OR,MI8OiBE,EAAEy3F,0BACnCzD,EAAWh0F,EAAEy3F,wBAAwB/5D,EAAUo/B,IAK5Ci5B,EAAehpF,EJpPF,MImPhBA,GAAeA,EAAIlD,OAAS+qF,GJnPZ,MImPwB7nF,EAAIxN,MAI5Cw2F,EAAe2B,EAAU3qF,EAAImnF,MAAM/xF,WAGpC4tB,EAAS2lE,EACRj2F,EACAq/B,EAAQi3D,GAAgBA,EAAe,CAACA,GACxC18E,EACAna,EACAlB,EACAc,EACAL,EACA6G,EACAyqB,EACA1xB,EACA0B,GAGDC,EAAE+0F,KAAO17E,EAAQi7E,IAGjBj7E,EAAQq7E,MJjRe,IImRnB10F,EAAC62F,IAAkBr2F,QACtB8E,EAAY+G,KAAKrM,GAGd5B,IACH4B,EAAC02F,IAAiB12F,EAACo0F,GJlRH,KI6SlB,CAzBE,MAAO30F,GAGR,GAFA4Z,EAAQm7E,IJrRS,KIuRbn2F,GJvRa,MIuREI,EAClB,GAAIgB,EAAEuL,KAAM,CAKX,IAJAqO,EAAQq7E,KAAWr2F,EAChB,IJvSsB,II0SlB0xB,GAA6B,GAAnBA,EAAOkmE,UAAiBlmE,EAAO+lE,aAC/C/lE,EAASA,EAAO+lE,YAGjBr3F,EAAkBA,EAAkBqrB,QAAQiG,IJjS7B,KIkSf1W,EAAQi7E,IAAQvkE,CACjB,MACC,IAASmmE,EAAIz3F,EAAkB+B,OAAQ01F,KACtCnC,EAAWt1F,EAAkBy3F,SAI/B78E,EAAQi7E,IAAQp1F,EAAQo1F,IACxBj7E,EAAQ86E,IAAaj1F,EAAQi1F,IAE9Bl2F,EAAOq2F,IAAa70F,EAAG4Z,EAAUna,EAClC,MJ7SkB,MI+SlBT,GACA4a,EAAQm7E,KAAct1F,EAAQs1F,KAE9Bn7E,EAAQ86E,IAAaj1F,EAAQi1F,IAC7B96E,EAAQi7E,IAAQp1F,EAAQo1F,KAExBvkE,EAAS1W,EAAQi7E,IAAQqD,EACxBz4F,EAAQo1F,IACRj7E,EACAna,EACAlB,EACAc,EACAL,EACA6G,EACAjH,EACA0B,GAMF,OAFKgN,EAAM9O,EAAQ25F,SAAS7qF,EAAIsM,GJ/UH,IIiVtBA,EAAQq7E,SAAA,EAAuC3kE,CACvD,UAOgB0lE,EAAWh2F,EAAa4Z,EAAMna,GAC7C,IAAK,IAAIlB,EAAI,EAAGA,EAAIkB,EAASsB,OAAQxC,IACpC43F,EAAS12F,EAASlB,GAAIkB,IAAWlB,GAAIkB,IAAWlB,IAG7CC,EAAOs2F,KAAUt2F,EAAOs2F,IAASl7E,EAAM5Z,GAE3CA,EAAY43F,MAAK,SAAAh+E,GAChB,IAEC5Z,EAAc4Z,EAACw9E,IACfx9E,EAACw9E,IAAoB,GACrBp3F,EAAY43F,MAAK,SAAA53F,GAEhBA,EAAGtB,KAAKkb,EACT,GAGD,CAFE,MAAO5Z,GACRxB,EAAOq2F,IAAa70F,EAAG4Z,EAACm7E,IACzB,CACD,GACD,CAEA,SAASkD,EAAUj4F,GAClB,MACgB,UAAAqO,EAARrO,IJpWW,MIqWlBA,GACCA,EAAI40F,KAAW50F,EAAI40F,IAAU,EAEvB50F,EAGJq/B,EAAQr/B,GACJA,EAAKoN,IAAI6qF,GAGVp5F,EAAO,CAAE,EAAEmB,EACnB,CAiBA,SAASk4F,EACRt+E,EACAna,EACAlB,EACAc,EACAL,EACA6G,EACAyqB,EACA1xB,EACA0B,GATD,IAeKgN,EAEA/M,EAEA09B,EAEAo/B,EACAx+D,EACA01F,EACA51F,EAbA4E,EAAWhF,EAASk2F,MACpBU,EAAW11F,EAASg1F,MACpBz2D,EAAkCv+B,EAAS2K,KAkB/C,GAJgB,OAAZ4zB,EAAmBh/B,EJhaK,6BIiaP,QAAZg/B,EAAoBh/B,EJ/ZA,qCIganBA,IAAWA,EJjaS,gCAGX,MIgaf6G,EACH,IAAKyH,EAAI,EAAGA,EAAIzH,EAAkB9E,OAAQuM,IAMzC,IALAzO,EAAQgH,EAAkByH,KAOzB,iBAAkBzO,KAAWm/B,IAC5BA,EAAWn/B,EAAMu5F,WAAap6D,EAA6B,GAAlBn/B,EAAM23F,UAC/C,CACD58E,EAAM/a,EACNgH,EAAkByH,GJ7aF,KI8ahB,KACD,CAIF,GJnbmB,MImbfsM,EAAa,CAChB,GJpbkB,MIobdokB,EACH,OAAO18B,SAAS+2F,eAAelD,GAGhCv7E,EAAMtY,SAASg3F,gBACdt5F,EACAg/B,EACAm3D,EAASoD,IAAMpD,GAKZv2F,IACCJ,EAAOg6F,KACVh6F,EAAOg6F,IAAoB/4F,EAAUoG,GACtCjH,GAAA,GAGDiH,EJtckB,IIucnB,CAEA,GJzcmB,MIycfm4B,EAECz6B,IAAa4xF,GAAcv2F,GAAegb,EAAIgP,MAAQusE,IACzDv7E,EAAIgP,KAAOusE,OAEN,CASN,GAPAtvF,EAAoBA,GAAqB7F,EAAMtB,KAAKkb,EAAI6+E,YAExDl1F,EAAWhF,EAASk2F,OAASp0F,GAKxBzB,GJvda,MIudEiH,EAEnB,IADAtC,EAAW,CAAC,EACP+J,EAAI,EAAGA,EAAIsM,EAAI0pB,WAAWviC,OAAQuM,IAEtC/J,GADA1E,EAAQ+a,EAAI0pB,WAAWh2B,IACRxO,MAAQD,EAAMW,MAI/B,IAAK8N,KAAK/J,EAET,GADA1E,EAAQ0E,EAAS+J,GACR,YAALA,QACO,GAAK,2BAALA,EACV2wB,EAAUp/B,OACJ,KAAMyO,KAAK6nF,GAAW,CAC5B,GACO,SAAL7nF,GAAgB,iBAAkB6nF,GAC7B,WAAL7nF,GAAkB,mBAAoB6nF,EAEvC,SAEDnuE,EAAYpN,EAAKtM,EJ3eD,KI2eUzO,EAAOG,EAClC,CAKD,IAAKsO,KAAK6nF,EACTt2F,EAAQs2F,EAAS7nF,GACR,YAALA,EACH+vD,EAAcx+D,EACC,2BAALyO,EACV/M,EAAU1B,EACK,SAALyO,EACVinF,EAAa11F,EACE,WAALyO,EACV3O,EAAUE,EAERD,GAA+B,mBAATC,GACxB0E,EAAS+J,KAAOzO,GAEhBmoB,EAAYpN,EAAKtM,EAAGzO,EAAO0E,EAAS+J,GAAItO,GAK1C,GAAIuB,EAGD3B,GACCq/B,IACA19B,EAAOm4F,QAAWz6D,EAAOy6D,QAAWn4F,EAAOm4F,QAAW9+E,EAAI3X,aAE5D2X,EAAI3X,UAAY1B,EAAOm4F,QAGxBj5F,EAAQi1F,IAAa,QAsBrB,GApBIz2D,IAASrkB,EAAI3X,UAAY,IAE7Bg0F,EAEkB,YAAjBx2F,EAAS2K,KAAqBwP,EAAI++E,QAAU/+E,EAC5CylB,EAAQg+B,GAAeA,EAAc,CAACA,GACtC59D,EACAlB,EACAc,EACY,iBAAZ2+B,EJ5hB2B,+BI4hBqBh/B,EAChD6G,EACAyqB,EACAzqB,EACGA,EAAkB,GAClBtH,EAAQm2F,KAAcU,EAAc72F,EAAU,GACjDK,EACA0B,GJhiBgB,MIoiBbuF,EACH,IAAKyH,EAAIzH,EAAkB9E,OAAQuM,KAClCgnF,EAAWzuF,EAAkByH,IAM3B1O,IACJ0O,EAAI,QACY,YAAZ0wB,GJ9iBa,MI8iBau2D,EAC7B36E,EAAIg9E,gBAAgB,SJ9iBC,MIgjBrBrC,IAKCA,IAAe36E,EAAItM,IACN,YAAZ0wB,IAA2Bu2D,GAIf,UAAZv2D,GAAwBu2D,GAAchxF,EAAS+J,KAEjD0Z,EAAYpN,EAAKtM,EAAGinF,EAAYhxF,EAAS+J,GAAItO,GAG9CsO,EAAI,UJ/jBkB,MIgkBlB3O,GAAwBA,GAAWib,EAAItM,IAC1C0Z,EAAYpN,EAAKtM,EAAG3O,EAAS4E,EAAS+J,GAAItO,GAG7C,CAEA,OAAO4a,CACR,CAQgB,SAAAu8E,EAASn2F,EAAK4Z,EAAOna,GACpC,IACC,GAAkB,mBAAPO,EAAmB,CAC7B,IAAIzB,EAAuC,mBAAhByB,EAAGi1F,IAC1B12F,GAEHyB,EAAGi1F,MAGC12F,GJzlBY,MIylBKqb,IAIrB5Z,EAAGi1F,IAAYj1F,EAAI4Z,GAErB,MAAO5Z,EAAI8rB,QAAUlS,CAGtB,CAFE,MAAO5Z,GACRxB,EAAOq2F,IAAa70F,EAAGP,EACxB,CACD,CASgB,SAAA82F,EAAQv2F,EAAO4Z,EAAana,GAA5B,IACXlB,EAsBMc,EAbV,GARIb,EAAQ+wB,SAAS/wB,EAAQ+wB,QAAQvvB,IAEhCzB,EAAIyB,EAAMuoB,OACThqB,EAAEutB,SAAWvtB,EAAEutB,SAAW9rB,EAAK60F,KACnCsB,EAAS53F,EJlnBQ,KIknBCqb,IJlnBD,OIsnBdrb,EAAIyB,EAAK80F,KAAsB,CACnC,GAAIv2F,EAAEq6F,qBACL,IACCr6F,EAAEq6F,sBAGH,CAFE,MAAO54F,GACRxB,EAAOq2F,IAAa70F,EAAG4Z,EACxB,CAGDrb,EAAE+2F,KAAO/2F,EAACq3F,IJ/nBQ,IIgoBnB,CAEA,GAAKr3F,EAAIyB,EAAK00F,IACb,IAASr1F,EAAI,EAAGA,EAAId,EAAEwC,OAAQ1B,IACzBd,EAAEc,IACLk3F,EACCh4F,EAAEc,GACFua,EACAna,GAAmC,mBAAdO,EAAMoK,MAM1B3K,GACJ60F,EAAWt0F,EAAK60F,KAGjB70F,EAAK80F,IAAc90F,EAAK20F,GAAW30F,EAAK60F,SAAA,CACzC,CAGA,SAASqC,EAASl3F,EAAOxB,EAAOob,GAC/B,OAAOlG,KAAKzF,YAAYjO,EAAO4Z,EAChC,CC3pBO,SAASi/E,EAAOj/E,EAAOna,EAAWlB,GAAlC,IAWFc,EAOAL,EAQA6G,EACHyqB,EAzBG7wB,GAAa6B,WAChB7B,EAAY6B,SAASmuC,iBAGlBjxC,EAAOm2F,IAAQn2F,EAAOm2F,GAAO/6E,EAAOna,GAYpCT,GAPAK,EAAoC,mBAAfd,GLRN,KKiBfA,GAAeA,EAAWm2F,KAAej1F,EAASi1F,IAMlD7uF,EAAc,GACjByqB,EAAW,GACZulE,EACCp2F,EAPDma,IAAWva,GAAed,GAAgBkB,GAASi1F,IAClDH,EAAcY,ELpBI,KKoBY,CAACv7E,IAU/B5a,GAAYqB,EACZA,EACAZ,EAAUs2F,cACT12F,GAAed,EACb,CAACA,GACDS,ELnCe,KKqCdS,EAAUq5F,WACT94F,EAAMtB,KAAKe,EAAUg5F,YLtCR,KKwClB5yF,GACCxG,GAAed,EACbA,EACAS,EACCA,EAAQ61F,IACRp1F,EAAUq5F,WACdz5F,EACAixB,GAID0lE,EAAWnwF,EAAa+T,EAAO0W,EAChC,CAOO,SAASyoE,EAAQ/4F,EAAOxB,GAC9Bq6F,EAAO74F,EAAOxB,EAAWu6F,EAC1B,C,4ML5EO,IF0BM/4F,EQhBPxB,EPPFob,EA2FSna,EEmFTlB,EAWAc,EAEEL,EA0BA6G,EE1MAyqB,EAaF1xB,EAkJE0B,EACAgN,EH7JOjN,EAAgC,CAAG,EACnC49B,EAAY,GACZo/B,EACZ,oEFnBYh+B,EAAUxuB,MAAMmoF,QAyBhBh5F,EAAQi+B,EAAUtsB,MQhBzBnT,EAAU,CACfq2F,ICDM,SAAqB70F,EAAOxB,EAAOob,EAAUna,GAQnD,IANA,IAAIlB,EAEHc,EAEAL,EAEOR,EAAQA,EAAKm2F,IACpB,IAAKp2F,EAAYC,EAAKs2F,OAAiBv2F,EAASo2F,GAC/C,IAcC,IAbAt1F,EAAOd,EAAU0P,cPND,MOQJ5O,EAAK45F,2BAChB16F,EAAU26F,SAAS75F,EAAK45F,yBAAyBj5F,IACjDhB,EAAUT,EAASi3F,KPVJ,MOaZj3F,EAAU46F,oBACb56F,EAAU46F,kBAAkBn5F,EAAOP,GAAa,CAAE,GAClDT,EAAUT,EAASi3F,KAIhBx2F,EACH,OAAQT,EAAS04F,IAAiB14F,CAIpC,CAFE,MAAOC,GACRwB,EAAQxB,CACT,CAIF,MAAMwB,CACP,GRzCI4Z,EAAU,EA2FDna,EAAiB,SAAAO,GAAK,OC/Ef,MDgFnBA,GC/EwB,MD+EPA,EAAMiO,WAAwB,EErEhD+vB,EAAc79B,UAAU+4F,SAAW,SAAUl5F,EAAQxB,GAEpD,IAAIob,EAEHA,EDfkB,MCcflG,KAAI4jF,KAAuB5jF,KAAI4jF,KAAe5jF,KAAKgyD,MAClDhyD,KAAI4jF,IAEJ5jF,KAAI4jF,IAAcz4F,EAAO,CAAE,EAAE6U,KAAKgyD,OAGlB,mBAAV1lE,IAGVA,EAASA,EAAOnB,EAAO,CAAC,EAAG+a,GAAIlG,KAAK+gF,QAGjCz0F,GACHnB,EAAO+a,EAAG5Z,GD3BQ,MC+BfA,GAEA0T,KAAIqhF,MACHv2F,GACHkV,KAAI2jF,IAAiBzqF,KAAKpO,GAE3B+2F,EAAc7hF,MAEhB,EAQAsqB,EAAc79B,UAAUi5F,YAAc,SAAUp5F,GAC3C0T,KAAIqhF,MAIPrhF,KAAImhF,KAAA,EACA70F,GAAU0T,KAAI0jF,IAAkBxqF,KAAK5M,GACzCu1F,EAAc7hF,MAEhB,EAYAsqB,EAAc79B,UAAUM,OAAS00F,EA8F7B52F,EAAgB,GAadS,EACa,mBAAXyK,QACJA,QAAQtJ,UAAUoL,KAAKxL,KAAK0J,QAAQC,WACpCmZ,WAuBEhd,EAAY,SAAC7F,EAAGxB,GAAA,OAAMwB,EAAC+0F,IAAAH,IAAiBp2F,EAACu2F,IAAAH,GAAc,EA8B7Da,EAAOC,IAAkB,EExOnBplE,EAAgB,8BAalB1xB,EAAa,EAkJX0B,EAAaw2F,GAAA,GACbxpF,EAAoBwpF,GAAA,E,oCKxC1B,SAASz2F,EAAaL,EAAOP,GACxBb,GAAOw4F,KACVx4F,GAAOw4F,IAAO/3F,EAAkBW,EAAOhB,GAAeS,GAEvDT,EAAc,EAOd,IAAM4a,EACLva,EAAgBg6F,MACfh6F,EAAgBg6F,IAAW,CAC3B1E,GAAO,GACPyC,IAAiB,KAOnB,OAJIp3F,GAAS4Z,EAAK+6E,GAAO5zF,QACxB6Y,EAAK+6E,GAAO/nF,KAAK,CAAE,GAGbgN,EAAK+6E,GAAO30F,EACpB,CAOO,SAASnB,EAASmB,GAExB,OADAhB,EAAc,EAYC,SAAWgB,EAAS4Z,EAAcrb,GAEjD,IAAMS,EAAYqB,EAAaZ,IAAgB,GAE/C,GADAT,EAAUS,EAAWO,GAChBhB,EAAS81F,MACb91F,EAAS21F,GAAU,CACjBp2F,EAAiDA,EAAKqb,GAA/Cs9E,OAAA,EAA0Bt9E,GAElC,SAAA5Z,GACC,IAAMP,EAAeT,EAASs6F,IAC3Bt6F,EAASs6F,IAAY,GACrBt6F,EAAS21F,GAAQ,GACdt1F,EAAYL,EAAUS,EAASA,EAAcO,GAE/CP,IAAiBJ,IACpBL,EAASs6F,IAAc,CAACj6F,EAAWL,EAAS21F,GAAQ,IACpD31F,EAAS81F,IAAYoE,SAAS,CAAE,GAElC,GAGDl6F,EAAS81F,IAAcz1F,GAElBA,EAAgBk6F,KAAmB,KAgC9BjpE,EAAT,SAAyBtwB,EAAGP,EAAGJ,GAC9B,IAAKL,EAAS81F,IAAAuE,IAAqB,OAAO,EAG1C,IACMz/E,EACL5a,EAAS81F,IAAAuE,IAAA1E,GAA0B3+E,QAFhB,SAAAhW,GAAC,QAAMA,EAAC80F,GAAW,IAOvC,GAHsBl7E,EAAW4/E,OAAM,SAAAx5F,GAAC,OAAKA,EAACs5F,GAAW,IAIxD,OAAO16F,GAAUA,EAAQF,KAAKgV,KAAM1T,EAAGP,EAAGJ,GAM3C,IAAId,EAAeS,EAAS81F,IAAYL,QAAUz0F,EAUlD,OATA4Z,EAAWkI,SAAQ,SAAA9hB,GAClB,GAAIA,EAAQs5F,IAAa,CACxB,IAAM75F,EAAeO,EAAQ20F,GAAQ,GACrC30F,EAAQ20F,GAAU30F,EAAQs5F,IAC1Bt5F,EAAQs5F,SAAA,EACJ75F,IAAiBO,EAAQ20F,GAAQ,KAAIp2F,GAAA,EAC1C,CACD,IAEOK,GACJA,EAAQF,KAAKgV,KAAM1T,EAAGP,EAAGJ,IACzBd,CACJ,EA9DAc,EAAgBk6F,KAAA,EAChB,IAAI36F,EAAUS,EAAiBs4F,sBACzB9xF,EAAUxG,EAAiBw4F,oBAKjCx4F,EAAiBw4F,oBAAsB,SAAU73F,EAAGP,EAAGJ,GACtD,GAAIqU,KAAImhF,IAAS,CAChB,IAAIj7E,EAAMhb,EAEVA,OAAA,EACA0xB,EAAgBtwB,EAAGP,EAAGJ,GACtBT,EAAUgb,CACX,CAEI/T,GAASA,EAAQnH,KAAKgV,KAAM1T,EAAGP,EAAGJ,EACvC,EA+CAA,EAAiBs4F,sBAAwBrnE,CAC1C,CAGD,OAAOtxB,EAASs6F,KAAet6F,EAAS21F,EACzC,CAxGQp0F,CAAW22F,EAAgBl3F,EACnC,CA8GO,SAASi+B,EAAUj+B,EAAU4Z,GAEnC,IAAMrb,EAAQ8B,EAAaZ,IAAgB,IACtCb,GAAO04F,KAAiBjC,EAAY92F,EAAK86F,IAAQz/E,KACrDrb,EAAKo2F,GAAU30F,EACfzB,EAAMqb,EAAeA,EAErBva,EAAgBg6F,IAAAjC,IAAyBxqF,KAAKrO,GAEhD,CAmBO,SAAS63F,EAAOp2F,GAEtB,OADAhB,EAAc,EACPy3F,GAAQ,WAAO,OAAE3qE,QAAS9rB,EAAc,GAAG,GACnD,CAiCgB,SAAAy2F,EAAQz2F,EAASX,GAEhC,IAAMua,EAAQvZ,EAAaZ,IAAgB,GAO3C,OANI41F,EAAYz7E,EAAKy/E,IAAQh6F,KAC5Bua,EAAK+6E,GAAU30F,IACf4Z,EAAKy/E,IAASh6F,EACdua,EAAKw9E,IAAYp3F,GAGX4Z,EAAK+6E,EACb,CA4FA,SAAS3tE,IAER,IADA,IAAIhnB,EACIA,EAAYswB,GAAkBxc,SACrC,GAAK9T,EAAS41F,KAAgB51F,EAASq5F,IACvC,IACCr5F,EAASq5F,IAAAjC,IAAyBt1E,QAAQk0E,GAC1Ch2F,EAASq5F,IAAAjC,IAAyBt1E,QAAQy0E,GAC1Cv2F,EAASq5F,IAAAjC,IAA2B,EAIrC,CAHE,MAAO33F,GACRO,EAASq5F,IAAAjC,IAA2B,GACpCx4F,GAAOi2F,IAAap1F,EAAGO,EAAS+0F,IACjC,CAEF,CAcA,SAAS11D,EAAer/B,GACvB,IAOIP,EAPEJ,EAAO,WACZo6F,aAAa7/E,GACTu7E,IAASuE,qBAAqBj6F,GAClCojB,WAAW7iB,EACZ,EACM4Z,EAAUiJ,WAAWxjB,EAlcR,KAqcf81F,KACH11F,EAAMgoC,sBAAsBpoC,GAE9B,CAqBA,SAAS22F,EAAch2F,GAGtB,IAAMP,EAAOJ,EACTua,EAAU5Z,EAAI80F,IACI,mBAAXl7E,IACV5Z,EAAI80F,SAAA,EACJl7E,KAGDva,EAAmBI,CACpB,CAOA,SAAS82F,EAAav2F,GAGrB,IAAMP,EAAOJ,EACbW,EAAI80F,IAAY90F,EAAI20F,KACpBt1F,EAAmBI,CACpB,CAOA,SAAS41F,EAAYr1F,EAASP,GAC7B,OACEO,GACDA,EAAQe,SAAWtB,EAAQsB,QAC3BtB,EAAQm4F,MAAK,SAACn4F,EAAKJ,GAAU,OAAAI,IAAQO,EAAQX,EAAM,GAErD,CAQA,SAAS63F,EAAel3F,EAAKP,GAC5B,MAAmB,mBAALA,EAAkBA,EAAEO,GAAOP,CAC1C,CC/fA,SAASA,IACR,GAAIa,GAAa,EAChBA,SADD,CAQA,IAHA,IAAI/B,EACAkB,GAAA,OAEG,IAAAc,IAA6B,CACnC,IAAIlB,EAA6BkB,GAKjC,IAJAA,QAAA,EAEA+vB,UAEO,IAAAjxB,GAAsB,CAC5B,IAAML,EAA2BK,EAAOL,EAIxC,GAHAK,EAAOL,OAAA,EACPK,EAAOixB,IAAU,IAlDH,EAoDRjxB,EAAOixB,IAAsB1xB,EAAiBS,GACnD,IACCA,EAAOT,GAMP,CALC,MAAOS,GACHI,IACJlB,EAAQc,EACRI,GAAA,EAED,CAEFJ,EAASL,CACT,CACD,CAID,GAHAsxB,GAAiB,EACjBhwB,KAEIb,EACH,MAAMlB,CAjCN,CAmCF,CAcA,SAASc,EAASd,GACjB,GAAI+B,GAAa,EAChB,OAAO/B,IA1DR+B,KA6DA,IACC,OAAO/B,GAGP,CAFC,QACDkB,GACA,CACF,CA+BA,SAASoG,EAActH,GACtB,QAAI,IAAAS,GAAJ,CAIA,IAAIS,EAAOlB,EAAOyB,EAClB,QAAI,IAAAP,GAAsBA,EAAKA,IAAYT,GAmC1C,OAtBAS,EAAO,CACNlB,EAAU,EACV62F,EAAS72F,EACT8B,EAAarB,GAAYsB,EACzBN,OAAA,EACAP,EAAST,GACT6G,OAAA,EACAm4B,OAAA,EACA3+B,EAAeI,QAGZ,IAAAT,GAAYsB,IACftB,GAAYsB,EAASN,EAAcP,GAEpCT,GAAYsB,EAAWb,EACvBlB,EAAOyB,EAAQP,EA9JA,GAkKXT,GAAYsxB,GACf/xB,EAAO62F,EAAW31F,GAEZA,EACG,IAAmB,IAAnBA,EAAKlB,EAiCf,OA/BAkB,EAAKlB,EAAW,OAeZ,IAAAkB,EAAKO,IACRP,EAAKO,EAAYK,EAAcZ,EAAKY,OAEhC,IAAAZ,EAAKY,IACRZ,EAAKY,EAAYL,EAAcP,EAAKO,GAGrCP,EAAKY,EAAcrB,GAAYsB,EAC/Bb,EAAKO,OAAA,EAELhB,GAAYsB,EAAUN,EAAcP,EACpCT,GAAYsB,EAAWb,GAKjBA,CAxEP,CA2EF,CAgEA,SAASma,EAAqBrb,GAC7BmV,KAAK2pD,EAAS9+D,EACdmV,KAAKnV,EAAW,EAChBmV,KAAK1T,OAAA,EACL0T,KAAKjU,OAAA,CACN,CAmHM,SAAUZ,EAAUN,GACzB,OAAW,IAAAqb,EAAOrb,EACnB,CAEA,SAASK,EAAiBL,GAIzB,IACC,IAAIkB,EAAOlB,EAAO+B,OAAA,IAClBb,EACAA,EAAOA,EAAKO,EAKZ,GACCP,EAAK21F,EAAQ72F,IAAakB,EAAKlB,IAC9BkB,EAAK21F,EAAQ70F,KACdd,EAAK21F,EAAQ72F,IAAakB,EAAKlB,EAE/B,OAAO,EAKT,OAAO,CACR,CAEA,SAAS+O,EAAe/O,GAavB,IACC,IAAIkB,EAAOlB,EAAO+B,OAAA,IAClBb,EACAA,EAAOA,EAAKO,EACX,CACD,IAAMX,EAAeI,EAAK21F,EAAQp1F,EAOlC,QANI,IAAAX,IACHI,EAAKJ,EAAgBA,GAEtBI,EAAK21F,EAAQp1F,EAAQP,EACrBA,EAAKlB,GAAY,OAEb,IAAAkB,EAAKO,EAA2B,CACnCzB,EAAO+B,EAAWb,EAClB,KACA,CACD,CACF,CAEA,SAASjB,EAAeD,GASvB,IARA,IAAIkB,EAAOlB,EAAO+B,EACdjB,OAAA,OAOG,IAAAI,GAAoB,CAC1B,IAAMT,EAAOS,EAAKY,GAUK,IAAnBZ,EAAKlB,GACRkB,EAAK21F,EAAQuE,EAAal6F,QAEtB,IAAAT,IACHA,EAAKgB,EAAcP,EAAKO,QAErB,IAAAP,EAAKO,IACRP,EAAKO,EAAYK,EAAcrB,IAahCK,EAAOI,EAGRA,EAAK21F,EAAQp1F,EAAQP,EAAKJ,OACtB,IAAAI,EAAKJ,IACRI,EAAKJ,OAAA,GAGNI,EAAOT,CACP,CAEDT,EAAO+B,EAAWjB,CACnB,CAcA,SAAS4+B,EAAyB1/B,GACjCqb,EAAOlb,KAAKgV,UAAM,GAElBA,KAAKsqB,EAAMz/B,EACXmV,KAAKpT,OAAA,EACLoT,KAAK4gF,EAAiBj3B,GAAgB,EACtC3pD,KAAK4c,EA1gBW,CA2gBjB,CAqJA,SAAS+O,EAAY9gC,GACpB,OAAW,IAAA0/B,EAAS1/B,EACrB,CAEA,SAASg2F,EAAch2F,GACtB,IAAMc,EAAUd,EAAOqb,EAGvB,GAFArb,EAAOqb,OAAA,EAEgB,mBAAZva,EAAwB,CA1oBnCiB,KA8oBC,IAAMN,EAAchB,GACpBA,QAAA,EACA,IACCK,GASA,CARC,MAAOI,GAIR,MAHAlB,EAAO+xB,IAAU,EACjB/xB,EAAO+xB,GAjrBO,EAkrBdgkE,EAAc/1F,GACRkB,CACN,SACAT,GAAcgB,EACdP,GACA,CACD,CACF,CAEA,SAAS60F,EAAc/1F,GACtB,IACC,IAAIkB,EAAOlB,EAAO+B,OAAA,IAClBb,EACAA,EAAOA,EAAKO,EAEZP,EAAK21F,EAAQuE,EAAal6F,GAE3BlB,EAAOy/B,OAAA,EACPz/B,EAAO+B,OAAA,EAEPi0F,EAAch2F,EACf,CAEA,SAAS8B,EAAwB9B,GAChC,GAAIS,KAAgB0U,KACnB,MAAM,IAAIpI,MAAM,uBAEjB9M,EAAekV,MACf1U,GAAcT,EAEdmV,KAAK4c,IAAU,EAhtBC,EAitBZ5c,KAAK4c,GACRgkE,EAAc5gF,MAEfjU,GACD,CAmBA,SAAS8D,EAAqBhF,GAC7BmV,KAAKsqB,EAAMz/B,EACXmV,KAAKkG,OAAA,EACLlG,KAAKpT,OAAA,EACLoT,KAAK1U,OAAA,EACL0U,KAAK4c,EA3uBW,EA4uBjB,CA6DA,SAASuoE,EAAOt6F,GACf,IAAMkB,EAAS,IAAI8D,EAAOhF,GAC1B,IACCkB,EAAOb,GAIP,CAHC,MAAOL,GAER,MADAkB,EAAOZ,IACDN,CACN,CAGD,OAAOkB,EAAOZ,EAASkB,KAAKN,EAC7B,CC/wBA,SAASd,EAA6BJ,EAAac,GAElDW,IAAQzB,GAAYc,EAAOU,KAAK,KAAMC,IAAQzB,IAAc,WAAO,EACpE,CAKA,SAASg2F,EAAkBh2F,GAEtBC,IAAcA,KAElBA,GAAeD,GAAWA,EAAQ62F,GACnC,CAwBA,SAASd,EAAW/1F,GAAqD,IAAAyB,EAAxB,KAAAswB,EAAI/xB,EAAJqqB,KAK1C5pB,EAiSP,SAI6BT,GAC5B,OAAOkB,GAAQ,kBAAMb,EAAsBL,EAAM,GAAE,GACpD,CAvSuBq7F,CAAUtpE,GAChCtxB,EAAcQ,MAAQ8wB,EAEtB,IAAA1W,EAAoBna,GAAQ,WAI3B,IAHA,IAAIlB,EAAOyB,EAEPP,EAAIO,EAAK+0F,IACLt1F,EAAIA,EAAEk1F,OACTl1F,EAAEq1F,IAAK,CACVr1F,EAAEq1F,IAAI+E,MAjEY,EAkElB,KACA,CAGF,IAAMvpE,EAAgBhjB,GAAS,WAC9B,IAAI/O,EAAIS,EAAcQ,MAAMA,MAC5B,OAAa,IAANjB,EAAU,GAAI,IAAAA,EAAa,GAAKA,GAAK,EAC7C,IAEMqb,EAAStM,GACd,kBACEuD,MAAMmoF,QAAQ1oE,EAAc9wB,SAC5BH,YAAeixB,EAAc9wB,MAAM,IAIhCZ,EAAUiH,GAAO,YACtB6N,KAAKukF,EAAUnB,EAGXl9E,EAAOpa,SAKNjB,EAAKw2F,KAAOx2F,EAAKw2F,IAAIF,KAAiC,IAA1Bt2F,EAAKw2F,IAAIF,IAAI2B,WAC3Cj4F,EAAKw2F,IAAIF,IAAajsE,KAFV0H,EAAc9wB,OAK9B,IAIM69D,EAAar9D,EAAK85F,KAAUj7F,EAMlC,OALAmB,EAAK85F,KAAUj7F,EAAW,WACzBD,IACAy+D,EAAW3+D,KAAKgV,KACjB,EAEO,CAACkG,EAAQ0W,EACjB,GAAG,IA/CY+sC,EAACzjD,EA0DhB,UA1DaA,EAAA,GA0DCpa,MAAQ69D,EAAE08B,OAAS18B,EAAE79D,KACpC,CAgHA,SAAS+D,EACRhF,EACAyB,EACAX,EACAI,GAEA,IAAM6wB,EACLtwB,KAAQzB,QAAA,IAIRA,EAAIy7F,gBAECh7F,EAAeJ,EAAOS,GAC5B,MAAO,CACNL,EAAS,SAACT,EAAmByB,GAC5BhB,EAAaQ,MAAQjB,EACrBkB,EAAQO,CACT,EACAnB,EAAUgH,GAAO,WAChB6N,KAAKukF,EAAUnB,EACf,IAAMz3F,EAAQL,EAAaQ,MAAMA,MAE7BC,EAAMO,KAAUX,IACpBI,EAAMO,GAAQX,EACVixB,EAEH/xB,EAAIyB,GAAQX,EACFA,EACVd,EAAIs4F,aAAa72F,EAAMX,GAEvBd,EAAIq4F,gBAAgB52F,GAEtB,IAEF,CAkIA,SAASq/B,IACRg+B,GAAM,WAEL,IADA,IAAI9+D,EACIA,EAAO8B,GAASyT,SACvBxT,GAAU5B,KAAKH,EAEjB,GACD,CAEA,SAASu4F,IACoB,IAAxBz2F,GAASuM,KAAK8G,QAChB1T,IAAQynC,uBAAyB0tD,IAAiB91D,EAErD,C,4iGCjaA,SAAS46D,EAAUC,GAClB,IACIC,EADAr7F,EAAOo7F,EAAQ,IAMnB,GAHsB,oBAAXnoF,SACVooF,EAAK74F,SAAS84F,OAAOrkF,MAAM,OAEvBokF,EACJ,MAAO,GAER,IAAK,IAAI57F,EAAI,EAAGA,EAAI47F,EAAGp5F,OAAQxC,IAAK,CAEnC,IADA,IAAIK,EAAIu7F,EAAG57F,GACW,KAAfK,EAAEqW,OAAO,IACfrW,EAAIA,EAAEoT,UAAU,GAEjB,GAAuB,GAAnBpT,EAAEyrB,QAAQvrB,GACb,OAAOF,EAAEoT,UAAUlT,EAAKiC,OAAQnC,EAAEmC,OAEpC,CACA,MAAO,EACR,C,WHzCItB,EAGAJ,EAGAua,EAmBArb,E,YAhBAS,EAAc,EAGdsxB,GAAoB,GAGlB1xB,GAAuDoB,IAEzD6F,GAAgBjH,GAAOg2F,IACvBtnF,GAAkB1O,GAAO82F,IACzBr4B,GAAez+D,GAAQu5F,OACvB35F,GAAYI,GAAOk2F,IACnBn2F,GAAmBC,GAAQ2wB,QAC3BjvB,GAAU1B,GAAO+1F,GAMrB/1F,GAAOg2F,IAAS,SAAA50F,GACfX,EAAmB,KACfwG,IAAeA,GAAc7F,EAClC,EAEApB,GAAO+1F,GAAS,SAAC30F,EAAOP,GACnBO,GAASP,EAASi1F,KAAcj1F,EAASi1F,IAAA8D,MAC5Cx4F,EAAKw4F,IAAS/4F,EAASi1F,IAAA8D,KAGpBl4F,IAASA,GAAQN,EAAOP,EAC7B,EAGAb,GAAO82F,IAAW,SAAA11F,GACbsN,IAAiBA,GAAgBtN,GAGrCP,EAAe,EAEf,IAAMlB,GAHNc,EAAmBW,EAAK80F,KAGMuE,IAC1B96F,IACCqb,IAAsBva,GACzBd,EAAK64F,IAAmB,GACxB/3F,EAAgB+3F,IAAoB,GACpC74F,EAAKo2F,GAAO7yE,SAAQ,SAAA9hB,GACfA,EAAQs5F,MACXt5F,EAAQ20F,GAAU30F,EAAQs5F,KAE3Bt5F,EAAS4Z,EAAe5Z,EAAQs5F,SAAA,CACjC,MAEA/6F,EAAK64F,IAAiBt1E,QAAQk0E,GAC9Bz3F,EAAK64F,IAAiBt1E,QAAQy0E,GAC9Bh4F,EAAK64F,IAAmB,GACxB33F,EAAe,IAGjBma,EAAoBva,CACrB,EAGAT,GAAQu5F,OAAS,SAAAn4F,GACZq9D,IAAcA,GAAar9D,GAE/B,IAAMP,EAAIO,EAAK80F,IACXr1F,GAAKA,EAAC45F,MACL55F,EAAC45F,IAAAjC,IAAyBr2F,SAgaR,IAha2BuvB,GAAkB1jB,KAAKnN,IAga7ClB,IAAYK,GAAQ6oC,yBAC/ClpC,EAAUK,GAAQ6oC,wBACNpI,GAAgBrY,IAja5BvnB,EAAC45F,IAAA1E,GAAe7yE,SAAQ,SAAA9hB,GACnBA,EAAS4Z,IACZ5Z,EAAQq5F,IAASr5F,EAAS4Z,GAE3B5Z,EAAS4Z,OAAA,CACV,KAEDA,EAAoBva,EAAmB,IACxC,EAIAT,GAAOk2F,IAAW,SAAC90F,EAAOP,GACzBA,EAAYm4F,MAAK,SAAA53F,GAChB,IACCA,EAASo3F,IAAkBt1E,QAAQk0E,GACnCh2F,EAASo3F,IAAoBp3F,EAASo3F,IAAkBphF,QAAO,SAAAhW,GAAE,OAChEA,EAAE20F,IAAU4B,EAAav2F,EAAU,GAQrC,CANE,MAAOX,GACRI,EAAYm4F,MAAK,SAAA53F,GACZA,EAACo3F,MAAmBp3F,EAACo3F,IAAoB,GAC9C,IACA33F,EAAc,GACdb,GAAOi2F,IAAax1F,EAAGW,EAAS+0F,IACjC,CACD,IAEIv2F,IAAWA,GAAUwB,EAAOP,EACjC,EAGAb,GAAQ2wB,QAAU,SAAAvvB,GACbrB,IAAkBA,GAAiBqB,GAEvC,IAEKP,EAFCJ,EAAIW,EAAK80F,IACXz1F,GAAKA,EAACg6F,MAETh6F,EAACg6F,IAAA1E,GAAe7yE,SAAQ,SAAA9hB,GACvB,IACCg2F,EAAch2F,EAGf,CAFE,MAAOA,GACRP,EAAaO,CACd,CACD,IACAX,EAACg6F,SAAA,EACG55F,GAAYb,GAAOi2F,IAAap1F,EAAYJ,EAAC01F,KAEnD,EA4UA,IAAII,GAA0C,mBAAzB1tD,sBCzcflpC,GAAee,OAAA+6F,IAAW,kBAwG5Br7F,QAAA,EAoBAuB,QAAA,EACAD,GAAa,EACbgwB,GAAiB,EAIjB+sC,GAAgB,EAuJpBzjD,EAAOzZ,UAAUm6F,MAAQ/7F,GAEzBqb,EAAOzZ,UAAUI,EAAW,WAC3B,OAAO,CACR,EAEAqZ,EAAOzZ,UAAUi1F,EAAa,SAAU72F,GACnCmV,KAAKjU,IAAalB,QAAA,IAAQA,EAAKsH,IAClCtH,EAAKy/B,EAActqB,KAAKjU,OACpB,IAAAiU,KAAKjU,IACRiU,KAAKjU,EAASoG,EAActH,GAE7BmV,KAAKjU,EAAWlB,EAElB,EAEAqb,EAAOzZ,UAAUw5F,EAAe,SAAUp7F,GAEzC,QAAI,IAAAmV,KAAKjU,EAAwB,CAChC,IAAMA,EAAOlB,EAAKsH,EACZxG,EAAOd,EAAKy/B,OACd,IAAAv+B,IACHA,EAAKu+B,EAAc3+B,EACnBd,EAAKsH,OAAA,QAEF,IAAAxG,IACHA,EAAKwG,EAAcpG,EACnBlB,EAAKy/B,OAAA,GAEFz/B,IAASmV,KAAKjU,IACjBiU,KAAKjU,EAAWJ,EAEjB,CACF,EAEAua,EAAOzZ,UAAUo6F,UAAY,SAAUh8F,GAAE,IAAAkB,EACxC,YAAOo5F,GAAO,WACb,IAAMx5F,EAAQI,EAAKD,MAEbQ,EAAchB,GACpBA,QAAA,EACA,IACCT,EAAGc,EAGH,CAFC,QACDL,GAAcgB,CACd,CACF,GACD,EAEA4Z,EAAOzZ,UAAUq6F,QAAU,WAC1B,OAAO9mF,KAAKlU,KACb,EAEAoa,EAAOzZ,UAAUkiB,SAAW,WAC3B,OAAO3O,KAAKlU,MAAQ,EACrB,EAEAoa,EAAOzZ,UAAUs6F,OAAS,WACzB,OAAW,KAACj7F,KACb,EAEAoa,EAAOzZ,UAAU45F,KAAO,WACvB,IAAMx7F,EAAcS,GACpBA,QAAA,EACA,IACC,OAAO0U,KAAKlU,KAGZ,CAFC,QACDR,GAAcT,CACd,CACF,EAEAU,OAAOC,eAAe0a,EAAOzZ,UAAW,QAAS,CAChDf,IAAG,WACF,IAAMb,EAAOsH,EAAc6N,MAI3B,YAHI,IAAAnV,IACHA,EAAKA,EAAWmV,KAAKnV,GAEX,KAAC8+D,CACb,EACA1vD,IAAA,SAAkBpP,GACjB,GAAIA,IAAUmV,KAAK2pD,EAAQ,CAC1B,GAAI/sC,GAAiB,IACpB,MAAM,IAAIhlB,MAAM,kBAGjBoI,KAAK2pD,EAAS9+D,EACdmV,KAAKnV,IACL8+D,KA7UF/8D,KAgVE,IACC,IACC,IAAIjB,EAAOqU,KAAKjU,OAAA,IAChBJ,EACAA,EAAOA,EAAK2+B,EAEZ3+B,EAAKI,EAAQw4F,GAId,CAFC,QACDx4F,GACA,CACD,CACF,KAmJDw+B,EAAS99B,UAAY,IAAIyZ,GAENrZ,EAAW,WAG7B,GAFAmT,KAAK4c,IAAU,EAlhBA,EAohBX5c,KAAK4c,EACR,OAAO,EAMR,GAthBgB,KAshBI,GAAf5c,KAAK4c,GACT,OAAO,EAIR,GAFA5c,KAAK4c,IAAU,EAEX5c,KAAK4gF,IAAmBj3B,GAC3B,OAAO,EAOR,GALA3pD,KAAK4gF,EAAiBj3B,GAItB3pD,KAAK4c,GAviBU,EAwiBX5c,KAAKnV,EAAW,IAAMK,EAAiB8U,MAE1C,OADAA,KAAK4c,IAAU,GACR,EAGR,IAAM/xB,EAAcS,GACpB,IACCsO,EAAeoG,MACf1U,GAAc0U,KACd,IAAMjU,EAAQiU,KAAKsqB,KA7iBH,GA+iBftqB,KAAK4c,GACL5c,KAAK2pD,IAAW59D,GACE,IAAlBiU,KAAKnV,KAELmV,KAAK2pD,EAAS59D,EACdiU,KAAK4c,IAAU,GACf5c,KAAKnV,IAMN,CAJC,MAAOA,GACRmV,KAAK2pD,EAAS9+D,EACdmV,KAAK4c,GAzjBW,GA0jBhB5c,KAAKnV,GACL,CAID,OAHAS,GAAcT,EACdC,EAAekV,MACfA,KAAK4c,IAAU,GACR,CACR,EAEA2N,EAAS99B,UAAUi1F,EAAa,SAAU72F,GACzC,QAAI,IAAAmV,KAAKjU,EAAwB,CAChCiU,KAAK4c,GAAU,GAIf,IACC,IAAI7wB,EAAOiU,KAAKpT,OAAA,IAChBb,EACAA,EAAOA,EAAKO,EAEZP,EAAK21F,EAAQA,EAAW31F,EAEzB,CACDma,EAAOzZ,UAAUi1F,EAAW12F,KAAKgV,KAAMnV,EACxC,EAEA0/B,EAAS99B,UAAUw5F,EAAe,SAAUp7F,GAE3C,QAAI,IAAAmV,KAAKjU,IACRma,EAAOzZ,UAAUw5F,EAAaj7F,KAAKgV,KAAMnV,QAIrC,IAAAmV,KAAKjU,GAAwB,CAChCiU,KAAK4c,IAAU,GAEf,IACC,IAAI7wB,EAAOiU,KAAKpT,OAAA,IAChBb,EACAA,EAAOA,EAAKO,EAEZP,EAAK21F,EAAQuE,EAAal6F,EAE3B,CAEH,EAEAw+B,EAAS99B,UAAU83F,EAAU,WAC5B,KA5mBgB,EA4mBVvkF,KAAK4c,GAAoB,CAC9B5c,KAAK4c,GAAU,EAEf,IACC,IAAI/xB,EAAOmV,KAAKjU,OAAA,IAChBlB,EACAA,EAAOA,EAAKy/B,EAEZz/B,EAAKkB,EAAQw4F,GAEd,CACF,EAEAh5F,OAAOC,eAAe++B,EAAS99B,UAAW,QAAS,CAClDf,IAAA,WACC,GA5nBc,EA4nBVsU,KAAK4c,EACR,MAAM,IAAIhlB,MAAM,kBAEjB,IAAM/M,EAAOsH,EAAc6N,MAK3B,GAJAA,KAAKnT,SACD,IAAAhC,IACHA,EAAKA,EAAWmV,KAAKnV,GA9nBN,GAgoBZmV,KAAK4c,EACR,MAAM5c,KAAK2pD,EAEZ,OAAO3pD,KAAK2pD,CACb,IA2GD95D,EAAOpD,UAAUvB,EAAY,WAC5B,IAAML,EAASmV,KAAK0hF,IACpB,IACC,GAnvBe,EAmvBX1hF,KAAK4c,EAAmB,OAC5B,QAAI,IAAA5c,KAAKsqB,EAAmB,OAE5B,IAAMv+B,EAAUiU,KAAKsqB,IACE,mBAAZv+B,IACViU,KAAKkG,EAAWna,EAIjB,CAFC,QACDlB,GACA,CACF,EAEAgF,EAAOpD,UAAUi1F,EAAS,WACzB,GAnwBe,EAmwBX1hF,KAAK4c,EACR,MAAM,IAAIhlB,MAAM,kBAEjBoI,KAAK4c,GAtwBU,EAuwBf5c,KAAK4c,IAAU,EACfikE,EAAc7gF,MACdpG,EAAeoG,MAzuBfpT,KA4uBA,IAAM/B,EAAcS,GAEpB,OADAA,GAAc0U,KACPrT,EAAUN,KAAK2T,KAAMnV,EAC7B,EAEAgF,EAAOpD,UAAU83F,EAAU,WAhxBV,EAixBVvkF,KAAK4c,IACV5c,KAAK4c,GAlxBU,EAmxBf5c,KAAK1U,EAAqBuB,GAC1BA,GAAgBmT,KAElB,EAEAnQ,EAAOpD,UAAUtB,EAAW,WAC3B6U,KAAK4c,GAvxBW,EAHD,EA4xBT5c,KAAK4c,GACVgkE,EAAc5gF,KAEhB,ECrwBA,IAIIpT,GAkBA9B,GAhBH6B,GAA0B,GAK3BwF,GAAO,WACNvF,GAAYoT,KAAKukF,CAClB,GAFApyF,GA8GAyuF,EAAYoG,YAAc,MAE1Bz7F,OAAOg2B,iBAAiBrb,EAAOzZ,UAAW,CACzC8N,YAAa,CAAE0sF,cAAA,EAAoBn7F,WAAA,GACnC4K,KAAM,CAAEuwF,cAAA,EAAoBn7F,MAAO80F,GACnCG,MAAO,CACNkG,cAAA,EACAv7F,IAAG,WACF,MAAO,CAAEwpB,KAAMlV,KAChB,GAKDkhF,IAAK,CAAE+F,cAAA,EAAoBn7F,MAAO,KAInCb,EAAA,OAAwB,SAACJ,EAAKyB,GAC7B,GAA0B,iBAAfA,EAAMoK,KAAmB,CACnC,IAAI/K,EAEAI,EAAQO,EAAMy0F,MAClB,IAAK,IAAInkE,KAAK7wB,EACb,GAAU,aAAN6wB,EAAJ,CAEA,IAAItxB,EAAQS,EAAM6wB,GACdtxB,aAAiB4a,IACfva,IAAaW,EAAM46F,KAAOv7F,EAAc,CAAE,GAC/CA,EAAYixB,GAAKtxB,EACjBS,EAAM6wB,GAAKtxB,EAAM+6F,OAJlB,CAOD,CAEDx7F,EAAIyB,EACL,IAGArB,EAAA,OAA0B,SAACJ,EAAKyB,GAC/Bu0F,IAEA,IAAIl1F,EAEAI,EAAYO,EAAM80F,IAClBr1F,IACHA,EAAUo6F,OAAgB,OAGtB,KADJx6F,EAAUI,EAAUq6F,QAEnBr6F,EAAUq6F,KAAWz6F,EA5IxB,WACC,IAAIW,EAKJ,OAJA6F,GAAO,WACN7F,EAAU0T,IACX,IACA1T,EAAQpB,EAuIuC,WAC5Ca,EAAUo6F,MA5Ka,EA6KvBp6F,EAAUy5F,SAAS,CAAC,EACrB,EAzIKl5F,CACR,CAPA,KAoJCu0F,EAAkBl1F,GAClBd,EAAIyB,EACL,IAGArB,EAAI,OAA2B,SAACJ,EAAKyB,EAAOX,EAAOI,GAClD80F,IAEAh2F,EAAIyB,EAAOX,EAAOI,EACnB,IAGAd,EAAA,UAA0B,SAACJ,EAAKyB,GAI/B,IAAIX,EAIJ,GAPAk1F,IAO0B,iBAAfv0F,EAAMoK,OAAsB/K,EAAMW,EAAM60F,KAAiB,CACnE,IAAIp1F,EAAQO,EAAM46F,KACdtqE,EAAgBtwB,EAAMy0F,MAC1B,GAAIh1F,EAAO,CACV,IAAIT,EAAWK,EAAIs6F,EACnB,GAAI36F,EACH,IAAK,IAAI6G,KAAQ7G,EAAU,CAC1B,IAAI4a,EAAU5a,EAAS6G,QACnB,IAAA+T,GAA2B/T,KAAQpG,IACtCma,EAAQ/a,IAERG,EAAS6G,QAAA,EAEV,MAGDxG,EAAIs6F,EADJ36F,EAAW,CAAE,EAGd,IAAK,IAAIsO,KAAQ7N,EAAO,CACvB,IAAIb,EAAUI,EAASsO,GACnB+vD,EAAS59D,EAAM6N,QACf,IAAA1O,GACHA,EAAU2E,EAAkBlE,EAAKiO,EAAM+vD,EAAQ/sC,GAC/CtxB,EAASsO,GAAQ1O,GAEjBA,EAAQI,EAAQq+D,EAAQ/sC,EAEzB,CACD,CACD,CACD/xB,EAAIyB,EACL,IAwCArB,EAAA,WAA2B,SAACJ,EAAKyB,GAChC,GAA0B,iBAAfA,EAAMoK,KAAmB,CACnC,IAAI/K,EAAMW,EAAM60F,IAEhB,GAAIx1F,EAAK,CACR,IAAMI,EAAWJ,EAAIs6F,EACrB,GAAIl6F,EAEH,IAAK,IAAI6wB,KADTjxB,EAAIs6F,OAAA,EACal6F,EAAU,CAC1B,IAAIT,EAAUS,EAAS6wB,GACnBtxB,GAASA,EAAQH,GACrB,CAEF,CACD,KAAM,CACN,IAAIgH,EAAY7F,EAAM80F,IACtB,GAAIjvF,EAAW,CACd,IAAM+T,EAAU/T,EAAUi0F,KACtBlgF,IACH/T,EAAUi0F,UAAA,EACVlgF,EAAQ/a,IAET,CACD,CACDN,EAAIyB,EACL,IAGArB,EAAI,OAAoB,SAACJ,EAAKyB,EAAWX,EAAOI,IAC3CA,EAAO,GAAc,IAATA,KACdO,EAAiC65F,MA3Sb,GA4StBt7F,EAAIyB,EAAWX,EAAOI,EACvB,IAMAlB,IAAU4B,UAAUw3F,sBAAwB,SAE3Cp5F,EACAyB,GAGA,IAAMX,EAAUqU,KAAKomF,KACfr6F,EAAaJ,QAAA,IAAWA,EAAQiB,EAItC,IAAK,IAAIgwB,KAAKtwB,EAAO,OAAO,EAE5B,GAAI0T,KAAK6lF,KAAyB,kBAAV7lF,KAAKkG,IAAA,IAAkBlG,KAAKkG,EAAa,CAGhE,KAAKna,GAnUgB,EAiUCiU,KAAKmmF,MAhUP,EAkUmBnmF,KAAKmmF,MAC3C,OAAO,EAIR,GAzUyB,EAyUrBnmF,KAAKmmF,KAAmC,OAAO,CACnD,KAAM,CAEN,KAAKp6F,GA1Ue,EA0UCiU,KAAKmmF,MAA+B,OAAO,EAIhE,GAAyB,EAArBnmF,KAAKmmF,KAAsD,OAAO,CACtE,CAGD,IAAK,IAAIh0F,KAAKtH,EACb,GAAU,aAANsH,GAAoBtH,EAAMsH,KAAO6N,KAAK+gF,MAAM5uF,GAAI,OAAO,EAE5D,IAAK,IAAI+T,KAAS,KAAC66E,MAAO,KAAM76E,KAAKrb,GAAQ,OAAO,EAGpD,OAAO,CACR,EA2BkC,oBAA1BkpC,uBAAwC5kB,WADhD,IAGMsyE,GAAkB,SAAC52F,GACxBs8F,gBAAe,WACdA,eAAet8F,EAChB,GACD,EE1Ze,GAAW,iB,wBCAX,GAAS,eAAT,GAAwC,uBAAxC,GAAwG,eAAxG,GAAsI,sBAAtI,GAAyK,oBAAzK,GAA4M,sBCqBrNu8F,GAAU,qiNAoKDC,GAvLM,SAAHC,GAAA,IAAMC,EAAOD,EAAPC,QAAO,OAC3B16F,YAAA,OAAK4e,GAAG,UAAU+7E,MAAO17D,IACrBj/B,YAAA,OAAK26F,MAAO17D,IACRj/B,YAAA,OAAK26F,MAAO17D,IACRj/B,YAAA,QAAM26F,MAAO17D,GAAa27D,QAAS,WAAF,OAAQF,GAAS,GAAE,KACpD16F,YAAA,UAAI,0BAERA,YAAA,OAAK26F,MAAO17D,IACRj/B,YAAA,OAAKi/B,MAAO,CAAE47D,UAAW,SAAUC,UAAW,SAAUliE,OAAQ,UAC5D54B,YAAA,OAAKi/B,MAAO,CAAE87D,WAAY,YAAaC,WAAY,MAAOC,SAAU,KAAOV,MAGnFv6F,YAAA,OAAK26F,MAAO17D,MAGd,EHXJi8D,GAAkB,iBAClBC,GAAqB,gBAYrBl7D,GAAuB,CAC5Bm7D,YAAa,iBAyBRC,GAAU,WAEf,SAAAA,EAAYp7D,GAAsB/sB,EAAA,gBAqHSooF,OAAO74F,IAAUyQ,EAAA,sBApH3DC,KAAK8sB,OAASA,CACf,CAAC,O,0GAAAhtB,CAAAooF,EAAA,EAAA97F,IAAA,QAAAN,MAED,SAAcmU,GACbi6D,MAAMj6D,GACNlF,QAAQD,MAAMmF,GACdlF,QAAQqtF,OACT,GAAC,CAAAh8F,IAAA,UAAAN,MAED,SAAQu8F,GACProF,KAAKsoF,SAASx8F,MAAQu8F,CACvB,GAAC,CAAAj8F,IAAA,aAAAN,OAAAy8F,EAAAh5F,GAED,UAAiBumB,GAIhB,IAJ+B,IAgE9B0yE,EAhE8BC,EAAA,KAEzBJ,EAAmB,GAAGK,EAAA,YAI3B,IAEIC,EAFE31F,EAAO8iB,EAAMjrB,GAInB,IAEC,KADA89F,QAAiBF,EAAKlsF,gBAEgB,OAArCksF,EAAK3tF,MAAM,2BAA0B,CAAA6uD,OAAA,EAGvC,CAAE,MAAOx3D,GAAG,IAAAy2F,EAEO,OADlBH,EAAK3tF,MAAM3I,GACH,QAARy2F,EAAAD,SAAQ,IAAAC,GAARA,EAAUphF,QAAQ,CAAAmiD,OAAA,EAEnB,CAEA,IAAMk/B,EAAS,IAAI9yF,SAAkB,SAACC,EAAS2B,GAE9C,IAAIS,EAAS,IAAI0wF,WACjB1wF,EAAO2wF,kBAAkB/1F,GAEzBoF,EAAOwV,OAAS,SAACzb,GAEhB,IACMwY,EAAW,IAAIta,WADR8B,EAAE6J,OAAO9F,QAGhB8yF,EAAuB,KAAhBr+E,EAAS,GAEhBs+E,EAAQN,EAASlsF,YAAY,CAAC,aAAc,aAC5CjK,EAAO,GAAHoB,OAAM60F,EAAK37D,OAAOm7D,YAAW,KAAAr0F,OAAIZ,EAAK5H,MACjC69F,EAAMvsF,YAAY,aAAasB,IAAI,CAAE4f,UAAW,IAAI/V,KAAQ7b,KAAM,MAAO2e,SAAUA,GAAYnY,GAEvG8J,QAAU,WAChB3E,EAAO,yBACR,EAEAsxF,EAAMt2E,WAAa,WAClB3c,EAAQ,CAAEkzF,QAASl2F,EAAK5H,KAAM+9F,OAAQH,GACvC,CACD,EAEA5wF,EAAOkE,QAAU,WAChB3E,EAAO,oBACR,CAED,IAEA,IAAI,IAAAyxF,EACGC,QAAYR,EACV,QAARO,EAAAT,SAAQ,IAAAS,GAARA,EAAU5hF,QACVmhF,OAAWr5F,EACX+4F,EAAKnvF,KAAKmwF,EACX,CAAE,MAAOl3F,GACRs2F,EAAK3tF,MAAM3I,EACZ,CAAE,QAAQ,IAAAm3F,EACD,QAARA,EAAAX,SAAQ,IAAAW,GAARA,EAAU9hF,OACX,CAED,EA5DS3c,EAAI,EAAGA,EAAIirB,EAAMzoB,OAAQxC,IAAG,GAAA29F,QAAAE,IAAE,OAAFF,EAAA7+B,EA8DrC3pD,KAAKupF,QAAQlB,EAAKh7F,OAASg7F,OAAO/4F,EAEnC,IAAC,SApEegQ,GAAA,OAAAipF,EAAAp1F,MAAC,KAADC,UAAA,KAAAhH,IAAA,eAAAN,OAAA09F,EAAAj6F,GAsEhB,YAA6B,IAAAk6F,EAAA,KAE5B,OAAO,IAAI1zF,SAAiC,SAACC,EAAS2B,GAGrD,GAAsB,oBAAX0G,OAAwB,CAClC,IAAMqrF,EAAYrrF,OAAO3C,UAAUE,KAAK6tF,EAAK38D,OAAOm7D,aAEpDyB,EAAUptF,QAAU,WACnB3E,EAAO,2BAAD/D,OAA4B61F,EAAK38D,OAAOm7D,aAC/C,EAEAyB,EAAU7tF,gBAAkB,SAAC1J,GAE5B4I,QAAQ4E,IAAI,kBAEZ,IAAM5D,EAAM5J,EAAE6J,OAA4B9F,OACrC6F,EAAGE,iBAAiBC,SAAS,eACjCnB,QAAQ4E,IAAI,mCACE5D,EAAGK,kBAAkB,YAAa,CAAC,GAC3CqU,YAAY,YAAa,YAAa,CAAEC,QAAQ,IAExD,EAEAg5E,EAAUrtF,UAAY,SAAClK,GACtB4I,QAAQ4E,IAAI,WAEZ3J,EADY7D,EAAE6J,OAA4B9F,OAE3C,CACD,CACD,GACD,IAAC,WA/ByB,OAAAszF,EAAAr2F,MAAC,KAADC,UAAA,OAAAhH,IAAA,YAAAV,IAqC1B,WAIC,OAHKw8F,EAAW5zF,WACf4zF,EAAW5zF,SAAW,IAAI4zF,EAAWp7D,KAE/Bo7D,EAAW5zF,QACnB,KAhHgB,IAAAk1F,EAFfjB,CAkHA,CAhIc,GAAAxoF,EAAVmoF,GAAU,mBA2IhB,IAAMyB,GAAsB,CAE3B,CAAEv+F,KAAM,mCAAoCmuE,MAAO,gCAAiCjvD,KAAM,mFAC1F,CAAElf,KAAM,oBAAqBmuE,MAAO,uCAAwCjvD,KAAM,gFAClF,CAAElf,KAAM,mBAAoBmuE,MAAO,qCAAsCjvD,KAAM,8EAG1Es/E,GAAa,WAAM,IAAAC,EAAAC,EAE6BC,EAAAlqE,EAAfmqE,GAAS,GAAM,GAA9CC,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE5BI,EAAYR,GAASjwF,KAAI,SAAA/M,GAC9B,OAAOE,YAAA,KAAGsS,KAAMxS,EAAE2d,KAAMtO,OAAO,SAAS8vB,MAAM,8EAC7Cj/B,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQw9D,KAAM,IACpCv9F,YAAA,OAAKi/B,MAAO,CAAEiM,WAAY,GAAIC,cAAe,EAAG8vD,SAAU,GAAID,WAAY,MAAOwC,WAAY,WAAa19F,EAAEvB,OAE7GyB,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQ/f,SAAU,WAAYy9E,SAAU,EAAG9kE,MAAO,SACxE34B,YAAA,OAAKi/B,MAAM,4DAA4Dz8B,IAAK1C,EAAE4sE,SAGjF,IAEA,OAAO1sE,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQpH,MAAO,OAAQ+kE,SAAU,SAAUC,QAAS,GAAI3yD,YAAa,KACjGoyD,GAAep9F,YAACw6F,GAAY,CAACE,QAAS,WAAF,OAAQ2C,GAAe,EAAM,IAClEr9F,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQ09D,SAAU,IACxCz9F,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQpH,MAAO,QACrC34B,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQ69D,cAAe,SAAUC,eAAgB,UACvE79F,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,SACtB//B,YAAA,OAAKi/B,MAAO,CAAEg8D,SAAU,GAAIuC,WAAY,SAAUryD,cAAe,GAAIxS,MAAO,MAAO,oEAIpF34B,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQ+9D,WAAY,WAC1C99F,YAAA,UAAQi/B,MAAM,sDAAsD27D,QAAS,WAC5ES,GAAW0C,UAAUrB,QAAQ,CAAC,CAAEL,QAASnB,GAAiBoB,QAAQ,IACnE,GAAG,oBAEJt8F,YAAA,OAAKi/B,MAAO,CAAEiM,WAAY,MAC1BlrC,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQ+9D,WAAY,WAC1C99F,YAAA,UAAQi/B,MAAM,sDAAsD27D,QAAS,WAC5ES,GAAW0C,UAAUrB,QAAQ,CAAC,CAAEL,QAASlB,GAAoBmB,QAAQ,IACtE,GAAG,oBAEJt8F,YAAA,OAAKi/B,MAAO,CAAEiM,WAAY,MAC1BlrC,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQ+9D,WAAY,WAC1C99F,YAAA,UAAQi/B,MAAM,sDAAsD27D,QAAS,WAC5E75F,SAASC,eAAe,cAAcg9F,OACvC,GAAG,gCAEJh+F,YAAA,OAAKi/B,MAAO,CAAEiM,WAAY,MAE1BlrC,YAAA,YAAUi/B,MAAM,yCAAyCg/D,YAAY,4BAA4BC,YAAY,EAAOC,SAAU,SAACxkE,GAAY,IAAA8gE,EAAA2D,EAAAC,EAEpIp/F,EAAkE,QAA7Dw7F,EAAI9gE,SAAU,QAARykE,EAAFzkE,EAAIxqB,cAAM,IAAAivF,GAAO,QAAPA,EAAVA,EAAYn/F,aAAK,IAAAm/F,GAAjBA,EAAmB59F,OAASm5B,SAAU,QAAR0kE,EAAF1kE,EAAIxqB,cAAM,IAAAkvF,OAAA,EAAVA,EAAYp/F,WAAQwD,SAAS,IAAAg4F,OAAA,EAA1DA,EAA6D1jF,OAAO9C,QAAQ,KAAM,KAE/FlT,SAAS84F,OADN56F,WAAOuB,OACQ,2BAAHuG,OAA8B9H,EAAK,2BAEhC,iDAGpB,GAAgD,QAA9C+9F,EAAsC,QAAtCC,EAAEvD,EAAU,kCAA0B,IAAAuD,OAAA,EAApCA,EAAsClmF,cAAM,IAAAimF,IAAI,IAGpDh9F,YAAA,OAAKi/B,MAAO,CAAEiM,WAAY,OAC1BlrC,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQ+9D,WAAY,WAC1C99F,YAAA,UAAQi/B,MAAM,sDAAsD27D,QAAS,WAC5EyC,GAAe,EAChB,GAAG,mBAILr9F,YAAA,SAAO4e,GAAG,aAAaqgB,MAAM,eAAep1B,KAAK,OAAOy0F,UAAQ,EAACH,SAAU,SAAC74F,GAC3E,IAAM2jB,EAAQ3Y,MAAMuG,KAAMvR,EAAE6J,OAAe8Z,OAC3C,GAAqB,IAAjBA,EAAMzoB,OAAV,CAKA,IAAM+9F,EAAUt1E,EAAMu1E,MAAK,SAAAzuE,GAC1B,IAAMziB,EAAQyiB,EAAExxB,KAAK63F,cACrB,QAAK9oF,EAAMxD,SAAS,SAAYwD,EAAMxD,SAAS,SAAYwD,EAAMxD,SAAS,SAAYwD,EAAMxD,SAAS,OAItG,IAEA,GAAIy0F,EAGH,OAFAj5F,EAAEwe,sBACFupD,MAAM,yCAADtmE,OAA0Cw3F,EAAQhgG,KAAI,gBAIzC88F,GAAW0C,UACnBU,WAAWx1E,EAjBtB,MAFC3jB,EAAEwe,gBAqBJ,MAGF9jB,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQ09D,SAAU,EAAG9kE,MAAO,MAAOilE,cAAe,WACxE59F,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQw9D,KAAM,WAAYv9E,SAAU,aAC1DhgB,YAAA,OAAKi/B,MAAO,CAAEjf,SAAU,WAAYi7E,SAAU,GAAIuC,WAAY,IAAKxC,WAAY,QAAS,uBAEzFh7F,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQ2+D,WAAY,EAAGjB,SAAU,EAAGG,cAAe,WACxEN,IAKL,EAEMqB,GAAc,WAEnB,IAAMC,EAAYC,EAA0B,MACtCC,EAAqBD,EAAuB,MACyBE,EAAA/rE,EAAjDmqE,EAA+B,CAAE6B,SAAS,IAAO,GAApE75B,EAAK45B,EAAA,GAAEpG,EAAQoG,EAAA,GAChBtD,EAAWJ,GAAW0C,UAAUtC,SAASx8F,MAGzCggG,EAAoB,WAEDl+F,QAYzB,EAkJA,OAhJAm+F,GAAU,WAET,IAAMzmE,EAASmmE,aAAS,EAATA,EAAWrzE,QACpB2P,EAAkB4jE,aAAkB,EAAlBA,EAAoBvzE,QAExC4wE,EAAOV,aAAQ,EAARA,EAAU+C,MAAK,SAAA1/D,GAAC,OAAIA,EAAEw9D,MAAM,IAmBvC,GAjBKH,IACJA,EAAO,CAAEE,QAASnB,GAAiBoB,QAAQ,IAG5CpuF,QAAQ4E,IAAI,WAAY2oF,IAanBU,EACJ,KAAM,qBAIP,IAAKjhE,EACJ,KAAM,iCAGP,IAAKzC,EACJ,KAAM,uBAGP,IAAM0mE,EAAiB,WACtB,IAAMrgE,EAAI/tB,KAAK4Y,MAAMuR,EAAgBkkE,aAC/Bp/F,EAAI+Q,KAAK4Y,MAAMuR,EAAgBmkE,cACrCnxF,QAAQ4E,IAAI,sBAAuBgsB,EAAG9+B,GACtCy4B,EAAOwG,MAAMtG,MAAQ,GAAH5xB,OAAM+3B,EAAC,MACzBrG,EAAOwG,MAAMrG,OAAS,GAAH7xB,OAAM/G,EAAC,MAC1By4B,EAAOE,MAAQmG,EACfrG,EAAOG,OAAS54B,CACjB,EAGAm/F,IAEA,IAOIG,EAPEC,EAAa,WAClBJ,IACAz6F,OAAO86F,oBACR,EAEAz+F,SAASo4B,iBAAiB,oBAAqB8lE,GAAmB,GAGlEztF,OAAO2nB,iBAAiB,UAAU,WAEjC+/D,aAAaoG,GACbA,EAAgBh9E,WAAWi9E,EAAY,IAExC,IAEA9mE,EAAOU,iBAAiB,oBAAoB,SAAU7zB,GAAK+nE,MAAM,qDAAsD/nE,EAAEwe,gBAAkB,IAAG,GAE9I,IAAI27E,EAAWtD,EAAKE,QAChBoD,IAAavE,IAAmBuE,IAAatE,KAChDsE,EAAW,gBAAH14F,OAAmB04F,IAG5B,IAAMzrF,EAAO,CAAC,QAAS,gBAAiB,YAAa,SAAUykB,EAAO2mE,YAAYt9E,WAAY,UAAW2W,EAAO4mE,aAAav9E,WAAY,QAAS29E,GAElJhE,EAASl6E,SAAQ,SAAAud,GACZA,EAAEw9D,SAGNtoF,EAAK3H,KAAK,SACV2H,EAAK3H,KAAK,gBAADtF,OAAiB+3B,EAAEu9D,UAC7B,IAEA,IAAIqD,EAAoBhG,EAAU,2BAuDlC,OAtDIgG,WAAmBl/F,QACtBwT,EAAK3H,KAAI/F,MAAT0N,EAAIE,EAASwrF,EAAkBlqF,MAAM,OAKtClT,KAAiB,CAChB0kE,aAAc,WACb94D,QAAQ4E,IAAI,cAEPkB,EAAKwqF,MAAK,SAAAzxF,GAAC,OAAIA,EAAEq6D,WAAW,QAAQ,KACxC1iE,OAAOi7F,iBAAiB,GAGzBhH,EAAQ/1E,IAAC,CAAC,EAAIuiD,GAAK,IAAE65B,SAAS,IAC/B,EACAz3B,aAAc,WACb,EAQDq4B,cAAe,WACf,EACAC,eAAgB,WAChB,EACAt5F,UAAWyN,EACXk/E,QAAS,WACRhlF,QAAQ4E,IAAI,WACb,EACAghF,OAAQ,GACRD,QAAS,GACTiM,MACQ,SAAUj9F,GAChBA,EAAOyN,MAAM1Q,UAAUwR,MAAMjT,KAAKoI,WAAWmP,KAAK,KAClDxH,QAAQ4E,IAAIjQ,EACb,EAEDk9F,SAAU,SAAUl9F,GACnBA,EAAOyN,MAAM1Q,UAAUwR,MAAMjT,KAAKoI,WAAWmP,KAAK,KAClDxH,QAAQD,MAAMpL,EACf,EACA41B,OAAQA,EACRunE,UAAW,SAAUn9F,GAAQqL,QAAQ4E,IAAI,SAAUjQ,EAAM,EACzDo9F,uBAAwB,SAAU3iE,GAAQpvB,QAAQ4E,IAAIwqB,EAAM,IAC1DtyB,MAAK,SAAAjN,GACPmiG,WAAWx7F,OAAS3G,EACpBA,EAAO06B,OAASA,CACjB,IAGO,WAEP,CAED,GAAG,IAGIz4B,YAAA,OAAK4e,GAAG,mBAAmBoJ,IAAK82E,EAAoB7/D,MAAO,CAAEc,QAAS,OAAQpH,MAAO,OAAQC,OAAQ,OAAQ5Y,SAAU,aAC7HhgB,YAAA,UAAQ4e,GAAG,SAASoJ,IAAK42E,EAAW3/D,MAAO,CAAEkhE,WAAYh7B,EAAM65B,QAAU,SAAW,WACnFpE,QAAO,eAAA3uF,EAAAvJ,GAAE,YAER,KADak8F,EAAUrzE,UAAYxqB,SAAS24B,oBAE3C,IAAI,IAAA0mE,QACoB,QAAvBA,EAAMxB,EAAUrzE,eAAO,IAAA60E,OAAA,EAAjBA,EAAmBxmE,oBAC1B,CAAE,MAAOx0B,GACR8I,QAAQD,MAAM7I,EACf,CAEF,IAAC,gBAAAuB,GAAA,OAAAsF,EAAA3F,MAAA,KAAAC,UAAA,EATM,OAWL4+D,EAAM65B,SAAWh/F,YAAA,OAAKi/B,MAAO,CAAEjf,SAAU,WAAY+f,QAAS,OAAQpH,MAAO,OAAQC,OAAQ,OAAQilE,eAAgB,SAAUC,WAAY,WAC7I99F,YAAA,OAAK26F,MAAO17D,IACXj/B,YAAA,QAAMi/B,MAAM,SAAQ,KACpBj/B,YAAA,QAAMi/B,MAAM,SAAQ,KACpBj/B,YAAA,QAAMi/B,MAAM,SAAQ,KACpBj/B,YAAA,QAAMi/B,MAAM,SAAQ,KACpBj/B,YAAA,QAAMi/B,MAAM,SAAQ,KACpBj/B,YAAA,QAAMi/B,MAAM,SAAQ,KACpBj/B,YAAA,QAAMi/B,MAAM,SAAQ,KACpBj/B,YAAA,QAAMi/B,MAAM,SAAQ,KACpBj/B,YAAA,QAAMi/B,MAAM,SAAQ,KACpBj/B,YAAA,QAAMi/B,MAAM,UAAS,OAKzB,EA2BeohE,GAbA,WAEd,IACM5E,EADaJ,GAAW0C,UACFtC,SAASx8F,MAErC,OACCe,YAAA,OAAKi/B,MAAO,CAAEc,QAAS,OAAQpH,MAAO,OAAQklE,eAAgB,aAC3DpC,WAAUj7F,SAAUR,YAAC+8F,GAAU,QAC9BtB,YAAUj7F,SAAUR,YAAC2+F,GAAW,MAGtC,EIlgBe2B,UCCH,WAAH,OACRtgG,YAAA,OAAK4e,GAAG,OACP5e,YAAA,YACCA,YAACqgG,GAAM,OAEH,C","file":"bundle.e2a96.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// This code implements the `-sMODULARIZE` settings by taking the generated\n// JS program code (INNER_JS_CODE) and wrapping it in a factory function.\n\n// Single threaded MINIMAL_RUNTIME programs do not need access to\n// document.currentScript, so a simple export declaration is enough.\nvar createEdgeModule = (() => {\n  // When MODULARIZE this JS may be executed later,\n  // after document.currentScript is gone, so we save it.\n  // In EXPORT_ES6 mode we can just use 'import.meta.url'.\n  var _scriptName = typeof document != 'undefined' ? document.currentScript?.src : undefined;\n  return async function(moduleArg = {}) {\n    var moduleRtn;\n\n// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(moduleArg) => Promise<Module>\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = moduleArg;\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = true;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// include: /home/dasho/Desktop/EDGE-classic/web/site/edge-classic-data.js\n\n  var Module = typeof Module != 'undefined' ? Module : {};\n\n  Module['expectedDataFileDownloads'] ??= 0;\n  Module['expectedDataFileDownloads']++;\n  (() => {\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\n    var isPthread = typeof ENVIRONMENT_IS_PTHREAD != 'undefined' && ENVIRONMENT_IS_PTHREAD;\n    var isWasmWorker = typeof ENVIRONMENT_IS_WASM_WORKER != 'undefined' && ENVIRONMENT_IS_WASM_WORKER;\n    if (isPthread || isWasmWorker) return;\n    function loadPackage(metadata) {\n\n      var PACKAGE_PATH = '';\n      if (typeof window === 'object') {\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/')) + '/');\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\n        // web worker\n        PACKAGE_PATH = encodeURIComponent(location.pathname.substring(0, location.pathname.lastIndexOf('/')) + '/');\n      }\n      var PACKAGE_NAME = '/home/dasho/Desktop/EDGE-classic/web/site/edge-classic.data';\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\n\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\n        \n        Module['dataFileDownloads'] ??= {};\n        fetch(packageName)\n          .catch((cause) => Promise.reject(new Error(`Network Error: ${packageName}`, {cause}))) // If fetch fails, rewrite the error to include the failing URL & the cause.\n          .then((response) => {\n            if (!response.ok) {\n              return Promise.reject(new Error(`${response.status}: ${response.url}`));\n            }\n\n            if (!response.body && response.arrayBuffer) { // If we're using the polyfill, readers won't be available...\n              return response.arrayBuffer().then(callback);\n            }\n\n            const reader = response.body.getReader();\n            const iterate = () => reader.read().then(handleChunk).catch((cause) => {\n              return Promise.reject(new Error(`Unexpected error while handling : ${response.url} ${cause}`, {cause}));\n            });\n\n            const chunks = [];\n            const headers = response.headers;\n            const total = Number(headers.get('Content-Length') ?? packageSize);\n            let loaded = 0;\n\n            const handleChunk = ({done, value}) => {\n              if (!done) {\n                chunks.push(value);\n                loaded += value.length;\n                Module['dataFileDownloads'][packageName] = {loaded, total};\n\n                let totalLoaded = 0;\n                let totalSize = 0;\n\n                for (const download of Object.values(Module['dataFileDownloads'])) {\n                  totalLoaded += download.loaded;\n                  totalSize += download.total;\n                }\n\n                Module['setStatus']?.(`Downloading data... (${totalLoaded}/${totalSize})`);\n                return iterate();\n              } else {\n                const packageData = new Uint8Array(chunks.map((c) => c.length).reduce((a, b) => a + b, 0));\n                let offset = 0;\n                for (const chunk of chunks) {\n                  packageData.set(chunk, offset);\n                  offset += chunk.length;\n                }\n                callback(packageData.buffer);\n              }\n            };\n\n            Module['setStatus']?.('Downloading data...');\n            return iterate();\n          });\n      };\n\n      function handleError(error) {\n        console.error('package error:', error);\n      };\n\n    function runWithFS(Module) {\n\n      function assert(check, msg) {\n        if (!check) throw msg + new Error().stack;\n      }\nModule['FS_createPath'](\"/\", \"crosshairs\", true, true);\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer/graphics\", \"tome\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex1\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex3v\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3v\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3v/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3v\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex3vm\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3vm\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3vm/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3vm\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"harmonyc\", true, true);\nModule['FS_createPath'](\"/edge_base/harmonyc\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/harmonyc\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/harmonyc/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"skull\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"tome\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"wings\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"strife\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"movies\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_defs/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_defs/scripts/lua\", \"core\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\nModule['FS_createPath'](\"/\", \"overlays\", true, true);\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\n\n        var PACKAGE_UUID = metadata['package_uuid'];\n        var IDB_RO = \"readonly\";\n        var IDB_RW = \"readwrite\";\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\n        var DB_VERSION = 1;\n        var METADATA_STORE_NAME = 'METADATA';\n        var PACKAGE_STORE_NAME = 'PACKAGES';\n        function openDatabase(callback, errback) {\n          if (typeof indexedDB == 'undefined') {\n            throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\n          }\n          try {\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\n          } catch (e) {\n            return errback(e);\n          }\n          openRequest.onupgradeneeded = (event) => {\n            var db = /** @type {IDBDatabase} */ (event.target.result);\n\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\n            }\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\n\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\n              db.deleteObjectStore(METADATA_STORE_NAME);\n            }\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\n          };\n          openRequest.onsuccess = (event) => {\n            var db = /** @type {IDBDatabase} */ (event.target.result);\n            callback(db);\n          };\n          openRequest.onerror = (error) => errback(error);\n        };\n\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\n        // We set the chunk size to 64MB to stay well-below the limit\n        var CHUNK_SIZE = 64 * 1024 * 1024;\n\n        function cacheRemotePackage(\n          db,\n          packageName,\n          packageData,\n          packageMeta,\n          callback,\n          errback\n        ) {\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\n          var chunkSliceStart = 0;\n          var nextChunkSliceStart = 0;\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\n          var finishedChunks = 0;\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\n            nextChunkSliceStart += CHUNK_SIZE;\n            var putPackageRequest = packages.put(\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\n              `package/${packageName}/${chunkId}`\n            );\n            chunkSliceStart = nextChunkSliceStart;\n            putPackageRequest.onsuccess = (event) => {\n              finishedChunks++;\n              if (finishedChunks == chunkCount) {\n                var transaction_metadata = db.transaction(\n                  [METADATA_STORE_NAME],\n                  IDB_RW\n                );\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\n                var putMetadataRequest = metadata.put(\n                  {\n                    'uuid': packageMeta.uuid,\n                    'chunkCount': chunkCount\n                  },\n                  `metadata/${packageName}`\n                );\n                putMetadataRequest.onsuccess = (event) =>  callback(packageData);\n                putMetadataRequest.onerror = (error) => errback(error);\n              }\n            };\n            putPackageRequest.onerror = (error) => errback(error);\n          }\n        }\n\n        /* Check if there's a cached package, and if so whether it's the latest available */\n        function checkCachedPackage(db, packageName, callback, errback) {\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\n          var getRequest = metadata.get(`metadata/${packageName}`);\n          getRequest.onsuccess = (event) => {\n            var result = event.target.result;\n            if (!result) {\n              return callback(false, null);\n            } else {\n              return callback(PACKAGE_UUID === result['uuid'], result);\n            }\n          };\n          getRequest.onerror = (error) => errback(error);\n        }\n\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\n\n          var chunksDone = 0;\n          var totalSize = 0;\n          var chunkCount = metadata['chunkCount'];\n          var chunks = new Array(chunkCount);\n\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\n            var getRequest = packages.get(`package/${packageName}/${chunkId}`);\n            getRequest.onsuccess = (event) => {\n              if (!event.target.result) {\n                errback(new Error(`CachedPackageNotFound for: ${packageName}`));\n                return;\n              }\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\n              if (chunkCount == 1) {\n                callback(event.target.result);\n              } else {\n                chunksDone++;\n                totalSize += event.target.result.byteLength;\n                chunks.push(event.target.result);\n                if (chunksDone == chunkCount) {\n                  if (chunksDone == 1) {\n                    callback(event.target.result);\n                  } else {\n                    var tempTyped = new Uint8Array(totalSize);\n                    var byteOffset = 0;\n                    for (var chunkId in chunks) {\n                      var buffer = chunks[chunkId];\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\n                      byteOffset += buffer.byteLength;\n                      buffer = undefined;\n                    }\n                    chunks = undefined;\n                    callback(tempTyped.buffer);\n                    tempTyped = undefined;\n                  }\n                }\n              }\n            };\n            getRequest.onerror = (error) => errback(error);\n          }\n        }\n\n      function processPackageData(arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file failed.');\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\n        var byteArray = new Uint8Array(arrayBuffer);\n        var curr;\n        var compressedData = {\"data\":null,\"cachedOffset\":51538524,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,1641,3123,4598,6082,7575,9057,10533,12016,13496,14972,16446,17922,19399,20880,22354,23846,25307,26785,28261,29745,31222,32717,34199,35677,37164,38649,39781,40340,40906,41609,41980,42578,42887,43420,43930,44396,44846,45440,45939,46344,46564,46870,47122,47372,47635,47908,48128,48444,48766,49011,49162,49300,49529,49669,49766,49856,50222,50718,51073,51342,51663,51907,52438,52889,53310,53548,53877,54323,54822,55268,55838,56027,56413,56961,57577,57900,58046,58338,58794,59114,59387,59691,60041,60297,60596,60906,60988,61073,61179,61447,61705,61939,62464,62979,63389,63689,63795,64139,64515,64809,65168,65643,66022,66313,66707,67197,67713,68161,68614,70666,72686,74734,76790,78821,80849,82903,84956,86778,88498,90222,91959,93657,95386,97108,98831,100552,102252,103959,105678,107397,109095,110793,112497,114174,115874,117611,119246,120917,122592,124286,126018,127737,129470,131200,132940,134664,136316,138053,139770,141507,143252,144978,146701,148406,150195,152243,154291,156339,158387,160435,162434,164168,165869,167555,169273,171021,172852,174625,176486,178136,179887,181674,183360,185110,186813,188504,190177,191769,193473,195151,196868,198544,200165,201860,203605,205295,206974,208700,210427,212198,213818,215475,217124,218859,220617,222352,224064,225798,227435,229191,230883,232596,233318,233765,234332,234973,236049,236874,237755,238612,239589,240610,241685,243128,244952,246822,248659,250533,252392,254263,255820,257298,258799,260254,261701,263143,264585,266027,267458,268899,270335,271811,273281,274744,276192,277663,279119,280594,282065,283531,285014,286480,287954,289377,290829,292302,293776,295247,296707,298186,299627,301082,302536,304005,305471,306940,308415,309893,311354,312815,314267,315737,317204,318650,320099,321555,323009,324455,325912,327393,328855,330329,331776,333250,334713,336160,337629,339090,340561,342035,343513,345000,346464,347942,349417,350876,352340,353803,355245,356683,358138,359597,361066,362533,363492,364086,364542,365081,365443,365774,366130,366517,366990,367516,368045,368473,369020,369547,369945,370404,370862,371336,371782,372230,372708,373139,373576,374159,374755,375238,375678,376288,376846,377202,377721,378358,378814,379407,380040,380506,380971,381321,381745,382129,382558,383034,383426,383847,384319,384708,385131,385439,385640,385891,386429,386922,387317,387680,388283,388724,389184,389738,390304,390925,391500,391997,392465,393012,393484,393987,394465,394936,395431,395828,396362,396737,397081,397411,397921,398404,398855,399366,399955,400586,401059,401552,402096,402467,402972,403487,404022,404360,404947,405545,406117,406717,407303,407884,408484,408975,409487,409947,410477,410938,411382,411826,412301,412865,413316,413852,414398,414895,415493,415947,416493,417028,417618,418231,418718,419209,419662,420121,420586,420965,421393,421736,422233,422684,423180,423649,424086,424492,424963,425441,425993,426606,427171,427658,428026,428445,428794,429358,429861,430484,430827,431036,431204,431310,431515,431880,432333,432599,432869,433176,433648,434057,434471,434885,435272,435703,436144,436492,436941,437489,438078,438478,439001,439518,439964,440377,440868,441377,441881,442417,443033,443632,444297,444921,445537,446116,446653,447140,447698,448270,448841,449258,449840,450380,450896,451414,451958,452481,452895,453412,453963,454462,454914,455414,455935,456450,456927,457507,458069,458481,458890,459332,459847,460479,461001,461486,461961,462427,462885,463203,463693,463927,464292,464741,465004,465350,465747,466090,466478,466983,467390,467730,468221,468730,469248,469761,470254,470789,471255,471711,472216,472675,473140,473609,474059,474487,474911,475320,475759,476216,476673,477128,477555,477978,478439,478748,479105,479537,479978,480358,480724,481125,481632,482035,482452,482886,483263,483711,484045,484484,485001,485460,485923,486448,488139,490084,492109,494096,496095,498094,500016,501998,504048,506094,508148,510190,512207,514234,516260,518290,520345,522400,524448,526327,528053,529776,531478,533200,534914,536628,538360,540081,541786,543523,545246,546939,548648,550348,552061,553781,555485,557181,558866,560571,562294,563985,565660,567359,569026,570711,572390,574087,575774,577469,579176,580875,582557,584250,585940,587628,589306,591007,592735,594439,596170,597897,599604,601270,602950,604650,606388,608114,609831,611525,613178,614858,616522,618219,619906,621601,623284,624968,626663,628392,630144,631869,633534,635194,636892,638605,640322,642024,643729,645429,647124,648832,650521,652218,653932,655629,657339,659040,660729,662425,664147,665847,667548,669241,670939,672633,674353,676033,677743,679483,681226,682975,684724,686487,688220,689987,691723,693394,695068,696729,698418,700122,701803,703486,705159,706834,708564,710304,712036,713771,715459,717129,718796,720485,722323,724371,726419,728467,730515,732563,734611,736659,738707,740755,742803,744851,746899,748947,750995,752714,754466,756172,757921,759727,761415,763132,764886,766524,768305,770049,771711,773448,775195,776935,778631,780220,781890,783580,785201,786828,788512,790065,791635,793218,794854,796462,798131,799754,801391,803030,804652,806305,808032,809759,811454,813231,814948,816696,818345,820153,822039,823882,825628,827335,828986,830630,832365,834104,835818,837467,839241,841091,842964,844623,846294,847937,849454,850975,852508,853987,855479,857019,858627,860287,861953,863507,865027,866660,868327,869961,871644,873328,875040,876618,878145,879805,881337,883106,884950,886746,888540,890332,892111,893890,895726,897521,899207,900861,902539,904238,905912,907560,909272,911044,912815,914565,916291,917904,919583,921210,921692,922168,922723,923238,923822,924523,925171,925781,926368,926837,927175,927793,928459,929078,929837,930441,930958,931671,932311,932931,933476,933914,934423,934970,935543,936106,936238,936379,936814,937340,937619,937859,937989,938737,939383,939928,940236,940692,941250,941638,942235,942593,943015,943159,943275,943423,943570,943780,944149,944791,945536,946211,946828,947379,947891,948604,949426,950206,951181,952233,953261,954132,954921,955676,956525,956823,957137,957573,957915,958276,958410,958544,958698,959161,959567,959817,960062,960287,960491,960802,961208,961460,962212,962711,962989,963484,963903,964140,964343,964567,964979,965394,965660,966002,966270,966580,966837,967458,967938,968409,969066,969586,970094,970736,971549,972466,973242,973990,974851,975755,976501,977182,977910,978664,979338,980044,980853,981543,982179,982684,983201,983695,984224,984756,985257,985799,986420,987250,988059,988880,989679,990471,991255,991834,992519,993485,994292,995186,995728,996511,997517,998454,999258,1000191,1001157,1002013,1002942,1003811,1004672,1005484,1006204,1006895,1007825,1008625,1009374,1010160,1010933,1011584,1012351,1013201,1013580,1013755,1013880,1013994,1014247,1015215,1016211,1017192,1018199,1019271,1020186,1021149,1022107,1023049,1023966,1024736,1025527,1026202,1026757,1027269,1028118,1028959,1029726,1030467,1031311,1032018,1032583,1033055,1033613,1034447,1035448,1036487,1037567,1038622,1039719,1040695,1041790,1042909,1044051,1045144,1046031,1046752,1047255,1047676,1048059,1048425,1048777,1049118,1049713,1050557,1051504,1052519,1053466,1054292,1055027,1055552,1056220,1057000,1057890,1058669,1059403,1060214,1061018,1061925,1062859,1063842,1064838,1065627,1066462,1067504,1068569,1069673,1070856,1071980,1072999,1074135,1075216,1076056,1076926,1077985,1079050,1080245,1081492,1082544,1083519,1084698,1085886,1086989,1087970,1089008,1090024,1090846,1091890,1093146,1094330,1096116,1097722,1099567,1101441,1103275,1105151,1107042,1108881,1110709,1112580,1114517,1116498,1118427,1120319,1122205,1124156,1126112,1127969,1129667,1131260,1132900,1134388,1135874,1137378,1138871,1140388,1141895,1143390,1144890,1146393,1147917,1149397,1150894,1152404,1153884,1155372,1156866,1158341,1159830,1161340,1162800,1164291,1165785,1167276,1168795,1170320,1171809,1173304,1174808,1176260,1177730,1179228,1180732,1182236,1183746,1185246,1186763,1188266,1189409,1189941,1190452,1191033,1191474,1192020,1192520,1193054,1193620,1194130,1194703,1195238,1195874,1196474,1197076,1197698,1198109,1198727,1199351,1199855,1200374,1200963,1201495,1202042,1202608,1203316,1203929,1204446,1204939,1205389,1205932,1206365,1206929,1207520,1208130,1208718,1209341,1209971,1210548,1211030,1211524,1211944,1212397,1212883,1213442,1214004,1214580,1215115,1215683,1216216,1216689,1217043,1217637,1218000,1218198,1218540,1218775,1219263,1219733,1220143,1220759,1221065,1221674,1222209,1222630,1223196,1223684,1224137,1224539,1224975,1225518,1226033,1226543,1226999,1227320,1227693,1228199,1228871,1229332,1229980,1230578,1231032,1231455,1231952,1232362,1232768,1233008,1233053,1233215,1233539,1233867,1234156,1234579,1234837,1235088,1235443,1235828,1236112,1236434,1236879,1237194,1237599,1237915,1238505,1239056,1239629,1240155,1240575,1240918,1241269,1241758,1242113,1242688,1243228,1243760,1244287,1244778,1245336,1245734,1246302,1246774,1247108,1247533,1248020,1248487,1248989,1249495,1250083,1250616,1251071,1251770,1253792,1255810,1257849,1259866,1261859,1263883,1265869,1267923,1269968,1272010,1273972,1275670,1277351,1279076,1280766,1282411,1284103,1285820,1287516,1289188,1290894,1292602,1294321,1296048,1297763,1299489,1301199,1302910,1304626,1306353,1308057,1309778,1311481,1313177,1314880,1316572,1318286,1319994,1321707,1323416,1325103,1326804,1328474,1330175,1331887,1333605,1335311,1337036,1338743,1340482,1342195,1343921,1345651,1347380,1349099,1350820,1352531,1354261,1355984,1357714,1359442,1361083,1362763,1364476,1366188,1367903,1369606,1371594,1373642,1375690,1377738,1379786,1381834,1383871,1385514,1387197,1388850,1390559,1392327,1394003,1395675,1397472,1399206,1400947,1402668,1404455,1406247,1408047,1409876,1411640,1413403,1415183,1416915,1418600,1420344,1422048,1423756,1425532,1427233,1429005,1430714,1432399,1434128,1435882,1437652,1439364,1441151,1442936,1444715,1446488,1448271,1450052,1451808,1453567,1455326,1457129,1458741,1460457,1462220,1463869,1464984,1465740,1466572,1467467,1468364,1469279,1470009,1470953,1472132,1473573,1474837,1475774,1476885,1478054,1479330,1480435,1481558,1482643,1483580,1484493,1485559,1486692,1487596,1488689,1489762,1490882,1492816,1494803,1496810,1498819,1500812,1502819,1504811,1506407,1508003,1509510,1510971,1512430,1513868,1515367,1516844,1518305,1519320,1519941,1520339,1520800,1521373,1521860,1522464,1523077,1523660,1524217,1524767,1525268,1525764,1526190,1526674,1526799,1527369,1527707,1528296,1528744,1529303,1529843,1531473,1533490,1535242,1536951,1538662,1540370,1542071,1543791,1545500,1547214,1548923,1550700,1552749,1554540,1556327,1558224,1560042,1561772,1563510,1565009,1565643,1566230,1566606,1566631,1566656,1566681,1568611,1569624,1571043,1572487,1573895,1575278,1576787,1578283,1579742,1581196,1582661,1584119,1585560,1587005,1588486,1589925,1591395,1592867,1594339,1595800,1597262,1598751,1599499,1599848,1600274,1600630,1600963,1601456,1601870,1602373,1602826,1603091,1603508,1603823,1604322,1604661,1605313,1605874,1606509,1607060,1607595,1608177,1608539,1609033,1609542,1610072,1610577,1611060,1611564,1612124,1612566,1613108,1613559,1614001,1614513,1614933,1615424,1615921,1616405,1616913,1617270,1617773,1618246,1618640,1619137,1619577,1619909,1620319,1620594,1620880,1621322,1621695,1622240,1624296,1626248,1628252,1630223,1631950,1633668,1635354,1637078,1638799,1640484,1642142,1643829,1645519,1647173,1648857,1650526,1652173,1653843,1655515,1657212,1658923,1660649,1662327,1663993,1665680,1667353,1669371,1671419,1673387,1675240,1677050,1678766,1680565,1682270,1683887,1685536,1687264,1689050,1690702,1692417,1694124,1695906,1697726,1699480,1701054,1702727,1704104,1704855,1705416,1706044,1706651,1707424,1708121,1709005,1709950,1711001,1712389,1713657,1714946,1716155,1717589,1719147,1720037,1721047,1722179,1722938,1723569,1724750,1726289,1728103,1729860,1731605,1733319,1734920,1736493,1737978,1739465,1740940,1742419,1743886,1745346,1746835,1748330,1749811,1751294,1752779,1754271,1755749,1757206,1758689,1760131,1761608,1763079,1764560,1766030,1767506,1768979,1770459,1771941,1773421,1774925,1776407,1777894,1779362,1780273,1780666,1781287,1781868,1782329,1782867,1783304,1783777,1784328,1784695,1784889,1785314,1785715,1786217,1786594,1787151,1787590,1787799,1788271,1788921,1789492,1790165,1790662,1791196,1791745,1792134,1792655,1793109,1793617,1794245,1794688,1795200,1795634,1796031,1796485,1796901,1797540,1798000,1798398,1798551,1798748,1799060,1799487,1800047,1800425,1800970,1801469,1802075,1802612,1803150,1803672,1803921,1804352,1804798,1804929,1805300,1805596,1805925,1806279,1806750,1807174,1807554,1808073,1808591,1809064,1809608,1810139,1810713,1811259,1811802,1812328,1812849,1813140,1813429,1813936,1814499,1814990,1815546,1816098,1816577,1817040,1817521,1817967,1818413,1818877,1819320,1819890,1820263,1820734,1821165,1821641,1822075,1822563,1823046,1823451,1823921,1824362,1824751,1826601,1828644,1830687,1832689,1834743,1836795,1838835,1840740,1842426,1844110,1845823,1847532,1849260,1850937,1852654,1854383,1856106,1857805,1859500,1861203,1862919,1864627,1866342,1868064,1869767,1871472,1873137,1874857,1876509,1878194,1879895,1881548,1883251,1884911,1886611,1888310,1890002,1891681,1893340,1895035,1896729,1898422,1900120,1901837,1903552,1905232,1906878,1908603,1910286,1912197,1914245,1916293,1918341,1920356,1921990,1923538,1925224,1926947,1928749,1930533,1932347,1934268,1935958,1937731,1939596,1941360,1943077,1944952,1946667,1948472,1950014,1951768,1953512,1955159,1956943,1958666,1960340,1962043,1963762,1965451,1967251,1968994,1970634,1972339,1974042,1974794,1975614,1976509,1977318,1978092,1978697,1979248,1979776,1980236,1980442,1980852,1981386,1982180,1982797,1983317,1983670,1984124,1984899,1985575,1986254,1986991,1987708,1988283,1988912,1989390,1989826,1990318,1990978,1991808,1992570,1993104,1993851,1994624,1995383,1996069,1996794,1997603,1998284,1999013,1999607,2000123,2000303,2000645,2000967,2001250,2001640,2001874,2002054,2002340,2002999,2003637,2004252,2005112,2005771,2006411,2007041,2007672,2008446,2009266,2009887,2010514,2011044,2011742,2012355,2012988,2013917,2015233,2016723,2018315,2020139,2021833,2023515,2025230,2026949,2028654,2030383,2032082,2033636,2034855,2036293,2037738,2039207,2040680,2042156,2043626,2045120,2046591,2048078,2049566,2051053,2052538,2054016,2055505,2056985,2058442,2059915,2061388,2062874,2064350,2065855,2067335,2068315,2068506,2068790,2069106,2069503,2069957,2070343,2070549,2070834,2071066,2071369,2071597,2072006,2072656,2073050,2073610,2074040,2074586,2074980,2075569,2076027,2076192,2076394,2076859,2077445,2077990,2078398,2078897,2079488,2079990,2080449,2081056,2081497,2082136,2082530,2082778,2082834,2083187,2083684,2084090,2084556,2084733,2084932,2085348,2085870,2086267,2086469,2086663,2086856,2087051,2087239,2087434,2087637,2087835,2088024,2088218,2088409,2088923,2089199,2089563,2089739,2089996,2090306,2090551,2091058,2091518,2092028,2092437,2092911,2094489,2096405,2098315,2100201,2102109,2104146,2106111,2107766,2109442,2111146,2112818,2114483,2116184,2117921,2119574,2121237,2122938,2124627,2126308,2127962,2129632,2131326,2132992,2134638,2136317,2138006,2139695,2141345,2143003,2144646,2146294,2147957,2149601,2151264,2152928,2154589,2156270,2157945,2159612,2161608,2163656,2165704,2167635,2169313,2171058,2172671,2174361,2176226,2177906,2179576,2181330,2183028,2184627,2186431,2188032,2189646,2191246,2192952,2194610,2196239,2197850,2199456,2201084,2202741,2204458,2206100,2207280,2208112,2208852,2209454,2209642,2210128,2210957,2211886,2212766,2213791,2214698,2215516,2216504,2217518,2218433,2219277,2219838,2220540,2221228,2221837,2223553,2225077,2226872,2228686,2230519,2232262,2234069,2235811,2237371,2238913,2240389,2241875,2243364,2244848,2246307,2247805,2249261,2250752,2252222,2253707,2255201,2256700,2257565,2258116,2258728,2259276,2259768,2260149,2260583,2260868,2261247,2261798,2262055,2262614,2263150,2263710,2264132,2264701,2265245,2265834,2266396,2266908,2267449,2267800,2268016,2268494,2268942,2269426,2269950,2270550,2271098,2271656,2271997,2272139,2272256,2272643,2272954,2274099,2276103,2278153,2280185,2281882,2283565,2285279,2286982,2288682,2290343,2292038,2293722,2295452,2297130,2298837,2300549,2302255,2303941,2305641,2307394,2309442,2311421,2313213,2315021,2316860,2318634,2320323,2322074,2323843,2325597,2327419,2329233,2331037,2332789,2333648,2334543,2335285,2336198,2337275,2338362,2339239,2340263,2341025,2342489,2343748,2345329,2347011,2348674,2350237,2351758,2353220,2354787,2356261,2357742,2359205,2360696,2362174,2363654,2365123,2366611,2368077,2369560,2370803,2371324,2371940,2372476,2373006,2373611,2374108,2374711,2374969,2375475,2375864,2376344,2376653,2377126,2377451,2377606,2377868,2378441,2378620,2379098,2379356,2379824,2380332,2380616,2381054,2381497,2382108,2382614,2383216,2383700,2384136,2384358,2384643,2385151,2385747,2386256,2387845,2389766,2391790,2393673,2395342,2397038,2398711,2400361,2402013,2403663,2405323,2407019,2408689,2410342,2412009,2413704,2415437,2417140,2418873,2420873,2422912,2424587,2426283,2427958,2429637,2431285,2432954,2434581,2436310,2438011,2439882,2441778,2443514,2444287,2445120,2445886,2446582,2447242,2447874,2448793,2449740,2450321,2451877,2453439,2454942,2456527,2458171,2459686,2461176,2462642,2464117,2465597,2467083,2468542,2470031,2471515,2472997,2474475,2475523,2475960,2476218,2476533,2476896,2477250,2477533,2477804,2478194,2478669,2479168,2479537,2480016,2480404,2480648,2480983,2481336,2481737,2482039,2482378,2482622,2482792,2483092,2483359,2483723,2484072,2484518,2485086,2485499,2485804,2486200,2486591,2486865,2487204,2487442,2487685,2488018,2488202,2488623,2490020,2492068,2494114,2496162,2497878,2499597,2501301,2503030,2504765,2506482,2508214,2509952,2511685,2513408,2515145,2516872,2518544,2520275,2521988,2523709,2525414,2527348,2529396,2531408,2533223,2535038,2536817,2538668,2540442,2542267,2544094,2545881,2547721,2549574,2551390,2553157,2554827,2556599,2558454,2560278,2562078,2563030,2563985,2565331,2567151,2569000,2570747,2572251,2573657,2575120,2576586,2578042,2579521,2581002,2582464,2583937,2585442,2586931,2588398,2589879,2591369,2592856,2594332,2595818,2597312,2598795,2600282,2601757,2603260,2604718,2606198,2607667,2608991,2609171,2609448,2609658,2609911,2610400,2610881,2611429,2611722,2612086,2612431,2612748,2613224,2613593,2613911,2614280,2614564,2614977,2615435,2615674,2615969,2616326,2616771,2617102,2617531,2617927,2618220,2618417,2618641,2618925,2619339,2619701,2619994,2620335,2620730,2621174,2621535,2621827,2622318,2622576,2622940,2623218,2623642,2624118,2624301,2624490,2624569,2624825,2625051,2625603,2625802,2626201,2626553,2626856,2627211,2627677,2628059,2628612,2628997,2629064,2629126,2629592,2629907,2630292,2630631,2631094,2631527,2631882,2632232,2632564,2632962,2633334,2633787,2634308,2634684,2635073,2636715,2638631,2640571,2642518,2644435,2646377,2648343,2650051,2651739,2653428,2655120,2656817,2658515,2660222,2661915,2663616,2665305,2666995,2668716,2670420,2672134,2673831,2675537,2677242,2678928,2680647,2682349,2684054,2685766,2687468,2689171,2690891,2692598,2694295,2696009,2697708,2699418,2701114,2702825,2704500,2706338,2708386,2710434,2712482,2714330,2715903,2717596,2719316,2721046,2722733,2724442,2726155,2727814,2729468,2731200,2732867,2734608,2736344,2738048,2739838,2741603,2743361,2745010,2746833,2748547,2750332,2751971,2753669,2755342,2757038,2758681,2760383,2762081,2762966,2763763,2764629,2765499,2765928,2765953,2765978,2766003,2766028,2766053,2766078,2766103,2768099,2769686,2771397,2773158,2774943,2776631,2778464,2780240,2781707,2783062,2784525,2786174,2787738,2789250,2790771,2792276,2793783,2795306,2796827,2798334,2799798,2801286,2802775,2804239,2805732,2807209,2808684,2810141,2811577,2813066,2814547,2816028,2817508,2818972,2820440,2821929,2823390,2824861,2826346,2827840,2829120,2829779,2830397,2831041,2831638,2832245,2832868,2833559,2834175,2834882,2835562,2836217,2836922,2837605,2838236,2838868,2839454,2840173,2840881,2841500,2842223,2842882,2843488,2844194,2844907,2845562,2846157,2846680,2847242,2847836,2848502,2849086,2849634,2850242,2850716,2851330,2851869,2852513,2853098,2853625,2854112,2854644,2855191,2855780,2856277,2856814,2857420,2858056,2858622,2859276,2859819,2860374,2861042,2861644,2862310,2862863,2863325,2863903,2864382,2864828,2865246,2865663,2866143,2866712,2867149,2867612,2868088,2868694,2869048,2869590,2870199,2870641,2871129,2871553,2871895,2872389,2872950,2873573,2874124,2874656,2875110,2875679,2876258,2876846,2877162,2877656,2878169,2878699,2879293,2879767,2879943,2880318,2880788,2881262,2881726,2882136,2882524,2882920,2883522,2884099,2884663,2885198,2885639,2887667,2889711,2891735,2893754,2895702,2897720,2899771,2901679,2903390,2905084,2906786,2908500,2910177,2911847,2913564,2915317,2916986,2918667,2920363,2922108,2923836,2925490,2927119,2928830,2930567,2932289,2934002,2935708,2937422,2939116,2940808,2942502,2944207,2945956,2947690,2949393,2951115,2952855,2954580,2956275,2958015,2959736,2961423,2963117,2964821,2966509,2968222,2969944,2971681,2973365,2975058,2976755,2978796,2980844,2982892,2984940,2986988,2988972,2990694,2992398,2994196,2995810,2997464,2999248,3001045,3002661,3004395,3006145,3007983,3009672,3011264,3013041,3014854,3016593,3018292,3020036,3021715,3023397,3025110,3026885,3028692,3030444,3032237,3033948,3035796,3037484,3039263,3040986,3042687,3044405,3046284,3048077,3049880,3051667,3053378,3055127,3056175,3056792,3057572,3058202,3058773,3059422,3060039,3060645,3061177,3061658,3063048,3064547,3066031,3067494,3069075,3070650,3072288,3073858,3075394,3076528,3077683,3079206,3080680,3082265,3083662,3085270,3086838,3088315,3089911,3091335,3092738,3094064,3095475,3096865,3098216,3099129,3100151,3101431,3102308,3103055,3104277,3105637,3107067,3108686,3110294,3112023,3113434,3115269,3116911,3118325,3119927,3121620,3123319,3125011,3126705,3128348,3130025,3131662,3133335,3134901,3136476,3138034,3139627,3141065,3142545,3144024,3145478,3146956,3148419,3149881,3151377,3152862,3154314,3155789,3157274,3158717,3160157,3161616,3163069,3164523,3166004,3167469,3168951,3170447,3171916,3173382,3174845,3176317,3177781,3179238,3180699,3182169,3183646,3185118,3186583,3188056,3189512,3190979,3192470,3193932,3195427,3196878,3198350,3199847,3201302,3202745,3204249,3205720,3207209,3208697,3210162,3211649,3212188,3212647,3213186,3213692,3214153,3214532,3214918,3215347,3215767,3216249,3216730,3217089,3217541,3218034,3218522,3218924,3219275,3219839,3220297,3220558,3220832,3221175,3221456,3221873,3222189,3222555,3222848,3223107,3223622,3224088,3224558,3225043,3225513,3225916,3226206,3226664,3226950,3227357,3227887,3228287,3228658,3229029,3229382,3229952,3230469,3230951,3231420,3231841,3232182,3232388,3232726,3233259,3233571,3233877,3234284,3234790,3235271,3235749,3236088,3236310,3236738,3237272,3237697,3238220,3238651,3239054,3239310,3239490,3239962,3240449,3240875,3241331,3241742,3242170,3242555,3242924,3243337,3243790,3244268,3244784,3245275,3245686,3246032,3246338,3246805,3247140,3247571,3247832,3248256,3248485,3248817,3249185,3249496,3249690,3250007,3250481,3250799,3251076,3251385,3251566,3251952,3252258,3252622,3252974,3253398,3253653,3253998,3254409,3254768,3255103,3255526,3255927,3256417,3256946,3257456,3257916,3258197,3258546,3258739,3259101,3259565,3259875,3260359,3260558,3261021,3261463,3261916,3262230,3262651,3262919,3263342,3263673,3263960,3264381,3264793,3265267,3265654,3265894,3266056,3266557,3267057,3267532,3267968,3268330,3268823,3269630,3271636,3273632,3275594,3277571,3279527,3281481,3283505,3285446,3287422,3289347,3291354,3293402,3295225,3296919,3298561,3300221,3301875,3303568,3305210,3306899,3308597,3310255,3311910,3313595,3315289,3316961,3318666,3320326,3321999,3323705,3325389,3327058,3328732,3330423,3332109,3333822,3335503,3337166,3338857,3340549,3342244,3343925,3345614,3347289,3348963,3350639,3352345,3354049,3355751,3357426,3359103,3360789,3362470,3364145,3365855,3367555,3369240,3370945,3372666,3374334,3375979,3377662,3379351,3381075,3382766,3384440,3386123,3387800,3389478,3391161,3392845,3394516,3396206,3397887,3399571,3401320,3403368,3405416,3407464,3409512,3411560,3413608,3415258,3416954,3418573,3420233,3421835,3423532,3425212,3426861,3428554,3430276,3432015,3433639,3435442,3437095,3438812,3440569,3442314,3444006,3445761,3447548,3449297,3451013,3452713,3454478,3456246,3457989,3459673,3461381,3463134,3464835,3466531,3468389,3470074,3471746,3473547,3475346,3477150,3478851,3480497,3482219,3484012,3485736,3487473,3489024,3490004,3490844,3491635,3492467,3493254,3494005,3494917,3495575,3496474,3497329,3498026,3498677,3499090,3499554,3499883,3500300,3500651,3501067,3501303,3501858,3502344,3502877,3503324,3503662,3503927,3504503,3504953,3505452,3505950,3506560,3507237,3507580,3507796,3508267,3508730,3509124,3509897,3510481,3510983,3511313,3511782,3512111,3512564,3512715,3513066,3513502,3513921,3514433,3514840,3515202,3515684,3516483,3518104,3519733,3521179,3521866,3522802,3524428,3526055,3527694,3529377,3531058,3532772,3534510,3536320,3538043,3539806,3541549,3543296,3544988,3546721,3548410,3549999,3551542,3553091,3554588,3556054,3557521,3559013,3560488,3561988,3563472,3564956,3566450,3567962,3569460,3570974,3572464,3573932,3575401,3576028,3576449,3576642,3577059,3577658,3578110,3578185,3578260,3578518,3578867,3579476,3580071,3580518,3581018,3581451,3582033,3582510,3582949,3583490,3584092,3584567,3584958,3585375,3585881,3586435,3586791,3587343,3587859,3588193,3588673,3589059,3589465,3589894,3590235,3590537,3590757,3591112,3591439,3591953,3592447,3592999,3593443,3594036,3594303,3595829,3597841,3599802,3601757,3603632,3605334,3607055,3608794,3610516,3612243,3613988,3615715,3617452,3619180,3620911,3622635,3624345,3626083,3627804,3629517,3631215,3632930,3634662,3636363,3638070,3640085,3642133,3644114,3645837,3647576,3649355,3651107,3652895,3654598,3656316,3658067,3659814,3661546,3663289,3665067,3666808,3668571,3670360,3672111,3673659,3674468,3675402,3676218,3677141,3677540,3677565,3677590,3677615,3677640,3677665,3677690,3677715,3679321,3680976,3682527,3684217,3685912,3687387,3688723,3689805,3691000,3692605,3694131,3695691,3697178,3698664,3700173,3701671,3703154,3704656,3706149,3707647,3709140,3710625,3712093,3713543,3715003,3716480,3717914,3719423,3720110,3720767,3721233,3721826,3722316,3722739,3723202,3723655,3724125,3724656,3725173,3725620,3726169,3726727,3727163,3727611,3727807,3728171,3728420,3728771,3729171,3729746,3730007,3730552,3731044,3731567,3732249,3732746,3733189,3733638,3734022,3734524,3735126,3735516,3735935,3736458,3736975,3737502,3738066,3738539,3739122,3739828,3740531,3741061,3741464,3741954,3742199,3743684,3745687,3747740,3749759,3751781,3753498,3755213,3756936,3758645,3760356,3762020,3763678,3765374,3767100,3768826,3770535,3772205,3773904,3775620,3777350,3779054,3780763,3782487,3784179,3785844,3787656,3789704,3791752,3793688,3795487,3797271,3799083,3800931,3802617,3804372,3806222,3808014,3809858,3811705,3813515,3815369,3817207,3818968,3820839,3822629,3824387,3826124,3826900,3827537,3828512,3829324,3830002,3830727,3831506,3832032,3832846,3833694,3834447,3835201,3836070,3836942,3837299,3837987,3838942,3840410,3841520,3842363,3843916,3845386,3846913,3848539,3850138,3851753,3853325,3854743,3856119,3857598,3859022,3860387,3861842,3863263,3864734,3866211,3867659,3869133,3870613,3872110,3873589,3875058,3876556,3878054,3879541,3881034,3882518,3884001,3885487,3886982,3888469,3889937,3891435,3892898,3894388,3895887,3897364,3898863,3900358,3901880,3903393,3904864,3906342,3907844,3909333,3910819,3912298,3913751,3915225,3916718,3918059,3918548,3919072,3919671,3920140,3920608,3921154,3921422,3921987,3922540,3923123,3923313,3923872,3924412,3925076,3925737,3926313,3926871,3927432,3928015,3928573,3929094,3929618,3930110,3930489,3930691,3931183,3931737,3932248,3932819,3933350,3933800,3934314,3934857,3935423,3936071,3936641,3937039,3937552,3938072,3938691,3939194,3939769,3940261,3940755,3941231,3941828,3942380,3942952,3943501,3944107,3944663,3945172,3945540,3945993,3946521,3946971,3947451,3948068,3948575,3949033,3949588,3950047,3950502,3950985,3951226,3951543,3952067,3952513,3953016,3953302,3953765,3954291,3954818,3955358,3955822,3956225,3956299,3956390,3956575,3956699,3956881,3957156,3957359,3957753,3958094,3958531,3959088,3959413,3959874,3960095,3960366,3960524,3960657,3961014,3961480,3962160,3962646,3963138,3963665,3964220,3964729,3965277,3965803,3966390,3966871,3967351,3967616,3968162,3968708,3969136,3969632,3970098,3970589,3971089,3971504,3971987,3972425,3972938,3973486,3974089,3974615,3975106,3975534,3976039,3976443,3976865,3977389,3977836,3978231,3978751,3979201,3979387,3979757,3980267,3980606,3981204,3983211,3985196,3987216,3989261,3991248,3993273,3995237,3997285,3999333,4001382,4003368,4005019,4006652,4008275,4009921,4011649,4013364,4015057,4016743,4018401,4020072,4021771,4023475,4025153,4026863,4028598,4030327,4032042,4033768,4035421,4037115,4038856,4040554,4042281,4043967,4045658,4047403,4049147,4050882,4052627,4054324,4056016,4057659,4059359,4061106,4062855,4064592,4066331,4068066,4069802,4071521,4073257,4074982,4076719,4078450,4080188,4081874,4083530,4085214,4086919,4088595,4090302,4092029,4093771,4095507,4097229,4098954,4100610,4102286,4104002,4105722,4107731,4109779,4111827,4113875,4115923,4117971,4120019,4121948,4123447,4124877,4126492,4128208,4129942,4131632,4133227,4134883,4136530,4138264,4140010,4141821,4143579,4145295,4146921,4148618,4150331,4152056,4153797,4155379,4157232,4159108,4160884,4162632,4164362,4165947,4167745,4169562,4171330,4173088,4174875,4176644,4178393,4180217,4181977,4183719,4185492,4187218,4189027,4190744,4192376,4193994,4195648,4197384,4199108,4200899,4202639,4204383,4206127,4207634,4209276,4211075,4212424,4212995,4213641,4214325,4214932,4215438,4215861,4216524,4217234,4217709,4218322,4218674,4220082,4221479,4222877,4224534,4225743,4227065,4228545,4230037,4231719,4232901,4234039,4235376,4236781,4238018,4239390,4240640,4241790,4243109,4244769,4245484,4246835,4248231,4249691,4250588,4252057,4253685,4254493,4255689,4256902,4258333,4259700,4261085,4262526,4264096,4264905,4265803,4266368,4267621,4269329,4270911,4271798,4272789,4274224,4275619,4276937,4278254,4279623,4280945,4282552,4284193,4284842,4285810,4286240,4287090,4288342,4289515,4290334,4291190,4292725,4294354,4296064,4297834,4299635,4301472,4303255,4305003,4306737,4308606,4310411,4311824,4313260,4314619,4315933,4317397,4318833,4320194,4321525,4322967,4324476,4325963,4327416,4328884,4330342,4331792,4333260,4334702,4336179,4337674,4339161,4340655,4342152,4343641,4345122,4346612,4348096,4349582,4351084,4352564,4354017,4355485,4356974,4358459,4359936,4361419,4362889,4364370,4365803,4367295,4368793,4370258,4371716,4373162,4374649,4376136,4377597,4379090,4380583,4382070,4383558,4385027,4386511,4387996,4389471,4390957,4392448,4393911,4395373,4396837,4398342,4399817,4401287,4402769,4404255,4405721,4407206,4408699,4410162,4411669,4413151,4414629,4416102,4417595,4419072,4420520,4421985,4423454,4424924,4426406,4427892,4429379,4430846,4432338,4433834,4435321,4436810,4438279,4439313,4439678,4440255,4440844,4441504,4442025,4442615,4443170,4443717,4444338,4444966,4445553,4446219,4446840,4447430,4448036,4448601,4448978,4449490,4450018,4450573,4451066,4451457,4452067,4452683,4453263,4453882,4454499,4454746,4455305,4455891,4456467,4456937,4457683,4458353,4458854,4459500,4460134,4460773,4461247,4461753,4462231,4462771,4463255,4463866,4464419,4465065,4465630,4466254,4466858,4467456,4467953,4468412,4468832,4469322,4469820,4470333,4470894,4471346,4471811,4472262,4472731,4473228,4473772,4474283,4474848,4475406,4476050,4476595,4477179,4477774,4478391,4479007,4479576,4480162,4480759,4481409,4481936,4482541,4483166,4483687,4484208,4484668,4485185,4485692,4485986,4486386,4486859,4487373,4487901,4488414,4488946,4489488,4490052,4490631,4491266,4491822,4492422,4492997,4493577,4494202,4494744,4495326,4495853,4496352,4496946,4497298,4497597,4498140,4498727,4499263,4499785,4500241,4500781,4501259,4501700,4502139,4502475,4502957,4503277,4503655,4504108,4504621,4505172,4505685,4506202,4506775,4507257,4507618,4507779,4508226,4508758,4509150,4509569,4510038,4510456,4510889,4511353,4511715,4512174,4512687,4513143,4513630,4514000,4514431,4515016,4515762,4516388,4516816,4517366,4517859,4518411,4518961,4519435,4519985,4520579,4521100,4521670,4522201,4522819,4523137,4523656,4524031,4524513,4524982,4525498,4526032,4526536,4527014,4527550,4528100,4528681,4529184,4529513,4529988,4530459,4530893,4531445,4531952,4532500,4533069,4533671,4534209,4534665,4535050,4535657,4536103,4536592,4537046,4537558,4538027,4538305,4538734,4539208,4539768,4540332,4540937,4541398,4541885,4542383,4542849,4543279,4543774,4544293,4544917,4545260,4545725,4546063,4546571,4546891,4547376,4547778,4548240,4548703,4549198,4549551,4549902,4550204,4550425,4550606,4550862,4551180,4551488,4551721,4552135,4552524,4552794,4553259,4553465,4553616,4553916,4554222,4554459,4555092,4555700,4556392,4556919,4557436,4558033,4558487,4559118,4559584,4560121,4560716,4561362,4561778,4562161,4562662,4563081,4563655,4564187,4564752,4565305,4565963,4566595,4567203,4567818,4568414,4568839,4569348,4569916,4570486,4570845,4571363,4571817,4572344,4572829,4573398,4573872,4574421,4574855,4575080,4575351,4575681,4576001,4576386,4576918,4577303,4577857,4578379,4579010,4579577,4580600,4582626,4584637,4586556,4588555,4590546,4592576,4594580,4596595,4598629,4600644,4602648,4604669,4606628,4608668,4610656,4612662,4614693,4616721,4618776,4620651,4622381,4624092,4625751,4627437,4629130,4630833,4632556,4634286,4636023,4637743,4639482,4641199,4642895,4644593,4646259,4647975,4649674,4651364,4653039,4654740,4656466,4658181,4659896,4661607,4663274,4665000,4666708,4668418,4670135,4671847,4673555,4675261,4676979,4678659,4680325,4682018,4683703,4685370,4687052,4688741,4690392,4692064,4693752,4695437,4697139,4698837,4700525,4702230,4703916,4705601,4707286,4708980,4710673,4712348,4714029,4715715,4717424,4719107,4720800,4722487,4724169,4725845,4727519,4729225,4730919,4732599,4734288,4735984,4737676,4739385,4741083,4742802,4744512,4746210,4747874,4749603,4751310,4752987,4754669,4756342,4758051,4759761,4761441,4763140,4764837,4766488,4768153,4769855,4771576,4773266,4774959,4776636,4778294,4779948,4781601,4783271,4784922,4786592,4788300,4789980,4791689,4793380,4795098,4796774,4798459,4800160,4801854,4803572,4805308,4807016,4808717,4810449,4812114,4813824,4815502,4817182,4818866,4820525,4822223,4824072,4826120,4828168,4830216,4832264,4834312,4836360,4838408,4840456,4842504,4844552,4846600,4848648,4850696,4852579,4854345,4856008,4857684,4859377,4861047,4862797,4864517,4866219,4867936,4869699,4871342,4872990,4874669,4876378,4878093,4879673,4881429,4883192,4884859,4886560,4888230,4890042,4891744,4893494,4895341,4897036,4898748,4900369,4901980,4903605,4905265,4906985,4908618,4910246,4911919,4913582,4915239,4916894,4918561,4920243,4921921,4923552,4925086,4926703,4928408,4930149,4931828,4933599,4935280,4936982,4938600,4940182,4941844,4943486,4945066,4946662,4948342,4950089,4951877,4953635,4955364,4957111,4958930,4960614,4962281,4963955,4965752,4967382,4969053,4970710,4972314,4974051,4975711,4977401,4978957,4980551,4982134,4983642,4985309,4986898,4988630,4990299,4992010,4993644,4995374,4996982,4998746,5000555,5002310,5004122,5005937,5007652,5009289,5010920,5012608,5014276,5016015,5017032,5017663,5018280,5018899,5019254,5019728,5019847,5020449,5021155,5021740,5022412,5023027,5023539,5024230,5024969,5025570,5026248,5027036,5027669,5028282,5028887,5029487,5030114,5030797,5031562,5032107,5032722,5033930,5035394,5036758,5038039,5039683,5041282,5042775,5044240,5045843,5047499,5048828,5049898,5051315,5052411,5053427,5054573,5055584,5056445,5057401,5058528,5059082,5060226,5061202,5061921,5063039,5063952,5064909,5065827,5066859,5068102,5069508,5071187,5072809,5074432,5076020,5077427,5079140,5080828,5082414,5084022,5085712,5087328,5088859,5090476,5092050,5093598,5094910,5096354,5097902,5099556,5101256,5102892,5104435,5106005,5107427,5108891,5110230,5111746,5113174,5114471,5116068,5117311,5118911,5120520,5122068,5123474,5124863,5126189,5127711,5129236,5130694,5132111,5133719,5135343,5136967,5138555,5139970,5140875,5142180,5143429,5144242,5144651,5145538,5146714,5147916,5149132,5150148,5151205,5152207,5153168,5154228,5155219,5156088,5157047,5157845,5158559,5159208,5159649,5159810,5159928,5160543,5161155,5161713,5162277,5162684,5163257,5164436,5165964,5167280,5168573,5169745,5171007,5172191,5173785,5175365,5176952,5178402,5179905,5181316,5182729,5184147,5185301,5185972,5186735,5187795,5189079,5190539,5192059,5193600,5194748,5196365,5197640,5199115,5200504,5202080,5203324,5203986,5205233,5206729,5208218,5209608,5211019,5212565,5214026,5215647,5217170,5218759,5220264,5221185,5222157,5223088,5223639,5224895,5226317,5227451,5227849,5228631,5229173,5229657,5230495,5231656,5232504,5233596,5234753,5235625,5236221,5237417,5238346,5239819,5241183,5241810,5242269,5243751,5245177,5246485,5247503,5248715,5250006,5250949,5251758,5252326,5252963,5254063,5254551,5255242,5255494,5256109,5257046,5257770,5258415,5259222,5259698,5260137,5261475,5262995,5264542,5265826,5267410,5269080,5270658,5272095,5273734,5275309,5276597,5277115,5277892,5279289,5280719,5282131,5283272,5284162,5285706,5286847,5287738,5289126,5290424,5291445,5292799,5293568,5294069,5294645,5294989,5295385,5295774,5296231,5296723,5297089,5297506,5297851,5298272,5298737,5299092,5299420,5299867,5300416,5301182,5302014,5302688,5303198,5303698,5304100,5304523,5305233,5305452,5305828,5306215,5306503,5307190,5308056,5308421,5309234,5310087,5310700,5311055,5311659,5312262,5312668,5313060,5313428,5313843,5314206,5315022,5316595,5318117,5319700,5321316,5322955,5324577,5325930,5326510,5327109,5327328,5327539,5327782,5328244,5329406,5331004,5332883,5334799,5336246,5337160,5338785,5340546,5342233,5343871,5345609,5347352,5349098,5350867,5352683,5354435,5356247,5357986,5359780,5361600,5363402,5365214,5367045,5368854,5370652,5372469,5374319,5376109,5377843,5379582,5381159,5382580,5384072,5385534,5387017,5388495,5389969,5391400,5392878,5394374,5395850,5397289,5398771,5400240,5401710,5402145,5402663,5403096,5403471,5403934,5404407,5404901,5405259,5405759,5406138,5406573,5407123,5407518,5407920,5408198,5408506,5408852,5409195,5409510,5409794,5410062,5410616,5411048,5411382,5411967,5412401,5412900,5413359,5413846,5414234,5414760,5415105,5415628,5416131,5416621,5417128,5417569,5418021,5418378,5418725,5419340,5421313,5423272,5425180,5426905,5428569,5430239,5431911,5433593,5435265,5436933,5438587,5440252,5441916,5443580,5445275,5446959,5448647,5450342,5452017,5453698,5455604,5457652,5459473,5461142,5462769,5464449,5466171,5467849,5469560,5471268,5473014,5474760,5476580,5478167,5479757,5480943,5481365,5481744,5482292,5482404,5483334,5484313,5485399,5486372,5487377,5488461,5489327,5490404,5491437,5492096,5493216,5494475,5496142,5497897,5499628,5501271,5502535,5504015,5505485,5506959,5508450,5509931,5511421,5512906,5513321,5513546,5514152,5514809,5515424,5515853,5516430,5516984,5517464,5518013,5518428,5518866,5519272,5519702,5520159,5520489,5521021,5521265,5521702,5522014,5522524,5522972,5523436,5523753,5524325,5526372,5528346,5530004,5531679,5533400,5535114,5536804,5538471,5540126,5541793,5543445,5545079,5546738,5548706,5550638,5552356,5554158,5556048,5557847,5559552,5561315,5563079,5564765,5566064,5566618,5567009,5567758,5568872,5569821,5570828,5571668,5572737,5573725,5575173,5576668,5578363,5579917,5581518,5582996,5584463,5585949,5587447,5588923,5590387,5591839,5593330,5594580,5595164,5595750,5596296,5596642,5596970,5597342,5597829,5598221,5598733,5599288,5599674,5600141,5600624,5601106,5601558,5601997,5602462,5602884,5603460,5603922,5604390,5604964,5605381,5605896,5606392,5606795,5607325,5607863,5609349,5611348,5613255,5614948,5616653,5618342,5620025,5621733,5623431,5625121,5626795,5628515,5630225,5631918,5633597,5635627,5637543,5639325,5641085,5642760,5644513,5646283,5647957,5649765,5651523,5653197,5654085,5654759,5655350,5656467,5658112,5659237,5660590,5662026,5663849,5665503,5667058,5668428,5669923,5671406,5672885,5674390,5675920,5677417,5678902,5680394,5680864,5681403,5681921,5682452,5682985,5683293,5683678,5684185,5684726,5685220,5685816,5686377,5687042,5687627,5687749,5687908,5688318,5688778,5689306,5689883,5690433,5690998,5691740,5693769,5695716,5697404,5699097,5700779,5702455,5704133,5705816,5707489,5709159,5710822,5712601,5714609,5716348,5718067,5719795,5721486,5723194,5724836,5726458,5727211,5727972,5729113,5730698,5731918,5733178,5734622,5736260,5737882,5739313,5740701,5742139,5743677,5745144,5746642,5748118,5749555,5751036,5752518,5753988,5755459,5756962,5758478,5759971,5760570,5760934,5761260,5761657,5761984,5762199,5762625,5763105,5763461,5763942,5764296,5764643,5764943,5765192,5765490,5765918,5766358,5766549,5767060,5767514,5767694,5768079,5768433,5768691,5769109,5769486,5769902,5770512,5770954,5771389,5771781,5772007,5772278,5772770,5773132,5773625,5773974,5774661,5776653,5778647,5780648,5782427,5784117,5785790,5787447,5789154,5790850,5792525,5794204,5795911,5797625,5799336,5801043,5802760,5804455,5806159,5807851,5809539,5811409,5813457,5815435,5817048,5818676,5820409,5822149,5823849,5825658,5827514,5829322,5831203,5833007,5834758,5836464,5838162,5839609,5840173,5840863,5841597,5842462,5843670,5844374,5845315,5846163,5846969,5847524,5848044,5849751,5850946,5852281,5853837,5855373,5856846,5858391,5859862,5861336,5862879,5864375,5865858,5867349,5868831,5870314,5871787,5873290,5874537,5874859,5875381,5876000,5876563,5877066,5877539,5878004,5878604,5879145,5879619,5879957,5880531,5881110,5881621,5882152,5882684,5883348,5883993,5884592,5884987,5885366,5885660,5887388,5889338,5891130,5892821,5894514,5896218,5897924,5899595,5901277,5902957,5904645,5906314,5908351,5910052,5911759,5913517,5915246,5916989,5918739,5920456,5921541,5922255,5923320,5924868,5926424,5927917,5929396,5930930,5932490,5933948,5935505,5937018,5938534,5940080,5941581,5943101,5944584,5946064,5947552,5949055,5950542,5952017,5953515,5955001,5956483,5957937,5959422,5960931,5962425,5963897,5965366,5966859,5968341,5969824,5971294,5972799,5973781,5974417,5975046,5975645,5976313,5976834,5977036,5977494,5977774,5978100,5978669,5978906,5979280,5979888,5980410,5981056,5981600,5982074,5982664,5983277,5983713,5984279,5984708,5985399,5986023,5986603,5987151,5987708,5988390,5988994,5989638,5990307,5990889,5991445,5991930,5992476,5992913,5993325,5993854,5994332,5994960,5995512,5996009,5996425,5996950,5997561,5998083,5998708,5999295,5999805,6000286,6000409,6000548,6000837,6001268,6001800,6002113,6002462,6002900,6003418,6004031,6004627,6005058,6005637,6006224,6006618,6006932,6007177,6007760,6008314,6009018,6009513,6009992,6011947,6013953,6015963,6017982,6019966,6021993,6023620,6025326,6027023,6028721,6030423,6032134,6033811,6035507,6037223,6038923,6040613,6042310,6044004,6045710,6047388,6049070,6050798,6052478,6054166,6055846,6057518,6059216,6060906,6062595,6064290,6065990,6067660,6069358,6071041,6072710,6074396,6076214,6078262,6080310,6082358,6084151,6085928,6087656,6089355,6091175,6092896,6094655,6096547,6098255,6100031,6101791,6103558,6105275,6107031,6108789,6110501,6112225,6113955,6115635,6117422,6119210,6120960,6122743,6124467,6126257,6128133,6128930,6129655,6130262,6130973,6131614,6132289,6132829,6133580,6134098,6134694,6135132,6135737,6136297,6137036,6137998,6138880,6139774,6140671,6141608,6142309,6142811,6143101,6143704,6144386,6144953,6145364,6146030,6146413,6146726,6147036,6147708,6148628,6149494,6150374,6150958,6152235,6153193,6153827,6154126,6155368,6156971,6158619,6160243,6161864,6163666,6165381,6167066,6168698,6170226,6171693,6173273,6174799,6176254,6177739,6179224,6180673,6182148,6183628,6185101,6186574,6188049,6189506,6190968,6192471,6193956,6195433,6196886,6197502,6198015,6198525,6198966,6199407,6199975,6200266,6200778,6201221,6201817,6201966,6202260,6202851,6203345,6203885,6204207,6204773,6205343,6205947,6206433,6206818,6207430,6207678,6207853,6208357,6208911,6209210,6209472,6209638,6209970,6210455,6211007,6211503,6212021,6212521,6212769,6213154,6213556,6213958,6214465,6215000,6215413,6215729,6216079,6216611,6217147,6217760,6219776,6221824,6223825,6225854,6227665,6229377,6231094,6232796,6234513,6236243,6237912,6239617,6241315,6243056,6244722,6246436,6248119,6249802,6251500,6253229,6254947,6256624,6258313,6259993,6261645,6263618,6265666,6267695,6269562,6271431,6273141,6274942,6276691,6278482,6280265,6282193,6284015,6285825,6287607,6289449,6291335,6293205,6294934,6296735,6298371,6299661,6300351,6301160,6301826,6302589,6303297,6304172,6305180,6305896,6306811,6307749,6308721,6309514,6310405,6311225,6312193,6312938,6313573,6314105,6315218,6316675,6317278,6318038,6319558,6321120,6322725,6324340,6325947,6327484,6328986,6330458,6331500,6332110,6332736,6333220,6333600,6335093,6336758,6338445,6340286,6342090,6343156,6344344,6345857,6347266,6348766,6350250,6351722,6353214,6354713,6356194,6357658,6359071,6359623,6360186,6360744,6361325,6361884,6362215,6362610,6363132,6363541,6364083,6364612,6364973,6365387,6365561,6365953,6366448,6366879,6367148,6367491,6367810,6368098,6368381,6368776,6369247,6369757,6370124,6371123,6373055,6374933,6376583,6378245,6379900,6381597,6383269,6384919,6386602,6388299,6389975,6391674,6393350,6395347,6397076,6398606,6400239,6401966,6403698,6405444,6407143,6408866,6410468,6411063,6411692,6412152,6413841,6415240,6416268,6417484,6418715,6420337,6421991,6423615,6424641,6425132,6426252,6427993,6429450,6430826,6431350,6432052,6433742,6435275,6436886,6438377,6439896,6441320,6442776,6444252,6445751,6447233,6448696,6450184,6451660,6453144,6454627,6456127,6457617,6459093,6460575,6462068,6463586,6465049,6466563,6468030,6469509,6470973,6472454,6473926,6475410,6476885,6478358,6479861,6480675,6481286,6481879,6482409,6483031,6483636,6484212,6484817,6485319,6485762,6486293,6486913,6487517,6487915,6488358,6488752,6489191,6489766,6490400,6490873,6491357,6491891,6492401,6492610,6493163,6493743,6494147,6494385,6494772,6495313,6495907,6496466,6497059,6497658,6498025,6498504,6498986,6499466,6499895,6500349,6500834,6501322,6501619,6502093,6502589,6502879,6503260,6503578,6503994,6504491,6504958,6505499,6505975,6506421,6506831,6507423,6507991,6508606,6509105,6509659,6510169,6510587,6511056,6511577,6512080,6512660,6513148,6513644,6513940,6514426,6514898,6515384,6515840,6516225,6516844,6517384,6517755,6518169,6518579,6519014,6519275,6519616,6520069,6520343,6520882,6521282,6521714,6522290,6522672,6523096,6524977,6527007,6529061,6531117,6533133,6535150,6537194,6539043,6540767,6542494,6544227,6545934,6547673,6549400,6551129,6552872,6554595,6556349,6558086,6559831,6561564,6563312,6565055,6566752,6568494,6570215,6571920,6573657,6575372,6577062,6578715,6580394,6582071,6583750,6585431,6587114,6588811,6590521,6592249,6593967,6595685,6597401,6599126,6600842,6602485,6604139,6605889,6607937,6609985,6612033,6614081,6616076,6617909,6619713,6621519,6623337,6625143,6626969,6628763,6630569,6632347,6634127,6635937,6637760,6639616,6641484,6643377,6645177,6646989,6648797,6650589,6652441,6654152,6655793,6657510,6659188,6660896,6662686,6664460,6666243,6667996,6669808,6671589,6673403,6675039,6676658,6677429,6678078,6678892,6679605,6680150,6680680,6681540,6682843,6684075,6685074,6686074,6686893,6688021,6688958,6689956,6691111,6692206,6693094,6694073,6695190,6696063,6696755,6697437,6698410,6699619,6701335,6702851,6704177,6705846,6707449,6709138,6710777,6712447,6714060,6715722,6717460,6719145,6720525,6721061,6721759,6723451,6724978,6726482,6727128,6727528,6729158,6730799,6732304,6733206,6733639,6734968,6736733,6738179,6739391,6739936,6740811,6742530,6744022,6745541,6746085,6746531,6748252,6749829,6751331,6752123,6752543,6754005,6755790,6757204,6758252,6758758,6759811,6761538,6763011,6764430,6764965,6765604,6767303,6768836,6770326,6771006,6771410,6773006,6774679,6776166,6777122,6777583,6778850,6780607,6782049,6783330,6783900,6784725,6786433,6787939,6789451,6790042,6790448,6792163,6793750,6795260,6796077,6796482,6797910,6799691,6801093,6802190,6802719,6803733,6805452,6806938,6808377,6808916,6809510,6811220,6812766,6814330,6815804,6817265,6818743,6820224,6821681,6822642,6823092,6823490,6823708,6823934,6824138,6824486,6824960,6825309,6825793,6826337,6826733,6827135,6827542,6827820,6828062,6828462,6828799,6829155,6831058,6832935,6834581,6836215,6837867,6839537,6841219,6842861,6844505,6846134,6847914,6849693,6851213,6852812,6854434,6856027,6857675,6858978,6859358,6859529,6860358,6861349,6862480,6862964,6864656,6866324,6867587,6868133,6868964,6870674,6872176,6873406,6874889,6876353,6877830,6879266,6880713,6881743,6882293,6882697,6883102,6883569,6884027,6884532,6885276,6885842,6886353,6886835,6887226,6887596,6887968,6888429,6888871,6889418,6891084,6892858,6894518,6896173,6897854,6899472,6901123,6902793,6904697,6906269,6907859,6909461,6910621,6911065,6911601,6912063,6912302,6912830,6913714,6914954,6916525,6918196,6919098,6919785,6920531,6921227,6921837,6922591,6923332,6924074,6924812,6925436,6926100,6926886,6927641,6928805,6930654,6932711,6934751,6936799,6938856,6940040,6941506,6942948,6944215,6945581,6947067,6948527,6949964,6951475,6953027,6954542,6956031,6957490,6958928,6960272,6961653,6963133,6964511,6966069,6967488,6968828,6970165,6971616,6973026,6974343,6975937,6977476,6978862,6980213,6981631,6983176,6984597,6986159,6987656,6989022,6990524,6991530,6991938,6991984,6992056,6992432,6992788,6993135,6993552,6994126,6994551,6995006,6995544,6996168,6997144,6998295,6999380,7000439,7001485,7002729,7003968,7005186,7005868,7006427,7006997,7007523,7008057,7008690,7009392,7009830,7010145,7010576,7011044,7011502,7012286,7013812,7015324,7016775,7018208,7019680,7021220,7022813,7024378,7025925,7027501,7029074,7030614,7032264,7033699,7035208,7036762,7038367,7040053,7041664,7043266,7044958,7046635,7048242,7049734,7051350,7052839,7054354,7055914,7057512,7058918,7060191,7061124,7062092,7063072,7064112,7065270,7066397,7067560,7068786,7070001,7071138,7072347,7073797,7075229,7076686,7078039,7079477,7080891,7082469,7083785,7084947,7086119,7087327,7088498,7089812,7091088,7092445,7093899,7095226,7096640,7098050,7099424,7100557,7101947,7103263,7104277,7105384,7106504,7107637,7108804,7110024,7111513,7112905,7114104,7115378,7116956,7118379,7119700,7121334,7122804,7124548,7125608,7126904,7128091,7129281,7130948,7132136,7133291,7134462,7135612,7136811,7137978,7139100,7140402,7141958,7143482,7144894,7146344,7147837,7149408,7151020,7152581,7154143,7155752,7157317,7158866,7160497,7161979,7163441,7165040,7166663,7168363,7169934,7171594,7173285,7174948,7176513,7177977,7179583,7181061,7182565,7184133,7185722,7187074,7188844,7190895,7192943,7194970,7197018,7198897,7200354,7201926,7203403,7204863,7206315,7207843,7209443,7211017,7212540,7214121,7215719,7217286,7218904,7220402,7221947,7223432,7225052,7226729,7228343,7229918,7231616,7233290,7234887,7236415,7237961,7239513,7241015,7242570,7244139,7245623,7246906,7247992,7249366,7250650,7251672,7252759,7253916,7255039,7256192,7257408,7258885,7260304,7261532,7262836,7264434,7265799,7267146,7268755,7270236,7271983,7273079,7274383,7275597,7276764,7278433,7279663,7280822,7282004,7283152,7284324,7285474,7286608,7287258,7287738,7288125,7288949,7289704,7290521,7291253,7292101,7292858,7293705,7294467,7295116,7295743,7296600,7297179,7297879,7298462,7299225,7300041,7300844,7301361,7302139,7302860,7303609,7304428,7305355,7306090,7306779,7307141,7307505,7308316,7308914,7309622,7310243,7311062,7311892,7313223,7314752,7316132,7317138,7318036,7318844,7319635,7320729,7321917,7323056,7324150,7325277,7326280,7327339,7328374,7329456,7330527,7331645,7332768,7333863,7334932,7336050,7337120,7338151,7339223,7340301,7341360,7342455,7343547,7344558,7345612,7346636,7347636,7348589,7349853,7350934,7351771,7352937,7354149,7355657,7356807,7357707,7358561,7359421,7360281,7361316,7362503,7364032,7366082,7368137,7370193,7372054,7373510,7374966,7377022,7379070,7381118,7383166,7385214,7387262,7389319,7391375,7393423,7395465,7397420,7399456,7401504,7403105,7405022,7406444,7408233,7410101,7411896,7413706,7415574,7417392,7419222,7421080,7422906,7424699,7426571,7428379,7430377,7431995,7433350,7435268,7436587,7438367,7439392,7441143,7443022,7444638,7446289,7447406,7449128,7449873,7450937,7452166,7453998,7455781,7457658,7459460,7461161,7462789,7464297,7465757,7467195,7468552,7470484,7472413,7474189,7475838,7477366,7478801,7480133,7481419,7482631,7483843,7484991,7486392,7488041,7489718,7491557,7493526,7495463,7497426,7499432,7501310,7503222,7505107,7507121,7508925,7510440,7511899,7513947,7515568,7517337,7519161,7520676,7521705,7523546,7525601,7527381,7527723,7528840,7530614,7531860,7533866,7535264,7535926,7537968,7540016,7542064,7543281,7544679,7546727,7548564,7549595,7550018,7551849,7553575,7554205,7556124,7558181,7560229,7562277,7563949,7564542,7566452,7568500,7570464,7571639,7571765,7572942,7574990,7577047,7579095,7580598,7581747,7583800,7585848,7587896,7589944,7591678,7592883,7593624,7594348,7594980,7596982,7599030,7601078,7603132,7605136,7606920,7608472,7609792,7610872,7611892,7612805,7614853,7616675,7618545,7620600,7622593,7624517,7626090,7626694,7627078,7628699,7629711,7630782,7631685,7631974,7633977,7636025,7638073,7640121,7642027,7642464,7643515,7645563,7647620,7649654,7651022,7652240,7654109,7656157,7658205,7660261,7662309,7664204,7665426,7666329,7667001,7669050,7670668,7672716,7674686,7676734,7678595,7680613,7682503,7684069,7685285,7686168,7687564,7689621,7691669,7693717,7695765,7697820,7699868,7701921,7703863,7705912,7707961,7710015,7712037,7714085,7716142,7718190,7720242,7722290,7724140,7725611,7726738,7727624,7728527,7729148,7729431,7731480,7733445,7735202,7736658,7738046,7738968,7739966,7742014,7744068,7746116,7747507,7748838,7750672,7752578,7754493,7756463,7758462,7760417,7762454,7764469,7766441,7768439,7770237,7771458,7773100,7775044,7777091,7779139,7781187,7783235,7785283,7787331,7789379,7791427,7793475,7795523,7797580,7799628,7801612,7803474,7805168,7806680,7808028,7809129,7809756,7810810,7812514,7814227,7816275,7818323,7820252,7821997,7824054,7826102,7828150,7830198,7832246,7834294,7836342,7838390,7840438,7842486,7844534,7846582,7848630,7850678,7852726,7854774,7856831,7858879,7860927,7862984,7864819,7865957,7867856,7869904,7871952,7874000,7876048,7878096,7880144,7882192,7884240,7886283,7888176,7889822,7891158,7892026,7892855,7893089,7893967,7896015,7898063,7900111,7902159,7904207,7906255,7907697,7908241,7908700,7910418,7912392,7914365,7916402,7918450,7920498,7922554,7924602,7926650,7928698,7930746,7932794,7934842,7936890,7938938,7940987,7943034,7945087,7947142,7949190,7951235,7953286,7955342,7957394,7959428,7961391,7963241,7964937,7966460,7967782,7969031,7970573,7972621,7974678,7976416,7977671,7979639,7981051,7982210,7983208,7983413,7983438,7983463,7983488,7983513,7984378,7986003,7987897,7989820,7991868,7993847,7995571,7996572,7997007,7999055,8001103,8003151,8004882,8006534,8008099,8010147,8012199,8014232,8016192,8018130,8019454,8020969,8023017,8025065,8027113,8028540,8030527,8032528,8034576,8036624,8038672,8040719,8042662,8044586,8046429,8048252,8049864,8051157,8052219,8053089,8054922,8056970,8059018,8061066,8063114,8065167,8066793,8068841,8070889,8072937,8074202,8076031,8078048,8080096,8082144,8084192,8086240,8088259,8090019,8091525,8092683,8094716,8095919,8097669,8099671,8101608,8103454,8105059,8106431,8107846,8109408,8111050,8112319,8114156,8116065,8118113,8120168,8122216,8123862,8124107,8125067,8127115,8129172,8131021,8132550,8133927,8135196,8136276,8137331,8138391,8140220,8142275,8144100,8145388,8146485,8147253,8147938,8148633,8149336,8150488,8152536,8154551,8155742,8156382,8157653,8159708,8161756,8163804,8165852,8167900,8169948,8171996,8174044,8176092,8178100,8179816,8181249,8182399,8183790,8185838,8187886,8189926,8190569,8192395,8194452,8196500,8198556,8200303,8200612,8200712,8202112,8203824,8205859,8207907,8209964,8212012,8213782,8215830,8217878,8219926,8221983,8224031,8225596,8227232,8229072,8230540,8232596,8234644,8236692,8238740,8240768,8242013,8243844,8245895,8247950,8249998,8252054,8254102,8256159,8258190,8260180,8262144,8263956,8265565,8266629,8267523,8269114,8271153,8273181,8274955,8277003,8279051,8281108,8283156,8285204,8287192,8288600,8289522,8291570,8293618,8295674,8297722,8299770,8301818,8303866,8305914,8307962,8310010,8312058,8314106,8316154,8318202,8320250,8322307,8324305,8326111,8327656,8328748,8330740,8332788,8334845,8336893,8338941,8340989,8343037,8345085,8346963,8348170,8348950,8349306,8349809,8351857,8353905,8355953,8358001,8360049,8361952,8363552,8365116,8366777,8368626,8370222,8371238,8371836,8373776,8375827,8377883,8379940,8381997,8384045,8386093,8388141,8390198,8392254,8394280,8396195,8397838,8399241,8400123,8400596,8401029,8401604,8402129,8402641,8404651,8406699,8408709,8410559,8412168,8413618,8414878,8416018,8417696,8419653,8421246,8422615,8424604,8426433,8428040,8429489,8430686,8431521,8432007,8433292,8435243,8436995,8438461,8439593,8441576,8443468,8445020,8447071,8449119,8449972,8452020,8453747,8455795,8457597,8458007,8459756,8461804,8463852,8465900,8467807,8469273,8469556,8470892,8472940,8474290,8474315,8475349,8477406,8479463,8481511,8483559,8485607,8487655,8489703,8491751,8493799,8495853,8497908,8499627,8500803,8502851,8504736,8505638,8507370,8509418,8511466,8513514,8515562,8517610,8519658,8521692,8523175,8523924,8525972,8528020,8530068,8532116,8534172,8536224,8537971,8539296,8541344,8543392,8545440,8547488,8549536,8551584,8553632,8555680,8557728,8559776,8561833,8563350,8563805,8564673,8566721,8568737,8570784,8572837,8574885,8576933,8578981,8581029,8583082,8585130,8587178,8589226,8591242,8592855,8594114,8594960,8595280,8596097,8597998,8599840,8601851,8603907,8605955,8608004,8609790,8610760,8612517,8614245,8615030,8616494,8618542,8620590,8622638,8624688,8626284,8627387,8628080,8628783,8629640,8631688,8633736,8635784,8637832,8639883,8641931,8643979,8646027,8648075,8650132,8652011,8653580,8654743,8655558,8656670,8658718,8660766,8662814,8664862,8666750,8668155,8669368,8670026,8671401,8673456,8675504,8676365,8678413,8680452,8682500,8684548,8686596,8688577,8690612,8692016,8693405,8694363,8694947,8695545,8697331,8699272,8700687,8702206,8704263,8706311,8708365,8710422,8712477,8714534,8716484,8718483,8719874,8721931,8723985,8725900,8727655,8729136,8730514,8731718,8732875,8734923,8736980,8739028,8741076,8743124,8745179,8747227,8748757,8749791,8750925,8752973,8755021,8757069,8759117,8761165,8763213,8765266,8767294,8769177,8770914,8772470,8773804,8775079,8777135,8779192,8781240,8783288,8785336,8787384,8789432,8791480,8793528,8795585,8797633,8799681,8801729,8803777,8805831,8807888,8809945,8812001,8814051,8816099,8818152,8820209,8822265,8824313,8826361,8828409,8830466,8832514,8834571,8836557,8837850,8839426,8841243,8843299,8845356,8847404,8849452,8851500,8853548,8855596,8857644,8859692,8861740,8863788,8865836,8867884,8869932,8871987,8874021,8875930,8877625,8879532,8881562,8882689,8884611,8886659,8888707,8890755,8892803,8894860,8896908,8898951,8900989,8902754,8903838,8904724,8906648,8908696,8910744,8912792,8914829,8916328,8918376,8920424,8922472,8924520,8926568,8928616,8930665,8931937,8933697,8935745,8937801,8939829,8941814,8943841,8945673,8947240,8948743,8950222,8951604,8952764,8953881,8955056,8956373,8957831,8959130,8960304,8961427,8962487,8963537,8964719,8965752,8966822,8968044,8969154,8970828,8972286,8973663,8975126,8976257,8977531,8979106,8980289,8981479,8982881,8984276,8985643,8986963,8988194,8989431,8990502,8991170,8992309,8993565,8994982,8996465,8997860,8999247,9000604,9001719,9002888,9004257,9005665,9006788,9008415,9009761,9011053,9012075,9013181,9014367,9015587,9016675,9017865,9018247,9018998,9019730,9020619,9021598,9022329,9023498,9024161,9025265,9026367,9027508,9028726,9030375,9032032,9033497,9034090,9034824,9035316,9035589,9036960,9037935,9038460,9038822,9039434,9039997,9040827,9041761,9042455,9043156,9043988,9044667,9045340,9046094,9046799,9047513,9048503,9049124,9049472,9050638,9052148,9053129,9054584,9056126,9056647,9058170,9059553,9060140,9060433,9060674,9061158,9062767,9063887,9064469,9065017,9065406,9066197,9066363,9066498,9066567,9066642,9066734,9067247,9067955,9068913,9069509,9069781,9070093,9070920,9071805,9072337,9072929,9073447,9073520,9073591,9073955,9074782,9075530,9076028,9076636,9077148,9077687,9078267,9078496,9078768,9079315,9079924,9080497,9080719,9080993,9081165,9081505,9081811,9082174,9082753,9082871,9083360,9083919,9083993,9084126,9084244,9084404,9084563,9085036,9086321,9087574,9088155,9088377,9088459,9088932,9089374,9090058,9090550,9090892,9091135,9091521,9091939,9092258,9092571,9092881,9093333,9093479,9094170,9094889,9095364,9095838,9096373,9097013,9097422,9097875,9098273,9098607,9098909,9099304,9099493,9100788,9102471,9103625,9104681,9105585,9106501,9107675,9108939,9110183,9111432,9112804,9114123,9115525,9116940,9118239,9119553,9120924,9122329,9123621,9125071,9126490,9127982,9129523,9131007,9132360,9133539,9134734,9135906,9137097,9138196,9139114,9139981,9141186,9142487,9144384,9145978,9147607,9149131,9150592,9152159,9153787,9155375,9157040,9158819,9160634,9162443,9164243,9166088,9167825,9169616,9171353,9173011,9174776,9176373,9178075,9179831,9181579,9183259,9184834,9186516,9188006,9189642,9191192,9192800,9194279,9195791,9197393,9199246,9200546,9201823,9203027,9204296,9205494,9206805,9208055,9209410,9210892,9212355,9213943,9215526,9217044,9218566,9220046,9221503,9223034,9224566,9226001,9227472,9228867,9230381,9231859,9233019,9234194,9235289,9236486,9237715,9238924,9240236,9241455,9242797,9244071,9245280,9246463,9247617,9248798,9249951,9251131,9252631,9254544,9256033,9257567,9259001,9260409,9261983,9263557,9265485,9266901,9268205,9269857,9271325,9272900,9274411,9275985,9277775,9279297,9280866,9282379,9283950,9285732,9286720,9287741,9288779,9290057,9291863,9293434,9295021,9296554,9298215,9299583,9300933,9302240,9303592,9304795,9305683,9307194,9308935,9310479,9310871,9311256,9311643,9312793,9313949,9315143,9316395,9318267,9320110,9322079,9324057,9326015,9327949,9329728,9331492,9333120,9334282,9335686,9337071,9338345,9339568,9341222,9342939,9344730,9346533,9348313,9350076,9351739,9353549,9355162,9357083,9359009,9360359,9361439,9362963,9364641,9365649,9367206,9368922,9370599,9372185,9373901,9374997,9376171,9377379,9378945,9380600,9382286,9383977,9385265,9387031,9388626,9390407,9392220,9393930,9395585,9397308,9398935,9400625,9402392,9404159,9405775,9407560,9409251,9411030,9412827,9414661,9416347,9418128,9419866,9421468,9423211,9424993,9426778,9428573,9430399,9432010,9433824,9435527,9437221,9438881,9440571,9442272,9443866,9445530,9447323,9449072,9450709,9452436,9454152,9455887,9457630,9459323,9460983,9462748,9464401,9466196,9468046,9469644,9471429,9473120,9474863,9476663,9478304,9480090,9481861,9483408,9485145,9486849,9488418,9490133,9491881,9493712,9495415,9497225,9498822,9500622,9502438,9504115,9505787,9507475,9509114,9510813,9512642,9514360,9516138,9517980,9519811,9521658,9523466,9525325,9527181,9529085,9530840,9532686,9534428,9536127,9537848,9539641,9541260,9542975,9544685,9546376,9548062,9549775,9551395,9553007,9554950,9556881,9558762,9560680,9562615,9564537,9566435,9568358,9570270,9572167,9574051,9575056,9576902,9578737,9580470,9582240,9584034,9585833,9587595,9589404,9591216,9593081,9594816,9596539,9598387,9600087,9601878,9603612,9605396,9607174,9608938,9610764,9612453,9614279,9616095,9617903,9619658,9621355,9623092,9624893,9626686,9628520,9630311,9632105,9633857,9635485,9637163,9638923,9640645,9642447,9644143,9646021,9647834,9649481,9651353,9653204,9655029,9656855,9658543,9660263,9662087,9663937,9665701,9667396,9669218,9670979,9672808,9674471,9676168,9677785,9679440,9680962,9682475,9684074,9685725,9686482,9688065,9689533,9691208,9692814,9694510,9696038,9697764,9698841,9700503,9701757,9703256,9704784,9706401,9708047,9709748,9711304,9713043,9713982,9715678,9717225,9718703,9720277,9721097,9722681,9724213,9725772,9727452,9729044,9730744,9732315,9734031,9735677,9737265,9739295,9741276,9743242,9745224,9747240,9749043,9751039,9752919,9754935,9756963,9758759,9760771,9762812,9764668,9766682,9768699,9770686,9772678,9774710,9776699,9778712,9780663,9782599,9784423,9786463,9788498,9790211,9792019,9793943,9795812,9797647,9799419,9801140,9802950,9804805,9806699,9808572,9810420,9812209,9813902,9815624,9817389,9819211,9821058,9822907,9824753,9826525,9828267,9830009,9831894,9833773,9835597,9837458,9839286,9841011,9842650,9844440,9846334,9848156,9849994,9851853,9853684,9855392,9857131,9858915,9860775,9862539,9864403,9866296,9868179,9869942,9871672,9873525,9875403,9877223,9879080,9880830,9882591,9884314,9886135,9888005,9889823,9891658,9893505,9895224,9896972,9898811,9900686,9902535,9904428,9906239,9907959,9909803,9911700,9913569,9915372,9917180,9919047,9920831,9922558,9924382,9926082,9927568,9929116,9930642,9932253,9933735,9935313,9936929,9938413,9940139,9941716,9943237,9944978,9946492,9948181,9950145,9951919,9953654,9955568,9957285,9959088,9960857,9962534,9964057,9965662,9967182,9968792,9970279,9971840,9973430,9974954,9976635,9978301,9979915,9981777,9983376,9985222,9987113,9988905,9990603,9992474,9994208,9995834,9997408,9998981,10000645,10002266,10003768,10005424,10006904,10008514,10010073,10011558,10013267,10014639,10016219,10018136,10019852,10021595,10023427,10025188,10026990,10028856,10030603,10032303,10034082,10035652,10037327,10038853,10040368,10041892,10043349,10044967,10046472,10048102,10049727,10051281,10053190,10054703,10056400,10058269,10060044,10061697,10063485,10065067,10066594,10068289,10069892,10071539,10073036,10074483,10076098,10077562,10079225,10080775,10082225,10084062,10085623,10087221,10089084,10090748,10092437,10094216,10095944,10097698,10099535,10101299,10103012,10104859,10106626,10108341,10109978,10111833,10113592,10115334,10117161,10118863,10120638,10122373,10124112,10125796,10127480,10129218,10130727,10132366,10134116,10135665,10137467,10139116,10140849,10142485,10144201,10145891,10147549,10149329,10150923,10152736,10154410,10156194,10157879,10159621,10161333,10163108,10164604,10166251,10167840,10169643,10171280,10172978,10174537,10176121,10177679,10179198,10180737,10182484,10184084,10185831,10187423,10189159,10190953,10192697,10194367,10196107,10197999,10199754,10201464,10203167,10204768,10206335,10208052,10209822,10211457,10213005,10214667,10216325,10217792,10219389,10221060,10222567,10224092,10225810,10227476,10229222,10231066,10232845,10234576,10236383,10238153,10239896,10241733,10243544,10245202,10246736,10248610,10250192,10251810,10253489,10255060,10256683,10258107,10259825,10261263,10262779,10264527,10266095,10267746,10269515,10271005,10272680,10274541,10276405,10278096,10280010,10281729,10283337,10285214,10286830,10288367,10290106,10291719,10293388,10294832,10296401,10297848,10299379,10301061,10302621,10304226,10305999,10307596,10309383,10311257,10313036,10314779,10316690,10318492,10320180,10321962,10323669,10325249,10326890,10328482,10330143,10331550,10332934,10334631,10336026,10337581,10339365,10340875,10342483,10344173,10345649,10347296,10348914,10350559,10352382,10354115,10355704,10357464,10359245,10360937,10362750,10364403,10365920,10367638,10369021,10370590,10372059,10373556,10375048,10376597,10378228,10379873,10381406,10383202,10384959,10386743,10388483,10390141,10391932,10393682,10395383,10397097,10398870,10400611,10402356,10404049,10405804,10407621,10409299,10411053,10412836,10414516,10416163,10417897,10419719,10421384,10423108,10424886,10426704,10428361,10430051,10431811,10433521,10435144,10436834,10438529,10440367,10442151,10443869,10445521,10447237,10449056,10450845,10452644,10454169,10455615,10457463,10459278,10461114,10462648,10464438,10466226,10468105,10469836,10471516,10473225,10474993,10476796,10478452,10480108,10481890,10483649,10485503,10487180,10488852,10490622,10492407,10494182,10495909,10497550,10499299,10501167,10502855,10504621,10506390,10507924,10509747,10511594,10513412,10515223,10516936,10518728,10520576,10522322,10524124,10525837,10527535,10529236,10530924,10532611,10534300,10536042,10537803,10539708,10541605,10543503,10545438,10547380,10549325,10551266,10553167,10554874,10556652,10558543,10560428,10562204,10564014,10565803,10567609,10569437,10571344,10573278,10575174,10577069,10578921,10580749,10582673,10584511,10586347,10588162,10589956,10591824,10593639,10595564,10597509,10599419,10601238,10603048,10604878,10606737,10608650,10610564,10612467,10614299,10616129,10617925,10619735,10621645,10623501,10625327,10627145,10629038,10630860,10632622,10634416,10636300,10638228,10640170,10641950,10643862,10645764,10647670,10649589,10651531,10653455,10655359,10657145,10659060,10660994,10662927,10664834,10666670,10668522,10670260,10672008,10673774,10675472,10677218,10678933,10680740,10682535,10684327,10686089,10687900,10689645,10691529,10693265,10695102,10696862,10698730,10700469,10702183,10703963,10705669,10707378,10709180,10710865,10712727,10714502,10716376,10718195,10720062,10721916,10723750,10725623,10727466,10729327,10731150,10733011,10734860,10736682,10738534,10740316,10742174,10743973,10745778,10747667,10749430,10751257,10753066,10754908,10756771,10758578,10760370,10762180,10763982,10765778,10767568,10769334,10771128,10772901,10774753,10776516,10778396,10780100,10781913,10783726,10785424,10787261,10789010,10790850,10792654,10794310,10796075,10797789,10799489,10801299,10803126,10804988,10806839,10808784,10810674,10812401,10814293,10815930,10817837,10819605,10821545,10823299,10825035,10826900,10828669,10830410,10832317,10834102,10835830,10837520,10839201,10840870,10842626,10844323,10846049,10847765,10849451,10851155,10852907,10854639,10856396,10858075,10859858,10861630,10863359,10865115,10866877,10868641,10870333,10872066,10873808,10875609,10877355,10879080,10880838,10882641,10884458,10886075,10888018,10889967,10891561,10893417,10895049,10896907,10898717,10900630,10902192,10904079,10905611,10907581,10909435,10911108,10912841,10914566,10916317,10917726,10919659,10921138,10923140,10924655,10926546,10928033,10929721,10931422,10933198,10934862,10936363,10938198,10939698,10941613,10943136,10945051,10946563,10948322,10949978,10951827,10953480,10955080,10956822,10958395,10960263,10962250,10964188,10966190,10968152,10970129,10972140,10974002,10975974,10977974,10979880,10981344,10983202,10985119,10986610,10987944,10989357,10990041,10990894,10991687,10992676,10993993,10995489,10996338,10998350,11000366,11002391,11004409,11006446,11008466,11010496,11012496,11014442,11016369,11018042,11019709,11021435,11023163,11024903,11026566,11028321,11030077,11031751,11033443,11035217,11036802,11038758,11040485,11042127,11043696,11045403,11047103,11048913,11050677,11052435,11054325,11055979,11057754,11059489,11060458,11061302,11062845,11064026,11064660,11065289,11066940,11068606,11070416,11072206,11074004,11075795,11077649,11079339,11080962,11082758,11084743,11086705,11088697,11090680,11092664,11094642,11096618,11098571,11100506,11102324,11104256,11105736,11107320,11108087,11109456,11111200,11112686,11114078,11115589,11117044,11117968,11119393,11120825,11122392,11123984,11125720,11127571,11129425,11131239,11132778,11134311,11135849,11137433,11139008,11140622,11142195,11143761,11145385,11147219,11149092,11150949,11152866,11154864,11156731,11158578,11160453,11162311,11164201,11166073,11167695,11169629,11171571,11173211,11174803,11176320,11177327,11178937,11180421,11181309,11182960,11184493,11186065,11187667,11189447,11191417,11193001,11194988,11196963,11198189,11200154,11202112,11203935,11205907,11207889,11209808,11211073,11213019,11214976,11216731,11218124,11219918,11221762,11223655,11225569,11227236,11229091,11231107,11232922,11234885,11236325,11238304,11240177,11241784,11243784,11245421,11247410,11249389,11250600,11252566,11254526,11256349,11258324,11260309,11262240,11263438,11265400,11267338,11269091,11270461,11272249,11274093,11275973,11277890,11279551,11281398,11283405,11285365,11287370,11289350,11291279,11293257,11295227,11297030,11298754,11300495,11302205,11303810,11305368,11307112,11308540,11310196,11311761,11313381,11315179,11317075,11318934,11320717,11322488,11324120,11325934,11327795,11329553,11330929,11332670,11334291,11336037,11337529,11339241,11341063,11343061,11345048,11347014,11348973,11350938,11352886,11354853,11356822,11358006,11359308,11360950,11362431,11364005,11366007,11367850,11369216,11371022,11373019,11374899,11376033,11377947,11379919,11381757,11383407,11385269,11387200,11389180,11390997,11392622,11394474,11396495,11398436,11400285,11401669,11403528,11405530,11407363,11409137,11410439,11412244,11414147,11415954,11417393,11419166,11420844,11422760,11424130,11426018,11427990,11429825,11431599,11433115,11434385,11436033,11437825,11439769,11441687,11443017,11444937,11446894,11448863,11450768,11452734,11454667,11456605,11458576,11460453,11462399,11464373,11466289,11468246,11470213,11472140,11474099,11476075,11478016,11479997,11481956,11483909,11485901,11487902,11489808,11491306,11492850,11494850,11496880,11498877,11500568,11502481,11504347,11506326,11508181,11509902,11511541,11513086,11514687,11516149,11517644,11518693,11520650,11522637,11524397,11525533,11526998,11528382,11530168,11532123,11533960,11535663,11537652,11539602,11541517,11543400,11545023,11546774,11548582,11550204,11551914,11553695,11555455,11557355,11559268,11561108,11562926,11564649,11566371,11567681,11568674,11570479,11572038,11573754,11575152,11576845,11578248,11579966,11581721,11583547,11585263,11586985,11588588,11590412,11592334,11594171,11595867,11597593,11599111,11600603,11601755,11603593,11605425,11607298,11609169,11610794,11612197,11613580,11615484,11617132,11618923,11620762,11622498,11624354,11626097,11627912,11629658,11631576,11633441,11635300,11637068,11638672,11640217,11641907,11643632,11645524,11647303,11649087,11650807,11652628,11654369,11656022,11657404,11658416,11659244,11660475,11661980,11663794,11665487,11667330,11669037,11670747,11672296,11673892,11675778,11677529,11679270,11680937,11682487,11684206,11685972,11687741,11689611,11691410,11693202,11694996,11696686,11698406,11700203,11702019,11703776,11705189,11706415,11707561,11708725,11709887,11711011,11712078,11713274,11714678,11716314,11717944,11719584,11721175,11722770,11724430,11726059,11727691,11729575,11731339,11733104,11734852,11736565,11738337,11740092,11741810,11743549,11745265,11747062,11749032,11750776,11752546,11754299,11756217,11758160,11760045,11761969,11763884,11765801,11767703,11769609,11771477,11773406,11775295,11777324,11779189,11781064,11782964,11784906,11786618,11788330,11790007,11791718,11793395,11795081,11796789,11798453,11800339,11802035,11803725,11805417,11807119,11808806,11810489,11812170,11813928,11815772,11817533,11819270,11821037,11822780,11824524,11826285,11828029,11829843,11831345,11832888,11834412,11835961,11837501,11839048,11840579,11842135,11843716,11845221,11846742,11848181,11849964,11851673,11853353,11855038,11856744,11858485,11860186,11861911,11863687,11865326,11867056,11868771,11870523,11872217,11873949,11875625,11877359,11879088,11880825,11882546,11884297,11886064,11887735,11889448,11891133,11892963,11894720,11896451,11898204,11899943,11901716,11903450,11905204,11907070,11908811,11910611,11912440,11914310,11916102,11917923,11919716,11921531,11923341,11925181,11926984,11928847,11930766,11932533,11934321,11936121,11937983,11939581,11941207,11942790,11944377,11945970,11947575,11949161,11950848,11952540,11954177,11955801,11957432,11959060,11960668,11962306,11963942,11965809,11967618,11969430,11971227,11973029,11974809,11976581,11978373,11980192,11981975,11983611,11984856,11986486,11988083,11989759,11990755,11992399,11994184,11995967,11997804,11999672,12001550,12003597,12005481,12007412,12009363,12011230,12013161,12015198,12017136,12019038,12020955,12022833,12024765,12026808,12028627,12030217,12031840,12033482,12035005,12036653,12038504,12040174,12041782,12043409,12044980,12046669,12048640,12050431,12052183,12053784,12055516,12057273,12058972,12060567,12062329,12064221,12066010,12067669,12069306,12071090,12072821,12074447,12076085,12077997,12079993,12081995,12083989,12085982,12087986,12090006,12092030,12094051,12096074,12098069,12100082,12102074,12104031,12105788,12107586,12109518,12111459,12113348,12115301,12117272,12119139,12120959,12122756,12124593,12126375,12128290,12130228,12132121,12134045,12135862,12137793,12139698,12141614,12143474,12145377,12147293,12149211,12151087,12152699,12154533,12156217,12157893,12159611,12161264,12162943,12164781,12166543,12168409,12170230,12172062,12173967,12175851,12177678,12179551,12181354,12182941,12184402,12185796,12187215,12188984,12190610,12192281,12193921,12195563,12197198,12198831,12200507,12202120,12203667,12205261,12206853,12208498,12210148,12211821,12213464,12215105,12216929,12218530,12220128,12221760,12223338,12224949,12226537,12228126,12229677,12231471,12233131,12234752,12236400,12237978,12239627,12241262,12242865,12244605,12246207,12247817,12249427,12251002,12252602,12254203,12255803,12257384,12259160,12260839,12262492,12264142,12265755,12267411,12269048,12270673,12272388,12274000,12275557,12277094,12278600,12280110,12281637,12283160,12284649,12286413,12287973,12289540,12291108,12292704,12294262,12295804,12297328,12298930,12300691,12302272,12303859,12305478,12307096,12308683,12310200,12311761,12313514,12315111,12316679,12318239,12319824,12321403,12322921,12324402,12325995,12327747,12329327,12330938,12332537,12334159,12335733,12337267,12338823,12340566,12342218,12343818,12345430,12347066,12348718,12350319,12351901,12353535,12355329,12356893,12358506,12360103,12361746,12363340,12364937,12366487,12368191,12370197,12372199,12374171,12376188,12378139,12380127,12382034,12383987,12385905,12387883,12389792,12391767,12393719,12395710,12397647,12399618,12401597,12402982,12404344,12405682,12406966,12408453,12409878,12411257,12412634,12414102,12415482,12416813,12418192,12419659,12421098,12422484,12423862,12425211,12426580,12427994,12429368,12430731,12432212,12433647,12435033,12436436,12437907,12439321,12440720,12442158,12443571,12444991,12446352,12447724,12449020,12450607,12452024,12453389,12454770,12456136,12457515,12458874,12460251,12461734,12463091,12464467,12465824,12467185,12468780,12470253,12471819,12473190,12474526,12475896,12477272,12478673,12480084,12481506,12482879,12484361,12485778,12487148,12488543,12490033,12491459,12492861,12494265,12495719,12497273,12498804,12500402,12501991,12503447,12504869,12506385,12507820,12509344,12510851,12512396,12513882,12515460,12516792,12517999,12519288,12520686,12521925,12523259,12524561,12525817,12527361,12528808,12530263,12531752,12533263,12534600,12536017,12537397,12538764,12540169,12541646,12543050,12544471,12546266,12547965,12549569,12551281,12552878,12554593,12556191,12557871,12559641,12561314,12562957,12564651,12566348,12567989,12569678,12571320,12573043,12574799,12576632,12578273,12580111,12581769,12583543,12585174,12586956,12588768,12590501,12592197,12593914,12595722,12597358,12599099,12600749,12602527,12604262,12605956,12607552,12609247,12610887,12612556,12614173,12615833,12617552,12619302,12621036,12622679,12624462,12626085,12627814,12629450,12631195,12632921,12634420,12635387,12637251,12639219,12640672,12642243,12643744,12645545,12647155,12648615,12650369,12651983,12653603,12655258,12656771,12658293,12660098,12661735,12663438,12665095,12666713,12668536,12670239,12671698,12673425,12675197,12676893,12678252,12679960,12681797,12683525,12685198,12686996,12688793,12690523,12692324,12694176,12695904,12697602,12699293,12701124,12702855,12704647,12706353,12708006,12709838,12711687,12713489,12715316,12717180,12718941,12720438,12721931,12723336,12725106,12726837,12728580,12730202,12731522,12733285,12735047,12736908,12738633,12740366,12741700,12743287,12744923,12746570,12748276,12749735,12751161,12753016,12754881,12756721,12758402,12759739,12761481,12763351,12765320,12767219,12769055,12770374,12771922,12773731,12775551,12777327,12778800,12780375,12782141,12783932,12785725,12787460,12788789,12790508,12792322,12794256,12796060,12797862,12799267,12800750,12802444,12804147,12805884,12807434,12808996,12810698,12812552,12814363,12816175,12817516,12819138,12820963,12822926,12824757,12826639,12828151,12829567,12831285,12833085,12834876,12836493,12838170,12839614,12840926,12841916,12842875,12844135,12845440,12846796,12847971,12849295,12850667,12851822,12852912,12853892,12854997,12856233,12857370,12858539,12859915,12861150,12862527,12863855,12865230,12866560,12867781,12869009,12870516,12872356,12873952,12875513,12877048,12878567,12880159,12881731,12883318,12884906,12886489,12888056,12889662,12891292,12892933,12894554,12896173,12897686,12899216,12900693,12902195,12903803,12905321,12906785,12908262,12909728,12911260,12913081,12914798,12916518,12918204,12919915,12921609,12923275,12924959,12926706,12928414,12930131,12931851,12933573,12935300,12937007,12938719,12940427,12942134,12943824,12945500,12947083,12948702,12950381,12952097,12953773,12955424,12957147,12958939,12960690,12962405,12964137,12966066,12967999,12969851,12971722,12973642,12975526,12977414,12979156,12980934,12982455,12983918,12985709,12987407,12989117,12990830,12992512,12994186,12995896,12997623,12999379,13001120,13002816,13004466,13006200,13007855,13009515,13011234,13012942,13014781,13016466,13018135,13019815,13021448,13023124,13024815,13026499,13028161,13029870,13031544,13033048,13034733,13036217,13037897,13039381,13041077,13042822,13044438,13046048,13047656,13049281,13050859,13052446,13054053,13055653,13057382,13058999,13060558,13062189,13063818,13065455,13067039,13068678,13070432,13072053,13073656,13075206,13076795,13078356,13079969,13081520,13083131,13084803,13086385,13087806,13089448,13090881,13092478,13093893,13095509,13097107,13099135,13101123,13103088,13105083,13107086,13109081,13111054,13113080,13115134,13117117,13119064,13121017,13123008,13124967,13126927,13128931,13130914,13132817,13134611,13136385,13138174,13139985,13141794,13143577,13145366,13147327,13149165,13151023,13152891,13154752,13156616,13158465,13160306,13162170,13163823,13165388,13167179,13168873,13170382,13172070,13173419,13174992,13176683,13178386,13180081,13181731,13183364,13185059,13186782,13188445,13190285,13192007,13193797,13195538,13197273,13199003,13200791,13202559,13204287,13206118,13207899,13209699,13211404,13213133,13214902,13216724,13218441,13220299,13221941,13223566,13225204,13226862,13228502,13230158,13231783,13233432,13235278,13236991,13238715,13240418,13242140,13243864,13245607,13247306,13249158,13251118,13253132,13255138,13257183,13259170,13261169,13263148,13265150,13267154,13269184,13271193,13273201,13275212,13277239,13279243,13281279,13283304,13285316,13287337,13289337,13291345,13293210,13295085,13296820,13298689,13300251,13301554,13303159,13305019,13306822,13308723,13310600,13312383,13314202,13315937,13317941,13319944,13321998,13324016,13325913,13327447,13329007,13330582,13332193,13333983,13335808,13337575,13339342,13341137,13342927,13344754,13346458,13348192,13349846,13351480,13353255,13355013,13356790,13358522,13360279,13362039,13363768,13365456,13367129,13368945,13370760,13372576,13374381,13376159,13377947,13379710,13381517,13383322,13385225,13387206,13389183,13391171,13393153,13395042,13396848,13398687,13400532,13402362,13404200,13405993,13407798,13409713,13411575,13413443,13415254,13417238,13419187,13421167,13423167,13425134,13427096,13429090,13431068,13433036,13434941,13436939,13438814,13440681,13442503,13444261,13446034,13447937,13449849,13451779,13453753,13455678,13457557,13459304,13461054,13462927,13464811,13466647,13468353,13469949,13471424,13472996,13474845,13476807,13478758,13480731,13482690,13484547,13486344,13488230,13489992,13491832,13493681,13495462,13497381,13499084,13500971,13502784,13504650,13506435,13508149,13509914,13511660,13513407,13515172,13516979,13518470,13520194,13521679,13523303,13524747,13526211,13527679,13529314,13530104,13531164,13532329,13533327,13534071,13534919,13535739,13536719,13537834,13538835,13540024,13540947,13541868,13542880,13543715,13544615,13546356,13548190,13549994,13551839,13553796,13555722,13557470,13559214,13560910,13562674,13564449,13566193,13567877,13569613,13571344,13573071,13574728,13576322,13578190,13580120,13582018,13583990,13585939,13587878,13589898,13591860,13593864,13595700,13597557,13599414,13601254,13603292,13605296,13607275,13609274,13611322,13613363,13615388,13617424,13619463,13621265,13622858,13624406,13625962,13627461,13629070,13630645,13632382,13634410,13636429,13638438,13640479,13642479,13644509,13646540,13648553,13650587,13652493,13654498,13656473,13658069,13659693,13661112,13662458,13663815,13665358,13667002,13668713,13670362,13672021,13674048,13676078,13678074,13680119,13681987,13683635,13685369,13686972,13688542,13690256,13691888,13693773,13695652,13697573,13699494,13701368,13703250,13705175,13707102,13709056,13711036,13712901,13714547,13716346,13718026,13719956,13721899,13723882,13725819,13727780,13729711,13731634,13733562,13735490,13736689,13737781,13738871,13739949,13741619,13743368,13745167,13746951,13748362,13749690,13750913,13752283,13753930,13755758,13757567,13759430,13761352,13763253,13765166,13767098,13768842,13770276,13771816,13773260,13774768,13776282,13777722,13779348,13780971,13782334,13784189,13786077,13787927,13789525,13791134,13792753,13794424,13796266,13797852,13799431,13800771,13802345,13803961,13805787,13807582,13809165,13810706,13812136,13813730,13815372,13817244,13818959,13820658,13822318,13824111,13825830,13827557,13829266,13830960,13832695,13834436,13836182,13837875,13839800,13841727,13843645,13845574,13847517,13849438,13851349,13853293,13855226,13857274,13859277,13861274,13863292,13865281,13867312,13869281,13871317,13873352,13875386,13877424,13879446,13881492,13883519,13885550,13887570,13889596,13891649,13893697,13895733,13897774,13899805,13901856,13903879,13905926,13907974,13909991,13912011,13914033,13916067,13918067,13920084,13922090,13924125,13925523,13926584,13927688,13928748,13929802,13930563,13931288,13932056,13933030,13934944,13936702,13938619,13940381,13941889,13943377,13944879,13946467,13947969,13949488,13950977,13952539,13954039,13955537,13957064,13958573,13960059,13961450,13962816,13964202,13965610,13966989,13968322,13969692,13971151,13972542,13973884,13975209,13976590,13978266,13979784,13981426,13983105,13984704,13986407,13988254,13990075,13991957,13993688,13995529,13997193,13998892,14000551,14002240,14003919,14005587,14007271,14008945,14010686,14012244,14013773,14015309,14016900,14018469,14020015,14021574,14023264,14024814,14026382,14027930,14029505,14031028,14032529,14034051,14035595,14037490,14039392,14041345,14043273,14045242,14047218,14049201,14051198,14053230,14055109,14057038,14058928,14060833,14062772,14064667,14066580,14068462,14070475,14072488,14074540,14076564,14078616,14080567,14082559,14084524,14086516,14088561,14090574,14092620,14094669,14096691,14098466,14100139,14101960,14103835,14105729,14107582,14109412,14111313,14113097,14114812,14116436,14117900,14119404,14120920,14122308,14123890,14125671,14127576,14129513,14131307,14133015,14134861,14136547,14138307,14140106,14141868,14143802,14145679,14147647,14149554,14151154,14152638,14154321,14156065,14157896,14159733,14161524,14163408,14165254,14167081,14168903,14170719,14172549,14174433,14176124,14177814,14179501,14181189,14182904,14184593,14186251,14187995,14189929,14191785,14193703,14195627,14197524,14199420,14201280,14203105,14205104,14207047,14208915,14210834,14212765,14214694,14216612,14218471,14220388,14222174,14223999,14225778,14227556,14229388,14231251,14233221,14235080,14236921,14238770,14240524,14242414,14244217,14246052,14247943,14249795,14251634,14253573,14255452,14257315,14259141,14260693,14261763,14263158,14264720,14266289,14267869,14269460,14271041,14272669,14274293,14275887,14277593,14279408,14281208,14282893,14284740,14286560,14288235,14290056,14291825,14293539,14295343,14297055,14298870,14300611,14302546,14304427,14306346,14308277,14310236,14312131,14313710,14315591,14317391,14318879,14320375,14321880,14323641,14325288,14326984,14328751,14330420,14332020,14333594,14335245,14336868,14338512,14340127,14341800,14343713,14345667,14347636,14349625,14351624,14353612,14355609,14357612,14359608,14361638,14363636,14365621,14367617,14369427,14371273,14373020,14374840,14376613,14378481,14380235,14382146,14383886,14385478,14387067,14388615,14390271,14391937,14393397,14394850,14396430,14398199,14399810,14401274,14402873,14404278,14405868,14407280,14408847,14410434,14412004,14413565,14415031,14416541,14417956,14419453,14420858,14422332,14423955,14425621,14427179,14428831,14430425,14432081,14433620,14435227,14436868,14438596,14440225,14441782,14443406,14444969,14446594,14448127,14449702,14451382,14453007,14454637,14456264,14457920,14459574,14461197,14462793,14464380,14466144,14467806,14469423,14471093,14472734,14474395,14476015,14477640,14479413,14481032,14482644,14484252,14485860,14487504,14489102,14490707,14492294,14494180,14495970,14497757,14499525,14501326,14503095,14504895,14506662,14508546,14510196,14511848,14513486,14515111,14516757,14518381,14519997,14521615,14523501,14525313,14527144,14528964,14530784,14532603,14534415,14536199,14538091,14539888,14541650,14543406,14545159,14546927,14548654,14550403,14552149,14553980,14555807,14557564,14559331,14561006,14562549,14564130,14565762,14567419,14569236,14571002,14573050,14575098,14576906,14578735,14580479,14582326,14584330,14586283,14588077,14589919,14591787,14593713,14595664,14597660,14599630,14601455,14603122,14604903,14606621,14608454,14610307,14612233,14614281,14616328,14618376,14620433,14622353,14624245,14626002,14627771,14629497,14631327,14632974,14634764,14636820,14638857,14640797,14642781,14644680,14646602,14648533,14650425,14652263,14654030,14655630,14657425,14659360,14661298,14663076,14664964,14666907,14668845,14670647,14672517,14674474,14676264,14677708,14679282,14680980,14682757,14684545,14686437,14688310,14690119,14691578,14693162,14694947,14696804,14698639,14700517,14702263,14703975,14705569,14707270,14709071,14710935,14712810,14714750,14716727,14718670,14720532,14722404,14724047,14725710,14727285,14728868,14730665,14732383,14734099,14735806,14737439,14739088,14740729,14742408,14743980,14745670,14747574,14749505,14751359,14753263,14754956,14756792,14758443,14760277,14761969,14763783,14765462,14767360,14769279,14771177,14772886,14774684,14776323,14778108,14780070,14781933,14783596,14785203,14786907,14788687,14790376,14792010,14793456,14794909,14796389,14797877,14799326,14800801,14802253,14803860,14805885,14807904,14809927,14811933,14813957,14815985,14818009,14820011,14821843,14823700,14825559,14827415,14829278,14831073,14832602,14834103,14835659,14837203,14838744,14840265,14841577,14843189,14844923,14846764,14848554,14850389,14852219,14854158,14855994,14857884,14859508,14861301,14863218,14865142,14867085,14869041,14870942,14872883,14874887,14876736,14878279,14879860,14881492,14883183,14884992,14886875,14888670,14890549,14892357,14894260,14896297,14898317,14900339,14902327,14904139,14905975,14907785,14909611,14911464,14913181,14914771,14916383,14918003,14919747,14921609,14923436,14925097,14926895,14928929,14930966,14932990,14934973,14936779,14938641,14940644,14942553,14944287,14946091,14947834,14949707,14951590,14953441,14955133,14956922,14958564,14960251,14961870,14963671,14965722,14967757,14969800,14971699,14973285,14974901,14976578,14978286,14979949,14981606,14982904,14984369,14985923,14987608,14989403,14990957,14992079,14993518,14995487,14997481,14999323,15001265,15003301,15005349,15007333,15009345,15011214,15013080,15014888,15016606,15018403,15020120,15021916,15023616,15025355,15027029,15028723,15030349,15031932,15033617,15035310,15037025,15038590,15040135,15041574,15043182,15044989,15046866,15048672,15050484,15052034,15053623,15055019,15056558,15058132,15059764,15061393,15063063,15064770,15066515,15068213,15069942,15071722,15073547,15075219,15076930,15078503,15080229,15082007,15083649,15084930,15086274,15087693,15089273,15091126,15092898,15094355,15095815,15097199,15098580,15099926,15101367,15102864,15104444,15106047,15107656,15109240,15110857,15112429,15113989,15115354,15116789,15118252,15119758,15121162,15122681,15124199,15125786,15127401,15128957,15130602,15132182,15133780,15135403,15136993,15138603,15140003,15141680,15143343,15145031,15146690,15148322,15149886,15151474,15153099,15154706,15156248,15157797,15159347,15160992,15162628,15164275,15165805,15167348,15168934,15170517,15172157,15173851,15175499,15177192,15178710,15180271,15181768,15183314,15184962,15186694,15188522,15190316,15191963,15193716,15195552,15197395,15199200,15200949,15202393,15203828,15205240,15206683,15208126,15209700,15211389,15213099,15214770,15216497,15218284,15220043,15221714,15223513,15225045,15226737,15227941,15229435,15230983,15232822,15234490,15236455,15238154,15240060,15241681,15243515,15244974,15246768,15248401,15250177,15251469,15252781,15253672,15254804,15256498,15257976,15259199,15260581,15262065,15263535,15265024,15266489,15267959,15269417,15270812,15272176,15273558,15274977,15276394,15277655,15278890,15279912,15280933,15282722,15284186,15285743,15287060,15288519,15289955,15291601,15293425,15295387,15297415,15299207,15301173,15303102,15304805,15306588,15307580,15308328,15309126,15310035,15311036,15312036,15313190,15314187,15315246,15316113,15316896,15317845,15318872,15319734,15320651,15321526,15322457,15323396,15324130,15325023,15325852,15326794,15327764,15328868,15329741,15330657,15331951,15333202,15333764,15334306,15334848,15335363,15335883,15336931,15337938,15339018,15339996,15340742,15341513,15342446,15343289,15344371,15345443,15346265,15347234,15348077,15348846,15349372,15349965,15350534,15351278,15352224,15353196,15353660,15354504,15355113,15355887,15356560,15357330,15358403,15359343,15360385,15361388,15361916,15362512,15363016,15363586,15364222,15364960,15365624,15366563,15367253,15368039,15368725,15369627,15370883,15371625,15372495,15373504,15374515,15375542,15376404,15377417,15378190,15379107,15380116,15381141,15382043,15382724,15383661,15383981,15384556,15385454,15386539,15386874,15387452,15388428,15389120,15389817,15390402,15391011,15391711,15392632,15393568,15394459,15395070,15395748,15396491,15397418,15399467,15401133,15402036,15403027,15404318,15405592,15406265,15407690,15408712,15409886,15410674,15411679,15412956,15414052,15415700,15417299,15418877,15420470,15421947,15421985,15422030,15422128,15422177,15422287,15422325,15422445,15422686,15423042,15423508,15424059,15424704,15425257,15425922,15426724,15427433,15428550,15429958,15431440,15432914,15434294,15435971,15437560,15439132,15440786,15442395,15444101,15445743,15447466,15449259,15450929,15452563,15454133,15455855,15457538,15459035,15460592,15462016,15463389,15464303,15465186,15465905,15466555,15467148,15467758,15468316,15468901,15469437,15469831,15470189,15470408,15470560,15470644,15470691,15470736,15470780,15471135,15473101,15473149,15473198,15473243,15473283,15473328,15473376,15473425,15473470,15473511,15473556,15473634,15473924,15474812,15476264,15477543,15479009,15480416,15481819,15483075,15484121,15485235,15486093,15486731,15487502,15488385,15489155,15489987,15490809,15491762,15492753,15493657,15494480,15495210,15495934,15496876,15497803,15498612,15499417,15500231,15501052,15501789,15502464,15503011,15503483,15503664,15503712,15503759,15503804,15503848,15503893,15503941,15503988,15504033,15504077,15504122,15504172,15504219,15506105,15507679,15509133,15510512,15511839,15513172,15514492,15515827,15517127,15518418,15519689,15521056,15522322,15523511,15524831,15526015,15527045,15528054,15528980,15529905,15530842,15531624,15532398,15533436,15534576,15535705,15537065,15538455,15540099,15541751,15543326,15544951,15546582,15547966,15549369,15550532,15551734,15552991,15554351,15555854,15557286,15558706,15559703,15560685,15561782,15562953,15564131,15565369,15566602,15567890,15569097,15570353,15571686,15573083,15574380,15575720,15577081,15578429,15580284,15581221,15581269,15581318,15581363,15581407,15581452,15581691,15582294,15583163,15584121,15585269,15586792,15588493,15590207,15592007,15593736,15595458,15597188,15598944,15600702,15602529,15604383,15606156,15607890,15609320,15610682,15612036,15613447,15615219,15617056,15618883,15620784,15622688,15624628,15626554,15628432,15630276,15632177,15634054,15635859,15637646,15639394,15641052,15642872,15644766,15646392,15647812,15649200,15650426,15651072,15651226,15651275,15651322,15651367,15651411,15651458,15651507,15652182,15653035,15654037,15655219,15656428,15657826,15658343,15659336,15660381,15661294,15662172,15663205,15664088,15665812,15667417,15668994,15670647,15672367,15673959,15675586,15677219,15678974,15680606,15682073,15683919,15685536,15687084,15688708,15690376,15691968,15693524,15695214,15696932,15698587,15700172,15701789,15703603,15705273,15706888,15708384,15710282,15712139,15713961,15715732,15717519,15719508,15721528,15723554,15724537,15724584,15724641,15724802,15725024,15725327,15725720,15726170,15726787,15727473,15728455,15729483,15730549,15731987,15733375,15734759,15736224,15737643,15738993,15740379,15741811,15743284,15744923,15746570,15748194,15749781,15751359,15752867,15754441,15755914,15757373,15758881,15760347,15761759,15763222,15764855,15766604,15768287,15769977,15771629,15773281,15774947,15776595,15778115,15779497,15780933,15782401,15783796,15784949,15786016,15787159,15788260,15789378,15790473,15791472,15792512,15793513,15794884,15796825,15798268,15799679,15801044,15802359,15803668,15805008,15806323,15807590,15808928,15810287,15811577,15812745,15814030,15815315,15816418,15817420,15818357,15819326,15820304,15821158,15821874,15822826,15823938,15825077,15826289,15827657,15829209,15830878,15832488,15834080,15835739,15837206,15838676,15839968,15841069,15842222,15843563,15844972,15846450,15847909,15849091,15850047,15851081,15852220,15853392,15854661,15855863,15857166,15858360,15859600,15860863,15862164,15863545,15864844,15866193,15867493,15868983,15871023,15872424,15873760,15874737,15875620,15877019,15878165,15879265,15880148,15881133,15882078,15883002,15883675,15885040,15886537,15888038,15889394,15890855,15892367,15893630,15895020,15896486,15897976,15899376,15900806,15902270,15903678,15905096,15906256,15907481,15908576,15909936,15911535,15913183,15914911,15916546,15917966,15919433,15920911,15922444,15923926,15925376,15926855,15928221,15929465,15930743,15931822,15932935,15933757,15934749,15935962,15937244,15938581,15940014,15941377,15942744,15944125,15945446,15947437,15947882,15947928,15947976,15948060,15948148,15948207,15948278,15948470,15948788,15949178,15949674,15950292,15950924,15951563,15952286,15953015,15953876,15955240,15956676,15958185,15959594,15961160,15962838,15964336,15965935,15967583,15969208,15970924,15972583,15974303,15976066,15977740,15979354,15981027,15982705,15984340,15985816,15987326,15988725,15989930,15990835,15991581,15992268,15992871,15993478,15994011,15994593,15995164,15995663,15996049,15996381,15996606,15996672,15996755,15996800,15996845,15996890,15998262,15999219,15999268,15999313,15999358,15999403,15999451,15999500,15999545,15999590,15999635,15999683,15999852,16000272,16001661,16002975,16004378,16005815,16007248,16008615,16009692,16010811,16011804,16012536,16013173,16014101,16014916,16015760,16016603,16017484,16018448,16019379,16020226,16021008,16021737,16022523,16023503,16024331,16025126,16025907,16026752,16027501,16028193,16028849,16029454,16029743,16029819,16029868,16029913,16029958,16030003,16030046,16030095,16030140,16030185,16030230,16030274,16030323,16031195,16032658,16032703,16032748,16032796,16032845,16032890,16032990,16033912,16035031,16036129,16037211,16038237,16039281,16040453,16041506,16042515,16043619,16044734,16045994,16047454,16049154,16050829,16052622,16054186,16055611,16057124,16058484,16059756,16060783,16062050,16063406,16064657,16065896,16067157,16068567,16070112,16071675,16073115,16074743,16076424,16077910,16079415,16080966,16082576,16084009,16085047,16086036,16087018,16088185,16089394,16090377,16090872,16090917,16090965,16091014,16091059,16091104,16091472,16093422,16093470,16093519,16093632,16093817,16094081,16094459,16094917,16095461,16096089,16096920,16098044,16099199,16100509,16101983,16103377,16104857,16106460,16108052,16109644,16111188,16112848,16114558,16116366,16118114,16119899,16121654,16123321,16125010,16126650,16128209,16129715,16131273,16132793,16134322,16135888,16137689,16139463,16141180,16142857,16144503,16146155,16147826,16149420,16150888,16152301,16153850,16155309,16156567,16157644,16158773,16159842,16160943,16162016,16163072,16164103,16165061,16166001,16167900,16169948,16171351,16172318,16173311,16174178,16175090,16176096,16177060,16177948,16178958,16179839,16180688,16181490,16182394,16183556,16184843,16186196,16187426,16188752,16190136,16191574,16192988,16194377,16195851,16197269,16198567,16199648,16200641,16201638,16202590,16203734,16204867,16206002,16207148,16208250,16209242,16210322,16211619,16212884,16214166,16215449,16216602,16217691,16218950,16220106,16221249,16222503,16223797,16225124,16226410,16227674,16228953,16230235,16231498,16232798,16234077,16235421,16236824,16238345,16239632,16240866,16242127,16243541,16244914,16246284,16247717,16249135,16250571,16252051,16253418,16254733,16256027,16257377,16258814,16260199,16261593,16262999,16264370,16265674,16266919,16268094,16269288,16270427,16271719,16272964,16274112,16275211,16276407,16277500,16278570,16279446,16281127,16282467,16283703,16284950,16286292,16287661,16289063,16290463,16291865,16293309,16294733,16296186,16297529,16298783,16300087,16301497,16302895,16304325,16305713,16307033,16308354,16309624,16310785,16311974,16313146,16314413,16315691,16316842,16317944,16319165,16320266,16321357,16322319,16323719,16325344,16326283,16327284,16328155,16329041,16330041,16330979,16331904,16332885,16333766,16334674,16335430,16336316,16337400,16338667,16340026,16341281,16342591,16343963,16345366,16346802,16348173,16349620,16351037,16352358,16353498,16354502,16355558,16356465,16357623,16358735,16359883,16360977,16362138,16363113,16364150,16365406,16366677,16367961,16369276,16370462,16371550,16372791,16374011,16375149,16376410,16377664,16379014,16380332,16381592,16382879,16384150,16385411,16386716,16388012,16389330,16390708,16392347,16394317,16394403,16394580,16395880,16397131,16397991,16399198,16400332,16401485,16401564,16401766,16403814,16405031,16406106,16407123,16408116,16409146,16410447,16411700,16413027,16414240,16415493,16416854,16418160,16419598,16420991,16422384,16423628,16424978,16426483,16428179,16429679,16431139,16432500,16433912,16435379,16436865,16438280,16439790,16441330,16442810,16444198,16445701,16447210,16448705,16450289,16451951,16453630,16455224,16456730,16458311,16459837,16461426,16462981,16464462,16465949,16467397,16468848,16470272,16471532,16472753,16473951,16475169,16476397,16477703,16478995,16480140,16481264,16482491,16484341,16485866,16486970,16488033,16488933,16490000,16491157,16492403,16493561,16494624,16495593,16496597,16497559,16498554,16499747,16500973,16502263,16503433,16504492,16505667,16506968,16508373,16509713,16511048,16512201,16513458,16515018,16516545,16518168,16519849,16521473,16523151,16524700,16526212,16527795,16529455,16531156,16532894,16534546,16536180,16537672,16539079,16540416,16541818,16543195,16544554,16546140,16547751,16549304,16550810,16552283,16553701,16555148,16556571,16557984,16559384,16560716,16562079,16563833,16565334,16566039,16566796,16567687,16568637,16569634,16570647,16571725,16572894,16574134,16575317,16576485,16577765,16579008,16580382,16581763,16583121,16584620,16586065,16587570,16589093,16590545,16592071,16593672,16595356,16596994,16598557,16600209,16601849,16603599,16605360,16607132,16608973,16610683,16612257,16613877,16615514,16617183,16618893,16620610,16622326,16624079,16625798,16627497,16629137,16630743,16632529,16634343,16636085,16637783,16639469,16641226,16642934,16644443,16645663,16646839,16647665,16648523,16649758,16650938,16652607,16654060,16655599,16657392,16658390,16658435,16658480,16658525,16658573,16658622,16658893,16659859,16660957,16662078,16663139,16664151,16665178,16666379,16667397,16668429,16669576,16670705,16672018,16673525,16675247,16676978,16678719,16680246,16681653,16683183,16684545,16685723,16686739,16688103,16689392,16690651,16691852,16693170,16694646,16696214,16697725,16699211,16700874,16702519,16703970,16705501,16707042,16708660,16709991,16710948,16711994,16713061,16714248,16715397,16716281,16716591,16716629,16716674,16716722,16716771,16716816,16717634,16719145,16719190,16719232,16719281,16719326,16719371,16719416,16719459,16719508,16719553,16719598,16719697,16720029,16721176,16722576,16723930,16725376,16726783,16728146,16729311,16730362,16731464,16732267,16732865,16733735,16734573,16735372,16736244,16737073,16738034,16738989,16739838,16740658,16741399,16742142,16743105,16743964,16744767,16745534,16746319,16747099,16747824,16748521,16749090,16749494,16749642,16749687,16749735,16749784,16749829,16749869,16749914,16749962,16750011,16750056,16750097,16750142,16750464,16752506,16753389,16754283,16755167,16756354,16757426,16758390,16759373,16760418,16761428,16762412,16763281,16764346,16765363,16766435,16767404,16768627,16770034,16771403,16772878,16774395,16775864,16777470,16778919,16780229,16781517,16782815,16784274,16785571,16786875,16788185,16789368,16790499,16791509,16792587,16793863,16795339,16796783,16798250,16799576,16800753,16801907,16803054,16804255,16805634,16806696,16807744,16808839,16810027,16811098,16811992,16812829,16813852,16814869,16815933,16816981,16817984,16818911,16820853,16821314,16821359,16821407,16821456,16821501,16821553,16821859,16822511,16823411,16824453,16825667,16827241,16828934,16830674,16832463,16834186,16835913,16837634,16839382,16841141,16843002,16844834,16846614,16848291,16849677,16851070,16852349,16853855,16855639,16857483,16859345,16861273,16863157,16865098,16867046,16868890,16870751,16872628,16874504,16876355,16878190,16879949,16881707,16883515,16885409,16886881,16888347,16889680,16890812,16891324,16891412,16891457,16891505,16891552,16891597,16891641,16891686,16892498,16893712,16895043,16896161,16897021,16897676,16898724,16899797,16900799,16902561,16903287,16903335,16903410,16903574,16903819,16904112,16904526,16905023,16905604,16906290,16907279,16908363,16909438,16910918,16912279,16913664,16915137,16916541,16917940,16919292,16920740,16922201,16923833,16925494,16927116,16928697,16930273,16931801,16933384,16934873,16936307,16937813,16939306,16940767,16942220,16943879,16945602,16947299,16948954,16950599,16952216,16953853,16955514,16957028,16958434,16959915,16961385,16962746,16963849,16964906,16966024,16967140,16968192,16969269,16970301,16971340,16972325,16973842,16975689,16977109,16978515,16979864,16981194,16982488,16983826,16985121,16986408,16987735,16989079,16990393,16991571,16992891,16994137,16995250,16996292,16997228,16998117,16999111,16999969,17000711,17001657,17002780,17003905,17005182,17006584,17008146,17009777,17011377,17012984,17014680,17016124,17017568,17018825,17019987,17021185,17022502,17023942,17025374,17026804,17027972,17028947,17029967,17031110,17032291,17033593,17034773,17036060,17037259,17038503,17039794,17041109,17042464,17043753,17045122,17046437,17048004,17049994,17051413,17052701,17053672,17054620,17055999,17057135,17058202,17059085,17060007,17060984,17062038,17062621,17064030,17065561,17067064,17068389,17069830,17071339,17072624,17074024,17075523,17076989,17078393,17079838,17081340,17082713,17084086,17085255,17086526,17087604,17088985,17090591,17092235,17093961,17095566,17096956,17098382,17099860,17101425,17102886,17104315,17105781,17107141,17108426,17109652,17110680,17111781,17112665,17113674,17114914,17116200,17117604,17119017,17120404,17121758,17123116,17124427,17126475,17126653,17126698,17126742,17126787,17126837,17126884,17127519,17128553,17129629,17130752,17131816,17132809,17133858,17134996,17135947,17137034,17138174,17139363,17140764,17142363,17144065,17145850,17147495,17148956,17150375,17151784,17153154,17154289,17155428,17156805,17158032,17159309,17160537,17161916,17163421,17165018,17166476,17168005,17169698,17171269,17172687,17174273,17175799,17177359,17178508,17179494,17180465,17181585,17182820,17183842,17184655,17184700,17184746,17184794,17184843,17184890,17184935,17186572,17187269,17187314,17187364,17187451,17187524,17187607,17187664,17187847,17188132,17188525,17189016,17189604,17190234,17190862,17191565,17192307,17193120,17194466,17195916,17197384,17198819,17200325,17202027,17203544,17205134,17206783,17208417,17210115,17211776,17213493,17215269,17216972,17218567,17220206,17221873,17223523,17224977,17226473,17227896,17229135,17230040,17230856,17231570,17232217,17232834,17233408,17233989,17234589,17235081,17235429,17235744,17235977,17236067,17236149,17236194,17236239,17236287,17237424,17238624,17238671,17238716,17238760,17238808,17238857,17238904,17238949,17238993,17239041,17239090,17239238,17239603,17240901,17242233,17243655,17245072,17246481,17247847,17248976,17250069,17251097,17251856,17252495,17253395,17254236,17255023,17255851,17256756,17257735,17258727,17259582,17260368,17261119,17261900,17262875,17263689,17264493,17265280,17266114,17266854,17267571,17268255,17268851,17269174,17269268,17269313,17269358,17269403,17269451,17269500,17269545,17269590,17269635,17269683,17269732,17269777,17270406,17272114,17272160,17272208,17272257,17272304,17272349,17272395,17272443,17272492,17272539,17272584,17272660,17272973,17274003,17275436,17276759,17278201,17279611,17280984,17282203,17283248,17284375,17285201,17285839,17286669,17287519,17288298,17289167,17290002,17290968,17291958,17292826,17293640,17294365,17295096,17296049,17296932,17297737,17298514,17299299,17300130,17300877,17301570,17302151,17302592,17302769,17302814,17302862,17302911,17302956,17303001,17303046,17303094,17303143,17303188,17303233,17303278,17303406,17305454,17305600,17305648,17305693,17305739,17305787,17305836,17306488,17307523,17308583,17309701,17310764,17311761,17312805,17313942,17314905,17315976,17317114,17318305,17319717,17321329,17323024,17324809,17326455,17327917,17329355,17330765,17332116,17333249,17334384,17335773,17337007,17338268,17339480,17340866,17342376,17343967,17345422,17346944,17348637,17350204,17351593,17353194,17354716,17356276,17357412,17358381,17359355,17360474,17361714,17362747,17363542,17363587,17363632,17363677,17363719,17363768,17363813,17365482,17366144,17366189,17366263,17366443,17366673,17366965,17367408,17367939,17368561,17369275,17370287,17371437,17372632,17374138,17375542,17377009,17378572,17380164,17381761,17383328,17384979,17386667,17388409,17390206,17391973,17393717,17395440,17397107,17398777,17400388,17401896,17403458,17405017,17406537,17408071,17409806,17411596,17413315,17415013,17416717,17418347,17419967,17421610,17423113,17424504,17426041,17427542,17428896,17430028,17431104,17432220,17433309,17434377,17435442,17436438,17437459,17438437,17439889,17441937,17443787,17444722,17445719,17446593,17447492,17448495,17449481,17450362,17451318,17452248,17453156,17453967,17454815,17455837,17457131,17458434,17459692,17460939,17462338,17463700,17465166,17466579,17468060,17469500,17470920,17472065,17473047,17474077,17475020,17476178,17477266,17478417,17479463,17480670,17481701,17482706,17483968,17485197,17486423,17487739,17488941,17490037,17491216,17492438,17493622,17494866,17496090,17497377,17498713,17500022,17501306,17502594,17503849,17505155,17506509,17507768,17509175,17510612,17511977,17513239,17514474,17515801,17517138,17518530,17519967,17521383,17522810,17524208,17525627,17527004,17528280,17529614,17530975,17532374,17533783,17535200,17536521,17537821,17539081,17540322,17541523,17542686,17543928,17545213,17546399,17547506,17548706,17549786,17550894,17551918,17553201,17554740,17556038,17557301,17558576,17559922,17561252,17562648,17564122,17565542,17566913,17568364,17569746,17571060,17572411,17573718,17575085,17576469,17577914,17579274,17580628,17581851,17583098,17584331,17585530,17586742,17588019,17589250,17590408,17591583,17592716,17593763,17594824,17595759,17597807,17598710,17599682,17600565,17601444,17602419,17603395,17604323,17605192,17606148,17607065,17607845,17608688,17609644,17610918,17612248,17613564,17614802,17616156,17617528,17618977,17620369,17621845,17623280,17624687,17625914,17626932,17627942,17628854,17629976,17631120,17632303,17633332,17634503,17635602,17636597,17637815,17639047,17640272,17641567,17642839,17643918,17645035,17646237,17647436,17648748,17649971,17651251,17652565,17653888,17655163,17656459,17657754,17659034,17660365,17661670,17663084,17664489,17666501,17667219,17667296,17668331,17669582,17670724,17671501,17672807,17674006,17674465,17674546,17676066,17677526,17678441,17679297,17680368,17681516,17682514,17683500,17684501,17685596,17686527,17687425,17688410,17689416,17690512,17691502,17692629,17693940,17695322,17696707,17698169,17699673,17701204,17702833,17704152,17705409,17706764,17708147,17709544,17710793,17712199,17713333,17714507,17715593,17716605,17717779,17719167,17720647,17722096,17723489,17724762,17725929,17727158,17728269,17729626,17730872,17731828,17732923,17734092,17735228,17736171,17737045,17737969,17739025,17740041,17741097,17742107,17743128,17744447,17746271,17747401,17748425,17749428,17750463,17751548,17752837,17754182,17755330,17756568,17757830,17759170,17760495,17761918,17763326,17764678,17765936,17767341,17768905,17770566,17771998,17773492,17774924,17776341,17777827,17779267,17780713,17782225,17783748,17785137,17786566,17788093,17789633,17791138,17792796,17794467,17796140,17797679,17799174,17800799,17802320,17803883,17805400,17806903,17808367,17809832,17811281,17812630,17813863,17815088,17816295,17817516,17818768,17820104,17821378,17822543,17823659,17824967,17826957,17827006,17827051,17827096,17827141,17827189,17827284,17827686,17828464,17829342,17830417,17831748,17833373,17835084,17836859,17838642,17840351,17842091,17843844,17845609,17847403,17849252,17851059,17852838,17854482,17855813,17857277,17858475,17860096,17861895,17863716,17865581,17867513,17869405,17871329,17873258,17875071,17876942,17878787,17880648,17882467,17884292,17886060,17887843,17889682,17891525,17892949,17894401,17895700,17896712,17897076,17897125,17897170,17897215,17897260,17897305,17897354,17897399,17899260,17900635,17901753,17902792,17903728,17904790,17905968,17907174,17908318,17909378,17910381,17911370,17912275,17913307,17914491,17915734,17917001,17918141,17919191,17920407,17921745,17923079,17924489,17925741,17926877,17928220,17929766,17931302,17932928,17934589,17936226,17937916,17939457,17941002,17942573,17944255,17945956,17947662,17949302,17950907,17952377,17953775,17955148,17956542,17957913,17959280,17960898,17962515,17964049,17965552,17967009,17968437,17969856,17971255,17972681,17974039,17975376,17976740,17978575,17979869,17980593,17981370,17982261,17983202,17984238,17985320,17986406,17987615,17988845,17990014,17991196,17992451,17993690,17995085,17996478,17997846,17999381,18000802,18002318,18003798,18005230,18006730,18008326,18009960,18011548,18013189,18014824,18016494,18018277,18020024,18021809,18023657,18025346,18026916,18028522,18030140,18031838,18033578,18035276,18037004,18038751,18040456,18042177,18043832,18045467,18047261,18049068,18050808,18052511,18054219,18055957,18057643,18059115,18060296,18061419,18062200,18063139,18064367,18065563,18067164,18068761,18070183,18071346,18072302,18072903,18073456,18074401,18075487,18076674,18077892,18079838,18081303,18082766,18084245,18085766,18087281,18088808,18090340,18091827,18093331,18094902,18096591,18098434,18100330,18102313,18104319,18106316,18108313,18110316,18112352,18114367,18116319,18118174,18119949,18121812,18123709,18125603,18127536,18129542,18131539,18133391,18135248,18137116,18138885,18140574,18142328,18144105,18145928,18147796,18149745,18151689,18153700,18155709,18157707,18159657,18161411,18163015,18164507,18166020,18167534,18169049,18170569,18172068,18173573,18175018,18176454,18177915,18179438,18181486,18182814,18184104,18185373,18186649,18187960,18189229,18190615,18191883,18193111,18194398,18195738,18196908,18198263,18199601,18201060,18202461,18203888,18205349,18206742,18208199,18209713,18211231,18212722,18214254,18215809,18217374,18219046,18220629,18222228,18223781,18225372,18226924,18228451,18229929,18231563,18233280,18234912,18236591,18238275,18239696,18241062,18242450,18243817,18245044,18246286,18247491,18248750,18250027,18251184,18252372,18253554,18254703,18255922,18257100,18258372,18259662,18260934,18262945,18264263,18265313,18266460,18267565,18268621,18269593,18270677,18271780,18272872,18274034,18275125,18276293,18277515,18278864,18280226,18281718,18283243,18284844,18286410,18287943,18289578,18291099,18292521,18293992,18295599,18297139,18298668,18300201,18301592,18303041,18304388,18305730,18307063,18308397,18309660,18311085,18312508,18314067,18315590,18317062,18318536,18319879,18321090,18322234,18323211,18324228,18325258,18326411,18327576,18328729,18329676,18330610,18331658,18332610,18333501,18334493,18335531,18337244,18339034,18340584,18342198,18343743,18345372,18346994,18348655,18350308,18351851,18353436,18355115,18356809,18358279,18359738,18361340,18362938,18364518,18366237,18367919,18369465,18371104,18372639,18374093,18375568,18377065,18378690,18380203,18381650,18383144,18384715,18386266,18387812,18389306,18390890,18392453,18394078,18395743,18397431,18399083,18400625,18402160,18403844,18405464,18406975,18408364,18409571,18411080,18412614,18414153,18415586,18417156,18418776,18420462,18422178,18423839,18425338,18426911,18428720,18430524,18431547,18432564,18433548,18434599,18435639,18436768,18437875,18438977,18439984,18440994,18442197,18443365,18444519,18445578,18446654,18447845,18448968,18450195,18451399,18452592,18453894,18455234,18456567,18457755,18458851,18459993,18461038,18462095,18463069,18464034,18465122,18466171,18467089,18467989,18468887,18469870,18470830,18471904,18472946,18473923,18475004,18476004,18477012,18477944,18478917,18479946,18480970,18482005,18483026,18484113,18485289,18486373,18487504,18488498,18489419,18490336,18491369,18493412,18494737,18496032,18497325,18498606,18499899,18501188,18502573,18503842,18505076,18506353,18507690,18508821,18510069,18511313,18512706,18514021,18515340,18516683,18518004,18519455,18521031,18522647,18524267,18525737,18527087,18528446,18529961,18531513,18533212,18534927,18536595,18538122,18539445,18540782,18542153,18543662,18545118,18546653,18548127,18549526,18550897,18552276,18553640,18554860,18556111,18557329,18558585,18559877,18561034,18562213,18563396,18564541,18565765,18566971,18568261,18569547,18570803,18572829,18574511,18576057,18577672,18579269,18580867,18582440,18583983,18585615,18587192,18588738,18590308,18591983,18593737,18595519,18597289,18599070,18600552,18602253,18603842,18605600,18607434,18609263,18611009,18612853,18614722,18616560,18618401,18620279,18622003,18623828,18625505,18627241,18628996,18630701,18632376,18634110,18635727,18637528,18639460,18641175,18642812,18644148,18645496,18646788,18648104,18649600,18651099,18652571,18654094,18655635,18657140,18658653,18660232,18661709,18663162,18664630,18666130,18668013,18669376,18670181,18670938,18671809,18672736,18673537,18674207,18675126,18676013,18676807,18677672,18678402,18679350,18680389,18681555,18682864,18684105,18685419,18686672,18688102,18689633,18691176,18692676,18694283,18695906,18697550,18699098,18700715,18702306,18703938,18705557,18707110,18708568,18710007,18711516,18713051,18714584,18716068,18717498,18718958,18720364,18721742,18723052,18724131,18725400,18726567,18727748,18728781,18729793,18730799,18731894,18732865,18733848,18734852,18735833,18736827,18737590,18738841,18740831,18742623,18744454,18746345,18748193,18750011,18751830,18753686,18755520,18757259,18758922,18760469,18761929,18763491,18765521,18767183,18769020,18770903,18772784,18774642,18776536,18778438,18780337,18782037,18783753,18785324,18786821,18788296,18790351,18792052,18793899,18795793,18797681,18799600,18801390,18803188,18804772,18806236,18807707,18809271,18810892,18812509,18814469,18816127,18818050,18820070,18821734,18823736,18825627,18827362,18829382,18831150,18832396,18833918,18835526,18837012,18838589,18840524,18841945,18843365,18845012,18846562,18848043,18849913,18851617,18852884,18854504,18856106,18857672,18859289,18861337,18863015,18864683,18866344,18868107,18869902,18871645,18873375,18875167,18876948,18878779,18880589,18882496,18884232,18885972,18887768,18889548,18891379,18893211,18895018,18896833,18898700,18900500,18902268,18904044,18905809,18907552,18909317,18911009,18912806,18914576,18916318,18918071,18919867,18921691,18923447,18925216,18926969,18928674,18930407,18932127,18933880,18935610,18937331,18939015,18940669,18942523,18944393,18946263,18948111,18949937,18951751,18953645,18955501,18957335,18959078,18960740,18962282,18964330,18966318,18968259,18970163,18972100,18974044,18975939,18977836,18979754,18981656,18983535,18985405,18987317,18989174,18991010,18992768,18994535,18996283,18998104,18999935,19001719,19003566,19005364,19007236,19009065,19010874,19012626,19014395,19016098,19017695,19019269,19020873,19022569,19024367,19026156,19027881,19029644,19031318,19033033,19034761,19036457,19038212,19039987,19041781,19043586,19045275,19047184,19049088,19051023,19052908,19054721,19056556,19058452,19060368,19062288,19064185,19066124,19068002,19070015,19072042,19073983,19075953,19077978,19079963,19081967,19083964,19085934,19087872,19089799,19091740,19093720,19095723,19097674,19099605,19101518,19103508,19105454,19107442,19109396,19111421,19113426,19115418,19117321,19119254,19121150,19123092,19124957,19126615,19128448,19130230,19132102,19134001,19135933,19137910,19139875,19141842,19143815,19145761,19147670,19149665,19151618,19153463,19155298,19157144,19159009,19160860,19162684,19164481,19166279,19168088,19169902,19171668,19173380,19174992,19176557,19177974,19179307,19180424,19182472,19184520,19186568,19188616,19190664,19192712,19194760,19196808,19198856,19200904,19202952,19205000,19207048,19209096,19211144,19213192,19215240,19217288,19219336,19221384,19223432,19225480,19227528,19229576,19231624,19233672,19235720,19237768,19239816,19241873,19243921,19245969,19248017,19250065,19252113,19254161,19256209,19258257,19260305,19262353,19264401,19266449,19268497,19270545,19272593,19274641,19276689,19278737,19280785,19282833,19284881,19286929,19288977,19291025,19293073,19295121,19297169,19299217,19301265,19303313,19305361,19307409,19309457,19311505,19313553,19315601,19317649,19319697,19321745,19323793,19325841,19327889,19329937,19331985,19334033,19336081,19338129,19340177,19342225,19344273,19346321,19348369,19350417,19352465,19354513,19356561,19358609,19360657,19362705,19364753,19366801,19368849,19370897,19372945,19374993,19377041,19379097,19381145,19383193,19385250,19387298,19389346,19391394,19393442,19395490,19397538,19399586,19401634,19403682,19405730,19407778,19409826,19411874,19413922,19415970,19418018,19420066,19422114,19424162,19426210,19428258,19430306,19432354,19434402,19436450,19438498,19440546,19442594,19444642,19446690,19448738,19450786,19452834,19454882,19456930,19458978,19461026,19463074,19465122,19467170,19469218,19471266,19473314,19475362,19477410,19479458,19481506,19483554,19485602,19487650,19489707,19491755,19493803,19495851,19497899,19499947,19501995,19504043,19506091,19508139,19510187,19512235,19514283,19516331,19518379,19520427,19522475,19524523,19526571,19528619,19530667,19532715,19534763,19536811,19538859,19540907,19542955,19545003,19547051,19549099,19551147,19553195,19555243,19557291,19559348,19561396,19563444,19565492,19567540,19569588,19571636,19573684,19575732,19577780,19579828,19581876,19583924,19585972,19588020,19590068,19592116,19594164,19596212,19598260,19600308,19602356,19604404,19606452,19608500,19610548,19612596,19614644,19616692,19618740,19620788,19622836,19624884,19626932,19628980,19631028,19633076,19635124,19637172,19639220,19641268,19643316,19645364,19647412,19649460,19651508,19653556,19655604,19657652,19659700,19661748,19663796,19665844,19667892,19669940,19671988,19674036,19676084,19678132,19680180,19682228,19684276,19686324,19688372,19690420,19692468,19694516,19696564,19698612,19700660,19702709,19704587,19706090,19707434,19708875,19710396,19711980,19713461,19714926,19716393,19717583,19718838,19720325,19721849,19723090,19724297,19725698,19727187,19728665,19730132,19731625,19732997,19734396,19735761,19737263,19738690,19740197,19741680,19743147,19744687,19746117,19747669,19749198,19750776,19752238,19753747,19755333,19756842,19758360,19759875,19761276,19762830,19764422,19765961,19767370,19768824,19770267,19771927,19773563,19775210,19776874,19778407,19779967,19781667,19783341,19784827,19786462,19788089,19789675,19791685,19792707,19793832,19795024,19796149,19797138,19798123,19799179,19800316,19801428,19802616,19803720,19804952,19806143,19807507,19808907,19810399,19811944,19813570,19815126,19816687,19818312,19819781,19821186,19822721,19824323,19825843,19827421,19828934,19830304,19831770,19833059,19834398,19835788,19837020,19838360,19839813,19841277,19842809,19844312,19845790,19847238,19848513,19849685,19850762,19851795,19852836,19853907,19855046,19856247,19857324,19858203,19859247,19860319,19861240,19862163,19863139,19864224,19866236,19867484,19868568,19869748,19870848,19871896,19872875,19873931,19875062,19876130,19877301,19878494,19879816,19881030,19882356,19883949,19885445,19886885,19888435,19889918,19891388,19892974,19894518,19895979,19897536,19899130,19900682,19902171,19903636,19905129,19906772,19908411,19910216,19912090,19913975,19915660,19917346,19919170,19920939,19922571,19924146,19925690,19927005,19928335,19929507,19930444,19931587,19932662,19933787,19934949,19936120,19937062,19938025,19939041,19939968,19940894,19941893,19942934,19944701,19946463,19947967,19949475,19950998,19952555,19954081,19955529,19957077,19958604,19960102,19961630,19963221,19964935,19966678,19968461,19970210,19971821,19973432,19974992,19976746,19978515,19980345,19982043,19983810,19985615,19987469,19989205,19991040,19992590,19994378,19996089,19997838,19999540,20001226,20002801,20004404,20006012,20007780,20009668,20011357,20013127,20014401,20015726,20017066,20018306,20019712,20021164,20022648,20024098,20025562,20027044,20028492,20029979,20031439,20032826,20034222,20035685,20037446,20039426,20041094,20042778,20044468,20046234,20047977,20049719,20051461,20053237,20055056,20056861,20058713,20060597,20062336,20064080,20065861,20067666,20069498,20071331,20073144,20074996,20076839,20078637,20080398,20082155,20083914,20085705,20087457,20089191,20090993,20092734,20094473,20096218,20098041,20099828,20101590,20103340,20105099,20106805,20108498,20110221,20111975,20113723,20115418,20117074,20118791,20120644,20122536,20124383,20126228,20128028,20129865,20131774,20133638,20135427,20137138,20138783,20140269,20141281,20143329,20145377,20147425,20149473,20151521,20153569,20155617,20157665,20159713,20161761,20163809,20165857,20167905,20169953,20172001,20174049,20176097,20178145,20180193,20182241,20184289,20186337,20188385,20190433,20192481,20194529,20196577,20198625,20200673,20202721,20204769,20206817,20208865,20210913,20212961,20215009,20217057,20219105,20221153,20223201,20225249,20227297,20229345,20231393,20233441,20235489,20237537,20239585,20241633,20243681,20245729,20247777,20249825,20251873,20253921,20255969,20258017,20260065,20262113,20264161,20266209,20268257,20270305,20272353,20274401,20276449,20277635,20278979,20280307,20281767,20283236,20284755,20286251,20287676,20289113,20290595,20292065,20293482,20294924,20296272,20297643,20298602,20299327,20300433,20301742,20303265,20304916,20306701,20308547,20310412,20312308,20314160,20315918,20317681,20318938,20320711,20322471,20324322,20326209,20328058,20329876,20331671,20333466,20335148,20336566,20337739,20338721,20339824,20341189,20342355,20343617,20344944,20346071,20347297,20348524,20349896,20351365,20352834,20354348,20355760,20357154,20358545,20359887,20361937,20363408,20364801,20366281,20367828,20369337,20370789,20372340,20373817,20375280,20376785,20378400,20380008,20381428,20383031,20384724,20386380,20388070,20389846,20391573,20393222,20394941,20396520,20398085,20399589,20401150,20402739,20404342,20405928,20407540,20409171,20410770,20412325,20413871,20415481,20417081,20418716,20420306,20421942,20423486,20425070,20426654,20428307,20429926,20431517,20432832,20434018,20435507,20436992,20438423,20439760,20441253,20442773,20444373,20445988,20447444,20448825,20450322,20452254,20453850,20455316,20456714,20458122,20459555,20460912,20462383,20463854,20465213,20466634,20468125,20469638,20470751,20472198,20473739,20475273,20476808,20478528,20480165,20481711,20483336,20484849,20486297,20487725,20489299,20490854,20492393,20493825,20495345,20496870,20498412,20499835,20501333,20502940,20504462,20506043,20507611,20509189,20510792,20512347,20513856,20515431,20516923,20518322,20519542,20520442,20521729,20523109,20524474,20525753,20527194,20528670,20530203,20531761,20533158,20534466,20535866,20537599,20539486,20541110,20542785,20544432,20546239,20547993,20549735,20551480,20553091,20554792,20556536,20558357,20559914,20561414,20563048,20564706,20566310,20568070,20569847,20571469,20573169,20574810,20576345,20577863,20579378,20581053,20582715,20584194,20585755,20587357,20588995,20590650,20592252,20593910,20595611,20597310,20599045,20600805,20602553,20604163,20605753,20607462,20609122,20610696,20612151,20613393,20615018,20616716,20618398,20619965,20621621,20623327,20625088,20626911,20628719,20630347,20631988,20633780,20635628,20636206,20636819,20637426,20638081,20638778,20639480,20640304,20641297,20642331,20643398,20644259,20645569,20647029,20648595,20650235,20651651,20652864,20654412,20655983,20657657,20659459,20661120,20662716,20664454,20666101,20667743,20669525,20671149,20672740,20674536,20676208,20677923,20679726,20681393,20682994,20684653,20686416,20688182,20689953,20691662,20693056,20694524,20695895,20697090,20698252,20699683,20701048,20702261,20703537,20704766,20706125,20707631,20709210,20710718,20712248,20713829,20715447,20716400,20718448,20720496,20722544,20724592,20726640,20728688,20730736,20732784,20734832,20736880,20738928,20740976,20743024,20745072,20747120,20749168,20751216,20753264,20755312,20757360,20759408,20761456,20763504,20765552,20767600,20769648,20771696,20773744,20775792,20777840,20779888,20781936,20783984,20786032,20788080,20790128,20792176,20794224,20796272,20798320,20800368,20802416,20804464,20806512,20808560,20810608,20812656,20814704,20816752,20818800,20820848,20822896,20824944,20826992,20829040,20831088,20833136,20835184,20837232,20839280,20841328,20843376,20845424,20847472,20849520,20851568,20853616,20855664,20857712,20859760,20861808,20863856,20865904,20867952,20870000,20872048,20874096,20876144,20878192,20880240,20882288,20884336,20886384,20888432,20890480,20892528,20894576,20896624,20898672,20900720,20902768,20904816,20906864,20908912,20910960,20913008,20915056,20917104,20919152,20921200,20923248,20925296,20927344,20929392,20931440,20933488,20935536,20937584,20939632,20941680,20943728,20945785,20947833,20949881,20951929,20953977,20956025,20958073,20960121,20962169,20964217,20966265,20968313,20970361,20972409,20974457,20976505,20978553,20980601,20982649,20984697,20986745,20988793,20990841,20992889,20994937,20996985,20999033,21001081,21003129,21005177,21007225,21009273,21011329,21013377,21015425,21017473,21019521,21021569,21023617,21025665,21027713,21029761,21031809,21033857,21035905,21037953,21040001,21042049,21044097,21046145,21048193,21050241,21052289,21054344,21056392,21058440,21060488,21062536,21064584,21066632,21068680,21070728,21072776,21074824,21076872,21078920,21080968,21083016,21085064,21087112,21089160,21091208,21093264,21095319,21097364,21099363,21101400,21103452,21105500,21107548,21109596,21111651,21113708,21115756,21117804,21119852,21121900,21123948,21125996,21128044,21130092,21132140,21134188,21136236,21138284,21140332,21142380,21144428,21146476,21148524,21150572,21152620,21154668,21156716,21158764,21160812,21162860,21164908,21166956,21169004,21171052,21173100,21175148,21177204,21179252,21181300,21183348,21185396,21187444,21189492,21191540,21193590,21195606,21197629,21199677,21201731,21203786,21205834,21207882,21209929,21211977,21214025,21216073,21218121,21220169,21222217,21224265,21226313,21228361,21230409,21232457,21234505,21236553,21238601,21240649,21242697,21244745,21246793,21248841,21250889,21252937,21254985,21257033,21259081,21261129,21263177,21265225,21267273,21269321,21271369,21273417,21275465,21277513,21279561,21281609,21283657,21285705,21287753,21289801,21291850,21293885,21295887,21297937,21299988,21302036,21304084,21306132,21308179,21310227,21312275,21314323,21316371,21318419,21320467,21322515,21324563,21326611,21328659,21330707,21332755,21334803,21336851,21338899,21340947,21342995,21345043,21347091,21349139,21351187,21353235,21355283,21357331,21359379,21361427,21363475,21365523,21367571,21369619,21371667,21373715,21375763,21377811,21379859,21381907,21383955,21386003,21388051,21390099,21392147,21394195,21396243,21398291,21400339,21402387,21404435,21406483,21408540,21410588,21412636,21414684,21416732,21418780,21420828,21422876,21424924,21426972,21429020,21431068,21433116,21435164,21437212,21439260,21441308,21443356,21445404,21447452,21449500,21451548,21453596,21455644,21457692,21459740,21461788,21463836,21465884,21467932,21469980,21472028,21474076,21476124,21478172,21480220,21482268,21484316,21486364,21488412,21490460,21492508,21494556,21496604,21498652,21500700,21502748,21504796,21506844,21508892,21510940,21512988,21515036,21517084,21519132,21521180,21523228,21525276,21527324,21529372,21531420,21533472,21535520,21537568,21539616,21541664,21543712,21545760,21547808,21549856,21551904,21553952,21556000,21558048,21560096,21562144,21564192,21566240,21568288,21570336,21572384,21574439,21576472,21578475,21580510,21582560,21584608,21586656,21588713,21590763,21592820,21594868,21596916,21598964,21601012,21603060,21605108,21607156,21609204,21611252,21613300,21615348,21617396,21619444,21621492,21623540,21625588,21627182,21628543,21629984,21631218,21632409,21633516,21634529,21635709,21636785,21638007,21639124,21640358,21641529,21642585,21643767,21644861,21645999,21647080,21648233,21649320,21650496,21651652,21652831,21653810,21654727,21655534,21656483,21657418,21658063,21659095,21659951,21660823,21661824,21662174,21662525,21662890,21664094,21665340,21666842,21668329,21669813,21671197,21672091,21673180,21674021,21674923,21675780,21676739,21678098,21679480,21680744,21681938,21683025,21684003,21685150,21686275,21687393,21688530,21689610,21690747,21692026,21693139,21694322,21695262,21696481,21697612,21698829,21700005,21701158,21702249,21703239,21704156,21705076,21705975,21706933,21707875,21708471,21709437,21710211,21711007,21711837,21712187,21712538,21712919,21714173,21715508,21716989,21718471,21719930,21720960,21722044,21723186,21724083,21725008,21725860,21727517,21728782,21728820,21728865,21728913,21728977,21729101,21729227,21729416,21729609,21729791,21730052,21730252,21730522,21731171,21732152,21733192,21734173,21735351,21736805,21738400,21739998,21741671,21743269,21745038,21746778,21748543,21750149,21751711,21753274,21754899,21756591,21758278,21760047,21761813,21763433,21765086,21766716,21768334,21769966,21771510,21772513,21773453,21774421,21775195,21775765,21776014,21776188,21776325,21776445,21776594,21776756,21776863,21776925,21776980,21777027,21777072,21777116,21777288,21778038,21779121,21780852,21780982,21781218,21781449,21781648,21781880,21782303,21782695,21783074,21783512,21783954,21784206,21784587,21785270,21786140,21787099,21788052,21789179,21790479,21792112,21793824,21795628,21797375,21799177,21801020,21802848,21804560,21806237,21807889,21809594,21811466,21813304,21815198,21817059,21818862,21820656,21822569,21824418,21826285,21828171,21829414,21830412,21831305,21832159,21832888,21833384,21833720,21834067,21834397,21834819,21835157,21835549,21835753,21835941,21836097,21836345,21836507,21836736,21838784,21840046,21841378,21842677,21843914,21845271,21846685,21848101,21849399,21850769,21852100,21853510,21855001,21856425,21857823,21859289,21860801,21862275,21863741,21865230,21866744,21868103,21869496,21870910,21872293,21873550,21874666,21875949,21877361,21878645,21879992,21881369,21882741,21883959,21885363,21886820,21888120,21889420,21890793,21892315,21893781,21895216,21896728,21897996,21899379,21900785,21902261,21903678,21905131,21906501,21907830,21909188,21910470,21911913,21913238,21914485,21915693,21916909,21918191,21919261,21920185,21921737,21923041,21923086,21923134,21923183,21923577,21924565,21925626,21926655,21928010,21929512,21930964,21932368,21934197,21935988,21937714,21939382,21941057,21942225,21943212,21944704,21946422,21948175,21950026,21951739,21953580,21955387,21957140,21958776,21960416,21962107,21963915,21965797,21967635,21969511,21971355,21973094,21974980,21976875,21978757,21980611,21982505,21984097,21985686,21987203,21988911,21990467,21991787,21993036,21994384,21995529,21996661,21997746,21998462,21999242,21999287,21999331,21999376,21999770,22000462,22001550,22002322,22003028,22004108,22005436,22006789,22008049,22008996,22009594,22010604,22011473,22012542,22013111,22013995,22014694,22015380,22016060,22016761,22017687,22018575,22019305,22020202,22021086,22022062,22022885,22023572,22024196,22025138,22026129,22027043,22027943,22028845,22029395,22030194,22030925,22031740,22032461,22033146,22033903,22034814,22035764,22036494,22037300,22038133,22038961,22039775,22040607,22041500,22042404,22043258,22044081,22044928,22045751,22046583,22047654,22048442,22049640,22051342,22052742,22054255,22055763,22057404,22059004,22060398,22062205,22063677,22065230,22066664,22068335,22069939,22071468,22073083,22074520,22075943,22077401,22079090,22080689,22082202,22083810,22085179,22086713,22088318,22090231,22091676,22093158,22094451,22095526,22096765,22098144,22099488,22100531,22101655,22102904,22103968,22105127,22106351,22107615,22108878,22109966,22110754,22111611,22112531,22114234,22115786,22117172,22118612,22119980,22121262,22122652,22123831,22125090,22126451,22127762,22128965,22130075,22131026,22131904,22132542,22133598,22135437,22136987,22138463,22139976,22141365,22142650,22144041,22145210,22146455,22147773,22149086,22150261,22151122,22151966,22152647,22153478,22155376,22156838,22158346,22159771,22161217,22162537,22163832,22165166,22166324,22167623,22168976,22170295,22171473,22172521,22173455,22174293,22174939,22176094,22177923,22179347,22180848,22182277,22183754,22185278,22186796,22188132,22189303,22190231,22191052,22191827,22192714,22193581,22194395,22196242,22197674,22199166,22200588,22202026,22203316,22204601,22205900,22207080,22208415,22209789,22211077,22212217,22213196,22214131,22214848,22215549,22217293,22218888,22220382,22221754,22222859,22224098,22225593,22227012,22228294,22229230,22230243,22231707,22233447,22235054,22236619,22237970,22239197,22240394,22241892,22243250,22244481,22245556,22246824,22248077,22249422,22250323,22251618,22253326,22255128,22256910,22258730,22260392,22261961,22263391,22265259,22267172,22268928,22270717,22272653,22274399,22275631,22276958,22278249,22279603,22281060,22282587,22284434,22285678,22287139,22288435,22289790,22291239,22292844,22294120,22294977,22295918,22297208,22298968,22299922,22300786,22301760,22303574,22304872,22306245,22307929,22309506,22311036,22312798,22314462,22316251,22317430,22318990,22320732,22322254,22323911,22325821,22327695,22329184,22330468,22332099,22333780,22335332,22337108,22339029,22340953,22342279,22343642,22345308,22346966,22348569,22350408,22352319,22354236,22355507,22356915,22358595,22360281,22361812,22363585,22365490,22367382,22368763,22370204,22371877,22373538,22375050,22376790,22378662,22380539,22381850,22383258,22384975,22386521,22388078,22389839,22391575,22393338,22394529,22396100,22397829,22399343,22401000,22402771,22404642,22405970,22407328,22408996,22410608,22412127,22413872,22415649,22417459,22418652,22420167,22421908,22423439,22425058,22426901,22428726,22430283,22431932,22433452,22435049,22436568,22438169,22439797,22441500,22442999,22444580,22446196,22447662,22449239,22450795,22452371,22453946,22455410,22456878,22458421,22459895,22461324,22462766,22463923,22465009,22466224,22467600,22468884,22470038,22471374,22473016,22474566,22475869,22477131,22478552,22479947,22481329,22482542,22484044,22485020,22486387,22488116,22488161,22488209,22488258,22488303,22488341,22488451,22488887,22489590,22490352,22491226,22492170,22493156,22494128,22495156,22496106,22497289,22498395,22499664,22501014,22502174,22503475,22504796,22505968,22507183,22508272,22509294,22510506,22511526,22512746,22513912,22514942,22515841,22516788,22517575,22518223,22518924,22519548,22519824,22519869,22519913,22519958,22520006,22520053,22521540,22522280,22523022,22523867,22524992,22526296,22527537,22528484,22529520,22530517,22531564,22532273,22533027,22533801,22534807,22535776,22536915,22538114,22539214,22540397,22541657,22542881,22544097,22545463,22546843,22548205,22549553,22550853,22552176,22553361,22554299,22555080,22555611,22556144,22556682,22557488,22558394,22559178,22559979,22560912,22561959,22562896,22563780,22564806,22566022,22567065,22568091,22569108,22570081,22571180,22572310,22573505,22574428,22575398,22576583,22577301,22578675,22579526,22580595,22581852,22583381,22584596,22585886,22587228,22588717,22590175,22591646,22593285,22595056,22596850,22598674,22600501,22602263,22603994,22605708,22607313,22609038,22610805,22612425,22614067,22615673,22617338,22618873,22620396,22622037,22623708,22625260,22626853,22628423,22630005,22631538,22632948,22634128,22635212,22636641,22638254,22639776,22641369,22642923,22644348,22645709,22647144,22648611,22650536,22651220,22652001,22653064,22654172,22655324,22656612,22658030,22659352,22660623,22662162,22663596,22664844,22665580,22666496,22667681,22669003,22670397,22671634,22672838,22674070,22675216,22676373,22677563,22678750,22680045,22681258,22682562,22683990,22685215,22686463,22687832,22689188,22690527,22691797,22693034,22694277,22695471,22696416,22697376,22698580,22699696,22701046,22702201,22703572,22704328,22705706,22706596,22707562,22708942,22710824,22712509,22713282,22714186,22715414,22717024,22717832,22718681,22719503,22720554,22721642,22722647,22723638,22724715,22725923,22727305,22728901,22730539,22732191,22733801,22735268,22736617,22738054,22739583,22741252,22742860,22744545,22746195,22747815,22749416,22750967,22752440,22753898,22755584,22757426,22759288,22761125,22762940,22764685,22766405,22767841,22769226,22770592,22771950,22773254,22774520,22775469,22776083,22777181,22778282,22779398,22780618,22781467,22782645,22783449,22784552,22785636,22786554,22787413,22788572,22789888,22791329,22792008,22792607,22793156,22793848,22794466,22795089,22795674,22796524,22797370,22798534,22799710,22800499,22801510,22802339,22803121,22803917,22804743,22805534,22806470,22807350,22808251,22809203,22810110,22810989,22811867,22812828,22813794,22814739,22815701,22816721,22817459,22818112,22818763,22819547,22820279,22821063,22821973,22822864,22823643,22824530,22825321,22826159,22826990,22828006,22828795,22830333,22832149,22834035,22835769,22837817,22838085,22838164,22838340,22838530,22838593,22838679,22839058,22839724,22840442,22841271,22842206,22843162,22844152,22845170,22846129,22847308,22848410,22849703,22851022,22852179,22853494,22854766,22855950,22857133,22858147,22859247,22860404,22861427,22862607,22863703,22864676,22865576,22866444,22867083,22867759,22868487,22868943,22869050,22869131,22869337,22869513,22869598,22870202,22871580,22872302,22873023,22874045,22875225,22876585,22877597,22878544,22879575,22880560,22881376,22882045,22882831,22883815,22884788,22885749,22886870,22887925,22889023,22890199,22891367,22892499,22893856,22895268,22896646,22897904,22899150,22900518,22901639,22902577,22903297,22903807,22904320,22904903,22905708,22906620,22907407,22908256,22909169,22910214,22911106,22912035,22913065,22914240,22915321,22916670,22917343,22918359,22919440,22920861,22921563,22922942,22923518,22924557,22925790,22926900,22927860,22928754,22929683,22930652,22931799,22932816,22933962,22935869,22937026,22938283,22939664,22941066,22942566,22944022,22945611,22947306,22949078,22950899,22952710,22954546,22956260,22958027,22959694,22961340,22963111,22964754,22966411,22967986,22969624,22971230,22972677,22974297,22975993,22977654,22979189,22980766,22982342,22983926,22985395,22986640,22987717,22988984,22990607,22992140,22993745,22995286,22996796,22998155,22999529,23000986,23002811,23003887,23004568,23005572,23006698,23007815,23009094,23010443,23011806,23013096,23014589,23016060,23017388,23018285,23019150,23020221,23021502,23022913,23024168,23025404,23026663,23027791,23028981,23030135,23031383,23032706,23033895,23035162,23036560,23037906,23039172,23040483,23041838,23043171,23044500,23045767,23046991,23048197,23049280,23050277,23051341,23052476,23053760,23054933,23056386,23056989,23058016,23059093,23060230,23061059,23062905,23064120,23064949,23065586,23066272,23066957,23068017,23068690,23070084,23071729,23072534,23073377,23074191,23075265,23076354,23077350,23078374,23079413,23080622,23081995,23083595,23085250,23086903,23088520,23089991,23091331,23092767,23094277,23095949,23097553,23099247,23100891,23102501,23104094,23105661,23107125,23108609,23110273,23112104,23113963,23115804,23117621,23119383,23121115,23122552,23123935,23125286,23126631,23127946,23129197,23130192,23130805,23131869,23133003,23134104,23135290,23136136,23137377,23138199,23139279,23140346,23141630,23142322,23142868,23143903,23144708,23145980,23147233,23149263,23151150,23152975,23154697,23156454,23158177,23159910,23161660,23163556,23165488,23167536,23167651,23167700,23167745,23167790,23167835,23167883,23167932,23167977,23168022,23168067,23168109,23168158,23168463,23169203,23170362,23171806,23173230,23174770,23176325,23177780,23179275,23180836,23182463,23184151,23185871,23187625,23189361,23191005,23192742,23194395,23196022,23197656,23199298,23200907,23202501,23203854,23205184,23206462,23207636,23208721,23209474,23209895,23210217,23210398,23210537,23210585,23210634,23210679,23210717,23210762,23210810,23210859,23210904,23210942,23210987,23211035,23211084,23212787,23214835,23216883,23218931,23220979,23223027,23225075,23227123,23229171,23231219,23233267,23235315,23237363,23239411,23241459,23243507,23245555,23247603,23249651,23251699,23253747,23255795,23257843,23259891,23261939,23263987,23266035,23268083,23270093,23271414,23272580,23273783,23275010,23276232,23277381,23278569,23279732,23280956,23282186,23283427,23284683,23285853,23287222,23288470,23290004,23291692,23293233,23294749,23296091,23297455,23299009,23300602,23302061,23303435,23305073,23306686,23308234,23309718,23311156,23312781,23314170,23315524,23316933,23318415,23319852,23321290,23322515,23323764,23325088,23326316,23327571,23328689,23329725,23330586,23331677,23332726,23333803,23334723,23335478,23336168,23336971,23337795,23338421,23339042,23339695,23340326,23342374,23343892,23344991,23346025,23347193,23348217,23349422,23350719,23352008,23353194,23354427,23355602,23356854,23358174,23359478,23361053,23362640,23364408,23366189,23367954,23369717,23371449,23373091,23374462,23376055,23377478,23378951,23380559,23382123,23383562,23385091,23386733,23388325,23389992,23391491,23393174,23394698,23396093,23397386,23398745,23399969,23401067,23402155,23403121,23404115,23405181,23406090,23407083,23408118,23409171,23410216,23411165,23412014,23412652,23413152,23413661,23414060,23414418,23416090,23417215,23417899,23418603,23419281,23419942,23420629,23421335,23422040,23422692,23423336,23424011,23424723,23425402,23426744,23428332,23429853,23431454,23433039,23434713,23436303,23437839,23439330,23440746,23441739,23442527,23443932,23445366,23446831,23448395,23449893,23451362,23452899,23454298,23455599,23456696,23457717,23458938,23460358,23461875,23463329,23464785,23466260,23467612,23468837,23469718,23470395,23471087,23471744,23472414,23473063,23473765,23474478,23475142,23475838,23476513,23477155,23477879,23479293,23480773,23481471,23482128,23482773,23483496,23484188,23484840,23485482,23486140,23486851,23487489,23488163,23488824,23489743,23491284,23492890,23494510,23496191,23497892,23499555,23501121,23502571,23504002,23505386,23506745,23508081,23509340,23510665,23512005,23513302,23514576,23515895,23517160,23518367,23520057,23521753,23523360,23524969,23526641,23528221,23529732,23531077,23532164,23533141,23533930,23534651,23535280,23535926,23536633,23537329,23538003,23538652,23539303,23539988,23540674,23541333,23541983,23543030,23545072,23545638,23546078,23546587,23547207,23547843,23548601,23549506,23550371,23551377,23552474,23553522,23554671,23556050,23557579,23559097,23560669,23562232,23563791,23565275,23566714,23568130,23569616,23571082,23572516,23574027,23575479,23576946,23578346,23579728,23580979,23582394,23583835,23585299,23586906,23588484,23590008,23591439,23592726,23593819,23595026,23596303,23597543,23598824,23600045,23601177,23602282,23603284,23604263,23605282,23606334,23607366,23608344,23609242,23610064,23610716,23611337,23611724,23613238,23614211,23614511,23615024,23615618,23616313,23617021,23617842,23618701,23619594,23620606,23621634,23622783,23624011,23625388,23626928,23628558,23630245,23631965,23633633,23635266,23636756,23638197,23639543,23640860,23642194,23643630,23645020,23646446,23647865,23649315,23650834,23652241,23653691,23655116,23656572,23658012,23659573,23661272,23662899,23664424,23665741,23667016,23668216,23669449,23670681,23671848,23673076,23674258,23675335,23676414,23677465,23678468,23679314,23680115,23680841,23681458,23681947,23683122,23684563,23684933,23685422,23686053,23686711,23687410,23688206,23689118,23690049,23691103,23692164,23693208,23694669,23696216,23697691,23699172,23700737,23702230,23703668,23704921,23706181,23707525,23708921,23710277,23711681,23713063,23714488,23715848,23717164,23718529,23719902,23721282,23722600,23723923,23725234,23726522,23727928,23729459,23730997,23732624,23734040,23735498,23736911,23738266,23739459,23740652,23741883,23743075,23744209,23745275,23746309,23747305,23748271,23749148,23749854,23750504,23750995,23751660,23753407,23755120,23756899,23758621,23760397,23762454,23764502,23766550,23768598,23770646,23772694,23774742,23776790,23778838,23780886,23782934,23784982,23787030,23789078,23791126,23793174,23795222,23797270,23799318,23801366,23803414,23805462,23807510,23809558,23811606,23813567,23815610,23817580,23819628,23821598,23823604,23825642,23827655,23829677,23831702,23833750,23835743,23837624,23839599,23841623,23843580,23845461,23847370,23849348,23851303,23853351,23855312,23857177,23859165,23861221,23862912,23863848,23864597,23865344,23866268,23867236,23868194,23869375,23870351,23871368,23872259,23873068,23874011,23875001,23875942,23876860,23877710,23878645,23879574,23880377,23881218,23882128,23882962,23884076,23885200,23885914,23886598,23887643,23888903,23890190,23891446,23892825,23893801,23894383,23894925,23895400,23895992,23896541,23897521,23898488,23899450,23900476,23901306,23902049,23903014,23903900,23904961,23906014,23906866,23907893,23908799,23909585,23910131,23910658,23911280,23912034,23912891,23913962,23914429,23915299,23915901,23916628,23917318,23918031,23919163,23920144,23921042,23922062,23922830,23923543,23924071,23924619,23925143,23925852,23926563,23927511,23928152,23928875,23929547,23930379,23931513,23932473,23933373,23934202,23935222,23936234,23936962,23938017,23938743,23939720,23940737,23941512,23942282,23943202,23944199,23944466,23945123,23945928,23946987,23947396,23947937,23948781,23949518,23950206,23950783,23951431,23952176,23953171,23953980,23954874,23955533,23956256,23956982,23957619,23959479,23961156,23962823,23964248,23965687,23967090,23968521,23970081,23971889,23973735,23975461,23977163,23978589,23980025,23981414,23982864,23984404,23986323,23988163,23989781,23991449,23993168,23994748,23996350,23998052,23999787,24001603,24003357,24005098,24006831,24008407,24009668,24010894,24012080,24013701,24015323,24016928,24018702,24020465,24022190,24023947,24025617,24027402,24029099,24030819,24032482,24034216,24035924,24037682,24039452,24041110,24042864,24044655,24046370,24048061,24049852,24051596,24053226,24054807,24056402,24057781,24059079,24060352,24061742,24063297,24064798,24066452,24068074,24069624,24071279,24072860,24074390,24076062,24077692,24079316,24081152,24082989,24084425,24085860,24087363,24088913,24090379,24091900,24093433,24094848,24096319,24097872,24099502,24100944,24102439,24104086,24105762,24107404,24109147,24110941,24112579,24114300,24115962,24117528,24119085,24120571,24122144,24123773,24125337,24126935,24128553,24130181,24131770,24133320,24134869,24136502,24138123,24139751,24141376,24142976,24144507,24146055,24147666,24149321,24150925,24152400,24153576,24154965,24156449,24157926,24159304,24160745,24162246,24163826,24165435,24167030,24168457,24169864,24171473,24173470,24174700,24175920,24177160,24178408,24179634,24180904,24182144,24183400,24184671,24185946,24187234,24188719,24190064,24191370,24192640,24193936,24195268,24196594,24197905,24199142,24200382,24201677,24202964,24204213,24205439,24206682,24207918,24209188,24210439,24211650,24212867,24214046,24215259,24216491,24217694,24218920,24220161,24221399,24222675,24223919,24225189,24226447,24227748,24229040,24230416,24231868,24233159,24234444,24235762,24237074,24238385,24239695,24240917,24242196,24243468,24244743,24245986,24248038,24249850,24251620,24253420,24255180,24256947,24258780,24260564,24262329,24264095,24265874,24267621,24269385,24271086,24272787,24274436,24276087,24277748,24279375,24280990,24282656,24284337,24285922,24287533,24289244,24290946,24292658,24294422,24296152,24297873,24299645,24301421,24303172,24304909,24306650,24308294,24309956,24311661,24313317,24314987,24316613,24318307,24319996,24321700,24323412,24325132,24326910,24328646,24330387,24332135,24333907,24335656,24337420,24339156,24340911,24342665,24344428,24346203,24347359,24348759,24350541,24352589,24354637,24356685,24358733,24360781,24362829,24364877,24366933,24368981,24371029,24373077,24375125,24377173,24379221,24381269,24383317,24385365,24387413,24389461,24391509,24393557,24395605,24397653,24399701,24401749,24403797,24405845,24407893,24409941,24411989,24414037,24416085,24418133,24420181,24422229,24424277,24426325,24428373,24430421,24432469,24434517,24436565,24438613,24440661,24442709,24444757,24446805,24448853,24450901,24452949,24454997,24457045,24459093,24461141,24463189,24465237,24467285,24469333,24471381,24473429,24475477,24477525,24479573,24481621,24483669,24485717,24487765,24489813,24491861,24493909,24495957,24498005,24500053,24502101,24504149,24506197,24508245,24510293,24512341,24514389,24516437,24518485,24520533,24522581,24524629,24526677,24528725,24530773,24532821,24534869,24536917,24538965,24541022,24543078,24545126,24547174,24549222,24551270,24553318,24555366,24557414,24559462,24561510,24563558,24565606,24567654,24569702,24571750,24573798,24575846,24577894,24579942,24581990,24584038,24586086,24588134,24590182,24592230,24594278,24596326,24598374,24600422,24602470,24604518,24606566,24608614,24610662,24612710,24614758,24616806,24618854,24620902,24622950,24624998,24627046,24629094,24631142,24633190,24635238,24637286,24639334,24641382,24643430,24645478,24647526,24649574,24651622,24653670,24655718,24657766,24659814,24661862,24663910,24665958,24668006,24670054,24672102,24674150,24676198,24678246,24680294,24682342,24684390,24686438,24688486,24690534,24692582,24694630,24696678,24698726,24700774,24702822,24704870,24706918,24708966,24711014,24713062,24715110,24717158,24719206,24721254,24723302,24725350,24727398,24729446,24731494,24733542,24735590,24737638,24739695,24741743,24743791,24745839,24747887,24749935,24751983,24754031,24756079,24758127,24760175,24762223,24764271,24766319,24768367,24770415,24772463,24774511,24776559,24778607,24780655,24782703,24784751,24786799,24788847,24790895,24792943,24794991,24797039,24799087,24801135,24803183,24805231,24807279,24809327,24811375,24813423,24815471,24817519,24819567,24821615,24823663,24825711,24827759,24829807,24831855,24833903,24835951,24837999,24840047,24842095,24844143,24846191,24848239,24850287,24852335,24854383,24856431,24858479,24860527,24862575,24864623,24866671,24868719,24870767,24872815,24874863,24876911,24878959,24881007,24883055,24885103,24887151,24889199,24891247,24893295,24895343,24897391,24899439,24901487,24903535,24905583,24907631,24909679,24911727,24913775,24915823,24917871,24919919,24921967,24924015,24926063,24928111,24930159,24932207,24934255,24936303,24938351,24940399,24942447,24944495,24946543,24948591,24950639,24952687,24954735,24956783,24958831,24960879,24962927,24964975,24967023,24969071,24971119,24973167,24975215,24977263,24979311,24981359,24983407,24985455,24987503,24989551,24991599,24993647,24995695,24997743,24999791,25001839,25003887,25005935,25007983,25010031,25012079,25014127,25016175,25018223,25020271,25022319,25024367,25026415,25028463,25030511,25032559,25034607,25036655,25038703,25040751,25042799,25044847,25046895,25048943,25050991,25053039,25055087,25057135,25059183,25061231,25063279,25065327,25067375,25069423,25071471,25073519,25075567,25077615,25079663,25081711,25083759,25085807,25087855,25089903,25091951,25093999,25096047,25098095,25100143,25102191,25104239,25106287,25108335,25110383,25112431,25114479,25116527,25118575,25120623,25122671,25124719,25126767,25128815,25130863,25132911,25134959,25137007,25139055,25141103,25143151,25145199,25147247,25149295,25151343,25153391,25155439,25157487,25159535,25161583,25163631,25165679,25167727,25169775,25171823,25173871,25175919,25177967,25180015,25182063,25184111,25186159,25188207,25190255,25192303,25194351,25196399,25198447,25200495,25202543,25204591,25206639,25208687,25210735,25212783,25214831,25216879,25218927,25220975,25223023,25225071,25227119,25229167,25231215,25233263,25235311,25237359,25239407,25241455,25243503,25245551,25247599,25249647,25251695,25253743,25255791,25257839,25259887,25261935,25263983,25266031,25268079,25270127,25272175,25274223,25276271,25278319,25280367,25282415,25284463,25285798,25286441,25287048,25287663,25288296,25288952,25289552,25290140,25290766,25291400,25292030,25292691,25294076,25294593,25295160,25295756,25296360,25296830,25297219,25297657,25298405,25300033,25301737,25302996,25304015,25305347,25306458,25307520,25309177,25310434,25311558,25313208,25314700,25315682,25316776,25318121,25318495,25318931,25319404,25319889,25320425,25320874,25321331,25321639,25321973,25322250,25322560,25322881,25323565,25325384,25327138,25328933,25330703,25332407,25333980,25335106,25336164,25337311,25338414,25339579,25340576,25341749,25342574,25343738,25344583,25345385,25346474,25347690,25348680,25349713,25350742,25351666,25352763,25353782,25354895,25356044,25356781,25357920,25358833,25359776,25360771,25361670,25362970,25363662,25364850,25365949,25367079,25368171,25369250,25370598,25371233,25372351,25373462,25374421,25375441,25376352,25377702,25378010,25378314,25378618,25379429,25380648,25381621,25382685,25383587,25385113,25386028,25387867,25388794,25390226,25391777,25393594,25395069,25396585,25398191,25399800,25401396,25402997,25404632,25406305,25407957,25409578,25411250,25412948,25414565,25416199,25417846,25419441,25421092,25422741,25424468,25426170,25427869,25429629,25431389,25433165,25434829,25436519,25438281,25440085,25441912,25443728,25445611,25447509,25449406,25451286,25453183,25455055,25456813,25458607,25460424,25462225,25464057,25465820,25467640,25469455,25471243,25472953,25474506,25476090,25477722,25479329,25480865,25482280,25483816,25485400,25486996,25488665,25490453,25492384,25493830,25495253,25496745,25498305,25499753,25501241,25502799,25504267,25505734,25507276,25508916,25510413,25511861,25513515,25515179,25516836,25518581,25520356,25522028,25523731,25525405,25526957,25528522,25530033,25531632,25533243,25534836,25536410,25538032,25539653,25541230,25542795,25544365,25546001,25547615,25549240,25550857,25552462,25554017,25555593,25557200,25558833,25560437,25561965,25563161,25564471,25565967,25567481,25568865,25570258,25571744,25573324,25574951,25576561,25577989,25579392,25580955,25583003,25583563,25584208,25584848,25585411,25586081,25586817,25587576,25588420,25589422,25590373,25591460,25592436,25593644,25594910,25596231,25597543,25598890,25600240,25601659,25603009,25604487,25605862,25607297,25608718,25610237,25611785,25613180,25614617,25616055,25617293,25618309,25619329,25620202,25621483,25622793,25624044,25625272,25626308,25627320,25628274,25629291,25630286,25631119,25632054,25633063,25633924,25634606,25635479,25636366,25637194,25637632,25638314,25639019,25639735,25640397,25640972,25641532,25643303,25644377,25645103,25645916,25646849,25647815,25648858,25649940,25651047,25652193,25653347,25654407,25655300,25656122,25656816,25657934,25659299,25660667,25662082,25663521,25665002,25666473,25668021,25669311,25670858,25672384,25673999,25675535,25677076,25678686,25680355,25682081,25683755,25685272,25686783,25688315,25689924,25691420,25692904,25694321,25695598,25696882,25698082,25699107,25700093,25701129,25702176,25703303,25704393,25705543,25706770,25707994,25709065,25710031,25710804,25711576,25712381,25713179,25714103,25715374,25717049,25719097,25721145,25723193,25725241,25727289,25729337,25731385,25733433,25735481,25737529,25739577,25741625,25743673,25745721,25747769,25749817,25751865,25753913,25755961,25758009,25760057,25762105,25764153,25766201,25768249,25770297,25772345,25774393,25776441,25778489,25780537,25782585,25784633,25786689,25788746,25790794,25792842,25794890,25796938,25798986,25801034,25803082,25805130,25807178,25809226,25811274,25813322,25815370,25817418,25819466,25821514,25823562,25825610,25827658,25829706,25831754,25833802,25835850,25837898,25839946,25841994,25844042,25846090,25848146,25850194,25852239,25854287,25856335,25858383,25860440,25862488,25864521,25866569,25868617,25870665,25872713,25874761,25876809,25878857,25880905,25882953,25885001,25887049,25889097,25891145,25893193,25895241,25897289,25899337,25901385,25903433,25905481,25907529,25909577,25911625,25913673,25915721,25917769,25919817,25921865,25923913,25925961,25928009,25930057,25932105,25934153,25936201,25938249,25940297,25942345,25944319,25946278,25948274,25950322,25952370,25954418,25956283,25958261,25960309,25962365,25964413,25966451,25968354,25970340,25972394,25974449,25976501,25978371,25980355,25982409,25984443,25986393,25988365,25990399,25992394,25994386,25996294,25998261,26000250,26002235,26004150,26006126,26008153,26010107,26012083,26014090,26015995,26018004,26020048,26021923,26023898,26025909,26027848,26029723,26031704,26033564,26035593,26037456,26039393,26041299,26043206,26045152,26046981,26048989,26050848,26052880,26054748,26056725,26058588,26060526,26062427,26064369,26066270,26068166,26070125,26072007,26073986,26075841,26077819,26079684,26081631,26083532,26085450,26087383,26089248,26091227,26093151,26095152,26097062,26099071,26100954,26102972,26104850,26106878,26108743,26110774,26112639,26114620,26116496,26118442,26120338,26122275,26124181,26126109,26128042,26129977,26131910,26133794,26135780,26137704,26139687,26141574,26143583,26145441,26147470,26149343,26151362,26153226,26155200,26157076,26158991,26160924,26162824,26164801,26166812,26168677,26170634,26172548,26174520,26176388,26178363,26180228,26182223,26184094,26186124,26187995,26189971,26191947,26193917,26195838,26197784,26199619,26201628,26203618,26205557,26207522,26209431,26211342,26213292,26215214,26217166,26218987,26220992,26223048,26224911,26226856,26228754,26230692,26232598,26234483,26236459,26238468,26240339,26242277,26244173,26246099,26248036,26249870,26251879,26253732,26255683,26257575,26259519,26261415,26263398,26265446,26267434,26269380,26271371,26273428,26275304,26277283,26279331,26281366,26283281,26285266,26287308,26289258,26291244,26293157,26295136,26297137,26299070,26301030,26302945,26304896,26306803,26308701,26310658,26312585,26314531,26316422,26318408,26320233,26322250,26324132,26326044,26327981,26329815,26331824,26333675,26335607,26337526,26339392,26341364,26343293,26345274,26347170,26349179,26351036,26353068,26354945,26356922,26358792,26360767,26362632,26364623,26366489,26368426,26370326,26372232,26374178,26376100,26378046,26379964,26381924,26383832,26385818,26387722,26389702,26391622,26393625,26395477,26397459,26399326,26401347,26403217,26405192,26407056,26409037,26410901,26412882,26414746,26416736,26418602,26420596,26422462,26424442,26426416,26428392,26430302,26432285,26434202,26436181,26438106,26440087,26441983,26443992,26445852,26447828,26449694,26451635,26453531,26455470,26457389,26459301,26461265,26463139,26465118,26466971,26468947,26470823,26472852,26474796,26476775,26478748,26480707,26482630,26484576,26486512,26488450,26490370,26492316,26494230,26496192,26498103,26500069,26501966,26503953,26505872,26507844,26509827,26511779,26513700,26515646,26517568,26519531,26521444,26523421,26525345,26527322,26529223,26531196,26533099,26535108,26536967,26538959,26540854,26542790,26544704,26546590,26548567,26550512,26552475,26554392,26556352,26558270,26560227,26562139,26564110,26566025,26568001,26569940,26571899,26573810,26575782,26577710,26579669,26581602,26583552,26585437,26587424,26589266,26591295,26593160,26595095,26597009,26598895,26600881,26602830,26604792,26606754,26608670,26610586,26612525,26614401,26616390,26618277,26620282,26622148,26624104,26626010,26627961,26629853,26631789,26633692,26635635,26637542,26639523,26641389,26643349,26645252,26647159,26649105,26651102,26652972,26655009,26656928,26658936,26660791,26662750,26664657,26666595,26668502,26670441,26672351,26674276,26676209,26678079,26680059,26682021,26683998,26685932,26687891,26689782,26691728,26693663,26695603,26697430,26699436,26701299,26703277,26705147,26707085,26708991,26710931,26712858,26714786,26716725,26718617,26720603,26722484,26724493,26726349,26728327,26730193,26732142,26734052,26736018,26737901,26739835,26741740,26743656,26745594,26747556,26749454,26751433,26753307,26755284,26757150,26759129,26761177,26763204,26765111,26767093,26769141,26771126,26773086,26775081,26777137,26779099,26781082,26783121,26785169,26787053,26789028,26791076,26793097,26795012,26796962,26798868,26800853,26802718,26804693,26806565,26808598,26810476,26812452,26814315,26816287,26818158,26820090,26822003,26823945,26825856,26827765,26829711,26831708,26833573,26835565,26837613,26839478,26841476,26843524,26845400,26847371,26849382,26851299,26853288,26855330,26857232,26859212,26861267,26863157,26865134,26867182,26869045,26871023,26873078,26874954,26876898,26878794,26880778,26882826,26884689,26886662,26888710,26890762,26892625,26894598,26896646,26898512,26900557,26902436,26904466,26906337,26908318,26910195,26912170,26914043,26916028,26917903,26919888,26921757,26923703,26925599,26927534,26929440,26931384,26933291,26935242,26937144,26939096,26940992,26942958,26944840,26946817,26948623,26950619,26952496,26954471,26956338,26958323,26960188,26962163,26964033,26966005,26967868,26969844,26971707,26973683,26975546,26977540,26979404,26981382,26983252,26985228,26987092,26989107,26991164,26993220,26995268,26997139,26999167,27001196,27003191,27005057,27007086,27009133,27011111,27013012,27014997,27017045,27019101,27021135,27023035,27025009,27026978,27028968,27030898,27032884,27034724,27036753,27038617,27040545,27042464,27044326,27046306,27048156,27050090,27052000,27053899,27055861,27057789,27059735,27061668,27063608,27065534,27067480,27069413,27071352,27073288,27075220,27077144,27079114,27081029,27083015,27084842,27086875,27088740,27090712,27092576,27094552,27096424,27098363,27100274,27102218,27104134,27106063,27107996,27109875,27111858,27113809,27115786,27117698,27119684,27121633,27123598,27125559,27127468,27129416,27131312,27133267,27135161,27137100,27139007,27140954,27142864,27144804,27146719,27148645,27150578,27152508,27154448,27156404,27158359,27160276,27162244,27164091,27166100,27167956,27169986,27171851,27173810,27175710,27177627,27179559,27181493,27183439,27185363,27187309,27189228,27191187,27193068,27195050,27196978,27198957,27200852,27202857,27204718,27206749,27208614,27210632,27212499,27214491,27216357,27218335,27220199,27222194,27224058,27226039,27227903,27229873,27231750,27233693,27235594,27237513,27239452,27241342,27243322,27245223,27247233,27249117,27251127,27252997,27254972,27256838,27258816,27260682,27262629,27264523,27266468,27268364,27270291,27272224,27274150,27276096,27278007,27279975,27281873,27283859,27285766,27287747,27289604,27291581,27293458,27295490,27297364,27299394,27301304,27303313,27305175,27307204,27309078,27311107,27313011,27315022,27316896,27318927,27320795,27322772,27324820,27326718,27328698,27330607,27332615,27334472,27336448,27338319,27340349,27342253,27344267,27346176,27348181,27350039,27351973,27353882,27355780,27357739,27359537,27361500,27363386,27365296,27367236,27369093,27371098,27373153,27375037,27377068,27378935,27380930,27382847,27384856,27386712,27388743,27390754,27392687,27394605,27396556,27398391,27400396,27402361,27404347,27406332,27408243,27410145,27412102,27413900,27415933,27417839,27419845,27421727,27423758,27425638,27427668,27429547,27431522,27433402,27435431,27437298,27439330,27441209,27443240,27445104,27447100,27448978,27451010,27452877,27454871,27456740,27458719,27460581,27462514,27464422,27466316,27468276,27470071,27472048,27473918,27475949,27477811,27479741,27481647,27483552,27485503,27487377,27489357,27491217,27493198,27495060,27497038,27498900,27500877,27502774,27504794,27506825,27508744,27510687,27512604,27514524,27516463,27518451,27520327,27522306,27524339,27526259,27528241,27530122,27532099,27534147,27536195,27538158,27540145,27542113,27544059,27546056,27548090,27550007,27551998,27553878,27555907,27557820,27559829,27561840,27563760,27565752,27567800,27569753,27571736,27573786,27575819,27577734,27579631,27581607,27583568,27585482,27587423,27589328,27591267,27593174,27595054,27597030,27598923,27600902,27602783,27604788,27606836,27608884,27610865,27612826,27614763,27616720,27618708,27620584,27622561,27624425,27626397,27628345,27630324,27632251,27634231,27636158,27638139,27640191,27642239,27644181,27646160,27648132,27650092,27652007,27653966,27655922,27657841,27659806,27661701,27663648,27665543,27667517,27669388,27671361,27673265,27675279,27677251,27679238,27681273,27683095,27685071,27687083,27689016,27690966,27692893,27694841,27696758,27698671,27700621,27702559,27704493,27706489,27708363,27710345,27712208,27714186,27716054,27718086,27719992,27722000,27723867,27725893,27727767,27729798,27731833,27733757,27735750,27737763,27739696,27741629,27743562,27745558,27747477,27749486,27751496,27753413,27755345,27757269,27759231,27761131,27763040,27764980,27766897,27768861,27770734,27772713,27774727,27776654,27778601,27780528,27782477,27784394,27786337,27788256,27790191,27792123,27794049,27795988,27797832,27799841,27801813,27803773,27805769,27807645,27809664,27811712,27813578,27815556,27817604,27819557,27821529,27823581,27825542,27827521,27829573,27831621,27833491,27835466,27837416,27839397,27841413,27843323,27845263,27847177,27849162,27851033,27853066,27855114,27857147,27859047,27861030,27863078,27864957,27866976,27869024,27870894,27872872,27874903,27876808,27878789,27880719,27882728,27884778,27886640,27888612,27890594,27892560,27894494,27896440,27898372,27900304,27902232,27904191,27905985,27908015,27909884,27911823,27913726,27915640,27917593,27919464,27921446,27923435,27925373,27927368,27929230,27931207,27933149,27935131,27937078,27939061,27941042,27942976,27944848,27946820,27948873,27950737,27952752,27954794,27956690,27958629,27960548,27962539,27964548,27966480,27968494,27970522,27972439,27974428,27976458,27978377,27980363,27982385,27984315,27986310,27988322,27990259,27992054,27993159,27994312,27995482,27996537,27997531,27998624,28000660,28002351,28004129,28005960,28007794,28009213,28010441,28011906,28013954,28016002,28018050,28018560,28018594,28018628,28018662,28018696,28018730,28018764,28018798,28019189,28020073,28021049,28022171,28023323,28024371,28025306,28026178,28026911,28027843,28028873,28029769,28030721,28031793,28032652,28033668,28034835,28035760,28036790,28037791,28038665,28039531,28040363,28041230,28042205,28043323,28044173,28045028,28045916,28046731,28047706,28048582,28049448,28050480,28051304,28052100,28053000,28054021,28055155,28056197,28057232,28058574,28059854,28061063,28062306,28063661,28064911,28066343,28067549,28068991,28070427,28071818,28072680,28073658,28074658,28075690,28076599,28077550,28078526,28079567,28080597,28081626,28082621,28083751,28084779,28085818,28086892,28087951,28088992,28090091,28091275,28092455,28093625,28094916,28096197,28097445,28098461,28099179,28099551,28100623,28101314,28102357,28103414,28104500,28105442,28105850,28107307,28108840,28110323,28111676,28113166,28114478,28115846,28117037,28118171,28119362,28120552,28121549,28123234,28124506,28125870,28127104,28128340,28129506,28130753,28131893,28133154,28134649,28136063,28137425,28138723,28139981,28141230,28142572,28144068,28145628,28147280,28148863,28150417,28152041,28153562,28155137,28156692,28158203,28159744,28161232,28162685,28164102,28165489,28166829,28168631,28170679,28172727,28174775,28176823,28178871,28180919,28182967,28185015,28187063,28189111,28191159,28193207,28195255,28197303,28199351,28201399,28203447,28205495,28207543,28209591,28211639,28213687,28215735,28217783,28219831,28221879,28223927,28225975,28228023,28230071,28232119,28234167,28236215,28238263,28240311,28242359,28244407,28246455,28248503,28250551,28252599,28254647,28256695,28258743,28260791,28262839,28264887,28266935,28268983,28271031,28273079,28275127,28277175,28279223,28281271,28283319,28285367,28287415,28289463,28291511,28293559,28295607,28297655,28299703,28301751,28303799,28305847,28307895,28309943,28311991,28314039,28316087,28318135,28320183,28322231,28324279,28326327,28328375,28330423,28332471,28334519,28336567,28338615,28340663,28342711,28344759,28346807,28348855,28350881,28352227,28353610,28355033,28356420,28357815,28359167,28360670,28362118,28363675,28365360,28367010,28368477,28369935,28371316,28372634,28374223,28375924,28377659,28379347,28380974,28382586,28384043,28385495,28387130,28388759,28390420,28392081,28393736,28395327,28396889,28398346,28399958,28402010,28404058,28406065,28408100,28410148,28412157,28414186,28416220,28418268,28420281,28422299,28424347,28426386,28428420,28430468,28432510,28434552,28436600,28438641,28440689,28442707,28444602,28446604,28448652,28450689,28452455,28453902,28455495,28457063,28458722,28460246,28461663,28462117,28462330,28462549,28462767,28462975,28463538,28463964,28464183,28464411,28464634,28464849,28465319,28466593,28467872,28469188,28470449,28471605,28472810,28473957,28475183,28476362,28477598,28478839,28479959,28481184,28481955,28482406,28482831,28484649,28485894,28487867,28489910,28491951,28493999,28494979,28496373,28498421,28500469,28502517,28504565,28506613,28508661,28509627,28511028,28513076,28515124,28517172,28519220,28521268,28523316,28525364,28526315,28527717,28529765,28531821,28533869,28535917,28537965,28540013,28540918,28542375,28544423,28546471,28548519,28550567,28552624,28554672,28556720,28558768,28560816,28562864,28564055,28565510,28566196,28566291,28567218,28569222,28571270,28573318,28575366,28577414,28579462,28581510,28583558,28585606,28587654,28589710,28591758,28593806,28595854,28597902,28599958,28602006,28604054,28606102,28608150,28610205,28612262,28614310,28616358,28618406,28620454,28622362,28624410,28626458,28628513,28630561,28632609,28634657,28636705,28638753,28640801,28642814,28644862,28646910,28648958,28651006,28653054,28655102,28657135,28659183,28661231,28663279,28665320,28667368,28669416,28671464,28673512,28675547,28677595,28679643,28681670,28683718,28685766,28687803,28689851,28691899,28693940,28695960,28698008,28700056,28702088,28704136,28706170,28708218,28710266,28712224,28714272,28716320,28718362,28720410,28722437,28724485,28726533,28728581,28730629,28732677,28734725,28736781,28738829,28740886,28742942,28744990,28746427,28747816,28749864,28751912,28753960,28754852,28756254,28758197,28760254,28762270,28764318,28766366,28768414,28770462,28772510,28774558,28776606,28778663,28780711,28782759,28784807,28786855,28788903,28790951,28793008,28795034,28797091,28799148,28801196,28803253,28805310,28807347,28809395,28811443,28813453,28815501,28817549,28819589,28821637,28823673,28825667,28827715,28829747,28831795,28833827,28835875,28837811,28839859,28841889,28843937,28845978,28848026,28850074,28852053,28854101,28856135,28858183,28860215,28862263,28864186,28866234,28868273,28870329,28872366,28874423,28876352,28878400,28880437,28882485,28884521,28886569,28888572,28890620,28892668,28894716,28896764,28898812,28900860,28902908,28904965,28907013,28909017,28911052,28913100,28915144,28917192,28919240,28921288,28923292,28925340,28927388,28929436,28931480,28933528,28935576,28937624,28939672,28941720,28943768,28945825,28947878,28949915,28951963,28954011,28956059,28958107,28960157,28962202,28964255,28966256,28968287,28970329,28972377,28974410,28976458,28978458,28980459,28982507,28984533,28986581,28988615,28990647,28992610,28994666,28996701,28998749,29000783,29002840,29004768,29006823,29008860,29010908,29012941,29014989,29016905,29018953,29021001,29023049,29025100,29027148,29029180,29031170,29033218,29035241,29037289,29039330,29041378,29043332,29045380,29047413,29049461,29051505,29053553,29055463,29056368,29056507,29056643,29058041,29060079,29061309,29061451,29062845,29064882,29065779,29067401,29069317,29071342,29073388,29075437,29077486,29079088,29079229,29080630,29082678,29083584,29085029,29087077,29088256,29088392,29089789,29091773,29092616,29092758,29092894,29093331,29093469,29094873,29096921,29097065,29097198,29097334,29097775,29097921,29098534,29099491,29100478,29101433,29102331,29103300,29104251,29104901,29105922,29106710,29107555,29108476,29109293,29110294,29111487,29112370,29113351,29114311,29115100,29116084,29117195,29118236,29119244,29120295,29121224,29122191,29123380,29124536,29125693,29126651,29127386,29127831,29128242,29129075,29130256,29131216,29132151,29132551,29132903,29133250,29133675,29134053,29134546,29135077,29135811,29136378,29137769,29138960,29139918,29140948,29142274,29143706,29145280,29146745,29148088,29149468,29150728,29152315,29153737,29154917,29156043,29157279,29158771,29160207,29161799,29163335,29164710,29165972,29167106,29168508,29169923,29171393,29172937,29174362,29175520,29176743,29178221,29179645,29181215,29182782,29184072,29185148,29186399,29187909,29189355,29190901,29192426,29193590,29194696,29195929,29197452,29198961,29200508,29201971,29203234,29204402,29205823,29207156,29208530,29209075,29209640,29210192,29210872,29211487,29212114,29212711,29213716,29214606,29215506,29216182,29217019,29217940,29218763,29219481,29220348,29221234,29222052,29222679,29223201,29223955,29224517,29225353,29226206,29226910,29227756,29228457,29229352,29229894,29230596,29231162,29231631,29232370,29233067,29233846,29234542,29235405,29235955,29236540,29237187,29237873,29238544,29239057,29239550,29240234,29240666,29241120,29241718,29242300,29242901,29243976,29244411,29244888,29246424,29247498,29248845,29250357,29251916,29253267,29254383,29255663,29256821,29258012,29259116,29260510,29261803,29263057,29264505,29265626,29266842,29267913,29269048,29270413,29271271,29272766,29273713,29274581,29275516,29277034,29278025,29278937,29279841,29280835,29281773,29282940,29283784,29284856,29285935,29286994,29287804,29288640,29289635,29290420,29291333,29292464,29293350,29294302,29295439,29296512,29297453,29298562,29299436,29300077,29301196,29302059,29303012,29304120,29304869,29305849,29307026,29307493,29308068,29308551,29309028,29309749,29310462,29311020,29311985,29312709,29313343,29313985,29314645,29315564,29316229,29317386,29318376,29319454,29320143,29320661,29321586,29322407,29323198,29324053,29324712,29325499,29326176,29326535,29327082,29327650,29328486,29329198,29330048,29330948,29332031,29332670,29333509,29334183,29335024,29335966,29336826,29337620,29338504,29339369,29340233,29341080,29341947,29342822,29343600,29344458,29345318,29346204,29347024,29347981,29348642,29349580,29350699,29351513,29352320,29353092,29353922,29354828,29355643,29356441,29357280,29358009,29358798,29359664,29360503,29361390,29362164,29363007,29363648,29364501,29365095,29365767,29366313,29367027,29367388,29368117,29368784,29369515,29370088,29371144,29371581,29372820,29373527,29374293,29375933,29377643,29379390,29381233,29383153,29385154,29387202,29389250,29391298,29392939,29394269,29396097,29397893,29399941,29401982,29403875,29405713,29407761,29409626,29411407,29413455,29415503,29417551,29419427,29421191,29423240,29425122,29426879,29428928,29430919,29432730,29434543,29435762,29436915,29437414,29438053,29438792,29440686,29442734,29444646,29446134,29447494,29448664,29449781,29451267,29453283,29454976,29456174,29457462,29458489,29459813,29461374,29462902,29464249,29465121,29465581,29465691,29466444,29468492,29470540,29472588,29474636,29476684,29478732,29480780,29482828,29484876,29486924,29488972,29491027,29493084,29495060,29496950,29498411,29500459,29502507,29504555,29506612,29508669,29510717,29512765,29514819,29515072,29515545,29517571,29519613,29521661,29523709,29525615,29527035,29528892,29530940,29532969,29534815,29536863,29538911,29540968,29543016,29545063,29547052,29548986,29551034,29552937,29554985,29557033,29559053,29561106,29563154,29565198,29567255,29569308,29571330,29573056,29574515,29576345,29578251,29580299,29582347,29584395,29586443,29588491,29590539,29592596,29594644,29596553,29598478,29599577,29600652,29601706,29603225,29604345,29605615,29607203,29608720,29609545,29610788,29612035,29613262,29614457,29615449,29616529,29617637,29618658,29620247,29622056,29623945,29625842,29627712,29629634,29631516,29633345,29635057,29636773,29638330,29640156,29641959,29643115,29644173,29645207,29646401,29647784,29648760,29649796,29650947,29651973,29653086,29654183,29655176,29656456,29657716,29658978,29660230,29662282,29664310,29666286,29668334,29670307,29672355,29674383,29676352,29678400,29680448,29682496,29684522,29686495,29688543,29690600,29692571,29694605,29696589,29698637,29700685,29702655,29704688,29706715,29708763,29710807,29712779,29714827,29716861,29718837,29720885,29722932,29724903,29726951,29728981,29730956,29733013,29735043,29737013,29739061,29741091,29743083,29745134,29747163,29749211,29751247,29753226,29755274,29757322,29759379,29761353,29763401,29765448,29767494,29769548,29771596,29773644,29775700,29777748,29779805,29781704,29783752,29785800,29787848,29789896,29791944,29793992,29796040,29798088,29800136,29802184,29804080,29806128,29808176,29810224,29812272,29814320,29816368,29818416,29820464,29822360,29824408,29826456,29828504,29830552,29832600,29834648,29836696,29838587,29840635,29842683,29844731,29846779,29848827,29850875,29852772,29854820,29856868,29858916,29860964,29863012,29865060,29866957,29869005,29871053,29873101,29875149,29877197,29879245,29881293,29883341,29885233,29887281,29889329,29891377,29893425,29895473,29897521,29899569,29901617,29903665,29905549,29906889,29908648,29910022,29911516,29913031,29914683,29916446,29918226,29920002,29921581,29923047,29924557,29926137,29927795,29929476,29931280,29932952,29934701,29936194,29938225,29939776,29941060,29942650,29943868,29945097,29946299,29947600,29949218,29950911,29952653,29954376,29956058,29957707,29959556,29961608,29963657,29965705,29966898,29968090,29969229,29970432,29971676,29972724,29973948,29974983,29976376,29977937,29979352,29980868,29982181,29983693,29985049,29986575,29988084,29989676,29991490,29993071,29994690,29996219,29997768,29999330,30001100,30002914,30004841,30006584,30008331,30010242,30012028,30013940,30015641,30017401,30019263,30021013,30022231,30024143,30026056,30027418,30028429,30029959,30031459,30032964,30034109,30035793,30037477,30038822,30040279,30041861,30043587,30045252,30046845,30048636,30049905,30050519,30051419,30052887,30054002,30055321,30056716,30058054,30059920,30061579,30062924,30064567,30066185,30067451,30068975,30070703,30072542,30074530,30076421,30077826,30079558,30081433,30083197,30085003,30086781,30088594,30090374,30092106,30093891,30095419,30097211,30098784,30100547,30102186,30103632,30104965,30106417,30107823,30109295,30110816,30112137,30113682,30115228,30116949,30118527,30120052,30121629,30123078,30124428,30125970,30127545,30129116,30130628,30132112,30133645,30135166,30136693,30138216,30139729,30141194,30141938,30142679,30143273,30143986,30144682,30145379,30146021,30146625,30147272,30147935,30148539,30149183,30149944,30150594,30151265,30151981,30152720,30153403,30154168,30154926,30155660,30156157,30156782,30157336,30157969,30158549,30158741,30159251,30159651,30160493,30162504,30164548,30166313,30168045,30169784,30171479,30173154,30174823,30176527,30178243,30179941,30181639,30183324,30185038,30186729,30188716,30190628,30192413,30194138,30195860,30197509,30199153,30200884,30202653,30204352,30206098,30207222,30208256,30209440,30211366,30213127,30214852,30216633,30218430,30220035,30221494,30222990,30224474,30225950,30227422,30228921,30230408,30231907,30232711,30233347,30233879,30234503,30235190,30235732,30236344,30236925,30237559,30238107,30238725,30239338,30239974,30240498,30240912,30241258,30241794,30242341,30242714,30243136,30243711,30244142,30244547,30245040,30245296,30246598,30248544,30250373,30252028,30253705,30255364,30257033,30258701,30260365,30262065,30263738,30265426,30267112,30268963,30270883,30272505,30274290,30275988,30277652,30279396,30281084,30282738,30283404,30284180,30285149,30287056,30288795,30290551,30292149,30293947,30295688,30297207,30298698,30300200,30301715,30303197,30304699,30306187,30307680,30309186,30310680,30312192,30313685,30315170,30316681,30318177,30319697,30321185,30322685,30324184,30325667,30326856,30327429,30327786,30328344,30328952,30329660,30330147,30330734,30331341,30331903,30332169,30332690,30333186,30333658,30334057,30334535,30334906,30335345,30335940,30336530,30337154,30337761,30338373,30338981,30339641,30340264,30340764,30341475,30341887,30342368,30342636,30343309,30343612,30344005,30344350,30344851,30345313,30345641,30346208,30346708,30347267,30347718,30348242,30348720,30349286,30349943,30350328,30350802,30351266,30351628,30352122,30352660,30352914,30353349,30353885,30354279,30354727,30355069,30355383,30355801,30357129,30359116,30361139,30363164,30365158,30367203,30369023,30370723,30372417,30374107,30375830,30377525,30379235,30380956,30382651,30384327,30386023,30387711,30389390,30391053,30392750,30394444,30396145,30397836,30399562,30401251,30402939,30404623,30406292,30407983,30409681,30411357,30413029,30414929,30416977,30419025,30420905,30422593,30424296,30426007,30427733,30429357,30431060,30432731,30434415,30436077,30437665,30439412,30441110,30442816,30444548,30446285,30447967,30449595,30451387,30453090,30454775,30456001,30456960,30458064,30459040,30460560,30462243,30463926,30465647,30467294,30468948,30470236,30471101,30472382,30474187,30476021,30477847,30479706,30481425,30482916,30484469,30485948,30487477,30489016,30490499,30491948,30493467,30494966,30496459,30497851,30498319,30498838,30499247,30499701,30500180,30500628,30501138,30501501,30502160,30502843,30503374,30503933,30504527,30505022,30505550,30505784,30506012,30506144,30506537,30507041,30507719,30508202,30508714,30509240,30509663,30510092,30510597,30510957,30511172,30511465,30513033,30515081,30517055,30518750,30520461,30522167,30523890,30525569,30527275,30528962,30530646,30532322,30534066,30535785,30537461,30539145,30541098,30543124,30544853,30546520,30548289,30550000,30551750,30553421,30555101,30556916,30558625,30560309,30561666,30562622,30564084,30565398,30567022,30568749,30570542,30572037,30573585,30575088,30576579,30578074,30579556,30581040,30582529,30584015,30585485,30586985,30587505,30587879,30588285,30588627,30589198,30589759,30589945,30590212,30590562,30590919,30591134,30591523,30591891,30592289,30592426,30592572,30592926,30593186,30593478,30593814,30594329,30594692,30595007,30595510,30596056,30596661,30596997,30597364,30597885,30598435,30600329,30602341,30604323,30606054,30607744,30609439,30611125,30612811,30614501,30616165,30617850,30619581,30621273,30622971,30624709,30626425,30628449,30630450,30632295,30633993,30635739,30637499,30639218,30640914,30642770,30644524,30646296,30648131,30649959,30650802,30651543,30652786,30654361,30655993,30657554,30659260,30661031,30662526,30664048,30665556,30667054,30668544,30670015,30671043,30671523,30671892,30672232,30672617,30673140,30673335,30673741,30674189,30674642,30674950,30675292,30675680,30675982,30676212,30676544,30677060,30678346,30680317,30682077,30683760,30685468,30687131,30688806,30690505,30692185,30693898,30695933,30697689,30699405,30701054,30702745,30704510,30706358,30708031,30708903,30710443,30711742,30713440,30715068,30716638,30718119,30719602,30721095,30722583,30724072,30725584,30727090,30728615,30729935,30730466,30731015,30731626,30732205,30732797,30733354,30733961,30734486,30735102,30735571,30736195,30736870,30737509,30738018,30738661,30739210,30739772,30740302,30740914,30741345,30741826,30742224,30742838,30743307,30743621,30744059,30744617,30745715,30747717,30749750,30751525,30753219,30754905,30756571,30758231,30759932,30761620,30763329,30765044,30766717,30768408,30770055,30771921,30773969,30775801,30777538,30779217,30780916,30782714,30784460,30786282,30788008,30789734,30790991,30791826,30792611,30793664,30794990,30796264,30797432,30798698,30800362,30802028,30803560,30805195,30806753,30808193,30809709,30811205,30812695,30814194,30815681,30817174,30818655,30820170,30821662,30823186,30824667,30826155,30827681,30829195,30830239,30830673,30831105,30831488,30831768,30832058,30832526,30832992,30833349,30833598,30834141,30834587,30834996,30835505,30835892,30836299,30836709,30837207,30837632,30838000,30838278,30838442,30838643,30839035,30839319,30839506,30839612,30839713,30840093,30840529,30840745,30841116,30841346,30841784,30841956,30842426,30842760,30843145,30843513,30843758,30844192,30844618,30845072,30845193,30845547,30845952,30846218,30846624,30847035,30847381,30847817,30848238,30849541,30851517,30853446,30855414,30857438,30859174,30860838,30862505,30864175,30865853,30867552,30869231,30870912,30872599,30874331,30876014,30877689,30879364,30881039,30882714,30884385,30886051,30887734,30889408,30891083,30892742,30894434,30896131,30897986,30900034,30902082,30903687,30905257,30906908,30908553,30910189,30911910,30913720,30915415,30917133,30918821,30920501,30922082,30923767,30925437,30927136,30928801,30930518,30931550,30932286,30933156,30934611,30936352,30937976,30939564,30940881,30942711,30944532,30946355,30948181,30949831,30951310,30952779,30954274,30955742,30957226,30958717,30960204,30961697,30963201,30964691,30966163,30967651,30969140,30970629,30972097,30973590,30974826,30975321,30975833,30976500,30977139,30977649,30978196,30978630,30979106,30979471,30979720,30980221,30980437,30980858,30981348,30981939,30982364,30982646,30983086,30983673,30984262,30984987,30985556,30986148,30986485,30987042,30987485,30987981,30988582,30989244,30989841,30990490,30990975,30991228,30991306,30991937,30992623,30993227,30993752,30994429,30995043,30995638,30996294,30996866,30997451,30998055,30998664,30999276,30999785,31000403,31000920,31002844,31004841,31006788,31008781,31010583,31012279,31013955,31015637,31017301,31018983,31020687,31022369,31024050,31025742,31027452,31029146,31030846,31032558,31034256,31035959,31037663,31039363,31041061,31042745,31044468,31046201,31048181,31050229,31052274,31053978,31055715,31057412,31059183,31060981,31062738,31064490,31066253,31068062,31069845,31071628,31073368,31075116,31076865,31078566,31080374,31082102,31083109,31084035,31084990,31085924,31087093,31088043,31089243,31090475,31091705,31092700,31093581,31094722,31096120,31097929,31099644,31101473,31103290,31104864,31106551,31108129,31109624,31111119,31112640,31114148,31115644,31117151,31118642,31120129,31121633,31123132,31124643,31126137,31127629,31129091,31130579,31132051,31133524,31135003,31136507,31137601,31138238,31138833,31139514,31140053,31140633,31141179,31141773,31142417,31143010,31143599,31144168,31144797,31145293,31145873,31146448,31146937,31147324,31147829,31148403,31148922,31149514,31150056,31150671,31151153,31151535,31151955,31152534,31152965,31153570,31154080,31154415,31154997,31155511,31156090,31156644,31157049,31157405,31158013,31158533,31159126,31159568,31160099,31160601,31160860,31161368,31161864,31162192,31162524,31163030,31163281,31163615,31163974,31164310,31164759,31165262,31165720,31166061,31166430,31166997,31167420,31167666,31168069,31168443,31168930,31169302,31169565,31169893,31170524,31171038,31172302,31174359,31176407,31178463,31180511,31182559,31184599,31186314,31188042,31189771,31191502,31193255,31194981,31196703,31198425,31200157,31201883,31203589,31205310,31207042,31208770,31210521,31212269,31213997,31215722,31217457,31219197,31220932,31222646,31224386,31226136,31227876,31229613,31231361,31233095,31234820,31236544,31238252,31240020,31242068,31244116,31246164,31248212,31250132,31251910,31253728,31255576,31257447,31259314,31261134,31262919,31264708,31266406,31268201,31270007,31271822,31273599,31275401,31277184,31278994,31280783,31282614,31284434,31286273,31288126,31289997,31291820,31293697,31295512,31297347,31299190,31300985,31302746,31304497,31305361,31306229,31307107,31307813,31308715,31310102,31311343,31312833,31313913,31315136,31316670,31317960,31318875,31319730,31320654,31322004,31323192,31324584,31325963,31327764,31329573,31331352,31332999,31334648,31336296,31337894,31339502,31341090,31342634,31344177,31345679,31347187,31348704,31350230,31351782,31353311,31354789,31356320,31357818,31359326,31360838,31362365,31363871,31365413,31366938,31368415,31369909,31371421,31372915,31374450,31375964,31377465,31378959,31380457,31381962,31383473,31384937,31386410,31387921,31389339,31389933,31390582,31391181,31391610,31392300,31392660,31393117,31393799,31394547,31395174,31395772,31396422,31397127,31397758,31398289,31398942,31399630,31400323,31400995,31401665,31402335,31402957,31403609,31404273,31405003,31405591,31406271,31406886,31407502,31408150,31408673,31408830,31409316,31409912,31410544,31411223,31411748,31412458,31413148,31413738,31414288,31414758,31415256,31415815,31416327,31416892,31417321,31417496,31417789,31418052,31418562,31419108,31419328,31419542,31419710,31420337,31420593,31421211,31421714,31422332,31422973,31423527,31424146,31424727,31425309,31425892,31426523,31427059,31427633,31428211,31428747,31429257,31429830,31430334,31430753,31431348,31431877,31432586,31433165,31433688,31434215,31434707,31435208,31435791,31436392,31436630,31437244,31437578,31438141,31438755,31439312,31439895,31440367,31441055,31441701,31442309,31444340,31446353,31448389,31450437,31452428,31454381,31456357,31458412,31460131,31461839,31463497,31465173,31466854,31468561,31470260,31471955,31473640,31475367,31477082,31478783,31480487,31482173,31483883,31485578,31487275,31488973,31490677,31492367,31494075,31495794,31497498,31499186,31500899,31502567,31504275,31505994,31507686,31509375,31511087,31512805,31514503,31516218,31517921,31519606,31521294,31522974,31524674,31526344,31528013,31529733,31531781,31533829,31535877,31537925,31539700,31541407,31543092,31544849,31546565,31548283,31550107,31551775,31553423,31555108,31556820,31558558,31560286,31562030,31563793,31565536,31567373,31569087,31570845,31572556,31574382,31576078,31577801,31579544,31581253,31583060,31584818,31586561,31588338,31590007,31591651,31592617,31593696,31594651,31595725,31596820,31597865,31598768,31599743,31600675,31601548,31602107,31602787,31603446,31604206,31605096,31605988,31606874,31607723,31608613,31609566,31610598,31611359,31612228,31613078,31613907,31614666,31615523,31616282,31616963,31617518,31617801,31618789,31619442,31620219,31621517,31623067,31623963,31625699,31627410,31629066,31630826,31632676,31634513,31636340,31637999,31639712,31641222,31642853,31644475,31646046,31647533,31649065,31650595,31652099,31653590,31655087,31656608,31658109,31659622,31661158,31662681,31664167,31665655,31667148,31668650,31670149,31671664,31673159,31674673,31676181,31677688,31679183,31680682,31682188,31683698,31685214,31686735,31688254,31689784,31691329,31692842,31694331,31695805,31697317,31698835,31700340,31701851,31703369,31704880,31706368,31707888,31709391,31710904,31712404,31713910,31715432,31716964,31718459,31719979,31720752,31721368,31722077,31722734,31723440,31724198,31724808,31725365,31726035,31726680,31727434,31728227,31728918,31729607,31730298,31730756,31731294,31731971,31732609,31733389,31734101,31734782,31735518,31736175,31736775,31737248,31737842,31738552,31739255,31739823,31740323,31741095,31741828,31742605,31743310,31743968,31744471,31745162,31745807,31746450,31747115,31747729,31748431,31749071,31749434,31749850,31750527,31751101,31751585,31752318,31752881,31753618,31754287,31754863,31755476,31755963,31756616,31757351,31757957,31758639,31759207,31759829,31760405,31761089,31761646,31762303,31762757,31763411,31763818,31764422,31764854,31765537,31766237,31766909,31767599,31768199,31768890,31769513,31770162,31770779,31771563,31772315,31772973,31773731,31774401,31775121,31775856,31776578,31777306,31777927,31778677,31779369,31780143,31780875,31781527,31782266,31782882,31783505,31784162,31784714,31785199,31785551,31786159,31786794,31787323,31787958,31788563,31789150,31789630,31790285,31790924,31791387,31791875,31792332,31792947,31793489,31794184,31794768,31795362,31796075,31796824,31797442,31798066,31798687,31799323,31799952,31800558,31800982,31801746,31802237,31802743,31803385,31804121,31804663,31805303,31806005,31806474,31806910,31807387,31807827,31808508,31809183,31809867,31810540,31811184,31811804,31813671,31815639,31817630,31819581,31821576,31823544,31825552,31827561,31829541,31831546,31833522,31835552,31837594,31839440,31841172,31842898,31844609,31846322,31848008,31849693,31851390,31853108,31854792,31856483,31858168,31859837,31861557,31863271,31864980,31866670,31868391,31870086,31871768,31873460,31875153,31876828,31878530,31880195,31881917,31883637,31885361,31887053,31888735,31890443,31892148,31893869,31895600,31897338,31899075,31900790,31902528,31904269,31905985,31907693,31909384,31911072,31912763,31914448,31916118,31917817,31919533,31921224,31922907,31924627,31926333,31928061,31929744,31931400,31933106,31934861,31936599,31938337,31940068,31941799,31943547,31945434,31947482,31949530,31951578,31953626,31955674,31957641,31959183,31960829,31962540,31964299,31966036,31967766,31969518,31971240,31973047,31974817,31976471,31978161,31979875,31981567,31983312,31985016,31986736,31988508,31990218,31991868,31993440,31995189,31996942,31998690,32000419,32002168,32003837,32005581,32007282,32008979,32010725,32012440,32014067,32015813,32017603,32019382,32021125,32022813,32024484,32026224,32027971,32029726,32031553,32032936,32033932,32035001,32035973,32036981,32038057,32039005,32039975,32040943,32041962,32042831,32044121,32045730,32047104,32048683,32050391,32051961,32053535,32055070,32056739,32058343,32059917,32061652,32063113,32064547,32066194,32067449,32068650,32070003,32071582,32072795,32074129,32075706,32077350,32078498,32080006,32081375,32082642,32084071,32085224,32086749,32088275,32089781,32091339,32092807,32094503,32096117,32097788,32099157,32100501,32102083,32103599,32105207,32106798,32108355,32109808,32111355,32113062,32114449,32116103,32118002,32119807,32121694,32123587,32125473,32127381,32129246,32131032,32132807,32134665,32136447,32138256,32139725,32141198,32142670,32144170,32145654,32147145,32148640,32150124,32151621,32153114,32153909,32154429,32154845,32155391,32155824,32156225,32156761,32157236,32157626,32157982,32158374,32158822,32159353,32159916,32160326,32160890,32161335,32161556,32162021,32162305,32162727,32163122,32163466,32163804,32164263,32164557,32164864,32165283,32165451,32165860,32166231,32166747,32168561,32170497,32172546,32174214,32175915,32177619,32179323,32181023,32182741,32184426,32186139,32187858,32189554,32191247,32192928,32194610,32196280,32198017,32200065,32201959,32203695,32205416,32207198,32208956,32210702,32212433,32214221,32215998,32217744,32219476,32221152,32222412,32223180,32223998,32225168,32226763,32228094,32229444,32230715,32232258,32233944,32235680,32237207,32238669,32240178,32241664,32243130,32244597,32246108,32247613,32249116,32250603,32251781,32252297,32252859,32253344,32253777,32254203,32254913,32255391,32256019,32256631,32257183,32257697,32258137,32258602,32259027,32259199,32259732,32260140,32260492,32260875,32261277,32261580,32262132,32262676,32262974,32263384,32263839,32264106,32265060,32267103,32269142,32270855,32272567,32274267,32275984,32277722,32279432,32281145,32282858,32284560,32286256,32287954,32289666,32291334,32293383,32295328,32296904,32298710,32300591,32302431,32304185,32305970,32307726,32309583,32311358,32313128,32314903,32316011,32316716,32317771,32319396,32321047,32322582,32324027,32325659,32327366,32329058,32330616,32332256,32333760,32335271,32336749,32338246,32339713,32341210,32342699,32344205,32345687,32347140,32348630,32350102,32351595,32353046,32354524,32355996,32357490,32358976,32360454,32361956,32363410,32364879,32366360,32367833,32369334,32370784,32372273,32373754,32375243,32376729,32378206,32379697,32381203,32382697,32384171,32385669,32387068,32387673,32388300,32388833,32389508,32390223,32390911,32391493,32392004,32392664,32393160,32393832,32394510,32395140,32395711,32396272,32396889,32397484,32398047,32398628,32399226,32399918,32400509,32401070,32401658,32402194,32402873,32403434,32404025,32404645,32405206,32405618,32406186,32406700,32407365,32407927,32408425,32409006,32409561,32409988,32410576,32411105,32411682,32412205,32412829,32413362,32413784,32414090,32414284,32414743,32415189,32415477,32415997,32416413,32416766,32417281,32417935,32418556,32419083,32419327,32419540,32419897,32420095,32420248,32420509,32421021,32421402,32421937,32422480,32422916,32423502,32424147,32424622,32425227,32425775,32426397,32426986,32427443,32427951,32428368,32428897,32429485,32430037,32430540,32431136,32431517,32431837,32432422,32432902,32433408,32433837,32434095,32434338,32434857,32435439,32436142,32436680,32437175,32437547,32438074,32438719,32439290,32439855,32440378,32441045,32441604,32442236,32442703,32443225,32443872,32445388,32447399,32449390,32451378,32453425,32455324,32457294,32459241,32461226,32463276,32464979,32466713,32468435,32470150,32471856,32473564,32475271,32476981,32478669,32480360,32482059,32483755,32485427,32487145,32488849,32490555,32492239,32493920,32495599,32497309,32498973,32500632,32502311,32503940,32505631,32507301,32508985,32510661,32512343,32514021,32515695,32517373,32519081,32520767,32522466,32524129,32525802,32527480,32529161,32530843,32532538,32534221,32535909,32537578,32539251,32540913,32542771,32544819,32546867,32548915,32550963,32552724,32554467,32556150,32557846,32559558,32561233,32562904,32564718,32566465,32568276,32570037,32571774,32573473,32575168,32576852,32578540,32580228,32581949,32583657,32585398,32587106,32588826,32590555,32592275,32594055,32595694,32597415,32599048,32600738,32602441,32604204,32605810,32607339,32608305,32609248,32610150,32610997,32611829,32612847,32613784,32614663,32615445,32616594,32617820,32618842,32619872,32620886,32622017,32623494,32624765,32625985,32627081,32628261,32629599,32630829,32632055,32633381,32634896,32636299,32637781,32638784,32640091,32641261,32642409,32643207,32643833,32644806,32645359,32645811,32646545,32647502,32648553,32649736,32650828,32651911,32652742,32653373,32654040,32655146,32656285,32657686,32659527,32661402,32663266,32665132,32667040,32668986,32670893,32672825,32674700,32676270,32677807,32679291,32680787,32682282,32683778,32685270,32686756,32688213,32689706,32691199,32692687,32694194,32695220,32695687,32695920,32696388,32696893,32697336,32697720,32698342,32698916,32699390,32699536,32699814,32700063,32700335,32700677,32701072,32701576,32702036,32702507,32702992,32703280,32703630,32703987,32704482,32704859,32705167,32705599,32705917,32706235,32706730,32706986,32707376,32707712,32708097,32708470,32709124,32709788,32710719,32712709,32714688,32716735,32718479,32720190,32721843,32723556,32725246,32726949,32728646,32730348,32732029,32733700,32735413,32737123,32738836,32740518,32742231,32743937,32745860,32747908,32749657,32751393,32753106,32754830,32756599,32758413,32760153,32761884,32763608,32765416,32767162,32768926,32770665,32771845,32772588,32773462,32775202,32776839,32777996,32778641,32779532,32780727,32782502,32784338,32786090,32787642,32789237,32790738,32792236,32793736,32795230,32796743,32798249,32799383,32799971,32800601,32801206,32801703,32802207,32802747,32803244,32803646,32804077,32804628,32805012,32805289,32805537,32805893,32806328,32806783,32807191,32807517,32807949,32808457,32808652,32809058,32809696,32810564,32812496,32814494,32816181,32817889,32819601,32821295,32823010,32824686,32826351,32828044,32829725,32831447,32833166,32835214,32836924,32838711,32840550,32842282,32844017,32845726,32847480,32849231,32851084,32851868,32852628,32853983,32855566,32857034,32858515,32860020,32861657,32863262,32864740,32866160,32867617,32869087,32870573,32872054,32873544,32875011,32876503,32877984,32879467,32880969,32882474,32883952,32885457,32886962,32887602,32888070,32888583,32889197,32889800,32890268,32890755,32891231,32891717,32892338,32892902,32893429,32893977,32894628,32894978,32895357,32895822,32896350,32896684,32897066,32897682,32898093,32898503,32898936,32899212,32899394,32899894,32900559,32901188,32901823,32902418,32903013,32903409,32904065,32904542,32904837,32905471,32905740,32906342,32906952,32907437,32907874,32908376,32908788,32910265,32912249,32914293,32916298,32918030,32919712,32921412,32923122,32924816,32926492,32928175,32929834,32931542,32933266,32934948,32936613,32938290,32940014,32941736,32943451,32945159,32946884,32948591,32950364,32952412,32954460,32956166,32957843,32959564,32961270,32963032,32964691,32966401,32968124,32969729,32971424,32973232,32974948,32976646,32978434,32980154,32981444,32982382,32983172,32984256,32985975,32987504,32988924,32990508,32992095,32993506,32995309,32997140,32998887,33000498,33001907,33003359,33004870,33006369,33007867,33009326,33010824,33012310,33013793,33015265,33016744,33018230,33019724,33021200,33022669,33024168,33024986,33025531,33026103,33026648,33027231,33027554,33028061,33028682,33029288,33029680,33030089,33030546,33030953,33031443,33031699,33032073,33032563,33033081,33033529,33034035,33034508,33034950,33035478,33035871,33036170,33036399,33036584,33036897,33037430,33037827,33038097,33038217,33038368,33038661,33039033,33039218,33039543,33040034,33040535,33040879,33041420,33041733,33042019,33042359,33042653,33043103,33043563,33045068,33047057,33048938,33050953,33052816,33054511,33056193,33057883,33059564,33061259,33062947,33064666,33066353,33068029,33069691,33071346,33073034,33074733,33076419,33078093,33079742,33081430,33083093,33084752,33086416,33088348,33090396,33092389,33094130,33095831,33097523,33099306,33101007,33102822,33104488,33106147,33107836,33109552,33111234,33112864,33114580,33116319,33118091,33119835,33120927,33121718,33122561,33123520,33125106,33126409,33127719,33129195,33130614,33131514,33132834,33134598,33136347,33137995,33139670,33141292,33142847,33144368,33145865,33147377,33148880,33150384,33151906,33153328,33154815,33156301,33157781,33159289,33160808,33162281,33163780,33165280,33166777,33168252,33169705,33171205,33172705,33174228,33175708,33176205,33176835,33177409,33177722,33178171,33178671,33179196,33179793,33180351,33180843,33181267,33181793,33182379,33182705,33182892,33183508,33184050,33184535,33185002,33185364,33185665,33185862,33186112,33186317,33186871,33187420,33187963,33188528,33189042,33189543,33190000,33190412,33190734,33191202,33191819,33192391,33192964,33193450,33193802,33194343,33194553,33194880,33195190,33195327,33195457,33196016,33196548,33197180,33197709,33198040,33198466,33198874,33199314,33199634,33199986,33200221,33200489,33200890,33201271,33201682,33202119,33202582,33203069,33203289,33203821,33204187,33204718,33205255,33205856,33206279,33207395,33209409,33211457,33213442,33215442,33217493,33219414,33221060,33222705,33224408,33226104,33227776,33229505,33231217,33232911,33234608,33236255,33237928,33239619,33241320,33243046,33244767,33246447,33248107,33249780,33251471,33253189,33254919,33256602,33258310,33260011,33261660,33263368,33265067,33266776,33268496,33270221,33271925,33273875,33275923,33277971,33280019,33281576,33283177,33284923,33286686,33288432,33290203,33291910,33293628,33295360,33297084,33298830,33300575,33302322,33304035,33305695,33307427,33309159,33310981,33312702,33314398,33316107,33317802,33319565,33321338,33323139,33324972,33325804,33326638,33327340,33328149,33328662,33329640,33330651,33331556,33332204,33333221,33334217,33335154,33335988,33336556,33336981,33337600,33337890,33338907,33340291,33340858,33342202,33343758,33345467,33347226,33348957,33350788,33352436,33354111,33355747,33357212,33358713,33360178,33361657,33363153,33364651,33366115,33367569,33369051,33369588,33370111,33370590,33371073,33371417,33371886,33372438,33372810,33373356,33373873,33374257,33374644,33375113,33375534,33375838,33376216,33376736,33377179,33377778,33378321,33378853,33379417,33379979,33380595,33381074,33381577,33382098,33382589,33383716,33385743,33387768,33389561,33391245,33392951,33394633,33396285,33397992,33399699,33401415,33403119,33404836,33406527,33408229,33409964,33412012,33413875,33415581,33417339,33419070,33420918,33422677,33424478,33426289,33428006,33429839,33430982,33431852,33432717,33433672,33434795,33435951,33437331,33438983,33440656,33442293,33443902,33445438,33446957,33448466,33449965,33451448,33452953,33454447,33455905,33457406,33458888,33460361,33461843,33463318,33464821,33466319,33467801,33469288,33470255,33470892,33471490,33472062,33472647,33473234,33473876,33474512,33475157,33475804,33476290,33476908,33477500,33478030,33478701,33479074,33479616,33480181,33480735,33481285,33481786,33482374,33482960,33483404,33483947,33484495,33484846,33485241,33485770,33486249,33486806,33487335,33487610,33488081,33488564,33489038,33489390,33489975,33490416,33490953,33491572,33492128,33492713,33493218,33493626,33494101,33494625,33495205,33495779,33496395,33496775,33497406,33497968,33498584,33499206,33500486,33502540,33504588,33506631,33508657,33510461,33512165,33513877,33515589,33517302,33519017,33520722,33522417,33524098,33525806,33527473,33529193,33530875,33532603,33534313,33536007,33537707,33539408,33541086,33542754,33544427,33546130,33547837,33549551,33551427,33553475,33555531,33557310,33559062,33560815,33562493,33564219,33565898,33567651,33569499,33571278,33573076,33574888,33576560,33578279,33579964,33581811,33583604,33585286,33586288,33587073,33587891,33588680,33589583,33591212,33592965,33594299,33595717,33597502,33599127,33600690,33601767,33603488,33605328,33607186,33608925,33610738,33612331,33613907,33615413,33616887,33618371,33619850,33621331,33622808,33624293,33625776,33627249,33628717,33630228,33631715,33633190,33634678,33636166,33637668,33639200,33640693,33642195,33643687,33645188,33646703,33647562,33647873,33648063,33648278,33648654,33649109,33649624,33650063,33650444,33650944,33651450,33652061,33652524,33652822,33653262,33653645,33654166,33654353,33654811,33655359,33655934,33656333,33656777,33657007,33657220,33657711,33657883,33658256,33658700,33659259,33659814,33660352,33660873,33661283,33661829,33662287,33662527,33663003,33663499,33663845,33664375,33664975,33665506,33666127,33666419,33666588,33666895,33667204,33667723,33668092,33668559,33669158,33669743,33670238,33670872,33671495,33671970,33672490,33673023,33673406,33673719,33674184,33674559,33674813,33675165,33675536,33676013,33676402,33676703,33677195,33678051,33680050,33682094,33684110,33686125,33688173,33689966,33691651,33693335,33695050,33696716,33698363,33700036,33701715,33703363,33705054,33706739,33708411,33710094,33711767,33713475,33715180,33716848,33718566,33720275,33721950,33723630,33725329,33727020,33728706,33730429,33732141,33733815,33735505,33737195,33738854,33740589,33742637,33744685,33746733,33748520,33750256,33752002,33753758,33755482,33757225,33758812,33760566,33762326,33764001,33765725,33767507,33769311,33771139,33772932,33774614,33776322,33778029,33779679,33781457,33783133,33784798,33786332,33788017,33788895,33789783,33790568,33791379,33792268,33793029,33793824,33794708,33795566,33796577,33797663,33798677,33799604,33800349,33801244,33802251,33803407,33804445,33805492,33806576,33807700,33808692,33809742,33810781,33811595,33811711,33812194,33813479,33814825,33816524,33818403,33820220,33822068,33823857,33825524,33827017,33828553,33830070,33831576,33833063,33834557,33836048,33837551,33839060,33840550,33842062,33843322,33843676,33844051,33844241,33844530,33844987,33845397,33845762,33846243,33846665,33847190,33847625,33848085,33848361,33848861,33849196,33849586,33850002,33850254,33850639,33850989,33851455,33851824,33852159,33852566,33852987,33853245,33853537,33853762,33854058,33854416,33854836,33855243,33855409,33855714,33855947,33857415,33859398,33861397,33863256,33864946,33866652,33868358,33870050,33871738,33873429,33875112,33876809,33878476,33880171,33881858,33883537,33885211,33886902,33888571,33890607,33892663,33894427,33896145,33897954,33899608,33901323,33903073,33904789,33906486,33908253,33910044,33911708,33913406,33915032,33916140,33916939,33917987,33919644,33921151,33922800,33924684,33926580,33928274,33929791,33931356,33932832,33934338,33935852,33937351,33938850,33940358,33941862,33943361,33944860,33946358,33947862,33949373,33950901,33952408,33953900,33955382,33956881,33958384,33959897,33961386,33962868,33964383,33965878,33967358,33968872,33970387,33971902,33973357,33974882,33976388,33977882,33979351,33980823,33981338,33981849,33982374,33982811,33983352,33983933,33984479,33985135,33985752,33986399,33987005,33987521,33987951,33988404,33989022,33989452,33989892,33990437,33991035,33991657,33992255,33992811,33993322,33993922,33994394,33994837,33995347,33995956,33996567,33997087,33997419,33997920,33998337,33998913,33999434,33999890,34000390,34000915,34001434,34001990,34002519,34003036,34003545,34004033,34004304,34004707,34005128,34005586,34005951,34006219,34006514,34007043,34007382,34007819,34008297,34008745,34009359,34009983,34010428,34010769,34011326,34011931,34012574,34013165,34013752,34014325,34014711,34015252,34015667,34016239,34016703,34017142,34017546,34018098,34018481,34018984,34019465,34019966,34020412,34020777,34021176,34021756,34022240,34022650,34023198,34023722,34024213,34024582,34024816,34025395,34025934,34026296,34026580,34026762,34026926,34027253,34027883,34028154,34028603,34029049,34029310,34029602,34029918,34030349,34030731,34031048,34031428,34031767,34031988,34032532,34032885,34033102,34034061,34036079,34038107,34040129,34042106,34044103,34046139,34048147,34050180,34052228,34054138,34055882,34057607,34059352,34061070,34062762,34064464,34066166,34067855,34069556,34071255,34072923,34074632,34076325,34078056,34079774,34081486,34083209,34084922,34086619,34088312,34090005,34091687,34093407,34095136,34096855,34098544,34100208,34101888,34103560,34105261,34106989,34108657,34110303,34111963,34113660,34115352,34117047,34118769,34120483,34122224,34123968,34125706,34127432,34129089,34130798,34132530,34134225,34135895,34137551,34139237,34141067,34143115,34145163,34147211,34149259,34151307,34153045,34154789,34156577,34158346,34160038,34161774,34163444,34165153,34166812,34168483,34170233,34171935,34173689,34175467,34177206,34178923,34180599,34182346,34184045,34185690,34187355,34188923,34190565,34192354,34194065,34195710,34197419,34199067,34200717,34202370,34204097,34205887,34207664,34209300,34211085,34212747,34214301,34215980,34217237,34218016,34218857,34219690,34220515,34221334,34222038,34222862,34223522,34224604,34225650,34226805,34227884,34228700,34229506,34230199,34231147,34232184,34232783,34233685,34234391,34235319,34236244,34236875,34237597,34238289,34239104,34239973,34240813,34241697,34242744,34243898,34245128,34246132,34247316,34248480,34249709,34251096,34252770,34254679,34256471,34258309,34260179,34262028,34263840,34265741,34267565,34269151,34270733,34272331,34273848,34275381,34276900,34278409,34279941,34281447,34282955,34284456,34285953,34287473,34288976,34290474,34291951,34293488,34294347,34294902,34295640,34296298,34296815,34297388,34297953,34298532,34299013,34299525,34299943,34300588,34301212,34301921,34302562,34303334,34303938,34304581,34305254,34305856,34306626,34307255,34307791,34308483,34309129,34309728,34310181,34310811,34311420,34312158,34312741,34313279,34313812,34314262,34314571,34314936,34315276,34315918,34316489,34317113,34317742,34318263,34318839,34319312,34319946,34320479,34321440,34323489,34325537,34327569,34329583,34331293,34333020,34334748,34336489,34338209,34339945,34341691,34343418,34345128,34346860,34348598,34350318,34352042,34353754,34355463,34357153,34358845,34360592,34362323,34364053,34365812,34367860,34369908,34371874,34373627,34375496,34377342,34379205,34381041,34382917,34384730,34386612,34388456,34390305,34392057,34393899,34395674,34397442,34399189,34401001,34402864,34404709,34406301,34407357,34408294,34409220,34410164,34411457,34412762,34413983,34415111,34416135,34417167,34418171,34419244,34420405,34421661,34423148,34424733,34426410,34428115,34429722,34431344,34432844,34434396,34435870,34437360,34438868,34440329,34441806,34443286,34444777,34446298,34447825,34449294,34450762,34452240,34453731,34455212,34456689,34458154,34459614,34461095,34462560,34464034,34465524,34466990,34468465,34469942,34471234,34471810,34472362,34472943,34473372,34473954,34474407,34474830,34475391,34475916,34476395,34476810,34477190,34477418,34477719,34477908,34478499,34478839,34479433,34479905,34480315,34480660,34481072,34481538,34482102,34482642,34483113,34483621,34484165,34484690,34485160,34485650,34486040,34486508,34486706,34487107,34487392,34487799,34488384,34488808,34489056,34489588,34490144,34490622,34491087,34491564,34491832,34492237,34492573,34493150,34493643,34493955,34494329,34494661,34495089,34495576,34495993,34496407,34496901,34497380,34497852,34498352,34498834,34499443,34500091,34500770,34501362,34501848,34502259,34502592,34502907,34503138,34503499,34503944,34504309,34504624,34504882,34505268,34505752,34506147,34506582,34507160,34507793,34509727,34511646,34513580,34515578,34517546,34519521,34521482,34523184,34524878,34526563,34528225,34529896,34531591,34533256,34534904,34536575,34538258,34539939,34541617,34543314,34544991,34546641,34548328,34549996,34551658,34553375,34555098,34556787,34558499,34560137,34561805,34563486,34565171,34566843,34568516,34570196,34571845,34573482,34575138,34576800,34578451,34580140,34581988,34584036,34586084,34588132,34589951,34591713,34593491,34595276,34597050,34598782,34600435,34602146,34603853,34605560,34607174,34608815,34610547,34612252,34614065,34615739,34617494,34619112,34620815,34622466,34624068,34625715,34627395,34629018,34630670,34632324,34633703,34634541,34635459,34636094,34636941,34637701,34638535,34639597,34640958,34642343,34643494,34644468,34645283,34646406,34647579,34648806,34649843,34650816,34651721,34652726,34654011,34655237,34656028,34657294,34657979,34658339,34659998,34661745,34663475,34665183,34667013,34668864,34670605,34672260,34673892,34675515,34677155,34678646,34680142,34681671,34683180,34684711,34686227,34687747,34689260,34690771,34692291,34693792,34695296,34696817,34698341,34699835,34701352,34702874,34704380,34705882,34707386,34708905,34710415,34711939,34713439,34714955,34716487,34718000,34719500,34721060,34722585,34724103,34725641,34727165,34728687,34730223,34731721,34733225,34734725,34736225,34737729,34739225,34740708,34742174,34743655,34745156,34746649,34748147,34749270,34749798,34750258,34750856,34751296,34751783,34752428,34752894,34753236,34753891,34754566,34755218,34755931,34756643,34757312,34758035,34758703,34759356,34760013,34760686,34761406,34762113,34762680,34763342,34763942,34764331,34764903,34765455,34766054,34766601,34767310,34767934,34768582,34769214,34769862,34770489,34771095,34771710,34772277,34772895,34773440,34773959,34774667,34775268,34775742,34776367,34776903,34777410,34777974,34778529,34779126,34779746,34780364,34780898,34781511,34782099,34782675,34783180,34783766,34784287,34784849,34785454,34785864,34786251,34786894,34787395,34787952,34788616,34789144,34789810,34790390,34791025,34791646,34792183,34792806,34793271,34793919,34794575,34795089,34795596,34796111,34796753,34797169,34797728,34798265,34798775,34799463,34800025,34800431,34800926,34801560,34802171,34802784,34803457,34804092,34804795,34805514,34806130,34806788,34807448,34808175,34808878,34809570,34810157,34810693,34811389,34812025,34812680,34813296,34813807,34814307,34814946,34815573,34816130,34816819,34817392,34817938,34818553,34819198,34819790,34820381,34820929,34821496,34822035,34822321,34822907,34823453,34824016,34824533,34825087,34825622,34826085,34826658,34827156,34827636,34828215,34828811,34829319,34829716,34830107,34830707,34831248,34831760,34832302,34832710,34833108,34833564,34834128,34834677,34835231,34835668,34836015,34836383,34838195,34840250,34842303,34844339,34846381,34848429,34850486,34852537,34854585,34856642,34858699,34860747,34862795,34864681,34866397,34868101,34869776,34871478,34873186,34874912,34876594,34878291,34880001,34881695,34883415,34885114,34886815,34888522,34890219,34891928,34893670,34895395,34897103,34898832,34900555,34902295,34904041,34905789,34907546,34909309,34911072,34912818,34914546,34916261,34917945,34919659,34921348,34923050,34924733,34926406,34928116,34929862,34931543,34933231,34934917,34936642,34938335,34940050,34941777,34943532,34945294,34947062,34948801,34950554,34952261,34953976,34955697,34957437,34959155,34960900,34962635,34964395,34966151,34967878,34969630,34971383,34973136,34974883,34976614,34978423,34980471,34982519,34984567,34986615,34988663,34990711,34992759,34994698,34996389,34998024,34999761,35001524,35003179,35004854,35006568,35008307,35010009,35011771,35013577,35015354,35017195,35018998,35020824,35022633,35024445,35026208,35028010,35029739,35031549,35033322,35034947,35036522,35038270,35040003,35041660,35043263,35044933,35046727,35048362,35050094,35051792,35053487,35055194,35057041,35058877,35060712,35062534,35064348,35066150,35067857,35069537,35071141,35072797,35074557,35076405,35078218,35080025,35081881,35083751,35085548,35087292,35088208,35089160,35090114,35091040,35092001,35092917,35093718,35094756,35095722,35096880,35098176,35099550,35100838,35102060,35103385,35104681,35105982,35107397,35108747,35110064,35111308,35112451,35113197,35113980,35114895,35115802,35116736,35117814,35118839,35119326,35119933,35121484,35122839,35124615,35126571,35128268,35130082,35131953,35133868,35135694,35137536,35139347,35141143,35143033,35144903,35146441,35147938,35149519,35151036,35152562,35154102,35155617,35157141,35158639,35159917,35160325,35160796,35161103,35161465,35162018,35162508,35163067,35163435,35163841,35164226,35164584,35164933,35165276,35165432,35165898,35166187,35166372,35166621,35166875,35167272,35167599,35167917,35168336,35168773,35170398,35172446,35174432,35176172,35177878,35179606,35181272,35182972,35184684,35186376,35188070,35189764,35191456,35193143,35195013,35197068,35198982,35200748,35202578,35204250,35206075,35207859,35209674,35211416,35213209,35214627,35215473,35217042,35218620,35220153,35221716,35223309,35224826,35226245,35227489,35228995,35230249,35230660,35231097,35231622,35232148,35232698,35233169,35234397,35236177,35237870,35239536,35241448,35243233,35244981,35245782,35246733,35248200,35249766,35251267,35252762,35254268,35255226,35255511,35255974,35256342,35256822,35257031,35257175,35257615,35258019,35258494,35258579,35259002,35259569,35260032,35261731,35263543,35265227,35266892,35268563,35270235,35271923,35273755,35275540,35277277,35278961,35280700,35282387,35283391,35284950,35286739,35288415,35289943,35291407,35292917,35294422,35295895,35297339,35297797,35298267,35298608,35298952,35299450,35299774,35300162,35300525,35301067,35301474,35301906,35302325,35302810,35303390,35303856,35304414,35305122,35307120,35308877,35310569,35312247,35313911,35315562,35317232,35318926,35320780,35322573,35324314,35326021,35327708,35329483,35330608,35331235,35332714,35333873,35334891,35336548,35338156,35340204,35342255,35344306,35346357,35348414,35350066,35351667,35353192,35354555,35355889,35357372,35358865,35359998,35360904,35361784,35363426,35365416,35367425,35369353,35371301,35372872,35373778,35374927,35376409,35377547,35379034,35380482,35381874,35383174,35384525,35385505,35386224,35387290,35388377,35389591,35390490,35391315,35392278,35393198,35393991,35394983,35396034,35397177,35398223,35399124,35400161,35401292,35402205,35403263,35404290,35405440,35406557,35407658,35408640,35409571,35410580,35411705,35412792,35413885,35415060,35415702,35416217,35417148,35418107,35419327,35420370,35421251,35422252,35423035,35424075,35424974,35425847,35426634,35427887,35429024,35429883,35430966,35431862,35432665,35433667,35434668,35435405,35436500,35437464,35437956,35439734,35441782,35442833,35443928,35444991,35445914,35446876,35447931,35449066,35450089,35451115,35451981,35453105,35454287,35455184,35456281,35457276,35458228,35459286,35460049,35460947,35461681,35462474,35463351,35464500,35465846,35467251,35468852,35470146,35471830,35473846,35475894,35477942,35479720,35481224,35483247,35485295,35487343,35489391,35491285,35493154,35495210,35496814,35498807,35500855,35502903,35504951,35506999,35509047,35511095,35513143,35515196,35517219,35519248,35521305,35523340,35525384,35527381,35529298,35531094,35532736,35534780,35536828,35538876,35540924,35542972,35545020,35547068,35549116,35551164,35553212,35555260,35557308,35559282,35561221,35563056,35564812,35566010,35567998,35569917,35571796,35573554,35575500,35577557,35579611,35581667,35583715,35585763,35587811,35589859,35591907,35593955,35596003,35598051,35600099,35602147,35604204,35606126,35607511,35608767,35610823,35612879,35614936,35616984,35619032,35621080,35623128,35625176,35627224,35629272,35631320,35633368,35635416,35637464,35639512,35641560,35643608,35645656,35647712,35649716,35651279,35653327,35655375,35657423,35659471,35661285,35662825,35664157,35665313,35666304,35666974,35667626,35669682,35671730,35673778,35675826,35677874,35679922,35681970,35684018,35686075,35688131,35689870,35691226,35692156,35694204,35696252,35698268,35700187,35702020,35703681,35705147,35706218,35707047,35707543,35707743,35708388,35710392,35712440,35714496,35716545,35718593,35720641,35722689,35724737,35726785,35728833,35730890,35732938,35734995,35736953,35738727,35740314,35741793,35743236,35745283,35747340,35749397,35751445,35753499,35755547,35757604,35759652,35761700,35763756,35765812,35767850,35769872,35771743,35773390,35774805,35775728,35777114,35778976,35780892,35782915,35784963,35787020,35789070,35790952,35792602,35793762,35794942,35796990,35799039,35801087,35802808,35804856,35806904,35808946,35810624,35810909,35811037,35811164,35811198,35812374,35814422,35816470,35818518,35820566,35822614,35824671,35826719,35828771,35830694,35832742,35834376,35836401,35838449,35840497,35842545,35844593,35846641,35848689,35850745,35852801,35854849,35856678,35858293,35860291,35862162,35863851,35865433,35867255,35868711,35869486,35870636,35872384,35874385,35876413,35878466,35880522,35882576,35884628,35886578,35888283,35889226,35889295,35891346,35893394,35895450,35897507,35899558,35901613,35903670,35905725,35907773,35909819,35911852,35913802,35915636,35917563,35919343,35921001,35923049,35925106,35927154,35929211,35931259,35933307,35935355,35937403,35939306,35941354,35943411,35945466,35947514,35949570,35951618,35953666,35955714,35957322,35959363,35961315,35963277,35964395,35966278,35968335,35970383,35972343,35973933,35975987,35978035,35980083,35982131,35984186,35986234,35988282,35990330,35992378,35994395,35995949,35997311,35999203,36001161,36003159,36005213,36007263,36009315,36011338,36013379,36015425,36017473,36019522,36021564,36023595,36025586,36027557,36029525,36031566,36033612,36035667,36037708,36039755,36041766,36043817,36045854,36047910,36049945,36051996,36054034,36056038,36057877,36059593,36061095,36062461,36063715,36064971,36066142,36067271,36068337,36069417,36070496,36071479,36072477,36073256,36074160,36075065,36075791,36076385,36076840,36077207,36077393,36077552,36077618,36077669,36078614,36080659,36082707,36084758,36086807,36088823,36090598,36092329,36093782,36094702,36096223,36098271,36100319,36102367,36104415,36106302,36108350,36110398,36112446,36114407,36116455,36118503,36120551,36122557,36124613,36126661,36128709,36130757,36132800,36134856,36136904,36138952,36140989,36143042,36145090,36147094,36149022,36150908,36152671,36154443,36156167,36157842,36159895,36161943,36163986,36166043,36168094,36170148,36172199,36173970,36176024,36178081,36180129,36182184,36184232,36186289,36188337,36190310,36192294,36194342,36196317,36198153,36199680,36201737,36203794,36205664,36207153,36209205,36211253,36213301,36215349,36217397,36219445,36221493,36223547,36225596,36227552,36229304,36230996,36232464,36233885,36235107,36236265,36238255,36240303,36242351,36244407,36246455,36248416,36250243,36251709,36252284,36252831,36254091,36255660,36257492,36259439,36261368,36263339,36265295,36267288,36269110,36270760,36272199,36273482,36274306,36274783,36275686,36277605,36279625,36281496,36282734,36283740,36285796,36287844,36289892,36291940,36293988,36296036,36298084,36300132,36302090,36304116,36306164,36308129,36309806,36311116,36312024,36314072,36316079,36317667,36318996,36321044,36323092,36325140,36327191,36329239,36331295,36333350,36335399,36337394,36339369,36340846,36342881,36344929,36346371,36346949,36348951,36350999,36353047,36355095,36357143,36359191,36361247,36363232,36364973,36367024,36369072,36371120,36373168,36375216,36377264,36379312,36380700,36381858,36383516,36385493,36387543,36389598,36391646,36393490,36394647,36396617,36398441,36400497,36402545,36404593,36406650,36408699,36410634,36412219,36413401,36414289,36414899,36415330,36415651,36415805,36416705,36418753,36420801,36422849,36424897,36426945,36428993,36431041,36433089,36435137,36437185,36439233,36441281,36443329,36445377,36447425,36449473,36451521,36453307,36454738,36456786,36458834,36460881,36462938,36464986,36467043,36468969,36470896,36472937,36474453,36476424,36477589,36478302,36479764,36481500,36483508,36485559,36487607,36489655,36491703,36493751,36495799,36497847,36499895,36501943,36503955,36505774,36507364,36508812,36510173,36511310,36512332,36513328,36514160,36514924,36515766,36516762,36517524,36518588,36520367,36522415,36524463,36526511,36528559,36530607,36532655,36534703,36536751,36538799,36540847,36542895,36544943,36546991,36548691,36549839,36550500,36551197,36553229,36555277,36557325,36559373,36561337,36562968,36565016,36567064,36569112,36571165,36573213,36575261,36577315,36579247,36580628,36582105,36583772,36584974,36586452,36588500,36590286,36591270,36592056,36593881,36595848,36597856,36599910,36601965,36604018,36606061,36608110,36610046,36611615,36613411,36615271,36617170,36619185,36621239,36623295,36625343,36627391,36629447,36631502,36633550,36635606,36637573,36639317,36640712,36641300,36642133,36643954,36646002,36648050,36650098,36652146,36654194,36656242,36658298,36660346,36662398,36664342,36666018,36667432,36668384,36669316,36669521,36670309,36672357,36674394,36676348,36678246,36679986,36681727,36683594,36685642,36687667,36689371,36690901,36692367,36694058,36695886,36697930,36699978,36701906,36703820,36704975,36707019,36708725,36710505,36712477,36714528,36716197,36718070,36719416,36720819,36721936,36723756,36725739,36727770,36729791,36731796,36733841,36735788,36737751,36739799,36741846,36743870,36745426,36746332,36747908,36749885,36751933,36753981,36756029,36757872,36759620,36760831,36761519,36762870,36764918,36766966,36769014,36771062,36772376,36772767,36774757,36776805,36778852,36780900,36782948,36784996,36787044,36788984,36791040,36793039,36794569,36796617,36798638,36800469,36802517,36804502,36806198,36808237,36810244,36811606,36812891,36814912,36816276,36817164,36819220,36821268,36823316,36825363,36826426,36826541,36826761,36828329,36830386,36832434,36834482,36836539,36838587,36840643,36842691,36844326,36846347,36848083,36849512,36850232,36850375,36851743,36853749,36855805,36857758,36859806,36861830,36863887,36865935,36867964,36870012,36871868,36873770,36875462,36877366,36878779,36880614,36881855,36883480,36885153,36886786,36888057,36889346,36891243,36893227,36895239,36897287,36899335,36901383,36903431,36905479,36907527,36909575,36911623,36913671,36915728,36917777,36919820,36921797,36923756,36925526,36927543,36929207,36931190,36933242,36935081,36936603,36938621,36940540,36942588,36944636,36946684,36948732,36950780,36952828,36954876,36956924,36958981,36961020,36962940,36964666,36966201,36967590,36968710,36969527,36971165,36973213,36975261,36977309,36979357,36981405,36982602,36983687,36985735,36987772,36989765,36991741,36993779,36995747,36997771,36999761,37001809,37003864,37005912,37007960,37010008,37011989,37013622,37015168,37017194,37019247,37021304,37023246,37025178,37027225,37029278,37031326,37033374,37035422,37037470,37039526,37041570,37043494,37045208,37046541,37047078,37048690,37050738,37052786,37054834,37056882,37058930,37060860,37062917,37064965,37067013,37069061,37070707,37072269,37074325,37076373,37078421,37080469,37082517,37084572,37086620,37088668,37090424,37091732,37093780,37095828,37097876,37099924,37101972,37103931,37105901,37107949,37108867,37109255,37109828,37111227,37113185,37115233,37117281,37119329,37121386,37123434,37125482,37127530,37129578,37131626,37133682,37135720,37137618,37139392,37141173,37142889,37144451,37145858,37147116,37148355,37149586,37150631,37151400,37151939,37152523,37153031,37153478,37153959,37154364,37154749,37155194,37155658,37156106,37156651,37157148,37157357,37157746,37158641,37159810,37160974,37162213,37163362,37164386,37165346,37166216,37166905,37167397,37167677,37167796,37168658,37170612,37172669,37174304,37176017,37177951,37179945,37181993,37184040,37186043,37188088,37190136,37192175,37194232,37196223,37198073,37199623,37201555,37203591,37205119,37206669,37208686,37210478,37212505,37214553,37216566,37218521,37220478,37222521,37224569,37226584,37228477,37230505,37232557,37234591,37236464,37238479,37240488,37242110,37243531,37245129,37247177,37249169,37251213,37253268,37255325,37257236,37258908,37260833,37262794,37264842,37266866,37268923,37270924,37272973,37274865,37276847,37278706,37280525,37282340,37284316,37286252,37288168,37290148,37292042,37294044,37296008,37298056,37300104,37302152,37304204,37306166,37307730,37309048,37310921,37311946,37312896,37314407,37316462,37318519,37320562,37322543,37324469,37326295,37328097,37329987,37331754,37333737,37335583,37337535,37339485,37341407,37343393,37345446,37347253,37349145,37351067,37352553,37354066,37356087,37358103,37360096,37361972,37363843,37365677,37367555,37369324,37371035,37372525,37374500,37376098,37377564,37379049,37380328,37381201,37382586,37384608,37386544,37388389,37390218,37391954,37393554,37395304,37396896,37398255,37399667,37400927,37402470,37403710,37404954,37406100,37407196,37408554,37409755,37410804,37412001,37413490,37414684,37416124,37417784,37419589,37421406,37423142,37425136,37427119,37429171,37431185,37433169,37434965,37436669,37438218,37439587,37440376,37442054,37443860,37445908,37447956,37450004,37452045,37452917,37453028,37454666,37456714,37458762,37460693,37462203,37464220,37465404,37467453,37469501,37470857,37472646,37474694,37476742,37478798,37480855,37482428,37484480,37486377,37487782,37489308,37491356,37493404,37495452,37497508,37499565,37501620,37503550,37505598,37507646,37509694,37511742,37513790,37515838,37517886,37519934,37521982,37524030,37526087,37528124,37530164,37532219,37534271,37536319,37538367,37540415,37542351,37544319,37546353,37548401,37550449,37552500,37554552,37556609,37558657,37560705,37562753,37564801,37566850,37568288,37569949,37571996,37574044,37576095,37578143,37580191,37582237,37584291,37586159,37588107,37589823,37591360,37592958,37594422,37596201,37597976,37599520,37600926,37602255,37603339,37604162,37604439,37606446,37608276,37610199,37612251,37614308,37616354,37618196,37619542,37620974,37623022,37625075,37626855,37628908,37630965,37633013,37634992,37636453,37638489,37640537,37642325,37643961,37645425,37647296,37649081,37650167,37650991,37651586,37653056,37654481,37655915,37657140,37658350,37659676,37660319,37660936,37661740,37662147,37662416,37662950,37663372,37663751,37664758,37665661,37666029,37666375,37666740,37667388,37668191,37668686,37669223,37669817,37670225,37670655,37671295,37672104,37672920,37673699,37674225,37675239,37676025,37676682,37677644,37678432,37679077,37679978,37680369,37680970,37681592,37681977,37682502,37683201,37683588,37684361,37684704,37684982,37685790,37686333,37687049,37687767,37688920,37689760,37690936,37691938,37692836,37693389,37694027,37694641,37695047,37695578,37696237,37696923,37697347,37697553,37698033,37698496,37699102,37699465,37699905,37700454,37701039,37701466,37702567,37703916,37704160,37704519,37704926,37705282,37705918,37706595,37707290,37707805,37708279,37709035,37709697,37710233,37710603,37711096,37711657,37712802,37713689,37714615,37715353,37715739,37716259,37716647,37717100,37717526,37717987,37718286,37718866,37719051,37719508,37720078,37720330,37720563,37720815,37721320,37721904,37722188,37722760,37723268,37723515,37724359,37725113,37725493,37725785,37726154,37726471,37726917,37727215,37727507,37727814,37728317,37729206,37729747,37730180,37730738,37731252,37731771,37732285,37732671,37733150,37733763,37734094,37734448,37735160,37735843,37736555,37737453,37738003,37738297,37738568,37738874,37739133,37739646,37739974,37740363,37740540,37740836,37741282,37741788,37742516,37743199,37744280,37745732,37746688,37747816,37748224,37748876,37749102,37749548,37750155,37751225,37752618,37753404,37753940,37754870,37755400,37755971,37756586,37757170,37757858,37758613,37759439,37759953,37760536,37760971,37761470,37762147,37763179,37764122,37765403,37766597,37768002,37768724,37769333,37769866,37770485,37771433,37772584,37773758,37774864,37776024,37777221,37777822,37778242,37778952,37780018,37781173,37781980,37782430,37783150,37784296,37784753,37785018,37785214,37785375,37785694,37785895,37786052,37786171,37786401,37786867,37787184,37787335,37787468,37787602,37788004,37788527,37789169,37789488,37790199,37790816,37791384,37792183,37792471,37793098,37793267,37793752,37794168,37794438,37794770,37795273,37795858,37796261,37796743,37797262,37797537,37797818,37798240,37798766,37798927,37799131,37799390,37799603,37799952,37800178,37800352,37800787,37801101,37801376,37801562,37801846,37802031,37802286,37802822,37803320,37803953,37804238,37804846,37805807,37806073,37806546,37807021,37807549,37808190,37808698,37809115,37809712,37810444,37811379,37812384,37812809,37813300,37813549,37813936,37814343,37814601,37815022,37815398,37815726,37815974,37816251,37816497,37816620,37817544,37818636,37819223,37819855,37820708,37821109,37821744,37822183,37822471,37822973,37823594,37824051,37824393,37824574,37824851,37825197,37825385,37825795,37826093,37826339,37826804,37827012,37827261,37827634,37827787,37827993,37828302,37828468,37828909,37829335,37829634,37830000,37830356,37830706,37831056,37831534,37831850,37832248,37832848,37833587,37834293,37835703,37836378,37836851,37837348,37838044,37838490,37839002,37839643,37839852,37840384,37841220,37842183,37842646,37843026,37844128,37845235,37846253,37847312,37847796,37848399,37848767,37849497,37849977,37850596,37851109,37851411,37851640,37852022,37852350,37852844,37854080,37855102,37855627,37855985,37856460,37856957,37857290,37857708,37858289,37859023,37859587,37860292,37860984,37861365,37861867,37862537,37863290,37863829,37864852,37865740,37866555,37867511,37868168,37868872,37870750,37872636,37873635,37874623,37875614,37876604,37878306,37880196,37881940,37882927,37883914,37884902,37886772,37887889,37889167,37890117,37891504,37891989,37892895,37893685,37894725,37895149,37895590,37896315,37897056,37897790,37898491,37899313,37899929,37900630,37901376,37901999,37902821,37903446,37904137,37905017,37905303,37905422,37905607,37906140,37906515,37906700,37906822,37907171,37907558,37907934,37908450,37908904,37909804,37910792,37911487,37911802,37912335,37912802,37913149,37913471,37914016,37914537,37914881,37915024,37915514,37916161,37916954,37918348,37919697,37920231,37920820,37921380,37921787,37922025,37922406,37922942,37923522,37923971,37924313,37924710,37925228,37925708,37926087,37926487,37926908,37927220,37927671,37927851,37928144,37928397,37928855,37929164,37929506,37929781,37929961,37930253,37930783,37931130,37931328,37931614,37931766,37932427,37932657,37933069,37933232,37933871,37934428,37935011,37935297,37935430,37935722,37936216,37936473,37936927,37937399,37937761,37938395,37939159,37939591,37939873,37940479,37941106,37941377,37942092,37942958,37943516,37943611,37943671,37944022,37944775,37945543,37946161,37946747,37947449,37947951,37948661,37949031,37949731,37950313,37950742,37951238,37951726,37952190,37952747,37953085,37953591,37954268,37954741,37955238,37955890,37956740,37957250,37957947,37958705,37959041,37959535,37960024,37960435,37961259,37961949,37962754,37963343,37963807,37964349,37964954,37965462,37966246,37966909,37967763,37968199,37968728,37969248,37970001,37970343,37970650,37971056,37971256,37971633,37971810,37972008,37972235,37972671,37972962,37973341,37973776,37973909,37974284,37974426,37974625,37974863,37974983,37975148,37975863,37976420,37976836,37977324,37977729,37978111,37978379,37978589,37978990,37979430,37979590,37979954,37980804,37981134,37981594,37981942,37982379,37982800,37983473,37984310,37985290,37986197,37986892,37987667,37988206,37988404,37989296,37990101,37990455,37991536,37992579,37992908,37993750,37994471,37995654,37996808,37997074,37997621,37997966,37998298,37999582,38000797,38001874,38003152,38004524,38005962,38007455,38008873,38010376,38011896,38013421,38014967,38016482,38017995,38019497,38021007,38022590,38024079,38025623,38027109,38028606,38030171,38031622,38032968,38034283,38035526,38036775,38038107,38039452,38040695,38041866,38043014,38044032,38045262,38046789,38048370,38050257,38051966,38053714,38055470,38057137,38058854,38060569,38062289,38063990,38065725,38067427,38069146,38070894,38072650,38074405,38076124,38077834,38079378,38081073,38082704,38084379,38086080,38087787,38089506,38091195,38092920,38094580,38096232,38097884,38099560,38101158,38102722,38104363,38106157,38107844,38109483,38111163,38112794,38114425,38116121,38117863,38119566,38121336,38123167,38125028,38126811,38128632,38130458,38132190,38133916,38135645,38137405,38139210,38141056,38142852,38144499,38146215,38148023,38149762,38151478,38153281,38155042,38156791,38158452,38160186,38161805,38163364,38165194,38166799,38168452,38170042,38171623,38173289,38174931,38176589,38178314,38180001,38181692,38183359,38185096,38186805,38188543,38190243,38191886,38193609,38195364,38197062,38198763,38200433,38202087,38203759,38205438,38207051,38208708,38210310,38211919,38213474,38215029,38216541,38218022,38219895,38221514,38223065,38224605,38225962,38227443,38228977,38230460,38231936,38233154,38234439,38235911,38237344,38238647,38239999,38241396,38242737,38244077,38245559,38247128,38248639,38250176,38251651,38253043,38254470,38255962,38257350,38258735,38260298,38261832,38263303,38264873,38266499,38268024,38269689,38271120,38272637,38273968,38275509,38276976,38278436,38279973,38281322,38282783,38284140,38285445,38286676,38287911,38288125,38288358,38288576,38288802,38289022,38289793,38291209,38292835,38294222,38295228,38296566,38297781,38298680,38299960,38301388,38302389,38303976,38305620,38306818,38308027,38309613,38310729,38312527,38313611,38315235,38316945,38318535,38319938,38321624,38323219,38324464,38326147,38327401,38329039,38330545,38331783,38333480,38334574,38336210,38337746,38339266,38340944,38342272,38343751,38345193,38346681,38348443,38349612,38350965,38352595,38354329,38355555,38357168,38358674,38360210,38361716,38363349,38364786,38366106,38367657,38369161,38370594,38372367,38373761,38375472,38376913,38378226,38379723,38381215,38382908,38384324,38385546,38387286,38388806,38390351,38391997,38393323,38395004,38396015,38397443,38398939,38400669,38402026,38403523,38405098,38406590,38408016,38409626,38410957,38412460,38413823,38415353,38416777,38418127,38419428,38420989,38422365,38423534,38425037,38426194,38427519,38429021,38430558,38432129,38433783,38435481,38436944,38438227,38439762,38441227,38442502,38444194,38445647,38447204,38448726,38450235,38451460,38453148,38454903,38456296,38458084,38459727,38461546,38462722,38464223,38465886,38467392,38469240,38470804,38472444,38474044,38475570,38477262,38478982,38480394,38482037,38483669,38485434,38487038,38488683,38490190,38491545,38493230,38494730,38496353,38498099,38499968,38501201,38502622,38504088,38505707,38507319,38508994,38510381,38511956,38513759,38515167,38516901,38518391,38520446,38522494,38524510,38526538,38528588,38530632,38532648,38534700,38536715,38538729,38540749,38542795,38544816,38546856,38548873,38550921,38552978,38555019,38557056,38559046,38561021,38563017,38565041,38567067,38569101,38571149,38573197,38575250,38577288,38579333,38581350,38583364,38585397,38587438,38589486,38591532,38593576,38595627,38597664,38599674,38601706,38603564,38605560,38607595,38609644,38611698,38613734,38615764,38617798,38619828,38621827,38623808,38625801,38627784,38629782,38631795,38633804,38635810,38637855,38639882,38641924,38643948,38645951,38647925,38649905,38651877,38653889,38655880,38657906,38659925,38661947,38663996,38666025,38668013,38669978,38671973,38673990,38675993,38677985,38680038,38682089,38684118,38686162,38688149,38690134,38692122,38694144,38696159,38698202,38700221,38702261,38704313,38706366,38708404,38710448,38712485,38714533,38716581,38718618,38720651,38722697,38724687,38726638,38728615,38730612,38732583,38734547,38736557,38738539,38740536,38742498,38744498,38746458,38748425,38750407,38752401,38754372,38756284,38758253,38760255,38762203,38764162,38766156,38768132,38770109,38772117,38774065,38776031,38778011,38779998,38781986,38783963,38785912,38787923,38789892,38791887,38793851,38795799,38797796,38799804,38801792,38803798,38805773,38807746,38809749,38811737,38813715,38815623,38817592,38819559,38821553,38823542,38825526,38827499,38829454,38831447,38833438,38835415,38837375,38839384,38841388,38843391,38845369,38847368,38849373,38851369,38853369,38855354,38857353,38859329,38861263,38863068,38864850,38866652,38868424,38870188,38872127,38874041,38875781,38877559,38879454,38881374,38883294,38885024,38886774,38888638,38890589,38892498,38894406,38896208,38897921,38899820,38901690,38903460,38905172,38906896,38908524,38910279,38911841,38913603,38915547,38917415,38919246,38920954,38923000,38925056,38927109,38929088,38931073,38932977,38934770,38936700,38938599,38940431,38942357,38944029,38945791,38947461,38949344,38951225,38953124,38954889,38956738,38958614,38960328,38962098,38963795,38965697,38967545,38969422,38971254,38973088,38974814,38976586,38978286,38980080,38981961,38983819,38985639,38987533,38989266,38991194,38992959,38994660,38996301,38998043,38999918,39001780,39003498,39005430,39007253,39009071,39010894,39012530,39014341,39016029,39017884,39019757,39021623,39023385,39025298,39027019,39028842,39030473,39032219,39033904,39035857,39037770,39039761,39041646,39043499,39045406,39047304,39049130,39050816,39052805,39054685,39056664,39058604,39060562,39062572,39064440,39066162,39068079,39069878,39071669,39073319,39075200,39077018,39078844,39080805,39082595,39084450,39086386,39088197,39090068,39091841,39093748,39095547,39097465,39099227,39101167,39103044,39104783,39106660,39108419,39110305,39112076,39113860,39115749,39117568,39119252,39121057,39122818,39124643,39126375,39128298,39130206,39132086,39134040,39135942,39137872,39139787,39141767,39143709,39145625,39147520,39149423,39151397,39153343,39155261,39157174,39159149,39161045,39162961,39164984,39166832,39168258,39169666,39171058,39172491,39173940,39175424,39177005,39178448,39180029,39181429,39182927,39184532,39186314,39188000,39189512,39191274,39193101,39195081,39197021,39198943,39200841,39202591,39204414,39206267,39208045,39209998,39211978,39213950,39215753,39217747,39219419,39221407,39223161,39224920,39226864,39228635,39230613,39232590,39234453,39236405,39238093,39239961,39241805,39243556,39245514,39247439,39249413,39251088,39253112,39254847,39256715,39258411,39260251,39261994,39263895,39265865,39267842,39269640,39271660,39273458,39275342,39277095,39278937,39280755,39282506,39284456,39286388,39288209,39290204,39291900,39293888,39295688,39297459,39299409,39301293,39303275,39305258,39307168,39309129,39310857,39312727,39314604,39316419,39318407,39320376,39322295,39324250,39326150,39328118,39330079,39332001,39333896,39335828,39337702,39339372,39341057,39343043,39345055,39347001,39348959,39350960,39352970,39354969,39357013,39359020,39361036,39363037,39365018,39367038,39368996,39370974,39372961,39374942,39376938,39378931,39380927,39382898,39384851,39386838,39388809,39390820,39392801,39394775,39396799,39398826,39400847,39402842,39404853,39406874,39408894,39410913,39412921,39414935,39416957,39418937,39420947,39422960,39424974,39426993,39429016,39431032,39433044,39435058,39437038,39439070,39441106,39443138,39445120,39447141,39449123,39451145,39453135,39455144,39457136,39459147,39461134,39463146,39465143,39467151,39469151,39471194,39473245,39475237,39477220,39479088,39480785,39482618,39484280,39485973,39487674,39489388,39491125,39492790,39494370,39496116,39497854,39499563,39501185,39503027,39504666,39506309,39508094,39509822,39511330,39513046,39514763,39516475,39518121,39519875,39521633,39523411,39525082,39526871,39528661,39530481,39532138,39533879,39535642,39537347,39539097,39540845,39542605,39544579,39546482,39548472,39550473,39552478,39554436,39556339,39558287,39560210,39562224,39564199,39566177,39568190,39570177,39572149,39574150,39576131,39578128,39580104,39582079,39584046,39586053,39588076,39590070,39592051,39594013,39596010,39597976,39599918,39601887,39603910,39605901,39607916,39609877,39611862,39613826,39615815,39617778,39619723,39621694,39623601,39625506,39627348,39629313,39631164,39632988,39634882,39636677,39638548,39640459,39642307,39644218,39646068,39647932,39649856,39651732,39653615,39655542,39657456,39659437,39661405,39663418,39665324,39667296,39669208,39671096,39672986,39674950,39676894,39678871,39680734,39682657,39684650,39686601,39688561,39690538,39692432,39694384,39696146,39698080,39699988,39702037,39704070,39706106,39708108,39710120,39712121,39714135,39716131,39718185,39720193,39722241,39724281,39726305,39728323,39730338,39732324,39734345,39736321,39738348,39740392,39742446,39744483,39746509,39748565,39750579,39752587,39754614,39756626,39758653,39760701,39762745,39764782,39766827,39768869,39770905,39772887,39774778,39776787,39778804,39780818,39782857,39784889,39786926,39788920,39790901,39792924,39794918,39796872,39798859,39800885,39802922,39804941,39806973,39808981,39810962,39812954,39814977,39816956,39818918,39820895,39822914,39824953,39826980,39829004,39831025,39833012,39835023,39837025,39839006,39840976,39842970,39844986,39847012,39849042,39851077,39853121,39855162,39857200,39859201,39861245,39863224,39865227,39867207,39869242,39871263,39873320,39875377,39877422,39879449,39881479,39883517,39885563,39887617,39889660,39891700,39893756,39895748,39897700,39899683,39901692,39903671,39905631,39907601,39909587,39911614,39913610,39915574,39917533,39919484,39921450,39923419,39925421,39927405,39929374,39931382,39933352,39935314,39937269,39939167,39941067,39943027,39944995,39946963,39948974,39950968,39952973,39954955,39956945,39958795,39960789,39962737,39964695,39966645,39968594,39970407,39972373,39974414,39976442,39978475,39980503,39982539,39984475,39986301,39988290,39990282,39992248,39994126,39996032,39997929,39999893,40001877,40003781,40005699,40007656,40009613,40011579,40013445,40015314,40017272,40019304,40021285,40023116,40025033,40026959,40028907,40030799,40032639,40034528,40036462,40038400,40040380,40042223,40044114,40046044,40048036,40049974,40051838,40053769,40055746,40057651,40059464,40061365,40063343,40065213,40067076,40068899,40070546,40072474,40074402,40076305,40078210,40080128,40081969,40083851,40085771,40087611,40089485,40091363,40093249,40095105,40096972,40098789,40100635,40102613,40104573,40106493,40108408,40110304,40112142,40113987,40115865,40117695,40119541,40121561,40123561,40125563,40127589,40129600,40131579,40133368,40135256,40137255,40139181,40141215,40143241,40145244,40147105,40149095,40151116,40153133,40155136,40157105,40159059,40161047,40163087,40165062,40167063,40168804,40170781,40172778,40174810,40176758,40178526,40180531,40182534,40184554,40186516,40188306,40190322,40192323,40194355,40196354,40198352,40200161,40202112,40204136,40206155,40208156,40210168,40212191,40214219,40216215,40218219,40220228,40222168,40224186,40226184,40228165,40230125,40232148,40234171,40236189,40238222,40240262,40242266,40244116,40246134,40248113,40250107,40252081,40254097,40256072,40258020,40260007,40261978,40263928,40265921,40267826,40269828,40271812,40273760,40275724,40277700,40279710,40281655,40283488,40285447,40287382,40289367,40291228,40293132,40295151,40297148,40299145,40301170,40303123,40305044,40306954,40308903,40310763,40312687,40314622,40316612,40318596,40320552,40322563,40324575,40326549,40328520,40330506,40332440,40334418,40336348,40338333,40340327,40342314,40344295,40346319,40348278,40350263,40352195,40354160,40356116,40358058,40359934,40361928,40363881,40365838,40367767,40369810,40371763,40373751,40375753,40377738,40379749,40381724,40383693,40385664,40387645,40389602,40391598,40393594,40395585,40397537,40399442,40401392,40403386,40405316,40407269,40409218,40411179,40413138,40415107,40417082,40418999,40420938,40422897,40424736,40426591,40428556,40430527,40432425,40434311,40436246,40438162,40440149,40442089,40444002,40445983,40448004,40449932,40451909,40453918,40455834,40457867,40459734,40461752,40463726,40465690,40467701,40469710,40471723,40473763,40475798,40477671,40479688,40481680,40483663,40485687,40487714,40489763,40491799,40493830,40495781,40497800,40499814,40501786,40503816,40505850,40507878,40509881,40511916,40513911,40515950,40517960,40519976,40522015,40524046,40526094,40528131,40530175,40532139,40534163,40536178,40538156,40540210,40542234,40544288,40546338,40548372,40550352,40552375,40554370,40556389,40558429,40560458,40562507,40564536,40566574,40568517,40570486,40572443,40574417,40576276,40578259,40580234,40582213,40584219,40586214,40588249,40590263,40592254,40594255,40596091,40598084,40600063,40602064,40604096,40606056,40608052,40610066,40612013,40614022,40616050,40617966,40619903,40621814,40623566,40625322,40626838,40628404,40629835,40631420,40632902,40634213,40635648,40637118,40638461,40639638,40641182,40642423,40643800,40645022,40646546,40647670,40649060,40650331,40651209,40652742,40654073,40655410,40656565,40657806,40659381,40660211,40661446,40662854,40663998,40665526,40666672,40667977,40669267,40670454,40672042,40673164,40674609,40676111,40677439,40679007,40680362,40681874,40683378,40684839,40686476,40687697,40689181,40690694,40692018,40693463,40694853,40696162,40697500,40698593,40700216,40701460,40702907,40704126,40704936,40706592,40708005,40709293,40710487,40711735,40713328,40714180,40715412,40716872,40718099,40719694,40720746,40722050,40723279,40724653,40726087,40727435,40728885,40730397,40731625,40733248,40734677,40736194,40737779,40739102,40740706,40742000,40743514,40745042,40746248,40747859,40749076,40750460,40751740,40753127,40754547,40755840,40757288,40758496,40759348,40761013,40762419,40763647,40764845,40766093,40767696,40768481,40769706,40771142,40772308,40773904,40774963,40776290,40777554,40778931,40780380,40781751,40783216,40784702,40785935,40787568,40789024,40790501,40792075,40793449,40794949,40796330,40797819,40799218,40800368,40801980,40803168,40804637,40805807,40807366,40808616,40809864,40811280,40812378,40813372,40814886,40816312,40817402,40818688,40820149,40821344,40822336,40823612,40824946,40826095,40827547,40828740,40830106,40831253,40832797,40833952,40835368,40836858,40838184,40839786,40841189,40842713,40844213,40845685,40847297,40848529,40849991,40851471,40852886,40854171,40855689,40856947,40858301,40859424,40861025,40862246,40863738,40865031,40865907,40867514,40868843,40870195,40871359,40872658,40874297,40875185,40876355,40877771,40879045,40880534,40881704,40882994,40884224,40885465,40887073,40888301,40889824,40891336,40892573,40894173,40895542,40897068,40898643,40899995,40901644,40902905,40904403,40905920,40907199,40908864,40910037,40911457,40912741,40914030,40915501,40916735,40918150,40919309,40920200,40921805,40923186,40924428,40925637,40926957,40928508,40929368,40930623,40932090,40933259,40934876,40935937,40937296,40938534,40939934,40941386,40942743,40944244,40945754,40946992,40948547,40949999,40951541,40953167,40954486,40956075,40957472,40959058,40960579,40961723,40963316,40964547,40965897,40967149,40968439,40969842,40971055,40972485,40973688,40974545,40976138,40977505,40978744,40979936,40981202,40982806,40983632,40984899,40986332,40987453,40989013,40990075,40991393,40992666,40994125,40995464,40996694,40998172,40999695,41001059,41002678,41004124,41005685,41007247,41008637,41010285,41011641,41013204,41014726,41015905,41017429,41018808,41020148,41021444,41022556,41024179,41025328,41026738,41028022,41028883,41030471,41031818,41033187,41034348,41035578,41037153,41038009,41039192,41040619,41041805,41043165,41044390,41045660,41047049,41048339,41049977,41051100,41052585,41054159,41055582,41057098,41058575,41060092,41061540,41063109,41064692,41066052,41067494,41069010,41070375,41071574,41073241,41074484,41075884,41077011,41078649,41079820,41081320,41082651,41083532,41085051,41086335,41087707,41088813,41090115,41091564,41092726,41093764,41095112,41096500,41097726,41099239,41100408,41101783,41102941,41104588,41105805,41107295,41108740,41110048,41111628,41113076,41114673,41116176,41117693,41119383,41120669,41122172,41123708,41125052,41126287,41127904,41129238,41130651,41131801,41133434,41134609,41136113,41137472,41138386,41139843,41141149,41142559,41143676,41145048,41146247,41147655,41148595,41149960,41151428,41152709,41154345,41155413,41156834,41158137,41159729,41160986,41162382,41163921,41165395,41166690,41168387,41170015,41171579,41173210,41174596,41176299,41177540,41178754,41180065,41181469,41182771,41184621,41186090,41187531,41188711,41190027,41191599,41193058,41194582,41196363,41197726,41199078,41200370,41201930,41203349,41204837,41206640,41208071,41209514,41210789,41212128,41213614,41214983,41216390,41218206,41219698,41221253,41222570,41223829,41225305,41226535,41227880,41229352,41231011,41232107,41233343,41234591,41236195,41237708,41239009,41240422,41241943,41243336,41244811,41246504,41248249,41249953,41251838,41253394,41255335,41257223,41259054,41260753,41262620,41264438,41266244,41268143,41269146,41270251,41271976,41273680,41275465,41277159,41278823,41280460,41282010,41282730,41284144,41286125,41288037,41289719,41291248,41292322,41293914,41295578,41297402,41298792,41300585,41302233,41304201,41305719,41307631,41309302,41311138,41313032,41314924,41316806,41318455,41320050,41321975,41323608,41325539,41327094,41329034,41330704,41332434,41334325,41336224,41337933,41339792,41341609,41343446,41345335,41347196,41348856,41350538,41352147,41353705,41355307,41356899,41358411,41360152,41361613,41363237,41364843,41366367,41367909,41369321,41370933,41372431,41373846,41375323,41377178,41379034,41380942,41382685,41384575,41386410,41388210,41390020,41391964,41393871,41395626,41397496,41399341,41401176,41403094,41405093,41407036,41408972,41410909,41412893,41414839,41416793,41418662,41420630,41422584,41424541,41426461,41428283,41430093,41432002,41433828,41435884,41437939,41439982,41441984,41443895,41445739,41447367,41449331,41451258,41453176,41455191,41457117,41459112,41461048,41462981,41464931,41466852,41468808,41470704,41472581,41474554,41476472,41478386,41480330,41482256,41484149,41485964,41487835,41489741,41491624,41493494,41495329,41497122,41498855,41500594,41502277,41504018,41505365,41507134,41508942,41510519,41512407,41513858,41515608,41517271,41518822,41520638,41522160,41523453,41524662,41525753,41527036,41528403,41530137,41531788,41533175,41534246,41535922,41537602,41539002,41540074,41542097,41543962,41545754,41547499,41549303,41551075,41552750,41554622,41556420,41558111,41559785,41561470,41563185,41564738,41566519,41568262,41569737,41571395,41572847,41574404,41575977,41577314,41578627,41580288,41581871,41582944,41584013,41585642,41587127,41588667,41590610,41592652,41594623,41596594,41598560,41600479,41602303,41603852,41605429,41607316,41609324,41611143,41613024,41614938,41616778,41618558,41620222,41622062,41623699,41625536,41627415,41629209,41631004,41632729,41634514,41636088,41637659,41639306,41640852,41642555,41644327,41646124,41648031,41649472,41651327,41652753,41654439,41655652,41657475,41659363,41661151,41662872,41664266,41665583,41667368,41669020,41670639,41672145,41673726,41675421,41677060,41678552,41680204,41681795,41683451,41685082,41686315,41687924,41689454,41691023,41692726,41693935,41695572,41697031,41698709,41700363,41701640,41703156,41704726,41706300,41707480,41708677,41710129,41711291,41712773,41713972,41715594,41716693,41718053,41719489,41720769,41722314,41723588,41724901,41726433,41727881,41729394,41731089,41732737,41733984,41735800,41737645,41739549,41741369,41743044,41744920,41746895,41748290,41750026,41751307,41752980,41754522,41756545,41758578,41760361,41761934,41763718,41765425,41767263,41769095,41770692,41772513,41774327,41776077,41777837,41779597,41781045,41782586,41784109,41785295,41787193,41789076,41790715,41792303,41794154,41795583,41797418,41799291,41801043,41802580,41804239,41805943,41807660,41809323,41811088,41813114,41814605,41816105,41817944,41819565,41821416,41823073,41824792,41826166,41826692,41827240,41827674,41828396,41828994,41829645,41830074,41830742,41832268,41834271,41836247,41838206,41840137,41842103,41844062,41846015,41847968,41849759,41851395,41853010,41854655,41856429,41858031,41859700,41861224,41862764,41864481,41866077,41867795,41869224,41870708,41872163,41873605,41875048,41876411,41877962,41879508,41880822,41882008,41883331,41884795,41886250,41887745,41889170,41890487,41892096,41893574,41895187,41896610,41898031,41899383,41900791,41902207,41903651,41905000,41906392,41908181,41909948,41911737,41913611,41915503,41917397,41919218,41920961,41922752,41924473,41926147,41927916,41929719,41931554,41933304,41935018,41936707,41938116,41938944,41939749,41940646,41941850,41943552,41945238,41946927,41948569,41950275,41951855,41953362,41955016,41956736,41958407,41960051,41961785,41963451,41965235,41967021,41968906,41970692,41972497,41974119,41975611,41977399,41978982,41980699,41982184,41984115,41985670,41987524,41989322,41991184,41992820,41994676,41996475,41998371,41999502,42000588,42001584,42002674,42003737,42004807,42005873,42006939,42008489,42010040,42011616,42013135,42014720,42016259,42017798,42019332,42020936,42022446,42023934,42025598,42027202,42028678,42029743,42030777,42031817,42033047,42034487,42035925,42037711,42039479,42041025,42042171,42043477,42044944,42046224,42047322,42048862,42050505,42051776,42053350,42054989,42056541,42058086,42059724,42061325,42062657,42063792,42064605,42065711,42066352,42067308,42068054,42068807,42070317,42071688,42072824,42073333,42074209,42074757,42075396,42076004,42076521,42077459,42078167,42079088,42079624,42080411,42081072,42081760,42082553,42083072,42083941,42084673,42085615,42086113,42086753,42087544,42088245,42089090,42089522,42090322,42090905,42091719,42091980,42092253,42092732,42092922,42093587,42093813,42094414,42094641,42095037,42095385,42095555,42096057,42096223,42096751,42096791,42097247,42097461,42097695,42098162,42098345,42099611,42101038,42102541,42103735,42104949,42106161,42107484,42108511,42109489,42110463,42111461,42112422,42113362,42114354,42115343,42116779,42118177,42119554,42120970,42122462,42123959,42125322,42126696,42128151,42129724,42131189,42132686,42134254,42135872,42137436,42138969,42140471,42142082,42143467,42144878,42146293,42147683,42149123,42150545,42151970,42153411,42154888,42156294,42157708,42159090,42160345,42161251,42162232,42163142,42164258,42165206,42166125,42167074,42168035,42169030,42169938,42170884,42171816,42173192,42174589,42176036,42177375,42178679,42179615,42180548,42181494,42182653,42184309,42185893,42187472,42189062,42190522,42192084,42193677,42195255,42196956,42198307,42199630,42200953,42202210,42203505,42204777,42206143,42207551,42209118,42210629,42212110,42213420,42214668,42216096,42217345,42218858,42220452,42222127,42223699,42225257,42226831,42228638,42230363,42232110,42233676,42235072,42236292,42237766,42239223,42240687,42241859,42243050,42244558,42245984,42247549,42249007,42250431,42251950,42253418,42255132,42256789,42258349,42260004,42261517,42263142,42264694,42266308,42268031,42269619,42271263,42272842,42274464,42275923,42277549,42279116,42280662,42282342,42284008,42285565,42287207,42288717,42290288,42291877,42293493,42295059,42296776,42298435,42300039,42301699,42303151,42304778,42306365,42307936,42309665,42311255,42312851,42314389,42315998,42317828,42319361,42320909,42322457,42324273,42325890,42327505,42329072,42330683,42332490,42334094,42335793,42337384,42338850,42339815,42340771,42341704,42342880,42344391,42345894,42347438,42348907,42350392,42351698,42352971,42354315,42355657,42356834,42358048,42359293,42360747,42361894,42362847,42363840,42365043,42366308,42367471,42368562,42369614,42370857,42371853,42372774,42373662,42375283,42377071,42378706,42380531,42382198,42383650,42385061,42386458,42387767,42389214,42390619,42392061,42393400,42395041,42396552,42398068,42399620,42401153,42402658,42404170,42405715,42407325,42408827,42410230,42411605,42412986,42414351,42415729,42417109,42418483,42420166,42421717,42423241,42424799,42426382,42427914,42429431,42430959,42432517,42434282,42435886,42437467,42439130,42440762,42442348,42443959,42445626,42447409,42448873,42450316,42451728,42453106,42454575,42456021,42457425,42458850,42460736,42462501,42464211,42465899,42467644,42469387,42471101,42472786,42474681,42476442,42478162,42479866,42481524,42483255,42484941,42486616,42488291,42489811,42490822,42492026,42493084,42494187,42495285,42496462,42497668,42498802,42499857,42500822,42501697,42502342,42503038,42503709,42505125,42506816,42508537,42510241,42511934,42513684,42515407,42517147,42518834,42520739,42522471,42524163,42525810,42527525,42529180,42530929,42532645,42534507,42536294,42538062,42539852,42541580,42543385,42545137,42546938,42548659,42550544,42552257,42553968,42555587,42557271,42558953,42560656,42562339,42564099,42565505,42566996,42568403,42569916,42571106,42572108,42573100,42574110,42575851,42577675,42579485,42581306,42582967,42584823,42586615,42588439,42590267,42591775,42592947,42594160,42595618,42597228,42598271,42599318,42600486,42602232,42603866,42605477,42607043,42608577,42610258,42611861,42613459,42615094,42616724,42618197,42619610,42621049,42622430,42623906,42625320,42626731,42628211,42629938,42631367,42632997,42634470,42635947,42637400,42638875,42640296,42642002,42643601,42645210,42646801,42648356,42649959,42651585,42653176,42654916,42656434,42657890,42659338,42660785,42662261,42663696,42665120,42666620,42668285,42670094,42671924,42673757,42675433,42677290,42679066,42680891,42682742,42684397,42686057,42687663,42689374,42690903,42692558,42694158,42695789,42697448,42698939,42700378,42701816,42703207,42704744,42706235,42707685,42709142,42711004,42712825,42714658,42716554,42718242,42720092,42721911,42723772,42725477,42727141,42728778,42730387,42731981,42733628,42735272,42736880,42738532,42740163,42741632,42743102,42744543,42745952,42747431,42748838,42750320,42751852,42753701,42755492,42757376,42759219,42760983,42762788,42764607,42766485,42767904,42768747,42770528,42771282,42771961,42773138,42773785,42774679,42775671,42776375,42777670,42778917,42779558,42780259,42781245,42782566,42783571,42784845,42786242,42787487,42788131,42789308,42790635,42791724,42793090,42794229,42795937,42797013,42798195,42799172,42800651,42802262,42803824,42805562,42807216,42808975,42810514,42812196,42813710,42815334,42816455,42817245,42818658,42820190,42821752,42822775,42823783,42824798,42825790,42827162,42828266,42829309,42830424,42831769,42833526,42835560,42837592,42839598,42841601,42843632,42845647,42847628,42849640,42851657,42853691,42855696,42857705,42859720,42861725,42863741,42865707,42867728,42869754,42871787,42873795,42875793,42877794,42879812,42881781,42883795,42885827,42887881,42889880,42891884,42893894,42895887,42897894,42899839,42901870,42903875,42905779,42907680,42909574,42911469,42913396,42915221,42917089,42918972,42920865,42922739,42924642,42926480,42928360,42930183,42932071,42933972,42935732,42937398,42939071,42940747,42942421,42944075,42945719,42947335,42949124,42950785,42952453,42954108,42955746,42957395,42959035,42960655,42962247,42963904,42965335,42966769,42968203,42969612,42971047,42972453,42973810,42975344,42976887,42978368,42979748,42981353,42982681,42984281,42985745,42987431,42988810,42990298,42991784,42993438,42994874,42996366,42997927,42999536,43000983,43002274,43003787,43005205,43007175,43008922,43010366,43012044,43013672,43015240,43016748,43018303,43020012,43021552,43023126,43024759,43026410,43028167,43029832,43031428,43032978,43034652,43036204,43037769,43039327,43040875,43042406,43043993,43045525,43046962,43048629,43050101,43051804,43053386,43054963,43056531,43058261,43059860,43061505,43063259,43065004,43066499,43068117,43070047,43071926,43073640,43075342,43077205,43079156,43081092,43083030,43084997,43086932,43088876,43090792,43092732,43094546,43096395,43098251,43100184,43102107,43103974,43105832,43107663,43109470,43111248,43113028,43114787,43116762,43118734,43120704,43122672,43124580,43126506,43128392,43130297,43132250,43134220,43136109,43138009,43139870,43141688,43143498,43145327,43147097,43149068,43151059,43153050,43155023,43156972,43158925,43160845,43162750,43164698,43166673,43168455,43170220,43171958,43173697,43175445,43177194,43178914,43180758,43182618,43184391,43186208,43188045,43189810,43191613,43193426,43195220,43197047,43198517,43199971,43201376,43202811,43204249,43205695,43207105,43208611,43210565,43212513,43214437,43216444,43218394,43220321,43222200,43224103,43226003,43227910,43229813,43231782,43233724,43235657,43237575,43239471,43241366,43243295,43245172,43247141,43248941,43250434,43251960,43253559,43255149,43256741,43258334,43259825,43261562,43263376,43265183,43266975,43268717,43270492,43272239,43273976,43275695,43277383,43278693,43280016,43281289,43282686,43283941,43285292,43286661,43288127,43289811,43291458,43293102,43294756,43296455,43298105,43299727,43301331,43303111,43304581,43306043,43307572,43309154,43310704,43312202,43313682,43315154,43316835,43318466,43320011,43321667,43323344,43324849,43326524,43327913,43329274,43330621,43331902,43333149,43334381,43335574,43336934,43338757,43340654,43342528,43344414,43346304,43348179,43350040,43351929,43353875,43355781,43357684,43359540,43361419,43363337,43365208,43367094,43368953,43370775,43372179,43373603,43374974,43376387,43377861,43379326,43380773,43382272,43384034,43385699,43387402,43389146,43390773,43392399,43393976,43395529,43396828,43398367,43399939,43401544,43403183,43404945,43406655,43408355,43410031,43411656,43413126,43414592,43416056,43417496,43418859,43420289,43421712,43423379,43424841,43426357,43427858,43429421,43430971,43432473,43433987,43435446,43437129,43438614,43440134,43441594,43442568,43444049,43445579,43447087,43448749,43450708,43452637,43454594,43456116,43457525,43458938,43460333,43461407,43462852,43464258,43465673,43467221,43468399,43469564,43470662,43471671,43472803,43473923,43475075,43476277,43477848,43479255,43480735,43482783,43484677,43486564,43488470,43490373,43492271,43494173,43496072,43497738,43499404,43500820,43502300,43503759,43504999,43505943,43506809,43507643,43508524,43509370,43510264,43511104,43511936,43512923,43513855,43514673,43515558,43516537,43517550,43518493,43519657,43520968,43522157,43523533,43524861,43525392,43525840,43526491,43527115,43527424,43527721,43528004,43528918,43530270,43531000,43532005,43532816,43534046,43535061,43536084,43537466,43537918,43538180,43538601,43538954,43539454,43540797,43542255,43543737,43545564,43547400,43549160,43550980,43552802,43554623,43556404,43558165,43559944,43561600,43563256,43564900,43566429,43568052,43569662,43571292,43572851,43574495,43575817,43577162,43578508,43579814,43581500,43583184,43584854,43586534,43588211,43589876,43591522,43593206,43594857,43596531,43598210,43599879,43601152,43602887,43604726,43606566,43608330,43610140,43611964,43613829,43615601,43617427,43618933,43620383,43621846,43623292,43625055,43626928,43628776,43630639,43632474,43634360,43636225,43638086,43639957,43641785,43643234,43645013,43646124,43647182,43648386,43649571,43650989,43653016,43655005,43656955,43658908,43660861,43662818,43664699,43666589,43668493,43670449,43672386,43674327,43676255,43678179,43680086,43682016,43684058,43685733,43687413,43689183,43691009,43692803,43694587,43696234,43697842,43699816,43701862,43703912,43705942,43707989,43710026,43712080,43714120,43716174,43718222,43720278,43722327,43724366,43726411,43728466,43730494,43732545,43734575,43736453,43738359,43740176,43742033,43743861,43745723,43747541,43749440,43751375,43753292,43755158,43757016,43758869,43760709,43762545,43764417,43766383,43768222,43769855,43770674,43771487,43772221,43772890,43773580,43774170,43774977,43775834,43776575,43776973,43777706,43778534,43779408,43779973,43780426,43781206,43782027,43782971,43783406,43783937,43784730,43785557,43786435,43787066,43787565,43788847,43789919,43791039,43791478,43792210,43793379,43794457,43795493,43795881,43796846,43797929,43798991,43799828,43800229,43801307,43802448,43803541,43804138,43805559,43806902,43808484,43809818,43811601,43812937,43813924,43815049,43816219,43817357,43818482,43819568,43820679,43821770,43822931,43824031,43825233,43826432,43827533,43828601,43829670,43830912,43832261,43833391,43834454,43835614,43836646,43837689,43838799,43839823,43840813,43841835,43842719,43843752,43844777,43845635,43846467,43847298,43848183,43849463,43849884,43850440,43850944,43851503,43852041,43852506,43853072,43853617,43854087,43854588,43855066,43855551,43856059,43856591,43857162,43857684,43859190,43860653,43862139,43863647,43865205,43866691,43868216,43869734,43871234,43872322,43873306,43874317,43875833,43877342,43878697,43880083,43881405,43882811,43884294,43886041,43887689,43889355,43891003,43892603,43894221,43895891,43897534,43899213,43901083,43902781,43904454,43906211,43907906,43909617,43911309,43913001,43914621,43915683,43916839,43918083,43919443,43920781,43922101,43923410,43924458,43925882,43927319,43928743,43930180,43931735,43933247,43934796,43936353,43938094,43939378,43940359,43941492,43942679,43943780,43944939,43945992,43947071,43948161,43949349,43950455,43951665,43952857,43953952,43954984,43956065,43957399,43958703,43959836,43960927,43962125,43963175,43964231,43965306,43966324,43967313,43968334,43969259,43970303,43971325,43972145,43972989,43973828,43974802,43975972,43976393,43976972,43977491,43978030,43978580,43979081,43979617,43980155,43980635,43981158,43981660,43982146,43982660,43983174,43983757,43984273,43986088,43987898,43989696,43991483,43993285,43995060,43996797,43998497,43999887,44001305,44002711,44004108,44005907,44007732,44009571,44011446,44013313,44015171,44016985,44018893,44020736,44022220,44023783,44025367,44026887,44028328,44030004,44031454,44033130,44034730,44036509,44038303,44040146,44041863,44043289,44044460,44045597,44046715,44048178,44049361,44051168,44052914,44054699,44056529,44058291,44060126,44061877,44063621,44065383,44066645,44067885,44069212,44070349,44071820,44072926,44074557,44076378,44078178,44080042,44081770,44083553,44085377,44087153,44088989,44090724,44092498,44094329,44095965,44097603,44099348,44101106,44102856,44104562,44106204,44107868,44109179,44110857,44112483,44114109,44115699,44117265,44118831,44120389,44122027,44123731,44125298,44127074,44128839,44130235,44131734,44133518,44135261,44136747,44138336,44139329,44140468,44141628,44142743,44143914,44145009,44146100,44147205,44148385,44149542,44150688,44151861,44152977,44154069,44155094,44156210,44157342,44158524,44159697,44160841,44161283,44162197,44163459,44164587,44165575,44166583,44167700,44168882,44170009,44170639,44171467,44172659,44173766,44174782,44175810,44176881,44178116,44179276,44180060,44180810,44181940,44183098,44184185,44185156,44186146,44187395,44188489,44189415,44190047,44191144,44192361,44193492,44194478,44195408,44196677,44197808,44198744,44199270,44200435,44201675,44202869,44204052,44205173,44206257,44207353,44208494,44209554,44210598,44211715,44212737,44213710,44214678,44215621,44216699,44217722,44218525,44219337,44220199,44221428,44222152,44223283,44224444,44225548,44225955,44227111,44228303,44229445,44230345,44231488,44232607,44233831,44235003,44236277,44237397,44238498,44239732,44240943,44242248,44243321,44244518,44245731,44246899,44248153,44249311,44250439,44251661,44252815,44254202,44255320,44256326,44257324,44258538,44259818,44260863,44261842,44262917,44264224,44265463,44266530,44267455,44268574,44269851,44271058,44272132,44273115,44274163,44275743,44276192,44276717,44277314,44278710,44280319,44282107,44283942,44285820,44287615,44289169,44290349,44290834,44291347,44291889,44292429,44292948,44294135,44295674,44297100,44298742,44300284,44301708,44303358,44304900,44306330,44307982,44309518,44310953,44312660,44314475,44316304,44318019,44319880,44321738,44323466,44325368,44327088,44328839,44330736,44332483,44334245,44336045,44337804,44339695,44341517,44343346,44345021,44346923,44348657,44350499,44352285,44354034,44355926,44357672,44359504,44361330,44363128,44364872,44366697,44368575,44370277,44372027,44373910,44375617,44377525,44379292,44381043,44382955,44384698,44386424,44388240,44390137,44391872,44393683,44395527,44397207,44399112,44400798,44402636,44404428,44406227,44408000,44409791,44411613,44413392,44415219,44417031,44418791,44420696,44422404,44424152,44426047,44427754,44429600,44431381,44433131,44435001,44436865,44438611,44440326,44442228,44443909,44445742,44447628,44449320,44451149,44452162,44453449,44454536,44455867,44457097,44458215,44459507,44460575,44461205,44461973,44462799,44463721,44464176,44464684,44465481,44466340,44467204,44467794,44468174,44469007,44469895,44470736,44471195,44471721,44472532,44473424,44474214,44475444,44476534,44477578,44478712,44479879,44481012,44482168,44483212,44484337,44485423,44486586,44487713,44488905,44490068,44491143,44492216,44493316,44494829,44496422,44497884,44499322,44500451,44501557,44502783,44503850,44504930,44506027,44507062,44508063,44509109,44510000,44511005,44512063,44512913,44513795,44514605,44515463,44516983,44518390,44519978,44520959,44521402,44521941,44522465,44522985,44523551,44524048,44524587,44525107,44525614,44526106,44526596,44527081,44527615,44528121,44528711,44529348,44531050,44532713,44534355,44536001,44537722,44539375,44540997,44542655,44544366,44546049,44547835,44549489,44551102,44552706,44554380,44556004,44556752,44557551,44558864,44560275,44561630,44563028,44564336,44565747,44567104,44568429,44569598,44570664,44571889,44572957,44574228,44575326,44576563,44577635,44578968,44580349,44581758,44583197,44584664,44586062,44587423,44588896,44590346,44591918,44593453,44594887,44596221,44597697,44599109,44600544,44601877,44603304,44604513,44605674,44606869,44607940,44609257,44610449,44611740,44612936,44614190,44615337,44616566,44617809,44619159,44620286,44621486,44622613,44623815,44625230,44626760,44628252,44629738,44631445,44632907,44634497,44635948,44637413,44638812,44640247,44641481,44642670,44643741,44644982,44646509,44647845,44648727,44650092,44651099,44651924,44653173,44654695,44656731,44658757,44660773,44662784,44664792,44666794,44668782,44670783,44672800,44674827,44676827,44678836,44680854,44682840,44684840,44686813,44688669,44690046,44691366,44692974,44694421,44695542,44696664,44697785,44698903,44700023,44701144,44702538,44704075,44705541,44707111,44708694,44710512,44712236,44713972,44715736,44717547,44719111,44720612,44722148,44723762,44725357,44726929,44728464,44730063,44730205,44730350,44732332,44734353,44736271,44738152,44740063,44741933,44743748,44745623,44747521,44749401,44751326,44753239,44755160,44757136,44759049,44760914,44762824,44764758,44766637,44768420,44770408,44772348,44774239,44776118,44778070,44779977,44781732,44783513,44785324,44787100,44789008,44790918,44792805,44794644,44796547,44798444,44800316,44802215,44804118,44806023,44807857,44809701,44811570,44813468,44815308,44816785,44818478,44820129,44821780,44823483,44825140,44826821,44828485,44830113,44831844,44833463,44835144,44836819,44838552,44840233,44841924,44843587,44845359,44847038,44848502,44850084,44851720,44853324,44854886,44856352,44857872,44859463,44861093,44862724,44864355,44865820,44867395,44868958,44870495,44872132,44873865,44875514,44877015,44878586,44880335,44882223,44884015,44885786,44887596,44889465,44891311,44893160,44895019,44896820,44898133,44899427,44900761,44902098,44903414,44904699,44906041,44907340,44908967,44910423,44911876,44913347,44914848,44916316,44917783,44919221,44920830,44922271,44923725,44925163,44926623,44928120,44929558,44930995,44932417,44934029,44935466,44936925,44938349,44939868,44941337,44942777,44944199,44945806,44947263,44948689,44950096,44951559,44953065,44954514,44955943,44957352,44958962,44960374,44961736,44963168,44964667,44966116,44967525,44968944,44970478,44971942,44973335,44974697,44976179,44977637,44979061,44980479,44981878,44983496,44984889,44986243,44987701,44989124,44990615,44992018,44993424,44994906,44996471,44997850,44999277,45000775,45002227,45003725,45005150,45006588,45008233,45009696,45011116,45012577,45014081,45015558,45017010,45018456,45019843,45021410,45022748,45024060,45025437,45026793,45028130,45029432,45030676,45032216,45033561,45034865,45036208,45037575,45038912,45040294,45041621,45042885,45044455,45045771,45047068,45048409,45049732,45051070,45052380,45053681,45055172,45056647,45058092,45059553,45061054,45062527,45063996,45065461,45066824,45068468,45069894,45071268,45072737,45074231,45075705,45077167,45078564,45080086,45081614,45082985,45084388,45085839,45087290,45088726,45090130,45091518,45093143,45094547,45095959,45097385,45098841,45100317,45101736,45103138,45104533,45106151,45107524,45108911,45110341,45111838,45113299,45114720,45116149,45117754,45119202,45120636,45122066,45123522,45125014,45126469,45127897,45129300,45131074,45132789,45134628,45136330,45138244,45139828,45141562,45143355,45145174,45147003,45148772,45150441,45152097,45153924,45155701,45157411,45159203,45161056,45162846,45164726,45166556,45168464,45170303,45172212,45174058,45175912,45177788,45179619,45181382,45183212,45185035,45186832,45188598,45190418,45192397,45194121,45195852,45197541,45199278,45200986,45202669,45204342,45206098,45207957,45209694,45211408,45213108,45214837,45216571,45218256,45219964,45221844,45223723,45225553,45227380,45229186,45230975,45232827,45234628,45236421,45238323,45240048,45241824,45243556,45245296,45247015,45248783,45250551,45252412,45254163,45256046,45257883,45259713,45261541,45263308,45265078,45266867,45268647,45270476,45272183,45273930,45275612,45277185,45278933,45280657,45282293,45284071,45285917,45287639,45289414,45291081,45292714,45294370,45296005,45297814,45299735,45301384,45303012,45304659,45306312,45308002,45309683,45311377,45313020,45314789,45316478,45318082,45319729,45321442,45323133,45324831,45326495,45328297,45330089,45331859,45333624,45335411,45337242,45339018,45340845,45342617,45344458,45346251,45347934,45349686,45351476,45353265,45355038,45356797,45358625,45360321,45362024,45363718,45365459,45367195,45368914,45370586,45372307,45374089,45375780,45377472,45379206,45380888,45382570,45384272,45385995,45387754,45389517,45391206,45392908,45394519,45396180,45397832,45399564,45401286,45403062,45404498,45406010,45407528,45409054,45410571,45412078,45413566,45415095,45417124,45419079,45421007,45422988,45424995,45426933,45428913,45430874,45432774,45434736,45436721,45438741,45440696,45442630,45444614,45446603,45448633,45450321,45450980,45451020,45451059,45451099,45451416,45451456,45451496,45451535,45451966,45453846,45455636,45457479,45459344,45461168,45463007,45464812,45466612,45468467,45469930,45471431,45472876,45474343,45475764,45477251,45478681,45480178,45482090,45483901,45485676,45487427,45489234,45491015,45492779,45494548,45495889,45496747,45496787,45496827,45496865,45496905,45497217,45497257,45497297,45497335,45498273,45499362,45501057,45502730,45504406,45506075,45507772,45509462,45511147,45512851,45514380,45515624,45516975,45518397,45519360,45520504,45522041,45523393,45524478,45525826,45527629,45529241,45530933,45531011,45531049,45531089,45531127,45531445,45531485,45531523,45531563,45532351,45533540,45534892,45536098,45537249,45539061,45540673,45542307,45543993,45545661,45547343,45549008,45550628,45551931,45551970,45552010,45552042,45552309,45553297,45553425,45553590,45555074,45556947,45558977,45560618,45562284,45563900,45565533,45567208,45568889,45570628,45572360,45574043,45575789,45577527,45579276,45581018,45582733,45584436,45586104,45587900,45588856,45590131,45590170,45591583,45593394,45595113,45596845,45598603,45600346,45602122,45603804,45605598,45607409,45609258,45611136,45613043,45614823,45616752,45618526,45620358,45622298,45624162,45625781,45627460,45629149,45630882,45632697,45634493,45636181,45638072,45639877,45641826,45643603,45645571,45647339,45649318,45651118,45653057,45654983,45656465,45657848,45659139,45660359,45661755,45663350,45664875,45666290,45667650,45669027,45670257,45671552,45672780,45674115,45675429,45676880,45678533,45679125,45679965,45680837,45681833,45683303,45684930,45685887,45686556,45687226,45688037,45689548,45691148,45692860,45694202,45695076,45696320,45698012,45699288,45700395,45701245,45702101,45703063,45703706,45704400,45705356,45706640,45707975,45709206,45710428,45711818,45713189,45714553,45715827,45717447,45719215,45720961,45722764,45724495,45726261,45727959,45729720,45731436,45733217,45734984,45736739,45738471,45740248,45742060,45743822,45745575,45746577,45747532,45748469,45749380,45751133,45753108,45754712,45756688,45758448,45759531,45760770,45761945,45763318,45765315,45767339,45769356,45771372,45773281,45775208,45777094,45778960,45780941,45782986,45785030,45787072,45789065,45790838,45792646,45794475,45796324,45798120,45799927,45801653,45803441,45805134,45806796,45808423,45810015,45811816,45813290,45814573,45815906,45817623,45818819,45820050,45821305,45822596,45823916,45825097,45826383,45827645,45829394,45830668,45831885,45833026,45834580,45836019,45836755,45837626,45839319,45840993,45841824,45842619,45844096,45845681,45846578,45847312,45848441,45849757,45851242,45852655,45854020,45855776,45857639,45859493,45861378,45863230,45865118,45867043,45869010,45870953,45872761,45874456,45876103,45877749,45879420,45881148,45882932,45884737,45886452,45887953,45889363,45890776,45892241,45893795,45895256,45896645,45898088,45899706,45901221,45902641,45904129,45905755,45907278,45908728,45910236,45911799,45913773,45915771,45917720,45919641,45921660,45923663,45925616,45927589,45929594,45931359,45933124,45934856,45936613,45938324,45939871,45941424,45943027,45944965,45946861,45948635,45950521,45952438,45954217,45956038,45957841,45959742,45961648,45963533,45965380,45967297,45969137,45970945,45972711,45974546,45976475,45977727,45979220,45980494,45981924,45983166,45984373,45986037,45987212,45988386,45989616,45990892,45992575,45993641,45994890,45996326,45998211,45999993,46001758,46003532,46005402,46007188,46008974,46010766,46012574,46014432,46016268,46018076,46019889,46021185,46022046,46022869,46023633,46024703,46025851,46027014,46028189,46029464,46030582,46031850,46033021,46034235,46035567,46036983,46038352,46039652,46041369,46043223,46045083,46046932,46048815,46050665,46052502,46054351,46056193,46058127,46060034,46061955,46063861,46065796,46067708,46069641,46071587,46073463,46075254,46077057,46078848,46080513,46082305,46084024,46085668,46087250,46088772,46090597,46092343,46094141,46095985,46097809,46099546,46101407,46103163,46104648,46106044,46107526,46109027,46110574,46112237,46114003,46115548,46117095,46118793,46120392,46122102,46123784,46125513,46127258,46129043,46130876,46132770,46134821,46136876,46138790,46140777,46142744,46144733,46146684,46148704,46150643,46152627,46154537,46156350,46157489,46158839,46160200,46161273,46163091,46164881,46166632,46168383,46170056,46171627,46173225,46174816,46176456,46178267,46180053,46181832,46183610,46185416,46187214,46189030,46190792,46192565,46194260,46195953,46197640,46199250,46200993,46202812,46204607,46206182,46207292,46208421,46209442,46210700,46212057,46212613,46213156,46214010,46215698,46216272,46217836,46218396,46219850,46220378,46221074,46221581,46222451,46223242,46223992,46224728,46225479,46226309,46227521,46228780,46229926,46231268,46232648,46233960,46235396,46236915,46238364,46239712,46241263,46242751,46244295,46245822,46247248,46248777,46250361,46251873,46253240,46254751,46256324,46257741,46259064,46260551,46262076,46263618,46265029,46266452,46267925,46268613,46268857,46269055,46269266,46270117,46270603,46271054,46271523,46272663,46274695,46276735,46278782,46280819,46282852,46284901,46286937,46288949,46290999,46292959,46294901,46296868,46298761,46300669,46302594,46304498,46306396,46307784,46309166,46310613,46312050,46313332,46314523,46315692,46316775,46318115,46319527,46320912,46322405,46323923,46325795,46327606,46329427,46331284,46333178,46334978,46336759,46338600,46340471,46342238,46343982,46345705,46347544,46349327,46351084,46352796,46354488,46355939,46357240,46358522,46359922,46361458,46362786,46364113,46365482,46367234,46369002,46370755,46372531,46374213,46375449,46376696,46377907,46379215,46381098,46382892,46384680,46386500,46388089,46389526,46390967,46392427,46394111,46396147,46398170,46400201,46402226,46404228,46406235,46408213,46410201,46411864,46413389,46414881,46416365,46418135,46419824,46421482,46423162,46424984,46426981,46428967,46430950,46432961,46434726,46436439,46438178,46439927,46441943,46443989,46446032,46448086,46449995,46451531,46453152,46453681,46454212,46454744,46455277,46456394,46457804,46459219,46460607,46461640,46463003,46464476,46466068,46467268,46468703,46470273,46471883,46473261,46474958,46476575,46478417,46480058,46481962,46483744,46485039,46486304,46487611,46488858,46489958,46490893,46491911,46492853,46494171,46495033,46495876,46496811,46497764,46498907,46499661,46500363,46502197,46504184,46506166,46508120,46509589,46511529,46513516,46515511,46517509,46519397,46521297,46523178,46525077,46527081,46529087,46530423,46532430,46534400,46536273,46538163,46540059,46541850,46543876,46545801,46547810,46549804,46551317,46553006,46554645,46556083,46557578,46559119,46560698,46562183,46563852,46565745,46567637,46569487,46571381,46573239,46575133,46576985,46578859,46580724,46582184,46583632,46585155,46587086,46589054,46591014,46592999,46595000,46596822,46598611,46600405,46602179,46604081,46605963,46607884,46609753,46611358,46612778,46614214,46615597,46617069,46618554,46620093,46621576,46623095,46624585,46626311,46628011,46629615,46631143,46632707,46634263,46635795,46637471,46639201,46640809,46642558,46644299,46645986,46647663,46649421,46651100,46652809,46654469,46655998,46657695,46659306,46661002,46662517,46664204,46665907,46667415,46668886,46670469,46671973,46673618,46675178,46676793,46678425,46679827,46681349,46682833,46684369,46685838,46687336,46688943,46690629,46692077,46693395,46694651,46696227,46697860,46699565,46701205,46702643,46704360,46705924,46707620,46709391,46711117,46712644,46714241,46715773,46717450,46718993,46720531,46722139,46723631,46725135,46726668,46728302,46729766,46731128,46732499,46733693,46734848,46735986,46737252,46738491,46739886,46741363,46742705,46744074,46745639,46746965,46748186,46749558,46751420,46753161,46754902,46756389,46757639,46758635,46759669,46760531,46761553,46762622,46763769,46765100,46766416,46768037,46769620,46771224,46772987,46774863,46776148,46777484,46779015,46780461,46781975,46783429,46784897,46786274,46787812,46789514,46791204,46792914,46794618,46796292,46798017,46799804,46801789,46803447,46805246,46807001,46808528,46809900,46811267,46812573,46813956,46815471,46817070,46818659,46820277,46821843,46823231,46824659,46826002,46827737,46829010,46830407,46831759,46833153,46834568,46835963,46837624,46839113,46840625,46842059,46843487,46844924,46846399,46847902,46849382,46850883,46852698,46854394,46855892,46857328,46858684,46860053,46861421,46862815,46864231,46865743,46867453,46869201,46870928,46872509,46874017,46875529,46876945,46878514,46880120,46881558,46883026,46884401,46885846,46887240,46888854,46890532,46892177,46893747,46895179,46896732,46898188,46899617,46901080,46902531,46904049,46905660,46907108,46907397,46907850,46909498,46910990,46911279,46911687,46913307,46914750,46915042,46915422,46917069,46918566,46918875,46919231,46920886,46922391,46922687,46923007,46924628,46926161,46926455,46926780,46928148,46929372,46930736,46931946,46933373,46934628,46935908,46937189,46938589,46939873,46941173,46942459,46943879,46945201,46946480,46947820,46949098,46950552,46952030,46953301,46954517,46955749,46956967,46958241,46959512,46960781,46962161,46963456,46964657,46965889,46967113,46968328,46969478,46970676,46971863,46973371,46974667,46975965,46977204,46978437,46979656,46980923,46982203,46983522,46985427,46987119,46988908,46990569,46992222,46993870,46995760,46997744,46999027,47000366,47001692,47003082,47004417,47005791,47007117,47008418,47009783,47011126,47012538,47013855,47015251,47016594,47018007,47019358,47020992,47022722,47024348,47025963,47027569,47029152,47030751,47032234,47033551,47034912,47036293,47037671,47039199,47040711,47042253,47043718,47045309,47047126,47048920,47050551,47052128,47053711,47055330,47056946,47058449,47059808,47061150,47062533,47063926,47065434,47066933,47068467,47069895,47071487,47073250,47075116,47076776,47078345,47079927,47081557,47083148,47084669,47086071,47087368,47088774,47090173,47091661,47093197,47094737,47096147,47097723,47099440,47101333,47103025,47104592,47106176,47107825,47109402,47110916,47112336,47113630,47115003,47116402,47117878,47119440,47120982,47122410,47123934,47125648,47127450,47128700,47129966,47131040,47131972,47132921,47134086,47135163,47136324,47137460,47138735,47140003,47141140,47142061,47143040,47144095,47145207,47146871,47148123,47149431,47150518,47151506,47152470,47153618,47154681,47155808,47156913,47158196,47159458,47160654,47161581,47162609,47163662,47164737,47166435,47168376,47170275,47172213,47174171,47176136,47178070,47180023,47181918,47183785,47185575,47187356,47189245,47191121,47193078,47195010,47196954,47198409,47200370,47202323,47204262,47206231,47208232,47210205,47212129,47214091,47215861,47217001,47218147,47219315,47220642,47221781,47222928,47224057,47225197,47227031,47228793,47230543,47232323,47234113,47235870,47237689,47239470,47241208,47242982,47244742,47246552,47248295,47249979,47251733,47253745,47255687,47257565,47259438,47261344,47263307,47264813,47265543,47266472,47268464,47270420,47272428,47274411,47276352,47278340,47280326,47282283,47284289,47286248,47288215,47290185,47292149,47294156,47296115,47298069,47300032,47301785,47303346,47304917,47306499,47308064,47309633,47311186,47312756,47314447,47316262,47317880,47319562,47321185,47322885,47324591,47326283,47328033,47329685,47331359,47332818,47334406,47335849,47337624,47339239,47340986,47342614,47344405,47346078,47347782,47349529,47351295,47353140,47354899,47356738,47358553,47360365,47361992,47363693,47365303,47367117,47368793,47370591,47372238,47373987,47375590,47377121,47378747,47380289,47381978,47383599,47385386,47387065,47388833,47390497,47392289,47394055,47395873,47397468,47399036,47400755,47402439,47404252,47406058,47407883,47409652,47411478,47413272,47415114,47416911,47418702,47420383,47422118,47423839,47425431,47427027,47428614,47430343,47431994,47433840,47435554,47437431,47439173,47440923,47442564,47444401,47446129,47447894,47449150,47451066,47452965,47454754,47456622,47458570,47460438,47462018,47463550,47465329,47467334,47469354,47471302,47473104,47474545,47475792,47476866,47478172,47479307,47480396,47482178,47483808,47485394,47486916,47488365,47489894,47491388,47492922,47494656,47495807,47496931,47497772,47498752,47500070,47501121,47502094,47503151,47504250,47505553,47507386,47509163,47511050,47512859,47514704,47516506,47518381,47520163,47522011,47523690,47525315,47527092,47528692,47530484,47532207,47533898,47535746,47537648,47539421,47541299,47543112,47544953,47546790,47548644,47550423,47552302,47554048,47555650,47557413,47559058,47560815,47562560,47564278,47566070,47567866,47569731,47571586,47573444,47575327,47577154,47579052,47580872,47582833,47584758,47586669,47588653,47590533,47592481,47594432,47596467,47598392,47600355,47602158,47603885,47605688,47607437,47609268,47611105,47612940,47614729,47616113,47617552,47619237,47620597,47621873,47623476,47625000,47626772,47628103,47629103,47630499,47631897,47632981,47634047,47634411,47634756,47636034,47637300,47638595,47639895,47641222,47642662,47643963,47645284,47646565,47648012,47649365,47650662,47652022,47653293,47654723,47656067,47657355,47658732,47660033,47661489,47663076,47664167,47665667,47667038,47668941,47670858,47672824,47674868,47676901,47678912,47680913,47682862,47684842,47686472,47688054,47689593,47691083,47692809,47694366,47696106,47697830,47699374,47701127,47702904,47704499,47706277,47707835,47709443,47711077,47712718,47714374,47716178,47718087,47719983,47721788,47723418,47725160,47727001,47728929,47730863,47732704,47734364,47736137,47737971,47739893,47741702,47743448,47745101,47746973,47748891,47750796,47752672,47754273,47756065,47757980,47759941,47761878,47763788,47765487,47767196,47769080,47770965,47772834,47774590,47775863,47776838,47777834,47778831,47780248,47781748,47783342,47784932,47786579,47788198,47789892,47791527,47793144,47794763,47796595,47798292,47800033,47801768,47803388,47805092,47806714,47808348,47810024,47811739,47813672,47815399,47817105,47818850,47820559,47822329,47824063,47825661,47827377,47829041,47830794,47832447,47834300,47836240,47837980,47839241,47841231,47843127,47844994,47846909,47848855,47850790,47852658,47854351,47856113,47857759,47859433,47861227,47863167,47865027,47866929,47868822,47870725,47872719,47874649,47876603,47878544,47880468,47882282,47884061,47885844,47887645,47889552,47891508,47893388,47895266,47897196,47899096,47900951,47902806,47904431,47905792,47907037,47908466,47910139,47911739,47913391,47915027,47916932,47918701,47920456,47922212,47923984,47925711,47927498,47929271,47931028,47932812,47934583,47936263,47937031,47937587,47938220,47939260,47940284,47941264,47942601,47943858,47945140,47946166,47947980,47949676,47951307,47952865,47954627,47956204,47957851,47959534,47961088,47962593,47964214,47965660,47966956,47968266,47969859,47971517,47973229,47974889,47976567,47978284,47979955,47981563,47983281,47984800,47986319,47987866,47989394,47991075,47992648,47994319,47995863,47997538,47999118,48000711,48002326,48003889,48005561,48007071,48008712,48010183,48011726,48013342,48014835,48016496,48017948,48019477,48021133,48022706,48024354,48025903,48027320,48029194,48031002,48032828,48034705,48036569,48038422,48040287,48042093,48043982,48045800,48047613,48049451,48051362,48053267,48055145,48057001,48058873,48060868,48062875,48064836,48066749,48068655,48070537,48072476,48074391,48076323,48078219,48080155,48082050,48083920,48085772,48087655,48089552,48091432,48093182,48094822,48096462,48098246,48099877,48101484,48103094,48104730,48106343,48107974,48109609,48111210,48112962,48114609,48116256,48117915,48119572,48121204,48122861,48124508,48126251,48127898,48129551,48131182,48132839,48134468,48136107,48137751,48139388,48141307,48143167,48145045,48146878,48148739,48150604,48152446,48154309,48156159,48158068,48159937,48161758,48163595,48165430,48167277,48169124,48170970,48172924,48174796,48176634,48178491,48180357,48182202,48184039,48185919,48187789,48189336,48190732,48192156,48193578,48194883,48196329,48197725,48199302,48200669,48201987,48203481,48204947,48206379,48207804,48209682,48211562,48213398,48215211,48217013,48218854,48220691,48222589,48224538,48226162,48227905,48229622,48231304,48233011,48234641,48236493,48238056,48239783,48241386,48243099,48244855,48246577,48248306,48250079,48251788,48253410,48255049,48256945,48258773,48260607,48262463,48264063,48265908,48267762,48269621,48271456,48273328,48274968,48276720,48278488,48280252,48282051,48283780,48285447,48287212,48288883,48290574,48292396,48293982,48295723,48297474,48299268,48301005,48302784,48304488,48306164,48307859,48309478,48311159,48312878,48314537,48315982,48317492,48318983,48320580,48322141,48323770,48325254,48326921,48328480,48329990,48331652,48333332,48334885,48336452,48338030,48339623,48341132,48342682,48344250,48346082,48347893,48349662,48351409,48353158,48354925,48356552,48357969,48359511,48361261,48363067,48364843,48366558,48368325,48369893,48371381,48373080,48374831,48376548,48378065,48379462,48380886,48382624,48384423,48386001,48387407,48389034,48390466,48391963,48393624,48395059,48396745,48398238,48399709,48401226,48402761,48404266,48405841,48407281,48408715,48410243,48411748,48413334,48414823,48416318,48417824,48419452,48421007,48422499,48424068,48425416,48426895,48428337,48429833,48431718,48433561,48435413,48437213,48439020,48440829,48442598,48444368,48446044,48447591,48449403,48451099,48452859,48454664,48456275,48458044,48459814,48461450,48463370,48465381,48467416,48469428,48471440,48473443,48475447,48477170,48478953,48480743,48482335,48484105,48485823,48487612,48489248,48490970,48492718,48494486,48496193,48497957,48499682,48501422,48503144,48504786,48506467,48508080,48509893,48511539,48513347,48515002,48516698,48518437,48520135,48521822,48523535,48525214,48526958,48528639,48530444,48531986,48533430,48535069,48536831,48538534,48540219,48541978,48543610,48545049,48546607,48548134,48549678,48551070,48552551,48554073,48555585,48557252,48559060,48560762,48562490,48564264,48565930,48567644,48569392,48571094,48572703,48574385,48576022,48577714,48579315,48580941,48582565,48584261,48585895,48587566,48589165,48590822,48592507,48594140,48595807,48597432,48599183,48600817,48602477,48604102,48605791,48607413,48609059,48610702,48612418,48614067,48615717,48617384,48619040,48620747,48622358,48623974,48625573,48627346,48628979,48630667,48632334,48634137,48635783,48637435,48639056,48640719,48642409,48644008,48645685,48647357,48649155,48650762,48652367,48654008,48655718,48657364,48659239,48661024,48662693,48664315,48666115,48667923,48669527,48671267,48673062,48674863,48676582,48678481,48680369,48682242,48684173,48686193,48688143,48690083,48692033,48694007,48695752,48697622,48699558,48701546,48703577,48705598,48707589,48709407,48711324,48713184,48714994,48716887,48718881,48720906,48722938,48724929,48726904,48728868,48730787,48732694,48734568,48736473,48738379,48740301,48742263,48744262,48746001,48747908,48749790,48751676,48753536,48755306,48756898,48758530,48760474,48762252,48764052,48765623,48767237,48768860,48770483,48772088,48773863,48774945,48775878,48776919,48777934,48779187,48780425,48781546,48782834,48784037,48785343,48786474,48787778,48788983,48790236,48791379,48792619,48793880,48795551,48797281,48799107,48800803,48802509,48804209,48805935,48807665,48809321,48811033,48812714,48814469,48816127,48817798,48819480,48821187,48822765,48824538,48826168,48827804,48829455,48831183,48832866,48834521,48836153,48837856,48839521,48841221,48842878,48844582,48846378,48848071,48849815,48851509,48853210,48854953,48856664,48858398,48860233,48861987,48863643,48865394,48867232,48869241,48871221,48873262,48875318,48877356,48879397,48881421,48883448,48885474,48887512,48889547,48891585,48893633,48895686,48897731,48899785,48901828,48903714,48905572,48907446,48909373,48911297,48913189,48915069,48916943,48918824,48920461,48922148,48923685,48925430,48927202,48928864,48930409,48932100,48933811,48935492,48937175,48938878,48940489,48942143,48943932,48945723,48947325,48949053,48950708,48952229,48953837,48955271,48957017,48958833,48960677,48962395,48964060,48965707,48967486,48969374,48971231,48973091,48974889,48976667,48978310,48980139,48981976,48983810,48985373,48987392,48989367,48991404,48993327,48995216,48997142,48998715,49000442,49002151,49003896,49005595,49007388,49009178,49010925,49012593,49014370,49016058,49017757,49019434,49021191,49022773,49024265,49025780,49027310,49028828,49030355,49031893,49033402,49034924,49036458,49037966,49039515,49041015,49042574,49044100,49045626,49047140,49048484,49049512,49050369,49051417,49052262,49053854,49055307,49056643,49058034,49059383,49060799,49062169,49063600,49065127,49066753,49068497,49070145,49071777,49073416,49075037,49076693,49078394,49080174,49081890,49083533,49085229,49087022,49088789,49090513,49092220,49093976,49095602,49097299,49098969,49100428,49101708,49103304,49104973,49106672,49108560,49110464,49112377,49114261,49116155,49118041,49119947,49121869,49123814,49125734,49127290,49128889,49130393,49131889,49133323,49134839,49136686,49138649,49140552,49142364,49143983,49145466,49147054,49148721,49150619,49152533,49154305,49155926,49157603,49159245,49160865,49162471,49164153,49165872,49167643,49168859,49170489,49172204,49173890,49175603,49177363,49178891,49180110,49181705,49182946,49184378,49185882,49187595,49189363,49191127,49192412,49193881,49195360,49196685,49198106,49199468,49200814,49202151,49203450,49204829,49206371,49207771,49209076,49210396,49211735,49213038,49214361,49215624,49217070,49218522,49219902,49221498,49223038,49224730,49226405,49227754,49228888,49230377,49231591,49232965,49234462,49236104,49237702,49239130,49240297,49241667,49243278,49244706,49246034,49247328,49248551,49249794,49251132,49252580,49254235,49255511,49257206,49258923,49260687,49262418,49264120,49265682,49267101,49268773,49270144,49271788,49273326,49275034,49276737,49278158,49279361,49281019,49282383,49283768,49285256,49286915,49288545,49289974,49291371,49292679,49294331,49295607,49297072,49298629,49300317,49302079,49303792,49305216,49306873,49308401,49309810,49311374,49312790,49314294,49315761,49317306,49318732,49320578,49322353,49324081,49325822,49327592,49327733,49327878,49329092,49329690,49330327,49330984,49331537,49332011,49332672,49333372,49333916,49335216,49336051,49337125,49338554,49339943,49341326,49342756,49344170,49345758,49347340,49349025,49350611,49352217,49353776,49355414,49357243,49358748,49359788,49360899,49362098,49363333,49364668,49365930,49367230,49368536,49369982,49371533,49373134,49374669,49376189,49377777,49379467,49380994,49382317,49383746,49385044,49385761,49385786,49385816,49385841,49386480,49387068,49388420,49388962,49390543,49392179,49393841,49395439,49397068,49398210,49399881,49401380,49402965,49404493,49406253,49408166,49410115,49412014,49413968,49415879,49417676,49419151,49420651,49422161,49423400,49424376,49425358,49426616,49427977,49429393,49430839,49432329,49433859,49435300,49436941,49438677,49440373,49441919,49443508,49445015,49446587,49448187,49449672,49451244,49453027,49455083,49457131,49459174,49461173,49463045,49465021,49467044,49468958,49470688,49472614,49474505,49476469,49478484,49480522,49482534,49484569,49486594,49488621,49490609,49492646,49494695,49496658,49498380,49500290,49502293,49504298,49506318,49508198,49509868,49511397,49512612,49513803,49514994,49516546,49518560,49520428,49522144,49523929,49525840,49527711,49529451,49531235,49533039,49534968,49536979,49539012,49541002,49543021,49545059,49547029,49549070,49550916,49552440,49553994,49555554,49557070,49558580,49560155,49561658,49563155,49564510,49565879,49567221,49568546,49569832,49571146,49572474,49574105,49576134,49578132,49580165,49582126,49584149,49586072,49588020,49589970,49591984,49593791,49595508,49597149,49598825,49600513,49602201,49603288,49603652,49604289,49605596,49606859,49608175,49609094,49610160,49611055,49612146,49613408,49615069,49616762,49618330,49620078,49621816,49623470,49624994,49626600,49628159,49629768,49631309,49632917,49634407,49635901,49637104,49638457,49639525,49640705,49641926,49643237,49644461,49645844,49647264,49648824,49650393,49651973,49653428,49654870,49656307,49657488,49658483,49659663,49661263,49662741,49663356,49664653,49665893,49667311,49668848,49670322,49671795,49673248,49674379,49675772,49677316,49679085,49681029,49682710,49684049,49685337,49686566,49688064,49689626,49691269,49692870,49694518,49696094,49697702,49699194,49700748,49702239,49703646,49704883,49706341,49707899,49709446,49710799,49712181,49713575,49714978,49716338,49717477,49717945,49718590,49719044,49719960,49721395,49722946,49724495,49726008,49727440,49728977,49730518,49731995,49733362,49734663,49735847,49737050,49738379,49739812,49741341,49742602,49743689,49744682,49745569,49746930,49748672,49750588,49752390,49754138,49755714,49757003,49758044,49759248,49760806,49762394,49763951,49765517,49767097,49768670,49770213,49771986,49773717,49775541,49777246,49779077,49780831,49782714,49784456,49786132,49787533,49788956,49790315,49791742,49793178,49794702,49796392,49798210,49800182,49802129,49804027,49805968,49807940,49809887,49811785,49813750,49815652,49817397,49818969,49820085,49820821,49821769,49822631,49823863,49825350,49827003,49828658,49830363,49831846,49833484,49834784,49836099,49837339,49838293,49838809,49839711,49840502,49841370,49841982,49843089,49844482,49845580,49846113,49846733,49847208,49848395,49850170,49851731,49852819,49853931,49854945,49856172,49857574,49858886,49859947,49861037,49861954,49863133,49864583,49866061,49867511,49868953,49870386,49871994,49873671,49875464,49877097,49878924,49880793,49882576,49884140,49885453,49886483,49887738,49888895,49890099,49891092,49892178,49893044,49894242,49895233,49896470,49897719,49898779,49899260,49899898,49900524,49901208,49901709,49902306,49902925,49903567,49904068,49904700,49905321,49906009,49906538,49907193,49907807,49908455,49908873,49909405,49909966,49911232,49913119,49914702,49915737,49916889,49917913,49919062,49920092,49921230,49922356,49923797,49925585,49927187,49928909,49930615,49932291,49933936,49935645,49937130,49938279,49939707,49941381,49943036,49944755,49946547,49948411,49949579,49949739,49950050,49950319,49950670,49950873,49951208,49951482,49951829,49951884,49952146,49952171,49952372,49952520,49952804,49953073,49953391,49953558,49954391,49955889,49957408,49959075,49960483,49961547,49962596,49963685,49964886,49966093,49967476,49968964,49970490,49971925,49973648,49975514,49977376,49979059,49980761,49982102,49983742,49985362,49986950,49988336,49990039,49991996,49994017,49996037,49998047,49999993,50001969,50003922,50005892,50007878,50009836,50011841,50013529,50014794,50016085,50017797,50019357,50020863,50022150,50023755,50025202,50026711,50028218,50029692,50031164,50032632,50034106,50035642,50037138,50038663,50039974,50041073,50042370,50043635,50045022,50046150,50047475,50048704,50049822,50050893,50052165,50054213,50055395,50056021,50057832,50059672,50060499,50061594,50063612,50065263,50065962,50067398,50069446,50070507,50071173,50072868,50074875,50076922,50078970,50081018,50083015,50084975,50086971,50089019,50091067,50093104,50095021,50096993,50098877,50100852,50102708,50104681,50106693,50108612,50110594,50112481,50114510,50116459,50118439,50120401,50122362,50124356,50126233,50128209,50130201,50132171,50134144,50136040,50137988,50139889,50141829,50143736,50145718,50147766,50149792,50151702,50153684,50155732,50157756,50159664,50161645,50163506,50165536,50167562,50169464,50171449,50173495,50175528,50177483,50179466,50181513,50183561,50185614,50187489,50189469,50191343,50193319,50195193,50197221,50199269,50201317,50203365,50205360,50207325,50209320,50211368,50213416,50215464,50217347,50219324,50221208,50223239,50225251,50227184,50229180,50231058,50233088,50235119,50237021,50239002,50240878,50242857,50244908,50246941,50248806,50250780,50252829,50254880,50256745,50258722,50260779,50262827,50264768,50266749,50268800,50270848,50272847,50274797,50276790,50278847,50280869,50282775,50284756,50286804,50288852,50290715,50292692,50294556,50296553,50298419,50300397,50302274,50304250,50306124,50308100,50309968,50311962,50313828,50315763,50317668,50319552,50321538,50323368,50325344,50327392,50329449,50331315,50333293,50335341,50337389,50339258,50341230,50343286,50345311,50347208,50349187,50351240,50353262,50355170,50357148,50359165,50361066,50363046,50365075,50366973,50368952,50370821,50372851,50374845,50376802,50378694,50380680,50382618,50384596,50386491,50388480,50390338,50392367,50394376,50396315,50398318,50400183,50402120,50404029,50405945,50407883,50409877,50411925,50413837,50415846,50417894,50419951,50421815,50423809,50425673,50427651,50429516,50431488,50433352,50435347,50437211,50439192,50441085,50443108,50445113,50447059,50448992,50450934,50452869,50454809,50456761,50458699,50460635,50462568,50464557,50466560,50468593,50470458,50472435,50474435,50476452,50478371,50480381,50482344,50484321,50486282,50488219,50490193,50492083,50494058,50495933,50497913,50499961,50501829,50503805,50505752,50507732,50509742,50511644,50513629,50515677,50517708,50519623,50521609,50523657,50525676,50527607,50529608,50531656,50533704,50535567,50537547,50539595,50541643,50543532,50545562,50547610,50549658,50551714,50553581,50555565,50557613,50559661,50561707,50563603,50565582,50567630,50569678,50571541,50573518,50575571,50577619,50579494,50581527,50583393,50585350,50587352,50589221,50591193,50593188,50595087,50597096,50599041,50601028,50602854,50604828,50606740,50608749,50610798,50612737,50614736,50616786,50618819,50620838,50622827,50624790,50626783,50628815,50630829,50632843,50634760,50636751,50638621,50640650,50642672,50644599,50646563,50648458,50650437,50652301,50654292,50656336,50658282,50660255,50662297,50664314,50666222,50668203,50670232,50672137,50674118,50676146,50678051,50679977,50681909,50683862,50685778,50687721,50689623,50691574,50693481,50695431,50697329,50699276,50701172,50703122,50705022,50707007,50709055,50711103,50713128,50715061,50717056,50719104,50721152,50723140,50725117,50727132,50728998,50730973,50732935,50734921,50736835,50738807,50740733,50742713,50744727,50746633,50748618,50750488,50752462,50754503,50756372,50758401,50760456,50762327,50764302,50766184,50768215,50770161,50772141,50774193,50776241,50778289,50780243,50782215,50784266,50786314,50788362,50790343,50792320,50794332,50796380,50798428,50800371,50802351,50804403,50806451,50808499,50810386,50812417,50814416,50816349,50818260,50820222,50822103,50824086,50826130,50828043,50830053,50832101,50833971,50835946,50837994,50839926,50841921,50843791,50845820,50847868,50849916,50851948,50853855,50855837,50857885,50859933,50861897,50863875,50865927,50867975,50870023,50871893,50873869,50875917,50877965,50880013,50881910,50883857,50885755,50887700,50889596,50891540,50893446,50895385,50897288,50899273,50901141,50903170,50905202,50907108,50909088,50911144,50913010,50914985,50917033,50918900,50920885,50922748,50924715,50926597,50928515,50930448,50932355,50934315,50936175,50938180,50940040,50942023,50943889,50945862,50947917,50949973,50951836,50953808,50955854,50957906,50959768,50961735,50963747,50965693,50967679,50969682,50971707,50973590,50975567,50977433,50979411,50981404,50983350,50985332,50987351,50989368,50991231,50993203,50995250,50997255,50999193,51001173,51003175,51005105,51007095,51008958,51010932,51012898,51014881,51016745,51018720,51020688,51022693,51024559,51026530,51028547,51030480,51032482,51034435,51036414,51038466,51040514,51042461,51044442,51046492,51048540,51050494,51052480,51054430,51056400,51058210,51060240,51062214,51064200,51066187,51068104,51070027,51071959,51073885,51075842,51077726,51079704,51081596,51083601,51085459,51087391,51089308,51091179,51093161,51095042,51097057,51098932,51100911,51102959,51104837,51106867,51108915,51110793,51112822,51114870,51116745,51118773,51120821,51122687,51124706,51126688,51128662,51130646,51132540,51134519,51136408,51138438,51140455,51142388,51144384,51146432,51148480,51150528,51152391,51154364,51156412,51158460,51160508,51162390,51164233,51166289,51168176,51170028,51172083,51173963,51175810,51177858,51179788,51181646,51183567,51185453,51187493,51189519,51191382,51193411,51195267,51197302,51199152,51201036,51202886,51204753,51206589,51208465,51210274,51212196,51213951,51215801,51217755,51219612,51221624,51223439,51225335,51227322,51229138,51231004,51233020,51234881,51236897,51238797,51240688,51242527,51244565,51246422,51248459,51250311,51252338,51254188,51256194,51258104,51259984,51261832,51263709,51265555,51267440,51269352,51271256,51273135,51275004,51276857,51278722,51280572,51282436,51284303,51286182,51287993,51289903,51291689,51293637,51295484,51297415,51299423,51301377,51303263,51305294,51307177,51309020,51311043,51312924,51314930,51316656,51318507,51320561,51322582,51324470,51326354,51328188,51330075,51331963,51334001,51335638,51336765,51337911,51339527,51340919,51342163,51343904,51345375,51346496,51347563,51348711,51349884,51351015,51352214,51353398,51354647,51356211,51358111,51360026,51361959,51363915,51365851,51367669,51369575,51371472,51373437,51375268,51377273,51379126,51381077,51382969,51384888,51386820,51388815,51390863,51392890,51394797,51396708,51398647,51400640,51402503,51404455,51406363,51408023,51409213,51410389,51411528,51412659,51414551,51416465,51418398,51420263,51422243,51424100,51426058,51427951,51429869,51431802,51433679,51435662,51437515,51439494,51441357,51443286,51445187,51447078,51449021,51450857,51452866,51454716,51456657,51458558,51460542,51462590,51464613,51466527,51468510,51470558,51472565,51474502,51476498,51478546,51480557,51482507,51484500,51486548,51488457,51490466,51492513,51494561,51496424,51498404,51500452,51502472,51504404,51506414,51508462,51510339,51512369,51514417,51516462,51518363,51520330,51522206,51524152,51526047,51527898,51529251,51530649,51532410,51533700,51534837,51536437,51537799],\"sizes\":[1641,1482,1475,1484,1493,1482,1476,1483,1480,1476,1474,1476,1477,1481,1474,1492,1461,1478,1476,1484,1477,1495,1482,1478,1487,1485,1132,559,566,703,371,598,309,533,510,466,450,594,499,405,220,306,252,250,263,273,220,316,322,245,151,138,229,140,97,90,366,496,355,269,321,244,531,451,421,238,329,446,499,446,570,189,386,548,616,323,146,292,456,320,273,304,350,256,299,310,82,85,106,268,258,234,525,515,410,300,106,344,376,294,359,475,379,291,394,490,516,448,453,2052,2020,2048,2056,2031,2028,2054,2053,1822,1720,1724,1737,1698,1729,1722,1723,1721,1700,1707,1719,1719,1698,1698,1704,1677,1700,1737,1635,1671,1675,1694,1732,1719,1733,1730,1740,1724,1652,1737,1717,1737,1745,1726,1723,1705,1789,2048,2048,2048,2048,2048,1999,1734,1701,1686,1718,1748,1831,1773,1861,1650,1751,1787,1686,1750,1703,1691,1673,1592,1704,1678,1717,1676,1621,1695,1745,1690,1679,1726,1727,1771,1620,1657,1649,1735,1758,1735,1712,1734,1637,1756,1692,1713,722,447,567,641,1076,825,881,857,977,1021,1075,1443,1824,1870,1837,1874,1859,1871,1557,1478,1501,1455,1447,1442,1442,1442,1431,1441,1436,1476,1470,1463,1448,1471,1456,1475,1471,1466,1483,1466,1474,1423,1452,1473,1474,1471,1460,1479,1441,1455,1454,1469,1466,1469,1475,1478,1461,1461,1452,1470,1467,1446,1449,1456,1454,1446,1457,1481,1462,1474,1447,1474,1463,1447,1469,1461,1471,1474,1478,1487,1464,1478,1475,1459,1464,1463,1442,1438,1455,1459,1469,1467,959,594,456,539,362,331,356,387,473,526,529,428,547,527,398,459,458,474,446,448,478,431,437,583,596,483,440,610,558,356,519,637,456,593,633,466,465,350,424,384,429,476,392,421,472,389,423,308,201,251,538,493,395,363,603,441,460,554,566,621,575,497,468,547,472,503,478,471,495,397,534,375,344,330,510,483,451,511,589,631,473,493,544,371,505,515,535,338,587,598,572,600,586,581,600,491,512,460,530,461,444,444,475,564,451,536,546,497,598,454,546,535,590,613,487,491,453,459,465,379,428,343,497,451,496,469,437,406,471,478,552,613,565,487,368,419,349,564,503,623,343,209,168,106,205,365,453,266,270,307,472,409,414,414,387,431,441,348,449,548,589,400,523,517,446,413,491,509,504,536,616,599,665,624,616,579,537,487,558,572,571,417,582,540,516,518,544,523,414,517,551,499,452,500,521,515,477,580,562,412,409,442,515,632,522,485,475,466,458,318,490,234,365,449,263,346,397,343,388,505,407,340,491,509,518,513,493,535,466,456,505,459,465,469,450,428,424,409,439,457,457,455,427,423,461,309,357,432,441,380,366,401,507,403,417,434,377,448,334,439,517,459,463,525,1691,1945,2025,1987,1999,1999,1922,1982,2050,2046,2054,2042,2017,2027,2026,2030,2055,2055,2048,1879,1726,1723,1702,1722,1714,1714,1732,1721,1705,1737,1723,1693,1709,1700,1713,1720,1704,1696,1685,1705,1723,1691,1675,1699,1667,1685,1679,1697,1687,1695,1707,1699,1682,1693,1690,1688,1678,1701,1728,1704,1731,1727,1707,1666,1680,1700,1738,1726,1717,1694,1653,1680,1664,1697,1687,1695,1683,1684,1695,1729,1752,1725,1665,1660,1698,1713,1717,1702,1705,1700,1695,1708,1689,1697,1714,1697,1710,1701,1689,1696,1722,1700,1701,1693,1698,1694,1720,1680,1710,1740,1743,1749,1749,1763,1733,1767,1736,1671,1674,1661,1689,1704,1681,1683,1673,1675,1730,1740,1732,1735,1688,1670,1667,1689,1838,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1719,1752,1706,1749,1806,1688,1717,1754,1638,1781,1744,1662,1737,1747,1740,1696,1589,1670,1690,1621,1627,1684,1553,1570,1583,1636,1608,1669,1623,1637,1639,1622,1653,1727,1727,1695,1777,1717,1748,1649,1808,1886,1843,1746,1707,1651,1644,1735,1739,1714,1649,1774,1850,1873,1659,1671,1643,1517,1521,1533,1479,1492,1540,1608,1660,1666,1554,1520,1633,1667,1634,1683,1684,1712,1578,1527,1660,1532,1769,1844,1796,1794,1792,1779,1779,1836,1795,1686,1654,1678,1699,1674,1648,1712,1772,1771,1750,1726,1613,1679,1627,482,476,555,515,584,701,648,610,587,469,338,618,666,619,759,604,517,713,640,620,545,438,509,547,573,563,132,141,435,526,279,240,130,748,646,545,308,456,558,388,597,358,422,144,116,148,147,210,369,642,745,675,617,551,512,713,822,780,975,1052,1028,871,789,755,849,298,314,436,342,361,134,134,154,463,406,250,245,225,204,311,406,252,752,499,278,495,419,237,203,224,412,415,266,342,268,310,257,621,480,471,657,520,508,642,813,917,776,748,861,904,746,681,728,754,674,706,809,690,636,505,517,494,529,532,501,542,621,830,809,821,799,792,784,579,685,966,807,894,542,783,1006,937,804,933,966,856,929,869,861,812,720,691,930,800,749,786,773,651,767,850,379,175,125,114,253,968,996,981,1007,1072,915,963,958,942,917,770,791,675,555,512,849,841,767,741,844,707,565,472,558,834,1001,1039,1080,1055,1097,976,1095,1119,1142,1093,887,721,503,421,383,366,352,341,595,844,947,1015,947,826,735,525,668,780,890,779,734,811,804,907,934,983,996,789,835,1042,1065,1104,1183,1124,1019,1136,1081,840,870,1059,1065,1195,1247,1052,975,1179,1188,1103,981,1038,1016,822,1044,1256,1184,1786,1606,1845,1874,1834,1876,1891,1839,1828,1871,1937,1981,1929,1892,1886,1951,1956,1857,1698,1593,1640,1488,1486,1504,1493,1517,1507,1495,1500,1503,1524,1480,1497,1510,1480,1488,1494,1475,1489,1510,1460,1491,1494,1491,1519,1525,1489,1495,1504,1452,1470,1498,1504,1504,1510,1500,1517,1503,1143,532,511,581,441,546,500,534,566,510,573,535,636,600,602,622,411,618,624,504,519,589,532,547,566,708,613,517,493,450,543,433,564,591,610,588,623,630,577,482,494,420,453,486,559,562,576,535,568,533,473,354,594,363,198,342,235,488,470,410,616,306,609,535,421,566,488,453,402,436,543,515,510,456,321,373,506,672,461,648,598,454,423,497,410,406,240,45,162,324,328,289,423,258,251,355,385,284,322,445,315,405,316,590,551,573,526,420,343,351,489,355,575,540,532,527,491,558,398,568,472,334,425,487,467,502,506,588,533,455,699,2022,2018,2039,2017,1993,2024,1986,2054,2045,2042,1962,1698,1681,1725,1690,1645,1692,1717,1696,1672,1706,1708,1719,1727,1715,1726,1710,1711,1716,1727,1704,1721,1703,1696,1703,1692,1714,1708,1713,1709,1687,1701,1670,1701,1712,1718,1706,1725,1707,1739,1713,1726,1730,1729,1719,1721,1711,1730,1723,1730,1728,1641,1680,1713,1712,1715,1703,1988,2048,2048,2048,2048,2048,2037,1643,1683,1653,1709,1768,1676,1672,1797,1734,1741,1721,1787,1792,1800,1829,1764,1763,1780,1732,1685,1744,1704,1708,1776,1701,1772,1709,1685,1729,1754,1770,1712,1787,1785,1779,1773,1783,1781,1756,1759,1759,1803,1612,1716,1763,1649,1115,756,832,895,897,915,730,944,1179,1441,1264,937,1111,1169,1276,1105,1123,1085,937,913,1066,1133,904,1093,1073,1120,1934,1987,2007,2009,1993,2007,1992,1596,1596,1507,1461,1459,1438,1499,1477,1461,1015,621,398,461,573,487,604,613,583,557,550,501,496,426,484,125,570,338,589,448,559,540,1630,2017,1752,1709,1711,1708,1701,1720,1709,1714,1709,1777,2049,1791,1787,1897,1818,1730,1738,1499,634,587,376,25,25,25,1930,1013,1419,1444,1408,1383,1509,1496,1459,1454,1465,1458,1441,1445,1481,1439,1470,1472,1472,1461,1462,1489,748,349,426,356,333,493,414,503,453,265,417,315,499,339,652,561,635,551,535,582,362,494,509,530,505,483,504,560,442,542,451,442,512,420,491,497,484,508,357,503,473,394,497,440,332,410,275,286,442,373,545,2056,1952,2004,1971,1727,1718,1686,1724,1721,1685,1658,1687,1690,1654,1684,1669,1647,1670,1672,1697,1711,1726,1678,1666,1687,1673,2018,2048,1968,1853,1810,1716,1799,1705,1617,1649,1728,1786,1652,1715,1707,1782,1820,1754,1574,1673,1377,751,561,628,607,773,697,884,945,1051,1388,1268,1289,1209,1434,1558,890,1010,1132,759,631,1181,1539,1814,1757,1745,1714,1601,1573,1485,1487,1475,1479,1467,1460,1489,1495,1481,1483,1485,1492,1478,1457,1483,1442,1477,1471,1481,1470,1476,1473,1480,1482,1480,1504,1482,1487,1468,911,393,621,581,461,538,437,473,551,367,194,425,401,502,377,557,439,209,472,650,571,673,497,534,549,389,521,454,508,628,443,512,434,397,454,416,639,460,398,153,197,312,427,560,378,545,499,606,537,538,522,249,431,446,131,371,296,329,354,471,424,380,519,518,473,544,531,574,546,543,526,521,291,289,507,563,491,556,552,479,463,481,446,446,464,443,570,373,471,431,476,434,488,483,405,470,441,389,1850,2043,2043,2002,2054,2052,2040,1905,1686,1684,1713,1709,1728,1677,1717,1729,1723,1699,1695,1703,1716,1708,1715,1722,1703,1705,1665,1720,1652,1685,1701,1653,1703,1660,1700,1699,1692,1679,1659,1695,1694,1693,1698,1717,1715,1680,1646,1725,1683,1911,2048,2048,2048,2015,1634,1548,1686,1723,1802,1784,1814,1921,1690,1773,1865,1764,1717,1875,1715,1805,1542,1754,1744,1647,1784,1723,1674,1703,1719,1689,1800,1743,1640,1705,1703,752,820,895,809,774,605,551,528,460,206,410,534,794,617,520,353,454,775,676,679,737,717,575,629,478,436,492,660,830,762,534,747,773,759,686,725,809,681,729,594,516,180,342,322,283,390,234,180,286,659,638,615,860,659,640,630,631,774,820,621,627,530,698,613,633,929,1316,1490,1592,1824,1694,1682,1715,1719,1705,1729,1699,1554,1219,1438,1445,1469,1473,1476,1470,1494,1471,1487,1488,1487,1485,1478,1489,1480,1457,1473,1473,1486,1476,1505,1480,980,191,284,316,397,454,386,206,285,232,303,228,409,650,394,560,430,546,394,589,458,165,202,465,586,545,408,499,591,502,459,607,441,639,394,248,56,353,497,406,466,177,199,416,522,397,202,194,193,195,188,195,203,198,189,194,191,514,276,364,176,257,310,245,507,460,510,409,474,1578,1916,1910,1886,1908,2037,1965,1655,1676,1704,1672,1665,1701,1737,1653,1663,1701,1689,1681,1654,1670,1694,1666,1646,1679,1689,1689,1650,1658,1643,1648,1663,1644,1663,1664,1661,1681,1675,1667,1996,2048,2048,1931,1678,1745,1613,1690,1865,1680,1670,1754,1698,1599,1804,1601,1614,1600,1706,1658,1629,1611,1606,1628,1657,1717,1642,1180,832,740,602,188,486,829,929,880,1025,907,818,988,1014,915,844,561,702,688,609,1716,1524,1795,1814,1833,1743,1807,1742,1560,1542,1476,1486,1489,1484,1459,1498,1456,1491,1470,1485,1494,1499,865,551,612,548,492,381,434,285,379,551,257,559,536,560,422,569,544,589,562,512,541,351,216,478,448,484,524,600,548,558,341,142,117,387,311,1145,2004,2050,2032,1697,1683,1714,1703,1700,1661,1695,1684,1730,1678,1707,1712,1706,1686,1700,1753,2048,1979,1792,1808,1839,1774,1689,1751,1769,1754,1822,1814,1804,1752,859,895,742,913,1077,1087,877,1024,762,1464,1259,1581,1682,1663,1563,1521,1462,1567,1474,1481,1463,1491,1478,1480,1469,1488,1466,1483,1243,521,616,536,530,605,497,603,258,506,389,480,309,473,325,155,262,573,179,478,258,468,508,284,438,443,611,506,602,484,436,222,285,508,596,509,1589,1921,2024,1883,1669,1696,1673,1650,1652,1650,1660,1696,1670,1653,1667,1695,1733,1703,1733,2000,2039,1675,1696,1675,1679,1648,1669,1627,1729,1701,1871,1896,1736,773,833,766,696,660,632,919,947,581,1556,1562,1503,1585,1644,1515,1490,1466,1475,1480,1486,1459,1489,1484,1482,1478,1048,437,258,315,363,354,283,271,390,475,499,369,479,388,244,335,353,401,302,339,244,170,300,267,364,349,446,568,413,305,396,391,274,339,238,243,333,184,421,1397,2048,2046,2048,1716,1719,1704,1729,1735,1717,1732,1738,1733,1723,1737,1727,1672,1731,1713,1721,1705,1934,2048,2012,1815,1815,1779,1851,1774,1825,1827,1787,1840,1853,1816,1767,1670,1772,1855,1824,1800,952,955,1346,1820,1849,1747,1504,1406,1463,1466,1456,1479,1481,1462,1473,1505,1489,1467,1481,1490,1487,1476,1486,1494,1483,1487,1475,1503,1458,1480,1469,1324,180,277,210,253,489,481,548,293,364,345,317,476,369,318,369,284,413,458,239,295,357,445,331,429,396,293,197,224,284,414,362,293,341,395,444,361,292,491,258,364,278,424,476,183,189,79,256,226,552,199,399,352,303,355,466,382,553,385,67,62,466,315,385,339,463,433,355,350,332,398,372,453,521,376,389,1642,1916,1940,1947,1917,1942,1966,1708,1688,1689,1692,1697,1698,1707,1693,1701,1689,1690,1721,1704,1714,1697,1706,1705,1686,1719,1702,1705,1712,1702,1703,1720,1707,1697,1714,1699,1710,1696,1711,1675,1838,2048,2048,2048,1848,1573,1693,1720,1730,1687,1709,1713,1659,1654,1732,1667,1741,1736,1704,1790,1765,1758,1649,1823,1714,1785,1639,1698,1673,1696,1643,1702,1698,885,797,866,870,429,25,25,25,25,25,25,25,1996,1587,1711,1761,1785,1688,1833,1776,1467,1355,1463,1649,1564,1512,1521,1505,1507,1523,1521,1507,1464,1488,1489,1464,1493,1477,1475,1457,1436,1489,1481,1481,1480,1464,1468,1489,1461,1471,1485,1494,1280,659,618,644,597,607,623,691,616,707,680,655,705,683,631,632,586,719,708,619,723,659,606,706,713,655,595,523,562,594,666,584,548,608,474,614,539,644,585,527,487,532,547,589,497,537,606,636,566,654,543,555,668,602,666,553,462,578,479,446,418,417,480,569,437,463,476,606,354,542,609,442,488,424,342,494,561,623,551,532,454,569,579,588,316,494,513,530,594,474,176,375,470,474,464,410,388,396,602,577,564,535,441,2028,2044,2024,2019,1948,2018,2051,1908,1711,1694,1702,1714,1677,1670,1717,1753,1669,1681,1696,1745,1728,1654,1629,1711,1737,1722,1713,1706,1714,1694,1692,1694,1705,1749,1734,1703,1722,1740,1725,1695,1740,1721,1687,1694,1704,1688,1713,1722,1737,1684,1693,1697,2041,2048,2048,2048,2048,1984,1722,1704,1798,1614,1654,1784,1797,1616,1734,1750,1838,1689,1592,1777,1813,1739,1699,1744,1679,1682,1713,1775,1807,1752,1793,1711,1848,1688,1779,1723,1701,1718,1879,1793,1803,1787,1711,1749,1048,617,780,630,571,649,617,606,532,481,1390,1499,1484,1463,1581,1575,1638,1570,1536,1134,1155,1523,1474,1585,1397,1608,1568,1477,1596,1424,1403,1326,1411,1390,1351,913,1022,1280,877,747,1222,1360,1430,1619,1608,1729,1411,1835,1642,1414,1602,1693,1699,1692,1694,1643,1677,1637,1673,1566,1575,1558,1593,1438,1480,1479,1454,1478,1463,1462,1496,1485,1452,1475,1485,1443,1440,1459,1453,1454,1481,1465,1482,1496,1469,1466,1463,1472,1464,1457,1461,1470,1477,1472,1465,1473,1456,1467,1491,1462,1495,1451,1472,1497,1455,1443,1504,1471,1489,1488,1465,1487,539,459,539,506,461,379,386,429,420,482,481,359,452,493,488,402,351,564,458,261,274,343,281,417,316,366,293,259,515,466,470,485,470,403,290,458,286,407,530,400,371,371,353,570,517,482,469,421,341,206,338,533,312,306,407,506,481,478,339,222,428,534,425,523,431,403,256,180,472,487,426,456,411,428,385,369,413,453,478,516,491,411,346,306,467,335,431,261,424,229,332,368,311,194,317,474,318,277,309,181,386,306,364,352,424,255,345,411,359,335,423,401,490,529,510,460,281,349,193,362,464,310,484,199,463,442,453,314,421,268,423,331,287,421,412,474,387,240,162,501,500,475,436,362,493,807,2006,1996,1962,1977,1956,1954,2024,1941,1976,1925,2007,2048,1823,1694,1642,1660,1654,1693,1642,1689,1698,1658,1655,1685,1694,1672,1705,1660,1673,1706,1684,1669,1674,1691,1686,1713,1681,1663,1691,1692,1695,1681,1689,1675,1674,1676,1706,1704,1702,1675,1677,1686,1681,1675,1710,1700,1685,1705,1721,1668,1645,1683,1689,1724,1691,1674,1683,1677,1678,1683,1684,1671,1690,1681,1684,1749,2048,2048,2048,2048,2048,2048,1650,1696,1619,1660,1602,1697,1680,1649,1693,1722,1739,1624,1803,1653,1717,1757,1745,1692,1755,1787,1749,1716,1700,1765,1768,1743,1684,1708,1753,1701,1696,1858,1685,1672,1801,1799,1804,1701,1646,1722,1793,1724,1737,1551,980,840,791,832,787,751,912,658,899,855,697,651,413,464,329,417,351,416,236,555,486,533,447,338,265,576,450,499,498,610,677,343,216,471,463,394,773,584,502,330,469,329,453,151,351,436,419,512,407,362,482,799,1621,1629,1446,687,936,1626,1627,1639,1683,1681,1714,1738,1810,1723,1763,1743,1747,1692,1733,1689,1589,1543,1549,1497,1466,1467,1492,1475,1500,1484,1484,1494,1512,1498,1514,1490,1468,1469,627,421,193,417,599,452,75,75,258,349,609,595,447,500,433,582,477,439,541,602,475,391,417,506,554,356,552,516,334,480,386,406,429,341,302,220,355,327,514,494,552,444,593,267,1526,2012,1961,1955,1875,1702,1721,1739,1722,1727,1745,1727,1737,1728,1731,1724,1710,1738,1721,1713,1698,1715,1732,1701,1707,2015,2048,1981,1723,1739,1779,1752,1788,1703,1718,1751,1747,1732,1743,1778,1741,1763,1789,1751,1548,809,934,816,923,399,25,25,25,25,25,25,25,1606,1655,1551,1690,1695,1475,1336,1082,1195,1605,1526,1560,1487,1486,1509,1498,1483,1502,1493,1498,1493,1485,1468,1450,1460,1477,1434,1509,687,657,466,593,490,423,463,453,470,531,517,447,549,558,436,448,196,364,249,351,400,575,261,545,492,523,682,497,443,449,384,502,602,390,419,523,517,527,564,473,583,706,703,530,403,490,245,1485,2003,2053,2019,2022,1717,1715,1723,1709,1711,1664,1658,1696,1726,1726,1709,1670,1699,1716,1730,1704,1709,1724,1692,1665,1812,2048,2048,1936,1799,1784,1812,1848,1686,1755,1850,1792,1844,1847,1810,1854,1838,1761,1871,1790,1758,1737,776,637,975,812,678,725,779,526,814,848,753,754,869,872,357,688,955,1468,1110,843,1553,1470,1527,1626,1599,1615,1572,1418,1376,1479,1424,1365,1455,1421,1471,1477,1448,1474,1480,1497,1479,1469,1498,1498,1487,1493,1484,1483,1486,1495,1487,1468,1498,1463,1490,1499,1477,1499,1495,1522,1513,1471,1478,1502,1489,1486,1479,1453,1474,1493,1341,489,524,599,469,468,546,268,565,553,583,190,559,540,664,661,576,558,561,583,558,521,524,492,379,202,492,554,511,571,531,450,514,543,566,648,570,398,513,520,619,503,575,492,494,476,597,552,572,549,606,556,509,368,453,528,450,480,617,507,458,555,459,455,483,241,317,524,446,503,286,463,526,527,540,464,403,74,91,185,124,182,275,203,394,341,437,557,325,461,221,271,158,133,357,466,680,486,492,527,555,509,548,526,587,481,480,265,546,546,428,496,466,491,500,415,483,438,513,548,603,526,491,428,505,404,422,524,447,395,520,450,186,370,510,339,598,2007,1985,2020,2045,1987,2025,1964,2048,2048,2049,1986,1651,1633,1623,1646,1728,1715,1693,1686,1658,1671,1699,1704,1678,1710,1735,1729,1715,1726,1653,1694,1741,1698,1727,1686,1691,1745,1744,1735,1745,1697,1692,1643,1700,1747,1749,1737,1739,1735,1736,1719,1736,1725,1737,1731,1738,1686,1656,1684,1705,1676,1707,1727,1742,1736,1722,1725,1656,1676,1716,1720,2009,2048,2048,2048,2048,2048,2048,1929,1499,1430,1615,1716,1734,1690,1595,1656,1647,1734,1746,1811,1758,1716,1626,1697,1713,1725,1741,1582,1853,1876,1776,1748,1730,1585,1798,1817,1768,1758,1787,1769,1749,1824,1760,1742,1773,1726,1809,1717,1632,1618,1654,1736,1724,1791,1740,1744,1744,1507,1642,1799,1349,571,646,684,607,506,423,663,710,475,613,352,1408,1397,1398,1657,1209,1322,1480,1492,1682,1182,1138,1337,1405,1237,1372,1250,1150,1319,1660,715,1351,1396,1460,897,1469,1628,808,1196,1213,1431,1367,1385,1441,1570,809,898,565,1253,1708,1582,887,991,1435,1395,1318,1317,1369,1322,1607,1641,649,968,430,850,1252,1173,819,856,1535,1629,1710,1770,1801,1837,1783,1748,1734,1869,1805,1413,1436,1359,1314,1464,1436,1361,1331,1442,1509,1487,1453,1468,1458,1450,1468,1442,1477,1495,1487,1494,1497,1489,1481,1490,1484,1486,1502,1480,1453,1468,1489,1485,1477,1483,1470,1481,1433,1492,1498,1465,1458,1446,1487,1487,1461,1493,1493,1487,1488,1469,1484,1485,1475,1486,1491,1463,1462,1464,1505,1475,1470,1482,1486,1466,1485,1493,1463,1507,1482,1478,1473,1493,1477,1448,1465,1469,1470,1482,1486,1487,1467,1492,1496,1487,1489,1469,1034,365,577,589,660,521,590,555,547,621,628,587,666,621,590,606,565,377,512,528,555,493,391,610,616,580,619,617,247,559,586,576,470,746,670,501,646,634,639,474,506,478,540,484,611,553,646,565,624,604,598,497,459,420,490,498,513,561,452,465,451,469,497,544,511,565,558,644,545,584,595,617,616,569,586,597,650,527,605,625,521,521,460,517,507,294,400,473,514,528,513,532,542,564,579,635,556,600,575,580,625,542,582,527,499,594,352,299,543,587,536,522,456,540,478,441,439,336,482,320,378,453,513,551,513,517,573,482,361,161,447,532,392,419,469,418,433,464,362,459,513,456,487,370,431,585,746,626,428,550,493,552,550,474,550,594,521,570,531,618,318,519,375,482,469,516,534,504,478,536,550,581,503,329,475,471,434,552,507,548,569,602,538,456,385,607,446,489,454,512,469,278,429,474,560,564,605,461,487,498,466,430,495,519,624,343,465,338,508,320,485,402,462,463,495,353,351,302,221,181,256,318,308,233,414,389,270,465,206,151,300,306,237,633,608,692,527,517,597,454,631,466,537,595,646,416,383,501,419,574,532,565,553,658,632,608,615,596,425,509,568,570,359,518,454,527,485,569,474,549,434,225,271,330,320,385,532,385,554,522,631,567,1023,2026,2011,1919,1999,1991,2030,2004,2015,2034,2015,2004,2021,1959,2040,1988,2006,2031,2028,2055,1875,1730,1711,1659,1686,1693,1703,1723,1730,1737,1720,1739,1717,1696,1698,1666,1716,1699,1690,1675,1701,1726,1715,1715,1711,1667,1726,1708,1710,1717,1712,1708,1706,1718,1680,1666,1693,1685,1667,1682,1689,1651,1672,1688,1685,1702,1698,1688,1705,1686,1685,1685,1694,1693,1675,1681,1686,1709,1683,1693,1687,1682,1676,1674,1706,1694,1680,1689,1696,1692,1709,1698,1719,1710,1698,1664,1729,1707,1677,1682,1673,1709,1710,1680,1699,1697,1651,1665,1702,1721,1690,1693,1677,1658,1654,1653,1670,1651,1670,1708,1680,1709,1691,1718,1676,1685,1701,1694,1718,1736,1708,1701,1732,1665,1710,1678,1680,1684,1659,1698,1849,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1883,1766,1663,1676,1693,1670,1750,1720,1702,1717,1763,1643,1648,1679,1709,1715,1580,1756,1763,1667,1701,1670,1812,1702,1750,1847,1695,1712,1621,1611,1625,1660,1720,1633,1628,1673,1663,1657,1655,1667,1682,1678,1631,1534,1617,1705,1741,1679,1771,1681,1702,1618,1582,1662,1642,1580,1596,1680,1747,1788,1758,1729,1747,1819,1684,1667,1674,1797,1630,1671,1657,1604,1737,1660,1690,1556,1594,1583,1508,1667,1589,1732,1669,1711,1634,1730,1608,1764,1809,1755,1812,1815,1715,1637,1631,1688,1668,1739,1017,631,617,619,355,474,119,602,706,585,672,615,512,691,739,601,678,788,633,613,605,600,627,683,765,545,615,1208,1464,1364,1281,1644,1599,1493,1465,1603,1656,1329,1070,1417,1096,1016,1146,1011,861,956,1127,554,1144,976,719,1118,913,957,918,1032,1243,1406,1679,1622,1623,1588,1407,1713,1688,1586,1608,1690,1616,1531,1617,1574,1548,1312,1444,1548,1654,1700,1636,1543,1570,1422,1464,1339,1516,1428,1297,1597,1243,1600,1609,1548,1406,1389,1326,1522,1525,1458,1417,1608,1624,1624,1588,1415,905,1305,1249,813,409,887,1176,1202,1216,1016,1057,1002,961,1060,991,869,959,798,714,649,441,161,118,615,612,558,564,407,573,1179,1528,1316,1293,1172,1262,1184,1594,1580,1587,1450,1503,1411,1413,1418,1154,671,763,1060,1284,1460,1520,1541,1148,1617,1275,1475,1389,1576,1244,662,1247,1496,1489,1390,1411,1546,1461,1621,1523,1589,1505,921,972,931,551,1256,1422,1134,398,782,542,484,838,1161,848,1092,1157,872,596,1196,929,1473,1364,627,459,1482,1426,1308,1018,1212,1291,943,809,568,637,1100,488,691,252,615,937,724,645,807,476,439,1338,1520,1547,1284,1584,1670,1578,1437,1639,1575,1288,518,777,1397,1430,1412,1141,890,1544,1141,891,1388,1298,1021,1354,769,501,576,344,396,389,457,492,366,417,345,421,465,355,328,447,549,766,832,674,510,500,402,423,710,219,376,387,288,687,866,365,813,853,613,355,604,603,406,392,368,415,363,816,1573,1522,1583,1616,1639,1622,1353,580,599,219,211,243,462,1162,1598,1879,1916,1447,914,1625,1761,1687,1638,1738,1743,1746,1769,1816,1752,1812,1739,1794,1820,1802,1812,1831,1809,1798,1817,1850,1790,1734,1739,1577,1421,1492,1462,1483,1478,1474,1431,1478,1496,1476,1439,1482,1469,1470,435,518,433,375,463,473,494,358,500,379,435,550,395,402,278,308,346,343,315,284,268,554,432,334,585,434,499,459,487,388,526,345,523,503,490,507,441,452,357,347,615,1973,1959,1908,1725,1664,1670,1672,1682,1672,1668,1654,1665,1664,1664,1695,1684,1688,1695,1675,1681,1906,2048,1821,1669,1627,1680,1722,1678,1711,1708,1746,1746,1820,1587,1590,1186,422,379,548,112,930,979,1086,973,1005,1084,866,1077,1033,659,1120,1259,1667,1755,1731,1643,1264,1480,1470,1474,1491,1481,1490,1485,415,225,606,657,615,429,577,554,480,549,415,438,406,430,457,330,532,244,437,312,510,448,464,317,572,2047,1974,1658,1675,1721,1714,1690,1667,1655,1667,1652,1634,1659,1968,1932,1718,1802,1890,1799,1705,1763,1764,1686,1299,554,391,749,1114,949,1007,840,1069,988,1448,1495,1695,1554,1601,1478,1467,1486,1498,1476,1464,1452,1491,1250,584,586,546,346,328,372,487,392,512,555,386,467,483,482,452,439,465,422,576,462,468,574,417,515,496,403,530,538,1486,1999,1907,1693,1705,1689,1683,1708,1698,1690,1674,1720,1710,1693,1679,2030,1916,1782,1760,1675,1753,1770,1674,1808,1758,1674,888,674,591,1117,1645,1125,1353,1436,1823,1654,1555,1370,1495,1483,1479,1505,1530,1497,1485,1492,470,539,518,531,533,308,385,507,541,494,596,561,665,585,122,159,410,460,528,577,550,565,742,2029,1947,1688,1693,1682,1676,1678,1683,1673,1670,1663,1779,2008,1739,1719,1728,1691,1708,1642,1622,753,761,1141,1585,1220,1260,1444,1638,1622,1431,1388,1438,1538,1467,1498,1476,1437,1481,1482,1470,1471,1503,1516,1493,599,364,326,397,327,215,426,480,356,481,354,347,300,249,298,428,440,191,511,454,180,385,354,258,418,377,416,610,442,435,392,226,271,492,362,493,349,687,1992,1994,2001,1779,1690,1673,1657,1707,1696,1675,1679,1707,1714,1711,1707,1717,1695,1704,1692,1688,1870,2048,1978,1613,1628,1733,1740,1700,1809,1856,1808,1881,1804,1751,1706,1698,1447,564,690,734,865,1208,704,941,848,806,555,520,1707,1195,1335,1556,1536,1473,1545,1471,1474,1543,1496,1483,1491,1482,1483,1473,1503,1247,322,522,619,563,503,473,465,600,541,474,338,574,579,511,531,532,664,645,599,395,379,294,1728,1950,1792,1691,1693,1704,1706,1671,1682,1680,1688,1669,2037,1701,1707,1758,1729,1743,1750,1717,1085,714,1065,1548,1556,1493,1479,1534,1560,1458,1557,1513,1516,1546,1501,1520,1483,1480,1488,1503,1487,1475,1498,1486,1482,1454,1485,1509,1494,1472,1469,1493,1482,1483,1470,1505,982,636,629,599,668,521,202,458,280,326,569,237,374,608,522,646,544,474,590,613,436,566,429,691,624,580,548,557,682,604,644,669,582,556,485,546,437,412,529,478,628,552,497,416,525,611,522,625,587,510,481,123,139,289,431,532,313,349,438,518,613,596,431,579,587,394,314,245,583,554,704,495,479,1955,2006,2010,2019,1984,2027,1627,1706,1697,1698,1702,1711,1677,1696,1716,1700,1690,1697,1694,1706,1678,1682,1728,1680,1688,1680,1672,1698,1690,1689,1695,1700,1670,1698,1683,1669,1686,1818,2048,2048,2048,1793,1777,1728,1699,1820,1721,1759,1892,1708,1776,1760,1767,1717,1756,1758,1712,1724,1730,1680,1787,1788,1750,1783,1724,1790,1876,797,725,607,711,641,675,540,751,518,596,438,605,560,739,962,882,894,897,937,701,502,290,603,682,567,411,666,383,313,310,672,920,866,880,584,1277,958,634,299,1242,1603,1648,1624,1621,1802,1715,1685,1632,1528,1467,1580,1526,1455,1485,1485,1449,1475,1480,1473,1473,1475,1457,1462,1503,1485,1477,1453,616,513,510,441,441,568,291,512,443,596,149,294,591,494,540,322,566,570,604,486,385,612,248,175,504,554,299,262,166,332,485,552,496,518,500,248,385,402,402,507,535,413,316,350,532,536,613,2016,2048,2001,2029,1811,1712,1717,1702,1717,1730,1669,1705,1698,1741,1666,1714,1683,1683,1698,1729,1718,1677,1689,1680,1652,1973,2048,2029,1867,1869,1710,1801,1749,1791,1783,1928,1822,1810,1782,1842,1886,1870,1729,1801,1636,1290,690,809,666,763,708,875,1008,716,915,938,972,793,891,820,968,745,635,532,1113,1457,603,760,1520,1562,1605,1615,1607,1537,1502,1472,1042,610,626,484,380,1493,1665,1687,1841,1804,1066,1188,1513,1409,1500,1484,1472,1492,1499,1481,1464,1413,552,563,558,581,559,331,395,522,409,542,529,361,414,174,392,495,431,269,343,319,288,283,395,471,510,367,999,1932,1878,1650,1662,1655,1697,1672,1650,1683,1697,1676,1699,1676,1997,1729,1530,1633,1727,1732,1746,1699,1723,1602,595,629,460,1689,1399,1028,1216,1231,1622,1654,1624,1026,491,1120,1741,1457,1376,524,702,1690,1533,1611,1491,1519,1424,1456,1476,1499,1482,1463,1488,1476,1484,1483,1500,1490,1476,1482,1493,1518,1463,1514,1467,1479,1464,1481,1472,1484,1475,1473,1503,814,611,593,530,622,605,576,605,502,443,531,620,604,398,443,394,439,575,634,473,484,534,510,209,553,580,404,238,387,541,594,559,593,599,367,479,482,480,429,454,485,488,297,474,496,290,381,318,416,497,467,541,476,446,410,592,568,615,499,554,510,418,469,521,503,580,488,496,296,486,472,486,456,385,619,540,371,414,410,435,261,341,453,274,539,400,432,576,382,424,1881,2030,2054,2056,2016,2017,2044,1849,1724,1727,1733,1707,1739,1727,1729,1743,1723,1754,1737,1745,1733,1748,1743,1697,1742,1721,1705,1737,1715,1690,1653,1679,1677,1679,1681,1683,1697,1710,1728,1718,1718,1716,1725,1716,1643,1654,1750,2048,2048,2048,2048,1995,1833,1804,1806,1818,1806,1826,1794,1806,1778,1780,1810,1823,1856,1868,1893,1800,1812,1808,1792,1852,1711,1641,1717,1678,1708,1790,1774,1783,1753,1812,1781,1814,1636,1619,771,649,814,713,545,530,860,1303,1232,999,1000,819,1128,937,998,1155,1095,888,979,1117,873,692,682,973,1209,1716,1516,1326,1669,1603,1689,1639,1670,1613,1662,1738,1685,1380,536,698,1692,1527,1504,646,400,1630,1641,1505,902,433,1329,1765,1446,1212,545,875,1719,1492,1519,544,446,1721,1577,1502,792,420,1462,1785,1414,1048,506,1053,1727,1473,1419,535,639,1699,1533,1490,680,404,1596,1673,1487,956,461,1267,1757,1442,1281,570,825,1708,1506,1512,591,406,1715,1587,1510,817,405,1428,1781,1402,1097,529,1014,1719,1486,1439,539,594,1710,1546,1564,1474,1461,1478,1481,1457,961,450,398,218,226,204,348,474,349,484,544,396,402,407,278,242,400,337,356,1903,1877,1646,1634,1652,1670,1682,1642,1644,1629,1780,1779,1520,1599,1622,1593,1648,1303,380,171,829,991,1131,484,1692,1668,1263,546,831,1710,1502,1230,1483,1464,1477,1436,1447,1030,550,404,405,467,458,505,744,566,511,482,391,370,372,461,442,547,1666,1774,1660,1655,1681,1618,1651,1670,1904,1572,1590,1602,1160,444,536,462,239,528,884,1240,1571,1671,902,687,746,696,610,754,741,742,738,624,664,786,755,1164,1849,2057,2040,2048,2057,1184,1466,1442,1267,1366,1486,1460,1437,1511,1552,1515,1489,1459,1438,1344,1381,1480,1378,1558,1419,1340,1337,1451,1410,1317,1594,1539,1386,1351,1418,1545,1421,1562,1497,1366,1502,1006,408,46,72,376,356,347,417,574,425,455,538,624,976,1151,1085,1059,1046,1244,1239,1218,682,559,570,526,534,633,702,438,315,431,468,458,784,1526,1512,1451,1433,1472,1540,1593,1565,1547,1576,1573,1540,1650,1435,1509,1554,1605,1686,1611,1602,1692,1677,1607,1492,1616,1489,1515,1560,1598,1406,1273,933,968,980,1040,1158,1127,1163,1226,1215,1137,1209,1450,1432,1457,1353,1438,1414,1578,1316,1162,1172,1208,1171,1314,1276,1357,1454,1327,1414,1410,1374,1133,1390,1316,1014,1107,1120,1133,1167,1220,1489,1392,1199,1274,1578,1423,1321,1634,1470,1744,1060,1296,1187,1190,1667,1188,1155,1171,1150,1199,1167,1122,1302,1556,1524,1412,1450,1493,1571,1612,1561,1562,1609,1565,1549,1631,1482,1462,1599,1623,1700,1571,1660,1691,1663,1565,1464,1606,1478,1504,1568,1589,1352,1770,2051,2048,2027,2048,1879,1457,1572,1477,1460,1452,1528,1600,1574,1523,1581,1598,1567,1618,1498,1545,1485,1620,1677,1614,1575,1698,1674,1597,1528,1546,1552,1502,1555,1569,1484,1283,1086,1374,1284,1022,1087,1157,1123,1153,1216,1477,1419,1228,1304,1598,1365,1347,1609,1481,1747,1096,1304,1214,1167,1669,1230,1159,1182,1148,1172,1150,1134,650,480,387,824,755,817,732,848,757,847,762,649,627,857,579,700,583,763,816,803,517,778,721,749,819,927,735,689,362,364,811,598,708,621,819,830,1331,1529,1380,1006,898,808,791,1094,1188,1139,1094,1127,1003,1059,1035,1082,1071,1118,1123,1095,1069,1118,1070,1031,1072,1078,1059,1095,1092,1011,1054,1024,1000,953,1264,1081,837,1166,1212,1508,1150,900,854,860,860,1035,1187,1529,2050,2055,2056,1861,1456,1456,2056,2048,2048,2048,2048,2048,2057,2056,2048,2042,1955,2036,2048,1601,1917,1422,1789,1868,1795,1810,1868,1818,1830,1858,1826,1793,1872,1808,1998,1618,1355,1918,1319,1780,1025,1751,1879,1616,1651,1117,1722,745,1064,1229,1832,1783,1877,1802,1701,1628,1508,1460,1438,1357,1932,1929,1776,1649,1528,1435,1332,1286,1212,1212,1148,1401,1649,1677,1839,1969,1937,1963,2006,1878,1912,1885,2014,1804,1515,1459,2048,1621,1769,1824,1515,1029,1841,2055,1780,342,1117,1774,1246,2006,1398,662,2042,2048,2048,1217,1398,2048,1837,1031,423,1831,1726,630,1919,2057,2048,2048,1672,593,1910,2048,1964,1175,126,1177,2048,2057,2048,1503,1149,2053,2048,2048,2048,1734,1205,741,724,632,2002,2048,2048,2054,2004,1784,1552,1320,1080,1020,913,2048,1822,1870,2055,1993,1924,1573,604,384,1621,1012,1071,903,289,2003,2048,2048,2048,1906,437,1051,2048,2057,2034,1368,1218,1869,2048,2048,2056,2048,1895,1222,903,672,2049,1618,2048,1970,2048,1861,2018,1890,1566,1216,883,1396,2057,2048,2048,2048,2055,2048,2053,1942,2049,2049,2054,2022,2048,2057,2048,2052,2048,1850,1471,1127,886,903,621,283,2049,1965,1757,1456,1388,922,998,2048,2054,2048,1391,1331,1834,1906,1915,1970,1999,1955,2037,2015,1972,1998,1798,1221,1642,1944,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1984,1862,1694,1512,1348,1101,627,1054,1704,1713,2048,2048,1929,1745,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2057,1835,1138,1899,2048,2048,2048,2048,2048,2048,2048,2048,2043,1893,1646,1336,868,829,234,878,2048,2048,2048,2048,2048,2048,1442,544,459,1718,1974,1973,2037,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2049,2047,2053,2055,2048,2045,2051,2056,2052,2034,1963,1850,1696,1523,1322,1249,1542,2048,2057,1738,1255,1968,1412,1159,998,205,25,25,25,25,865,1625,1894,1923,2048,1979,1724,1001,435,2048,2048,2048,1731,1652,1565,2048,2052,2033,1960,1938,1324,1515,2048,2048,2048,1427,1987,2001,2048,2048,2048,2047,1943,1924,1843,1823,1612,1293,1062,870,1833,2048,2048,2048,2048,2053,1626,2048,2048,2048,1265,1829,2017,2048,2048,2048,2048,2019,1760,1506,1158,2033,1203,1750,2002,1937,1846,1605,1372,1415,1562,1642,1269,1837,1909,2048,2055,2048,1646,245,960,2048,2057,1849,1529,1377,1269,1080,1055,1060,1829,2055,1825,1288,1097,768,685,695,703,1152,2048,2015,1191,640,1271,2055,2048,2048,2048,2048,2048,2048,2048,2048,2008,1716,1433,1150,1391,2048,2048,2040,643,1826,2057,2048,2056,1747,309,100,1400,1712,2035,2048,2057,2048,1770,2048,2048,2048,2057,2048,1565,1636,1840,1468,2056,2048,2048,2048,2028,1245,1831,2051,2055,2048,2056,2048,2057,2031,1990,1964,1812,1609,1064,894,1591,2039,2028,1774,2048,2048,2057,2048,2048,1988,1408,922,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1998,1806,1545,1092,1992,2048,2057,2048,2048,2048,2048,2048,1878,1207,780,356,503,2048,2048,2048,2048,2048,1903,1600,1564,1661,1849,1596,1016,598,1940,2051,2056,2057,2057,2048,2048,2048,2057,2056,2026,1915,1643,1403,882,473,433,575,525,512,2010,2048,2010,1850,1609,1450,1260,1140,1678,1957,1593,1369,1989,1829,1607,1449,1197,835,486,1285,1951,1752,1466,1132,1983,1892,1552,2051,2048,853,2048,1727,2048,1802,410,1749,2048,2048,2048,1907,1466,283,1336,2048,1350,25,1034,2057,2057,2048,2048,2048,2048,2048,2048,2048,2054,2055,1719,1176,2048,1885,902,1732,2048,2048,2048,2048,2048,2048,2034,1483,749,2048,2048,2048,2048,2056,2052,1747,1325,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1517,455,868,2048,2016,2047,2053,2048,2048,2048,2048,2053,2048,2048,2048,2016,1613,1259,846,320,817,1901,1842,2011,2056,2048,2049,1786,970,1757,1728,785,1464,2048,2048,2048,2050,1596,1103,693,703,857,2048,2048,2048,2048,2051,2048,2048,2048,2048,2057,1879,1569,1163,815,1112,2048,2048,2048,2048,1888,1405,1213,658,1375,2055,2048,861,2048,2039,2048,2048,2048,1981,2035,1404,1389,958,584,598,1786,1941,1415,1519,2057,2048,2054,2057,2055,2057,1950,1999,1391,2057,2054,1915,1755,1481,1378,1204,1157,2048,2057,2048,2048,2048,2055,2048,1530,1034,1134,2048,2048,2048,2048,2048,2048,2053,2028,1883,1737,1556,1334,1275,2056,2057,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2054,2057,2057,2056,2050,2048,2053,2057,2056,2048,2048,2048,2057,2048,2057,1986,1293,1576,1817,2056,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2034,1909,1695,1907,2030,1127,1922,2048,2048,2048,2048,2057,2048,2043,2038,1765,1084,886,1924,2048,2048,2048,2037,1499,2048,2048,2048,2048,2048,2048,2049,1272,1760,2048,2056,2028,1985,2027,1832,1567,1503,1479,1382,1160,1117,1175,1317,1458,1299,1174,1123,1060,1050,1182,1033,1070,1222,1110,1674,1458,1377,1463,1131,1274,1575,1183,1190,1402,1395,1367,1320,1231,1237,1071,668,1139,1256,1417,1483,1395,1387,1357,1115,1169,1369,1408,1123,1627,1346,1292,1022,1106,1186,1220,1088,1190,382,751,732,889,979,731,1169,663,1104,1102,1141,1218,1649,1657,1465,593,734,492,273,1371,975,525,362,612,563,830,934,694,701,832,679,673,754,705,714,990,621,348,1166,1510,981,1455,1542,521,1523,1383,587,293,241,484,1609,1120,582,548,389,791,166,135,69,75,92,513,708,958,596,272,312,827,885,532,592,518,73,71,364,827,748,498,608,512,539,580,229,272,547,609,573,222,274,172,340,306,363,579,118,489,559,74,133,118,160,159,473,1285,1253,581,222,82,473,442,684,492,342,243,386,418,319,313,310,452,146,691,719,475,474,535,640,409,453,398,334,302,395,189,1295,1683,1154,1056,904,916,1174,1264,1244,1249,1372,1319,1402,1415,1299,1314,1371,1405,1292,1450,1419,1492,1541,1484,1353,1179,1195,1172,1191,1099,918,867,1205,1301,1897,1594,1629,1524,1461,1567,1628,1588,1665,1779,1815,1809,1800,1845,1737,1791,1737,1658,1765,1597,1702,1756,1748,1680,1575,1682,1490,1636,1550,1608,1479,1512,1602,1853,1300,1277,1204,1269,1198,1311,1250,1355,1482,1463,1588,1583,1518,1522,1480,1457,1531,1532,1435,1471,1395,1514,1478,1160,1175,1095,1197,1229,1209,1312,1219,1342,1274,1209,1183,1154,1181,1153,1180,1500,1913,1489,1534,1434,1408,1574,1574,1928,1416,1304,1652,1468,1575,1511,1574,1790,1522,1569,1513,1571,1782,988,1021,1038,1278,1806,1571,1587,1533,1661,1368,1350,1307,1352,1203,888,1511,1741,1544,392,385,387,1150,1156,1194,1252,1872,1843,1969,1978,1958,1934,1779,1764,1628,1162,1404,1385,1274,1223,1654,1717,1791,1803,1780,1763,1663,1810,1613,1921,1926,1350,1080,1524,1678,1008,1557,1716,1677,1586,1716,1096,1174,1208,1566,1655,1686,1691,1288,1766,1595,1781,1813,1710,1655,1723,1627,1690,1767,1767,1616,1785,1691,1779,1797,1834,1686,1781,1738,1602,1743,1782,1785,1795,1826,1611,1814,1703,1694,1660,1690,1701,1594,1664,1793,1749,1637,1727,1716,1735,1743,1693,1660,1765,1653,1795,1850,1598,1785,1691,1743,1800,1641,1786,1771,1547,1737,1704,1569,1715,1748,1831,1703,1810,1597,1800,1816,1677,1672,1688,1639,1699,1829,1718,1778,1842,1831,1847,1808,1859,1856,1904,1755,1846,1742,1699,1721,1793,1619,1715,1710,1691,1686,1713,1620,1612,1943,1931,1881,1918,1935,1922,1898,1923,1912,1897,1884,1005,1846,1835,1733,1770,1794,1799,1762,1809,1812,1865,1735,1723,1848,1700,1791,1734,1784,1778,1764,1826,1689,1826,1816,1808,1755,1697,1737,1801,1793,1834,1791,1794,1752,1628,1678,1760,1722,1802,1696,1878,1813,1647,1872,1851,1825,1826,1688,1720,1824,1850,1764,1695,1822,1761,1829,1663,1697,1617,1655,1522,1513,1599,1651,757,1583,1468,1675,1606,1696,1528,1726,1077,1662,1254,1499,1528,1617,1646,1701,1556,1739,939,1696,1547,1478,1574,820,1584,1532,1559,1680,1592,1700,1571,1716,1646,1588,2030,1981,1966,1982,2016,1803,1996,1880,2016,2028,1796,2012,2041,1856,2014,2017,1987,1992,2032,1989,2013,1951,1936,1824,2040,2035,1713,1808,1924,1869,1835,1772,1721,1810,1855,1894,1873,1848,1789,1693,1722,1765,1822,1847,1849,1846,1772,1742,1742,1885,1879,1824,1861,1828,1725,1639,1790,1894,1822,1838,1859,1831,1708,1739,1784,1860,1764,1864,1893,1883,1763,1730,1853,1878,1820,1857,1750,1761,1723,1821,1870,1818,1835,1847,1719,1748,1839,1875,1849,1893,1811,1720,1844,1897,1869,1803,1808,1867,1784,1727,1824,1700,1486,1548,1526,1611,1482,1578,1616,1484,1726,1577,1521,1741,1514,1689,1964,1774,1735,1914,1717,1803,1769,1677,1523,1605,1520,1610,1487,1561,1590,1524,1681,1666,1614,1862,1599,1846,1891,1792,1698,1871,1734,1626,1574,1573,1664,1621,1502,1656,1480,1610,1559,1485,1709,1372,1580,1917,1716,1743,1832,1761,1802,1866,1747,1700,1779,1570,1675,1526,1515,1524,1457,1618,1505,1630,1625,1554,1909,1513,1697,1869,1775,1653,1788,1582,1527,1695,1603,1647,1497,1447,1615,1464,1663,1550,1450,1837,1561,1598,1863,1664,1689,1779,1728,1754,1837,1764,1713,1847,1767,1715,1637,1855,1759,1742,1827,1702,1775,1735,1739,1684,1684,1738,1509,1639,1750,1549,1802,1649,1733,1636,1716,1690,1658,1780,1594,1813,1674,1784,1685,1742,1712,1775,1496,1647,1589,1803,1637,1698,1559,1584,1558,1519,1539,1747,1600,1747,1592,1736,1794,1744,1670,1740,1892,1755,1710,1703,1601,1567,1717,1770,1635,1548,1662,1658,1467,1597,1671,1507,1525,1718,1666,1746,1844,1779,1731,1807,1770,1743,1837,1811,1658,1534,1874,1582,1618,1679,1571,1623,1424,1718,1438,1516,1748,1568,1651,1769,1490,1675,1861,1864,1691,1914,1719,1608,1877,1616,1537,1739,1613,1669,1444,1569,1447,1531,1682,1560,1605,1773,1597,1787,1874,1779,1743,1911,1802,1688,1782,1707,1580,1641,1592,1661,1407,1384,1697,1395,1555,1784,1510,1608,1690,1476,1647,1618,1645,1823,1733,1589,1760,1781,1692,1813,1653,1517,1718,1383,1569,1469,1497,1492,1549,1631,1645,1533,1796,1757,1784,1740,1658,1791,1750,1701,1714,1773,1741,1745,1693,1755,1817,1678,1754,1783,1680,1647,1734,1822,1665,1724,1778,1818,1657,1690,1760,1710,1623,1690,1695,1838,1784,1718,1652,1716,1819,1789,1799,1525,1446,1848,1815,1836,1534,1790,1788,1879,1731,1680,1709,1768,1803,1656,1656,1782,1759,1854,1677,1672,1770,1785,1775,1727,1641,1749,1868,1688,1766,1769,1534,1823,1847,1818,1811,1713,1792,1848,1746,1802,1713,1698,1701,1688,1687,1689,1742,1761,1905,1897,1898,1935,1942,1945,1941,1901,1707,1778,1891,1885,1776,1810,1789,1806,1828,1907,1934,1896,1895,1852,1828,1924,1838,1836,1815,1794,1868,1815,1925,1945,1910,1819,1810,1830,1859,1913,1914,1903,1832,1830,1796,1810,1910,1856,1826,1818,1893,1822,1762,1794,1884,1928,1942,1780,1912,1902,1906,1919,1942,1924,1904,1786,1915,1934,1933,1907,1836,1852,1738,1748,1766,1698,1746,1715,1807,1795,1792,1762,1811,1745,1884,1736,1837,1760,1868,1739,1714,1780,1706,1709,1802,1685,1862,1775,1874,1819,1867,1854,1834,1873,1843,1861,1823,1861,1849,1822,1852,1782,1858,1799,1805,1889,1763,1827,1809,1842,1863,1807,1792,1810,1802,1796,1790,1766,1794,1773,1852,1763,1880,1704,1813,1813,1698,1837,1749,1840,1804,1656,1765,1714,1700,1810,1827,1862,1851,1945,1890,1727,1892,1637,1907,1768,1940,1754,1736,1865,1769,1741,1907,1785,1728,1690,1681,1669,1756,1697,1726,1716,1686,1704,1752,1732,1757,1679,1783,1772,1729,1756,1762,1764,1692,1733,1742,1801,1746,1725,1758,1803,1817,1617,1943,1949,1594,1856,1632,1858,1810,1913,1562,1887,1532,1970,1854,1673,1733,1725,1751,1409,1933,1479,2002,1515,1891,1487,1688,1701,1776,1664,1501,1835,1500,1915,1523,1915,1512,1759,1656,1849,1653,1600,1742,1573,1868,1987,1938,2002,1962,1977,2011,1862,1972,2000,1906,1464,1858,1917,1491,1334,1413,684,853,793,989,1317,1496,849,2012,2016,2025,2018,2037,2020,2030,2000,1946,1927,1673,1667,1726,1728,1740,1663,1755,1756,1674,1692,1774,1585,1956,1727,1642,1569,1707,1700,1810,1764,1758,1890,1654,1775,1735,969,844,1543,1181,634,629,1651,1666,1810,1790,1798,1791,1854,1690,1623,1796,1985,1962,1992,1983,1984,1978,1976,1953,1935,1818,1932,1480,1584,767,1369,1744,1486,1392,1511,1455,924,1425,1432,1567,1592,1736,1851,1854,1814,1539,1533,1538,1584,1575,1614,1573,1566,1624,1834,1873,1857,1917,1998,1867,1847,1875,1858,1890,1872,1622,1934,1942,1640,1592,1517,1007,1610,1484,888,1651,1533,1572,1602,1780,1970,1584,1987,1975,1226,1965,1958,1823,1972,1982,1919,1265,1946,1957,1755,1393,1794,1844,1893,1914,1667,1855,2016,1815,1963,1440,1979,1873,1607,2000,1637,1989,1979,1211,1966,1960,1823,1975,1985,1931,1198,1962,1938,1753,1370,1788,1844,1880,1917,1661,1847,2007,1960,2005,1980,1929,1978,1970,1803,1724,1741,1710,1605,1558,1744,1428,1656,1565,1620,1798,1896,1859,1783,1771,1632,1814,1861,1758,1376,1741,1621,1746,1492,1712,1822,1998,1987,1966,1959,1965,1948,1967,1969,1184,1302,1642,1481,1574,2002,1843,1366,1806,1997,1880,1134,1914,1972,1838,1650,1862,1931,1980,1817,1625,1852,2021,1941,1849,1384,1859,2002,1833,1774,1302,1805,1903,1807,1439,1773,1678,1916,1370,1888,1972,1835,1774,1516,1270,1648,1792,1944,1918,1330,1920,1957,1969,1905,1966,1933,1938,1971,1877,1946,1974,1916,1957,1967,1927,1959,1976,1941,1981,1959,1953,1992,2001,1906,1498,1544,2000,2030,1997,1691,1913,1866,1979,1855,1721,1639,1545,1601,1462,1495,1049,1957,1987,1760,1136,1465,1384,1786,1955,1837,1703,1989,1950,1915,1883,1623,1751,1808,1622,1710,1781,1760,1900,1913,1840,1818,1723,1722,1310,993,1805,1559,1716,1398,1693,1403,1718,1755,1826,1716,1722,1603,1824,1922,1837,1696,1726,1518,1492,1152,1838,1832,1873,1871,1625,1403,1383,1904,1648,1791,1839,1736,1856,1743,1815,1746,1918,1865,1859,1768,1604,1545,1690,1725,1892,1779,1784,1720,1821,1741,1653,1382,1012,828,1231,1505,1814,1693,1843,1707,1710,1549,1596,1886,1751,1741,1667,1550,1719,1766,1769,1870,1799,1792,1794,1690,1720,1797,1816,1757,1413,1226,1146,1164,1162,1124,1067,1196,1404,1636,1630,1640,1591,1595,1660,1629,1632,1884,1764,1765,1748,1713,1772,1755,1718,1739,1716,1797,1970,1744,1770,1753,1918,1943,1885,1924,1915,1917,1902,1906,1868,1929,1889,2029,1865,1875,1900,1942,1712,1712,1677,1711,1677,1686,1708,1664,1886,1696,1690,1692,1702,1687,1683,1681,1758,1844,1761,1737,1767,1743,1744,1761,1744,1814,1502,1543,1524,1549,1540,1547,1531,1556,1581,1505,1521,1439,1783,1709,1680,1685,1706,1741,1701,1725,1776,1639,1730,1715,1752,1694,1732,1676,1734,1729,1737,1721,1751,1767,1671,1713,1685,1830,1757,1731,1753,1739,1773,1734,1754,1866,1741,1800,1829,1870,1792,1821,1793,1815,1810,1840,1803,1863,1919,1767,1788,1800,1862,1598,1626,1583,1587,1593,1605,1586,1687,1692,1637,1624,1631,1628,1608,1638,1636,1867,1809,1812,1797,1802,1780,1772,1792,1819,1783,1636,1245,1630,1597,1676,996,1644,1785,1783,1837,1868,1878,2047,1884,1931,1951,1867,1931,2037,1938,1902,1917,1878,1932,2043,1819,1590,1623,1642,1523,1648,1851,1670,1608,1627,1571,1689,1971,1791,1752,1601,1732,1757,1699,1595,1762,1892,1789,1659,1637,1784,1731,1626,1638,1912,1996,2002,1994,1993,2004,2020,2024,2021,2023,1995,2013,1992,1957,1757,1798,1932,1941,1889,1953,1971,1867,1820,1797,1837,1782,1915,1938,1893,1924,1817,1931,1905,1916,1860,1903,1916,1918,1876,1612,1834,1684,1676,1718,1653,1679,1838,1762,1866,1821,1832,1905,1884,1827,1873,1803,1587,1461,1394,1419,1769,1626,1671,1640,1642,1635,1633,1676,1613,1547,1594,1592,1645,1650,1673,1643,1641,1824,1601,1598,1632,1578,1611,1588,1589,1551,1794,1660,1621,1648,1578,1649,1635,1603,1740,1602,1610,1610,1575,1600,1601,1600,1581,1776,1679,1653,1650,1613,1656,1637,1625,1715,1612,1557,1537,1506,1510,1527,1523,1489,1764,1560,1567,1568,1596,1558,1542,1524,1602,1761,1581,1587,1619,1618,1587,1517,1561,1753,1597,1568,1560,1585,1579,1518,1481,1593,1752,1580,1611,1599,1622,1574,1534,1556,1743,1652,1600,1612,1636,1652,1601,1582,1634,1794,1564,1613,1597,1643,1594,1597,1550,1704,2006,2002,1972,2017,1951,1988,1907,1953,1918,1978,1909,1975,1952,1991,1937,1971,1979,1385,1362,1338,1284,1487,1425,1379,1377,1468,1380,1331,1379,1467,1439,1386,1378,1349,1369,1414,1374,1363,1481,1435,1386,1403,1471,1414,1399,1438,1413,1420,1361,1372,1296,1587,1417,1365,1381,1366,1379,1359,1377,1483,1357,1376,1357,1361,1595,1473,1566,1371,1336,1370,1376,1401,1411,1422,1373,1482,1417,1370,1395,1490,1426,1402,1404,1454,1554,1531,1598,1589,1456,1422,1516,1435,1524,1507,1545,1486,1578,1332,1207,1289,1398,1239,1334,1302,1256,1544,1447,1455,1489,1511,1337,1417,1380,1367,1405,1477,1404,1421,1795,1699,1604,1712,1597,1715,1598,1680,1770,1673,1643,1694,1697,1641,1689,1642,1723,1756,1833,1641,1838,1658,1774,1631,1782,1812,1733,1696,1717,1808,1636,1741,1650,1778,1735,1694,1596,1695,1640,1669,1617,1660,1719,1750,1734,1643,1783,1623,1729,1636,1745,1726,1499,967,1864,1968,1453,1571,1501,1801,1610,1460,1754,1614,1620,1655,1513,1522,1805,1637,1703,1657,1618,1823,1703,1459,1727,1772,1696,1359,1708,1837,1728,1673,1798,1797,1730,1801,1852,1728,1698,1691,1831,1731,1792,1706,1653,1832,1849,1802,1827,1864,1761,1497,1493,1405,1770,1731,1743,1622,1320,1763,1762,1861,1725,1733,1334,1587,1636,1647,1706,1459,1426,1855,1865,1840,1681,1337,1742,1870,1969,1899,1836,1319,1548,1809,1820,1776,1473,1575,1766,1791,1793,1735,1329,1719,1814,1934,1804,1802,1405,1483,1694,1703,1737,1550,1562,1702,1854,1811,1812,1341,1622,1825,1963,1831,1882,1512,1416,1718,1800,1791,1617,1677,1444,1312,990,959,1260,1305,1356,1175,1324,1372,1155,1090,980,1105,1236,1137,1169,1376,1235,1377,1328,1375,1330,1221,1228,1507,1840,1596,1561,1535,1519,1592,1572,1587,1588,1583,1567,1606,1630,1641,1621,1619,1513,1530,1477,1502,1608,1518,1464,1477,1466,1532,1821,1717,1720,1686,1711,1694,1666,1684,1747,1708,1717,1720,1722,1727,1707,1712,1708,1707,1690,1676,1583,1619,1679,1716,1676,1651,1723,1792,1751,1715,1732,1929,1933,1852,1871,1920,1884,1888,1742,1778,1521,1463,1791,1698,1710,1713,1682,1674,1710,1727,1756,1741,1696,1650,1734,1655,1660,1719,1708,1839,1685,1669,1680,1633,1676,1691,1684,1662,1709,1674,1504,1685,1484,1680,1484,1696,1745,1616,1610,1608,1625,1578,1587,1607,1600,1729,1617,1559,1631,1629,1637,1584,1639,1754,1621,1603,1550,1589,1561,1613,1551,1611,1672,1582,1421,1642,1433,1597,1415,1616,1598,2028,1988,1965,1995,2003,1995,1973,2026,2054,1983,1947,1953,1991,1959,1960,2004,1983,1903,1794,1774,1789,1811,1809,1783,1789,1961,1838,1858,1868,1861,1864,1849,1841,1864,1653,1565,1791,1694,1509,1688,1349,1573,1691,1703,1695,1650,1633,1695,1723,1663,1840,1722,1790,1741,1735,1730,1788,1768,1728,1831,1781,1800,1705,1729,1769,1822,1717,1858,1642,1625,1638,1658,1640,1656,1625,1649,1846,1713,1724,1703,1722,1724,1743,1699,1852,1960,2014,2006,2045,1987,1999,1979,2002,2004,2030,2009,2008,2011,2027,2004,2036,2025,2012,2021,2000,2008,1865,1875,1735,1869,1562,1303,1605,1860,1803,1901,1877,1783,1819,1735,2004,2003,2054,2018,1897,1534,1560,1575,1611,1790,1825,1767,1767,1795,1790,1827,1704,1734,1654,1634,1775,1758,1777,1732,1757,1760,1729,1688,1673,1816,1815,1816,1805,1778,1788,1763,1807,1805,1903,1981,1977,1988,1982,1889,1806,1839,1845,1830,1838,1793,1805,1915,1862,1868,1811,1984,1949,1980,2000,1967,1962,1994,1978,1968,1905,1998,1875,1867,1822,1758,1773,1903,1912,1930,1974,1925,1879,1747,1750,1873,1884,1836,1706,1596,1475,1572,1849,1962,1951,1973,1959,1857,1797,1886,1762,1840,1849,1781,1919,1703,1887,1813,1866,1785,1714,1765,1746,1747,1765,1807,1491,1724,1485,1624,1444,1464,1468,1635,790,1060,1165,998,744,848,820,980,1115,1001,1189,923,921,1012,835,900,1741,1834,1804,1845,1957,1926,1748,1744,1696,1764,1775,1744,1684,1736,1731,1727,1657,1594,1868,1930,1898,1972,1949,1939,2020,1962,2004,1836,1857,1857,1840,2038,2004,1979,1999,2048,2041,2025,2036,2039,1802,1593,1548,1556,1499,1609,1575,1737,2028,2019,2009,2041,2000,2030,2031,2013,2034,1906,2005,1975,1596,1624,1419,1346,1357,1543,1644,1711,1649,1659,2027,2030,1996,2045,1868,1648,1734,1603,1570,1714,1632,1885,1879,1921,1921,1874,1882,1925,1927,1954,1980,1865,1646,1799,1680,1930,1943,1983,1937,1961,1931,1923,1928,1928,1199,1092,1090,1078,1670,1749,1799,1784,1411,1328,1223,1370,1647,1828,1809,1863,1922,1901,1913,1932,1744,1434,1540,1444,1508,1514,1440,1626,1623,1363,1855,1888,1850,1598,1609,1619,1671,1842,1586,1579,1340,1574,1616,1826,1795,1583,1541,1430,1594,1642,1872,1715,1699,1660,1793,1719,1727,1709,1694,1735,1741,1746,1693,1925,1927,1918,1929,1943,1921,1911,1944,1933,2048,2003,1997,2018,1989,2031,1969,2036,2035,2034,2038,2022,2046,2027,2031,2020,2026,2053,2048,2036,2041,2031,2051,2023,2047,2048,2017,2020,2022,2034,2000,2017,2006,2035,1398,1061,1104,1060,1054,761,725,768,974,1914,1758,1917,1762,1508,1488,1502,1588,1502,1519,1489,1562,1500,1498,1527,1509,1486,1391,1366,1386,1408,1379,1333,1370,1459,1391,1342,1325,1381,1676,1518,1642,1679,1599,1703,1847,1821,1882,1731,1841,1664,1699,1659,1689,1679,1668,1684,1674,1741,1558,1529,1536,1591,1569,1546,1559,1690,1550,1568,1548,1575,1523,1501,1522,1544,1895,1902,1953,1928,1969,1976,1983,1997,2032,1879,1929,1890,1905,1939,1895,1913,1882,2013,2013,2052,2024,2052,1951,1992,1965,1992,2045,2013,2046,2049,2022,1775,1673,1821,1875,1894,1853,1830,1901,1784,1715,1624,1464,1504,1516,1388,1582,1781,1905,1937,1794,1708,1846,1686,1760,1799,1762,1934,1877,1968,1907,1600,1484,1683,1744,1831,1837,1791,1884,1846,1827,1822,1816,1830,1884,1691,1690,1687,1688,1715,1689,1658,1744,1934,1856,1918,1924,1897,1896,1860,1825,1999,1943,1868,1919,1931,1929,1918,1859,1917,1786,1825,1779,1778,1832,1863,1970,1859,1841,1849,1754,1890,1803,1835,1891,1852,1839,1939,1879,1863,1826,1552,1070,1395,1562,1569,1580,1591,1581,1628,1624,1594,1706,1815,1800,1685,1847,1820,1675,1821,1769,1714,1804,1712,1815,1741,1935,1881,1919,1931,1959,1895,1579,1881,1800,1488,1496,1505,1761,1647,1696,1767,1669,1600,1574,1651,1623,1644,1615,1673,1913,1954,1969,1989,1999,1988,1997,2003,1996,2030,1998,1985,1996,1810,1846,1747,1820,1773,1868,1754,1911,1740,1592,1589,1548,1656,1666,1460,1453,1580,1769,1611,1464,1599,1405,1590,1412,1567,1587,1570,1561,1466,1510,1415,1497,1405,1474,1623,1666,1558,1652,1594,1656,1539,1607,1641,1728,1629,1557,1624,1563,1625,1533,1575,1680,1625,1630,1627,1656,1654,1623,1596,1587,1764,1662,1617,1670,1641,1661,1620,1625,1773,1619,1612,1608,1608,1644,1598,1605,1587,1886,1790,1787,1768,1801,1769,1800,1767,1884,1650,1652,1638,1625,1646,1624,1616,1618,1886,1812,1831,1820,1820,1819,1812,1784,1892,1797,1762,1756,1753,1768,1727,1749,1746,1831,1827,1757,1767,1675,1543,1581,1632,1657,1817,1766,2048,2048,1808,1829,1744,1847,2004,1953,1794,1842,1868,1926,1951,1996,1970,1825,1667,1781,1718,1833,1853,1926,2048,2047,2048,2057,1920,1892,1757,1769,1726,1830,1647,1790,2056,2037,1940,1984,1899,1922,1931,1892,1838,1767,1600,1795,1935,1938,1778,1888,1943,1938,1802,1870,1957,1790,1444,1574,1698,1777,1788,1892,1873,1809,1459,1584,1785,1857,1835,1878,1746,1712,1594,1701,1801,1864,1875,1940,1977,1943,1862,1872,1643,1663,1575,1583,1797,1718,1716,1707,1633,1649,1641,1679,1572,1690,1904,1931,1854,1904,1693,1836,1651,1834,1692,1814,1679,1898,1919,1898,1709,1798,1639,1785,1962,1863,1663,1607,1704,1780,1689,1634,1446,1453,1480,1488,1449,1475,1452,1607,2025,2019,2023,2006,2024,2028,2024,2002,1832,1857,1859,1856,1863,1795,1529,1501,1556,1544,1541,1521,1312,1612,1734,1841,1790,1835,1830,1939,1836,1890,1624,1793,1917,1924,1943,1956,1901,1941,2004,1849,1543,1581,1632,1691,1809,1883,1795,1879,1808,1903,2037,2020,2022,1988,1812,1836,1810,1826,1853,1717,1590,1612,1620,1744,1862,1827,1661,1798,2034,2037,2024,1983,1806,1862,2003,1909,1734,1804,1743,1873,1883,1851,1692,1789,1642,1687,1619,1801,2051,2035,2043,1899,1586,1616,1677,1708,1663,1657,1298,1465,1554,1685,1795,1554,1122,1439,1969,1994,1842,1942,2036,2048,1984,2012,1869,1866,1808,1718,1797,1717,1796,1700,1739,1674,1694,1626,1583,1685,1693,1715,1565,1545,1439,1608,1807,1877,1806,1812,1550,1589,1396,1539,1574,1632,1629,1670,1707,1745,1698,1729,1780,1825,1672,1711,1573,1726,1778,1642,1281,1344,1419,1580,1853,1772,1457,1460,1384,1381,1346,1441,1497,1580,1603,1609,1584,1617,1572,1560,1365,1435,1463,1506,1404,1519,1518,1587,1615,1556,1645,1580,1598,1623,1590,1610,1400,1677,1663,1688,1659,1632,1564,1588,1625,1607,1542,1549,1550,1645,1636,1647,1530,1543,1586,1583,1640,1694,1648,1693,1518,1561,1497,1546,1648,1732,1828,1794,1647,1753,1836,1843,1805,1749,1444,1435,1412,1443,1443,1574,1689,1710,1671,1727,1787,1759,1671,1799,1532,1692,1204,1494,1548,1839,1668,1965,1699,1906,1621,1834,1459,1794,1633,1776,1292,1312,891,1132,1694,1478,1223,1382,1484,1470,1489,1465,1470,1458,1395,1364,1382,1419,1417,1261,1235,1022,1021,1789,1464,1557,1317,1459,1436,1646,1824,1962,2028,1792,1966,1929,1703,1783,992,748,798,909,1001,1000,1154,997,1059,867,783,949,1027,862,917,875,931,939,734,893,829,942,970,1104,873,916,1294,1251,562,542,542,515,520,1048,1007,1080,978,746,771,933,843,1082,1072,822,969,843,769,526,593,569,744,946,972,464,844,609,774,673,770,1073,940,1042,1003,528,596,504,570,636,738,664,939,690,786,686,902,1256,742,870,1009,1011,1027,862,1013,773,917,1009,1025,902,681,937,320,575,898,1085,335,578,976,692,697,585,609,700,921,936,891,611,678,743,927,2049,1666,903,991,1291,1274,673,1425,1022,1174,788,1005,1277,1096,1648,1599,1578,1593,1477,38,45,98,49,110,38,120,241,356,466,551,645,553,665,802,709,1117,1408,1482,1474,1380,1677,1589,1572,1654,1609,1706,1642,1723,1793,1670,1634,1570,1722,1683,1497,1557,1424,1373,914,883,719,650,593,610,558,585,536,394,358,219,152,84,47,45,44,355,1966,48,49,45,40,45,48,49,45,41,45,78,290,888,1452,1279,1466,1407,1403,1256,1046,1114,858,638,771,883,770,832,822,953,991,904,823,730,724,942,927,809,805,814,821,737,675,547,472,181,48,47,45,44,45,48,47,45,44,45,50,47,1886,1574,1454,1379,1327,1333,1320,1335,1300,1291,1271,1367,1266,1189,1320,1184,1030,1009,926,925,937,782,774,1038,1140,1129,1360,1390,1644,1652,1575,1625,1631,1384,1403,1163,1202,1257,1360,1503,1432,1420,997,982,1097,1171,1178,1238,1233,1288,1207,1256,1333,1397,1297,1340,1361,1348,1855,937,48,49,45,44,45,239,603,869,958,1148,1523,1701,1714,1800,1729,1722,1730,1756,1758,1827,1854,1773,1734,1430,1362,1354,1411,1772,1837,1827,1901,1904,1940,1926,1878,1844,1901,1877,1805,1787,1748,1658,1820,1894,1626,1420,1388,1226,646,154,49,47,45,44,47,49,675,853,1002,1182,1209,1398,517,993,1045,913,878,1033,883,1724,1605,1577,1653,1720,1592,1627,1633,1755,1632,1467,1846,1617,1548,1624,1668,1592,1556,1690,1718,1655,1585,1617,1814,1670,1615,1496,1898,1857,1822,1771,1787,1989,2020,2026,983,47,57,161,222,303,393,450,617,686,982,1028,1066,1438,1388,1384,1465,1419,1350,1386,1432,1473,1639,1647,1624,1587,1578,1508,1574,1473,1459,1508,1466,1412,1463,1633,1749,1683,1690,1652,1652,1666,1648,1520,1382,1436,1468,1395,1153,1067,1143,1101,1118,1095,999,1040,1001,1371,1941,1443,1411,1365,1315,1309,1340,1315,1267,1338,1359,1290,1168,1285,1285,1103,1002,937,969,978,854,716,952,1112,1139,1212,1368,1552,1669,1610,1592,1659,1467,1470,1292,1101,1153,1341,1409,1478,1459,1182,956,1034,1139,1172,1269,1202,1303,1194,1240,1263,1301,1381,1299,1349,1300,1490,2040,1401,1336,977,883,1399,1146,1100,883,985,945,924,673,1365,1497,1501,1356,1461,1512,1263,1390,1466,1490,1400,1430,1464,1408,1418,1160,1225,1095,1360,1599,1648,1728,1635,1420,1467,1478,1533,1482,1450,1479,1366,1244,1278,1079,1113,822,992,1213,1282,1337,1433,1363,1367,1381,1321,1991,445,46,48,84,88,59,71,192,318,390,496,618,632,639,723,729,861,1364,1436,1509,1409,1566,1678,1498,1599,1648,1625,1716,1659,1720,1763,1674,1614,1673,1678,1635,1476,1510,1399,1205,905,746,687,603,607,533,582,571,499,386,332,225,66,83,45,45,45,1372,957,49,45,45,45,48,49,45,45,45,48,169,420,1389,1314,1403,1437,1433,1367,1077,1119,993,732,637,928,815,844,843,881,964,931,847,782,729,786,980,828,795,781,845,749,692,656,605,289,76,49,45,45,45,43,49,45,45,45,44,49,872,1463,45,45,48,49,45,100,922,1119,1098,1082,1026,1044,1172,1053,1009,1104,1115,1260,1460,1700,1675,1793,1564,1425,1513,1360,1272,1027,1267,1356,1251,1239,1261,1410,1545,1563,1440,1628,1681,1486,1505,1551,1610,1433,1038,989,982,1167,1209,983,495,45,48,49,45,45,368,1950,48,49,113,185,264,378,458,544,628,831,1124,1155,1310,1474,1394,1480,1603,1592,1592,1544,1660,1710,1808,1748,1785,1755,1667,1689,1640,1559,1506,1558,1520,1529,1566,1801,1774,1717,1677,1646,1652,1671,1594,1468,1413,1549,1459,1258,1077,1129,1069,1101,1073,1056,1031,958,940,1899,2048,1403,967,993,867,912,1006,964,888,1010,881,849,802,904,1162,1287,1353,1230,1326,1384,1438,1414,1389,1474,1418,1298,1081,993,997,952,1144,1133,1135,1146,1102,992,1080,1297,1265,1282,1283,1153,1089,1259,1156,1143,1254,1294,1327,1286,1264,1279,1282,1263,1300,1279,1344,1403,1521,1287,1234,1261,1414,1373,1370,1433,1418,1436,1480,1367,1315,1294,1350,1437,1385,1394,1406,1371,1304,1245,1175,1194,1139,1292,1245,1148,1099,1196,1093,1070,876,1681,1340,1236,1247,1342,1369,1402,1400,1402,1444,1424,1453,1343,1254,1304,1410,1398,1430,1388,1320,1321,1270,1161,1189,1172,1267,1278,1151,1102,1221,1101,1091,962,1400,1625,939,1001,871,886,1000,938,925,981,881,908,756,886,1084,1267,1359,1255,1310,1372,1403,1436,1371,1447,1417,1321,1140,1004,1056,907,1158,1112,1148,1094,1161,975,1037,1256,1271,1284,1315,1186,1088,1241,1220,1138,1261,1254,1350,1318,1260,1287,1271,1261,1305,1296,1318,1378,1639,1970,86,177,1300,1251,860,1207,1134,1153,79,202,2048,1217,1075,1017,993,1030,1301,1253,1327,1213,1253,1361,1306,1438,1393,1393,1244,1350,1505,1696,1500,1460,1361,1412,1467,1486,1415,1510,1540,1480,1388,1503,1509,1495,1584,1662,1679,1594,1506,1581,1526,1589,1555,1481,1487,1448,1451,1424,1260,1221,1198,1218,1228,1306,1292,1145,1124,1227,1850,1525,1104,1063,900,1067,1157,1246,1158,1063,969,1004,962,995,1193,1226,1290,1170,1059,1175,1301,1405,1340,1335,1153,1257,1560,1527,1623,1681,1624,1678,1549,1512,1583,1660,1701,1738,1652,1634,1492,1407,1337,1402,1377,1359,1586,1611,1553,1506,1473,1418,1447,1423,1413,1400,1332,1363,1754,1501,705,757,891,950,997,1013,1078,1169,1240,1183,1168,1280,1243,1374,1381,1358,1499,1445,1505,1523,1452,1526,1601,1684,1638,1563,1652,1640,1750,1761,1772,1841,1710,1574,1620,1637,1669,1710,1717,1716,1753,1719,1699,1640,1606,1786,1814,1742,1698,1686,1757,1708,1509,1220,1176,826,858,1235,1180,1669,1453,1539,1793,998,45,45,45,48,49,271,966,1098,1121,1061,1012,1027,1201,1018,1032,1147,1129,1313,1507,1722,1731,1741,1527,1407,1530,1362,1178,1016,1364,1289,1259,1201,1318,1476,1568,1511,1486,1663,1645,1451,1531,1541,1618,1331,957,1046,1067,1187,1149,884,310,38,45,48,49,45,818,1511,45,42,49,45,45,45,43,49,45,45,99,332,1147,1400,1354,1446,1407,1363,1165,1051,1102,803,598,870,838,799,872,829,961,955,849,820,741,743,963,859,803,767,785,780,725,697,569,404,148,45,48,49,45,40,45,48,49,45,41,45,322,2042,883,894,884,1187,1072,964,983,1045,1010,984,869,1065,1017,1072,969,1223,1407,1369,1475,1517,1469,1606,1449,1310,1288,1298,1459,1297,1304,1310,1183,1131,1010,1078,1276,1476,1444,1467,1326,1177,1154,1147,1201,1379,1062,1048,1095,1188,1071,894,837,1023,1017,1064,1048,1003,927,1942,461,45,48,49,45,52,306,652,900,1042,1214,1574,1693,1740,1789,1723,1727,1721,1748,1759,1861,1832,1780,1677,1386,1393,1279,1506,1784,1844,1862,1928,1884,1941,1948,1844,1861,1877,1876,1851,1835,1759,1758,1808,1894,1472,1466,1333,1132,512,88,45,48,47,45,44,45,812,1214,1331,1118,860,655,1048,1073,1002,1762,726,48,75,164,245,293,414,497,581,686,989,1084,1075,1480,1361,1385,1473,1404,1399,1352,1448,1461,1632,1661,1622,1581,1576,1528,1583,1489,1434,1506,1493,1461,1453,1659,1723,1697,1655,1645,1617,1637,1661,1514,1406,1481,1470,1361,1103,1057,1118,1116,1052,1077,1032,1039,985,1517,1847,1420,1406,1349,1330,1294,1338,1295,1287,1327,1344,1314,1178,1320,1246,1113,1042,936,889,994,858,742,946,1123,1125,1277,1402,1562,1631,1600,1607,1696,1444,1444,1257,1162,1198,1317,1440,1432,1430,1168,975,1020,1143,1181,1302,1180,1287,1199,1244,1291,1315,1355,1289,1369,1315,1567,1990,1419,1288,971,948,1379,1136,1067,883,922,977,1054,583,1409,1531,1503,1325,1441,1509,1285,1400,1499,1466,1404,1445,1502,1373,1373,1169,1271,1078,1381,1606,1644,1726,1605,1390,1426,1478,1565,1461,1429,1466,1360,1285,1226,1028,1101,884,1009,1240,1286,1404,1413,1387,1354,1358,1311,2048,178,45,44,45,50,47,635,1034,1076,1123,1064,993,1049,1138,951,1087,1140,1189,1401,1599,1702,1785,1645,1461,1419,1409,1370,1135,1139,1377,1227,1277,1228,1379,1505,1597,1458,1529,1693,1571,1418,1586,1526,1560,1149,986,971,1120,1235,1022,813,45,46,48,49,47,45,1637,697,45,50,87,73,83,57,183,285,393,491,588,630,628,703,742,813,1346,1450,1468,1435,1506,1702,1517,1590,1649,1634,1698,1661,1717,1776,1703,1595,1639,1667,1650,1454,1496,1423,1239,905,816,714,647,617,574,581,600,492,348,315,233,90,82,45,45,48,1137,1200,47,45,44,48,49,47,45,44,48,49,148,365,1298,1332,1422,1417,1409,1366,1129,1093,1028,759,639,900,841,787,828,905,979,992,855,786,751,781,975,814,804,787,834,740,717,684,596,323,94,45,45,45,48,49,45,45,45,48,49,45,629,1708,46,48,49,47,45,46,48,49,47,45,76,313,1030,1433,1323,1442,1410,1373,1219,1045,1127,826,638,830,850,779,869,835,966,990,868,814,725,731,953,883,805,777,785,831,747,693,581,441,177,45,48,49,45,45,45,48,49,45,45,45,128,2048,146,48,45,46,48,49,652,1035,1060,1118,1063,997,1044,1137,963,1071,1138,1191,1412,1612,1695,1785,1646,1462,1438,1410,1351,1133,1135,1389,1234,1261,1212,1386,1510,1591,1455,1522,1693,1567,1389,1601,1522,1560,1136,969,974,1119,1240,1033,795,45,45,45,42,49,45,1669,662,45,74,180,230,292,443,531,622,714,1012,1150,1195,1506,1404,1467,1563,1592,1597,1567,1651,1688,1742,1797,1767,1744,1723,1667,1670,1611,1508,1562,1559,1520,1534,1735,1790,1719,1698,1704,1630,1620,1643,1503,1391,1537,1501,1354,1132,1076,1116,1089,1068,1065,996,1021,978,1452,2048,1850,935,997,874,899,1003,986,881,956,930,908,811,848,1022,1294,1303,1258,1247,1399,1362,1466,1413,1481,1440,1420,1145,982,1030,943,1158,1088,1151,1046,1207,1031,1005,1262,1229,1226,1316,1202,1096,1179,1222,1184,1244,1224,1287,1336,1309,1284,1288,1255,1306,1354,1259,1407,1437,1365,1262,1235,1327,1337,1392,1437,1416,1427,1398,1419,1377,1276,1334,1361,1399,1409,1417,1321,1300,1260,1241,1201,1163,1242,1285,1186,1107,1200,1080,1108,1024,1283,1539,1298,1263,1275,1346,1330,1396,1474,1420,1371,1451,1382,1314,1351,1307,1367,1384,1445,1360,1354,1223,1247,1233,1199,1212,1277,1231,1158,1175,1133,1047,1061,935,2048,903,972,883,879,975,976,928,869,956,917,780,843,956,1274,1330,1316,1238,1354,1372,1449,1392,1476,1435,1407,1227,1018,1010,912,1122,1144,1183,1029,1171,1099,995,1218,1232,1225,1295,1272,1079,1117,1202,1199,1312,1223,1280,1314,1323,1275,1296,1295,1280,1331,1305,1414,1405,2012,718,77,1035,1251,1142,777,1306,1199,459,81,1520,1460,915,856,1071,1148,998,986,1001,1095,931,898,985,1006,1096,990,1127,1311,1382,1385,1462,1504,1531,1629,1319,1257,1355,1383,1397,1249,1406,1134,1174,1086,1012,1174,1388,1480,1449,1393,1273,1167,1229,1111,1357,1246,956,1095,1169,1136,943,874,924,1056,1016,1056,1010,1021,1319,1824,1130,1024,1003,1035,1085,1289,1345,1148,1238,1262,1340,1325,1423,1408,1352,1258,1405,1564,1661,1432,1494,1432,1417,1486,1440,1446,1512,1523,1389,1429,1527,1540,1505,1658,1671,1673,1539,1495,1625,1521,1563,1517,1503,1464,1465,1449,1349,1233,1225,1207,1221,1252,1336,1274,1165,1116,1308,1990,49,45,45,45,48,95,402,778,878,1075,1331,1625,1711,1775,1783,1709,1740,1753,1765,1794,1849,1807,1779,1644,1331,1464,1198,1621,1799,1821,1865,1932,1892,1924,1929,1813,1871,1845,1861,1819,1825,1768,1783,1839,1843,1424,1452,1299,1012,364,49,45,45,45,45,49,45,1861,1375,1118,1039,936,1062,1178,1206,1144,1060,1003,989,905,1032,1184,1243,1267,1140,1050,1216,1338,1334,1410,1252,1136,1343,1546,1536,1626,1661,1637,1690,1541,1545,1571,1682,1701,1706,1640,1605,1470,1398,1373,1394,1371,1367,1618,1617,1534,1503,1457,1428,1419,1399,1426,1358,1337,1364,1835,1294,724,777,891,941,1036,1082,1086,1209,1230,1169,1182,1255,1239,1395,1393,1368,1535,1421,1516,1480,1432,1500,1596,1634,1588,1641,1635,1670,1783,1747,1785,1848,1689,1570,1606,1618,1698,1740,1698,1728,1747,1705,1721,1655,1635,1794,1807,1740,1703,1708,1738,1686,1472,1181,1123,781,939,1228,1196,1601,1597,1422,1163,956,601,553,945,1086,1187,1218,1946,1465,1463,1479,1521,1515,1527,1532,1487,1504,1571,1689,1843,1896,1983,2006,1997,1997,2003,2036,2015,1952,1855,1775,1863,1897,1894,1933,2006,1997,1852,1857,1868,1769,1689,1754,1777,1823,1868,1949,1944,2011,2009,1998,1950,1754,1604,1492,1513,1514,1515,1520,1499,1505,1445,1436,1461,1523,2048,1328,1290,1269,1276,1311,1269,1386,1268,1228,1287,1340,1170,1355,1338,1459,1401,1427,1461,1393,1457,1514,1518,1491,1532,1555,1565,1672,1583,1599,1553,1591,1552,1527,1478,1634,1717,1632,1679,1684,1421,1366,1388,1367,1227,1242,1205,1259,1277,1157,1188,1182,1149,1219,1178,1272,1290,1272,2011,1318,1050,1147,1105,1056,972,1084,1103,1092,1162,1091,1168,1222,1349,1362,1492,1525,1601,1566,1533,1635,1521,1422,1471,1607,1540,1529,1533,1391,1449,1347,1342,1333,1334,1263,1425,1423,1559,1523,1472,1474,1343,1211,1144,977,1017,1030,1153,1165,1153,947,934,1048,952,891,992,1038,1713,1790,1550,1614,1545,1629,1622,1661,1653,1543,1585,1679,1694,1470,1459,1602,1598,1580,1719,1682,1546,1639,1535,1454,1475,1497,1625,1513,1447,1494,1571,1551,1546,1494,1584,1563,1625,1665,1688,1652,1542,1535,1684,1620,1511,1389,1207,1509,1534,1539,1433,1570,1620,1686,1716,1661,1499,1573,1809,1804,1023,1017,984,1051,1040,1129,1107,1102,1007,1010,1203,1168,1154,1059,1076,1191,1123,1227,1204,1193,1302,1340,1333,1188,1096,1142,1045,1057,974,965,1088,1049,918,900,898,983,960,1074,1042,977,1081,1000,1008,932,973,1029,1024,1035,1021,1087,1176,1084,1131,994,921,917,1033,2043,1325,1295,1293,1281,1293,1289,1385,1269,1234,1277,1337,1131,1248,1244,1393,1315,1319,1343,1321,1451,1576,1616,1620,1470,1350,1359,1515,1552,1699,1715,1668,1527,1323,1337,1371,1509,1456,1535,1474,1399,1371,1379,1364,1220,1251,1218,1256,1292,1157,1179,1183,1145,1224,1206,1290,1286,1256,2026,1682,1546,1615,1597,1598,1573,1543,1632,1577,1546,1570,1675,1754,1782,1770,1781,1482,1701,1589,1758,1834,1829,1746,1844,1869,1838,1841,1878,1724,1825,1677,1736,1755,1705,1675,1734,1617,1801,1932,1715,1637,1336,1348,1292,1316,1496,1499,1472,1523,1541,1505,1513,1579,1477,1453,1468,1500,1883,1363,805,757,871,927,801,670,919,887,794,865,730,948,1039,1166,1309,1241,1314,1253,1430,1531,1543,1500,1607,1623,1644,1548,1617,1591,1632,1619,1553,1458,1439,1509,1535,1533,1484,1430,1460,1406,1378,1310,1079,1269,1167,1181,1033,1012,1006,1095,971,983,1004,981,994,763,1251,1990,1792,1831,1891,1848,1818,1819,1856,1834,1739,1663,1547,1460,1562,2030,1662,1837,1883,1881,1858,1894,1902,1899,1700,1716,1571,1497,1475,2055,1701,1847,1894,1888,1919,1790,1798,1584,1464,1471,1564,1621,1617,1960,1658,1923,2020,1664,2002,1891,1735,2020,1768,1246,1522,1608,1486,1577,1935,1421,1420,1647,1550,1481,1870,1704,1267,1620,1602,1566,1617,2048,1678,1668,1661,1763,1795,1743,1730,1792,1781,1831,1810,1907,1736,1740,1796,1780,1831,1832,1807,1815,1867,1800,1768,1776,1765,1743,1765,1692,1797,1770,1742,1753,1796,1824,1756,1769,1753,1705,1733,1720,1753,1730,1721,1684,1654,1854,1870,1870,1848,1826,1814,1894,1856,1834,1743,1662,1542,2048,1988,1941,1904,1937,1944,1895,1897,1918,1902,1879,1870,1912,1857,1836,1758,1767,1748,1821,1831,1784,1847,1798,1872,1829,1809,1752,1769,1703,1597,1574,1604,1696,1798,1789,1725,1763,1674,1715,1728,1696,1755,1775,1794,1805,1689,1909,1904,1935,1885,1813,1835,1896,1916,1920,1897,1939,1878,2013,2027,1941,1970,2025,1985,2004,1997,1970,1938,1927,1941,1980,2003,1951,1931,1913,1990,1946,1988,1954,2025,2005,1992,1903,1933,1896,1942,1865,1658,1833,1782,1872,1899,1932,1977,1965,1967,1973,1946,1909,1995,1953,1845,1835,1846,1865,1851,1824,1797,1798,1809,1814,1766,1712,1612,1565,1417,1333,1117,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2049,1878,1503,1344,1441,1521,1584,1481,1465,1467,1190,1255,1487,1524,1241,1207,1401,1489,1478,1467,1493,1372,1399,1365,1502,1427,1507,1483,1467,1540,1430,1552,1529,1578,1462,1509,1586,1509,1518,1515,1401,1554,1592,1539,1409,1454,1443,1660,1636,1647,1664,1533,1560,1700,1674,1486,1635,1627,1586,2010,1022,1125,1192,1125,989,985,1056,1137,1112,1188,1104,1232,1191,1364,1400,1492,1545,1626,1556,1561,1625,1469,1405,1535,1602,1520,1578,1513,1370,1466,1289,1339,1390,1232,1340,1453,1464,1532,1503,1478,1448,1275,1172,1077,1033,1041,1071,1139,1201,1077,879,1044,1072,921,923,976,1085,2012,1248,1084,1180,1100,1048,979,1056,1131,1068,1171,1193,1322,1214,1326,1593,1496,1440,1550,1483,1470,1586,1544,1461,1557,1594,1552,1489,1465,1493,1643,1639,1805,1874,1885,1685,1686,1824,1769,1632,1575,1544,1315,1330,1172,937,1143,1075,1125,1162,1171,942,963,1016,927,926,999,1041,1767,1762,1504,1508,1523,1557,1526,1448,1548,1527,1498,1528,1591,1714,1743,1783,1749,1611,1611,1560,1754,1769,1830,1698,1767,1805,1854,1736,1835,1550,1788,1711,1749,1702,1686,1575,1603,1608,1768,1888,1689,1770,1274,1325,1340,1240,1406,1452,1484,1450,1464,1482,1448,1487,1460,1387,1396,1463,1761,1980,1668,1684,1690,1766,1743,1742,1742,1776,1819,1805,1852,1884,1739,1744,1781,1805,1832,1833,1813,1852,1843,1798,1761,1757,1759,1791,1752,1734,1802,1741,1739,1745,1823,1787,1762,1750,1759,1706,1693,1723,1754,1748,1695,1656,1717,1853,1892,1847,1845,1800,1837,1909,1864,1789,1711,1645,1486,1012,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1186,1344,1328,1460,1469,1519,1496,1425,1437,1482,1470,1417,1442,1348,1371,959,725,1106,1309,1523,1651,1785,1846,1865,1896,1852,1758,1763,1257,1773,1760,1851,1887,1849,1818,1795,1795,1682,1418,1173,982,1103,1365,1166,1262,1327,1127,1226,1227,1372,1469,1469,1514,1412,1394,1391,1342,2050,1471,1393,1480,1547,1509,1452,1551,1477,1463,1505,1615,1608,1420,1603,1693,1656,1690,1776,1727,1649,1719,1579,1565,1504,1561,1589,1603,1586,1612,1631,1599,1555,1546,1610,1600,1635,1590,1636,1544,1584,1584,1653,1619,1591,1315,1186,1489,1485,1431,1337,1493,1520,1600,1615,1456,1381,1497,1932,1596,1466,1398,1408,1433,1357,1471,1471,1359,1421,1491,1513,1113,1447,1541,1534,1535,1720,1637,1546,1625,1513,1448,1428,1574,1555,1539,1432,1520,1525,1542,1423,1498,1607,1522,1581,1568,1578,1603,1555,1509,1575,1492,1399,1220,900,1287,1380,1365,1279,1441,1476,1533,1558,1397,1308,1400,1733,1887,1624,1675,1647,1807,1754,1742,1745,1611,1701,1744,1821,1557,1500,1634,1658,1604,1760,1777,1622,1700,1641,1535,1518,1515,1675,1662,1479,1561,1602,1638,1655,1602,1658,1701,1699,1735,1760,1748,1610,1590,1709,1660,1574,1455,1242,1625,1698,1682,1567,1656,1706,1761,1823,1808,1628,1641,1792,1848,578,613,607,655,697,702,824,993,1034,1067,861,1310,1460,1566,1640,1416,1213,1548,1571,1674,1802,1661,1596,1738,1647,1642,1782,1624,1591,1796,1672,1715,1803,1667,1601,1659,1763,1766,1771,1709,1394,1468,1371,1195,1162,1431,1365,1213,1276,1229,1359,1506,1579,1508,1530,1581,1618,953,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2055,2045,1999,2037,2052,2048,2048,2048,2055,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2050,2016,2023,2048,2054,2055,2048,2048,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2049,2035,2002,2050,2051,2048,2048,2048,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2033,2003,2035,2050,2048,2048,2057,2050,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1594,1361,1441,1234,1191,1107,1013,1180,1076,1222,1117,1234,1171,1056,1182,1094,1138,1081,1153,1087,1176,1156,1179,979,917,807,949,935,645,1032,856,872,1001,350,351,365,1204,1246,1502,1487,1484,1384,894,1089,841,902,857,959,1359,1382,1264,1194,1087,978,1147,1125,1118,1137,1080,1137,1279,1113,1183,940,1219,1131,1217,1176,1153,1091,990,917,920,899,958,942,596,966,774,796,830,350,351,381,1254,1335,1481,1482,1459,1030,1084,1142,897,925,852,1657,1265,38,45,48,64,124,126,189,193,182,261,200,270,649,981,1040,981,1178,1454,1595,1598,1673,1598,1769,1740,1765,1606,1562,1563,1625,1692,1687,1769,1766,1620,1653,1630,1618,1632,1544,1003,940,968,774,570,249,174,137,120,149,162,107,62,55,47,45,44,172,750,1083,1731,130,236,231,199,232,423,392,379,438,442,252,381,683,870,959,953,1127,1300,1633,1712,1804,1747,1802,1843,1828,1712,1677,1652,1705,1872,1838,1894,1861,1803,1794,1913,1849,1867,1886,1243,998,893,854,729,496,336,347,330,422,338,392,204,188,156,248,162,229,2048,1262,1332,1299,1237,1357,1414,1416,1298,1370,1331,1410,1491,1424,1398,1466,1512,1474,1466,1489,1514,1359,1393,1414,1383,1257,1116,1283,1412,1284,1347,1377,1372,1218,1404,1457,1300,1300,1373,1522,1466,1435,1512,1268,1383,1406,1476,1417,1453,1370,1329,1358,1282,1443,1325,1247,1208,1216,1282,1070,924,1552,1304,45,48,49,394,988,1061,1029,1355,1502,1452,1404,1829,1791,1726,1668,1675,1168,987,1492,1718,1753,1851,1713,1841,1807,1753,1636,1640,1691,1808,1882,1838,1876,1844,1739,1886,1895,1882,1854,1894,1592,1589,1517,1708,1556,1320,1249,1348,1145,1132,1085,716,780,45,44,45,394,692,1088,772,706,1080,1328,1353,1260,947,598,1010,869,1069,569,884,699,686,680,701,926,888,730,897,884,976,823,687,624,942,991,914,900,902,550,799,731,815,721,685,757,911,950,730,806,833,828,814,832,893,904,854,823,847,823,832,1071,788,1198,1702,1400,1513,1508,1641,1600,1394,1807,1472,1553,1434,1671,1604,1529,1615,1437,1423,1458,1689,1599,1513,1608,1369,1534,1605,1913,1445,1482,1293,1075,1239,1379,1344,1043,1124,1249,1064,1159,1224,1264,1263,1088,788,857,920,1703,1552,1386,1440,1368,1282,1390,1179,1259,1361,1311,1203,1110,951,878,638,1056,1839,1550,1476,1513,1389,1285,1391,1169,1245,1318,1313,1175,861,844,681,831,1898,1462,1508,1425,1446,1320,1295,1334,1158,1299,1353,1319,1178,1048,934,838,646,1155,1829,1424,1501,1429,1477,1524,1518,1336,1171,928,821,775,887,867,814,1847,1432,1492,1422,1438,1290,1285,1299,1180,1335,1374,1288,1140,979,935,717,701,1744,1595,1494,1372,1105,1239,1495,1419,1282,936,1013,1464,1740,1607,1565,1351,1227,1197,1498,1358,1231,1075,1268,1253,1345,901,1295,1708,1802,1782,1820,1662,1569,1430,1868,1913,1756,1789,1936,1746,1232,1327,1291,1354,1457,1527,1847,1244,1461,1296,1355,1449,1605,1276,857,941,1290,1760,954,864,974,1814,1298,1373,1684,1577,1530,1762,1664,1789,1179,1560,1742,1522,1657,1910,1874,1489,1284,1631,1681,1552,1776,1921,1924,1326,1363,1666,1658,1603,1839,1911,1917,1271,1408,1680,1686,1531,1773,1905,1892,1381,1441,1673,1661,1512,1740,1872,1877,1311,1408,1717,1546,1557,1761,1736,1763,1191,1571,1729,1514,1657,1771,1871,1328,1358,1668,1612,1519,1745,1777,1810,1193,1515,1741,1531,1619,1843,1825,1557,1649,1520,1597,1519,1601,1628,1703,1499,1581,1616,1466,1577,1556,1576,1575,1464,1468,1543,1474,1429,1442,1157,1086,1215,1376,1284,1154,1336,1642,1550,1303,1262,1421,1395,1382,1213,1502,976,1367,1729,45,48,49,45,38,110,436,703,762,874,944,986,972,1028,950,1183,1106,1269,1350,1160,1301,1321,1172,1215,1089,1022,1212,1020,1220,1166,1030,899,947,787,648,701,624,276,45,44,45,48,47,1487,740,742,845,1125,1304,1241,947,1036,997,1047,709,754,774,1006,969,1139,1199,1100,1183,1260,1224,1216,1366,1380,1362,1348,1300,1323,1185,938,781,531,533,538,806,906,784,801,933,1047,937,884,1026,1216,1043,1026,1017,973,1099,1130,1195,923,970,1185,718,1374,851,1069,1257,1529,1215,1290,1342,1489,1458,1471,1639,1771,1794,1824,1827,1762,1731,1714,1605,1725,1767,1620,1642,1606,1665,1535,1523,1641,1671,1552,1593,1570,1582,1533,1410,1180,1084,1429,1613,1522,1593,1554,1425,1361,1435,1467,1925,684,781,1063,1108,1152,1288,1418,1322,1271,1539,1434,1248,736,916,1185,1322,1394,1237,1204,1232,1146,1157,1190,1187,1295,1213,1304,1428,1225,1248,1369,1356,1339,1270,1237,1243,1194,945,960,1204,1116,1350,1155,1371,756,1378,890,966,1380,1882,1685,773,904,1228,1610,808,849,822,1051,1088,1005,991,1077,1208,1382,1596,1638,1652,1610,1467,1349,1437,1529,1669,1608,1685,1650,1620,1601,1551,1473,1458,1686,1842,1862,1837,1815,1745,1720,1436,1385,1366,1358,1304,1266,949,614,1098,1101,1116,1220,849,1178,804,1103,1084,918,859,1159,1316,1441,679,599,549,692,618,623,585,850,846,1164,1176,789,1011,829,782,796,826,791,936,880,901,952,907,879,878,961,966,945,962,1020,738,653,651,784,732,784,910,891,779,887,791,838,831,1016,789,1538,1816,1886,1734,2048,268,79,176,190,63,86,379,666,718,829,935,956,990,1018,959,1179,1102,1293,1319,1157,1315,1272,1184,1183,1014,1100,1157,1023,1180,1096,973,900,868,639,676,728,456,107,81,206,176,85,604,1378,722,721,1022,1180,1360,1012,947,1031,985,816,669,786,984,973,961,1121,1055,1098,1176,1168,1132,1357,1412,1378,1258,1246,1368,1121,938,720,510,513,583,805,912,787,849,913,1045,892,929,1030,1175,1081,1349,673,1016,1081,1421,702,1379,576,1039,1233,1110,960,894,929,969,1147,1017,1146,1907,1157,1257,1381,1402,1500,1456,1589,1695,1772,1821,1811,1836,1714,1767,1667,1646,1771,1643,1657,1575,1638,1606,1447,1620,1696,1661,1535,1577,1576,1584,1469,1245,1077,1267,1623,1533,1605,1541,1510,1359,1374,1457,1825,1076,681,1004,1126,1117,1279,1349,1363,1290,1493,1471,1328,897,865,1071,1281,1411,1255,1236,1259,1128,1190,1154,1248,1323,1189,1267,1398,1346,1266,1311,1355,1333,1329,1267,1224,1206,1083,997,1064,1135,1284,1173,1453,603,1027,1077,1137,829,1846,1215,829,637,686,685,1060,673,1394,1645,805,843,814,1074,1089,996,1024,1039,1209,1373,1600,1655,1653,1617,1471,1340,1436,1510,1672,1604,1694,1644,1610,1593,1567,1464,1484,1664,1831,1859,1841,1817,1762,1732,1437,1383,1351,1345,1315,1251,995,613,1064,1134,1101,1186,846,1241,822,1080,1067,1284,692,546,1035,805,1272,1253,2030,1887,1825,1722,1757,1723,1733,1750,1896,1932,2048,115,49,45,45,45,48,49,45,45,45,42,49,305,740,1159,1444,1424,1540,1555,1455,1495,1561,1627,1688,1720,1754,1736,1644,1737,1653,1627,1634,1642,1609,1594,1353,1330,1278,1174,1085,753,421,322,181,139,48,49,45,38,45,48,49,45,38,45,48,49,1703,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2010,1321,1166,1203,1227,1222,1149,1188,1163,1224,1230,1241,1256,1170,1369,1248,1534,1688,1541,1516,1342,1364,1554,1593,1459,1374,1638,1613,1548,1484,1438,1625,1389,1354,1409,1482,1437,1438,1225,1249,1324,1228,1255,1118,1036,861,1091,1049,1077,920,755,690,803,824,626,621,653,631,2048,1518,1099,1034,1168,1024,1205,1297,1289,1186,1233,1175,1252,1320,1304,1575,1587,1768,1781,1765,1763,1732,1642,1371,1593,1423,1473,1608,1564,1439,1529,1642,1592,1667,1499,1683,1524,1395,1293,1359,1224,1098,1088,966,994,1066,909,993,1035,1053,1045,949,849,638,500,509,399,358,1672,1125,684,704,678,661,687,706,705,652,644,675,712,679,1342,1588,1521,1601,1585,1674,1590,1536,1491,1416,993,788,1405,1434,1465,1564,1498,1469,1537,1399,1301,1097,1021,1221,1420,1517,1454,1456,1475,1352,1225,881,677,692,657,670,649,702,713,664,696,675,642,724,1414,1480,698,657,645,723,692,652,642,658,711,638,674,661,919,1541,1606,1620,1681,1701,1663,1566,1450,1431,1384,1359,1336,1259,1325,1340,1297,1274,1319,1265,1207,1690,1696,1607,1609,1672,1580,1511,1345,1087,977,789,721,629,646,707,696,674,649,651,685,686,659,650,1047,2042,566,440,509,620,636,758,905,865,1006,1097,1048,1149,1379,1529,1518,1572,1563,1559,1484,1439,1416,1486,1466,1434,1511,1452,1467,1400,1382,1251,1415,1441,1464,1607,1578,1524,1431,1287,1093,1207,1277,1240,1281,1221,1132,1105,1002,979,1019,1052,1032,978,898,822,652,621,387,1514,973,300,513,594,695,708,821,859,893,1012,1028,1149,1228,1377,1540,1630,1687,1720,1668,1633,1490,1441,1346,1317,1334,1436,1390,1426,1419,1450,1519,1407,1450,1425,1456,1440,1561,1699,1627,1525,1317,1275,1200,1233,1232,1167,1228,1182,1077,1079,1051,1003,846,801,726,617,489,1175,1441,370,489,631,658,699,796,912,931,1054,1061,1044,1461,1547,1475,1481,1565,1493,1438,1253,1260,1344,1396,1356,1404,1382,1425,1360,1316,1365,1373,1380,1318,1323,1311,1288,1406,1531,1538,1627,1416,1458,1413,1355,1193,1193,1231,1192,1134,1066,1034,996,966,877,706,650,491,665,1747,1713,1779,1722,1776,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1961,2043,1970,2048,1970,2006,2038,2013,2022,2025,2048,1993,1881,1975,2024,1957,1881,1909,1978,1955,2048,1961,1865,1988,2056,1691,936,749,747,924,968,958,1181,976,1017,891,809,943,990,941,918,850,935,929,803,841,910,834,1114,1124,714,684,1045,1260,1287,1256,1379,976,582,542,475,592,549,980,967,962,1026,830,743,965,886,1061,1053,852,1027,906,786,546,527,622,754,857,1071,467,870,602,727,690,713,1132,981,898,1020,768,713,528,548,524,709,711,948,641,723,672,832,1134,960,900,829,1020,1012,728,1055,726,977,1017,775,770,920,997,267,657,805,1059,409,541,844,737,688,577,648,745,995,809,894,659,723,726,637,1860,1677,1667,1425,1439,1403,1431,1560,1808,1846,1726,1702,1426,1436,1389,1450,1540,1919,1840,1618,1668,1719,1580,1602,1702,1735,1816,1754,1741,1733,1576,1261,1226,1186,1621,1622,1605,1774,1763,1725,1757,1670,1785,1697,1720,1663,1734,1708,1758,1770,1658,1754,1791,1715,1691,1791,1744,1630,1581,1595,1379,1298,1273,1390,1555,1501,1654,1622,1550,1655,1581,1530,1672,1630,1624,1836,1837,1436,1435,1503,1550,1466,1521,1533,1415,1471,1553,1630,1442,1495,1647,1676,1642,1743,1794,1638,1721,1662,1566,1557,1486,1573,1629,1564,1598,1618,1628,1589,1550,1549,1633,1621,1628,1625,1600,1531,1548,1611,1655,1604,1475,1176,1389,1484,1477,1378,1441,1501,1580,1609,1595,1427,1407,1609,1997,1230,1220,1240,1248,1226,1270,1240,1256,1271,1275,1288,1485,1345,1306,1270,1296,1332,1326,1311,1237,1240,1295,1287,1249,1226,1243,1236,1270,1251,1211,1217,1179,1213,1232,1203,1226,1241,1238,1276,1244,1270,1258,1301,1292,1376,1452,1291,1285,1318,1312,1311,1310,1222,1279,1272,1275,1243,2052,1812,1770,1800,1760,1767,1833,1784,1765,1766,1779,1747,1764,1701,1701,1649,1651,1661,1627,1615,1666,1681,1585,1611,1711,1702,1712,1764,1730,1721,1772,1776,1751,1737,1741,1644,1662,1705,1656,1670,1626,1694,1689,1704,1712,1720,1778,1736,1741,1748,1772,1749,1764,1736,1755,1754,1763,1775,1156,1400,1782,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1335,643,607,615,633,656,600,588,626,634,630,661,1385,517,567,596,604,470,389,438,748,1628,1704,1259,1019,1332,1111,1062,1657,1257,1124,1650,1492,982,1094,1345,374,436,473,485,536,449,457,308,334,277,310,321,684,1819,1754,1795,1770,1704,1573,1126,1058,1147,1103,1165,997,1173,825,1164,845,802,1089,1216,990,1033,1029,924,1097,1019,1113,1149,737,1139,913,943,995,899,1300,692,1188,1099,1130,1092,1079,1348,635,1118,1111,959,1020,911,1350,308,304,304,811,1219,973,1064,902,1526,915,1839,927,1432,1551,1817,1475,1516,1606,1609,1596,1601,1635,1673,1652,1621,1672,1698,1617,1634,1647,1595,1651,1649,1727,1702,1699,1760,1760,1776,1664,1690,1762,1804,1827,1816,1883,1898,1897,1880,1897,1872,1758,1794,1817,1801,1832,1763,1820,1815,1788,1710,1553,1584,1632,1607,1536,1415,1536,1584,1596,1669,1788,1931,1446,1423,1492,1560,1448,1488,1558,1468,1467,1542,1640,1497,1448,1654,1664,1657,1745,1775,1672,1703,1674,1552,1565,1511,1599,1611,1593,1574,1622,1621,1577,1565,1570,1636,1614,1625,1617,1605,1555,1576,1607,1633,1604,1528,1196,1310,1496,1514,1384,1393,1486,1580,1627,1610,1428,1403,1563,2048,560,645,640,563,670,736,759,844,1002,951,1087,976,1208,1266,1321,1312,1347,1350,1419,1350,1478,1375,1435,1421,1519,1548,1395,1437,1438,1238,1016,1020,873,1281,1310,1251,1228,1036,1012,954,1017,995,833,935,1009,861,682,873,887,828,438,682,705,716,662,575,560,1771,1074,726,813,933,966,1043,1082,1107,1146,1154,1060,893,822,694,1118,1365,1368,1415,1439,1481,1471,1548,1290,1547,1526,1615,1536,1541,1610,1669,1726,1674,1517,1511,1532,1609,1496,1484,1417,1277,1284,1200,1025,986,1036,1047,1127,1090,1150,1227,1224,1071,966,773,772,805,798,924,1271,1675,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2045,2048,2048,2048,2057,2048,2033,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,1959,1996,2048,2048,2048,1865,1978,2048,2056,2048,2038,1903,1986,2054,2055,2052,1870,1984,2054,2034,1950,1972,2034,1995,1992,1908,1967,1989,1985,1915,1976,2027,1954,1976,2007,1905,2009,2044,1875,1975,2011,1939,1875,1981,1860,2029,1863,1937,1906,1907,1946,1829,2008,1859,2032,1868,1977,1863,1938,1901,1942,1901,1896,1959,1882,1979,1855,1978,1865,1947,1901,1918,1933,1865,1979,1924,2001,1910,2009,1883,2018,1878,2028,1865,2031,1865,1981,1876,1946,1896,1937,1906,1928,1933,1935,1933,1884,1986,1924,1983,1887,2009,1858,2029,1873,2019,1864,1974,1876,1915,1933,1900,1977,2011,1865,1957,1914,1972,1868,1975,1865,1995,1871,2030,1871,1976,1976,1970,1921,1946,1835,2009,1990,1939,1965,1909,1911,1950,1922,1952,1821,2005,2056,1863,1945,1898,1938,1906,1885,1976,2009,1871,1938,1896,1926,1937,1834,2009,1853,1951,1892,1944,1896,1983,2048,1988,1946,1991,2057,1876,1979,2048,2035,1915,1985,2042,1950,1986,1913,1979,2001,1933,1960,1915,1951,1907,1898,1957,1927,1946,1891,1986,1825,2017,1882,1912,1937,1834,2009,1851,1932,1919,1866,1972,1929,1981,1896,2009,1857,2032,1877,1977,1870,1975,1865,1991,1866,1937,1900,1906,1946,1922,1946,1918,1960,1908,1986,1904,1980,1920,2003,1852,1982,1867,2021,1870,1975,1864,1981,1864,1981,1864,1990,1866,1994,1866,1980,1974,1976,1910,1983,1917,1979,1925,1981,1896,2009,1860,1976,1866,1941,1896,1939,1919,1912,1964,1874,1979,1853,1976,1876,2029,1944,1979,1973,1959,1923,1946,1936,1938,1920,1946,1914,1962,1911,1966,1897,1987,1919,1972,1983,1952,1921,1946,1922,1963,1913,1977,1924,1977,1901,1973,1903,2009,1859,1992,1895,1936,1914,1886,1977,1945,1963,1917,1960,1918,1957,1912,1971,1915,1976,1939,1959,1911,1972,1928,1959,1933,1950,1885,1987,1842,2029,1865,1935,1914,1886,1986,1949,1962,1962,1916,1916,1939,1876,1989,1887,2005,1866,1956,1906,1951,1892,1936,1903,1943,1907,1981,1866,1960,1903,1907,1946,1997,1870,2037,1919,2008,1855,1959,1907,1938,1907,1939,1910,1925,1933,1870,1980,1962,1977,1934,1959,1891,1946,1935,1940,1827,2006,1863,1978,1870,1938,1906,1940,1927,1928,1939,1892,1986,1881,2009,1856,1978,1866,1949,1910,1966,1883,1934,1905,1916,1938,1962,1898,1979,1874,1977,1866,1979,2048,2027,1907,1982,2048,1985,1960,1995,2056,1962,1983,2039,2048,1884,1975,2048,2021,1915,1950,1906,1985,1865,1975,1872,2033,1878,1976,1863,1972,1871,1932,1913,1942,1911,1909,1946,1997,1865,1992,2048,1865,1998,2048,1876,1971,2011,1917,1989,2042,1902,1980,2055,1890,1977,2048,1863,1978,2055,1876,1944,1896,1984,2048,1863,1973,2048,2052,1863,1973,2048,1866,2045,1879,2030,1871,1981,1877,1975,1873,1985,1875,1985,1869,1946,1896,1935,1906,1944,1907,1951,1902,1952,1896,1966,1882,1977,1806,1996,1877,1975,1867,1985,1865,1975,1870,1972,1863,1976,1863,1976,1863,1994,1864,1978,1870,1976,1864,2015,2057,2056,2048,1871,2028,2029,1995,1866,2029,2047,1978,1901,1985,2048,2056,2034,1900,1974,1969,1990,1930,1986,1840,2029,1864,1928,1919,1862,1980,1850,1934,1910,1899,1962,1928,1946,1933,1940,1926,1946,1933,1939,1936,1932,1924,1970,1915,1986,1827,2033,1865,1972,1864,1976,1872,1939,1911,1944,1916,1929,1933,1879,1983,1951,1977,1912,1986,1949,1965,1961,1909,1948,1896,1955,1894,1939,1907,1947,1910,1940,1915,1926,1933,1930,1940,1956,1955,1917,1968,1847,2009,1856,2030,1865,1959,1900,1917,1932,1934,1946,1924,1946,1919,1959,1881,1982,1928,1979,1895,2005,1861,2031,1865,2018,1867,1992,1866,1978,1864,1995,1864,1981,1864,1970,1877,1943,1901,1919,1939,1890,1980,1901,2010,1884,2010,1870,1975,1866,1978,1866,1947,1894,1945,1896,1927,1933,1926,1946,1911,1968,1898,1986,1907,1981,1857,1977,1877,2032,1874,2030,1910,2009,1862,2029,1874,2029,1904,2011,1874,2031,1868,1977,2048,1898,1980,1909,2008,1857,1976,1871,2030,1904,2014,1909,2005,1858,1934,1909,1898,1959,1798,1963,1886,1910,1940,1857,2005,2055,1884,2031,1867,1995,1917,2009,1856,2031,2011,1933,1918,1951,1835,2005,1965,1986,1985,1911,1902,1957,1798,2033,1906,2006,1882,2031,1880,2030,1879,1975,1880,2029,1867,2032,1879,2031,1864,1996,1878,2032,1867,1994,1869,1979,1862,1933,1908,1894,1960,1795,1977,1870,2031,1862,1930,1906,1905,1951,1874,1980,1860,1981,1862,1978,1862,1977,1897,2020,2031,1919,1943,1917,1920,1939,1988,1876,1979,2033,1920,1982,1881,1977,2048,2048,1963,1987,1968,1946,1997,2034,1917,1991,1880,2029,1913,2009,2011,1920,1992,2048,1953,1983,2050,2033,1915,1897,1976,1961,1914,1941,1905,1939,1907,1880,1976,1893,1979,1881,2005,2048,2048,1981,1961,1937,1957,1988,1876,1977,1864,1972,1948,1979,1927,1980,1927,1981,2052,2048,1942,1979,1972,1960,1915,1959,1956,1919,1965,1895,1947,1895,1974,1871,1973,1904,2014,1972,1987,2035,1822,1976,2012,1933,1950,1927,1948,1917,1913,1950,1938,1934,1996,1874,1982,1863,1978,1868,2032,1906,2008,1867,2026,1874,2031,2035,1924,1993,2013,1933,1933,1933,1996,1919,2009,2010,1917,1932,1924,1962,1900,1909,1940,1917,1964,1873,1979,2014,1927,1947,1927,1949,1917,1943,1919,1935,1932,1926,1939,1844,2009,1972,1960,1996,1876,2019,2048,1866,1978,2048,1953,1972,2052,1961,1979,2052,2048,1870,1975,1950,1981,2016,1910,1940,1914,1985,1871,2033,2048,2033,1900,1983,2048,1879,2019,2048,1870,1978,2031,1905,1981,1930,2009,2050,1862,1972,1982,1966,1934,1946,1932,1932,1928,1959,1794,2030,1869,1939,1903,1914,1953,1871,1982,1989,1938,1995,1862,1977,1942,1982,1947,1983,1981,1934,1872,1972,2053,1864,2015,2042,1896,1939,1919,1991,2009,1932,2014,2028,1917,1989,2030,1919,1986,2022,1930,1995,2012,1937,1795,1105,1153,1170,1055,994,1093,2036,1691,1778,1831,1834,1419,1228,1465,2048,2048,2048,510,34,34,34,34,34,34,34,391,884,976,1122,1152,1048,935,872,733,932,1030,896,952,1072,859,1016,1167,925,1030,1001,874,866,832,867,975,1118,850,855,888,815,975,876,866,1032,824,796,900,1021,1134,1042,1035,1342,1280,1209,1243,1355,1250,1432,1206,1442,1436,1391,862,978,1000,1032,909,951,976,1041,1030,1029,995,1130,1028,1039,1074,1059,1041,1099,1184,1180,1170,1291,1281,1248,1016,718,372,1072,691,1043,1057,1086,942,408,1457,1533,1483,1353,1490,1312,1368,1191,1134,1191,1190,997,1685,1272,1364,1234,1236,1166,1247,1140,1261,1495,1414,1362,1298,1258,1249,1342,1496,1560,1652,1583,1554,1624,1521,1575,1555,1511,1541,1488,1453,1417,1387,1340,1802,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2026,1346,1383,1423,1387,1395,1352,1503,1448,1557,1685,1650,1467,1458,1381,1318,1589,1701,1735,1688,1627,1612,1457,1452,1635,1629,1661,1661,1655,1591,1562,1457,1612,2052,2048,2007,2035,2048,2009,2029,2034,2048,2013,2018,2048,2039,2034,2048,2042,2042,2048,2041,2048,2018,1895,2002,2048,2037,1766,1447,1593,1568,1659,1524,1417,454,213,219,218,208,563,426,219,228,223,215,470,1274,1279,1316,1261,1156,1205,1147,1226,1179,1236,1241,1120,1225,771,451,425,1818,1245,1973,2043,2041,2048,980,1394,2048,2048,2048,2048,2048,2048,966,1401,2048,2048,2048,2048,2048,2048,2048,951,1402,2048,2056,2048,2048,2048,2048,905,1457,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,1191,1455,686,95,927,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2056,2048,2048,2048,2048,2055,2057,2048,2048,2048,2048,1908,2048,2048,2055,2048,2048,2048,2048,2048,2048,2013,2048,2048,2048,2048,2048,2048,2033,2048,2048,2048,2041,2048,2048,2048,2048,2035,2048,2048,2027,2048,2048,2037,2048,2048,2041,2020,2048,2048,2032,2048,2034,2048,2048,1958,2048,2048,2042,2048,2027,2048,2048,2048,2048,2048,2048,2056,2048,2057,2056,2048,1437,1389,2048,2048,2048,892,1402,1943,2057,2016,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2057,2026,2057,2057,2048,2057,2057,2037,2048,2048,2010,2048,2048,2040,2048,2036,1994,2048,2032,2048,2032,2048,1936,2048,2030,2048,2041,2048,2048,1979,2048,2034,2048,2032,2048,1923,2048,2039,2056,2037,2057,1929,2048,2037,2048,2036,2048,2003,2048,2048,2048,2048,2048,2048,2048,2057,2048,2004,2035,2048,2044,2048,2048,2048,2004,2048,2048,2048,2044,2048,2048,2048,2048,2048,2048,2057,2053,2037,2048,2048,2048,2048,2050,2045,2053,2001,2031,2042,2048,2033,2048,2000,2001,2048,2026,2048,2034,2032,1963,2056,2035,2048,2034,2057,1928,2055,2037,2048,2033,2048,1916,2048,2048,2048,2051,2048,2032,1990,2048,2023,2048,2041,2048,1954,2048,2033,2048,2044,2048,1910,905,139,136,1398,2038,1230,142,1394,2037,897,1622,1916,2025,2046,2049,2049,1602,141,1401,2048,906,1445,2048,1179,136,1397,1984,843,142,136,437,138,1404,2048,144,133,136,441,146,613,957,987,955,898,969,951,650,1021,788,845,921,817,1001,1193,883,981,960,789,984,1111,1041,1008,1051,929,967,1189,1156,1157,958,735,445,411,833,1181,960,935,400,352,347,425,378,493,531,734,567,1391,1191,958,1030,1326,1432,1574,1465,1343,1380,1260,1587,1422,1180,1126,1236,1492,1436,1592,1536,1375,1262,1134,1402,1415,1470,1544,1425,1158,1223,1478,1424,1570,1567,1290,1076,1251,1510,1446,1546,1525,1164,1106,1233,1523,1509,1547,1463,1263,1168,1421,1333,1374,545,565,552,680,615,627,597,1005,890,900,676,837,921,823,718,867,886,818,627,522,754,562,836,853,704,846,701,895,542,702,566,469,739,697,779,696,863,550,585,647,686,671,513,493,684,432,454,598,582,601,1075,435,477,1536,1074,1347,1512,1559,1351,1116,1280,1158,1191,1104,1394,1293,1254,1448,1121,1216,1071,1135,1365,858,1495,947,868,935,1518,991,912,904,994,938,1167,844,1072,1079,1059,810,836,995,785,913,1131,886,952,1137,1073,941,1109,874,641,1119,863,953,1108,749,980,1177,467,575,483,477,721,713,558,965,724,634,642,660,919,665,1157,990,1078,689,518,925,821,791,855,659,787,677,359,547,568,836,712,850,900,1083,639,839,674,841,942,860,794,884,865,864,847,867,875,778,858,860,886,820,957,661,938,1119,814,807,772,830,906,815,798,839,729,789,866,839,887,774,843,641,853,594,672,546,714,361,729,667,731,573,1056,437,1239,707,766,1640,1710,1747,1843,1920,2001,2048,2048,2048,1641,1330,1828,1796,2048,2041,1893,1838,2048,1865,1781,2048,2048,2048,1876,1764,2049,1882,1757,2049,1991,1811,1813,1219,1153,499,639,739,1894,2048,1912,1488,1360,1170,1117,1486,2016,1693,1198,1288,1027,1324,1561,1528,1347,872,460,110,753,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2057,1976,1890,1461,2048,2048,2048,2057,2057,2048,2048,2054,253,473,2026,2042,2048,2048,1906,1420,1857,2048,2029,1846,2048,2048,2057,2048,2047,1989,1934,2048,1903,2048,2048,2020,2053,2048,2044,2057,2053,2022,1726,1459,1830,1906,2048,2048,2048,2048,2048,2048,2057,2048,1909,1925,1099,1075,1054,1519,1120,1270,1588,1517,825,1243,1247,1227,1195,992,1080,1108,1021,1589,1809,1889,1897,1870,1922,1882,1829,1712,1716,1557,1826,1803,1156,1058,1034,1194,1383,976,1036,1151,1026,1113,1097,993,1280,1260,1262,1252,2052,2028,1976,2048,1973,2048,2028,1969,2048,2048,2048,2026,1973,2048,2057,1971,2034,1984,2048,2048,1970,2033,2027,2048,2044,1972,2048,2034,1976,2048,2047,1971,2048,2030,1975,2057,2030,1970,2048,2030,1992,2051,2029,2048,2036,1979,2048,2048,2057,1974,2048,2047,2046,2054,2048,2048,2056,2048,2057,1899,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1896,2048,2048,2048,2048,2048,2048,2048,2048,1896,2048,2048,2048,2048,2048,2048,2048,1891,2048,2048,2048,2048,2048,2048,1897,2048,2048,2048,2048,2048,2048,1897,2048,2048,2048,2048,2048,2048,2048,2048,1892,2048,2048,2048,2048,2048,2048,2048,2048,2048,1884,1340,1759,1374,1494,1515,1652,1763,1780,1776,1579,1466,1510,1580,1658,1681,1804,1672,1749,1493,2031,1551,1284,1590,1218,1229,1202,1301,1618,1693,1742,1723,1682,1649,1849,2052,2049,2048,1193,1192,1139,1203,1244,1048,1224,1035,1393,1561,1415,1516,1313,1512,1356,1526,1509,1592,1814,1581,1619,1529,1549,1562,1770,1814,1927,1743,1747,1911,1786,1912,1701,1760,1862,1750,1218,1912,1913,1362,1011,1530,1500,1505,1145,1684,1684,1345,1457,1582,1726,1665,1593,1791,1269,614,900,1468,1115,1319,1395,1338,1866,1659,1345,1643,1618,1266,1524,1728,1839,1988,1891,1405,1732,1875,1764,1806,1778,1813,1780,1732,1785,1528,1792,1573,1763,1639,1446,1333,1452,1406,1472,1521,1321,1545,1546,1721,1578,1525,1577,1449,1350,1542,1575,1571,1512,1484,1533,1521,1527,1523,1513,1465,744,741,594,713,696,697,642,604,647,663,604,644,761,650,671,716,739,683,765,758,734,497,625,554,633,580,192,510,400,842,2011,2044,1765,1732,1739,1695,1675,1669,1704,1716,1698,1698,1685,1714,1691,1987,1912,1785,1725,1722,1649,1644,1731,1769,1699,1746,1124,1034,1184,1926,1761,1725,1781,1797,1605,1459,1496,1484,1476,1472,1499,1487,1499,804,636,532,624,687,542,612,581,634,548,618,613,636,524,414,346,536,547,373,422,575,431,405,493,256,1302,1946,1829,1655,1677,1659,1669,1668,1664,1700,1673,1688,1686,1851,1920,1622,1785,1698,1664,1744,1688,1654,666,776,969,1907,1739,1756,1598,1798,1741,1519,1491,1502,1515,1482,1502,1488,1493,1506,1494,1512,1493,1485,1511,1496,1520,1488,1500,1499,1483,1189,573,357,558,608,708,487,587,607,562,266,521,496,472,399,478,371,439,595,590,624,607,612,608,660,623,500,711,412,481,268,673,303,393,345,501,462,328,567,500,559,451,524,478,566,657,385,474,464,362,494,538,254,435,536,394,448,342,314,418,1328,1987,2023,2025,1994,2045,1820,1700,1694,1690,1723,1695,1710,1721,1695,1676,1696,1688,1679,1663,1697,1694,1701,1691,1726,1689,1688,1684,1669,1691,1698,1676,1672,1900,2048,2048,1880,1688,1703,1711,1726,1624,1703,1671,1684,1662,1588,1747,1698,1706,1732,1737,1682,1628,1792,1703,1685,1226,959,1104,976,1520,1683,1683,1721,1647,1654,1288,865,1281,1805,1834,1826,1859,1719,1491,1553,1479,1529,1539,1483,1449,1519,1499,1493,1392,468,519,409,454,479,448,510,363,659,683,531,559,594,495,528,234,228,132,393,504,678,483,512,526,423,429,505,360,215,293,1568,2048,1974,1695,1711,1706,1723,1679,1706,1687,1684,1676,1744,1719,1676,1684,1953,2026,1729,1667,1769,1711,1750,1671,1680,1815,1709,1684,1357,956,1462,1314,1624,1727,1793,1495,1548,1503,1491,1495,1482,1484,1489,1486,1470,1500,520,374,406,342,571,561,186,267,350,357,215,389,368,398,137,146,354,260,292,336,515,363,315,503,546,605,336,367,521,550,1894,2012,1982,1731,1690,1695,1686,1686,1690,1664,1685,1731,1692,1698,1738,1716,2024,2001,1845,1698,1746,1760,1719,1696,1856,1754,1772,1835,1828,843,741,1243,1575,1632,1561,1706,1771,1495,1522,1508,1498,1490,1471,1028,480,369,340,385,523,195,406,448,453,308,342,388,302,230,332,516,1286,1971,1760,1683,1708,1663,1675,1699,1680,1713,2035,1756,1716,1649,1691,1765,1848,1673,872,1540,1299,1698,1628,1570,1481,1483,1493,1488,1489,1512,1506,1525,1320,531,549,611,579,592,557,607,525,616,469,624,675,639,509,643,549,562,530,612,431,481,398,614,469,314,438,558,1098,2002,2033,1775,1694,1686,1666,1660,1701,1688,1709,1715,1673,1691,1647,1866,2048,1832,1737,1679,1699,1798,1746,1822,1726,1726,1257,835,785,1053,1326,1274,1168,1266,1664,1666,1532,1635,1558,1440,1516,1496,1490,1499,1487,1493,1481,1515,1492,1524,1481,1488,1526,1514,1044,434,432,383,280,290,468,466,357,249,543,446,409,509,387,407,410,498,425,368,278,164,201,392,284,187,106,101,380,436,216,371,230,438,172,470,334,385,368,245,434,426,454,121,354,405,266,406,411,346,436,421,1303,1976,1929,1968,2024,1736,1664,1667,1670,1678,1699,1679,1681,1687,1732,1683,1675,1675,1675,1675,1671,1666,1683,1674,1675,1659,1692,1697,1855,2048,2048,1605,1570,1651,1645,1636,1721,1810,1695,1718,1688,1680,1581,1685,1670,1699,1665,1717,1032,736,870,1455,1741,1624,1588,1317,1830,1821,1823,1826,1650,1479,1469,1495,1468,1484,1491,1487,1493,1504,1490,1472,1488,1489,1489,1468,1493,1236,495,512,667,639,510,547,434,476,365,249,501,216,421,490,591,425,282,440,587,589,725,569,592,337,557,443,496,601,662,597,649,485,253,78,631,686,604,525,677,614,595,656,572,585,604,609,612,509,618,517,1924,1997,1947,1993,1802,1696,1676,1682,1664,1682,1704,1682,1681,1692,1710,1694,1700,1712,1698,1703,1704,1700,1698,1684,1723,1733,1980,2048,2045,1704,1737,1697,1771,1798,1757,1752,1763,1809,1783,1783,1740,1748,1749,1701,1808,1728,1007,926,955,934,1169,950,1200,1232,1230,995,881,1141,1398,1809,1715,1829,1817,1574,1687,1578,1495,1495,1521,1508,1496,1507,1491,1487,1504,1499,1511,1494,1492,1462,1488,1472,1473,1479,1504,1094,637,595,681,539,580,546,594,644,593,589,569,629,496,580,575,489,387,505,574,519,592,542,615,482,382,420,579,431,605,510,335,582,514,579,554,405,356,608,520,593,442,531,502,259,508,496,328,332,506,251,334,359,336,449,503,458,341,369,567,423,246,403,374,487,372,263,328,631,514,1264,2057,2048,2056,2048,2048,2040,1715,1728,1729,1731,1753,1726,1722,1722,1732,1726,1706,1721,1732,1728,1751,1748,1728,1725,1735,1740,1735,1714,1740,1750,1740,1737,1748,1734,1725,1724,1708,1768,2048,2048,2048,2048,1920,1778,1818,1848,1871,1867,1820,1785,1789,1698,1795,1806,1815,1777,1802,1783,1810,1789,1831,1820,1839,1853,1871,1823,1877,1815,1835,1843,1795,1761,1751,864,868,878,706,902,1387,1241,1490,1080,1223,1534,1290,915,855,924,1350,1188,1392,1379,1801,1809,1779,1647,1649,1648,1598,1608,1588,1544,1543,1502,1508,1517,1526,1552,1529,1478,1531,1498,1508,1512,1527,1506,1542,1525,1477,1494,1512,1494,1535,1514,1501,1494,1498,1505,1511,1464,1473,1511,1418,594,649,599,429,690,360,457,682,748,627,598,650,705,631,531,653,688,693,672,670,670,622,652,664,730,588,680,615,616,648,523,157,486,596,632,679,525,710,690,590,550,470,498,559,512,565,429,175,293,263,510,546,220,214,168,627,256,618,503,618,641,554,619,581,582,583,631,536,574,578,536,510,573,504,419,595,529,709,579,523,527,492,501,583,601,238,614,334,563,614,557,583,472,688,646,608,2031,2013,2036,2048,1991,1953,1976,2055,1719,1708,1658,1676,1681,1707,1699,1695,1685,1727,1715,1701,1704,1686,1710,1695,1697,1698,1704,1690,1708,1719,1704,1688,1713,1668,1708,1719,1692,1689,1712,1718,1698,1715,1703,1685,1688,1680,1700,1670,1669,1720,2048,2048,2048,2048,1775,1707,1685,1757,1716,1718,1824,1668,1648,1685,1712,1738,1728,1744,1763,1743,1837,1714,1758,1711,1826,1696,1723,1743,1709,1807,1758,1743,1777,1669,1644,966,1079,955,1074,1095,1045,903,975,932,873,559,680,659,760,890,892,886,849,890,953,1032,761,869,850,829,759,857,759,681,555,283,988,653,777,1298,1550,896,1736,1711,1656,1760,1850,1837,1827,1659,1713,1510,1631,1622,1571,1487,1532,1530,1504,1491,1497,1521,1501,1513,1536,1523,1486,1488,1493,1502,1499,1515,1495,1514,1508,1507,1495,1499,1506,1510,1516,1521,1519,1530,1545,1513,1489,1474,1512,1518,1505,1511,1518,1511,1488,1520,1503,1513,1500,1506,1522,1532,1495,1520,773,616,709,657,706,758,610,557,670,645,754,793,691,689,691,458,538,677,638,780,712,681,736,657,600,473,594,710,703,568,500,772,733,777,705,658,503,691,645,643,665,614,702,640,363,416,677,574,484,733,563,737,669,576,613,487,653,735,606,682,568,622,576,684,557,657,454,654,407,604,432,683,700,672,690,600,691,623,649,617,784,752,658,758,670,720,735,722,728,621,750,692,774,732,652,739,616,623,657,552,485,352,608,635,529,635,605,587,480,655,639,463,488,457,615,542,695,584,594,713,749,618,624,621,636,629,606,424,764,491,506,642,736,542,640,702,469,436,477,440,681,675,684,673,644,620,1867,1968,1991,1951,1995,1968,2008,2009,1980,2005,1976,2030,2042,1846,1732,1726,1711,1713,1686,1685,1697,1718,1684,1691,1685,1669,1720,1714,1709,1690,1721,1695,1682,1692,1693,1675,1702,1665,1722,1720,1724,1692,1682,1708,1705,1721,1731,1738,1737,1715,1738,1741,1716,1708,1691,1688,1691,1685,1670,1699,1716,1691,1683,1720,1706,1728,1683,1656,1706,1755,1738,1738,1731,1731,1748,1887,2048,2048,2048,2048,2048,1967,1542,1646,1711,1759,1737,1730,1752,1722,1807,1770,1654,1690,1714,1692,1745,1704,1720,1772,1710,1650,1572,1749,1753,1748,1729,1749,1669,1744,1701,1697,1746,1715,1627,1746,1790,1779,1743,1688,1671,1740,1747,1755,1827,1383,996,1069,972,1008,1076,948,970,968,1019,869,1290,1609,1374,1579,1708,1570,1574,1535,1669,1604,1574,1735,1461,1434,1647,1255,1201,1353,1579,1213,1334,1577,1644,1148,1508,1369,1267,1429,1153,1525,1526,1506,1558,1468,1696,1614,1671,1369,1344,1582,1516,1608,1591,1557,1453,1547,1707,1387,1654,1899,1805,1887,1893,1886,1908,1865,1786,1775,1858,1782,1809,1469,1473,1472,1500,1484,1491,1495,1484,1497,1493,795,520,416,546,433,401,536,475,390,356,392,448,531,563,410,564,445,221,465,284,422,395,344,338,459,294,307,419,168,409,371,516,1814,1936,2049,1668,1701,1704,1704,1700,1718,1685,1713,1719,1696,1693,1681,1682,1670,1737,2048,1894,1736,1721,1782,1758,1746,1731,1788,1777,1746,1732,1676,1260,768,818,1170,1595,1331,1350,1271,1543,1686,1736,1527,1462,1509,1486,1466,1467,1511,1505,1503,1487,1178,516,562,485,433,426,710,478,628,612,552,514,440,465,425,172,533,408,352,383,402,303,552,544,298,410,455,267,954,2043,2039,1713,1712,1700,1717,1738,1710,1713,1713,1702,1696,1698,1712,1668,2049,1945,1576,1806,1881,1840,1754,1785,1756,1857,1775,1770,1775,1108,705,1055,1625,1651,1535,1445,1632,1707,1692,1558,1640,1504,1511,1478,1497,1467,1497,1489,1506,1482,1453,1490,1472,1493,1451,1478,1472,1494,1486,1478,1502,1454,1469,1481,1473,1501,1450,1489,1481,1489,1486,1477,1491,1506,1494,1474,1498,1399,605,627,533,675,715,688,582,511,660,496,672,678,630,571,561,617,595,563,581,598,692,591,561,588,536,679,561,591,620,561,412,568,514,665,562,498,581,555,427,588,529,577,523,624,533,422,306,194,459,446,288,520,416,353,515,654,621,527,244,213,357,198,153,261,512,381,535,543,436,586,645,475,605,548,622,589,457,508,417,529,588,552,503,596,381,320,585,480,506,429,258,243,519,582,703,538,495,372,527,645,571,565,523,667,559,632,467,522,647,1516,2011,1991,1988,2047,1899,1970,1947,1985,2050,1703,1734,1722,1715,1706,1708,1707,1710,1688,1691,1699,1696,1672,1718,1704,1706,1684,1681,1679,1710,1664,1659,1679,1629,1691,1670,1684,1676,1682,1678,1674,1678,1708,1686,1699,1663,1673,1678,1681,1682,1695,1683,1688,1669,1673,1662,1858,2048,2048,2048,2048,1761,1743,1683,1696,1712,1675,1671,1814,1747,1811,1761,1737,1699,1695,1684,1688,1688,1721,1708,1741,1708,1720,1729,1720,1780,1639,1721,1633,1690,1703,1763,1606,1529,966,943,902,847,832,1018,937,879,782,1149,1226,1022,1030,1014,1131,1477,1271,1220,1096,1180,1338,1230,1226,1326,1515,1403,1482,1003,1307,1170,1148,798,626,973,553,452,734,957,1051,1183,1092,1083,831,631,667,1106,1139,1401,1841,1875,1864,1866,1908,1946,1907,1932,1875,1570,1537,1484,1496,1495,1496,1492,1486,1457,1493,1493,1488,1507,1026,467,233,468,505,443,384,622,574,474,146,278,249,272,342,395,504,460,471,485,288,350,357,495,377,308,432,318,318,495,256,390,336,385,373,654,664,931,1990,1979,2047,1744,1711,1653,1713,1690,1703,1697,1702,1681,1671,1713,1710,1713,1682,1713,1706,1923,2048,1749,1736,1713,1724,1769,1814,1740,1731,1724,1808,1746,1764,1739,1180,743,874,1740,1637,1157,645,891,1195,1775,1836,1752,1552,1595,1501,1498,1500,1494,1513,1506,1134,588,630,605,497,504,540,497,402,431,551,384,277,248,356,435,455,408,326,432,508,195,406,638,868,1932,1998,1687,1708,1712,1694,1715,1676,1665,1693,1681,1722,1719,2048,1710,1787,1839,1732,1735,1709,1754,1751,1853,784,760,1355,1583,1468,1481,1505,1637,1605,1478,1420,1457,1470,1486,1481,1490,1467,1492,1481,1483,1502,1505,1478,1505,1505,640,468,513,614,603,468,487,476,486,621,564,527,548,651,350,379,465,528,334,382,616,411,410,433,276,182,500,665,629,635,595,595,396,656,477,295,634,269,602,610,485,437,502,412,1477,1984,2044,2005,1732,1682,1700,1710,1694,1676,1683,1659,1708,1724,1682,1665,1677,1724,1722,1715,1708,1725,1707,1773,2048,2048,1706,1677,1721,1706,1762,1659,1710,1723,1605,1695,1808,1716,1698,1788,1720,1290,938,790,1084,1719,1529,1420,1584,1587,1411,1803,1831,1747,1611,1409,1452,1511,1499,1498,1459,1498,1486,1483,1472,1479,1486,1494,1476,1469,1499,818,545,572,545,583,323,507,621,606,392,409,457,407,490,256,374,490,518,448,506,473,442,528,393,299,229,185,313,533,397,270,120,151,293,372,185,325,491,501,344,541,313,286,340,294,450,460,1505,1989,1881,2015,1863,1695,1682,1690,1681,1695,1688,1719,1687,1676,1662,1655,1688,1699,1686,1674,1649,1688,1663,1659,1664,1932,2048,1993,1741,1701,1692,1783,1701,1815,1666,1659,1689,1716,1682,1630,1716,1739,1772,1744,1092,791,843,959,1586,1303,1310,1476,1419,900,1320,1764,1749,1648,1675,1622,1555,1521,1497,1512,1503,1504,1522,1422,1487,1486,1480,1508,1519,1473,1499,1500,1497,1475,1453,1500,1500,1523,1480,497,630,574,313,449,500,525,597,558,492,424,526,586,326,187,616,542,485,467,362,301,197,250,205,554,549,543,565,514,501,457,412,322,468,617,572,573,486,352,541,210,327,310,137,130,559,532,632,529,331,426,408,440,320,352,235,268,401,381,411,437,463,487,220,532,366,531,537,601,423,1116,2014,2048,1985,2000,2051,1921,1646,1645,1703,1696,1672,1729,1712,1694,1697,1647,1673,1691,1701,1726,1721,1680,1660,1673,1691,1718,1730,1683,1708,1701,1649,1708,1699,1709,1720,1725,1704,1950,2048,2048,2048,1557,1601,1746,1763,1746,1771,1707,1718,1732,1724,1746,1745,1747,1713,1660,1732,1732,1822,1721,1696,1709,1695,1763,1773,1801,1833,832,834,702,809,513,978,1011,905,648,1017,996,937,834,568,425,619,290,1017,1384,567,1344,1556,1709,1759,1731,1831,1648,1675,1636,1465,1501,1465,1479,1496,1498,1464,1454,1482,537,523,479,483,344,469,552,372,546,517,384,387,469,421,304,378,520,443,599,543,532,564,562,616,479,503,521,491,1127,2027,2025,1793,1684,1706,1682,1652,1707,1707,1716,1704,1717,1691,1702,1735,2048,1863,1706,1758,1731,1848,1759,1801,1811,1717,1833,1143,870,865,955,1123,1156,1380,1652,1673,1637,1609,1536,1519,1509,1499,1483,1505,1494,1458,1501,1482,1473,1482,1475,1503,1498,1482,1487,967,637,598,572,585,587,642,636,645,647,486,618,592,530,671,373,542,565,554,550,501,588,586,444,543,548,351,395,529,479,557,529,275,471,483,474,352,585,441,537,619,556,585,505,408,475,524,580,574,616,380,631,562,616,622,1280,2054,2048,2043,2026,1804,1704,1712,1712,1713,1715,1705,1695,1681,1708,1667,1720,1682,1728,1710,1694,1700,1701,1678,1668,1673,1703,1707,1714,1876,2048,2056,1779,1752,1753,1678,1726,1679,1753,1848,1779,1798,1812,1672,1719,1685,1847,1793,1682,1002,785,818,789,903,1629,1753,1334,1418,1785,1625,1563,1077,1721,1840,1858,1739,1813,1593,1576,1506,1474,1484,1479,1481,1477,1485,1483,1473,1468,1511,1487,1475,1488,1488,1502,1532,1493,1502,1492,1501,1515,859,311,190,215,376,455,515,439,381,500,506,611,463,298,440,383,521,187,458,548,575,399,444,230,213,491,172,373,444,559,555,538,521,410,546,458,240,476,496,346,530,600,531,621,292,169,307,309,519,369,467,599,585,495,634,623,475,520,533,383,313,465,375,254,352,371,477,389,301,492,856,1999,2044,2016,2015,2048,1793,1685,1684,1715,1666,1647,1673,1679,1648,1691,1685,1672,1683,1673,1708,1705,1668,1718,1709,1675,1680,1699,1691,1686,1723,1712,1674,1690,1690,1659,1735,2048,2048,2048,1787,1736,1746,1756,1724,1743,1587,1754,1760,1675,1724,1782,1804,1828,1793,1682,1708,1707,1650,1778,1676,1665,1534,1685,878,888,785,811,889,761,795,884,858,1011,1086,1014,927,745,895,1007,1156,1038,1047,1084,1124,992,1050,1039,814,116,483,1285,1346,1699,1879,1817,1848,1789,1667,1493,1536,1517,1506,1487,1494,1491,1503,1509,1490,1512,1260,354,375,190,289,457,410,365,481,422,525,435,460,276,500,335,390,416,252,385,350,466,369,335,407,421,258,292,225,296,358,420,407,166,305,233,1468,1983,1999,1859,1690,1706,1706,1692,1688,1691,1683,1697,1667,1695,1687,1679,1674,1691,1669,2036,2056,1764,1718,1809,1654,1715,1750,1716,1697,1767,1791,1664,1698,1626,1108,799,1048,1657,1507,1649,1884,1896,1694,1517,1565,1476,1506,1514,1499,1499,1508,1504,1499,1499,1498,1504,1511,1528,1507,1492,1482,1499,1503,1513,1489,1482,1515,1495,1480,1514,1515,1515,1455,1525,1506,1494,1469,1472,515,511,525,437,541,581,546,656,617,647,606,516,430,453,618,430,440,545,598,622,598,556,511,600,472,443,510,609,611,520,332,501,417,576,521,456,500,525,519,556,529,517,509,488,271,403,421,458,365,268,295,529,339,437,478,448,614,624,445,341,557,605,643,591,587,573,386,541,415,572,464,439,404,552,383,503,481,501,446,365,399,580,484,410,548,524,491,369,234,579,539,362,284,182,164,327,630,271,449,446,261,292,316,431,382,317,380,339,221,544,353,217,959,2018,2028,2022,1977,1997,2036,2008,2033,2048,1910,1744,1725,1745,1718,1692,1702,1702,1689,1701,1699,1668,1709,1693,1731,1718,1712,1723,1713,1697,1693,1693,1682,1720,1729,1719,1689,1664,1680,1672,1701,1728,1668,1646,1660,1697,1692,1695,1722,1714,1741,1744,1738,1726,1657,1709,1732,1695,1670,1656,1686,1830,2048,2048,2048,2048,2048,1738,1744,1788,1769,1692,1736,1670,1709,1659,1671,1750,1702,1754,1778,1739,1717,1676,1747,1699,1645,1665,1568,1642,1789,1711,1645,1709,1648,1650,1653,1727,1790,1777,1636,1785,1662,1554,1679,1257,779,841,833,825,819,704,824,660,1082,1046,1155,1079,816,806,693,948,1037,599,902,706,928,925,631,722,692,815,869,840,884,1047,1154,1230,1004,1184,1164,1229,1387,1674,1909,1792,1838,1870,1849,1812,1901,1824,1586,1582,1598,1517,1533,1519,1509,1532,1506,1508,1501,1497,1520,1503,1498,1477,1537,859,555,738,658,517,573,565,579,481,512,418,645,624,709,641,772,604,643,673,602,770,629,536,692,646,599,453,630,609,738,583,538,533,450,309,365,340,642,571,624,629,521,576,473,634,533,961,2049,2048,2032,2014,1710,1727,1728,1741,1720,1736,1746,1727,1710,1732,1738,1720,1724,1712,1709,1690,1692,1747,1731,1730,1759,2048,2048,1966,1753,1869,1846,1863,1836,1876,1813,1882,1844,1849,1752,1842,1775,1768,1747,1812,1863,1845,1592,1056,937,926,944,1293,1305,1221,1128,1024,1032,1004,1073,1161,1256,1487,1585,1677,1705,1607,1622,1500,1552,1474,1490,1508,1461,1477,1480,1491,1521,1527,1469,1468,1478,1491,1481,1477,1465,1460,1481,1465,1474,1490,1466,1475,1477,1292,576,552,581,429,582,453,423,561,525,479,415,380,228,301,189,591,340,594,472,410,345,412,466,564,540,471,508,544,525,470,490,390,468,198,401,285,407,585,424,248,532,556,478,465,477,268,405,336,577,493,312,374,332,428,487,417,414,494,479,472,500,482,609,648,679,592,486,411,333,315,231,361,445,365,315,258,386,484,395,435,578,633,1934,1919,1934,1998,1968,1975,1961,1702,1694,1685,1662,1671,1695,1665,1648,1671,1683,1681,1678,1697,1677,1650,1687,1668,1662,1717,1723,1689,1712,1638,1668,1681,1685,1672,1673,1680,1649,1637,1656,1662,1651,1689,1848,2048,2048,2048,1819,1762,1778,1785,1774,1732,1653,1711,1707,1707,1614,1641,1732,1705,1813,1674,1755,1618,1703,1651,1602,1647,1680,1623,1652,1654,1379,838,918,635,847,760,834,1062,1361,1385,1151,974,815,1123,1173,1227,1037,973,905,1005,1285,1226,791,1266,685,360,1659,1747,1730,1708,1830,1851,1741,1655,1632,1623,1640,1491,1496,1529,1509,1531,1516,1520,1513,1511,1520,1501,1504,1521,1524,1494,1517,1522,1506,1502,1504,1519,1510,1524,1500,1516,1532,1513,1500,1560,1525,1518,1538,1524,1522,1536,1498,1504,1500,1500,1504,1496,1483,1466,1481,1501,1493,1498,1123,528,460,598,440,487,645,466,342,655,675,652,713,712,669,723,668,653,657,673,720,707,567,662,600,389,572,552,599,547,709,624,648,632,648,627,606,615,567,618,545,519,708,601,474,625,536,507,564,555,597,620,618,534,613,588,576,505,586,521,562,605,410,387,643,501,557,664,528,666,580,635,621,537,623,465,648,656,514,507,515,642,416,559,537,510,688,562,406,495,634,611,613,673,635,703,719,616,658,660,727,703,692,587,536,696,636,655,616,511,500,639,627,557,689,573,546,615,645,592,591,548,567,539,286,586,546,563,517,554,535,463,573,498,480,579,596,508,397,391,600,541,512,542,408,398,456,564,549,554,437,347,368,1812,2055,2053,2036,2042,2048,2057,2051,2048,2057,2057,2048,2048,1886,1716,1704,1675,1702,1708,1726,1682,1697,1710,1694,1720,1699,1701,1707,1697,1709,1742,1725,1708,1729,1723,1740,1746,1748,1757,1763,1763,1746,1728,1715,1684,1714,1689,1702,1683,1673,1710,1746,1681,1688,1686,1725,1693,1715,1727,1755,1762,1768,1739,1753,1707,1715,1721,1740,1718,1745,1735,1760,1756,1727,1752,1753,1753,1747,1731,1809,2048,2048,2048,2048,2048,2048,2048,1939,1691,1635,1737,1763,1655,1675,1714,1739,1702,1762,1806,1777,1841,1803,1826,1809,1812,1763,1802,1729,1810,1773,1625,1575,1748,1733,1657,1603,1670,1794,1635,1732,1698,1695,1707,1847,1836,1835,1822,1814,1802,1707,1680,1604,1656,1760,1848,1813,1807,1856,1870,1797,1744,916,952,954,926,961,916,801,1038,966,1158,1296,1374,1288,1222,1325,1296,1301,1415,1350,1317,1244,1143,746,783,915,907,934,1078,1025,487,607,1551,1355,1776,1956,1697,1814,1871,1915,1826,1842,1811,1796,1890,1870,1538,1497,1581,1517,1526,1540,1515,1524,1498,1278,408,471,307,362,553,490,559,368,406,385,358,349,343,156,466,289,185,249,254,397,327,318,419,437,1625,2048,1986,1740,1706,1728,1666,1700,1712,1692,1694,1694,1692,1687,1870,2055,1914,1766,1830,1672,1825,1784,1815,1742,1793,1418,846,1569,1578,1533,1563,1593,1517,1419,1244,1506,1254,411,437,525,526,550,471,1228,1780,1693,1666,1912,1785,1748,801,951,1467,1566,1501,1495,1506,958,285,463,368,480,209,144,440,404,475,85,423,567,463,1699,1812,1684,1665,1671,1672,1688,1832,1785,1737,1684,1739,1687,1004,1559,1789,1676,1528,1464,1510,1505,1473,1444,458,470,341,344,498,324,388,363,542,407,432,419,485,580,466,558,708,1998,1757,1692,1678,1664,1651,1670,1694,1854,1793,1741,1707,1687,1775,1125,627,1479,1159,1018,1657,1608,2048,2051,2051,2051,2057,1652,1601,1525,1363,1334,1483,1493,1133,906,880,1642,1990,2009,1928,1948,1571,906,1149,1482,1138,1487,1448,1392,1300,1351,980,719,1066,1087,1214,899,825,963,920,793,992,1051,1143,1046,901,1037,1131,913,1058,1027,1150,1117,1101,982,931,1009,1125,1087,1093,1175,642,515,931,959,1220,1043,881,1001,783,1040,899,873,787,1253,1137,859,1083,896,803,1002,1001,737,1095,964,492,1778,2048,1051,1095,1063,923,962,1055,1135,1023,1026,866,1124,1182,897,1097,995,952,1058,763,898,734,793,877,1149,1346,1405,1601,1294,1684,2016,2048,2048,1778,1504,2023,2048,2048,2048,1894,1869,2056,1604,1993,2048,2048,2048,2048,2048,2048,2048,2053,2023,2029,2057,2035,2044,1997,1917,1796,1642,2044,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,1939,1835,1756,1198,1988,1919,1879,1758,1946,2057,2054,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1922,1385,1256,2056,2056,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2004,1563,2048,2048,2048,2048,1814,1540,1332,1156,991,670,652,2056,2048,2048,2048,2048,2048,2048,2048,2057,2056,1739,1356,930,2048,2048,2016,1919,1833,1661,1466,1071,829,496,200,645,2004,2048,2056,2049,2048,2048,2048,2048,2048,2048,2057,2048,2057,1958,1774,1587,1479,1443,2047,2057,2057,2048,2054,2048,2057,2048,2048,2056,2056,2038,2022,1871,1647,1415,923,1386,1862,1916,2023,2048,2057,2050,1882,1650,1160,1180,2048,2049,2048,1721,2048,2048,2042,1678,285,128,127,34,1176,2048,2048,2048,2048,2048,2057,2048,2052,1923,2048,1634,2025,2048,2048,2048,2048,2048,2048,2056,2056,2048,1829,1615,1998,1871,1689,1582,1822,1456,775,1150,1748,2001,2028,2053,2056,2054,2052,1950,1705,943,69,2051,2048,2056,2057,2051,2055,2057,2055,2048,2046,2033,1950,1834,1927,1780,1658,2048,2057,2048,2057,2048,2048,2048,2048,1903,2048,2057,2055,2048,2056,2048,2048,2048,1608,2041,1952,1962,1118,1883,2057,2048,1960,1590,2054,2048,2048,2048,2055,2048,2048,2048,2048,2017,1554,1362,1892,1958,1998,2054,2050,2052,2023,2041,2046,2048,2049,2042,2031,1991,1971,1968,2041,2046,2055,2041,2047,2011,2051,2037,2056,2035,2051,2038,2004,1839,1716,1502,1366,1254,1256,1171,1129,1066,1080,1079,983,998,779,904,905,726,594,455,367,186,159,66,51,945,2045,2048,2051,2049,2016,1775,1731,1453,920,1521,2048,2048,2048,2048,1887,2048,2048,2048,1961,2048,2048,2048,2006,2056,2048,2048,2048,2043,2056,2048,2048,2037,2053,2048,2004,1928,1886,1763,1772,1724,1675,2053,2048,2043,2057,2051,2054,2051,1771,2054,2057,2048,2055,2048,2057,2048,1973,1984,2048,1975,1836,1527,2057,2057,1870,1489,2052,2048,2048,2048,2048,2048,2048,2054,2049,1956,1752,1692,1468,1421,1222,1158,1990,2048,2048,2056,2048,1961,1827,1466,575,547,1260,1569,1832,1947,1929,1971,1956,1993,1822,1650,1439,1283,824,477,903,1919,2020,1871,1238,1006,2056,2048,2048,2048,2048,2048,2048,2048,1958,2026,2048,1965,1677,1310,908,2048,2007,1588,1329,2048,2048,2048,2051,2048,2056,2055,2049,1995,1975,1477,2035,2048,1442,578,2002,2048,2048,2048,2048,2048,2056,1985,1741,2051,2048,2048,2048,2048,2048,2048,1388,1158,1658,1977,2050,2055,2048,1844,1157,1970,1824,2056,2048,2048,2057,2049,1935,1585,1182,888,610,431,321,154,900,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1786,1431,2048,2048,2047,2057,2048,2057,1926,1927,2041,1516,1971,1165,713,1462,1736,2008,2051,2048,2048,2048,2048,2048,2048,2048,2048,2012,1819,1590,1448,1361,1137,1022,996,832,764,842,996,762,1064,1779,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1700,1148,661,697,2032,2048,2048,2048,1964,1631,2048,2048,2048,2053,2048,2048,2054,1932,1381,1477,1667,1202,1478,2048,1786,984,786,1825,1967,2008,2054,2055,2053,2043,2049,1936,1569,1796,1860,1899,2015,2054,2056,2048,2048,2056,2055,2048,2056,1967,1744,1395,588,833,1821,2048,2048,2048,2048,2048,2048,2056,2048,2052,1944,1676,1414,952,932,205,788,2048,2037,1954,1898,1740,1741,1867,2048,2025,1704,1530,1466,1691,1828,2044,2048,1928,1914,1155,2044,1706,1780,1972,2051,1669,1873,1346,1403,1117,1820,1983,2031,2021,2005,2045,1947,1963,2048,2047,2024,1556,906,1576,1977,2048,2048,2048,1843,1748,1211,688,1351,2048,2048,2048,2048,1314,391,1990,2048,2047,2048,2048,2048,2048,1940,2056,1999,1530,2048,2021,1831,2048,1985,1696,2039,2007,1362,1285,2021,1364,888,2056,2048,2048,2047,1063,115,220,1568,2057,2048,2048,2057,2048,2056,2048,1635,2021,1736,1429,720,143,1368,2006,2056,1953,2048,2024,2057,2048,2029,2048,1856,1902,1692,1904,1413,1835,1241,1625,1673,1633,1271,1289,1897,1984,2012,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2049,2043,1977,1959,1770,2017,1664,1983,2052,1839,1522,2018,1919,2048,2048,2048,2048,2048,2048,2048,2048,2057,2039,1920,1726,1535,1389,1120,817,1638,2048,2048,2048,2048,2048,1197,1085,2048,2037,1993,1976,2038,1968,2024,1990,2048,2055,2048,2048,2048,1981,1633,1546,2026,2053,2057,1942,1932,2047,2053,2048,2048,2048,2048,2056,2044,1924,1714,1333,537,1612,2048,2048,2048,2048,2048,1930,2057,2048,2048,2048,1646,1562,2056,2048,2048,2048,2048,2055,2048,2048,1756,1308,2048,2048,2048,2048,2048,1959,1970,2048,918,388,573,1399,1958,2048,2048,2048,2057,2048,2048,2048,2048,2048,2056,2038,1898,1774,1781,1716,1562,1407,1258,1239,1231,1045,769,539,584,508,447,481,405,385,445,464,448,545,497,209,389,895,1169,1164,1239,1149,1024,960,870,689,492,280,119,862,1954,2057,1635,1713,1934,1994,2048,2047,2003,2045,2048,2039,2057,1991,1850,1550,1932,2036,1528,1550,2017,1792,2027,2048,2013,1955,1957,2043,2048,2015,1893,2028,2052,2034,1873,2015,2009,1622,1421,1598,2048,1992,2044,2055,2057,1911,1672,1925,1961,2048,2024,2057,2001,2049,1892,1982,1859,1819,1815,1976,1936,1916,1980,1894,2002,1964,2048,2048,2048,2052,1962,1564,1318,1873,1025,950,1511,2055,2057,2043,1981,1926,1826,1802,1890,1767,1983,1846,1952,1950,1922,1986,2053,1807,1892,1922,1486,1513,2021,2016,1993,1876,1871,1834,1878,1769,1711,1490,1975,1598,1466,1485,1279,873,1385,2022,1936,1845,1829,1736,1600,1750,1592,1359,1412,1260,1543,1240,1244,1146,1096,1358,1201,1049,1197,1489,1194,1440,1660,1805,1817,1736,1994,1983,2052,2014,1984,1796,1704,1549,1369,789,1678,1806,2048,2048,2048,2041,872,111,1638,2048,2048,1931,1510,2017,1184,2049,2048,1356,1789,2048,2048,2056,2057,1573,2052,1897,1405,1526,2048,2048,2048,2056,2057,2055,1930,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2037,2040,2055,2052,2048,2048,2048,1936,1968,2034,2048,2048,2051,2052,2057,2048,2048,2048,2048,2049,1438,1661,2047,2048,2051,2048,2048,2046,2054,1868,1948,1716,1537,1598,1464,1779,1775,1544,1406,1329,1084,823,277,2007,1830,1923,2052,2057,2046,1842,1346,1432,2048,2053,1780,2053,2057,2048,1979,1461,2036,2048,1788,1636,1464,1871,1785,1086,824,595,1470,1425,1434,1225,1210,1326,643,617,804,407,269,534,422,379,1007,903,368,346,365,648,803,495,537,594,408,430,640,809,816,779,526,1014,786,657,962,788,645,901,391,601,622,385,525,699,387,773,343,278,808,543,716,718,1153,840,1176,1002,898,553,638,614,406,531,659,686,424,206,480,463,606,363,440,549,585,427,1101,1349,244,359,407,356,636,677,695,515,474,756,662,536,370,493,561,1145,887,926,738,386,520,388,453,426,461,299,580,185,457,570,252,233,252,505,584,284,572,508,247,844,754,380,292,369,317,446,298,292,307,503,889,541,433,558,514,519,514,386,479,613,331,354,712,683,712,898,550,294,271,306,259,513,328,389,177,296,446,506,728,683,1081,1452,956,1128,408,652,226,446,607,1070,1393,786,536,930,530,571,615,584,688,755,826,514,583,435,499,677,1032,943,1281,1194,1405,722,609,533,619,948,1151,1174,1106,1160,1197,601,420,710,1066,1155,807,450,720,1146,457,265,196,161,319,201,157,119,230,466,317,151,133,134,402,523,642,319,711,617,568,799,288,627,169,485,416,270,332,503,585,403,482,519,275,281,422,526,161,204,259,213,349,226,174,435,314,275,186,284,185,255,536,498,633,285,608,961,266,473,475,528,641,508,417,597,732,935,1005,425,491,249,387,407,258,421,376,328,248,277,246,123,924,1092,587,632,853,401,635,439,288,502,621,457,342,181,277,346,188,410,298,246,465,208,249,373,153,206,309,166,441,426,299,366,356,350,350,478,316,398,600,739,706,1410,675,473,497,696,446,512,641,209,532,836,963,463,380,1102,1107,1018,1059,484,603,368,730,480,619,513,302,229,382,328,494,1236,1022,525,358,475,497,333,418,581,734,564,705,692,381,502,670,753,539,1023,888,815,956,657,704,1878,1886,999,988,991,990,1702,1890,1744,987,987,988,1870,1117,1278,950,1387,485,906,790,1040,424,441,725,741,734,701,822,616,701,746,623,822,625,691,880,286,119,185,533,375,185,122,349,387,376,516,454,900,988,695,315,533,467,347,322,545,521,344,143,490,647,793,1394,1349,534,589,560,407,238,381,536,580,449,342,397,518,480,379,400,421,312,451,180,293,253,458,309,342,275,180,292,530,347,198,286,152,661,230,412,163,639,557,583,286,133,292,494,257,454,472,362,634,764,432,282,606,627,271,715,866,558,95,60,351,753,768,618,586,702,502,710,370,700,582,429,496,488,464,557,338,506,677,473,497,652,850,510,697,758,336,494,489,411,824,690,805,589,464,542,605,508,784,663,854,436,529,520,753,342,307,406,200,377,177,198,227,436,291,379,435,133,375,142,199,238,120,165,715,557,416,488,405,382,268,210,401,440,160,364,850,330,460,348,437,421,673,837,980,907,695,775,539,198,892,805,354,1081,1043,329,842,721,1183,1154,266,547,345,332,1284,1215,1077,1278,1372,1438,1493,1418,1503,1520,1525,1546,1515,1513,1502,1510,1583,1489,1544,1486,1497,1565,1451,1346,1315,1243,1249,1332,1345,1243,1171,1148,1018,1230,1527,1581,1887,1709,1748,1756,1667,1717,1715,1720,1701,1735,1702,1719,1748,1756,1755,1719,1710,1544,1695,1631,1675,1701,1707,1719,1689,1725,1660,1652,1652,1676,1598,1564,1641,1794,1687,1639,1680,1631,1631,1696,1742,1703,1770,1831,1861,1783,1821,1826,1732,1726,1729,1760,1805,1846,1796,1647,1716,1808,1739,1716,1803,1761,1749,1661,1734,1619,1559,1830,1605,1653,1590,1581,1666,1642,1658,1725,1687,1691,1667,1737,1709,1738,1700,1643,1723,1755,1698,1701,1670,1654,1672,1679,1613,1657,1602,1609,1555,1555,1512,1481,1873,1619,1551,1540,1357,1481,1534,1483,1476,1218,1285,1472,1433,1303,1352,1397,1341,1340,1482,1569,1511,1537,1475,1392,1427,1492,1388,1385,1563,1534,1471,1570,1626,1525,1665,1431,1517,1331,1541,1467,1460,1537,1349,1461,1357,1305,1231,1235,214,233,218,226,220,771,1416,1626,1387,1006,1338,1215,899,1280,1428,1001,1587,1644,1198,1209,1586,1116,1798,1084,1624,1710,1590,1403,1686,1595,1245,1683,1254,1638,1506,1238,1697,1094,1636,1536,1520,1678,1328,1479,1442,1488,1762,1169,1353,1630,1734,1226,1613,1506,1536,1506,1633,1437,1320,1551,1504,1433,1773,1394,1711,1441,1313,1497,1492,1693,1416,1222,1740,1520,1545,1646,1326,1681,1011,1428,1496,1730,1357,1497,1575,1492,1426,1610,1331,1503,1363,1530,1424,1350,1301,1561,1376,1169,1503,1157,1325,1502,1537,1571,1654,1698,1463,1283,1535,1465,1275,1692,1453,1557,1522,1509,1225,1688,1755,1393,1788,1643,1819,1176,1501,1663,1506,1848,1564,1640,1600,1526,1692,1720,1412,1643,1632,1765,1604,1645,1507,1355,1685,1500,1623,1746,1869,1233,1421,1466,1619,1612,1675,1387,1575,1803,1408,1734,1490,2055,2048,2016,2028,2050,2044,2016,2052,2015,2014,2020,2046,2021,2040,2017,2048,2057,2041,2037,1990,1975,1996,2024,2026,2034,2048,2048,2053,2038,2045,2017,2014,2033,2041,2048,2046,2044,2051,2037,2010,2032,1858,1996,2035,2049,2054,2036,2030,2034,2030,1999,1981,1993,1983,1998,2013,2009,2006,2045,2027,2042,2024,2003,1974,1980,1972,2012,1991,2026,2019,2022,2049,2029,1988,1965,1995,2017,2003,1992,2053,2051,2029,2044,1987,1985,1988,2022,2015,2043,2019,2040,2052,2053,2038,2044,2037,2048,2048,2037,2033,2046,1990,1951,1977,1997,1971,1964,2010,1982,1997,1962,2000,1960,1967,1982,1994,1971,1912,1969,2002,1948,1959,1994,1976,1977,2008,1948,1966,1980,1987,1988,1977,1949,2011,1969,1995,1964,1948,1997,2008,1988,2006,1975,1973,2003,1988,1978,1908,1969,1967,1994,1989,1984,1973,1955,1993,1991,1977,1960,2009,2004,2003,1978,1999,2005,1996,2000,1985,1999,1976,1934,1805,1782,1802,1772,1764,1939,1914,1740,1778,1895,1920,1920,1730,1750,1864,1951,1909,1908,1802,1713,1899,1870,1770,1712,1724,1628,1755,1562,1762,1944,1868,1831,1708,2046,2056,2053,1979,1985,1904,1793,1930,1899,1832,1926,1672,1762,1670,1883,1881,1899,1765,1849,1876,1714,1770,1697,1902,1848,1877,1832,1834,1726,1772,1700,1794,1881,1858,1820,1894,1733,1928,1765,1701,1641,1742,1875,1862,1718,1932,1823,1818,1823,1636,1811,1688,1855,1873,1866,1762,1913,1721,1823,1631,1746,1685,1953,1913,1991,1885,1853,1907,1898,1826,1686,1989,1880,1979,1940,1958,2010,1868,1722,1917,1799,1791,1650,1881,1818,1826,1961,1790,1855,1936,1811,1871,1773,1907,1799,1918,1762,1940,1877,1739,1877,1759,1886,1771,1784,1889,1819,1684,1805,1761,1825,1732,1923,1908,1880,1954,1902,1930,1915,1980,1942,1916,1895,1903,1974,1946,1918,1913,1975,1896,1916,2023,1848,1426,1408,1392,1433,1449,1484,1581,1443,1581,1400,1498,1605,1782,1686,1512,1762,1827,1980,1940,1922,1898,1750,1823,1853,1778,1953,1980,1972,1803,1994,1672,1988,1754,1759,1944,1771,1978,1977,1863,1952,1688,1868,1844,1751,1958,1925,1974,1675,2024,1735,1868,1696,1840,1743,1901,1970,1977,1798,2020,1798,1884,1753,1842,1818,1751,1950,1932,1821,1995,1696,1988,1800,1771,1950,1884,1982,1983,1910,1961,1728,1870,1877,1815,1988,1969,1919,1955,1900,1968,1961,1922,1895,1932,1874,1670,1685,1986,2012,1946,1958,2001,2010,1999,2044,2007,2016,2001,1981,2020,1958,1978,1987,1981,1996,1993,1996,1971,1953,1987,1971,2011,1981,1974,2024,2027,2021,1995,2011,2021,2020,2019,2008,2014,2022,1980,2010,2013,2014,2019,2023,2016,2012,2014,1980,2032,2036,2032,1982,2021,1982,2022,1990,2009,1992,2011,1987,2012,1997,2008,2000,2043,2051,1992,1983,1868,1697,1833,1662,1693,1701,1714,1737,1665,1580,1746,1738,1709,1622,1842,1639,1643,1785,1728,1508,1716,1717,1712,1646,1754,1758,1778,1671,1789,1790,1820,1657,1741,1763,1705,1750,1748,1760,1974,1903,1990,2001,2005,1958,1903,1948,1923,2014,1975,1978,2013,1987,1972,2001,1981,1997,1976,1975,1967,2007,2023,1994,1981,1962,1997,1966,1942,1969,2023,1991,2015,1961,1985,1964,1989,1963,1945,1971,1907,1905,1842,1965,1851,1824,1894,1795,1871,1911,1848,1911,1850,1864,1924,1876,1883,1927,1914,1981,1968,2013,1906,1972,1912,1888,1890,1964,1944,1977,1863,1923,1993,1951,1960,1977,1894,1952,1762,1934,1908,2049,2033,2036,2002,2012,2001,2014,1996,2054,2008,2048,2040,2024,2018,2015,1986,2021,1976,2027,2044,2054,2037,2026,2056,2014,2008,2027,2012,2027,2048,2044,2037,2045,2042,2036,1982,1891,2009,2017,2014,2039,2032,2037,1994,1981,2023,1994,1954,1987,2026,2037,2019,2032,2008,1981,1992,2023,1979,1962,1977,2019,2039,2027,2024,2021,1987,2011,2002,1981,1970,1994,2016,2026,2030,2035,2044,2041,2038,2001,2044,1979,2003,1980,2035,2021,2057,2057,2045,2027,2030,2038,2046,2054,2043,2040,2056,1992,1952,1983,2009,1979,1960,1970,1986,2027,1996,1964,1959,1951,1966,1969,2002,1984,1969,2008,1970,1962,1955,1898,1900,1960,1968,1968,2011,1994,2005,1982,1990,1850,1994,1948,1958,1950,1949,1813,1966,2041,2028,2033,2028,2036,1936,1826,1989,1992,1966,1878,1906,1897,1964,1984,1904,1918,1957,1957,1966,1866,1869,1958,2032,1981,1831,1917,1926,1948,1892,1840,1889,1934,1938,1980,1843,1891,1930,1992,1938,1864,1931,1977,1905,1813,1901,1978,1870,1863,1823,1647,1928,1928,1903,1905,1918,1841,1882,1920,1840,1874,1878,1886,1856,1867,1817,1846,1978,1960,1920,1915,1896,1838,1845,1878,1830,1846,2020,2000,2002,2026,2011,1979,1789,1888,1999,1926,2034,2026,2003,1861,1990,2021,2017,2003,1969,1954,1988,2040,1975,2001,1741,1977,1997,2032,1948,1768,2005,2003,2020,1962,1790,2016,2001,2032,1999,1998,1809,1951,2024,2019,2001,2012,2023,2028,1996,2004,2009,1940,2018,1998,1981,1960,2023,2023,2018,2033,2040,2004,1850,2018,1979,1994,1974,2016,1975,1948,1987,1971,1950,1993,1905,2002,1984,1948,1964,1976,2010,1945,1833,1959,1935,1985,1861,1904,2019,1997,1997,2025,1953,1921,1910,1949,1860,1924,1935,1990,1984,1956,2011,2012,1974,1971,1986,1934,1978,1930,1985,1994,1987,1981,2024,1959,1985,1932,1965,1956,1942,1876,1994,1953,1957,1929,2043,1953,1988,2002,1985,2011,1975,1969,1971,1981,1957,1996,1996,1991,1952,1905,1950,1994,1930,1953,1949,1961,1959,1969,1975,1917,1939,1959,1839,1855,1965,1971,1898,1886,1935,1916,1987,1940,1913,1981,2021,1928,1977,2009,1916,2033,1867,2018,1974,1964,2011,2009,2013,2040,2035,1873,2017,1992,1983,2024,2027,2049,2036,2031,1951,2019,2014,1972,2030,2034,2028,2003,2035,1995,2039,2010,2016,2039,2031,2048,2037,2044,1964,2024,2015,1978,2054,2024,2054,2050,2034,1980,2023,1995,2019,2040,2029,2049,2029,2038,1943,1969,1957,1974,1859,1983,1975,1979,2006,1995,2035,2014,1991,2001,1836,1993,1979,2001,2032,1960,1996,2014,1947,2009,2028,1916,1937,1911,1752,1756,1516,1566,1431,1585,1482,1311,1435,1470,1343,1177,1544,1241,1377,1222,1524,1124,1390,1271,878,1533,1331,1337,1155,1241,1575,830,1235,1408,1144,1528,1146,1305,1290,1187,1588,1122,1445,1502,1328,1568,1355,1512,1504,1461,1637,1221,1484,1513,1324,1445,1390,1309,1338,1093,1623,1244,1447,1219,810,1656,1413,1288,1194,1248,1593,852,1232,1460,1227,1595,1052,1304,1229,1374,1434,1348,1450,1512,1228,1623,1429,1517,1585,1323,1604,1294,1514,1528,1206,1611,1217,1384,1280,1387,1420,1293,1448,1208,852,1665,1406,1228,1198,1248,1603,785,1225,1436,1166,1596,1059,1327,1264,1377,1449,1371,1465,1486,1233,1633,1456,1477,1574,1374,1500,1381,1489,1399,1150,1612,1188,1469,1170,1559,1250,1248,1416,1098,994,1514,1426,1090,1286,1461,1195,992,1276,1334,1149,1452,1193,1366,1147,1544,1155,1416,1490,1326,1602,1403,1524,1500,1472,1612,1232,1462,1480,1415,1285,1518,1258,1354,1123,1601,1221,1492,1293,876,1607,1329,1352,1164,1299,1639,888,1170,1416,1274,1489,1170,1290,1230,1241,1608,1228,1523,1512,1237,1600,1369,1526,1575,1352,1649,1261,1498,1517,1279,1665,1173,1420,1284,1289,1471,1234,1415,1159,891,1605,1381,1242,1209,1320,1551,860,1255,1467,1169,1617,1061,1359,1238,1400,1452,1357,1501,1510,1238,1555,1452,1542,1626,1319,1589,1397,1586,1521,1144,1593,1231,1350,1252,1290,1403,1213,1430,1203,857,1593,1367,1239,1192,1266,1604,826,1267,1433,1121,1560,1062,1318,1273,1459,1339,1230,1478,1523,1364,1619,1446,1561,1562,1390,1648,1356,1563,1522,1179,1524,1379,1340,1296,1112,1623,1149,1410,1284,861,1588,1347,1369,1161,1230,1575,856,1183,1427,1186,1360,1225,1270,1389,1290,1638,1123,1485,1574,1423,1516,1477,1517,1448,1569,1583,1360,1442,1516,1365,1199,1667,1243,1400,1127,1638,1171,1500,1331,881,1519,1284,1372,1106,1302,1449,1162,1038,1348,1388,1226,1513,1169,1375,1158,1647,1217,1490,1445,1308,1580,1448,1597,1503,1517,1690,1286,1503,1536,1344,1235,1617,1334,1413,1150,1633,1175,1504,1359,914,1457,1306,1410,1117,1372,1199,1408,940,1365,1468,1281,1636,1068,1421,1303,1592,1257,1396,1539,1474,1295,1697,1628,1564,1631,1386,1703,1241,1214,1311,1404,1302,1850,1469,1441,1180,1316,1572,1459,1524,1781,1363,1352,1292,1560,1419,1488,1803,1431,1443,1275,1339,1486,1369,1407,1816,1492,1555,1317,1259,1476,1230,1345,1472,1659,1096,1236,1248,1604,1513,1301,1413,1521,1393,1475,1693,1745,1704,1885,1556,1941,1888,1831,1699,1867,1818,1806,1899,1003,1105,1725,1704,1785,1694,1664,1637,1550,720,1414,1981,1912,1682,1529,1074,1592,1664,1824,1390,1793,1648,1968,1518,1912,1671,1836,1894,1892,1882,1649,1595,1925,1633,1931,1555,1940,1670,1730,1891,1899,1709,1859,1817,1837,1889,1861,1660,1682,1609,1558,1602,1592,1512,1741,1461,1624,1606,1524,1542,1412,1612,1498,1415,1477,1855,1856,1908,1743,1890,1835,1800,1810,1944,1907,1755,1870,1845,1835,1918,1999,1943,1936,1937,1984,1946,1954,1869,1968,1954,1957,1920,1822,1810,1909,1826,2056,2055,2043,2002,1911,1844,1628,1964,1927,1918,2015,1926,1995,1936,1933,1950,1921,1956,1896,1877,1973,1918,1914,1944,1926,1893,1815,1871,1906,1883,1870,1835,1793,1733,1739,1683,1741,1347,1769,1808,1577,1888,1451,1750,1663,1551,1816,1522,1293,1209,1091,1283,1367,1734,1651,1387,1071,1676,1680,1400,1072,2023,1865,1792,1745,1804,1772,1675,1872,1798,1691,1674,1685,1715,1553,1781,1743,1475,1658,1452,1557,1573,1337,1313,1661,1583,1073,1069,1629,1485,1540,1943,2042,1971,1971,1966,1919,1824,1549,1577,1887,2008,1819,1881,1914,1840,1780,1664,1840,1637,1837,1879,1794,1795,1725,1785,1574,1571,1647,1546,1703,1772,1797,1907,1441,1855,1426,1686,1213,1823,1888,1788,1721,1394,1317,1785,1652,1619,1506,1581,1695,1639,1492,1652,1591,1656,1631,1233,1609,1530,1569,1703,1209,1637,1459,1678,1654,1277,1516,1570,1574,1180,1197,1452,1162,1482,1199,1622,1099,1360,1436,1280,1545,1274,1313,1532,1448,1513,1695,1648,1247,1816,1845,1904,1820,1675,1876,1975,1395,1736,1281,1673,1542,2023,2033,1783,1573,1784,1707,1838,1832,1597,1821,1814,1750,1760,1760,1448,1541,1523,1186,1898,1883,1639,1588,1851,1429,1835,1873,1752,1537,1659,1704,1717,1663,1765,2026,1491,1500,1839,1621,1851,1657,1719,1374,526,548,434,722,598,651,429,668,1526,2003,1976,1959,1931,1966,1959,1953,1953,1791,1636,1615,1645,1774,1602,1669,1524,1540,1717,1596,1718,1429,1484,1455,1442,1443,1363,1551,1546,1314,1186,1323,1464,1455,1495,1425,1317,1609,1478,1613,1423,1421,1352,1408,1416,1444,1349,1392,1789,1767,1789,1874,1892,1894,1821,1743,1791,1721,1674,1769,1803,1835,1750,1714,1689,1409,828,805,897,1204,1702,1686,1689,1642,1706,1580,1507,1654,1720,1671,1644,1734,1666,1784,1786,1885,1786,1805,1622,1492,1788,1583,1717,1485,1931,1555,1854,1798,1862,1636,1856,1799,1896,1131,1086,996,1090,1063,1070,1066,1066,1550,1551,1576,1519,1585,1539,1539,1534,1604,1510,1488,1664,1604,1476,1065,1034,1040,1230,1440,1438,1786,1768,1546,1146,1306,1467,1280,1098,1540,1643,1271,1574,1639,1552,1545,1638,1601,1332,1135,813,1106,641,956,746,753,1510,1371,1136,509,876,548,639,608,517,938,708,921,536,787,661,688,793,519,869,732,942,498,640,791,701,845,432,800,583,814,261,273,479,190,665,226,601,227,396,348,170,502,166,528,40,456,214,234,467,183,1266,1427,1503,1194,1214,1212,1323,1027,978,974,998,961,940,992,989,1436,1398,1377,1416,1492,1497,1363,1374,1455,1573,1465,1497,1568,1618,1564,1533,1502,1611,1385,1411,1415,1390,1440,1422,1425,1441,1477,1406,1414,1382,1255,906,981,910,1116,948,919,949,961,995,908,946,932,1376,1397,1447,1339,1304,936,933,946,1159,1656,1584,1579,1590,1460,1562,1593,1578,1701,1351,1323,1323,1257,1295,1272,1366,1408,1567,1511,1481,1310,1248,1428,1249,1513,1594,1675,1572,1558,1574,1807,1725,1747,1566,1396,1220,1474,1457,1464,1172,1191,1508,1426,1565,1458,1424,1519,1468,1714,1657,1560,1655,1513,1625,1552,1614,1723,1588,1644,1579,1622,1459,1626,1567,1546,1680,1666,1557,1642,1510,1571,1589,1616,1566,1717,1659,1604,1660,1452,1627,1587,1571,1729,1590,1596,1538,1609,1830,1533,1548,1548,1816,1617,1615,1567,1611,1807,1604,1699,1591,1466,965,956,933,1176,1511,1503,1544,1469,1485,1306,1273,1344,1342,1177,1214,1245,1454,1147,953,993,1203,1265,1163,1091,1052,1243,996,921,888,1621,1788,1635,1825,1667,1452,1411,1397,1309,1447,1405,1442,1339,1641,1511,1516,1552,1533,1505,1512,1545,1610,1502,1403,1375,1381,1365,1378,1380,1374,1683,1551,1524,1558,1583,1532,1517,1528,1558,1765,1604,1581,1663,1632,1586,1611,1667,1783,1464,1443,1412,1378,1469,1446,1404,1425,1886,1765,1710,1688,1745,1743,1714,1685,1895,1761,1720,1704,1658,1731,1686,1675,1675,1520,1011,1204,1058,1103,1098,1177,1206,1134,1055,965,875,645,696,671,1416,1691,1721,1704,1693,1750,1723,1740,1687,1905,1732,1692,1647,1715,1655,1749,1716,1862,1787,1768,1790,1728,1805,1752,1801,1721,1885,1713,1711,1619,1684,1682,1703,1683,1760,1406,1491,1407,1513,1190,1002,992,1010,1741,1824,1810,1821,1661,1856,1792,1824,1828,1508,1172,1213,1458,1610,1043,1047,1168,1746,1634,1611,1566,1534,1681,1603,1598,1635,1630,1473,1413,1439,1381,1476,1414,1411,1480,1727,1429,1630,1473,1477,1453,1475,1421,1706,1599,1609,1591,1555,1603,1626,1591,1740,1518,1456,1448,1447,1476,1435,1424,1500,1665,1809,1830,1833,1676,1857,1776,1825,1851,1655,1660,1606,1711,1529,1655,1600,1631,1659,1491,1439,1438,1391,1537,1491,1450,1457,1862,1821,1833,1896,1688,1850,1819,1861,1705,1664,1637,1609,1594,1647,1644,1608,1652,1631,1469,1470,1441,1409,1479,1407,1482,1532,1849,1791,1884,1843,1764,1805,1819,1878,1419,843,1781,754,679,1177,647,894,992,704,1295,1247,641,701,986,1321,1005,1274,1397,1245,644,1177,1327,1089,1366,1139,1708,1076,1182,977,1479,1611,1562,1738,1654,1759,1539,1682,1514,1624,1121,790,1413,1532,1562,1023,1008,1015,992,1372,1104,1043,1115,1345,1757,2034,2032,2006,2003,2031,2015,1981,2012,2017,2034,2005,2009,2015,2005,2016,1966,2021,2026,2033,2008,1998,2001,2018,1969,2014,2032,2054,1999,2004,2010,1993,2007,1945,2031,2005,1904,1901,1894,1895,1927,1825,1868,1883,1893,1874,1903,1838,1880,1823,1888,1901,1760,1666,1673,1676,1674,1654,1644,1616,1789,1661,1668,1655,1638,1649,1640,1620,1592,1657,1431,1434,1434,1409,1435,1406,1357,1534,1543,1481,1380,1605,1328,1600,1464,1686,1379,1488,1486,1654,1436,1492,1561,1609,1447,1291,1513,1418,1970,1747,1444,1678,1628,1568,1508,1555,1709,1540,1574,1633,1651,1757,1665,1596,1550,1674,1552,1565,1558,1548,1531,1587,1532,1437,1667,1472,1703,1582,1577,1568,1730,1599,1645,1754,1745,1495,1618,1930,1879,1714,1702,1863,1951,1936,1938,1967,1935,1944,1916,1940,1814,1849,1856,1933,1923,1867,1858,1831,1807,1778,1780,1759,1975,1972,1970,1968,1908,1926,1886,1905,1953,1970,1889,1900,1861,1818,1810,1829,1770,1971,1991,1991,1973,1949,1953,1920,1905,1948,1975,1782,1765,1738,1739,1748,1749,1720,1844,1860,1773,1817,1837,1765,1803,1813,1794,1827,1470,1454,1405,1435,1438,1446,1410,1506,1954,1948,1924,2007,1950,1927,1879,1903,1900,1907,1903,1969,1942,1933,1918,1896,1895,1929,1877,1969,1800,1493,1526,1599,1590,1592,1593,1491,1737,1814,1807,1792,1742,1775,1747,1737,1719,1688,1310,1323,1273,1397,1255,1351,1369,1466,1684,1647,1644,1654,1699,1650,1622,1604,1780,1470,1462,1529,1582,1550,1498,1480,1472,1681,1631,1545,1656,1677,1505,1675,1389,1361,1347,1281,1247,1232,1193,1360,1823,1897,1874,1886,1890,1875,1861,1889,1946,1906,1903,1856,1879,1918,1871,1886,1859,1822,1404,1424,1371,1413,1474,1465,1447,1499,1762,1665,1703,1744,1627,1626,1577,1553,1299,1539,1572,1605,1639,1762,1710,1700,1676,1625,1470,1466,1464,1440,1363,1430,1423,1667,1462,1516,1501,1563,1550,1502,1514,1459,1683,1485,1520,1460,974,1481,1530,1508,1662,1959,1929,1957,1522,1409,1413,1395,1074,1445,1406,1415,1548,1178,1165,1098,1009,1132,1120,1152,1202,1571,1407,1480,2048,1894,1887,1906,1903,1898,1902,1899,1666,1666,1416,1480,1459,1240,944,866,834,881,846,894,840,832,987,932,818,885,979,1013,943,1164,1311,1189,1376,1328,531,448,651,624,309,297,283,914,1352,730,1005,811,1230,1015,1023,1382,452,262,421,353,500,1343,1458,1482,1827,1836,1760,1820,1822,1821,1781,1761,1779,1656,1656,1644,1529,1623,1610,1630,1559,1644,1322,1345,1346,1306,1686,1684,1670,1680,1677,1665,1646,1684,1651,1674,1679,1669,1273,1735,1839,1840,1764,1810,1824,1865,1772,1826,1506,1450,1463,1446,1763,1873,1848,1863,1835,1886,1865,1861,1871,1828,1449,1779,1111,1058,1204,1185,1418,2027,1989,1950,1953,1953,1957,1881,1890,1904,1956,1937,1941,1928,1924,1907,1930,2042,1675,1680,1770,1826,1794,1784,1647,1608,1974,2046,2050,2030,2047,2037,2054,2040,2054,2048,2056,2049,2039,2045,2055,2028,2051,2030,1878,1906,1817,1857,1828,1862,1818,1899,1935,1917,1866,1858,1853,1840,1836,1872,1966,1839,1633,819,813,734,669,690,590,807,857,741,398,733,828,874,565,453,780,821,944,435,531,793,827,878,631,499,1282,1072,1120,439,732,1169,1078,1036,388,965,1083,1062,837,401,1078,1141,1093,597,1421,1343,1582,1334,1783,1336,987,1125,1170,1138,1125,1086,1111,1091,1161,1100,1202,1199,1101,1068,1069,1242,1349,1130,1063,1160,1032,1043,1110,1024,990,1022,884,1033,1025,858,832,831,885,1280,421,556,504,559,538,465,566,545,470,501,478,485,508,532,571,522,1506,1463,1486,1508,1558,1486,1525,1518,1500,1088,984,1011,1516,1509,1355,1386,1322,1406,1483,1747,1648,1666,1648,1600,1618,1670,1643,1679,1870,1698,1673,1757,1695,1711,1692,1692,1620,1062,1156,1244,1360,1338,1320,1309,1048,1424,1437,1424,1437,1555,1512,1549,1557,1741,1284,981,1133,1187,1101,1159,1053,1079,1090,1188,1106,1210,1192,1095,1032,1081,1334,1304,1133,1091,1198,1050,1056,1075,1018,989,1021,925,1044,1022,820,844,839,974,1170,421,579,519,539,550,501,536,538,480,523,502,486,514,514,583,516,1815,1810,1798,1787,1802,1775,1737,1700,1390,1418,1406,1397,1799,1825,1839,1875,1867,1858,1814,1908,1843,1484,1563,1584,1520,1441,1676,1450,1676,1600,1779,1794,1843,1717,1426,1171,1137,1118,1463,1183,1807,1746,1785,1830,1762,1835,1751,1744,1762,1262,1240,1327,1137,1471,1106,1631,1821,1800,1864,1728,1783,1824,1776,1836,1735,1774,1831,1636,1638,1745,1758,1750,1706,1642,1664,1311,1678,1626,1626,1590,1566,1566,1558,1638,1704,1567,1776,1765,1396,1499,1784,1743,1486,1589,993,1139,1160,1115,1171,1095,1091,1105,1180,1157,1146,1173,1116,1092,1025,1116,1132,1182,1173,1144,442,914,1262,1128,988,1008,1117,1182,1127,630,828,1192,1107,1016,1028,1071,1235,1160,784,750,1130,1158,1087,971,990,1249,1094,926,632,1097,1217,1131,986,930,1269,1131,936,526,1165,1240,1194,1183,1121,1084,1096,1141,1060,1044,1117,1022,973,968,943,1078,1023,803,812,862,1229,724,1131,1161,1104,407,1156,1192,1142,900,1143,1119,1224,1172,1274,1120,1101,1234,1211,1305,1073,1197,1213,1168,1254,1158,1128,1222,1154,1387,1118,1006,998,1214,1280,1045,979,1075,1307,1239,1067,925,1119,1277,1207,1074,983,1048,1580,449,525,597,1396,1609,1788,1835,1878,1795,1554,1180,485,513,542,540,519,1187,1539,1426,1642,1542,1424,1650,1542,1430,1652,1536,1435,1707,1815,1829,1715,1861,1858,1728,1902,1720,1751,1897,1747,1762,1800,1759,1891,1822,1829,1675,1902,1734,1842,1786,1749,1892,1746,1832,1826,1798,1744,1825,1878,1702,1750,1883,1707,1908,1767,1751,1912,1743,1726,1816,1897,1735,1811,1844,1680,1905,1686,1838,1792,1799,1773,1791,1822,1779,1827,1812,1760,1905,1708,1748,1895,1707,1846,1781,1750,1870,1864,1746,1715,1902,1681,1833,1886,1692,1829,1013,1287,1087,1331,1230,1118,1292,1068,630,768,826,922,455,508,797,859,864,590,380,833,888,841,459,526,811,892,790,1230,1090,1044,1134,1167,1133,1156,1044,1125,1086,1163,1127,1192,1163,1075,1073,1100,1513,1593,1462,1438,1129,1106,1226,1067,1080,1097,1035,1001,1046,891,1005,1058,850,882,810,858,1520,1407,1588,981,443,539,524,520,566,497,539,520,507,492,490,485,534,506,590,637,1702,1663,1642,1646,1721,1653,1622,1658,1711,1683,1786,1654,1613,1604,1674,1624,748,799,1313,1411,1355,1398,1308,1411,1357,1325,1169,1066,1225,1068,1271,1098,1237,1072,1333,1381,1409,1439,1467,1398,1361,1473,1450,1572,1535,1434,1334,1476,1412,1435,1333,1427,1209,1161,1195,1071,1317,1192,1291,1196,1254,1147,1229,1243,1350,1127,1200,1127,1202,1415,1530,1492,1486,1707,1462,1590,1451,1465,1399,1435,1234,1189,1071,1241,1527,1336,882,1365,1007,825,1249,1522,2036,2026,2016,2011,2008,2002,1988,2001,2017,2027,2000,2009,2018,1986,2000,1973,1856,1377,1320,1608,1447,1121,1122,1121,1118,1120,1121,1394,1537,1466,1570,1583,1818,1724,1736,1764,1811,1564,1501,1536,1614,1595,1572,1535,1599,142,145,1982,2021,1918,1881,1911,1870,1815,1875,1898,1880,1925,1913,1921,1976,1913,1865,1910,1934,1879,1783,1988,1940,1891,1879,1952,1907,1755,1781,1811,1776,1908,1910,1887,1839,1903,1897,1872,1899,1903,1905,1834,1844,1869,1898,1840,1477,1693,1651,1651,1703,1657,1681,1664,1628,1731,1619,1681,1675,1733,1681,1691,1663,1772,1679,1464,1582,1636,1604,1562,1466,1520,1591,1630,1631,1631,1465,1575,1563,1537,1637,1733,1649,1501,1571,1749,1888,1792,1771,1810,1869,1846,1849,1859,1801,1313,1294,1334,1337,1316,1285,1342,1299,1627,1456,1453,1471,1501,1468,1467,1438,1609,1441,1454,1438,1460,1497,1438,1437,1422,1612,1437,1459,1424,1519,1469,1440,1422,1607,1457,1426,1407,1463,1506,1449,1429,1409,1610,1412,1362,1432,1499,1449,1409,1419,1534,1464,1393,1362,1482,1458,1424,1418,1399,1618,1393,1354,1458,1423,1491,1403,1406,1482,1565,1379,1427,1498,1452,1498,1425,1438,1645,1463,1420,1461,1504,1477,1452,1446,1387,1567,1338,1312,1377,1356,1337,1302,1244,1540,1345,1304,1343,1367,1337,1382,1327,1264,1570,1316,1297,1341,1323,1338,1310,1301,1491,1475,1445,1461,1501,1473,1469,1465,1363,1644,1426,1374,1469,1494,1474,1462,1397,1522,1528,1371,1403,1451,1451,1436,1404,1388,1625,1404,1412,1426,1456,1476,1419,1402,1395,1618,1373,1387,1430,1497,1461,1421,1429,1605,1448,1434,1430,1456,1492,1455,1428,1403,1774,1715,1839,1702,1914,1584,1734,1793,1819,1829,1769,1669,1656,1827,1777,1710,1792,1853,1790,1880,1830,1908,1839,1909,1846,1854,1876,1831,1763,1830,1823,1797,1766,1820,1979,1724,1731,1689,1737,1708,1683,1673,1756,1859,1737,1714,1700,1729,1734,1685,1708,1880,1879,1830,1827,1806,1789,1852,1801,1793,1902,1725,1776,1732,1740,1719,1768,1768,1861,1751,1883,1837,1830,1828,1767,1770,1789,1780,1829,1707,1747,1682,1573,1748,1724,1636,1778,1846,1722,1775,1667,1633,1656,1635,1809,1921,1649,1628,1647,1653,1690,1681,1694,1643,1769,1689,1604,1647,1713,1691,1698,1664,1802,1792,1770,1765,1787,1831,1776,1827,1772,1841,1793,1683,1752,1790,1789,1773,1759,1828,1696,1703,1694,1741,1736,1719,1672,1721,1782,1691,1692,1734,1682,1682,1702,1723,1759,1763,1689,1702,1611,1661,1652,1732,1722,1776,1436,1512,1518,1526,1517,1507,1488,1529,2029,1955,1928,1981,2007,1938,1980,1961,1900,1962,1985,2020,1955,1934,1984,1989,2030,1688,659,40,39,40,317,40,40,39,431,1880,1790,1843,1865,1824,1839,1805,1800,1855,1463,1501,1445,1467,1421,1487,1430,1497,1912,1811,1775,1751,1807,1781,1764,1769,1341,858,40,40,38,40,312,40,40,38,938,1089,1695,1673,1676,1669,1697,1690,1685,1704,1529,1244,1351,1422,963,1144,1537,1352,1085,1348,1803,1612,1692,78,38,40,38,318,40,38,40,788,1189,1352,1206,1151,1812,1612,1634,1686,1668,1682,1665,1620,1303,39,40,32,267,988,128,165,1484,1873,2030,1641,1666,1616,1633,1675,1681,1739,1732,1683,1746,1738,1749,1742,1715,1703,1668,1796,956,1275,39,1413,1811,1719,1732,1758,1743,1776,1682,1794,1811,1849,1878,1907,1780,1929,1774,1832,1940,1864,1619,1679,1689,1733,1815,1796,1688,1891,1805,1949,1777,1968,1768,1979,1800,1939,1926,1482,1383,1291,1220,1396,1595,1525,1415,1360,1377,1230,1295,1228,1335,1314,1451,1653,592,840,872,996,1470,1627,957,669,670,811,1511,1600,1712,1342,874,1244,1692,1276,1107,850,856,962,643,694,956,1284,1335,1231,1222,1390,1371,1364,1274,1620,1768,1746,1803,1731,1766,1698,1761,1716,1781,1767,1755,1732,1777,1812,1762,1753,1002,955,937,911,1753,1975,1604,1976,1760,1083,1239,1175,1373,1997,2024,2017,2016,1909,1927,1886,1866,1981,2045,2044,2042,1993,1773,1808,1829,1849,1796,1807,1726,1788,1693,1662,1627,1592,1801,1474,1283,1333,1717,1196,1231,1255,1291,1320,1181,1286,1262,1749,1274,1217,1141,1554,1439,736,871,1693,1674,831,795,1477,1585,897,734,1129,1316,1485,1413,1365,1756,1863,1854,1885,1852,1888,1925,1967,1943,1808,1695,1647,1646,1671,1728,1784,1805,1715,1501,1410,1413,1465,1554,1461,1389,1443,1618,1515,1420,1488,1626,1523,1450,1508,1563,1974,1998,1949,1921,2019,2003,1953,1973,2005,1765,1765,1732,1757,1711,1547,1553,1603,1938,1896,1774,1886,1917,1779,1821,1803,1901,1906,1885,1847,1917,1840,1808,1766,1835,1929,1252,1493,1274,1430,1242,1207,1664,1175,1174,1230,1276,1683,1066,1249,1436,1885,1782,1765,1774,1870,1786,1786,1792,1808,1858,1836,1808,1813,1296,861,823,764,1070,1148,1163,1175,1275,1118,1268,1171,1214,1332,1416,1369,1300,1717,1854,1860,1849,1883,1850,1837,1849,1842,1934,1907,1921,1906,1935,1912,1933,1946,1876,1791,1803,1791,1665,1792,1719,1644,1582,1522,1825,1746,1798,1844,1824,1737,1861,1756,1485,1396,1482,1501,1547,1663,1766,1545,1547,1698,1599,1710,1682,1729,1745,1785,1833,1894,2051,2055,1914,1987,1967,1989,1951,2020,1939,1984,1910,1813,1139,1350,1361,1073,1818,1790,1751,1751,1673,1571,1598,1591,1640,1811,1786,1779,1778,1806,1798,1816,1762,1773,1695,1693,1687,1610,1743,1819,1795,1575,1110,1129,1021,1258,1357,556,543,854,1688,574,1564,560,1454,528,696,507,870,791,750,736,751,830,1212,1259,1146,1342,1380,1312,1436,1519,1449,1348,1551,1488,1544,1527,1426,1529,1584,1512,1367,1511,1573,1417,1323,1487,1525,1542,1411,1423,1473,688,244,198,211,851,486,451,469,1140,2032,2040,2047,2037,2033,2049,2036,2012,2050,1960,1942,1967,1893,1908,1925,1904,1898,1388,1382,1447,1437,1282,1191,1169,1083,1340,1412,1385,1493,1518,1872,1811,1821,1857,1894,1800,1781,1841,1871,1767,1744,1723,1839,1783,1757,1712,1692,1451,1301,1282,1400,1536,1328,1327,1369,1752,1768,1753,1776,1682,1236,1247,1211,1308,1883,1794,1788,1820,1589,1437,1441,1460,1684,2036,2023,2031,2025,2002,2007,1978,1988,1663,1525,1492,1484,1770,1689,1658,1680,1822,1997,1986,1983,2011,1765,1713,1739,1749,2016,2046,2043,2054,1909,1536,1621,529,531,532,533,1117,1410,1415,1388,1033,1363,1473,1592,1200,1435,1570,1610,1378,1697,1617,1842,1641,1904,1782,1295,1265,1307,1247,1100,935,1018,942,1318,862,843,935,953,1143,754,702,1834,1987,1982,1954,1469,1940,1987,1995,1998,1888,1900,1881,1899,2004,2006,1336,2007,1970,1873,1890,1896,1791,2026,1925,2009,1994,1513,1689,1639,1438,1495,1541,1579,1485,1669,1893,1892,1850,1894,1858,1894,1852,1874,1865,1460,1448,1523,1931,1968,1960,1985,2001,1822,1789,1794,1774,1902,1882,1921,1869,1605,1420,1436,1383,1472,1485,1539,1483,1519,1490,1726,1700,1604,1528,1564,1556,1532,1676,1730,1608,1749,1741,1687,1677,1758,1679,1709,1660,1529,1697,1611,1696,1515,1687,1703,1508,1471,1583,1504,1645,1560,1615,1632,1402,1522,1484,1536,1469,1498,1607,1686,1448,1318,1256,1576,1633,1705,1640,1438,1717,1564,1696,1771,1726,1527,1597,1532,1677,1543,1538,1608,1492,1504,1533,1634,1464,1362,1371,1194,1155,1138,1266,1239,1395,1477,1342,1369,1565,1326,1221,1372,1862,1741,1741,1487,1250,996,1034,862,1022,1069,1147,1331,1316,1621,1583,1604,1763,1876,1285,1336,1531,1446,1514,1454,1468,1377,1538,1702,1690,1710,1704,1674,1725,1787,1985,1658,1799,1755,1527,1372,1367,1306,1383,1515,1599,1589,1618,1566,1388,1428,1343,1735,1273,1397,1352,1394,1415,1395,1661,1489,1512,1434,1428,1437,1475,1503,1480,1501,1815,1696,1498,1436,1356,1369,1368,1394,1416,1512,1710,1748,1727,1581,1508,1512,1416,1569,1606,1438,1468,1375,1445,1394,1614,1678,1645,1570,1432,1553,1456,1429,1463,1451,1518,1611,1448,289,453,1648,1492,289,408,1620,1443,292,380,1647,1497,309,356,1655,1505,296,320,1621,1533,294,325,1368,1224,1364,1210,1427,1255,1280,1281,1400,1284,1300,1286,1420,1322,1279,1340,1278,1454,1478,1271,1216,1232,1218,1274,1271,1269,1380,1295,1201,1232,1224,1215,1150,1198,1187,1508,1296,1298,1239,1233,1219,1267,1280,1319,1905,1692,1789,1661,1653,1648,1890,1984,1283,1339,1326,1390,1335,1374,1326,1301,1365,1343,1412,1317,1396,1343,1413,1351,1634,1730,1626,1615,1606,1583,1599,1483,1317,1361,1381,1378,1528,1512,1542,1465,1591,1817,1794,1631,1577,1583,1619,1616,1503,1359,1342,1383,1393,1508,1499,1534,1428,1592,1763,1866,1660,1569,1582,1630,1591,1521,1402,1297,1406,1399,1488,1536,1540,1410,1576,1717,1893,1692,1567,1584,1649,1577,1514,1420,1294,1373,1399,1476,1562,1542,1428,1524,1714,1802,1250,1266,1074,932,949,1165,1077,1161,1136,1275,1268,1137,921,979,1055,1112,1664,1252,1308,1087,988,964,1148,1063,1127,1105,1283,1262,1196,927,1028,1053,1075,1698,1941,1899,1938,1958,1965,1934,1953,1895,1867,1790,1781,1889,1876,1957,1932,1944,1455,1961,1953,1939,1969,2001,1973,1924,1962,1770,1140,1146,1168,1327,1139,1147,1129,1140,1834,1762,1750,1780,1790,1757,1819,1781,1738,1774,1760,1810,1743,1684,1754,2012,1942,1878,1873,1906,1963,1506,730,929,1992,1956,2008,1983,1941,1988,1986,1957,2006,1959,1967,1970,1964,2007,1959,1954,1963,1753,1561,1571,1582,1565,1569,1553,1570,1691,1815,1618,1682,1623,1700,1706,1692,1750,1652,1674,1459,1588,1443,1775,1615,1747,1628,1791,1673,1704,1747,1766,1845,1759,1839,1815,1812,1627,1701,1610,1814,1676,1798,1647,1749,1603,1531,1626,1542,1689,1621,1787,1679,1768,1664,1792,1766,1818,1595,1568,1719,1684,1813,1806,1825,1769,1826,1794,1842,1797,1791,1681,1735,1721,1592,1596,1587,1729,1651,1846,1714,1877,1742,1750,1641,1837,1728,1765,1256,1916,1899,1789,1868,1948,1868,1580,1532,1779,2005,2020,1948,1802,1441,1247,1074,1306,1135,1089,1782,1630,1586,1522,1449,1529,1494,1534,1734,1151,1124,841,980,1318,1051,973,1057,1099,1303,1833,1777,1887,1809,1845,1802,1875,1782,1848,1679,1625,1777,1600,1792,1723,1691,1848,1902,1773,1878,1813,1841,1837,1854,1779,1879,1746,1602,1763,1645,1757,1745,1718,1792,1796,1865,1855,1858,1883,1827,1898,1820,1961,1925,1911,1984,1880,1948,1951,2035,1925,1963,1803,1727,1803,1749,1831,1837,1835,1789,1384,1439,1685,1360,1276,1603,1524,1772,1331,1000,1396,1398,1084,1066,364,345,1278,1266,1295,1300,1327,1440,1301,1321,1281,1447,1353,1297,1360,1271,1430,1344,1288,1377,1301,1456,1587,1091,1500,1371,1903,1917,1966,2044,2033,2011,2001,1949,1980,1630,1582,1539,1490,1726,1557,1740,1724,1544,1753,1777,1595,1778,1558,1608,1634,1641,1656,1804,1909,1896,1805,1630,1742,1841,1928,1934,1841,1660,1773,1834,1922,1809,1746,1653,1872,1918,1905,1876,1601,1792,1915,1961,1937,1910,1699,1709,1884,1885,1869,1756,1273,975,996,997,1417,1500,1594,1590,1647,1619,1694,1635,1617,1619,1832,1697,1741,1735,1620,1704,1622,1634,1676,1715,1933,1727,1706,1745,1709,1770,1734,1598,1716,1664,1753,1653,1853,1940,1740,1261,1990,1896,1867,1915,1946,1935,1868,1693,1762,1646,1674,1794,1940,1860,1902,1893,1903,1994,1930,1954,1941,1924,1814,1779,1783,1801,1907,1956,1880,1878,1930,1900,1855,1855,1625,1361,1245,1429,1673,1600,1652,1636,1905,1769,1755,1756,1772,1727,1787,1773,1757,1784,1771,1680,768,556,633,1040,1024,980,1337,1257,1282,1026,1814,1696,1631,1558,1762,1577,1647,1683,1554,1505,1621,1446,1296,1310,1593,1658,1712,1660,1678,1717,1671,1608,1718,1519,1519,1547,1528,1681,1573,1671,1544,1675,1580,1593,1615,1563,1672,1510,1641,1471,1543,1616,1493,1661,1452,1529,1656,1573,1648,1549,1417,1874,1808,1826,1877,1864,1853,1865,1806,1889,1818,1813,1838,1911,1905,1878,1856,1872,1995,2007,1961,1913,1906,1882,1939,1915,1932,1896,1936,1895,1870,1852,1883,1897,1880,1750,1640,1640,1784,1631,1607,1610,1636,1613,1631,1635,1601,1752,1647,1647,1659,1657,1632,1657,1647,1743,1647,1653,1631,1657,1629,1639,1644,1637,1919,1860,1878,1833,1861,1865,1842,1863,1850,1909,1869,1821,1837,1835,1847,1847,1846,1954,1872,1838,1857,1866,1845,1837,1880,1870,1547,1396,1424,1422,1305,1446,1396,1577,1367,1318,1494,1466,1432,1425,1878,1880,1836,1813,1802,1841,1837,1898,1949,1624,1743,1717,1682,1707,1630,1852,1563,1727,1603,1713,1756,1722,1729,1773,1709,1622,1639,1896,1828,1834,1856,1600,1845,1854,1859,1835,1872,1640,1752,1768,1764,1799,1729,1667,1765,1671,1691,1822,1586,1741,1751,1794,1737,1779,1704,1676,1695,1619,1681,1719,1659,1445,1510,1491,1597,1561,1629,1484,1667,1559,1510,1662,1680,1553,1567,1578,1593,1509,1550,1568,1832,1811,1769,1747,1749,1767,1627,1417,1542,1750,1806,1776,1715,1767,1568,1488,1699,1751,1717,1517,1397,1424,1738,1799,1578,1406,1627,1432,1497,1661,1435,1686,1493,1471,1517,1535,1505,1575,1440,1434,1528,1505,1586,1489,1495,1506,1628,1555,1492,1569,1348,1479,1442,1496,1885,1843,1852,1800,1807,1809,1769,1770,1676,1547,1812,1696,1760,1805,1611,1769,1770,1636,1920,2011,2035,2012,2012,2003,2004,1723,1783,1790,1592,1770,1718,1789,1636,1722,1748,1768,1707,1764,1725,1740,1722,1642,1681,1613,1813,1646,1808,1655,1696,1739,1698,1687,1713,1679,1744,1681,1805,1542,1444,1639,1762,1703,1685,1759,1632,1439,1558,1527,1544,1392,1481,1522,1512,1667,1808,1702,1728,1774,1666,1714,1748,1702,1609,1682,1637,1692,1601,1626,1624,1696,1634,1671,1599,1657,1685,1633,1667,1625,1751,1634,1660,1625,1689,1622,1646,1643,1716,1649,1650,1667,1656,1707,1611,1616,1599,1773,1633,1688,1667,1803,1646,1652,1621,1663,1690,1599,1677,1672,1798,1607,1605,1641,1710,1646,1875,1785,1669,1622,1800,1808,1604,1740,1795,1801,1719,1899,1888,1873,1931,2020,1950,1940,1950,1974,1745,1870,1936,1988,2031,2021,1991,1818,1917,1860,1810,1893,1994,2025,2032,1991,1975,1964,1919,1907,1874,1905,1906,1922,1962,1999,1739,1907,1882,1886,1860,1770,1592,1632,1944,1778,1800,1571,1614,1623,1623,1605,1775,1082,933,1041,1015,1253,1238,1121,1288,1203,1306,1131,1304,1205,1253,1143,1240,1261,1671,1730,1826,1696,1706,1700,1726,1730,1656,1712,1681,1755,1658,1671,1682,1707,1578,1773,1630,1636,1651,1728,1683,1655,1632,1703,1665,1700,1657,1704,1796,1693,1744,1694,1701,1743,1711,1734,1835,1754,1656,1751,1838,2009,1980,2041,2056,2038,2041,2024,2027,2026,2038,2035,2038,2048,2053,2045,2054,2043,1886,1858,1874,1927,1924,1892,1880,1874,1881,1637,1687,1537,1745,1772,1662,1545,1691,1711,1681,1683,1703,1611,1654,1789,1791,1602,1728,1655,1521,1608,1434,1746,1816,1844,1718,1665,1647,1779,1888,1857,1860,1798,1778,1643,1829,1837,1834,1563,2019,1975,2037,1923,1889,1926,1573,1727,1709,1745,1699,1793,1790,1747,1668,1777,1688,1699,1677,1757,1582,1492,1515,1530,1518,1527,1538,1509,1522,1534,1508,1549,1500,1559,1526,1526,1514,1344,1028,857,1048,845,1592,1453,1336,1391,1349,1416,1370,1431,1527,1626,1744,1648,1632,1639,1621,1656,1701,1780,1716,1643,1696,1793,1767,1724,1707,1756,1626,1697,1670,1459,1280,1596,1669,1699,1888,1904,1913,1884,1894,1886,1906,1922,1945,1920,1556,1599,1504,1496,1434,1516,1847,1963,1903,1812,1619,1483,1588,1667,1898,1914,1772,1621,1677,1642,1620,1606,1682,1719,1771,1216,1630,1715,1686,1713,1760,1528,1219,1595,1241,1432,1504,1713,1768,1764,1285,1469,1479,1325,1421,1362,1346,1337,1299,1379,1542,1400,1305,1320,1339,1303,1323,1263,1446,1452,1380,1596,1540,1692,1675,1349,1134,1489,1214,1374,1497,1642,1598,1428,1167,1370,1611,1428,1328,1294,1223,1243,1338,1448,1655,1276,1695,1717,1764,1731,1702,1562,1419,1672,1371,1644,1538,1708,1703,1421,1203,1658,1364,1385,1488,1659,1630,1429,1397,1308,1652,1276,1465,1557,1688,1762,1713,1424,1657,1528,1409,1564,1416,1504,1467,1545,1426,1846,1775,1728,1741,1770,141,145,1214,598,637,657,553,474,661,700,544,1300,835,1074,1429,1389,1383,1430,1414,1588,1582,1685,1586,1606,1559,1638,1829,1505,1040,1111,1199,1235,1335,1262,1300,1306,1446,1551,1601,1535,1520,1588,1690,1527,1323,1429,1298,717,25,30,25,639,588,1352,542,1581,1636,1662,1598,1629,1142,1671,1499,1585,1528,1760,1913,1949,1899,1954,1911,1797,1475,1500,1510,1239,976,982,1258,1361,1416,1446,1490,1530,1441,1641,1736,1696,1546,1589,1507,1572,1600,1485,1572,1783,2056,2048,2043,1999,1872,1976,2023,1914,1730,1926,1891,1964,2015,2038,2012,2035,2025,2027,1988,2037,2049,1963,1722,1910,2003,2005,2020,1880,1670,1529,1215,1191,1191,1552,2014,1868,1716,1785,1911,1871,1740,1784,1804,1929,2011,2033,1990,2019,2038,1970,2041,1846,1524,1554,1560,1516,1510,1575,1503,1497,1355,1369,1342,1325,1286,1314,1328,1631,2029,1998,2033,1961,2023,1923,1948,1950,2014,1807,1717,1641,1676,1688,1688,1087,364,637,1307,1263,1316,919,1066,895,1091,1262,1661,1693,1568,1748,1738,1654,1524,1606,1559,1609,1541,1608,1490,1494,1203,1353,1068,1180,1221,1311,1224,1383,1420,1560,1569,1580,1455,1442,1437,1181,995,1180,1600,1478,615,1297,1240,1418,1537,1474,1473,1453,1131,1393,1544,1769,1944,1681,1339,1288,1229,1498,1562,1643,1601,1648,1576,1608,1492,1554,1491,1407,1237,1458,1558,1547,1353,1382,1394,1403,1360,1139,468,645,454,916,1435,1551,1549,1513,1432,1537,1541,1477,1367,1301,1184,1203,1329,1433,1529,1261,1087,993,887,1361,1742,1916,1802,1748,1576,1289,1041,1204,1558,1588,1557,1566,1580,1573,1543,1773,1731,1824,1705,1831,1754,1883,1742,1676,1401,1423,1359,1427,1436,1524,1690,1818,1972,1947,1898,1941,1972,1947,1898,1965,1902,1745,1572,1116,736,948,862,1232,1487,1653,1655,1705,1483,1638,1300,1315,1240,954,516,902,791,868,612,1107,1393,1098,533,620,475,1187,1775,1561,1088,1112,1014,1227,1402,1312,1061,1090,917,1179,1450,1478,1450,1442,1433,1608,1677,1793,1633,1827,1869,1783,1564,1313,1030,1255,1157,1204,993,1086,866,1198,991,1237,1249,1060,481,638,626,684,501,597,619,642,501,632,621,688,529,655,614,648,418,532,561,1266,1887,1583,1035,1152,1024,1149,1030,1138,1126,1441,1788,1602,1722,1706,1676,1645,1709,1485,1149,1428,1674,1655,1719,1792,1864,1168,160,311,269,351,203,335,274,347,55,262,25,201,148,284,269,318,167,833,1498,1519,1667,1408,1064,1049,1089,1201,1207,1383,1488,1526,1435,1723,1866,1862,1683,1702,1341,1640,1620,1588,1386,1703,1957,2021,2020,2010,1946,1976,1953,1970,1986,1958,2005,1688,1265,1291,1712,1560,1506,1287,1605,1447,1509,1507,1474,1472,1468,1474,1536,1496,1525,1311,1099,1297,1265,1387,1128,1325,1229,1118,1071,1272,2048,1182,626,1811,1840,827,1095,2018,1651,699,1436,2048,1061,666,1695,2007,2047,2048,2048,1997,1960,1996,2048,2048,2037,1917,1972,1884,1975,1856,1973,2012,1919,1982,1887,2029,1949,1980,1962,1961,1994,1877,1976,1992,1970,1973,1896,1948,1901,1940,1907,1982,2048,2026,1910,1982,2048,2024,1908,1981,1861,2030,2026,1902,1985,2046,2033,1955,1983,2047,2048,2053,1875,1980,1874,1976,1874,2028,2048,2048,2048,1995,1965,1995,2048,2048,2048,1883,1977,1884,2031,2012,1933,1996,1878,2030,2031,1902,1981,1876,1979,2051,2033,1865,1974,2049,2051,1865,1977,2057,2048,1941,1981,2051,2048,1999,1950,1993,2057,2022,1906,1981,2048,2048,1863,1977,1864,1997,1866,1978,1877,1976,1874,1976,1868,1994,1866,1935,1905,1884,1986,1830,1976,2048,2057,1866,1978,2048,2048,1869,1972,2056,2025,1897,1979,2053,2022,1908,1978,2017,1901,1980,2029,1898,1979,1869,2030,1994,1957,1892,1986,1938,1978,1895,1989,1858,2029,2009,1939,2003,1865,1937,1909,1916,1938,1994,2048,1912,2009,2048,2057,1864,1994,1864,1978,1865,1972,1864,1995,1864,1981,1893,2023,2005,1946,1933,1942,1935,1940,1952,1938,1936,1933,1989,2003,2033,1865,1977,2000,2017,1919,2010,1963,1977,1961,1937,1974,1890,1975,1875,1980,2048,1868,1976,1947,1980,2010,1902,1985,2048,2031,1915,1986,2048,2019,1931,2001,2048,2048,1863,1980,2048,2048,1889,2030,2048,2048,2056,1867,1984,2048,2048,2046,1896,1979,2048,2048,1863,1977,2053,2048,1875,2033,1866,1957,2002,1869,1972,1995,1899,2009,1945,1987,1826,1974,1912,2009,2049,1939,1999,2050,2033,2019,1989,1963,1993,2032,2014,2014,1917,1991,1870,2029,2022,1927,1964,1895,1979,1864,1991,2044,1946,1973,2042,2017,1908,1981,2029,1905,1981,2028,1905,1926,1932,1953,1916,1943,1902,1951,1907,1950,1898,1947,1896,1950,1900,1985,2048,2048,2025,1933,1995,2048,2048,1988,1977,2015,1866,1975,1962,1986,1914,1972,1926,1980,2014,1906,1985,1870,1974,2041,1869,2029,2055,1871,1975,1882,2031,1946,1980,2052,2048,2048,1954,1972,2051,2048,2048,1981,1977,2012,2048,2048,1943,1980,2052,2048,2048,1887,2031,1999,1933,1911,1962,1881,1983,2044,1913,2010,2048,1870,1975,2048,1932,1995,1870,2029,2048,2048,2032,1907,1982,2048,2048,1964,1978,2052,2048,2048,1870,1976,2048,2048,2048,1897,1947,1898,1945,1896,1944,1906,1939,1903,1985,1868,2029,2032,1906,1980,2056,1866,1975,2048,1867,1985,1863,1967,1882,1918,1933,1907,1960,1860,2005,1860,1983,1866,1973,2055,2056,1863,1972,2046,2052,1862,1967,2012,1946,1986,2003,2025,1883,1977,1866,1978,1993,1946,1982,2019,2017,1863,1972,2047,2005,1938,1980,2002,1930,1990,1863,1974,1966,1983,1864,1975,1968,2005,1866,1971,2017,1933,2002,1953,1979,2052,2048,1947,1981,2050,2048,1954,1986,1950,1970,1810,2030,1974,1986,1987,1917,1923,1932,1926,1957,1884,1978,1892,2005,1858,1932,1917,1871,1982,1881,2015,1875,1979,2048,1878,2030,2048,1878,2029,2048,1875,2028,2048,1866,2019,1982,1974,1984,1894,1979,1889,2030,2017,1933,1996,2048,2048,2048,1863,1973,2048,2048,2048,1882,1843,2056,1887,1852,2055,1880,1847,2048,1930,1858,1921,1886,2040,2026,1863,2029,1856,2035,1850,1884,1850,1867,1836,1876,1809,1922,1755,1850,1954,1857,2012,1815,1896,1987,1816,1866,2016,1861,2016,1900,1891,1839,2038,1857,2037,1852,2027,1850,2006,1910,1880,1848,1877,1846,1885,1912,1904,1879,1869,1853,1865,1850,1864,1867,1879,1811,1910,1786,1948,1847,1931,2008,1954,1886,2031,1883,1843,2023,1881,2006,1726,1851,2054,2021,1888,1884,1834,1887,1888,2038,1637,1127,1146,1616,1392,1244,1741,1471,1121,1067,1148,1173,1131,1199,1184,1249,1564,1900,1915,1933,1956,1936,1818,1906,1897,1965,1831,2005,1853,1951,1892,1919,1932,1995,2048,2027,1907,1911,1939,1993,1863,1952,1908,1660,1190,1176,1139,1131,1892,1914,1933,1865,1980,1857,1958,1893,1918,1933,1877,1983,1853,1979,1863,1929,1901,1891,1943,1836,2009,1850,1941,1901,1984,2048,2023,1914,1983,2048,2007,1937,1996,2048,2011,1950,1993,2048,1909,2009,2047,2048,1863,1980,2048,2020,1932,2010,2048,1877,2030,2048,2045,1901,1967,1876,1946,1895,1851,1353,1398,1761,1290,1137,1600,1362,725],\"successes\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,0,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,0,0,0,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1,1,0,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,1,0,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,0,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,0,0,1,1,0,1,1,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,0,0,0,0,1,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,0,1,0,0,0,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\n;\n            compressedData['data'] = byteArray;\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\n            Module['removeRunDependency']('datafile_/home/dasho/Desktop/EDGE-classic/web/site/edge-classic.data');\n      };\n      Module['addRunDependency']('datafile_/home/dasho/Desktop/EDGE-classic/web/site/edge-classic.data');\n\n      Module['preloadResults'] ??= {};\n\n        function preloadFallback(error) {\n          console.error(error);\n          console.error('falling back to default preload behavior');\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\n        };\n\n        openDatabase(\n          (db) => checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\n              (useCached, metadata) => {\n                Module['preloadResults'][PACKAGE_NAME] = {fromCache: useCached};\n                if (useCached) {\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\n                } else {\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\n                    (packageData) => {\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\n                        (error) => {\n                          console.error(error);\n                          processPackageData(packageData);\n                        });\n                    }\n                  , preloadFallback);\n                }\n              }, preloadFallback)\n        , preloadFallback);\n\n        Module['setStatus']?.('Downloading...');\n\n    }\n    if (Module['calledRun']) {\n      runWithFS(Module);\n    } else {\n      (Module['preRun'] ??= []).push(runWithFS); // FS is not initialized yet, wait for it\n    }\n\n    }\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/blasphem.wad\", \"start\": 0, \"end\": 23224248}, {\"filename\": \"/crosshairs/.gitignore\", \"start\": 23224248, \"end\": 23224248}, {\"filename\": \"/crosshairs/Angle.png\", \"start\": 23224248, \"end\": 23224433}, {\"filename\": \"/crosshairs/Carat.png\", \"start\": 23224433, \"end\": 23224727}, {\"filename\": \"/crosshairs/Circle.png\", \"start\": 23224727, \"end\": 23226111}, {\"filename\": \"/crosshairs/Cross.png\", \"start\": 23226111, \"end\": 23226452}, {\"filename\": \"/crosshairs/Dot.png\", \"start\": 23226452, \"end\": 23226645}, {\"filename\": \"/crosshairs/Double.png\", \"start\": 23226645, \"end\": 23227064}, {\"filename\": \"/crosshairs/Plus.png\", \"start\": 23227064, \"end\": 23227249}, {\"filename\": \"/crosshairs/Spiked.png\", \"start\": 23227249, \"end\": 23227436}, {\"filename\": \"/crosshairs/Thin.png\", \"start\": 23227436, \"end\": 23227702}, {\"filename\": \"/edge_base/blasphemer/graphics/ARTISOAR.png\", \"start\": 23227702, \"end\": 23228054}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 23228054, \"end\": 23229214}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 23229214, \"end\": 23233455}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 23233455, \"end\": 23237696}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK0.png\", \"start\": 23237696, \"end\": 23239192}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK1.png\", \"start\": 23239192, \"end\": 23240282}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK10.png\", \"start\": 23240282, \"end\": 23241233}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK11.png\", \"start\": 23241233, \"end\": 23242204}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK12.png\", \"start\": 23242204, \"end\": 23243476}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK13.png\", \"start\": 23243476, \"end\": 23244708}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK14.png\", \"start\": 23244708, \"end\": 23246248}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK15.png\", \"start\": 23246248, \"end\": 23247215}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK2.png\", \"start\": 23247215, \"end\": 23248275}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK3.png\", \"start\": 23248275, \"end\": 23248942}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK4.png\", \"start\": 23248942, \"end\": 23249506}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK5.png\", \"start\": 23249506, \"end\": 23250444}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK6.png\", \"start\": 23250444, \"end\": 23251779}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK7.png\", \"start\": 23251779, \"end\": 23252409}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK8.png\", \"start\": 23252409, \"end\": 23253825}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK9.png\", \"start\": 23253825, \"end\": 23254787}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 23254787, \"end\": 23256049}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 23256049, \"end\": 23301046}, {\"filename\": \"/edge_base/blasphemer/scripts/colmap.ddf\", \"start\": 23301046, \"end\": 23301329}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 23301329, \"end\": 23301992}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 23301992, \"end\": 23303076}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 23303076, \"end\": 23305914}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 23305914, \"end\": 23307743}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 23307743, \"end\": 23311594}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 23311594, \"end\": 23323805}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 23323805, \"end\": 23328376}, {\"filename\": \"/edge_base/blasphemer/scripts/lua/edge_hud.lua\", \"start\": 23328376, \"end\": 23347539}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 23347539, \"end\": 23349618}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 23349618, \"end\": 23361879}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 23361879, \"end\": 23365649}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 23365649, \"end\": 23376564}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 23376564, \"end\": 23381430}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 23381430, \"end\": 23381815}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 23381815, \"end\": 23466735}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 23466735, \"end\": 23477919}, {\"filename\": \"/edge_base/chex1/graphics/M_SKULL1.png\", \"start\": 23477919, \"end\": 23478486}, {\"filename\": \"/edge_base/chex1/graphics/M_SKULL2.png\", \"start\": 23478486, \"end\": 23479234}, {\"filename\": \"/edge_base/chex1/graphics/STBAR.lmp\", \"start\": 23479234, \"end\": 23502776}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT033.lmp\", \"start\": 23502776, \"end\": 23502893}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT034.lmp\", \"start\": 23502893, \"end\": 23503026}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT035.lmp\", \"start\": 23503026, \"end\": 23503277}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT036.lmp\", \"start\": 23503277, \"end\": 23503604}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT037.lmp\", \"start\": 23503604, \"end\": 23503867}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT038.lmp\", \"start\": 23503867, \"end\": 23503959}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT039.lmp\", \"start\": 23503959, \"end\": 23504117}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT040.lmp\", \"start\": 23504117, \"end\": 23504275}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT041.lmp\", \"start\": 23504275, \"end\": 23504435}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT042.lmp\", \"start\": 23504435, \"end\": 23504555}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT043.lmp\", \"start\": 23504555, \"end\": 23504630}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT044.lmp\", \"start\": 23504630, \"end\": 23504708}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT045.lmp\", \"start\": 23504708, \"end\": 23504782}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT046.lmp\", \"start\": 23504782, \"end\": 23504973}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT047.lmp\", \"start\": 23504973, \"end\": 23505200}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT048.lmp\", \"start\": 23505200, \"end\": 23505338}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT049.lmp\", \"start\": 23505338, \"end\": 23505582}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT050.lmp\", \"start\": 23505582, \"end\": 23505829}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT051.lmp\", \"start\": 23505829, \"end\": 23506035}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT052.lmp\", \"start\": 23506035, \"end\": 23506279}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT053.lmp\", \"start\": 23506279, \"end\": 23506518}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT054.lmp\", \"start\": 23506518, \"end\": 23506716}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT055.lmp\", \"start\": 23506716, \"end\": 23506943}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT056.lmp\", \"start\": 23506943, \"end\": 23507182}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT057.lmp\", \"start\": 23507182, \"end\": 23507270}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT058.lmp\", \"start\": 23507270, \"end\": 23507376}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT059.lmp\", \"start\": 23507376, \"end\": 23507537}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT060.lmp\", \"start\": 23507537, \"end\": 23507629}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT061.lmp\", \"start\": 23507629, \"end\": 23507790}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT062.lmp\", \"start\": 23507790, \"end\": 23507984}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT063.lmp\", \"start\": 23507984, \"end\": 23508205}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT064.lmp\", \"start\": 23508205, \"end\": 23508406}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT065.lmp\", \"start\": 23508406, \"end\": 23508609}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT066.lmp\", \"start\": 23508609, \"end\": 23508835}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT067.lmp\", \"start\": 23508835, \"end\": 23509031}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT068.lmp\", \"start\": 23509031, \"end\": 23509189}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT069.lmp\", \"start\": 23509189, \"end\": 23509414}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT070.lmp\", \"start\": 23509414, \"end\": 23509641}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT071.lmp\", \"start\": 23509641, \"end\": 23509752}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT072.lmp\", \"start\": 23509752, \"end\": 23509943}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT073.lmp\", \"start\": 23509943, \"end\": 23510149}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT074.lmp\", \"start\": 23510149, \"end\": 23510311}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT075.lmp\", \"start\": 23510311, \"end\": 23510599}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT076.lmp\", \"start\": 23510599, \"end\": 23510822}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT077.lmp\", \"start\": 23510822, \"end\": 23511045}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT078.lmp\", \"start\": 23511045, \"end\": 23511215}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT079.lmp\", \"start\": 23511215, \"end\": 23511444}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT080.lmp\", \"start\": 23511444, \"end\": 23511658}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT081.lmp\", \"start\": 23511658, \"end\": 23511862}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT082.lmp\", \"start\": 23511862, \"end\": 23512021}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT083.lmp\", \"start\": 23512021, \"end\": 23512242}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT084.lmp\", \"start\": 23512242, \"end\": 23512438}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT085.lmp\", \"start\": 23512438, \"end\": 23512755}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT086.lmp\", \"start\": 23512755, \"end\": 23512957}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT087.lmp\", \"start\": 23512957, \"end\": 23513127}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT088.lmp\", \"start\": 23513127, \"end\": 23513327}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT089.lmp\", \"start\": 23513327, \"end\": 23513545}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT090.lmp\", \"start\": 23513545, \"end\": 23513736}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT091.lmp\", \"start\": 23513736, \"end\": 23513954}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT092.lmp\", \"start\": 23513954, \"end\": 23514137}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT093.lmp\", \"start\": 23514137, \"end\": 23514217}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT094.lmp\", \"start\": 23514217, \"end\": 23514309}, {\"filename\": \"/edge_base/chex1/graphics/credit.lmp\", \"start\": 23514309, \"end\": 23633597}, {\"filename\": \"/edge_base/chex1/graphics/help1.lmp\", \"start\": 23633597, \"end\": 23752885}, {\"filename\": \"/edge_base/chex1/graphics/titlepic.lmp\", \"start\": 23752885, \"end\": 23872173}, {\"filename\": \"/edge_base/chex1/graphics/wimap0.lmp\", \"start\": 23872173, \"end\": 23991461}, {\"filename\": \"/edge_base/chex1/scripts/attacks.ddf\", \"start\": 23991461, \"end\": 23994663}, {\"filename\": \"/edge_base/chex1/scripts/fonts.ddf\", \"start\": 23994663, \"end\": 23995267}, {\"filename\": \"/edge_base/chex1/scripts/games.ddf\", \"start\": 23995267, \"end\": 23996300}, {\"filename\": \"/edge_base/chex1/scripts/language.ldf\", \"start\": 23996300, \"end\": 24002112}, {\"filename\": \"/edge_base/chex1/scripts/levels.ddf\", \"start\": 24002112, \"end\": 24005096}, {\"filename\": \"/edge_base/chex1/scripts/styles.ddf\", \"start\": 24005096, \"end\": 24008016}, {\"filename\": \"/edge_base/chex1/scripts/things.ddf\", \"start\": 24008016, \"end\": 24017134}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA1.lmp\", \"start\": 24017134, \"end\": 24018269}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA2A8.lmp\", \"start\": 24018269, \"end\": 24019938}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA3A7.lmp\", \"start\": 24019938, \"end\": 24021848}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA4A6.lmp\", \"start\": 24021848, \"end\": 24023514}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA5.lmp\", \"start\": 24023514, \"end\": 24024633}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB1.lmp\", \"start\": 24024633, \"end\": 24025798}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB2B8.lmp\", \"start\": 24025798, \"end\": 24027486}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB3B7.lmp\", \"start\": 24027486, \"end\": 24029413}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB4B6.lmp\", \"start\": 24029413, \"end\": 24031119}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB5.lmp\", \"start\": 24031119, \"end\": 24032233}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC1.lmp\", \"start\": 24032233, \"end\": 24033368}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC2C8.lmp\", \"start\": 24033368, \"end\": 24035037}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC3C7.lmp\", \"start\": 24035037, \"end\": 24036947}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC4C6.lmp\", \"start\": 24036947, \"end\": 24038613}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC5.lmp\", \"start\": 24038613, \"end\": 24039732}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD1.lmp\", \"start\": 24039732, \"end\": 24040897}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD2D8.lmp\", \"start\": 24040897, \"end\": 24042585}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD3D7.lmp\", \"start\": 24042585, \"end\": 24044512}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD4D6.lmp\", \"start\": 24044512, \"end\": 24046218}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD5.lmp\", \"start\": 24046218, \"end\": 24047332}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE1.lmp\", \"start\": 24047332, \"end\": 24048470}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE2E8.lmp\", \"start\": 24048470, \"end\": 24050245}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE3E7.lmp\", \"start\": 24050245, \"end\": 24052301}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE4E6.lmp\", \"start\": 24052301, \"end\": 24054065}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE5.lmp\", \"start\": 24054065, \"end\": 24055293}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF1.lmp\", \"start\": 24055293, \"end\": 24056549}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF2F8.lmp\", \"start\": 24056549, \"end\": 24058516}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF3F7.lmp\", \"start\": 24058516, \"end\": 24060754}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF4F6.lmp\", \"start\": 24060754, \"end\": 24062663}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF5.lmp\", \"start\": 24062663, \"end\": 24064016}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG1.lmp\", \"start\": 24064016, \"end\": 24065272}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG2G8.lmp\", \"start\": 24065272, \"end\": 24067239}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG3G7.lmp\", \"start\": 24067239, \"end\": 24069477}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG4G6.lmp\", \"start\": 24069477, \"end\": 24071386}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG5.lmp\", \"start\": 24071386, \"end\": 24072739}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH1.lmp\", \"start\": 24072739, \"end\": 24074066}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH2H8.lmp\", \"start\": 24074066, \"end\": 24075954}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH3H7.lmp\", \"start\": 24075954, \"end\": 24078061}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH4H6.lmp\", \"start\": 24078061, \"end\": 24079937}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH5.lmp\", \"start\": 24079937, \"end\": 24081338}, {\"filename\": \"/edge_base/chex1/sprites/DOGSI0.lmp\", \"start\": 24081338, \"end\": 24082672}, {\"filename\": \"/edge_base/chex1/sprites/DOGSJ0.lmp\", \"start\": 24082672, \"end\": 24084207}, {\"filename\": \"/edge_base/chex1/sprites/DOGSK0.lmp\", \"start\": 24084207, \"end\": 24085965}, {\"filename\": \"/edge_base/chex1/sprites/DOGSL0.lmp\", \"start\": 24085965, \"end\": 24086919}, {\"filename\": \"/edge_base/chex1/sprites/DOGSM0.lmp\", \"start\": 24086919, \"end\": 24087146}, {\"filename\": \"/edge_base/chex1/sprites/DOGSN0.lmp\", \"start\": 24087146, \"end\": 24087264}, {\"filename\": \"/edge_base/chex3v/graphics/BOSSBACK.lmp\", \"start\": 24087264, \"end\": 24206552}, {\"filename\": \"/edge_base/chex3v/graphics/CQ1TITLE.lmp\", \"start\": 24206552, \"end\": 24325840}, {\"filename\": \"/edge_base/chex3v/graphics/CQ2TITLE.lmp\", \"start\": 24325840, \"end\": 24445128}, {\"filename\": \"/edge_base/chex3v/graphics/ENDPIC.lmp\", \"start\": 24445128, \"end\": 24564416}, {\"filename\": \"/edge_base/chex3v/graphics/HELP.lmp\", \"start\": 24564416, \"end\": 24683704}, {\"filename\": \"/edge_base/chex3v/graphics/HELP2.lmp\", \"start\": 24683704, \"end\": 24802992}, {\"filename\": \"/edge_base/chex3v/graphics/INTERPIC.lmp\", \"start\": 24802992, \"end\": 24922280}, {\"filename\": \"/edge_base/chex3v/graphics/M_SKULL1.png\", \"start\": 24922280, \"end\": 24922847}, {\"filename\": \"/edge_base/chex3v/graphics/M_SKULL2.png\", \"start\": 24922847, \"end\": 24923595}, {\"filename\": \"/edge_base/chex3v/graphics/PFUB0.lmp\", \"start\": 24923595, \"end\": 25111043}, {\"filename\": \"/edge_base/chex3v/graphics/PFUB1.lmp\", \"start\": 25111043, \"end\": 25179211}, {\"filename\": \"/edge_base/chex3v/graphics/PFUB2.lmp\", \"start\": 25179211, \"end\": 25298499}, {\"filename\": \"/edge_base/chex3v/graphics/STBAR.lmp\", \"start\": 25298499, \"end\": 25321467}, {\"filename\": \"/edge_base/chex3v/graphics/VICTORY2.lmp\", \"start\": 25321467, \"end\": 25440755}, {\"filename\": \"/edge_base/chex3v/graphics/WIMAP1.lmp\", \"start\": 25440755, \"end\": 25560043}, {\"filename\": \"/edge_base/chex3v/graphics/WIMAP2.lmp\", \"start\": 25560043, \"end\": 25679331}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT033.lmp\", \"start\": 25679331, \"end\": 25679448}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT034.lmp\", \"start\": 25679448, \"end\": 25679581}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT035.lmp\", \"start\": 25679581, \"end\": 25679832}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT036.lmp\", \"start\": 25679832, \"end\": 25680159}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT037.lmp\", \"start\": 25680159, \"end\": 25680422}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT038.lmp\", \"start\": 25680422, \"end\": 25680514}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT039.lmp\", \"start\": 25680514, \"end\": 25680672}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT040.lmp\", \"start\": 25680672, \"end\": 25680830}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT041.lmp\", \"start\": 25680830, \"end\": 25680990}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT042.lmp\", \"start\": 25680990, \"end\": 25681110}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT043.lmp\", \"start\": 25681110, \"end\": 25681185}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT044.lmp\", \"start\": 25681185, \"end\": 25681263}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT045.lmp\", \"start\": 25681263, \"end\": 25681337}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT046.lmp\", \"start\": 25681337, \"end\": 25681528}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT047.lmp\", \"start\": 25681528, \"end\": 25681755}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT048.lmp\", \"start\": 25681755, \"end\": 25681893}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT049.lmp\", \"start\": 25681893, \"end\": 25682137}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT050.lmp\", \"start\": 25682137, \"end\": 25682384}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT051.lmp\", \"start\": 25682384, \"end\": 25682590}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT052.lmp\", \"start\": 25682590, \"end\": 25682834}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT053.lmp\", \"start\": 25682834, \"end\": 25683073}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT054.lmp\", \"start\": 25683073, \"end\": 25683271}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT055.lmp\", \"start\": 25683271, \"end\": 25683498}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT056.lmp\", \"start\": 25683498, \"end\": 25683737}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT057.lmp\", \"start\": 25683737, \"end\": 25683825}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT058.lmp\", \"start\": 25683825, \"end\": 25683931}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT059.lmp\", \"start\": 25683931, \"end\": 25684092}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT060.lmp\", \"start\": 25684092, \"end\": 25684184}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT061.lmp\", \"start\": 25684184, \"end\": 25684345}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT062.lmp\", \"start\": 25684345, \"end\": 25684539}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT063.lmp\", \"start\": 25684539, \"end\": 25684760}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT064.lmp\", \"start\": 25684760, \"end\": 25684961}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT065.lmp\", \"start\": 25684961, \"end\": 25685164}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT066.lmp\", \"start\": 25685164, \"end\": 25685390}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT067.lmp\", \"start\": 25685390, \"end\": 25685586}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT068.lmp\", \"start\": 25685586, \"end\": 25685744}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT069.lmp\", \"start\": 25685744, \"end\": 25685969}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT070.lmp\", \"start\": 25685969, \"end\": 25686196}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT071.lmp\", \"start\": 25686196, \"end\": 25686307}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT072.lmp\", \"start\": 25686307, \"end\": 25686498}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT073.lmp\", \"start\": 25686498, \"end\": 25686704}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT074.lmp\", \"start\": 25686704, \"end\": 25686866}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT075.lmp\", \"start\": 25686866, \"end\": 25687154}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT076.lmp\", \"start\": 25687154, \"end\": 25687377}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT077.lmp\", \"start\": 25687377, \"end\": 25687600}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT078.lmp\", \"start\": 25687600, \"end\": 25687770}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT079.lmp\", \"start\": 25687770, \"end\": 25687999}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT080.lmp\", \"start\": 25687999, \"end\": 25688213}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT081.lmp\", \"start\": 25688213, \"end\": 25688417}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT082.lmp\", \"start\": 25688417, \"end\": 25688576}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT083.lmp\", \"start\": 25688576, \"end\": 25688797}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT084.lmp\", \"start\": 25688797, \"end\": 25688993}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT085.lmp\", \"start\": 25688993, \"end\": 25689310}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT086.lmp\", \"start\": 25689310, \"end\": 25689512}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT087.lmp\", \"start\": 25689512, \"end\": 25689682}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT088.lmp\", \"start\": 25689682, \"end\": 25689882}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT089.lmp\", \"start\": 25689882, \"end\": 25690100}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT090.lmp\", \"start\": 25690100, \"end\": 25690291}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT091.lmp\", \"start\": 25690291, \"end\": 25690509}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT092.lmp\", \"start\": 25690509, \"end\": 25690692}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT093.lmp\", \"start\": 25690692, \"end\": 25690772}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT094.lmp\", \"start\": 25690772, \"end\": 25690864}, {\"filename\": \"/edge_base/chex3v/graphics/credit.lmp\", \"start\": 25690864, \"end\": 25810152}, {\"filename\": \"/edge_base/chex3v/graphics/help1.lmp\", \"start\": 25810152, \"end\": 25929440}, {\"filename\": \"/edge_base/chex3v/graphics/titlepic.lmp\", \"start\": 25929440, \"end\": 26048728}, {\"filename\": \"/edge_base/chex3v/graphics/wimap0.lmp\", \"start\": 26048728, \"end\": 26168016}, {\"filename\": \"/edge_base/chex3v/scripts/UMAPINFO.txt\", \"start\": 26168016, \"end\": 26171908}, {\"filename\": \"/edge_base/chex3v/scripts/fonts.ddf\", \"start\": 26171908, \"end\": 26172512}, {\"filename\": \"/edge_base/chex3v/scripts/games.ddf\", \"start\": 26172512, \"end\": 26174927}, {\"filename\": \"/edge_base/chex3v/scripts/language.ldf\", \"start\": 26174927, \"end\": 26175640}, {\"filename\": \"/edge_base/chex3v/scripts/levels.ddf\", \"start\": 26175640, \"end\": 26180856}, {\"filename\": \"/edge_base/chex3v/scripts/rscript.rts\", \"start\": 26180856, \"end\": 26181231}, {\"filename\": \"/edge_base/chex3v/scripts/styles.ddf\", \"start\": 26181231, \"end\": 26184150}, {\"filename\": \"/edge_base/chex3v/scripts/things.ddf\", \"start\": 26184150, \"end\": 26186203}, {\"filename\": \"/edge_base/chex3vm/graphics/BOSSBACK.lmp\", \"start\": 26186203, \"end\": 26305491}, {\"filename\": \"/edge_base/chex3vm/graphics/CQ1TITLE.lmp\", \"start\": 26305491, \"end\": 26424779}, {\"filename\": \"/edge_base/chex3vm/graphics/CQ2TITLE.lmp\", \"start\": 26424779, \"end\": 26544067}, {\"filename\": \"/edge_base/chex3vm/graphics/CREDIT.lmp\", \"start\": 26544067, \"end\": 26663355}, {\"filename\": \"/edge_base/chex3vm/graphics/ENDPIC.lmp\", \"start\": 26663355, \"end\": 26782643}, {\"filename\": \"/edge_base/chex3vm/graphics/HELP.lmp\", \"start\": 26782643, \"end\": 26901931}, {\"filename\": \"/edge_base/chex3vm/graphics/HELP1.lmp\", \"start\": 26901931, \"end\": 27021219}, {\"filename\": \"/edge_base/chex3vm/graphics/HELP2.lmp\", \"start\": 27021219, \"end\": 27140507}, {\"filename\": \"/edge_base/chex3vm/graphics/INTERPIC.lmp\", \"start\": 27140507, \"end\": 27259795}, {\"filename\": \"/edge_base/chex3vm/graphics/M_SKULL1.png\", \"start\": 27259795, \"end\": 27260362}, {\"filename\": \"/edge_base/chex3vm/graphics/M_SKULL2.png\", \"start\": 27260362, \"end\": 27261110}, {\"filename\": \"/edge_base/chex3vm/graphics/PFUB0.lmp\", \"start\": 27261110, \"end\": 27448558}, {\"filename\": \"/edge_base/chex3vm/graphics/PFUB1.lmp\", \"start\": 27448558, \"end\": 27516726}, {\"filename\": \"/edge_base/chex3vm/graphics/PFUB2.lmp\", \"start\": 27516726, \"end\": 27636014}, {\"filename\": \"/edge_base/chex3vm/graphics/STBAR.lmp\", \"start\": 27636014, \"end\": 27658982}, {\"filename\": \"/edge_base/chex3vm/graphics/TITLEPIC.lmp\", \"start\": 27658982, \"end\": 27778270}, {\"filename\": \"/edge_base/chex3vm/graphics/VICTORY2.lmp\", \"start\": 27778270, \"end\": 27897558}, {\"filename\": \"/edge_base/chex3vm/graphics/WIMAP0.lmp\", \"start\": 27897558, \"end\": 28016846}, {\"filename\": \"/edge_base/chex3vm/graphics/WIMAP1.lmp\", \"start\": 28016846, \"end\": 28136134}, {\"filename\": \"/edge_base/chex3vm/graphics/WIMAP2.lmp\", \"start\": 28136134, \"end\": 28255422}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT033.lmp\", \"start\": 28255422, \"end\": 28255539}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT034.lmp\", \"start\": 28255539, \"end\": 28255672}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT035.lmp\", \"start\": 28255672, \"end\": 28255923}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT036.lmp\", \"start\": 28255923, \"end\": 28256250}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT037.lmp\", \"start\": 28256250, \"end\": 28256513}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT038.lmp\", \"start\": 28256513, \"end\": 28256605}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT039.lmp\", \"start\": 28256605, \"end\": 28256763}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT040.lmp\", \"start\": 28256763, \"end\": 28256921}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT041.lmp\", \"start\": 28256921, \"end\": 28257081}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT042.lmp\", \"start\": 28257081, \"end\": 28257201}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT043.lmp\", \"start\": 28257201, \"end\": 28257276}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT044.lmp\", \"start\": 28257276, \"end\": 28257354}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT045.lmp\", \"start\": 28257354, \"end\": 28257428}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT046.lmp\", \"start\": 28257428, \"end\": 28257619}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT047.lmp\", \"start\": 28257619, \"end\": 28257846}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT048.lmp\", \"start\": 28257846, \"end\": 28257984}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT049.lmp\", \"start\": 28257984, \"end\": 28258228}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT050.lmp\", \"start\": 28258228, \"end\": 28258475}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT051.lmp\", \"start\": 28258475, \"end\": 28258681}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT052.lmp\", \"start\": 28258681, \"end\": 28258925}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT053.lmp\", \"start\": 28258925, \"end\": 28259164}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT054.lmp\", \"start\": 28259164, \"end\": 28259362}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT055.lmp\", \"start\": 28259362, \"end\": 28259589}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT056.lmp\", \"start\": 28259589, \"end\": 28259828}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT057.lmp\", \"start\": 28259828, \"end\": 28259916}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT058.lmp\", \"start\": 28259916, \"end\": 28260022}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT059.lmp\", \"start\": 28260022, \"end\": 28260183}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT060.lmp\", \"start\": 28260183, \"end\": 28260275}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT061.lmp\", \"start\": 28260275, \"end\": 28260436}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT062.lmp\", \"start\": 28260436, \"end\": 28260630}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT063.lmp\", \"start\": 28260630, \"end\": 28260851}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT064.lmp\", \"start\": 28260851, \"end\": 28261052}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT065.lmp\", \"start\": 28261052, \"end\": 28261255}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT066.lmp\", \"start\": 28261255, \"end\": 28261481}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT067.lmp\", \"start\": 28261481, \"end\": 28261677}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT068.lmp\", \"start\": 28261677, \"end\": 28261835}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT069.lmp\", \"start\": 28261835, \"end\": 28262060}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT070.lmp\", \"start\": 28262060, \"end\": 28262287}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT071.lmp\", \"start\": 28262287, \"end\": 28262398}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT072.lmp\", \"start\": 28262398, \"end\": 28262589}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT073.lmp\", \"start\": 28262589, \"end\": 28262795}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT074.lmp\", \"start\": 28262795, \"end\": 28262957}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT075.lmp\", \"start\": 28262957, \"end\": 28263245}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT076.lmp\", \"start\": 28263245, \"end\": 28263468}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT077.lmp\", \"start\": 28263468, \"end\": 28263691}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT078.lmp\", \"start\": 28263691, \"end\": 28263861}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT079.lmp\", \"start\": 28263861, \"end\": 28264090}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT080.lmp\", \"start\": 28264090, \"end\": 28264304}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT081.lmp\", \"start\": 28264304, \"end\": 28264508}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT082.lmp\", \"start\": 28264508, \"end\": 28264667}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT083.lmp\", \"start\": 28264667, \"end\": 28264888}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT084.lmp\", \"start\": 28264888, \"end\": 28265084}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT085.lmp\", \"start\": 28265084, \"end\": 28265401}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT086.lmp\", \"start\": 28265401, \"end\": 28265603}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT087.lmp\", \"start\": 28265603, \"end\": 28265773}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT088.lmp\", \"start\": 28265773, \"end\": 28265973}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT089.lmp\", \"start\": 28265973, \"end\": 28266191}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT090.lmp\", \"start\": 28266191, \"end\": 28266382}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT091.lmp\", \"start\": 28266382, \"end\": 28266600}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT092.lmp\", \"start\": 28266600, \"end\": 28266783}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT093.lmp\", \"start\": 28266783, \"end\": 28266863}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT094.lmp\", \"start\": 28266863, \"end\": 28266955}, {\"filename\": \"/edge_base/chex3vm/scripts/fonts.ddf\", \"start\": 28266955, \"end\": 28267559}, {\"filename\": \"/edge_base/chex3vm/scripts/games.ddf\", \"start\": 28267559, \"end\": 28268439}, {\"filename\": \"/edge_base/chex3vm/scripts/language.ldf\", \"start\": 28268439, \"end\": 28269084}, {\"filename\": \"/edge_base/chex3vm/scripts/levels.ddf\", \"start\": 28269084, \"end\": 28276075}, {\"filename\": \"/edge_base/chex3vm/scripts/styles.ddf\", \"start\": 28276075, \"end\": 28278994}, {\"filename\": \"/edge_base/chex3vm/scripts/things.ddf\", \"start\": 28278994, \"end\": 28282010}, {\"filename\": \"/edge_base/doom/doom_wadfix.wad\", \"start\": 28282010, \"end\": 28282124}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 28282124, \"end\": 28401412}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 28401412, \"end\": 28520700}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 28520700, \"end\": 28639988}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 28639988, \"end\": 28759276}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 28759276, \"end\": 28878564}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 28878564, \"end\": 28997852}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 28997852, \"end\": 29117140}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 29117140, \"end\": 29236428}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 29236428, \"end\": 29265548}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 29265548, \"end\": 29294668}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 29294668, \"end\": 29323788}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 29323788, \"end\": 29329386}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 29329386, \"end\": 29334984}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 29334984, \"end\": 29340582}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 29340582, \"end\": 29353790}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 29353790, \"end\": 29366998}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 29366998, \"end\": 29380206}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 29380206, \"end\": 29499494}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 29499494, \"end\": 29618782}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 29618782, \"end\": 29738070}, {\"filename\": \"/edge_base/doom/scripts/games.ddf\", \"start\": 29738070, \"end\": 29738481}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 29738481, \"end\": 29740204}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 29740204, \"end\": 29754847}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 29754847, \"end\": 29778026}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 29778026, \"end\": 29800913}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 29800913, \"end\": 29823538}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 29823538, \"end\": 29850730}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 29850730, \"end\": 29873573}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 29873573, \"end\": 29890440}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 29890440, \"end\": 29917009}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 29917009, \"end\": 29943865}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 29943865, \"end\": 29971365}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 29971365, \"end\": 29995719}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 29995719, \"end\": 30021906}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 30021906, \"end\": 30033889}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 30033889, \"end\": 30053455}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 30053455, \"end\": 30073156}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 30073156, \"end\": 30093490}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 30093490, \"end\": 30117933}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 30117933, \"end\": 30136978}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 30136978, \"end\": 30175314}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 30175314, \"end\": 30187923}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 30187923, \"end\": 30199639}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 30199639, \"end\": 30211355}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 30211355, \"end\": 30249691}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 30249691, \"end\": 30262300}, {\"filename\": \"/edge_base/doom1/doom1_wadfix.wad\", \"start\": 30262300, \"end\": 30262414}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 30262414, \"end\": 30381702}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 30381702, \"end\": 30500990}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 30500990, \"end\": 30620278}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 30620278, \"end\": 30739566}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 30739566, \"end\": 30858854}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 30858854, \"end\": 30860586}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 30860586, \"end\": 30875229}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 30875229, \"end\": 30898408}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 30898408, \"end\": 30921295}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 30921295, \"end\": 30943920}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 30943920, \"end\": 30971112}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 30971112, \"end\": 30993955}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 30993955, \"end\": 31113243}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 31113243, \"end\": 31232531}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 31232531, \"end\": 31351819}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 31351819, \"end\": 31471107}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 31471107, \"end\": 31590395}, {\"filename\": \"/edge_base/doom2/scripts/games.ddf\", \"start\": 31590395, \"end\": 31590826}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 31590826, \"end\": 31592164}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 31592164, \"end\": 31613444}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 31613444, \"end\": 31631124}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 31631124, \"end\": 31648804}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 31648804, \"end\": 31666484}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 31666484, \"end\": 31687764}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 31687764, \"end\": 31705444}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 31705444, \"end\": 31719367}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 31719367, \"end\": 31744586}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 31744586, \"end\": 31769818}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 31769818, \"end\": 31795021}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 31795021, \"end\": 31819773}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 31819773, \"end\": 31844977}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 31844977, \"end\": 31928547}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 31928547, \"end\": 32023356}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 32023356, \"end\": 32122127}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 32122127, \"end\": 32220898}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 32220898, \"end\": 32407389}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 32407389, \"end\": 32502198}, {\"filename\": \"/edge_base/freedoom1/freedoom_wadfix.wad\", \"start\": 32502198, \"end\": 32502312}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 32502312, \"end\": 32505723}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 32505723, \"end\": 32509134}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 32509134, \"end\": 32509479}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 32509479, \"end\": 32509826}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 32509826, \"end\": 32510257}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 32510257, \"end\": 32510666}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 32510666, \"end\": 32511087}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 32511087, \"end\": 32511534}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 32511534, \"end\": 32511855}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 32511855, \"end\": 32512245}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 32512245, \"end\": 32512634}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 32512634, \"end\": 32513085}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 32513085, \"end\": 32513444}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 32513444, \"end\": 32513768}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 32513768, \"end\": 32514081}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 32514081, \"end\": 32514377}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 32514377, \"end\": 32514800}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 32514800, \"end\": 32515205}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 32515205, \"end\": 32515585}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 32515585, \"end\": 32515993}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 32515993, \"end\": 32516456}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 32516456, \"end\": 32516875}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 32516875, \"end\": 32517283}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 32517283, \"end\": 32517691}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 32517691, \"end\": 32518095}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 32518095, \"end\": 32518567}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 32518567, \"end\": 32518982}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 32518982, \"end\": 32519330}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 32519330, \"end\": 32519691}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 32519691, \"end\": 32520060}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 32520060, \"end\": 32520401}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 32520401, \"end\": 32520822}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 32520822, \"end\": 32521225}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 32521225, \"end\": 32521643}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 32521643, \"end\": 32522146}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 32522146, \"end\": 32522571}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 32522571, \"end\": 32522974}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 32522974, \"end\": 32523407}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 32523407, \"end\": 32523823}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 32523823, \"end\": 32524228}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 32524228, \"end\": 32524647}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 32524647, \"end\": 32525072}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 32525072, \"end\": 32525474}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 32525474, \"end\": 32525943}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 32525943, \"end\": 32526377}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 32526377, \"end\": 32526766}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 32526766, \"end\": 32527221}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 32527221, \"end\": 32527731}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 32527731, \"end\": 32528141}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 32528141, \"end\": 32528548}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 32528548, \"end\": 32528965}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 32528965, \"end\": 32529384}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 32529384, \"end\": 32529810}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 32529810, \"end\": 32530195}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 32530195, \"end\": 32530610}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 32530610, \"end\": 32531034}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 32531034, \"end\": 32531479}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 32531479, \"end\": 32531905}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 32531905, \"end\": 32532370}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 32532370, \"end\": 32532788}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 32532788, \"end\": 32533175}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 32533175, \"end\": 32533609}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 32533609, \"end\": 32534005}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 32534005, \"end\": 32534356}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 32534356, \"end\": 32534669}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 32534669, \"end\": 32534989}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 32534989, \"end\": 32535447}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 32535447, \"end\": 32535847}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 32535847, \"end\": 32536281}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 32536281, \"end\": 32536688}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 32536688, \"end\": 32537084}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 32537084, \"end\": 32537475}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 32537475, \"end\": 32537919}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 32537919, \"end\": 32538321}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 32538321, \"end\": 32538701}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 32538701, \"end\": 32539145}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 32539145, \"end\": 32539614}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 32539614, \"end\": 32539988}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 32539988, \"end\": 32540409}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 32540409, \"end\": 32540825}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 32540825, \"end\": 32541274}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 32541274, \"end\": 32541664}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 32541664, \"end\": 32542122}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 32542122, \"end\": 32542519}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 32542519, \"end\": 32542930}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 32542930, \"end\": 32543364}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 32543364, \"end\": 32543766}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 32543766, \"end\": 32544227}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 32544227, \"end\": 32544644}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 32544644, \"end\": 32545088}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 32545088, \"end\": 32545481}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 32545481, \"end\": 32545916}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 32545916, \"end\": 32546306}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 32546306, \"end\": 32546667}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 32546667, \"end\": 32547055}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 32547055, \"end\": 32547445}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 32547445, \"end\": 32567733}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 32567733, \"end\": 32568371}, {\"filename\": \"/edge_base/freedoom1/scripts/games.ddf\", \"start\": 32568371, \"end\": 32568782}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 32568782, \"end\": 32575978}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 32575978, \"end\": 32586815}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 32586815, \"end\": 32591743}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 32591743, \"end\": 32600061}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 32600061, \"end\": 32603472}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 32603472, \"end\": 32606883}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 32606883, \"end\": 32607228}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 32607228, \"end\": 32607575}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 32607575, \"end\": 32608006}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 32608006, \"end\": 32608415}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 32608415, \"end\": 32608836}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 32608836, \"end\": 32609283}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 32609283, \"end\": 32609604}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 32609604, \"end\": 32609994}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 32609994, \"end\": 32610383}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 32610383, \"end\": 32610834}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 32610834, \"end\": 32611193}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 32611193, \"end\": 32611517}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 32611517, \"end\": 32611830}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 32611830, \"end\": 32612126}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 32612126, \"end\": 32612549}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 32612549, \"end\": 32612954}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 32612954, \"end\": 32613334}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 32613334, \"end\": 32613742}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 32613742, \"end\": 32614205}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 32614205, \"end\": 32614624}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 32614624, \"end\": 32615032}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 32615032, \"end\": 32615440}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 32615440, \"end\": 32615844}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 32615844, \"end\": 32616316}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 32616316, \"end\": 32616731}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 32616731, \"end\": 32617079}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 32617079, \"end\": 32617440}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 32617440, \"end\": 32617809}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 32617809, \"end\": 32618150}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 32618150, \"end\": 32618571}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 32618571, \"end\": 32618974}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 32618974, \"end\": 32619392}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 32619392, \"end\": 32619895}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 32619895, \"end\": 32620320}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 32620320, \"end\": 32620723}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 32620723, \"end\": 32621156}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 32621156, \"end\": 32621572}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 32621572, \"end\": 32621977}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 32621977, \"end\": 32622396}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 32622396, \"end\": 32622821}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 32622821, \"end\": 32623223}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 32623223, \"end\": 32623692}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 32623692, \"end\": 32624126}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 32624126, \"end\": 32624515}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 32624515, \"end\": 32624970}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 32624970, \"end\": 32625480}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 32625480, \"end\": 32625890}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 32625890, \"end\": 32626297}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 32626297, \"end\": 32626714}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 32626714, \"end\": 32627133}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 32627133, \"end\": 32627559}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 32627559, \"end\": 32627944}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 32627944, \"end\": 32628359}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 32628359, \"end\": 32628783}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 32628783, \"end\": 32629228}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 32629228, \"end\": 32629654}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 32629654, \"end\": 32630119}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 32630119, \"end\": 32630537}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 32630537, \"end\": 32630924}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 32630924, \"end\": 32631358}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 32631358, \"end\": 32631754}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 32631754, \"end\": 32632105}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 32632105, \"end\": 32632418}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 32632418, \"end\": 32632738}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 32632738, \"end\": 32633196}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 32633196, \"end\": 32633596}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 32633596, \"end\": 32634030}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 32634030, \"end\": 32634437}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 32634437, \"end\": 32634833}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 32634833, \"end\": 32635224}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 32635224, \"end\": 32635668}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 32635668, \"end\": 32636070}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 32636070, \"end\": 32636450}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 32636450, \"end\": 32636894}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 32636894, \"end\": 32637363}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 32637363, \"end\": 32637737}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 32637737, \"end\": 32638158}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 32638158, \"end\": 32638574}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 32638574, \"end\": 32639023}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 32639023, \"end\": 32639413}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 32639413, \"end\": 32639871}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 32639871, \"end\": 32640268}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 32640268, \"end\": 32640679}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 32640679, \"end\": 32641113}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 32641113, \"end\": 32641515}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 32641515, \"end\": 32641976}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 32641976, \"end\": 32642393}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 32642393, \"end\": 32642837}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 32642837, \"end\": 32643230}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 32643230, \"end\": 32643665}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 32643665, \"end\": 32644055}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 32644055, \"end\": 32644416}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 32644416, \"end\": 32644804}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 32644804, \"end\": 32645194}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 32645194, \"end\": 32665482}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 32665482, \"end\": 32666120}, {\"filename\": \"/edge_base/freedoom2/scripts/games.ddf\", \"start\": 32666120, \"end\": 32666551}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 32666551, \"end\": 32673747}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 32673747, \"end\": 32684448}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 32684448, \"end\": 32689018}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 32689018, \"end\": 32697331}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 32697331, \"end\": 32816619}, {\"filename\": \"/edge_base/hacx/graphics/ENDOOM.bin\", \"start\": 32816619, \"end\": 32820619}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 32820619, \"end\": 32939907}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 32939907, \"end\": 33059195}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 33059195, \"end\": 33062606}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 33062606, \"end\": 33066017}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 33066017, \"end\": 33185305}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 33185305, \"end\": 33188240}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 33188240, \"end\": 33195414}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 33195414, \"end\": 33195682}, {\"filename\": \"/edge_base/hacx/scripts/flats.ddf\", \"start\": 33195682, \"end\": 33196062}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 33196062, \"end\": 33196689}, {\"filename\": \"/edge_base/hacx/scripts/games.ddf\", \"start\": 33196689, \"end\": 33197120}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 33197120, \"end\": 33202780}, {\"filename\": \"/edge_base/hacx/scripts/levels.ddf\", \"start\": 33202780, \"end\": 33207449}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 33207449, \"end\": 33208297}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 33208297, \"end\": 33209730}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 33209730, \"end\": 33212335}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 33212335, \"end\": 33215356}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 33215356, \"end\": 33299143}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 33299143, \"end\": 33304160}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 33304160, \"end\": 33318964}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 33318964, \"end\": 33333990}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 33333990, \"end\": 33348564}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 33348564, \"end\": 33354921}, {\"filename\": \"/edge_base/hacx/sprites/CRYXHRA0.lmp\", \"start\": 33354921, \"end\": 33356021}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 33356021, \"end\": 33396293}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 33396293, \"end\": 33431459}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 33431459, \"end\": 33464612}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 33464612, \"end\": 33500995}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 33500995, \"end\": 33532525}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 33532525, \"end\": 33567631}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 33567631, \"end\": 33591774}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 33591774, \"end\": 33621440}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 33621440, \"end\": 33632304}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 33632304, \"end\": 33645698}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 33645698, \"end\": 33660147}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 33660147, \"end\": 33674255}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 33674255, \"end\": 33683340}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 33683340, \"end\": 33692425}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 33692425, \"end\": 33707936}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 33707936, \"end\": 33723677}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 33723677, \"end\": 33739710}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 33739710, \"end\": 33755837}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 33755837, \"end\": 33772123}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 33772123, \"end\": 33788277}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 33788277, \"end\": 33804093}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 33804093, \"end\": 33819604}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 33819604, \"end\": 33835287}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 33835287, \"end\": 33851492}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 33851492, \"end\": 33860554}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 33860554, \"end\": 33870045}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 33870045, \"end\": 33878704}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 33878704, \"end\": 33891786}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 33891786, \"end\": 33911025}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 33911025, \"end\": 33929272}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 33929272, \"end\": 33933272}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 33933272, \"end\": 34024018}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 34024018, \"end\": 34114764}, {\"filename\": \"/edge_base/harmony/graphics/CWILV00.lmp\", \"start\": 34114764, \"end\": 34116814}, {\"filename\": \"/edge_base/harmony/graphics/CWILV01.lmp\", \"start\": 34116814, \"end\": 34118966}, {\"filename\": \"/edge_base/harmony/graphics/CWILV02.lmp\", \"start\": 34118966, \"end\": 34120744}, {\"filename\": \"/edge_base/harmony/graphics/CWILV03.lmp\", \"start\": 34120744, \"end\": 34123344}, {\"filename\": \"/edge_base/harmony/graphics/CWILV04.lmp\", \"start\": 34123344, \"end\": 34125435}, {\"filename\": \"/edge_base/harmony/graphics/CWILV05.lmp\", \"start\": 34125435, \"end\": 34129301}, {\"filename\": \"/edge_base/harmony/graphics/CWILV06.lmp\", \"start\": 34129301, \"end\": 34132889}, {\"filename\": \"/edge_base/harmony/graphics/CWILV07.lmp\", \"start\": 34132889, \"end\": 34135384}, {\"filename\": \"/edge_base/harmony/graphics/CWILV08.lmp\", \"start\": 34135384, \"end\": 34138223}, {\"filename\": \"/edge_base/harmony/graphics/CWILV09.lmp\", \"start\": 34138223, \"end\": 34142058}, {\"filename\": \"/edge_base/harmony/graphics/CWILV10.lmp\", \"start\": 34142058, \"end\": 34143676}, {\"filename\": \"/edge_base/harmony/graphics/CWILV11.lmp\", \"start\": 34143676, \"end\": 34145405}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 34145405, \"end\": 34234447}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 34234447, \"end\": 34325193}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 34325193, \"end\": 34328390}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 34328390, \"end\": 34329808}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 34329808, \"end\": 34332182}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 34332182, \"end\": 34333132}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 34333132, \"end\": 34334991}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 34334991, \"end\": 34336004}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 34336004, \"end\": 34336944}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 34336944, \"end\": 34337873}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 34337873, \"end\": 34338788}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 34338788, \"end\": 34339726}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 34339726, \"end\": 34343137}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 34343137, \"end\": 34346548}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 34346548, \"end\": 34435590}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 34435590, \"end\": 34435692}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 34435692, \"end\": 34435740}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 34435740, \"end\": 34436871}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 34436871, \"end\": 34437344}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 34437344, \"end\": 34437464}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 34437464, \"end\": 34438564}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 34438564, \"end\": 34438814}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 34438814, \"end\": 34438960}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 34438960, \"end\": 34439246}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 34439246, \"end\": 34439499}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 34439499, \"end\": 34439723}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 34439723, \"end\": 34439978}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 34439978, \"end\": 34440240}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 34440240, \"end\": 34440457}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 34440457, \"end\": 34440719}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 34440719, \"end\": 34440978}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 34440978, \"end\": 34441218}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 34441218, \"end\": 34442666}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 34442666, \"end\": 34444011}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 34444011, \"end\": 34445180}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 34445180, \"end\": 34446157}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 34446157, \"end\": 34446406}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 34446406, \"end\": 34448181}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 34448181, \"end\": 34449890}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 34449890, \"end\": 34450737}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 34450737, \"end\": 34451537}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 34451537, \"end\": 34459060}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 34459060, \"end\": 34459359}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 34459359, \"end\": 34459680}, {\"filename\": \"/edge_base/harmony/scripts/games.ddf\", \"start\": 34459680, \"end\": 34460111}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 34460111, \"end\": 34463712}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 34463712, \"end\": 34479092}, {\"filename\": \"/edge_base/harmony/scripts/lua/edge_hud.lua\", \"start\": 34479092, \"end\": 34482315}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 34482315, \"end\": 34483744}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 34483744, \"end\": 34486075}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 34486075, \"end\": 34553006}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 34553006, \"end\": 34556579}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 34556579, \"end\": 34558321}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 34558321, \"end\": 34561007}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 34561007, \"end\": 34562438}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 34562438, \"end\": 34564622}, {\"filename\": \"/edge_base/harmonyc/graphics/BOSSBACK.lmp\", \"start\": 34564622, \"end\": 34653664}, {\"filename\": \"/edge_base/harmonyc/graphics/CREDIT.lmp\", \"start\": 34653664, \"end\": 34742706}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV00.lmp\", \"start\": 34742706, \"end\": 34744756}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV01.lmp\", \"start\": 34744756, \"end\": 34746908}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV02.lmp\", \"start\": 34746908, \"end\": 34750927}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV03.lmp\", \"start\": 34750927, \"end\": 34753527}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV04.lmp\", \"start\": 34753527, \"end\": 34755618}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV05.lmp\", \"start\": 34755618, \"end\": 34759484}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV06.lmp\", \"start\": 34759484, \"end\": 34763072}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV07.lmp\", \"start\": 34763072, \"end\": 34765567}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV08.lmp\", \"start\": 34765567, \"end\": 34768401}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV09.lmp\", \"start\": 34768401, \"end\": 34772236}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV10.lmp\", \"start\": 34772236, \"end\": 34773854}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV11.lmp\", \"start\": 34773854, \"end\": 34775407}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV12.lmp\", \"start\": 34775407, \"end\": 34777057}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV13.lmp\", \"start\": 34777057, \"end\": 34778909}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV14.lmp\", \"start\": 34778909, \"end\": 34781225}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV30.lmp\", \"start\": 34781225, \"end\": 34783077}, {\"filename\": \"/edge_base/harmonyc/graphics/HELP.lmp\", \"start\": 34783077, \"end\": 34872119}, {\"filename\": \"/edge_base/harmonyc/graphics/INTERPIC.lmp\", \"start\": 34872119, \"end\": 34962865}, {\"filename\": \"/edge_base/harmonyc/graphics/M_EPISOD.lmp\", \"start\": 34962865, \"end\": 34966062}, {\"filename\": \"/edge_base/harmonyc/graphics/M_JKILL.lmp\", \"start\": 34966062, \"end\": 34967480}, {\"filename\": \"/edge_base/harmonyc/graphics/M_NEWG.lmp\", \"start\": 34967480, \"end\": 34969854}, {\"filename\": \"/edge_base/harmonyc/graphics/M_NGAME.lmp\", \"start\": 34969854, \"end\": 34970804}, {\"filename\": \"/edge_base/harmonyc/graphics/M_RDTHIS.lmp\", \"start\": 34970804, \"end\": 34972663}, {\"filename\": \"/edge_base/harmonyc/graphics/M_SAVEG.lmp\", \"start\": 34972663, \"end\": 34973676}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERML.lmp\", \"start\": 34973676, \"end\": 34973816}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERMM.lmp\", \"start\": 34973816, \"end\": 34974022}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERMO.lmp\", \"start\": 34974022, \"end\": 34974130}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERMR.lmp\", \"start\": 34974130, \"end\": 34974270}, {\"filename\": \"/edge_base/harmonyc/graphics/STBAR.lmp\", \"start\": 34974270, \"end\": 34991744}, {\"filename\": \"/edge_base/harmonyc/graphics/TITLEPIC.lmp\", \"start\": 34991744, \"end\": 35080786}, {\"filename\": \"/edge_base/harmonyc/graphics/WICOLON.lmp\", \"start\": 35080786, \"end\": 35080888}, {\"filename\": \"/edge_base/harmonyc/graphics/WIF.lmp\", \"start\": 35080888, \"end\": 35080936}, {\"filename\": \"/edge_base/harmonyc/graphics/WIFRGS.lmp\", \"start\": 35080936, \"end\": 35082067}, {\"filename\": \"/edge_base/harmonyc/graphics/WIKILRS.lmp\", \"start\": 35082067, \"end\": 35082540}, {\"filename\": \"/edge_base/harmonyc/graphics/WIMINUS.lmp\", \"start\": 35082540, \"end\": 35082660}, {\"filename\": \"/edge_base/harmonyc/graphics/WIMSTT.lmp\", \"start\": 35082660, \"end\": 35083760}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM0.lmp\", \"start\": 35083760, \"end\": 35084010}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM1.lmp\", \"start\": 35084010, \"end\": 35084156}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM2.lmp\", \"start\": 35084156, \"end\": 35084442}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM3.lmp\", \"start\": 35084442, \"end\": 35084695}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM4.lmp\", \"start\": 35084695, \"end\": 35084919}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM5.lmp\", \"start\": 35084919, \"end\": 35085174}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM6.lmp\", \"start\": 35085174, \"end\": 35085436}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM7.lmp\", \"start\": 35085436, \"end\": 35085653}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM8.lmp\", \"start\": 35085653, \"end\": 35085915}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM9.lmp\", \"start\": 35085915, \"end\": 35086174}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTF.lmp\", \"start\": 35086174, \"end\": 35086414}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTI.lmp\", \"start\": 35086414, \"end\": 35087862}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTK.lmp\", \"start\": 35087862, \"end\": 35089207}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTS.lmp\", \"start\": 35089207, \"end\": 35090376}, {\"filename\": \"/edge_base/harmonyc/graphics/WIPAR.lmp\", \"start\": 35090376, \"end\": 35091353}, {\"filename\": \"/edge_base/harmonyc/graphics/WIPCNT.lmp\", \"start\": 35091353, \"end\": 35091602}, {\"filename\": \"/edge_base/harmonyc/graphics/WISCRT2.lmp\", \"start\": 35091602, \"end\": 35093377}, {\"filename\": \"/edge_base/harmonyc/graphics/WISUCKS.lmp\", \"start\": 35093377, \"end\": 35095086}, {\"filename\": \"/edge_base/harmonyc/graphics/WITIME.lmp\", \"start\": 35095086, \"end\": 35095933}, {\"filename\": \"/edge_base/harmonyc/graphics/WIVCTMS.lmp\", \"start\": 35095933, \"end\": 35096733}, {\"filename\": \"/edge_base/harmonyc/scripts/attacks.ddf\", \"start\": 35096733, \"end\": 35099620}, {\"filename\": \"/edge_base/harmonyc/scripts/colmap.ddf\", \"start\": 35099620, \"end\": 35099919}, {\"filename\": \"/edge_base/harmonyc/scripts/language.ldf\", \"start\": 35099919, \"end\": 35100661}, {\"filename\": \"/edge_base/harmonyc/scripts/levels.ddf\", \"start\": 35100661, \"end\": 35105204}, {\"filename\": \"/edge_base/harmonyc/scripts/lua/edge_hud.lua\", \"start\": 35105204, \"end\": 35109826}, {\"filename\": \"/edge_base/harmonyc/scripts/styles.ddf\", \"start\": 35109826, \"end\": 35112157}, {\"filename\": \"/edge_base/harmonyc/scripts/weapons.ddf\", \"start\": 35112157, \"end\": 35112800}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 35112800, \"end\": 35133314}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 35133314, \"end\": 35252602}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 35252602, \"end\": 35309026}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 35309026, \"end\": 35428314}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 35428314, \"end\": 35547602}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 35547602, \"end\": 35666890}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 35666890, \"end\": 35786178}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 35786178, \"end\": 35786869}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 35786869, \"end\": 35906157}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 35906157, \"end\": 36025445}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 36025445, \"end\": 36144733}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 36144733, \"end\": 36145893}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 36145893, \"end\": 36146642}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 36146642, \"end\": 36150883}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 36150883, \"end\": 36155124}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 36155124, \"end\": 36205747}, {\"filename\": \"/edge_base/heretic/graphics/_WIENTER.png\", \"start\": 36205747, \"end\": 36206646}, {\"filename\": \"/edge_base/heretic/graphics/_WIF.png\", \"start\": 36206646, \"end\": 36207392}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL00.png\", \"start\": 36207392, \"end\": 36208568}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL01.png\", \"start\": 36208568, \"end\": 36209777}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL02.png\", \"start\": 36209777, \"end\": 36211042}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL03.png\", \"start\": 36211042, \"end\": 36212354}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL04.png\", \"start\": 36212354, \"end\": 36213768}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL05.png\", \"start\": 36213768, \"end\": 36215082}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL06.png\", \"start\": 36215082, \"end\": 36216469}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL07.png\", \"start\": 36216469, \"end\": 36217743}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL08.png\", \"start\": 36217743, \"end\": 36218797}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL09.png\", \"start\": 36218797, \"end\": 36219795}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL10.png\", \"start\": 36219795, \"end\": 36220887}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL11.png\", \"start\": 36220887, \"end\": 36222144}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL12.png\", \"start\": 36222144, \"end\": 36223627}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL13.png\", \"start\": 36223627, \"end\": 36224977}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL14.png\", \"start\": 36224977, \"end\": 36226581}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL15.png\", \"start\": 36226581, \"end\": 36228082}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL16.png\", \"start\": 36228082, \"end\": 36229360}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL17.png\", \"start\": 36229360, \"end\": 36230592}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK0.png\", \"start\": 36230592, \"end\": 36231574}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK1.png\", \"start\": 36231574, \"end\": 36232450}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK10.png\", \"start\": 36232450, \"end\": 36233091}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK11.png\", \"start\": 36233091, \"end\": 36233735}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK12.png\", \"start\": 36233735, \"end\": 36234563}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK13.png\", \"start\": 36234563, \"end\": 36235519}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK14.png\", \"start\": 36235519, \"end\": 36236711}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK15.png\", \"start\": 36236711, \"end\": 36237731}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK2.png\", \"start\": 36237731, \"end\": 36238481}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK3.png\", \"start\": 36238481, \"end\": 36239035}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK4.png\", \"start\": 36239035, \"end\": 36239667}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK5.png\", \"start\": 36239667, \"end\": 36240300}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK6.png\", \"start\": 36240300, \"end\": 36240889}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK7.png\", \"start\": 36240889, \"end\": 36241392}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK8.png\", \"start\": 36241392, \"end\": 36242073}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK9.png\", \"start\": 36242073, \"end\": 36242657}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY0.png\", \"start\": 36242657, \"end\": 36243782}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY1.png\", \"start\": 36243782, \"end\": 36244888}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY10.png\", \"start\": 36244888, \"end\": 36245814}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY11.png\", \"start\": 36245814, \"end\": 36246520}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY12.png\", \"start\": 36246520, \"end\": 36247446}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY13.png\", \"start\": 36247446, \"end\": 36248566}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY14.png\", \"start\": 36248566, \"end\": 36249701}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY15.png\", \"start\": 36249701, \"end\": 36250874}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY2.png\", \"start\": 36250874, \"end\": 36251786}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY3.png\", \"start\": 36251786, \"end\": 36252486}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY4.png\", \"start\": 36252486, \"end\": 36253407}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY5.png\", \"start\": 36253407, \"end\": 36254509}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY6.png\", \"start\": 36254509, \"end\": 36255607}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY7.png\", \"start\": 36255607, \"end\": 36256721}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY8.png\", \"start\": 36256721, \"end\": 36257838}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY9.png\", \"start\": 36257838, \"end\": 36258943}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 36258943, \"end\": 36260579}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 36260579, \"end\": 36306528}, {\"filename\": \"/edge_base/heretic/scripts/colmap.ddf\", \"start\": 36306528, \"end\": 36306810}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 36306810, \"end\": 36307473}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 36307473, \"end\": 36308557}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 36308557, \"end\": 36311370}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 36311370, \"end\": 36314378}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 36314378, \"end\": 36324086}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 36324086, \"end\": 36336993}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 36336993, \"end\": 36341564}, {\"filename\": \"/edge_base/heretic/scripts/lua/edge_hud.lua\", \"start\": 36341564, \"end\": 36360729}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 36360729, \"end\": 36362808}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 36362808, \"end\": 36375071}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 36375071, \"end\": 36378841}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 36378841, \"end\": 36389756}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 36389756, \"end\": 36395009}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 36395009, \"end\": 36395434}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 36395434, \"end\": 36480354}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 36480354, \"end\": 36491538}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 36491538, \"end\": 36508668}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 36508668, \"end\": 36526714}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 36526714, \"end\": 36646002}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 36646002, \"end\": 36765290}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 36765290, \"end\": 36884578}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 36884578, \"end\": 37003866}, {\"filename\": \"/edge_base/plutonia/scripts/games.ddf\", \"start\": 37003866, \"end\": 37004297}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 37004297, \"end\": 37005632}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 37005632, \"end\": 37008701}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 37008701, \"end\": 37023732}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 37023732, \"end\": 37038728}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 37038728, \"end\": 37051807}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 37051807, \"end\": 37064886}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 37064886, \"end\": 37079917}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 37079917, \"end\": 37094913}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 37094913, \"end\": 37122848}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 37122848, \"end\": 37134488}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 37134488, \"end\": 37146397}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 37146397, \"end\": 37158306}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 37158306, \"end\": 37186241}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 37186241, \"end\": 37197881}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 37197881, \"end\": 37396631}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 37396631, \"end\": 37487224}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 37487224, \"end\": 37570608}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 37570608, \"end\": 37653992}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 37653992, \"end\": 37852742}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 37852742, \"end\": 37943335}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 37943335, \"end\": 37968626}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 37968626, \"end\": 37986096}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 37986096, \"end\": 37988235}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 37988235, \"end\": 37990994}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 37990994, \"end\": 37993181}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 37993181, \"end\": 37995298}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 37995298, \"end\": 37998573}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 37998573, \"end\": 38000621}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 38000621, \"end\": 38003055}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 38003055, \"end\": 38004892}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 38004892, \"end\": 38006960}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 38006960, \"end\": 38008205}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 38008205, \"end\": 38010774}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 38010774, \"end\": 38012994}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 38012994, \"end\": 38015214}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 38015214, \"end\": 38043306}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 38043306, \"end\": 38043894}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 38043894, \"end\": 38044476}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 38044476, \"end\": 38045071}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 38045071, \"end\": 38045659}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 38045659, \"end\": 38048033}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 38048033, \"end\": 38051444}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 38051444, \"end\": 38054855}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 38054855, \"end\": 38056780}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 38056780, \"end\": 38058561}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 38058561, \"end\": 38060160}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 38060160, \"end\": 38061176}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 38061176, \"end\": 38063203}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 38063203, \"end\": 38065770}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 38065770, \"end\": 38067485}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 38067485, \"end\": 38069213}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 38069213, \"end\": 38072597}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 38072597, \"end\": 38076101}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 38076101, \"end\": 38078944}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 38078944, \"end\": 38080323}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 38080323, \"end\": 38081959}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 38081959, \"end\": 38084279}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 38084279, \"end\": 38085489}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 38085489, \"end\": 38088186}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 38088186, \"end\": 38091273}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 38091273, \"end\": 38092914}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 38092914, \"end\": 38094802}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 38094802, \"end\": 38095989}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 38095989, \"end\": 38097950}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 38097950, \"end\": 38101066}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 38101066, \"end\": 38102827}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 38102827, \"end\": 38105686}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 38105686, \"end\": 38107399}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 38107399, \"end\": 38109663}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 38109663, \"end\": 38110896}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 38110896, \"end\": 38111639}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 38111639, \"end\": 38115417}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 38115417, \"end\": 38117269}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 38117269, \"end\": 38118907}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 38118907, \"end\": 38120029}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 38120029, \"end\": 38122368}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 38122368, \"end\": 38124371}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 38124371, \"end\": 38126505}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 38126505, \"end\": 38129571}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 38129571, \"end\": 38131566}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 38131566, \"end\": 38133426}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 38133426, \"end\": 38133688}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 38133688, \"end\": 38134894}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 38134894, \"end\": 38135959}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 38135959, \"end\": 38136989}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 38136989, \"end\": 38137751}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 38137751, \"end\": 38139318}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 38139318, \"end\": 38140232}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 38140232, \"end\": 38140366}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 38140366, \"end\": 38141059}, {\"filename\": \"/edge_base/rekkr/scripts/fonts.ddf\", \"start\": 38141059, \"end\": 38141302}, {\"filename\": \"/edge_base/rekkr/scripts/games.ddf\", \"start\": 38141302, \"end\": 38141713}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 38141713, \"end\": 38149422}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 38149422, \"end\": 38150936}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 38150936, \"end\": 38155064}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 38155064, \"end\": 38157234}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 38157234, \"end\": 38159099}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 38159099, \"end\": 38159724}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 38159724, \"end\": 38160699}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 38160699, \"end\": 38161674}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 38161674, \"end\": 38162649}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 38162649, \"end\": 38163280}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 38163280, \"end\": 38163863}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 38163863, \"end\": 38164830}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 38164830, \"end\": 38165797}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 38165797, \"end\": 38166764}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 38166764, \"end\": 38167346}, {\"filename\": \"/edge_base/strife/games.ddf\", \"start\": 38167346, \"end\": 38168166}, {\"filename\": \"/edge_base/strife/images.ddf\", \"start\": 38168166, \"end\": 38168502}, {\"filename\": \"/edge_base/strife/playlist.ddf\", \"start\": 38168502, \"end\": 38169476}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 38169476, \"end\": 38288764}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 38288764, \"end\": 38408052}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 38408052, \"end\": 38527340}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 38527340, \"end\": 38646628}, {\"filename\": \"/edge_base/tnt/scripts/games.ddf\", \"start\": 38646628, \"end\": 38647059}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 38647059, \"end\": 38648396}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 38648396, \"end\": 38651752}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 38651752, \"end\": 38667745}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 38667745, \"end\": 38687211}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 38687211, \"end\": 38704637}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 38704637, \"end\": 38720544}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 38720544, \"end\": 38760662}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 38760662, \"end\": 38779986}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 38779986, \"end\": 38781297}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 38781297, \"end\": 38785820}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 38785820, \"end\": 38787049}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 38787049, \"end\": 38793266}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 38793266, \"end\": 38797393}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 38797393, \"end\": 38798935}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 38798935, \"end\": 38823406}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 38823406, \"end\": 38831108}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 38831108, \"end\": 38838987}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 38838987, \"end\": 38846335}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 38846335, \"end\": 38870806}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 38870806, \"end\": 38878147}, {\"filename\": \"/edge_defs/SNDFONT.sf3\", \"start\": 38878147, \"end\": 41236317}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 41236317, \"end\": 41236829}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 41236829, \"end\": 41245533}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 41245533, \"end\": 41245789}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 41245789, \"end\": 41249629}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 41249629, \"end\": 41251165}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 41251165, \"end\": 41251421}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 41251421, \"end\": 41252701}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 41252701, \"end\": 41261405}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 41261405, \"end\": 41263197}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 41263197, \"end\": 41264477}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 41264477, \"end\": 41265757}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 41265757, \"end\": 41267037}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 41267037, \"end\": 41268317}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 41268317, \"end\": 41269597}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 41269597, \"end\": 41270877}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 41270877, \"end\": 41272157}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 41272157, \"end\": 41273437}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 41273437, \"end\": 41274717}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 41274717, \"end\": 41275997}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 41275997, \"end\": 41277277}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 41277277, \"end\": 41278557}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 41278557, \"end\": 41287261}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 41287261, \"end\": 41354149}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 41354149, \"end\": 41368492}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 41368492, \"end\": 41536091}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 41536091, \"end\": 41602979}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 41602979, \"end\": 41610083}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 41610083, \"end\": 41654714}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 41654714, \"end\": 41654897}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 41654897, \"end\": 41656041}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 41656041, \"end\": 41659071}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 41659071, \"end\": 41662482}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 41662482, \"end\": 41665893}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 41665893, \"end\": 41666037}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 41666037, \"end\": 41666179}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 41666179, \"end\": 41666306}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 41666306, \"end\": 41666441}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 41666441, \"end\": 41669038}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 41669038, \"end\": 41670446}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 41670446, \"end\": 41671854}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 41671854, \"end\": 41673262}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 41673262, \"end\": 41674670}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 41674670, \"end\": 41676078}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 41676078, \"end\": 41677486}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 41677486, \"end\": 41678894}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 41678894, \"end\": 41680302}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 41680302, \"end\": 41680422}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 41680422, \"end\": 41680542}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 41680542, \"end\": 41680662}, {\"filename\": \"/edge_defs/graphics/STKEYS9.PNG\", \"start\": 41680662, \"end\": 41680846}, {\"filename\": \"/edge_defs/graphics/STKEYSA.PNG\", \"start\": 41680846, \"end\": 41681098}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 41681098, \"end\": 41682576}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 41682576, \"end\": 41684054}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 41684054, \"end\": 41685532}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 41685532, \"end\": 41687010}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 41687010, \"end\": 41688488}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 41688488, \"end\": 41689966}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 41689966, \"end\": 41691444}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 41691444, \"end\": 41692922}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 41692922, \"end\": 41693279}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 41693279, \"end\": 41693624}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 41693624, \"end\": 41693980}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 41693980, \"end\": 41694328}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 41694328, \"end\": 41694667}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 41694667, \"end\": 41694985}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 41694985, \"end\": 41695335}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 41695335, \"end\": 41695691}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 41695691, \"end\": 41695970}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 41695970, \"end\": 41696295}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 41696295, \"end\": 41696664}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 41696664, \"end\": 41696988}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 41696988, \"end\": 41697354}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 41697354, \"end\": 41697710}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 41697710, \"end\": 41698083}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 41698083, \"end\": 41698417}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 41698417, \"end\": 41698792}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 41698792, \"end\": 41699150}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 41699150, \"end\": 41699501}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 41699501, \"end\": 41699820}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 41699820, \"end\": 41700166}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 41700166, \"end\": 41700495}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 41700495, \"end\": 41700850}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 41700850, \"end\": 41701201}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 41701201, \"end\": 41701550}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 41701550, \"end\": 41701888}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 41701888, \"end\": 41702177}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 41702177, \"end\": 41702491}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 41702491, \"end\": 41702734}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 41702734, \"end\": 41702977}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 41702977, \"end\": 41703243}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 41703243, \"end\": 41703476}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 41703476, \"end\": 41703814}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 41703814, \"end\": 41704107}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 41704107, \"end\": 41704445}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 41704445, \"end\": 41704774}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 41704774, \"end\": 41705103}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 41705103, \"end\": 41705436}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 41705436, \"end\": 41705772}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 41705772, \"end\": 41706069}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 41706069, \"end\": 41706409}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 41706409, \"end\": 41706749}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 41706749, \"end\": 41706984}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 41706984, \"end\": 41707304}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 41707304, \"end\": 41707588}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 41707588, \"end\": 41707918}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 41707918, \"end\": 41708256}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 41708256, \"end\": 41708571}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 41708571, \"end\": 41708900}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 41708900, \"end\": 41709222}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 41709222, \"end\": 41709539}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 41709539, \"end\": 41709878}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 41709878, \"end\": 41710198}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 41710198, \"end\": 41710472}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 41710472, \"end\": 41710779}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 41710779, \"end\": 41711124}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 41711124, \"end\": 41711422}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 41711422, \"end\": 41711776}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 41711776, \"end\": 41712115}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 41712115, \"end\": 41712454}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 41712454, \"end\": 41712778}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 41712778, \"end\": 41713118}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 41713118, \"end\": 41713443}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 41713443, \"end\": 41713782}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 41713782, \"end\": 41714088}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 41714088, \"end\": 41714422}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 41714422, \"end\": 41714754}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 41714754, \"end\": 41715102}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 41715102, \"end\": 41715443}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 41715443, \"end\": 41715768}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 41715768, \"end\": 41716100}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 41716100, \"end\": 41716429}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 41716429, \"end\": 41716663}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 41716663, \"end\": 41716909}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 41716909, \"end\": 41717235}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 41717235, \"end\": 41717522}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 41717522, \"end\": 41717840}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 41717840, \"end\": 41718160}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 41718160, \"end\": 41718471}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 41718471, \"end\": 41718788}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 41718788, \"end\": 41719103}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 41719103, \"end\": 41719405}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 41719405, \"end\": 41719733}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 41719733, \"end\": 41720065}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 41720065, \"end\": 41720313}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 41720313, \"end\": 41720564}, {\"filename\": \"/edge_defs/movies/ECINTRO.mpg\", \"start\": 41720564, \"end\": 42398452}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 42398452, \"end\": 42400480}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 42400480, \"end\": 42424721}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 42424721, \"end\": 42439806}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 42439806, \"end\": 42456866}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 42456866, \"end\": 42461044}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 42461044, \"end\": 42466321}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 42466321, \"end\": 42467782}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 42467782, \"end\": 42472197}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 42472197, \"end\": 42491674}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 42491674, \"end\": 42600211}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 42600211, \"end\": 42615508}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 42615508, \"end\": 42709366}, {\"filename\": \"/edge_defs/scripts/lua/core/base64.lua\", \"start\": 42709366, \"end\": 42716545}, {\"filename\": \"/edge_defs/scripts/lua/core/debugger.lua\", \"start\": 42716545, \"end\": 42737963}, {\"filename\": \"/edge_defs/scripts/lua/core/json.lua\", \"start\": 42737963, \"end\": 42747600}, {\"filename\": \"/edge_defs/scripts/lua/core/mat2.lua\", \"start\": 42747600, \"end\": 42752287}, {\"filename\": \"/edge_defs/scripts/lua/core/mat3.lua\", \"start\": 42752287, \"end\": 42760589}, {\"filename\": \"/edge_defs/scripts/lua/core/mat4.lua\", \"start\": 42760589, \"end\": 42773693}, {\"filename\": \"/edge_defs/scripts/lua/core/mat4Extended.lua\", \"start\": 42773693, \"end\": 42777568}, {\"filename\": \"/edge_defs/scripts/lua/core/quat.lua\", \"start\": 42777568, \"end\": 42781444}, {\"filename\": \"/edge_defs/scripts/lua/core/vec2.lua\", \"start\": 42781444, \"end\": 42784410}, {\"filename\": \"/edge_defs/scripts/lua/core/vec3.lua\", \"start\": 42784410, \"end\": 42787934}, {\"filename\": \"/edge_defs/scripts/lua/core/vec4.lua\", \"start\": 42787934, \"end\": 42791806}, {\"filename\": \"/edge_defs/scripts/lua/edge_api.lua\", \"start\": 42791806, \"end\": 42800564}, {\"filename\": \"/edge_defs/scripts/lua/edge_hud.lua\", \"start\": 42800564, \"end\": 42818665}, {\"filename\": \"/edge_defs/scripts/movies.ddf\", \"start\": 42818665, \"end\": 42818715}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 42818715, \"end\": 42821533}, {\"filename\": \"/edge_defs/scripts/reverbs.ddf\", \"start\": 42821533, \"end\": 42821666}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 42821666, \"end\": 42823269}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 42823269, \"end\": 42841318}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 42841318, \"end\": 42854635}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 42854635, \"end\": 42860712}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 42860712, \"end\": 42864763}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 42864763, \"end\": 42997690}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 42997690, \"end\": 42998384}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 42998384, \"end\": 43003868}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 43003868, \"end\": 43003951}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 43003951, \"end\": 43003997}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 43003997, \"end\": 43004038}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 43004038, \"end\": 43004226}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 43004226, \"end\": 43004325}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 43004325, \"end\": 43004414}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 43004414, \"end\": 43004503}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 43004503, \"end\": 43004614}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 43004614, \"end\": 43004725}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 43004725, \"end\": 43004761}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 43004761, \"end\": 43005040}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 43005040, \"end\": 43005085}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 43005085, \"end\": 43005123}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 43005123, \"end\": 43005257}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 43005257, \"end\": 43005369}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 43005369, \"end\": 43005477}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 43005477, \"end\": 43005533}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 43005533, \"end\": 43005624}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 43005624, \"end\": 43005763}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 43005763, \"end\": 43005808}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 43005808, \"end\": 43005897}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 43005897, \"end\": 43006009}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 43006009, \"end\": 43006055}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 43006055, \"end\": 43006192}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 43006192, \"end\": 43006341}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 43006341, \"end\": 43006352}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 43006352, \"end\": 43006363}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 43006363, \"end\": 43006374}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 43006374, \"end\": 43006401}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 43006401, \"end\": 43006442}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 43006442, \"end\": 43006513}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 43006513, \"end\": 43006586}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 43006586, \"end\": 43006629}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 43006629, \"end\": 43006664}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 43006664, \"end\": 43006681}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 43006681, \"end\": 43006758}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 43006758, \"end\": 43006772}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 43006772, \"end\": 43006909}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 43006909, \"end\": 43006989}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 43006989, \"end\": 43007076}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 43007076, \"end\": 43007161}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 43007161, \"end\": 43007267}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 43007267, \"end\": 43007323}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 43007323, \"end\": 43007446}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 43007446, \"end\": 43007512}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 43007512, \"end\": 43007578}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 43007578, \"end\": 43007656}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 43007656, \"end\": 43007753}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 43007753, \"end\": 43007772}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 43007772, \"end\": 43007832}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 43007832, \"end\": 43007873}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 43007873, \"end\": 43007892}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 43007892, \"end\": 43007970}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 43007970, \"end\": 43008079}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 43008079, \"end\": 43008129}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 43008129, \"end\": 43008246}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 43008246, \"end\": 43008264}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 43008264, \"end\": 43008306}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 43008306, \"end\": 43008455}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 43008455, \"end\": 43008485}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 43008485, \"end\": 43008574}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 43008574, \"end\": 43008663}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 43008663, \"end\": 43008752}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 43008752, \"end\": 43008790}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 43008790, \"end\": 43008820}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 43008820, \"end\": 43008931}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 43008931, \"end\": 43009042}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 43009042, \"end\": 43009153}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 43009153, \"end\": 43009194}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 43009194, \"end\": 43009211}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 43009211, \"end\": 43009248}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 43009248, \"end\": 43009300}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 43009300, \"end\": 43009363}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 43009363, \"end\": 43009535}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 43009535, \"end\": 43009563}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 43009563, \"end\": 43009591}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 43009591, \"end\": 43009596}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 43009596, \"end\": 43009684}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 43009684, \"end\": 43009747}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 43009747, \"end\": 43009821}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 43009821, \"end\": 43009910}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 43009910, \"end\": 43010021}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 43010021, \"end\": 43010063}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 43010063, \"end\": 43010103}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 43010103, \"end\": 43010162}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 43010162, \"end\": 43010242}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 43010242, \"end\": 43010279}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 43010279, \"end\": 43010385}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 43010385, \"end\": 43010425}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 43010425, \"end\": 43010505}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 43010505, \"end\": 43010522}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 43010522, \"end\": 43010631}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 43010631, \"end\": 43010744}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 43010744, \"end\": 43010892}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 43010892, \"end\": 43010981}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 43010981, \"end\": 43011092}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 43011092, \"end\": 43011100}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 43011100, \"end\": 43011128}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 43011128, \"end\": 43011157}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 43011157, \"end\": 43011259}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 43011259, \"end\": 43011311}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 43011311, \"end\": 43011366}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 43011366, \"end\": 43011429}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 43011429, \"end\": 43011697}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 43011697, \"end\": 43011773}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 43011773, \"end\": 43011884}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 43011884, \"end\": 43011928}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 43011928, \"end\": 43019478, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 43019478, \"end\": 43026496}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 43026496, \"end\": 43034157, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 43034157, \"end\": 43040963, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 43040963, \"end\": 43051779, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 43051779, \"end\": 43057771, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 43057771, \"end\": 43063934, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 43063934, \"end\": 43079278, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 43079278, \"end\": 43094750, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 43094750, \"end\": 43106990, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 43106990, \"end\": 43122356, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 43122356, \"end\": 43154954, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 43154954, \"end\": 43171542}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 43171542, \"end\": 43175464}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 43175464, \"end\": 43178431}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 43178431, \"end\": 43179848}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 43179848, \"end\": 43187668}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 43187668, \"end\": 43193742, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 43193742, \"end\": 43206583, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 43206583, \"end\": 43214244, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 43214244, \"end\": 43236720, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 43236720, \"end\": 43257075, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/ARM3A0.png\", \"start\": 43257075, \"end\": 43257825}, {\"filename\": \"/edge_defs/sprites/ARM3B0.png\", \"start\": 43257825, \"end\": 43258503}, {\"filename\": \"/edge_defs/sprites/ARM4A0.png\", \"start\": 43258503, \"end\": 43259297}, {\"filename\": \"/edge_defs/sprites/ARM4B0.png\", \"start\": 43259297, \"end\": 43259998}, {\"filename\": \"/edge_defs/sprites/ARM5A0.png\", \"start\": 43259998, \"end\": 43260501}, {\"filename\": \"/edge_defs/sprites/ARM5B0.png\", \"start\": 43260501, \"end\": 43261016}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 43261016, \"end\": 43262232}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 43262232, \"end\": 43263453}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 43263453, \"end\": 43264663}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 43264663, \"end\": 43265864}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 43265864, \"end\": 43267145}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 43267145, \"end\": 43268488}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 43268488, \"end\": 43269892}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 43269892, \"end\": 43271237}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 43271237, \"end\": 43272544}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 43272544, \"end\": 43273811}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 43273811, \"end\": 43275048}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 43275048, \"end\": 43275142}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 43275142, \"end\": 43275356}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 43275356, \"end\": 43275660}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 43275660, \"end\": 43276028}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 43276028, \"end\": 43276423}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 43276423, \"end\": 43276859}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 43276859, \"end\": 43277329}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 43277329, \"end\": 43277761}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 43277761, \"end\": 43278124}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 43278124, \"end\": 43278940}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 43278940, \"end\": 43279758}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 43279758, \"end\": 43280576}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 43280576, \"end\": 43281874}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 43281874, \"end\": 43283257}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 43283257, \"end\": 43284611}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 43284611, \"end\": 43285911}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 43285911, \"end\": 43287180}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 43287180, \"end\": 43288403}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 43288403, \"end\": 43289613}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 43289613, \"end\": 43290825}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 43290825, \"end\": 43292016}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 43292016, \"end\": 43293201}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 43293201, \"end\": 43294452}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 43294452, \"end\": 43295693}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 43295693, \"end\": 43296942}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 43296942, \"end\": 43298164}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 43298164, \"end\": 43298768}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 43298768, \"end\": 43299372}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 43299372, \"end\": 43300295}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 43300295, \"end\": 43301511}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 43301511, \"end\": 43302906}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 43302906, \"end\": 43304035}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 43304035, \"end\": 43304837}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 43304837, \"end\": 43305785}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 43305785, \"end\": 43307013}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 43307013, \"end\": 43308399}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 43308399, \"end\": 43309537}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 43309537, \"end\": 43310334}, {\"filename\": \"/edge_defs/sprites/PLS1A0.lmp\", \"start\": 43310334, \"end\": 43310719}, {\"filename\": \"/edge_defs/sprites/PLS1B0.lmp\", \"start\": 43310719, \"end\": 43311118}, {\"filename\": \"/edge_defs/sprites/PLS1C0.lmp\", \"start\": 43311118, \"end\": 43311503}, {\"filename\": \"/edge_defs/sprites/PLS1D0.lmp\", \"start\": 43311503, \"end\": 43311902}, {\"filename\": \"/edge_defs/sprites/PLS1E0.lmp\", \"start\": 43311902, \"end\": 43314260}, {\"filename\": \"/edge_defs/sprites/PLS1F0.lmp\", \"start\": 43314260, \"end\": 43316618}, {\"filename\": \"/edge_defs/sprites/PLS1G0.lmp\", \"start\": 43316618, \"end\": 43318845}, {\"filename\": \"/edge_defs/sprites/PLS2A0.lmp\", \"start\": 43318845, \"end\": 43319061}, {\"filename\": \"/edge_defs/sprites/PLS2B0.lmp\", \"start\": 43319061, \"end\": 43319304}, {\"filename\": \"/edge_defs/sprites/PLS2C0.lmp\", \"start\": 43319304, \"end\": 43319516}, {\"filename\": \"/edge_defs/sprites/PLS2D0.lmp\", \"start\": 43319516, \"end\": 43319906}, {\"filename\": \"/edge_defs/sprites/PLS2E0.lmp\", \"start\": 43319906, \"end\": 43320600}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 43320600, \"end\": 43321472}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 43321472, \"end\": 43322344}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 43322344, \"end\": 43322473}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 43322473, \"end\": 43323689}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 43323689, \"end\": 43324907}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 43324907, \"end\": 43326103}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 43326103, \"end\": 43327290}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 43327290, \"end\": 43328541}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 43328541, \"end\": 43329782}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 43329782, \"end\": 43331031}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 43331031, \"end\": 43332253}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 43332253, \"end\": 43333454}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 43333454, \"end\": 43334659}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 43334659, \"end\": 43335846}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 43335846, \"end\": 43337024}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 43337024, \"end\": 43338269}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 43338269, \"end\": 43339505}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 43339505, \"end\": 43340750}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 43340750, \"end\": 43341966}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 43341966, \"end\": 43343183}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 43343183, \"end\": 43344403}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 43344403, \"end\": 43345614}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 43345614, \"end\": 43346815}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 43346815, \"end\": 43348095}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 43348095, \"end\": 43349446}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 43349446, \"end\": 43350853}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 43350853, \"end\": 43352205}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 43352205, \"end\": 43353516}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 43353516, \"end\": 43354784}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 43354784, \"end\": 43356021}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 43356021, \"end\": 43357146}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 43357146, \"end\": 43357488}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 43357488, \"end\": 43358768}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 43358768, \"end\": 43360321}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 43360321, \"end\": 43361952}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 43361952, \"end\": 43363485}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 43363485, \"end\": 43364671}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 43364671, \"end\": 43366187}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 43366187, \"end\": 43367780}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 43367780, \"end\": 43369298}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 43369298, \"end\": 43370528}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 43370528, \"end\": 43372048}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 43372048, \"end\": 43373655}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 43373655, \"end\": 43375188}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 43375188, \"end\": 43376398}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 43376398, \"end\": 43377896}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 43377896, \"end\": 43379488}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 43379488, \"end\": 43381002}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 43381002, \"end\": 43382299}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 43382299, \"end\": 43383805}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 43383805, \"end\": 43385376}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 43385376, \"end\": 43386907}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 43386907, \"end\": 43388244}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 43388244, \"end\": 43389764}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 43389764, \"end\": 43391300}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 43391300, \"end\": 43392789}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 43392789, \"end\": 43394100}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 43394100, \"end\": 43395618}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 43395618, \"end\": 43397206}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 43397206, \"end\": 43398731}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 43398731, \"end\": 43400057}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 43400057, \"end\": 43401599}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 43401599, \"end\": 43403172}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 43403172, \"end\": 43404675}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 43404675, \"end\": 43406037}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 43406037, \"end\": 43407554}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 43407554, \"end\": 43409102}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 43409102, \"end\": 43410700}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 43410700, \"end\": 43412138}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 43412138, \"end\": 43413688}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 43413688, \"end\": 43415242}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 43415242, \"end\": 43416801}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 43416801, \"end\": 43418198}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 43418198, \"end\": 43419769}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 43419769, \"end\": 43421371}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 43421371, \"end\": 43422937}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 43422937, \"end\": 43424340}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 43424340, \"end\": 43425857}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 43425857, \"end\": 43427453}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 43427453, \"end\": 43429061}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 43429061, \"end\": 43430450}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 43430450, \"end\": 43432038}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 43432038, \"end\": 43433682}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 43433682, \"end\": 43435202}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 43435202, \"end\": 43436552}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 43436552, \"end\": 43438073}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 43438073, \"end\": 43439695}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 43439695, \"end\": 43441265}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 43441265, \"end\": 43442575}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 43442575, \"end\": 43444106}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 43444106, \"end\": 43445698}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 43445698, \"end\": 43447181}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 43447181, \"end\": 43448475}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 43448475, \"end\": 43449942}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 43449942, \"end\": 43451520}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 43451520, \"end\": 43453089}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 43453089, \"end\": 43454779}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 43454779, \"end\": 43456561}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 43456561, \"end\": 43458307}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 43458307, \"end\": 43460027}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 43460027, \"end\": 43461754}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 43461754, \"end\": 43463493}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 43463493, \"end\": 43478293}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 43478293, \"end\": 43500411}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 43500411, \"end\": 43518764}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 43518764, \"end\": 43534255}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 43534255, \"end\": 43549549}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 43549549, \"end\": 43564416}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 43564416, \"end\": 43581417}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 43581417, \"end\": 43602125}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 43602125, \"end\": 43639605}, {\"filename\": \"/edge_defs/ttf/ECFONT02.ttf\", \"start\": 43639605, \"end\": 43828097}, {\"filename\": \"/edge_defs/ttf/ECFONT03.ttf\", \"start\": 43828097, \"end\": 43893185}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 43893185, \"end\": 43893189}, {\"filename\": \"/freedoom2.wad\", \"start\": 43893189, \"end\": 72680937}, {\"filename\": \"/overlays/.gitignore\", \"start\": 72680937, \"end\": 72680937}, {\"filename\": \"/overlays/Grill-1x.png\", \"start\": 72680937, \"end\": 72688273}, {\"filename\": \"/overlays/Grill-2x.png\", \"start\": 72688273, \"end\": 72695662}, {\"filename\": \"/overlays/Lines-1x.png\", \"start\": 72695662, \"end\": 72695826}, {\"filename\": \"/overlays/Lines-2x.png\", \"start\": 72695826, \"end\": 72696000}, {\"filename\": \"/overlays/Vertical-1x.png\", \"start\": 72696000, \"end\": 72703303}, {\"filename\": \"/overlays/Vertical-2x.png\", \"start\": 72703303, \"end\": 72710638}, {\"filename\": \"/soundfont/16-Bit Game Station.sf3\", \"start\": 72710638, \"end\": 74063330}, {\"filename\": \"/soundfont/ChipFreak.sf3\", \"start\": 74063330, \"end\": 74127004}, {\"filename\": \"/soundfont/ProtoSquare!.sf3\", \"start\": 74127004, \"end\": 74263930}], \"remote_package_size\": 51542620, \"package_uuid\": \"sha256-a7a1070dc915eb510348ab994d77d3e7848713fcef094724b5af5bf9d6de136e\"});\n\n  })();\n// end include: /home/dasho/Desktop/EDGE-classic/web/site/edge-classic-data.js\n\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar readAsync, readBinary;\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  try {\n    scriptDirectory = new URL('.', _scriptName).href; // includes trailing slash\n  } catch {\n    // Must be a `blob:` or `data:` URL (e.g. `blob:http://site.com/etc/etc`), we cannot\n    // infer anything from them.\n  }\n\n  {\n// include: web_or_worker_shell_read.js\nreadAsync = async (url) => {\n    var response = await fetch(url, { credentials: 'same-origin' });\n    if (response.ok) {\n      return response.arrayBuffer();\n    }\n    throw new Error(response.status + ' : ' + response.url);\n  };\n// end include: web_or_worker_shell_read.js\n  }\n} else\n{\n}\n\nvar out = console.log.bind(console);\nvar err = console.error.bind(console);\n\n// end include: shell.js\n\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\n\n// Wasm globals\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\n// don't define it at all in release modes.  This matches the behaviour of\n// MINIMAL_RUNTIME.\n// TODO(sbc): Make this the default even without STRICT enabled.\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    // This build was created without ASSERTIONS defined.  `assert()` should not\n    // ever be called in this configuration but in case there are callers in\n    // the wild leave this simple abort() implementation here for now.\n    abort(text);\n  }\n}\n\n/**\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\n * @noinline\n */\nvar isFileURI = (filename) => filename.startsWith('file://');\n\n// include: runtime_common.js\n// include: runtime_stack_check.js\n// end include: runtime_stack_check.js\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\n// include: runtime_debug.js\n// end include: runtime_debug.js\nvar readyPromiseResolve, readyPromiseReject;\n\n// Memory management\n\nvar wasmMemory;\n\nvar\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\n// BigInt64Array type is not correctly defined in closure\nvar\n/** not-@type {!BigInt64Array} */\n  HEAP64,\n/* BigUint64Array type is not correctly defined in closure\n/** not-@type {!BigUint64Array} */\n  HEAPU64;\n\nvar runtimeInitialized = false;\n\n\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  HEAP8 = new Int8Array(b);\n  HEAP16 = new Int16Array(b);\n  HEAPU8 = new Uint8Array(b);\n  HEAPU16 = new Uint16Array(b);\n  HEAP32 = new Int32Array(b);\n  HEAPU32 = new Uint32Array(b);\n  HEAPF32 = new Float32Array(b);\n  HEAPF64 = new Float64Array(b);\n  HEAP64 = new BigInt64Array(b);\n  HEAPU64 = new BigUint64Array(b);\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// end include: runtime_common.js\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  // Begin ATPRERUNS hooks\n  callRuntimeCallbacks(onPreRuns);\n  // End ATPRERUNS hooks\n}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n\n  // Begin ATINITS hooks\n  if (!Module['noFSInit'] && !FS.initialized) FS.init();\nTTY.init();\n  // End ATINITS hooks\n\n  wasmExports['__wasm_call_ctors']();\n\n  // Begin ATPOSTCTORS hooks\n  FS.ignorePermissions = false;\n  // End ATPOSTCTORS hooks\n}\n\nfunction preMain() {\n  // No ATMAINS hooks\n}\n\nfunction postRun() {\n   // PThreads reuse the runtime from the main thread.\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  // Begin ATPOSTRUNS hooks\n  callRuntimeCallbacks(onPostRuns);\n  // End ATPOSTRUNS hooks\n}\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n  if (runDependencies == 0) {\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  Module['onAbort']?.(what);\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n\n  what += '. Build with -sASSERTIONS for more info.';\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // definition for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  readyPromiseReject?.(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\nvar wasmBinaryFile;\n\nfunction findWasmBinary() {\n    return locateFile('edge-classic.wasm');\n}\n\nfunction getBinarySync(file) {\n  if (file == wasmBinaryFile && wasmBinary) {\n    return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n    return readBinary(file);\n  }\n  throw 'both async and sync fetching of the wasm failed';\n}\n\nasync function getWasmBinary(binaryFile) {\n  // If we don't have the binary yet, load it asynchronously using readAsync.\n  if (!wasmBinary) {\n    // Fetch the binary using readAsync\n    try {\n      var response = await readAsync(binaryFile);\n      return new Uint8Array(response);\n    } catch {\n      // Fall back to getBinarySync below;\n    }\n  }\n\n  // Otherwise, getBinarySync should be able to get it synchronously\n  return getBinarySync(binaryFile);\n}\n\nasync function instantiateArrayBuffer(binaryFile, imports) {\n  try {\n    var binary = await getWasmBinary(binaryFile);\n    var instance = await WebAssembly.instantiate(binary, imports);\n    return instance;\n  } catch (reason) {\n    err(`failed to asynchronously prepare wasm: ${reason}`);\n\n    abort(reason);\n  }\n}\n\nasync function instantiateAsync(binary, binaryFile, imports) {\n  if (!binary && typeof WebAssembly.instantiateStreaming == 'function'\n     ) {\n    try {\n      var response = fetch(binaryFile, { credentials: 'same-origin' });\n      var instantiationResult = await WebAssembly.instantiateStreaming(response, imports);\n      return instantiationResult;\n    } catch (reason) {\n      // We expect the most common failure cause to be a bad MIME type for the binary,\n      // in which case falling back to ArrayBuffer instantiation should work.\n      err(`wasm streaming compile failed: ${reason}`);\n      err('falling back to ArrayBuffer instantiation');\n      // fall back of instantiateArrayBuffer below\n    };\n  }\n  return instantiateArrayBuffer(binaryFile, imports);\n}\n\nfunction getWasmImports() {\n  // prepare imports\n  return {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  }\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nasync function createWasm() {\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    wasmExports = instance.exports;\n\n    wasmExports = Asyncify.instrumentWasmExports(wasmExports);\n\n    \n\n    wasmMemory = wasmExports['memory'];\n    \n    updateMemoryViews();\n\n    wasmTable = wasmExports['__indirect_function_table'];\n    \n\n    assignWasmExports(wasmExports);\n    removeRunDependency('wasm-instantiate');\n    return wasmExports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    return receiveInstance(result['instance']);\n  }\n\n  var info = getWasmImports();\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n    return new Promise((resolve, reject) => {\n        Module['instantiateWasm'](info, (mod, inst) => {\n          resolve(receiveInstance(mod, inst));\n        });\n    });\n  }\n\n  wasmBinaryFile ??= findWasmBinary();\n  var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info);\n  var exports = receiveInstantiationResult(result);\n  return exports;\n}\n\n// end include: preamble.js\n\n// Begin JS library code\n\n\n  class ExitStatus {\n      name = 'ExitStatus';\n      constructor(status) {\n        this.message = `Program terminated with exit(${status})`;\n        this.status = status;\n      }\n    }\n\n  var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    };\n  var onPostRuns = [];\n  var addOnPostRun = (cb) => onPostRuns.push(cb);\n\n  var onPreRuns = [];\n  var addOnPreRun = (cb) => onPreRuns.push(cb);\n\n\n  var dynCalls = {\n  };\n  var dynCallLegacy = (sig, ptr, args) => {\n      sig = sig.replace(/p/g, 'i')\n      var f = dynCalls[sig];\n      return f(ptr, ...args);\n    };\n  var dynCall = (sig, ptr, args = [], promising = false) => {\n      var rtn = dynCallLegacy(sig, ptr, args);\n  \n      function convert(rtn) {\n        return rtn;\n      }\n  \n      return convert(rtn);\n    };\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[ptr];\n      case 'i8': return HEAP8[ptr];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP64[((ptr)>>3)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort(`invalid type for getValue: ${type}`);\n    }\n  }\n\n  var noExitRuntime = true;\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[ptr] = value; break;\n      case 'i8': HEAP8[ptr] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': HEAP64[((ptr)>>3)] = BigInt(value); break;\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort(`invalid type for setValue: ${type}`);\n    }\n  }\n\n  var stackRestore = (val) => __emscripten_stack_restore(val);\n\n  var stackSave = () => _emscripten_stack_get_current();\n\n  var PATH = {\n  isAbs:(path) => path.charAt(0) === '/',\n  splitPath:(filename) => {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n  normalizeArray:(parts, allowAboveRoot) => {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n  normalize:(path) => {\n        var isAbsolute = PATH.isAbs(path),\n            trailingSlash = path.slice(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n  dirname:(path) => {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.slice(0, -1);\n        }\n        return root + dir;\n      },\n  basename:(path) => path && path.match(/([^\\/]+|\\/)\\/*$/)[1],\n  join:(...paths) => PATH.normalize(paths.join('/')),\n  join2:(l, r) => PATH.normalize(l + '/' + r),\n  };\n  \n  var initRandomFill = () => {\n  \n      return (view) => crypto.getRandomValues(view);\n    };\n  var randomFill = (view) => {\n      // Lazily init on the first invocation.\n      (randomFill = initRandomFill())(view);\n    };\n  \n  \n  \n  var PATH_FS = {\n  resolve:(...args) => {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = (i >= 0) ? args[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n      },\n  relative:(from, to) => {\n        from = PATH_FS.resolve(from).slice(1);\n        to = PATH_FS.resolve(to).slice(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n  };\n  \n  \n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder() : undefined;\n  \n  var findStringEnd = (heapOrArray, idx, maxBytesToRead, ignoreNul) => {\n      var maxIdx = idx + maxBytesToRead;\n      if (ignoreNul) return maxIdx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.\n      // As a tiny code save trick, compare idx against maxIdx using a negation,\n      // so that maxBytesToRead=undefined/NaN means Infinity.\n      while (heapOrArray[idx] && !(idx >= maxIdx)) ++idx;\n      return idx;\n    };\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number=} idx\n     * @param {number=} maxBytesToRead\n     * @param {boolean=} ignoreNul - If true, the function will not stop on a NUL character.\n     * @return {string}\n     */\n  var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead, ignoreNul) => {\n  \n      var endPtr = findStringEnd(heapOrArray, idx, maxBytesToRead, ignoreNul);\n  \n      // When using conditional TextDecoder, skip it for short strings as the overhead of the native call is not worth it.\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    };\n  \n  var FS_stdin_getChar_buffer = [];\n  \n  var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n  \n  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.codePointAt(i);\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n          // Gotcha: if codePoint is over 0xFFFF, it is represented as a surrogate pair in UTF-16.\n          // We need to manually skip over the second code unit for correct iteration.\n          i++;\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n  /** @type {function(string, boolean=, number=)} */\n  var intArrayFromString = (stringy, dontAddNull, length) => {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    };\n  var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (typeof window != 'undefined' &&\n          typeof window.prompt == 'function') {\n          // Browser.\n          result = window.prompt('Input: ');  // returns null on cancel\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else\n        {}\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n  var TTY = {\n  ttys:[],\n  init() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process.stdin.setEncoding('utf8');\n        // }\n      },\n  shutdown() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process.stdin.pause();\n        // }\n      },\n  register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n  stream_ops:{\n  open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n  close(stream) {\n          // flush any pending line data\n          stream.tty.ops.fsync(stream.tty);\n        },\n  fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n  read(stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset+i] = result;\n          }\n          if (bytesRead) {\n            stream.node.atime = Date.now();\n          }\n          return bytesRead;\n        },\n  write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.mtime = stream.node.ctime = Date.now();\n          }\n          return i;\n        },\n  },\n  default_tty_ops:{\n  get_char(tty) {\n          return FS_stdin_getChar();\n        },\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },\n  fsync(tty) {\n          if (tty.output?.length > 0) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n  ioctl_tcgets(tty) {\n          // typical setting\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,\n              0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            ]\n          };\n        },\n  ioctl_tcsets(tty, optional_actions, data) {\n          // currently just ignore\n          return 0;\n        },\n  ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n  },\n  default_tty1_ops:{\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n  fsync(tty) {\n          if (tty.output?.length > 0) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n  },\n  };\n  \n  \n  var mmapAlloc = (size) => {\n      abort();\n    };\n  var MEMFS = {\n  ops_table:null,\n  mount(mount) {\n        return MEMFS.createNode(null, '/', 16895, 0);\n      },\n  createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek\n            }\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync\n            }\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink\n            },\n            stream: {}\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: FS.chrdev_stream_ops\n          }\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null; \n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.atime = node.mtime = node.ctime = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n          parent.atime = parent.mtime = parent.ctime = node.atime;\n        }\n        return node;\n      },\n  getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },\n  expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n        // avoid overshooting the allocation cap by a very large margin.\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n      },\n  resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n        }\n      },\n  node_ops:{\n  getattr(node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.atime);\n          attr.mtime = new Date(node.mtime);\n          attr.ctime = new Date(node.ctime);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n  setattr(node, attr) {\n          for (const key of [\"mode\", \"atime\", \"mtime\", \"ctime\"]) {\n            if (attr[key] != null) {\n              node[key] = attr[key];\n            }\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n  lookup(parent, name) {\n          // This error may happen quite a bit. To avoid overhead we reuse it (and\n          // suffer a lack of stack info).\n          if (!MEMFS.doesNotExistError) {\n            MEMFS.doesNotExistError = new FS.ErrnoError(44);\n            /** @suppress {checkTypes} */\n            MEMFS.doesNotExistError.stack = '<generic error, no stack>';\n          }\n          throw MEMFS.doesNotExistError;\n        },\n  mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n  rename(old_node, new_dir, new_name) {\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {}\n          if (new_node) {\n            if (FS.isDir(old_node.mode)) {\n              // if we're overwriting a directory at new_name, make sure it's empty.\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n            FS.hashRemoveNode(new_node);\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          new_dir.contents[new_name] = old_node;\n          old_node.name = new_name;\n          new_dir.ctime = new_dir.mtime = old_node.parent.ctime = old_node.parent.mtime = Date.now();\n        },\n  unlink(parent, name) {\n          delete parent.contents[name];\n          parent.ctime = parent.mtime = Date.now();\n        },\n  rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.ctime = parent.mtime = Date.now();\n        },\n  readdir(node) {\n          return ['.', '..', ...Object.keys(node.contents)];\n        },\n  symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 0o777 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n  readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n  write(stream, buffer, offset, length, position, canOwn) {\n          // If the buffer is located in main memory (HEAP), and if\n          // memory can grow, we can't hold on to references of the\n          // memory buffer, as they may get invalidated. That means we\n          // need to do copy its contents.\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n  \n          if (!length) return 0;\n          var node = stream.node;\n          node.mtime = node.ctime = Date.now();\n  \n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n  \n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position+length);\n          if (node.contents.subarray && buffer.subarray) {\n            // Use typed array write which is available.\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\n            // We can't emulate MAP_SHARED when the file is not backed by the\n            // buffer we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            if (contents) {\n              // Try to avoid unnecessary slices.\n              if (position > 0 || position + length < contents.length) {\n                if (contents.subarray) {\n                  contents = contents.subarray(position, position + length);\n                } else {\n                  contents = Array.prototype.slice.call(contents, position, position + length);\n                }\n              }\n              HEAP8.set(contents, ptr);\n            }\n          }\n          return { ptr, allocated };\n        },\n  msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        },\n  },\n  };\n  \n  var asyncLoad = async (url) => {\n      var arrayBuffer = await readAsync(url);\n      return new Uint8Array(arrayBuffer);\n    };\n  \n  \n  var FS_createDataFile = (...args) => FS.createDataFile(...args);\n  \n  var getUniqueRunDependency = (id) => {\n      return id;\n    };\n  \n  var preloadPlugins = [];\n  var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      // Ensure plugins are ready.\n      if (typeof Browser != 'undefined') Browser.init();\n  \n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n  var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\n      // TODO we should allow people to just pass in a complete filename instead\n      // of parent and name being that we just join them anyways\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n          onerror?.();\n          removeRunDependency(dep);\n        })) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url).then(processData, onerror);\n      } else {\n        processData(url);\n      }\n    };\n  \n  var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        'r': 0,\n        'r+': 2,\n        'w': 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        'a': 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n  \n  var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n  \n  \n  \n  \n  var IDBFS = {\n  dbs:{\n  },\n  indexedDB:() => {\n        return indexedDB;\n      },\n  DB_VERSION:21,\n  DB_STORE_NAME:\"FILE_DATA\",\n  queuePersist:(mount) => {\n        function onPersistComplete() {\n          if (mount.idbPersistState === 'again') startPersist(); // If a new sync request has appeared in between, kick off a new sync\n          else mount.idbPersistState = 0; // Otherwise reset sync state back to idle to wait for a new sync later\n        }\n        function startPersist() {\n          mount.idbPersistState = 'idb'; // Mark that we are currently running a sync operation\n          IDBFS.syncfs(mount, /*populate:*/false, onPersistComplete);\n        }\n  \n        if (!mount.idbPersistState) {\n          // Programs typically write/copy/move multiple files in the in-memory\n          // filesystem within a single app frame, so when a filesystem sync\n          // command is triggered, do not start it immediately, but only after\n          // the current frame is finished. This way all the modified files\n          // inside the main loop tick will be batched up to the same sync.\n          mount.idbPersistState = setTimeout(startPersist, 0);\n        } else if (mount.idbPersistState === 'idb') {\n          // There is an active IndexedDB sync operation in-flight, but we now\n          // have accumulated more files to sync. We should therefore queue up\n          // a new sync after the current one finishes so that all writes\n          // will be properly persisted.\n          mount.idbPersistState = 'again';\n        }\n      },\n  mount:(mount) => {\n        // reuse core MEMFS functionality\n        var mnt = MEMFS.mount(mount);\n        // If the automatic IDBFS persistence option has been selected, then automatically persist\n        // all modifications to the filesystem as they occur.\n        if (mount?.opts?.autoPersist) {\n          mnt.idbPersistState = 0; // IndexedDB sync starts in idle state\n          var memfs_node_ops = mnt.node_ops;\n          mnt.node_ops = {...mnt.node_ops}; // Clone node_ops to inject write tracking\n          mnt.node_ops.mknod = (parent, name, mode, dev) => {\n            var node = memfs_node_ops.mknod(parent, name, mode, dev);\n            // Propagate injected node_ops to the newly created child node\n            node.node_ops = mnt.node_ops;\n            // Remember for each IDBFS node which IDBFS mount point they came from so we know which mount to persist on modification.\n            node.idbfs_mount = mnt.mount;\n            // Remember original MEMFS stream_ops for this node\n            node.memfs_stream_ops = node.stream_ops;\n            // Clone stream_ops to inject write tracking\n            node.stream_ops = {...node.stream_ops};\n  \n            // Track all file writes\n            node.stream_ops.write = (stream, buffer, offset, length, position, canOwn) => {\n              // This file has been modified, we must persist IndexedDB when this file closes\n              stream.node.isModified = true;\n              return node.memfs_stream_ops.write(stream, buffer, offset, length, position, canOwn);\n            };\n  \n            // Persist IndexedDB on file close\n            node.stream_ops.close = (stream) => {\n              var n = stream.node;\n              if (n.isModified) {\n                IDBFS.queuePersist(n.idbfs_mount);\n                n.isModified = false;\n              }\n              if (n.memfs_stream_ops.close) return n.memfs_stream_ops.close(stream);\n            };\n  \n            return node;\n          };\n          // Also kick off persisting the filesystem on other operations that modify the filesystem.\n          mnt.node_ops.mkdir   = (...args) => (IDBFS.queuePersist(mnt.mount), memfs_node_ops.mkdir(...args));\n          mnt.node_ops.rmdir   = (...args) => (IDBFS.queuePersist(mnt.mount), memfs_node_ops.rmdir(...args));\n          mnt.node_ops.symlink = (...args) => (IDBFS.queuePersist(mnt.mount), memfs_node_ops.symlink(...args));\n          mnt.node_ops.unlink  = (...args) => (IDBFS.queuePersist(mnt.mount), memfs_node_ops.unlink(...args));\n          mnt.node_ops.rename  = (...args) => (IDBFS.queuePersist(mnt.mount), memfs_node_ops.rename(...args));\n        }\n        return mnt;\n      },\n  syncfs:(mount, populate, callback) => {\n        IDBFS.getLocalSet(mount, (err, local) => {\n          if (err) return callback(err);\n  \n          IDBFS.getRemoteSet(mount, (err, remote) => {\n            if (err) return callback(err);\n  \n            var src = populate ? remote : local;\n            var dst = populate ? local : remote;\n  \n            IDBFS.reconcile(src, dst, callback);\n          });\n        });\n      },\n  quit:() => {\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\n        IDBFS.dbs = {};\n      },\n  getDB:(name, callback) => {\n        // check the cache first\n        var db = IDBFS.dbs[name];\n        if (db) {\n          return callback(null, db);\n        }\n  \n        var req;\n        try {\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\n        } catch (e) {\n          return callback(e);\n        }\n        if (!req) {\n          return callback(\"Unable to connect to IndexedDB\");\n        }\n        req.onupgradeneeded = (e) => {\n          var db = /** @type {IDBDatabase} */ (e.target.result);\n          var transaction = e.target.transaction;\n  \n          var fileStore;\n  \n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\n          } else {\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\n          }\n  \n          if (!fileStore.indexNames.contains('timestamp')) {\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\n          }\n        };\n        req.onsuccess = () => {\n          db = /** @type {IDBDatabase} */ (req.result);\n  \n          // add to the cache\n          IDBFS.dbs[name] = db;\n          callback(null, db);\n        };\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  getLocalSet:(mount, callback) => {\n        var entries = {};\n  \n        function isRealDir(p) {\n          return p !== '.' && p !== '..';\n        };\n        function toAbsolute(root) {\n          return (p) => PATH.join2(root, p);\n        };\n  \n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\n  \n        while (check.length) {\n          var path = check.pop();\n          var stat;\n  \n          try {\n            stat = FS.stat(path);\n          } catch (e) {\n            return callback(e);\n          }\n  \n          if (FS.isDir(stat.mode)) {\n            check.push(...FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\n          }\n  \n          entries[path] = { 'timestamp': stat.mtime };\n        }\n  \n        return callback(null, { type: 'local', entries: entries });\n      },\n  getRemoteSet:(mount, callback) => {\n        var entries = {};\n  \n        IDBFS.getDB(mount.mountpoint, (err, db) => {\n          if (err) return callback(err);\n  \n          try {\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\n            transaction.onerror = (e) => {\n              callback(e.target.error);\n              e.preventDefault();\n            };\n  \n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n            var index = store.index('timestamp');\n  \n            index.openKeyCursor().onsuccess = (event) => {\n              var cursor = event.target.result;\n  \n              if (!cursor) {\n                return callback(null, { type: 'remote', db, entries });\n              }\n  \n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\n  \n              cursor.continue();\n            };\n          } catch (e) {\n            return callback(e);\n          }\n        });\n      },\n  loadLocalEntry:(path, callback) => {\n        var stat, node;\n  \n        try {\n          var lookup = FS.lookupPath(path);\n          node = lookup.node;\n          stat = FS.stat(path);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        if (FS.isDir(stat.mode)) {\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\n        } else if (FS.isFile(stat.mode)) {\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\n        } else {\n          return callback(new Error('node type not supported'));\n        }\n      },\n  storeLocalEntry:(path, entry, callback) => {\n        try {\n          if (FS.isDir(entry['mode'])) {\n            FS.mkdirTree(path, entry['mode']);\n          } else if (FS.isFile(entry['mode'])) {\n            FS.writeFile(path, entry['contents'], { canOwn: true });\n          } else {\n            return callback(new Error('node type not supported'));\n          }\n  \n          FS.chmod(path, entry['mode']);\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },\n  removeLocalEntry:(path, callback) => {\n        try {\n          var stat = FS.stat(path);\n  \n          if (FS.isDir(stat.mode)) {\n            FS.rmdir(path);\n          } else if (FS.isFile(stat.mode)) {\n            FS.unlink(path);\n          }\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },\n  loadRemoteEntry:(store, path, callback) => {\n        var req = store.get(path);\n        req.onsuccess = (event) => callback(null, event.target.result);\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  storeRemoteEntry:(store, path, entry, callback) => {\n        try {\n          var req = store.put(entry, path);\n        } catch (e) {\n          callback(e);\n          return;\n        }\n        req.onsuccess = (event) => callback();\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  removeRemoteEntry:(store, path, callback) => {\n        var req = store.delete(path);\n        req.onsuccess = (event) => callback();\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  reconcile:(src, dst, callback) => {\n        var total = 0;\n  \n        var create = [];\n        Object.keys(src.entries).forEach((key) => {\n          var e = src.entries[key];\n          var e2 = dst.entries[key];\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\n            create.push(key);\n            total++;\n          }\n        });\n  \n        var remove = [];\n        Object.keys(dst.entries).forEach((key) => {\n          if (!src.entries[key]) {\n            remove.push(key);\n            total++;\n          }\n        });\n  \n        if (!total) {\n          return callback(null);\n        }\n  \n        var errored = false;\n        var db = src.type === 'remote' ? src.db : dst.db;\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n  \n        function done(err) {\n          if (err && !errored) {\n            errored = true;\n            return callback(err);\n          }\n        };\n  \n        // transaction may abort if (for example) there is a QuotaExceededError\n        transaction.onerror = transaction.onabort = (e) => {\n          done(e.target.error);\n          e.preventDefault();\n        };\n  \n        transaction.oncomplete = (e) => {\n          if (!errored) {\n            callback(null);\n          }\n        };\n  \n        // sort paths in ascending order so directory entries are created\n        // before the files inside them\n        create.sort().forEach((path) => {\n          if (dst.type === 'local') {\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\n              if (err) return done(err);\n              IDBFS.storeLocalEntry(path, entry, done);\n            });\n          } else {\n            IDBFS.loadLocalEntry(path, (err, entry) => {\n              if (err) return done(err);\n              IDBFS.storeRemoteEntry(store, path, entry, done);\n            });\n          }\n        });\n  \n        // sort paths in descending order so files are deleted before their\n        // parent directories\n        remove.sort().reverse().forEach((path) => {\n          if (dst.type === 'local') {\n            IDBFS.removeLocalEntry(path, done);\n          } else {\n            IDBFS.removeRemoteEntry(store, path, done);\n          }\n        });\n      },\n  };\n  \n  \n  \n  var LZ4 = {\n  DIR_MODE:16895,\n  FILE_MODE:33279,\n  CHUNK_SIZE:-1,\n  codec:null,\n  init() {\n        if (LZ4.codec) return;\n        LZ4.codec = (() => {\n          /*\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\n  \n  based off of node-lz4, https://github.com/pierrec/node-lz4\n  \n  ====\n  Copyright (c) 2012 Pierre Curto\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n  ====\n  \n  changes have the same license\n  */\n  \n  var MiniLZ4 = (function() {\n  \n  var exports = {};\n  \n  /**\n   * Decode a block. Assumptions: input contains all sequences of a \n   * chunk, output is large enough to receive the decoded data.\n   * If the output buffer is too small, an error will be thrown.\n   * If the returned value is negative, an error occured at the returned offset.\n   *\n   * @param {ArrayBufferView} input input data\n   * @param {ArrayBufferView} output output data\n   * @param {number=} sIdx\n   * @param {number=} eIdx\n   * @return {number} number of decoded bytes\n   * @private\n   */\n  exports.uncompress = function (input, output, sIdx, eIdx) {\n  \tsIdx = sIdx || 0\n  \teIdx = eIdx || (input.length - sIdx)\n  \t// Process each sequence in the incoming data\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\n  \t\tvar token = input[i++]\n  \n  \t\t// Literals\n  \t\tvar literals_length = (token >> 4)\n  \t\tif (literals_length > 0) {\n  \t\t\t// length of literals\n  \t\t\tvar l = literals_length + 240\n  \t\t\twhile (l === 255) {\n  \t\t\t\tl = input[i++]\n  \t\t\t\tliterals_length += l\n  \t\t\t}\n  \n  \t\t\t// Copy the literals\n  \t\t\tvar end = i + literals_length\n  \t\t\twhile (i < end) output[j++] = input[i++]\n  \n  \t\t\t// End of buffer?\n  \t\t\tif (i === n) return j\n  \t\t}\n  \n  \t\t// Match copy\n  \t\t// 2 bytes offset (little endian)\n  \t\tvar offset = input[i++] | (input[i++] << 8)\n  \n  \t\t// XXX 0 is an invalid offset value\n  \t\tif (offset === 0) return j\n  \t\tif (offset > j) return -(i-2)\n  \n  \t\t// length of match copy\n  \t\tvar match_length = (token & 0xf)\n  \t\tvar l = match_length + 240\n  \t\twhile (l === 255) {\n  \t\t\tl = input[i++]\n  \t\t\tmatch_length += l\n  \t\t}\n  \n  \t\t// Copy the match\n  \t\tvar pos = j - offset // position of the match copy in the current output\n  \t\tvar end = j + match_length + 4 // minmatch = 4\n  \t\twhile (j < end) output[j++] = output[pos++]\n  \t}\n  \n  \treturn j\n  }\n  \n  var\n  \tmaxInputSize\t= 0x7E000000\n  ,\tminMatch\t\t= 4\n  // uint32() optimization\n  ,\thashLog\t\t\t= 16\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\n  ,\thashSize\t\t= 1 << hashLog\n  \n  ,\tcopyLength\t\t= 8\n  ,\tlastLiterals\t= 5\n  ,\tmfLimit\t\t\t= copyLength + minMatch\n  ,\tskipStrength\t= 6\n  \n  ,\tmlBits  \t\t= 4\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\n  ,\trunBits \t\t= 8 - mlBits\n  ,\trunMask \t\t= (1 << runBits) - 1\n  \n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\n  \n  assert(hashShift === 16);\n  var hashTable = new Int16Array(1<<16);\n  var empty = new Int16Array(hashTable.length);\n  \n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\n  exports.compressBound = function (isize) {\n  \treturn isize > maxInputSize\n  \t\t? 0\n  \t\t: (isize + (isize/255) + 16) | 0\n  }\n  \n  /** @param {number=} sIdx\n  \t@param {number=} eIdx */\n  exports.compress = function (src, dst, sIdx, eIdx) {\n  \thashTable.set(empty);\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\n  }\n  \n  function compressBlock (src, dst, pos, sIdx, eIdx) {\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\n  \tvar dpos = sIdx\n  \tvar dlen = eIdx - sIdx\n  \tvar anchor = 0\n  \n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\n  \n  \t// Minimum of input bytes for compression (LZ4 specs)\n  \tif (src.length > mfLimit) {\n  \t\tvar n = exports.compressBound(src.length)\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\n  \n  \t\tvar \n  \t\t\tstep  = 1\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\n  \t\t// last 5 bytes must be literals\n  \t\t,\tsrcLength = src.length - mfLimit\n  \n  \t\twhile (pos + minMatch < srcLength) {\n  \t\t\t// Find a match\n  \t\t\t// min match of 4 bytes aka sequence\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\n  \t\t\t// compute hash for the current sequence\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\n  \t\t\t\t\t\t\t.multiply(hasher)\n  \t\t\t\t\t\t\t.shiftr(hashShift)\n  \t\t\t\t\t\t\t.toNumber() */\n  \t\t\t// get the position of the sequence matching the hash\n  \t\t\t// NB. since 2 different sequences may have the same hash\n  \t\t\t// it is double-checked below\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\n  \t\t\tvar ref = hashTable[hash] - 1\n  \t\t\t// save position of current sequence in hash table\n  \t\t\thashTable[hash] = pos + 1\n  \n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\n  \t\t\tif ( ref < 0 ||\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\n  \t\t\t\t(\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\n  \t\t\t\t)\n  \t\t\t) {\n  \t\t\t\t// increase step if nothing found within limit\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\n  \t\t\t\tpos += step\n  \t\t\t\tcontinue\n  \t\t\t}\n  \n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\n  \n  \t\t\t// got a match\n  \t\t\tvar literals_length = pos - anchor\n  \t\t\tvar offset = pos - ref\n  \n  \t\t\t// minMatch already verified\n  \t\t\tpos += minMatch\n  \t\t\tref += minMatch\n  \n  \t\t\t// move to the end of the match (>=minMatch)\n  \t\t\tvar match_length = pos\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\n  \t\t\t\tpos++\n  \t\t\t\tref++\n  \t\t\t}\n  \n  \t\t\t// match length\n  \t\t\tmatch_length = pos - match_length\n  \n  \t\t\t// token\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\n  \n  \t\t\t// encode literals length\n  \t\t\tif (literals_length >= runMask) {\n  \t\t\t\t// add match length to the token\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\n  \t\t\t\t\tdst[dpos++] = 255\n  \t\t\t\t}\n  \t\t\t\tdst[dpos++] = len\n  \t\t\t} else {\n  \t\t\t\t// add match length to the token\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\n  \t\t\t}\n  \n  \t\t\t// write literals\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\n  \t\t\t\tdst[dpos++] = src[anchor+i]\n  \t\t\t}\n  \n  \t\t\t// encode offset\n  \t\t\tdst[dpos++] = offset\n  \t\t\tdst[dpos++] = (offset >> 8)\n  \n  \t\t\t// encode match length\n  \t\t\tif (match_length >= mlMask) {\n  \t\t\t\tmatch_length -= mlMask\n  \t\t\t\twhile (match_length >= 255) {\n  \t\t\t\t\tmatch_length -= 255\n  \t\t\t\t\tdst[dpos++] = 255\n  \t\t\t\t}\n  \n  \t\t\t\tdst[dpos++] = match_length\n  \t\t\t}\n  \n  \t\t\tanchor = pos\n  \t\t}\n  \t}\n  \n  \t// cannot compress input\n  \tif (anchor == 0) return 0\n  \n  \t// Write last literals\n  \t// encode literals length\n  \tliterals_length = src.length - anchor\n  \tif (literals_length >= runMask) {\n  \t\t// add match length to the token\n  \t\tdst[dpos++] = (runMask << mlBits)\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\n  \t\t\tdst[dpos++] = 255\n  \t\t}\n  \t\tdst[dpos++] = ln\n  \t} else {\n  \t\t// add match length to the token\n  \t\tdst[dpos++] = (literals_length << mlBits)\n  \t}\n  \n  \t// write literals\n  \tpos = anchor\n  \twhile (pos < src.length) {\n  \t\tdst[dpos++] = src[pos++]\n  \t}\n  \n  \treturn dpos\n  }\n  \n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\n  \n  exports.compressPackage = function(data, verify) {\n    if (verify) {\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\n    }\n    // compress the data in chunks\n    assert(data instanceof ArrayBuffer);\n    data = new Uint8Array(data);\n    console.log('compressing package of size ' + data.length);\n    var compressedChunks = [];\n    var successes = [];\n    var offset = 0;\n    var total = 0;\n    while (offset < data.length) {\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\n      //console.log('compress a chunk ' + [offset, total, data.length]);\n      offset += exports.CHUNK_SIZE;\n      var bound = exports.compressBound(chunk.length);\n      var compressed = new Uint8Array(bound);\n      var compressedSize = exports.compress(chunk, compressed);\n      if (compressedSize > 0) {\n        assert(compressedSize <= bound);\n        compressed = compressed.subarray(0, compressedSize);\n        compressedChunks.push(compressed);\n        total += compressedSize;\n        successes.push(1);\n        if (verify) {\n          var back = exports.uncompress(compressed, temp);\n          assert(back === chunk.length, [back, chunk.length]);\n          for (var i = 0; i < chunk.length; i++) {\n            assert(chunk[i] === temp[i]);\n          }\n        }\n      } else {\n        assert(compressedSize === 0);\n        // failure to compress :(\n        compressedChunks.push(chunk);\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\n        successes.push(0);\n      }\n    }\n    data = null; // XXX null out pack['data'] too?\n    var compressedData = {\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\n      'cachedOffset': total,\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\n      'cachedChunks': [null, null],\n      'offsets': [], // chunk# => start in compressed data\n      'sizes': [],\n      'successes': successes, // 1 if chunk is compressed\n    };\n    offset = 0;\n    for (var i = 0; i < compressedChunks.length; i++) {\n      compressedData['data'].set(compressedChunks[i], offset);\n      compressedData['offsets'][i] = offset;\n      compressedData['sizes'][i] = compressedChunks[i].length\n      offset += compressedChunks[i].length;\n    }\n    console.log('compressed package into ' + [compressedData['data'].length]);\n    assert(offset === total);\n    return compressedData;\n  };\n  \n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\n  \n  return exports;\n  \n  })();\n  \n  if (typeof module != 'undefined') {\n    module.exports = MiniLZ4;\n  }\n  ;\n          return MiniLZ4;\n        })();\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\n      },\n  loadPackage(pack, preloadPlugin) {\n        LZ4.init();\n        var compressedData = pack['compressedData'] || LZ4.codec.compressPackage(pack['data']);\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\n          compressedData['cachedIndexes'][i] = -1;\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\n        }\n        pack['metadata'].files.forEach((file) => {\n          var dir = PATH.dirname(file.filename);\n          var name = PATH.basename(file.filename);\n          FS.createPath('', dir, true, true);\n          var parent = FS.analyzePath(dir).object;\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\n            compressedData,\n            start: file.start,\n            end: file.end,\n          });\n        });\n        // Preload files if necessary. This code is largely similar to\n        // createPreloadedFile in library_fs.js. However, a main difference here\n        // is that we only decompress the file if it can be preloaded.\n        // Abstracting out the common parts seems to be more effort than it is\n        // worth.\n        if (preloadPlugin) {\n          Browser.init();\n          pack['metadata'].files.forEach((file) => {\n            var handled = false;\n            var fullname = file.filename;\n            preloadPlugins.forEach((plugin) => {\n              if (handled) return;\n              if (plugin['canHandle'](fullname)) {\n                var dep = getUniqueRunDependency('fp ' + fullname);\n                addRunDependency(dep);\n                var finish = () => removeRunDependency(dep);\n                var byteArray = FS.readFile(fullname);\n                plugin['handle'](byteArray, fullname, finish, finish);\n                handled = true;\n              }\n            });\n          });\n        }\n      },\n  createNode(parent, name, mode, dev, contents, mtime) {\n        var node = FS.createNode(parent, name, mode);\n        node.mode = mode;\n        node.node_ops = LZ4.node_ops;\n        node.stream_ops = LZ4.stream_ops;\n        this.atime = this.mtime = this.ctime = (mtime || new Date).getTime();\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\n        if (mode === LZ4.FILE_MODE) {\n          node.size = contents.end - contents.start;\n          node.contents = contents;\n        } else {\n          node.size = 4096;\n          node.contents = {};\n        }\n        if (parent) {\n          parent.contents[name] = node;\n        }\n        return node;\n      },\n  node_ops:{\n  getattr(node) {\n          return {\n            dev: 1,\n            ino: node.id,\n            mode: node.mode,\n            nlink: 1,\n            uid: 0,\n            gid: 0,\n            rdev: 0,\n            size: node.size,\n            atime: new Date(node.atime),\n            mtime: new Date(node.mtime),\n            ctime: new Date(node.ctime),\n            blksize: 4096,\n            blocks: Math.ceil(node.size / 4096),\n          };\n        },\n  setattr(node, attr) {\n          for (const key of ['mode', 'atime', 'mtime', 'ctime']) {\n            if (attr[key]) {\n              node[key] = attr[key];\n            }\n          }\n        },\n  lookup(parent, name) {\n          throw new FS.ErrnoError(44);\n        },\n  mknod(parent, name, mode, dev) {\n          throw new FS.ErrnoError(63);\n        },\n  rename(oldNode, newDir, newName) {\n          throw new FS.ErrnoError(63);\n        },\n  unlink(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n  rmdir(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n  readdir(node) {\n          throw new FS.ErrnoError(63);\n        },\n  symlink(parent, newName, oldPath) {\n          throw new FS.ErrnoError(63);\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          //out('LZ4 read ' + [offset, length, position]);\n          length = Math.min(length, stream.node.size - position);\n          if (length <= 0) return 0;\n          var contents = stream.node.contents;\n          var compressedData = contents.compressedData;\n          var written = 0;\n          while (written < length) {\n            var start = contents.start + position + written; // start index in uncompressed data\n            var desired = length - written;\n            //out('current read: ' + ['start', start, 'desired', desired]);\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\n            var compressedStart = compressedData['offsets'][chunkIndex];\n            var compressedSize = compressedData['sizes'][chunkIndex];\n            var currChunk;\n            if (compressedData['successes'][chunkIndex]) {\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\n              if (found >= 0) {\n                currChunk = compressedData['cachedChunks'][found];\n              } else {\n                // decompress the chunk\n                compressedData['cachedIndexes'].pop();\n                compressedData['cachedIndexes'].unshift(chunkIndex);\n                currChunk = compressedData['cachedChunks'].pop();\n                compressedData['cachedChunks'].unshift(currChunk);\n                if (compressedData['debug']) {\n                  out('decompressing chunk ' + chunkIndex);\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\n                }\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\n                //var t = Date.now();\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\n                //out('decompress time: ' + (Date.now() - t));\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\n              }\n            } else {\n              // uncompressed\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\n            }\n            var startInChunk = start % LZ4.CHUNK_SIZE;\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\n            var currWritten = endInChunk - startInChunk;\n            written += currWritten;\n          }\n          return written;\n        },\n  write(stream, buffer, offset, length, position) {\n          throw new FS.ErrnoError(29);\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.size;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  },\n  };\n  var FS = {\n  root:null,\n  mounts:[],\n  devices:{\n  },\n  streams:[],\n  nextInode:1,\n  nameTable:null,\n  currentPath:\"/\",\n  initialized:false,\n  ignorePermissions:true,\n  filesystems:null,\n  syncFSRequests:0,\n  readFiles:{\n  },\n  ErrnoError:class {\n        name = 'ErrnoError';\n        // We set the `name` property to be able to identify `FS.ErrnoError`\n        // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\n        // - when using PROXYFS, an error can come from an underlying FS\n        // as different FS objects have their own FS.ErrnoError each,\n        // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\n        // we'll use the reliable test `err.name == \"ErrnoError\"` instead\n        constructor(errno) {\n          this.errno = errno;\n        }\n      },\n  FSStream:class {\n        shared = {};\n        get object() {\n          return this.node;\n        }\n        set object(val) {\n          this.node = val;\n        }\n        get isRead() {\n          return (this.flags & 2097155) !== 1;\n        }\n        get isWrite() {\n          return (this.flags & 2097155) !== 0;\n        }\n        get isAppend() {\n          return (this.flags & 1024);\n        }\n        get flags() {\n          return this.shared.flags;\n        }\n        set flags(val) {\n          this.shared.flags = val;\n        }\n        get position() {\n          return this.shared.position;\n        }\n        set position(val) {\n          this.shared.position = val;\n        }\n      },\n  FSNode:class {\n        node_ops = {};\n        stream_ops = {};\n        readMode = 292 | 73;\n        writeMode = 146;\n        mounted = null;\n        constructor(parent, name, mode, rdev) {\n          if (!parent) {\n            parent = this;  // root node sets parent to itself\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.id = FS.nextInode++;\n          this.name = name;\n          this.mode = mode;\n          this.rdev = rdev;\n          this.atime = this.mtime = this.ctime = Date.now();\n        }\n        get read() {\n          return (this.mode & this.readMode) === this.readMode;\n        }\n        set read(val) {\n          val ? this.mode |= this.readMode : this.mode &= ~this.readMode;\n        }\n        get write() {\n          return (this.mode & this.writeMode) === this.writeMode;\n        }\n        set write(val) {\n          val ? this.mode |= this.writeMode : this.mode &= ~this.writeMode;\n        }\n        get isFolder() {\n          return FS.isDir(this.mode);\n        }\n        get isDevice() {\n          return FS.isChrdev(this.mode);\n        }\n      },\n  lookupPath(path, opts = {}) {\n        if (!path) {\n          throw new FS.ErrnoError(44);\n        }\n        opts.follow_mount ??= true\n  \n        if (!PATH.isAbs(path)) {\n          path = FS.cwd() + '/' + path;\n        }\n  \n        // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\n        linkloop: for (var nlinks = 0; nlinks < 40; nlinks++) {\n          // split the absolute path\n          var parts = path.split('/').filter((p) => !!p);\n  \n          // start at the root\n          var current = FS.root;\n          var current_path = '/';\n  \n          for (var i = 0; i < parts.length; i++) {\n            var islast = (i === parts.length-1);\n            if (islast && opts.parent) {\n              // stop resolving\n              break;\n            }\n  \n            if (parts[i] === '.') {\n              continue;\n            }\n  \n            if (parts[i] === '..') {\n              current_path = PATH.dirname(current_path);\n              if (FS.isRoot(current)) {\n                path = current_path + '/' + parts.slice(i + 1).join('/');\n                // We're making progress here, don't let many consecutive ..'s\n                // lead to ELOOP\n                nlinks--;\n                continue linkloop;\n              } else {\n                current = current.parent;\n              }\n              continue;\n            }\n  \n            current_path = PATH.join2(current_path, parts[i]);\n            try {\n              current = FS.lookupNode(current, parts[i]);\n            } catch (e) {\n              // if noent_okay is true, suppress a ENOENT in the last component\n              // and return an object with an undefined node. This is needed for\n              // resolving symlinks in the path when creating a file.\n              if ((e?.errno === 44) && islast && opts.noent_okay) {\n                return { path: current_path };\n              }\n              throw e;\n            }\n  \n            // jump to the mount's root node if this is a mountpoint\n            if (FS.isMountpoint(current) && (!islast || opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n  \n            // by default, lookupPath will not follow a symlink if it is the final path component.\n            // setting opts.follow = true will override this behavior.\n            if (FS.isLink(current.mode) && (!islast || opts.follow)) {\n              if (!current.node_ops.readlink) {\n                throw new FS.ErrnoError(52);\n              }\n              var link = current.node_ops.readlink(current);\n              if (!PATH.isAbs(link)) {\n                link = PATH.dirname(current_path) + '/' + link;\n              }\n              path = link + '/' + parts.slice(i + 1).join('/');\n              continue linkloop;\n            }\n          }\n          return { path: current_path, node: current };\n        }\n        throw new FS.ErrnoError(32);\n      },\n  getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length-1] !== '/' ? `${mount}/${path}` : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n  hashName(parentid, name) {\n        var hash = 0;\n  \n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n  hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n  hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n  lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        // if we failed to find it in the cache, call into the VFS\n        return FS.lookup(parent, name);\n      },\n  createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n  \n        FS.hashAddNode(node);\n  \n        return node;\n      },\n  destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n  isRoot(node) {\n        return node === node.parent;\n      },\n  isMountpoint(node) {\n        return !!node.mounted;\n      },\n  isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n  isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n  isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n  isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n  isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n  isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n  isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n  flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if ((flag & 512)) {\n          perms += 'w';\n        }\n        return perms;\n      },\n  nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        // return 0 if any user, group or owner bits are set.\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n  mayLookup(dir) {\n        if (!FS.isDir(dir.mode)) return 54;\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n  mayCreate(dir, name) {\n        if (!FS.isDir(dir.mode)) {\n          return 54;\n        }\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {\n        }\n        return FS.nodePermissions(dir, 'wx');\n      },\n  mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n  mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' // opening for write\n              || (flags & (512 | 64))) { // TODO: check for O_SEARCH? (== search for dir only)\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n  checkOpExists(op, err) {\n        if (!op) {\n          throw new FS.ErrnoError(err);\n        }\n        return op;\n      },\n  MAX_OPEN_FDS:4096,\n  nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n  getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n  getStream:(fd) => FS.streams[fd],\n  createStream(stream, fd = -1) {\n  \n        // clone it, so we can return an instance of FSStream\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n  closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n  dupStream(origStream, fd = -1) {\n        var stream = FS.createStream(origStream, fd);\n        stream.stream_ops?.dup?.(stream);\n        return stream;\n      },\n  doSetAttr(stream, node, attr) {\n        var setattr = stream?.stream_ops.setattr;\n        var arg = setattr ? stream : node;\n        setattr ??= node.node_ops.setattr;\n        FS.checkOpExists(setattr, 63)\n        setattr(arg, attr);\n      },\n  chrdev_stream_ops:{\n  open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          // override node's stream ops with the device's\n          stream.stream_ops = device.stream_ops;\n          // forward the open call\n          stream.stream_ops.open?.(stream);\n        },\n  llseek() {\n          throw new FS.ErrnoError(70);\n        },\n  },\n  major:(dev) => ((dev) >> 8),\n  minor:(dev) => ((dev) & 0xff),\n  makedev:(ma, mi) => ((ma) << 8 | (mi)),\n  registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n  getDevice:(dev) => FS.devices[dev],\n  getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n  \n        while (check.length) {\n          var m = check.pop();\n  \n          mounts.push(m);\n  \n          check.push(...m.mounts);\n        }\n  \n        return mounts;\n      },\n  syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n  \n        FS.syncFSRequests++;\n  \n        if (FS.syncFSRequests > 1) {\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\n        }\n  \n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n  \n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n  \n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        };\n  \n        // sync all mounts\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n  mount(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n  \n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n          mountpoint = lookup.path;  // use the absolute path\n          node = lookup.node;\n  \n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n  \n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n  \n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: []\n        };\n  \n        // create a root node for the fs\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n  \n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          // set as a mountpoint\n          node.mounted = mount;\n  \n          // add the new mount to the current mount's children\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n  \n        return mountRoot;\n      },\n  unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n  \n        // destroy the nodes for this mount, and all its child mounts\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n  \n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n  \n          while (current) {\n            var next = current.name_next;\n  \n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n  \n            current = next;\n          }\n        });\n  \n        // no longer a mountpoint\n        node.mounted = null;\n  \n        // remove this mount from the child mounts\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n  lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n  mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name) {\n          throw new FS.ErrnoError(28);\n        }\n        if (name === '.' || name === '..') {\n          throw new FS.ErrnoError(20);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n  statfs(path) {\n        return FS.statfsNode(FS.lookupPath(path, {follow: true}).node);\n      },\n  statfsStream(stream) {\n        // We keep a separate statfsStream function because noderawfs overrides\n        // it. In noderawfs, stream.node is sometimes null. Instead, we need to\n        // look at stream.path.\n        return FS.statfsNode(stream.node);\n      },\n  statfsNode(node) {\n        // NOTE: None of the defaults here are true. We're just returning safe and\n        //       sane values. Currently nodefs and rawfs replace these defaults,\n        //       other file systems leave them alone.\n        var rtn = {\n          bsize: 4096,\n          frsize: 4096,\n          blocks: 1e6,\n          bfree: 5e5,\n          bavail: 5e5,\n          files: FS.nextInode,\n          ffree: FS.nextInode - 1,\n          fsid: 42,\n          flags: 2,\n          namelen: 255,\n        };\n  \n        if (node.node_ops.statfs) {\n          Object.assign(rtn, node.node_ops.statfs(node.mount.opts.root));\n        }\n        return rtn;\n      },\n  create(path, mode = 0o666) {\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdir(path, mode = 0o777) {\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var dir of dirs) {\n          if (!dir) continue;\n          if (d || PATH.isAbs(path)) d += '/';\n          d += dir;\n          try {\n            FS.mkdir(d, mode);\n          } catch(e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n  mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 0o666;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n  symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n  rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        // parents must exist\n        var lookup, old_dir, new_dir;\n  \n        // let the errors from non existent directories percolate up\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n  \n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        // need to be part of the same mount\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        // source must exist\n        var old_node = FS.lookupNode(old_dir, old_name);\n        // old path should not be an ancestor of the new path\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n        // new path should not be an ancestor of the old path\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n        // see if the new path already exists\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {\n          // not fatal\n        }\n        // early out if nothing needs to change\n        if (old_node === new_node) {\n          return;\n        }\n        // we'll need to delete the old entry\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        // need delete permissions if we'll be overwriting.\n        // need create permissions if new doesn't already exist.\n        errCode = new_node ?\n          FS.mayDelete(new_dir, new_name, isdir) :\n          FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n          throw new FS.ErrnoError(10);\n        }\n        // if we are going to change the parent, check write permissions\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // remove the node from the lookup hash\n        FS.hashRemoveNode(old_node);\n        // do the underlying fs rename\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n          // update old node (we do this here to avoid each backend\n          // needing to)\n          old_node.parent = new_dir;\n        } catch (e) {\n          throw e;\n        } finally {\n          // add the node back to the hash (in case node_ops.rename\n          // changed its name)\n          FS.hashAddNode(old_node);\n        }\n      },\n  rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n  readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        var readdir = FS.checkOpExists(node.node_ops.readdir, 54);\n        return readdir(node);\n      },\n  unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          // According to POSIX, we should map EISDIR to EPERM, but\n          // we instead do what Linux does (and we must, as we use\n          // the musl linux libc).\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n  readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return link.node_ops.readlink(link);\n      },\n  stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        var getattr = FS.checkOpExists(node.node_ops.getattr, 63);\n        return getattr(node);\n      },\n  fstat(fd) {\n        var stream = FS.getStreamChecked(fd);\n        var node = stream.node;\n        var getattr = stream.stream_ops.getattr;\n        var arg = getattr ? stream : node;\n        getattr ??= node.node_ops.getattr;\n        FS.checkOpExists(getattr, 63)\n        return getattr(arg);\n      },\n  lstat(path) {\n        return FS.stat(path, true);\n      },\n  doChmod(stream, node, mode, dontFollow) {\n        FS.doSetAttr(stream, node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          ctime: Date.now(),\n          dontFollow\n        });\n      },\n  chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        FS.doChmod(null, node, mode, dontFollow);\n      },\n  lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n  fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.doChmod(stream, stream.node, mode, false);\n      },\n  doChown(stream, node, dontFollow) {\n        FS.doSetAttr(stream, node, {\n          timestamp: Date.now(),\n          dontFollow\n          // we ignore the uid / gid for now\n        });\n      },\n  chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        FS.doChown(null, node, dontFollow);\n      },\n  lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n  fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.doChown(stream, stream.node, false);\n      },\n  doTruncate(stream, node, len) {\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.doSetAttr(stream, node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n  truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        FS.doTruncate(null, node, len);\n      },\n  ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if (len < 0 || (stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.doTruncate(stream, stream.node, len);\n      },\n  utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        var setattr = FS.checkOpExists(node.node_ops.setattr, 63);\n        setattr(node, {\n          atime: atime,\n          mtime: mtime\n        });\n      },\n  open(path, flags, mode = 0o666) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        if ((flags & 64)) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        var isDirPath;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          isDirPath = path.endsWith(\"/\");\n          // noent_okay makes it so that if the final component of the path\n          // doesn't exist, lookupPath returns `node: undefined`. `path` will be\n          // updated to point to the target of all symlinks.\n          var lookup = FS.lookupPath(path, {\n            follow: !(flags & 131072),\n            noent_okay: true\n          });\n          node = lookup.node;\n          path = lookup.path;\n        }\n        // perhaps we need to create the node\n        var created = false;\n        if ((flags & 64)) {\n          if (node) {\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\n            if ((flags & 128)) {\n              throw new FS.ErrnoError(20);\n            }\n          } else if (isDirPath) {\n            throw new FS.ErrnoError(31);\n          } else {\n            // node doesn't exist, try to create it\n            // Ignore the permission bits here to ensure we can `open` this new\n            // file below. We use chmod below the apply the permissions once the\n            // file is open.\n            node = FS.mknod(path, mode | 0o777, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        // can't truncate a device\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        // if asked only for a directory, then this must be one\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        // check permissions, if this is not a file we just created now (it is ok to\n        // create and write to a file with read-only permissions; it is read-only\n        // for later use)\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // do truncation if necessary\n        if ((flags & 512) && !created) {\n          FS.truncate(node, 0);\n        }\n        // we've already handled these, don't pass down to the underlying vfs\n        flags &= ~(128 | 512 | 131072);\n  \n        // register the stream with the filesystem\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),  // we want the absolute path to the node\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n          ungotten: [],\n          error: false\n        });\n        // call the new stream's open function\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (created) {\n          FS.chmod(node, mode & 0o777);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n  close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null; // free readdir state\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n  isClosed(stream) {\n        return stream.fd === null;\n      },\n  llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n  read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n  write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          // seek to the end before writing in append mode\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n  mmap(stream, length, position, prot, flags) {\n        // User requests writing to file (prot & PROT_WRITE != 0).\n        // Checking if we have permissions to write to the file unless\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\n        // as all modifications will be visible only in the memory of\n        // the current process.\n        if ((prot & 2) !== 0\n            && (flags & 2) === 0\n            && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!length) {\n          throw new FS.ErrnoError(28);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n  msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n  ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n  readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          buf = UTF8ArrayToString(buf);\n        }\n        FS.close(stream);\n        return buf;\n      },\n  writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          data = new Uint8Array(intArrayFromString(data, true));\n        }\n        if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n  cwd:() => FS.currentPath,\n  chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n  createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n  createDefaultDevices() {\n        // create /dev\n        FS.mkdir('/dev');\n        // setup /dev/null\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n          llseek: () => 0,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n        // setup /dev/tty and /dev/tty1\n        // stderr needs to print output using err() rather than out()\n        // so we register a second tty just for it.\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n        // setup /dev/[u]random\n        // use a buffer to avoid overhead of individual crypto calls per byte\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomFill(randomBuffer);\n            randomLeft = randomBuffer.byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n        // we're not going to emulate the actual shm device,\n        // just create the tmp dirs that reside in it commonly\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n  createSpecialDirectories() {\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\n        // name of the stream for fd 6 (see test_unistd_ttyname)\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount({\n          mount() {\n            var node = FS.createNode(proc_self, 'fd', 16895, 73);\n            node.stream_ops = {\n              llseek: MEMFS.stream_ops.llseek,\n            };\n            node.node_ops = {\n              lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStreamChecked(fd);\n                var ret = {\n                  parent: null,\n                  mount: { mountpoint: 'fake' },\n                  node_ops: { readlink: () => stream.path },\n                  id: fd + 1,\n                };\n                ret.parent = ret; // make it look like a simple root node\n                return ret;\n              },\n              readdir() {\n                return Array.from(FS.streams.entries())\n                  .filter(([k, v]) => v)\n                  .map(([k, v]) => k.toString());\n              }\n            };\n            return node;\n          }\n        }, {}, '/proc/self/fd');\n      },\n  createStandardStreams(input, output, error) {\n        // TODO deprecate the old functionality of a single\n        // input / output callback and that utilizes FS.createDevice\n        // and instead require a unique set of stream ops\n  \n        // by default, we symlink the standard streams to the\n        // default tty devices. however, if the standard streams\n        // have been overwritten we create a unique device for\n        // them instead.\n        if (input) {\n          FS.createDevice('/dev', 'stdin', input);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (output) {\n          FS.createDevice('/dev', 'stdout', null, output);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (error) {\n          FS.createDevice('/dev', 'stderr', null, error);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n  \n        // open default streams for the stdin, stdout and stderr devices\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n  staticInit() {\n        FS.nameTable = new Array(4096);\n  \n        FS.mount(MEMFS, {}, '/');\n  \n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n  \n        FS.filesystems = {\n          'MEMFS': MEMFS,\n          'IDBFS': IDBFS,\n        };\n      },\n  init(input, output, error) {\n        FS.initialized = true;\n  \n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n        input ??= Module['stdin'];\n        output ??= Module['stdout'];\n        error ??= Module['stderr'];\n  \n        FS.createStandardStreams(input, output, error);\n      },\n  quit() {\n        FS.initialized = false;\n        // force-flush all streams, so we get musl std streams printed out\n        // close all of our streams\n        for (var stream of FS.streams) {\n          if (stream) {\n            FS.close(stream);\n          }\n        }\n      },\n  findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n  analyzePath(path, dontResolveLastLink) {\n        // operate from within the context of the symlink's target\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {\n        }\n        var ret = {\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\n          parentExists: false, parentPath: null, parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        };\n        return ret;\n      },\n  createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n          parent = current;\n        }\n        return current;\n      },\n  createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n  createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          // make sure we can write to the file\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n  createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(!!input, !!output);\n        FS.createDevice.major ??= 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        // Create a fake device that a set of stream ops to emulate\n        // the old behavior.\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            // flush any pending line data\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos /* ignored */) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset+i] = result;\n            }\n            if (bytesRead) {\n              stream.node.atime = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset+i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.mtime = stream.node.ctime = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n  forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else { // Command-line.\n          try {\n            obj.contents = readBinary(obj.url);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        }\n      },\n  createLazyFile(parent, name, url, canRead, canWrite) {\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array).\n        // Actual getting is abstracted away for eventual reuse.\n        class LazyUint8Array {\n          lengthKnown = false;\n          chunks = []; // Loaded chunks. Index is the chunk number\n          get(idx) {\n            if (idx > this.length-1 || idx < 0) {\n              return undefined;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = (idx / this.chunkSize)|0;\n            return this.getter(chunkNum)[chunkOffset];\n          }\n          setDataGetter(getter) {\n            this.getter = getter;\n          }\n          cacheLength() {\n            // Find length\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n  \n            var chunkSize = 1024*1024; // Chunk size in bytes\n  \n            if (!hasByteServing) chunkSize = datalength;\n  \n            // Function to get a range from the remote URL.\n            var doXHR = (from, to) => {\n              if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n  \n              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n  \n              // Some hints to the browser that we want binary data.\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n  \n              xhr.send(null);\n              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n              if (xhr.response !== undefined) {\n                return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum+1) * chunkSize - 1; // including this byte\n              end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n  \n            if (usesGzip || !datalength) {\n              // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n              chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n  \n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          }\n          get length() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._length;\n          }\n          get chunkSize() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._chunkSize;\n          }\n        }\n  \n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n  \n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        // This is a total hack, but I want to get this lazy file code out of the\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\n        // be its own thin LAZYFS proxying calls to MEMFS.\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        // Add a function that defers querying the file size until it is asked the first time.\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function() { return this.contents.length; }\n          }\n        });\n        // override each stream op with one that tries to force load the lazy file first\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = (...args) => {\n            FS.forceLoadFile(node);\n            return fn(...args);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length)\n            return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) { // normal array\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n        // use a custom read function\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position)\n        };\n        // use a custom mmap function\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n  };\n  \n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index.\n     * @param {boolean=} ignoreNul - If true, the function will not stop on a NUL character.\n     * @return {string}\n     */\n  var UTF8ToString = (ptr, maxBytesToRead, ignoreNul) => {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead, ignoreNul) : '';\n    };\n  var SYSCALLS = {\n  DEFAULT_POLLMASK:5,\n  calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n        // relative path\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);;\n          }\n          return dir;\n        }\n        return dir + '/' + path;\n      },\n  writeStat(buf, stat) {\n        HEAP32[((buf)>>2)] = stat.dev;\n        HEAP32[(((buf)+(4))>>2)] = stat.mode;\n        HEAPU32[(((buf)+(8))>>2)] = stat.nlink;\n        HEAP32[(((buf)+(12))>>2)] = stat.uid;\n        HEAP32[(((buf)+(16))>>2)] = stat.gid;\n        HEAP32[(((buf)+(20))>>2)] = stat.rdev;\n        HEAP64[(((buf)+(24))>>3)] = BigInt(stat.size);\n        HEAP32[(((buf)+(32))>>2)] = 4096;\n        HEAP32[(((buf)+(36))>>2)] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        HEAP64[(((buf)+(40))>>3)] = BigInt(Math.floor(atime / 1000));\n        HEAPU32[(((buf)+(48))>>2)] = (atime % 1000) * 1000 * 1000;\n        HEAP64[(((buf)+(56))>>3)] = BigInt(Math.floor(mtime / 1000));\n        HEAPU32[(((buf)+(64))>>2)] = (mtime % 1000) * 1000 * 1000;\n        HEAP64[(((buf)+(72))>>3)] = BigInt(Math.floor(ctime / 1000));\n        HEAPU32[(((buf)+(80))>>2)] = (ctime % 1000) * 1000 * 1000;\n        HEAP64[(((buf)+(88))>>3)] = BigInt(stat.ino);\n        return 0;\n      },\n  writeStatFs(buf, stats) {\n        HEAP32[(((buf)+(4))>>2)] = stats.bsize;\n        HEAP32[(((buf)+(40))>>2)] = stats.bsize;\n        HEAP32[(((buf)+(8))>>2)] = stats.blocks;\n        HEAP32[(((buf)+(12))>>2)] = stats.bfree;\n        HEAP32[(((buf)+(16))>>2)] = stats.bavail;\n        HEAP32[(((buf)+(20))>>2)] = stats.files;\n        HEAP32[(((buf)+(24))>>2)] = stats.ffree;\n        HEAP32[(((buf)+(28))>>2)] = stats.fsid;\n        HEAP32[(((buf)+(44))>>2)] = stats.flags;  // ST_NOSUID\n        HEAP32[(((buf)+(36))>>2)] = stats.namelen;\n      },\n  doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n  getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n  varargs:undefined,\n  getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n  };\n  function ___syscall_dup3(fd, newfd, flags) {\n  try {\n  \n      var old = SYSCALLS.getStreamFromFD(fd);\n      if (old.fd === newfd) return -28;\n      // Check newfd is within range of valid open file descriptors.\n      if (newfd < 0 || newfd >= FS.MAX_OPEN_FDS) return -8;\n      var existing = FS.getStream(newfd);\n      if (existing) FS.close(existing);\n      return FS.dupStream(old, newfd).fd;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_faccessat(dirfd, path, amode, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (amode & ~7) {\n        // need a valid mode\n        return -28;\n      }\n      var lookup = FS.lookupPath(path, { follow: true });\n      var node = lookup.node;\n      if (!node) {\n        return -44;\n      }\n      var perms = '';\n      if (amode & 4) perms += 'r';\n      if (amode & 2) perms += 'w';\n      if (amode & 1) perms += 'x';\n      if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {\n        return -2;\n      }\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  /** @suppress {duplicate } */\n  var syscallGetVarargI = () => {\n      // the `+` prepended here is necessary to convince the JSCompiler that varargs is indeed a number.\n      var ret = HEAP32[((+SYSCALLS.varargs)>>2)];\n      SYSCALLS.varargs += 4;\n      return ret;\n    };\n  var syscallGetVarargP = syscallGetVarargI;\n  \n  \n  function ___syscall_fcntl64(fd, cmd, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (cmd) {\n        case 0: {\n          var arg = syscallGetVarargI();\n          if (arg < 0) {\n            return -28;\n          }\n          while (FS.streams[arg]) {\n            arg++;\n          }\n          var newStream;\n          newStream = FS.dupStream(stream, arg);\n          return newStream.fd;\n        }\n        case 1:\n        case 2:\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\n        case 3:\n          return stream.flags;\n        case 4: {\n          var arg = syscallGetVarargI();\n          stream.flags |= arg;\n          return 0;\n        }\n        case 12: {\n          var arg = syscallGetVarargP();\n          var offset = 0;\n          // We're always unlocked.\n          HEAP16[(((arg)+(offset))>>1)] = 2;\n          return 0;\n        }\n        case 13:\n        case 14:\n          // Pretend that the locking is successful. These are process-level locks,\n          // and Emscripten programs are a single process. If we supported linking a\n          // filesystem between programs, we'd need to do more here.\n          // See https://github.com/emscripten-core/emscripten/issues/23697\n          return 0;\n      }\n      return -28;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_fstat64(fd, buf) {\n  try {\n  \n      return SYSCALLS.writeStat(buf, FS.fstat(fd));\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n  \n  function ___syscall_getdents64(fd, dirp, count) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd)\n      stream.getdents ||= FS.readdir(stream.path);\n  \n      var struct_size = 280;\n      var pos = 0;\n      var off = FS.llseek(stream, 0, 1);\n  \n      var startIdx = Math.floor(off / struct_size);\n      var endIdx = Math.min(stream.getdents.length, startIdx + Math.floor(count/struct_size))\n      for (var idx = startIdx; idx < endIdx; idx++) {\n        var id;\n        var type;\n        var name = stream.getdents[idx];\n        if (name === '.') {\n          id = stream.node.id;\n          type = 4; // DT_DIR\n        }\n        else if (name === '..') {\n          var lookup = FS.lookupPath(stream.path, { parent: true });\n          id = lookup.node.id;\n          type = 4; // DT_DIR\n        }\n        else {\n          var child;\n          try {\n            child = FS.lookupNode(stream.node, name);\n          } catch (e) {\n            // If the entry is not a directory, file, or symlink, nodefs\n            // lookupNode will raise EINVAL. Skip these and continue.\n            if (e?.errno === 28) {\n              continue;\n            }\n            throw e;\n          }\n          id = child.id;\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\n                 8;                             // DT_REG, regular file.\n        }\n        HEAP64[((dirp + pos)>>3)] = BigInt(id);\n        HEAP64[(((dirp + pos)+(8))>>3)] = BigInt((idx + 1) * struct_size);\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\n        HEAP8[(dirp + pos)+(18)] = type;\n        stringToUTF8(name, dirp + pos + 19, 256);\n        pos += struct_size;\n      }\n      FS.llseek(stream, idx * struct_size, 0);\n      return pos;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  function ___syscall_ioctl(fd, op, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (op) {\n        case 21509: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21505: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcgets) {\n            var termios = stream.tty.ops.ioctl_tcgets(stream);\n            var argp = syscallGetVarargP();\n            HEAP32[((argp)>>2)] = termios.c_iflag || 0;\n            HEAP32[(((argp)+(4))>>2)] = termios.c_oflag || 0;\n            HEAP32[(((argp)+(8))>>2)] = termios.c_cflag || 0;\n            HEAP32[(((argp)+(12))>>2)] = termios.c_lflag || 0;\n            for (var i = 0; i < 32; i++) {\n              HEAP8[(argp + i)+(17)] = termios.c_cc[i] || 0;\n            }\n            return 0;\n          }\n          return 0;\n        }\n        case 21510:\n        case 21511:\n        case 21512: {\n          if (!stream.tty) return -59;\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21506:\n        case 21507:\n        case 21508: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcsets) {\n            var argp = syscallGetVarargP();\n            var c_iflag = HEAP32[((argp)>>2)];\n            var c_oflag = HEAP32[(((argp)+(4))>>2)];\n            var c_cflag = HEAP32[(((argp)+(8))>>2)];\n            var c_lflag = HEAP32[(((argp)+(12))>>2)];\n            var c_cc = []\n            for (var i = 0; i < 32; i++) {\n              c_cc.push(HEAP8[(argp + i)+(17)]);\n            }\n            return stream.tty.ops.ioctl_tcsets(stream.tty, op, { c_iflag, c_oflag, c_cflag, c_lflag, c_cc });\n          }\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21519: {\n          if (!stream.tty) return -59;\n          var argp = syscallGetVarargP();\n          HEAP32[((argp)>>2)] = 0;\n          return 0;\n        }\n        case 21520: {\n          if (!stream.tty) return -59;\n          return -28; // not supported\n        }\n        case 21537:\n        case 21531: {\n          var argp = syscallGetVarargP();\n          return FS.ioctl(stream, op, argp);\n        }\n        case 21523: {\n          // TODO: in theory we should write to the winsize struct that gets\n          // passed in, but for now musl doesn't read anything on it\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tiocgwinsz) {\n            var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n            var argp = syscallGetVarargP();\n            HEAP16[((argp)>>1)] = winsize[0];\n            HEAP16[(((argp)+(2))>>1)] = winsize[1];\n          }\n          return 0;\n        }\n        case 21524: {\n          // TODO: technically, this ioctl call should change the window size.\n          // but, since emscripten doesn't have any concept of a terminal window\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21515: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        default: return -28; // not supported\n      }\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_lstat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.writeStat(buf, FS.lstat(path));\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_mkdirat(dirfd, path, mode) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      FS.mkdir(path, mode, 0);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      var nofollow = flags & 256;\n      var allowEmpty = flags & 4096;\n      flags = flags & (~6400);\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n      return SYSCALLS.writeStat(buf, nofollow ? FS.lstat(path) : FS.stat(path));\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  function ___syscall_openat(dirfd, path, flags, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      var mode = varargs ? syscallGetVarargI() : 0;\n      return FS.open(path, flags, mode).fd;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  \n  function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (bufsize <= 0) return -28;\n      var ret = FS.readlink(path);\n  \n      var len = Math.min(bufsize, lengthBytesUTF8(ret));\n      var endChar = HEAP8[buf+len];\n      stringToUTF8(ret, buf, bufsize+1);\n      // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)\n      // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.\n      HEAP8[buf+len] = endChar;\n      return len;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_renameat(olddirfd, oldpath, newdirfd, newpath) {\n  try {\n  \n      oldpath = SYSCALLS.getStr(oldpath);\n      newpath = SYSCALLS.getStr(newpath);\n      oldpath = SYSCALLS.calculateAt(olddirfd, oldpath);\n      newpath = SYSCALLS.calculateAt(newdirfd, newpath);\n      FS.rename(oldpath, newpath);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_rmdir(path) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.rmdir(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_stat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.writeStat(buf, FS.stat(path));\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_unlinkat(dirfd, path, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (!flags) {\n        FS.unlink(path);\n      } else if (flags === 512) {\n        FS.rmdir(path);\n      } else {\n        return -28;\n      }\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var __abort_js = () =>\n      abort('');\n\n  var __emscripten_system = (command) => {\n      // int system(const char *command);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/system.html\n      // Can't call external programs.\n      if (!command) return 0; // no shell available\n      return -52;\n    };\n\n  var __emscripten_throw_longjmp = () => {\n      throw Infinity;\n    };\n\n  var INT53_MAX = 9007199254740992;\n  \n  var INT53_MIN = -9007199254740992;\n  var bigintToI53Checked = (num) => (num < INT53_MIN || num > INT53_MAX) ? NaN : Number(num);\n  function __gmtime_js(time, tmPtr) {\n    time = bigintToI53Checked(time);\n  \n  \n      var date = new Date(time * 1000);\n      HEAP32[((tmPtr)>>2)] = date.getUTCSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getUTCMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getUTCHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getUTCDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getUTCMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getUTCFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getUTCDay();\n      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n      var yday = ((date.getTime() - start) / (1000 * 60 * 60 * 24))|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n    ;\n  }\n\n  var isLeapYear = (year) => year%4 === 0 && (year%100 !== 0 || year%400 === 0);\n  \n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\n  \n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\n  var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\n  \n      return yday;\n    };\n  \n  function __localtime_js(time, tmPtr) {\n    time = bigintToI53Checked(time);\n  \n  \n      var date = new Date(time*1000);\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n  \n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\n  \n      // Attention: DST is in December in South, and some regions don't have DST at all.\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\n    ;\n  }\n\n  \n  var __mktime_js = function(tmPtr) {\n  \n  var ret = (() => { \n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\n                          HEAP32[(((tmPtr)+(16))>>2)],\n                          HEAP32[(((tmPtr)+(12))>>2)],\n                          HEAP32[(((tmPtr)+(8))>>2)],\n                          HEAP32[(((tmPtr)+(4))>>2)],\n                          HEAP32[((tmPtr)>>2)],\n                          0);\n  \n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\n      var guessedOffset = date.getTimezoneOffset();\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\n      if (dst < 0) {\n        // Attention: some regions don't have DST at all.\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\n      }\n  \n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      // To match expected behavior, update fields from date\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\n  \n      var timeMs = date.getTime();\n      if (isNaN(timeMs)) {\n        return -1;\n      }\n      // Return time in microseconds\n      return timeMs / 1000;\n     })();\n  return BigInt(ret);\n  };\n\n  var __tzset_js = (timezone, daylight, std_name, dst_name) => {\n      // TODO: Use (malleable) environment variables instead of system settings.\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n  \n      // Local standard timezone offset. Local standard time is not adjusted for\n      // daylight savings.  This code uses the fact that getTimezoneOffset returns\n      // a greater value during Standard Time versus Daylight Saving Time (DST).\n      // Thus it determines the expected output during Standard Time, and it\n      // compares whether the output of the given date the same (Standard) or less\n      // (DST).\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n  \n      // timezone is specified as seconds west of UTC (\"The external variable\n      // `timezone` shall be set to the difference, in seconds, between\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\n      // as returned by stdTimezoneOffset.\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\n  \n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\n  \n      var extractZone = (timezoneOffset) => {\n        // Why inverse sign?\n        // Read here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\n        var sign = timezoneOffset >= 0 ? \"-\" : \"+\";\n  \n        var absOffset = Math.abs(timezoneOffset)\n        var hours = String(Math.floor(absOffset / 60)).padStart(2, \"0\");\n        var minutes = String(absOffset % 60).padStart(2, \"0\");\n  \n        return `UTC${sign}${hours}${minutes}`;\n      }\n  \n      var winterName = extractZone(winterOffset);\n      var summerName = extractZone(summerOffset);\n      if (summerOffset < winterOffset) {\n        // Northern hemisphere\n        stringToUTF8(winterName, std_name, 17);\n        stringToUTF8(summerName, dst_name, 17);\n      } else {\n        stringToUTF8(winterName, dst_name, 17);\n        stringToUTF8(summerName, std_name, 17);\n      }\n    };\n\n  var _emscripten_get_now = () => performance.now();\n  \n  var _emscripten_date_now = () => Date.now();\n  \n  var nowIsMonotonic = 1;\n  \n  var checkWasiClock = (clock_id) => clock_id >= 0 && clock_id <= 3;\n  \n  function _clock_time_get(clk_id, ignored_precision, ptime) {\n    ignored_precision = bigintToI53Checked(ignored_precision);\n  \n  \n      if (!checkWasiClock(clk_id)) {\n        return 28;\n      }\n      var now;\n      // all wasi clocks but realtime are monotonic\n      if (clk_id === 0) {\n        now = _emscripten_date_now();\n      } else if (nowIsMonotonic) {\n        now = _emscripten_get_now();\n      } else {\n        return 52;\n      }\n      // \"now\" is in ms, and wasi times are in ns.\n      var nsec = Math.round(now * 1000 * 1000);\n      HEAP64[((ptime)>>3)] = BigInt(nsec);\n      return 0;\n    ;\n  }\n\n  var handleException = (e) => {\n      // Certain exception types we do not treat as errors since they are used for\n      // internal control flow.\n      // 1. ExitStatus, which is thrown by exit()\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\n      //    that wish to return to JS event loop.\n      if (e instanceof ExitStatus || e == 'unwind') {\n        return EXITSTATUS;\n      }\n      quit_(1, e);\n    };\n  \n  \n  var runtimeKeepaliveCounter = 0;\n  var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n  var _proc_exit = (code) => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        Module['onExit']?.(code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n  /** @suppress {duplicate } */\n  /** @param {boolean|number=} implicit */\n  var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n  \n      _proc_exit(status);\n    };\n  var _exit = exitJS;\n  \n  \n  var maybeExit = () => {\n      if (!keepRuntimeAlive()) {\n        try {\n          _exit(EXITSTATUS);\n        } catch (e) {\n          handleException(e);\n        }\n      }\n    };\n  var callUserCallback = (func) => {\n      if (ABORT) {\n        return;\n      }\n      try {\n        func();\n        maybeExit();\n      } catch (e) {\n        handleException(e);\n      }\n    };\n  \n  /** @param {number=} timeout */\n  var safeSetTimeout = (func, timeout) => {\n      \n      return setTimeout(() => {\n        \n        callUserCallback(func);\n      }, timeout);\n    };\n  \n  var warnOnce = (text) => {\n      warnOnce.shown ||= {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        err(text);\n      }\n    };\n  \n  \n  var Browser = {\n  useWebGL:false,\n  isFullscreen:false,\n  pointerLock:false,\n  moduleContextCreatedCallbacks:[],\n  workers:[],\n  preloadedImages:{\n  },\n  preloadedAudios:{\n  },\n  getCanvas:() => Module['canvas'],\n  init() {\n        if (Browser.initted) return;\n        Browser.initted = true;\n  \n        // Support for plugins that can process preloaded files. You can add more of these to\n        // your app by creating and appending to preloadPlugins.\n        //\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\n        // might create some side data structure for use later (like an Image element, etc.).\n  \n        var imagePlugin = {};\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\n          return !Module['noImageDecoding'] && /\\.(jpg|jpeg|png|bmp|webp)$/i.test(name);\n        };\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          if (b.size !== byteArray.length) { // Safari bug #118630\n            // Safari's Blob can only take an ArrayBuffer\n            b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\n          }\n          var url = URL.createObjectURL(b);\n          var img = new Image();\n          img.onload = () => {\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\n            canvas.width = img.width;\n            canvas.height = img.height;\n            var ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            Browser.preloadedImages[name] = canvas;\n            URL.revokeObjectURL(url);\n            onload?.(byteArray);\n          };\n          img.onerror = (event) => {\n            err(`Image ${url} could not be decoded`);\n            onerror?.();\n          };\n          img.src = url;\n        };\n        preloadPlugins.push(imagePlugin);\n  \n        var audioPlugin = {};\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\n          return !Module['noAudioDecoding'] && name.slice(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\n        };\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\n          var done = false;\n          function finish(audio) {\n            if (done) return;\n            done = true;\n            Browser.preloadedAudios[name] = audio;\n            onload?.(byteArray);\n          }\n          function fail() {\n            if (done) return;\n            done = true;\n            Browser.preloadedAudios[name] = new Audio(); // empty shim\n            onerror?.();\n          }\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          var url = URL.createObjectURL(b); // XXX we never revoke this!\n          var audio = new Audio();\n          audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\n          audio.onerror = function audio_onerror(event) {\n            if (done) return;\n            err(`warning: browser could not fully decode audio ${name}, trying slower base64 approach`);\n            function encode64(data) {\n              var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n              var PAD = '=';\n              var ret = '';\n              var leftchar = 0;\n              var leftbits = 0;\n              for (var i = 0; i < data.length; i++) {\n                leftchar = (leftchar << 8) | data[i];\n                leftbits += 8;\n                while (leftbits >= 6) {\n                  var curr = (leftchar >> (leftbits-6)) & 0x3f;\n                  leftbits -= 6;\n                  ret += BASE[curr];\n                }\n              }\n              if (leftbits == 2) {\n                ret += BASE[(leftchar&3) << 4];\n                ret += PAD + PAD;\n              } else if (leftbits == 4) {\n                ret += BASE[(leftchar&0xf) << 2];\n                ret += PAD;\n              }\n              return ret;\n            }\n            audio.src = 'data:audio/x-' + name.slice(-3) + ';base64,' + encode64(byteArray);\n            finish(audio); // we don't wait for confirmation this worked - but it's worth trying\n          };\n          audio.src = url;\n          // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\n          safeSetTimeout(() => {\n            finish(audio); // try to use it even though it is not necessarily ready to play\n          }, 10000);\n        };\n        preloadPlugins.push(audioPlugin);\n  \n        // Canvas event setup\n  \n        function pointerLockChange() {\n          var canvas = Browser.getCanvas();\n          Browser.pointerLock = document.pointerLockElement === canvas;\n        }\n        var canvas = Browser.getCanvas();\n        if (canvas) {\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\n          // Module['forcedAspectRatio'] = 4 / 3;\n  \n          document.addEventListener('pointerlockchange', pointerLockChange, false);\n  \n          if (Module['elementPointerLock']) {\n            canvas.addEventListener(\"click\", (ev) => {\n              if (!Browser.pointerLock && Browser.getCanvas().requestPointerLock) {\n                Browser.getCanvas().requestPointerLock();\n                ev.preventDefault();\n              }\n            }, false);\n          }\n        }\n      },\n  createContext(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\n        if (useWebGL && Module['ctx'] && canvas == Browser.getCanvas()) return Module['ctx']; // no need to recreate GL context if it's already been created for this canvas.\n  \n        var ctx;\n        var contextHandle;\n        if (useWebGL) {\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\n          var contextAttributes = {\n            antialias: false,\n            alpha: false,\n            majorVersion: 2,\n          };\n  \n          if (webGLContextAttributes) {\n            for (var attribute in webGLContextAttributes) {\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\n            }\n          }\n  \n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\n          // Browser.createContext() should not even be emitted.\n          if (typeof GL != 'undefined') {\n            contextHandle = GL.createContext(canvas, contextAttributes);\n            if (contextHandle) {\n              ctx = GL.getContext(contextHandle).GLctx;\n            }\n          }\n        } else {\n          ctx = canvas.getContext('2d');\n        }\n  \n        if (!ctx) return null;\n  \n        if (setInModule) {\n          Module['ctx'] = ctx;\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\n          Browser.useWebGL = useWebGL;\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\n          Browser.init();\n        }\n        return ctx;\n      },\n  fullscreenHandlersInstalled:false,\n  lockPointer:undefined,\n  resizeCanvas:undefined,\n  requestFullscreen(lockPointer, resizeCanvas) {\n        Browser.lockPointer = lockPointer;\n        Browser.resizeCanvas = resizeCanvas;\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\n  \n        var canvas = Browser.getCanvas();\n        function fullscreenChange() {\n          Browser.isFullscreen = false;\n          var canvasContainer = canvas.parentNode;\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\n            canvas.exitFullscreen = Browser.exitFullscreen;\n            if (Browser.lockPointer) canvas.requestPointerLock();\n            Browser.isFullscreen = true;\n            if (Browser.resizeCanvas) {\n              Browser.setFullscreenCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          } else {\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\n            canvasContainer.parentNode.removeChild(canvasContainer);\n  \n            if (Browser.resizeCanvas) {\n              Browser.setWindowedCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          }\n          Module['onFullScreen']?.(Browser.isFullscreen);\n          Module['onFullscreen']?.(Browser.isFullscreen);\n        }\n  \n        if (!Browser.fullscreenHandlersInstalled) {\n          Browser.fullscreenHandlersInstalled = true;\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\n        }\n  \n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\n        var canvasContainer = document.createElement(\"div\");\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\n        canvasContainer.appendChild(canvas);\n  \n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\n                                            canvasContainer['mozRequestFullScreen'] ||\n                                            canvasContainer['msRequestFullscreen'] ||\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\n  \n        canvasContainer.requestFullscreen();\n      },\n  exitFullscreen() {\n        // This is workaround for chrome. Trying to exit from fullscreen\n        // not in fullscreen state will cause \"TypeError: Document not active\"\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\n        if (!Browser.isFullscreen) {\n          return false;\n        }\n  \n        var CFS = document['exitFullscreen'] ||\n                  document['cancelFullScreen'] ||\n                  document['mozCancelFullScreen'] ||\n                  document['msExitFullscreen'] ||\n                  document['webkitCancelFullScreen'] ||\n            (() => {});\n        CFS.apply(document, []);\n        return true;\n      },\n  safeSetTimeout(func, timeout) {\n        // Legacy function, this is used by the SDL2 port so we need to keep it\n        // around at least until that is updated.\n        // See https://github.com/libsdl-org/SDL/pull/6304\n        return safeSetTimeout(func, timeout);\n      },\n  getMimetype(name) {\n        return {\n          'jpg': 'image/jpeg',\n          'jpeg': 'image/jpeg',\n          'png': 'image/png',\n          'bmp': 'image/bmp',\n          'ogg': 'audio/ogg',\n          'wav': 'audio/wav',\n          'mp3': 'audio/mpeg'\n        }[name.slice(name.lastIndexOf('.')+1)];\n      },\n  getUserMedia(func) {\n        window.getUserMedia ||= navigator['getUserMedia'] ||\n                                navigator['mozGetUserMedia'];\n        window.getUserMedia(func);\n      },\n  getMovementX(event) {\n        return event['movementX'] ||\n               event['mozMovementX'] ||\n               event['webkitMovementX'] ||\n               0;\n      },\n  getMovementY(event) {\n        return event['movementY'] ||\n               event['mozMovementY'] ||\n               event['webkitMovementY'] ||\n               0;\n      },\n  getMouseWheelDelta(event) {\n        var delta = 0;\n        switch (event.type) {\n          case 'DOMMouseScroll':\n            // 3 lines make up a step\n            delta = event.detail / 3;\n            break;\n          case 'mousewheel':\n            // 120 units make up a step\n            delta = event.wheelDelta / 120;\n            break;\n          case 'wheel':\n            delta = event.deltaY\n            switch (event.deltaMode) {\n              case 0:\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\n                delta /= 100;\n                break;\n              case 1:\n                // DOM_DELTA_LINE: 3 lines make up a step\n                delta /= 3;\n                break;\n              case 2:\n                // DOM_DELTA_PAGE: A page makes up 80 steps\n                delta *= 80;\n                break;\n              default:\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\n            }\n            break;\n          default:\n            throw 'unrecognized mouse wheel event: ' + event.type;\n        }\n        return delta;\n      },\n  mouseX:0,\n  mouseY:0,\n  mouseMovementX:0,\n  mouseMovementY:0,\n  touches:{\n  },\n  lastTouches:{\n  },\n  calculateMouseCoords(pageX, pageY) {\n        // Calculate the movement based on the changes\n        // in the coordinates.\n        var canvas = Browser.getCanvas();\n        var rect = canvas.getBoundingClientRect();\n  \n        // Neither .scrollX or .pageXOffset are defined in a spec, but\n        // we prefer .scrollX because it is currently in a spec draft.\n        // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\n        var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\n        var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\n        var adjustedX = pageX - (scrollX + rect.left);\n        var adjustedY = pageY - (scrollY + rect.top);\n  \n        // the canvas might be CSS-scaled compared to its backbuffer;\n        // SDL-using content will want mouse coordinates in terms\n        // of backbuffer units.\n        adjustedX = adjustedX * (canvas.width / rect.width);\n        adjustedY = adjustedY * (canvas.height / rect.height);\n  \n        return { x: adjustedX, y: adjustedY };\n      },\n  setMouseCoords(pageX, pageY) {\n        const {x, y} = Browser.calculateMouseCoords(pageX, pageY);\n        Browser.mouseMovementX = x - Browser.mouseX;\n        Browser.mouseMovementY = y - Browser.mouseY;\n        Browser.mouseX = x;\n        Browser.mouseY = y;\n      },\n  calculateMouseEvent(event) { // event should be mousemove, mousedown or mouseup\n        if (Browser.pointerLock) {\n          // When the pointer is locked, calculate the coordinates\n          // based on the movement of the mouse.\n          // Workaround for Firefox bug 764498\n          if (event.type != 'mousemove' &&\n              ('mozMovementX' in event)) {\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\n          } else {\n            Browser.mouseMovementX = Browser.getMovementX(event);\n            Browser.mouseMovementY = Browser.getMovementY(event);\n          }\n  \n          // add the mouse delta to the current absolute mouse position\n          Browser.mouseX += Browser.mouseMovementX;\n          Browser.mouseY += Browser.mouseMovementY;\n        } else {\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\n            var touch = event.touch;\n            if (touch === undefined) {\n              return; // the \"touch\" property is only defined in SDL\n  \n            }\n            var coords = Browser.calculateMouseCoords(touch.pageX, touch.pageY);\n  \n            if (event.type === 'touchstart') {\n              Browser.lastTouches[touch.identifier] = coords;\n              Browser.touches[touch.identifier] = coords;\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\n              var last = Browser.touches[touch.identifier];\n              last ||= coords;\n              Browser.lastTouches[touch.identifier] = last;\n              Browser.touches[touch.identifier] = coords;\n            }\n            return;\n          }\n  \n          Browser.setMouseCoords(event.pageX, event.pageY);\n        }\n      },\n  resizeListeners:[],\n  updateResizeListeners() {\n        var canvas = Browser.getCanvas();\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\n      },\n  setCanvasSize(width, height, noUpdates) {\n        var canvas = Browser.getCanvas();\n        Browser.updateCanvasDimensions(canvas, width, height);\n        if (!noUpdates) Browser.updateResizeListeners();\n      },\n  windowedWidth:0,\n  windowedHeight:0,\n  setFullscreenCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Browser.getCanvas());\n        Browser.updateResizeListeners();\n      },\n  setWindowedCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Browser.getCanvas());\n        Browser.updateResizeListeners();\n      },\n  updateCanvasDimensions(canvas, wNative, hNative) {\n        if (wNative && hNative) {\n          canvas.widthNative = wNative;\n          canvas.heightNative = hNative;\n        } else {\n          wNative = canvas.widthNative;\n          hNative = canvas.heightNative;\n        }\n        var w = wNative;\n        var h = hNative;\n        if (Module['forcedAspectRatio'] > 0) {\n          if (w/h < Module['forcedAspectRatio']) {\n            w = Math.round(h * Module['forcedAspectRatio']);\n          } else {\n            h = Math.round(w / Module['forcedAspectRatio']);\n          }\n        }\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\n           var factor = Math.min(screen.width / w, screen.height / h);\n           w = Math.round(w * factor);\n           h = Math.round(h * factor);\n        }\n        if (Browser.resizeCanvas) {\n          if (canvas.width  != w) canvas.width  = w;\n          if (canvas.height != h) canvas.height = h;\n          if (typeof canvas.style != 'undefined') {\n            canvas.style.removeProperty( \"width\");\n            canvas.style.removeProperty(\"height\");\n          }\n        } else {\n          if (canvas.width  != wNative) canvas.width  = wNative;\n          if (canvas.height != hNative) canvas.height = hNative;\n          if (typeof canvas.style != 'undefined') {\n            if (w != wNative || h != hNative) {\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\n            } else {\n              canvas.style.removeProperty( \"width\");\n              canvas.style.removeProperty(\"height\");\n            }\n          }\n        }\n      },\n  };\n  \n  var EGL = {\n  errorCode:12288,\n  defaultDisplayInitialized:false,\n  currentContext:0,\n  currentReadSurface:0,\n  currentDrawSurface:0,\n  contextAttributes:{\n  alpha:false,\n  depth:false,\n  stencil:false,\n  antialias:false,\n  },\n  stringCache:{\n  },\n  setErrorCode(code) {\n        EGL.errorCode = code;\n      },\n  chooseConfig(display, attribList, config, config_size, numConfigs) {\n        if (display != 62000) {\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n          return 0;\n        }\n  \n        if (attribList) {\n          // read attribList if it is non-null\n          for (;;) {\n            var param = HEAP32[((attribList)>>2)];\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.alpha = (alphaSize > 0);\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.depth = (depthSize > 0);\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.stencil = (stencilSize > 0);\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples > 0);\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples == 1);\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\n            } else if (param == 0x3038 /*EGL_NONE*/) {\n                break;\n            }\n            attribList += 8;\n          }\n        }\n  \n        if ((!config || !config_size) && !numConfigs) {\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n        }\n        if (numConfigs) {\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\n        }\n        if (config && config_size > 0) {\n          HEAPU32[((config)>>2)] = 62002;\n        }\n  \n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      },\n  };\n  var _eglBindAPI = (api) => {\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      }\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n      return 0;\n    };\n\n  var _eglChooseConfig = (display, attrib_list, configs, config_size, numConfigs) =>\n      EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\n\n  var GLctx;\n  \n  var webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance = (ctx) =>\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\n      !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\n  \n  var webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance = (ctx) => {\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\n    };\n  \n  var webgl_enable_EXT_polygon_offset_clamp = (ctx) =>\n      !!(ctx.extPolygonOffsetClamp = ctx.getExtension('EXT_polygon_offset_clamp'));\n  \n  var webgl_enable_EXT_clip_control = (ctx) =>\n      !!(ctx.extClipControl = ctx.getExtension('EXT_clip_control'));\n  \n  var webgl_enable_WEBGL_polygon_mode = (ctx) =>\n      !!(ctx.webglPolygonMode = ctx.getExtension('WEBGL_polygon_mode'));\n  \n  var webgl_enable_WEBGL_multi_draw = (ctx) =>\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\n      !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\n  \n  var getEmscriptenSupportedExtensions = (ctx) => {\n      // Restrict the list of advertised extensions to those that we actually\n      // support.\n      var supportedExtensions = [\n        // WebGL 2 extensions\n        'EXT_color_buffer_float',\n        'EXT_conservative_depth',\n        'EXT_disjoint_timer_query_webgl2',\n        'EXT_texture_norm16',\n        'NV_shader_noperspective_interpolation',\n        'WEBGL_clip_cull_distance',\n        // WebGL 1 and WebGL 2 extensions\n        'EXT_clip_control',\n        'EXT_color_buffer_half_float',\n        'EXT_depth_clamp',\n        'EXT_float_blend',\n        'EXT_polygon_offset_clamp',\n        'EXT_texture_compression_bptc',\n        'EXT_texture_compression_rgtc',\n        'EXT_texture_filter_anisotropic',\n        'KHR_parallel_shader_compile',\n        'OES_texture_float_linear',\n        'WEBGL_blend_func_extended',\n        'WEBGL_compressed_texture_astc',\n        'WEBGL_compressed_texture_etc',\n        'WEBGL_compressed_texture_etc1',\n        'WEBGL_compressed_texture_s3tc',\n        'WEBGL_compressed_texture_s3tc_srgb',\n        'WEBGL_debug_renderer_info',\n        'WEBGL_debug_shaders',\n        'WEBGL_lose_context',\n        'WEBGL_multi_draw',\n        'WEBGL_polygon_mode'\n      ];\n      // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n      return (ctx.getSupportedExtensions() || []).filter(ext => supportedExtensions.includes(ext));\n    };\n  \n  \n  var GL = {\n  counter:1,\n  buffers:[],\n  programs:[],\n  framebuffers:[],\n  renderbuffers:[],\n  textures:[],\n  shaders:[],\n  vaos:[],\n  contexts:[],\n  offscreenCanvases:{\n  },\n  queries:[],\n  samplers:[],\n  transformFeedbacks:[],\n  syncs:[],\n  stringCache:{\n  },\n  stringiCache:{\n  },\n  unpackAlignment:4,\n  unpackRowLength:0,\n  recordError:(errorCode) => {\n        if (!GL.lastError) {\n          GL.lastError = errorCode;\n        }\n      },\n  getNewId:(table) => {\n        var ret = GL.counter++;\n        for (var i = table.length; i < ret; i++) {\n          table[i] = null;\n        }\n        return ret;\n      },\n  genObject:(n, buffers, createFunction, objectTable\n        ) => {\n        for (var i = 0; i < n; i++) {\n          var buffer = GLctx[createFunction]();\n          var id = buffer && GL.getNewId(objectTable);\n          if (buffer) {\n            buffer.name = id;\n            objectTable[id] = buffer;\n          } else {\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n          }\n          HEAP32[(((buffers)+(i*4))>>2)] = id;\n        }\n      },\n  getSource:(shader, count, string, length) => {\n        var source = '';\n        for (var i = 0; i < count; ++i) {\n          var len = length ? HEAPU32[(((length)+(i*4))>>2)] : undefined;\n          source += UTF8ToString(HEAPU32[(((string)+(i*4))>>2)], len);\n        }\n        return source;\n      },\n  createContext:(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) => {\n  \n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL\n        // context on a canvas, calling .getContext() will always return that\n        // context independent of which 'webgl' or 'webgl2'\n        // context version was passed. See:\n        //   https://bugs.webkit.org/show_bug.cgi?id=222758\n        // and:\n        //   https://github.com/emscripten-core/emscripten/issues/13295.\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari\n        // version field in above check.\n        if (!canvas.getContextSafariWebGL2Fixed) {\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\n          function fixedGetContext(ver, attrs) {\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\n          }\n          canvas.getContext = fixedGetContext;\n        }\n  \n        var ctx = canvas.getContext(\"webgl2\", webGLContextAttributes);\n  \n        if (!ctx) return 0;\n  \n        var handle = GL.registerContext(ctx, webGLContextAttributes);\n  \n        return handle;\n      },\n  registerContext:(ctx, webGLContextAttributes) => {\n        // without pthreads a context is just an integer ID\n        var handle = GL.getNewId(GL.contexts);\n  \n        var context = {\n          handle,\n          attributes: webGLContextAttributes,\n          version: webGLContextAttributes.majorVersion,\n          GLctx: ctx\n        };\n  \n        // Store the created context object so that we can access the context\n        // given a canvas without having to pass the parameters again.\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\n        GL.contexts[handle] = context;\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\n          GL.initExtensions(context);\n        }\n  \n        return handle;\n      },\n  makeContextCurrent:(contextHandle) => {\n  \n        // Active Emscripten GL layer context object.\n        GL.currentContext = GL.contexts[contextHandle];\n        // Active WebGL context object.\n        Module['ctx'] = GLctx = GL.currentContext?.GLctx;\n        return !(contextHandle && !GLctx);\n      },\n  getContext:(contextHandle) => {\n        return GL.contexts[contextHandle];\n      },\n  deleteContext:(contextHandle) => {\n        if (GL.currentContext === GL.contexts[contextHandle]) {\n          GL.currentContext = null;\n        }\n        if (typeof JSEvents == 'object') {\n          // Release all JS event handlers on the DOM element that the GL context is\n          // associated with since the context is now deleted.\n          JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\n        }\n        // Make sure the canvas object no longer refers to the context object so\n        // there are no GC surprises.\n        if (GL.contexts[contextHandle]?.GLctx.canvas) {\n          GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined;\n        }\n        GL.contexts[contextHandle] = null;\n      },\n  initExtensions:(context) => {\n        // If this function is called without a specific context object, init the\n        // extensions of the currently active context.\n        context ||= GL.currentContext;\n  \n        if (context.initExtensionsDone) return;\n        context.initExtensionsDone = true;\n  \n        var GLctx = context.GLctx;\n  \n        // Detect the presence of a few extensions manually, ction GL interop\n        // layer itself will need to know if they exist.\n  \n        // Extensions that are available in both WebGL 1 and WebGL 2\n        webgl_enable_WEBGL_multi_draw(GLctx);\n        webgl_enable_EXT_polygon_offset_clamp(GLctx);\n        webgl_enable_EXT_clip_control(GLctx);\n        webgl_enable_WEBGL_polygon_mode(GLctx);\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\n  \n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\n        // that's based on core APIs, and exposes only the queryCounterEXT()\n        // entrypoint.\n        if (context.version >= 2) {\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\n        }\n  \n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\n        {\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\n        }\n  \n        getEmscriptenSupportedExtensions(GLctx).forEach((ext) => {\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders\n          // are not enabled by default.\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\n            // Call .getExtension() to enable that extension permanently.\n            GLctx.getExtension(ext);\n          }\n        });\n      },\n  };\n  \n  var _eglCreateContext = (display, config, hmm, contextAttribs) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n  \n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\n      var glesContextVersion = 1;\n      for (;;) {\n        var param = HEAP32[((contextAttribs)>>2)];\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\n        } else if (param == 0x3038 /*EGL_NONE*/) {\n          break;\n        } else {\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\n          return 0;\n        }\n        contextAttribs += 8;\n      }\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0; /* EGL_NO_CONTEXT */\n      }\n  \n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\n      EGL.contextAttributes.minorVersion = 0;\n  \n      EGL.context = GL.createContext(Browser.getCanvas(), EGL.contextAttributes);\n  \n      if (EGL.context != 0) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n  \n        // Run callbacks so that GL emulation works\n        GL.makeContextCurrent(EGL.context);\n        Browser.useWebGL = true;\n        Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\n  \n        // Note: This function only creates a context, but it shall not make it active.\n        GL.makeContextCurrent(null);\n        return 62004;\n      } else {\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\n        return 0; /* EGL_NO_CONTEXT */\n      }\n    };\n\n  var _eglCreateWindowSurface = (display, config, win, attrib_list) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      // TODO: Examine attrib_list! Parameters that can be present there are:\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\n      // - EGL_VG_COLORSPACE (can't be set)\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 62006; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  \n  var _eglDestroyContext = (display, context) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (context != 62004) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n  \n      GL.deleteContext(EGL.context);\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.currentContext == context) {\n        EGL.currentContext = 0;\n      }\n      return 1 /* EGL_TRUE */;\n    };\n\n  var _eglDestroySurface = (display, surface) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 1;\n      }\n      if (EGL.currentReadSurface == surface) {\n        EGL.currentReadSurface = 0;\n      }\n      if (EGL.currentDrawSurface == surface) {\n        EGL.currentDrawSurface = 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  var _eglGetConfigAttrib = (display, config, attribute, value) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      if (!value) {\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n        return 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      switch (attribute) {\n      case 0x3020: // EGL_BUFFER_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\n        return 1;\n      case 0x3021: // EGL_ALPHA_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\n        return 1;\n      case 0x3022: // EGL_BLUE_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3023: // EGL_GREEN_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3024: // EGL_RED_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3025: // EGL_DEPTH_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\n        return 1;\n      case 0x3026: // EGL_STENCIL_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\n        return 1;\n      case 0x3027: // EGL_CONFIG_CAVEAT\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3028: // EGL_CONFIG_ID\n        HEAP32[((value)>>2)] = 62002;\n        return 1;\n      case 0x3029: // EGL_LEVEL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\n        HEAP32[((value)>>2)] = 16777216;\n        return 1;\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302D: // EGL_NATIVE_RENDERABLE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3031: // EGL_SAMPLES\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\n        return 1;\n      case 0x3032: // EGL_SAMPLE_BUFFERS\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\n        return 1;\n      case 0x3033: // EGL_SURFACE_TYPE\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3034: // EGL_TRANSPARENT_TYPE\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\n        HEAP32[((value)>>2)] = -1;\n        return 1;\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 1;\n        return 1;\n      case 0x303D: // EGL_LUMINANCE_SIZE\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\n        HEAP32[((value)>>2)] = 0x308E;\n        return 1;\n      case 0x3040: // EGL_RENDERABLE_TYPE\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3042: // EGL_CONFORMANT\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      default:\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\n        return 0;\n      }\n    };\n\n  var _eglGetDisplay = (nativeDisplayType) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      // Emscripten EGL implementation \"emulates\" X11, and eglGetDisplay is\n      // expected to accept/receive a pointer to an X11 Display object (or\n      // EGL_DEFAULT_DISPLAY).\n      if (nativeDisplayType != 0 /* EGL_DEFAULT_DISPLAY */ && nativeDisplayType != 1 /* see library_xlib.js */) {\n        return 0; // EGL_NO_DISPLAY\n      }\n      return 62000;\n    };\n\n  var _eglGetError = () => EGL.errorCode;\n\n  var _eglInitialize = (display, majorVersion, minorVersion) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (majorVersion) {\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\n      }\n      if (minorVersion) {\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\n      }\n      EGL.defaultDisplayInitialized = true;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  var _eglMakeCurrent = (display, draw, read, context) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0 /* EGL_FALSE */;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      if (context != 0 && context != 62004) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 0;\n      }\n  \n      GL.makeContextCurrent(context ? EGL.context : null);\n  \n      EGL.currentContext = context;\n      EGL.currentDrawSurface = draw;\n      EGL.currentReadSurface = read;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1 /* EGL_TRUE */;\n    };\n\n  \n  \n  var stringToNewUTF8 = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8(str, ret, size);\n      return ret;\n    };\n  \n  var _eglQueryString = (display, name) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\n      var ret;\n      switch (name) {\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\n        default:\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n      }\n      EGL.stringCache[name] = ret;\n      return ret;\n    };\n\n  \n  var _eglSwapBuffers = (dpy, surface) => {\n  \n      if (!EGL.defaultDisplayInitialized) {\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\n      } else if (!GLctx) {\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\n      } else if (GLctx.isContextLost()) {\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\n      } else {\n        // According to documentation this does an implicit flush.\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\n        // the flush was removed since this _may_ result in slowing code down.\n        //_glFlush();\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1 /* EGL_TRUE */;\n      }\n      return 0 /* EGL_FALSE */;\n    };\n\n  \n  \n  \n  \n    /**\n     * @param {number=} arg\n     * @param {boolean=} noSetTiming\n     */\n  var setMainLoop = (iterFunc, fps, simulateInfiniteLoop, arg, noSetTiming) => {\n      MainLoop.func = iterFunc;\n      MainLoop.arg = arg;\n  \n      var thisMainLoopId = MainLoop.currentlyRunningMainloop;\n      function checkIsRunning() {\n        if (thisMainLoopId < MainLoop.currentlyRunningMainloop) {\n          \n          maybeExit();\n          return false;\n        }\n        return true;\n      }\n  \n      // We create the loop runner here but it is not actually running until\n      // _emscripten_set_main_loop_timing is called (which might happen a\n      // later time).  This member signifies that the current runner has not\n      // yet been started so that we can call runtimeKeepalivePush when it\n      // gets it timing set for the first time.\n      MainLoop.running = false;\n      MainLoop.runner = function MainLoop_runner() {\n        if (ABORT) return;\n        if (MainLoop.queue.length > 0) {\n          var start = Date.now();\n          var blocker = MainLoop.queue.shift();\n          blocker.func(blocker.arg);\n          if (MainLoop.remainingBlockers) {\n            var remaining = MainLoop.remainingBlockers;\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\n            if (blocker.counted) {\n              MainLoop.remainingBlockers = next;\n            } else {\n              // not counted, but move the progress along a tiny bit\n              next = next + 0.5; // do not steal all the next one's progress\n              MainLoop.remainingBlockers = (8*remaining + next)/9;\n            }\n          }\n          MainLoop.updateStatus();\n  \n          // catches pause/resume main loop from blocker execution\n          if (!checkIsRunning()) return;\n  \n          setTimeout(MainLoop.runner, 0);\n          return;\n        }\n  \n        // catch pauses from non-main loop sources\n        if (!checkIsRunning()) return;\n  \n        // Implement very basic swap interval control\n        MainLoop.currentFrameNumber = MainLoop.currentFrameNumber + 1 | 0;\n        if (MainLoop.timingMode == 1 && MainLoop.timingValue > 1 && MainLoop.currentFrameNumber % MainLoop.timingValue != 0) {\n          // Not the scheduled time to render this frame - skip.\n          MainLoop.scheduler();\n          return;\n        } else if (MainLoop.timingMode == 0) {\n          MainLoop.tickStartTime = _emscripten_get_now();\n        }\n  \n        MainLoop.runIter(iterFunc);\n  \n        // catch pauses from the main loop itself\n        if (!checkIsRunning()) return;\n  \n        MainLoop.scheduler();\n      }\n  \n      if (!noSetTiming) {\n        if (fps > 0) {\n          _emscripten_set_main_loop_timing(0, 1000.0 / fps);\n        } else {\n          // Do rAF by rendering each frame (no decimating)\n          _emscripten_set_main_loop_timing(1, 1);\n        }\n  \n        MainLoop.scheduler();\n      }\n  \n      if (simulateInfiniteLoop) {\n        throw 'unwind';\n      }\n    };\n  \n  \n  var MainLoop = {\n  running:false,\n  scheduler:null,\n  method:\"\",\n  currentlyRunningMainloop:0,\n  func:null,\n  arg:0,\n  timingMode:0,\n  timingValue:0,\n  currentFrameNumber:0,\n  queue:[],\n  preMainLoop:[],\n  postMainLoop:[],\n  pause() {\n        MainLoop.scheduler = null;\n        // Incrementing this signals the previous main loop that it's now become old, and it must return.\n        MainLoop.currentlyRunningMainloop++;\n      },\n  resume() {\n        MainLoop.currentlyRunningMainloop++;\n        var timingMode = MainLoop.timingMode;\n        var timingValue = MainLoop.timingValue;\n        var func = MainLoop.func;\n        MainLoop.func = null;\n        // do not set timing and call scheduler, we will do it on the next lines\n        setMainLoop(func, 0, false, MainLoop.arg, true);\n        _emscripten_set_main_loop_timing(timingMode, timingValue);\n        MainLoop.scheduler();\n      },\n  updateStatus() {\n        if (Module['setStatus']) {\n          var message = Module['statusMessage'] || 'Please wait...';\n          var remaining = MainLoop.remainingBlockers ?? 0;\n          var expected = MainLoop.expectedBlockers ?? 0;\n          if (remaining) {\n            if (remaining < expected) {\n              Module['setStatus'](`{message} ({expected - remaining}/{expected})`);\n            } else {\n              Module['setStatus'](message);\n            }\n          } else {\n            Module['setStatus']('');\n          }\n        }\n      },\n  init() {\n        Module['preMainLoop'] && MainLoop.preMainLoop.push(Module['preMainLoop']);\n        Module['postMainLoop'] && MainLoop.postMainLoop.push(Module['postMainLoop']);\n      },\n  runIter(func) {\n        if (ABORT) return;\n        for (var pre of MainLoop.preMainLoop) {\n          if (pre() === false) {\n            return; // |return false| skips a frame\n          }\n        }\n        callUserCallback(func);\n        for (var post of MainLoop.postMainLoop) {\n          post();\n        }\n      },\n  nextRAF:0,\n  fakeRequestAnimationFrame(func) {\n        // try to keep 60fps between calls to here\n        var now = Date.now();\n        if (MainLoop.nextRAF === 0) {\n          MainLoop.nextRAF = now + 1000/60;\n        } else {\n          while (now + 2 >= MainLoop.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\n            MainLoop.nextRAF += 1000/60;\n          }\n        }\n        var delay = Math.max(MainLoop.nextRAF - now, 0);\n        setTimeout(func, delay);\n      },\n  requestAnimationFrame(func) {\n        if (typeof requestAnimationFrame == 'function') {\n          requestAnimationFrame(func);\n          return;\n        }\n        var RAF = MainLoop.fakeRequestAnimationFrame;\n        RAF(func);\n      },\n  };\n  var _emscripten_set_main_loop_timing = (mode, value) => {\n      MainLoop.timingMode = mode;\n      MainLoop.timingValue = value;\n  \n      if (!MainLoop.func) {\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\n      }\n  \n      if (!MainLoop.running) {\n        \n        MainLoop.running = true;\n      }\n      if (mode == 0) {\n        MainLoop.scheduler = function MainLoop_scheduler_setTimeout() {\n          var timeUntilNextTick = Math.max(0, MainLoop.tickStartTime + value - _emscripten_get_now())|0;\n          setTimeout(MainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\n        };\n        MainLoop.method = 'timeout';\n      } else if (mode == 1) {\n        MainLoop.scheduler = function MainLoop_scheduler_rAF() {\n          MainLoop.requestAnimationFrame(MainLoop.runner);\n        };\n        MainLoop.method = 'rAF';\n      } else if (mode == 2) {\n        if (typeof MainLoop.setImmediate == 'undefined') {\n          if (typeof setImmediate == 'undefined') {\n            // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\n            var setImmediates = [];\n            var emscriptenMainLoopMessageId = 'setimmediate';\n            /** @param {Event} event */\n            var MainLoop_setImmediate_messageHandler = (event) => {\n              // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\n              // so check for both cases.\n              if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\n                event.stopPropagation();\n                setImmediates.shift()();\n              }\n            };\n            addEventListener(\"message\", MainLoop_setImmediate_messageHandler, true);\n            MainLoop.setImmediate = /** @type{function(function(): ?, ...?): number} */((func) => {\n              setImmediates.push(func);\n              if (ENVIRONMENT_IS_WORKER) {\n                Module['setImmediates'] ??= [];\n                Module['setImmediates'].push(func);\n                postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\n              } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\n            });\n          } else {\n            MainLoop.setImmediate = setImmediate;\n          }\n        }\n        MainLoop.scheduler = function MainLoop_scheduler_setImmediate() {\n          MainLoop.setImmediate(MainLoop.runner);\n        };\n        MainLoop.method = 'immediate';\n      }\n      return 0;\n    };\n  \n  var _eglSwapInterval = (display, interval) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (interval == 0) _emscripten_set_main_loop_timing(0, 0);\n      else _emscripten_set_main_loop_timing(1, interval);\n  \n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var _eglTerminate = (display) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      EGL.currentContext = 0;\n      EGL.currentReadSurface = 0;\n      EGL.currentDrawSurface = 0;\n      EGL.defaultDisplayInitialized = false;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  /** @suppress {duplicate } */\n  var _eglWaitClient = () => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n  var _eglWaitGL = _eglWaitClient;\n\n  var _eglWaitNative = (nativeEngineId) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var readEmAsmArgsArray = [];\n  var readEmAsmArgs = (sigPtr, buf) => {\n      readEmAsmArgsArray.length = 0;\n      var ch;\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\n      // index into HEAP32.\n      while (ch = HEAPU8[sigPtr++]) {\n        // Floats are always passed as doubles, so all types except for 'i'\n        // are 8 bytes and require alignment.\n        var wide = (ch != 105);\n        wide &= (ch != 112);\n        buf += wide && (buf % 8) ? 4 : 0;\n        readEmAsmArgsArray.push(\n          // Special case for pointers under wasm64 or CAN_ADDRESS_2GB mode.\n          ch == 112 ? HEAPU32[((buf)>>2)] :\n          ch == 106 ? HEAP64[((buf)>>3)] :\n          ch == 105 ?\n            HEAP32[((buf)>>2)] :\n            HEAPF64[((buf)>>3)]\n        );\n        buf += wide ? 8 : 4;\n      }\n      return readEmAsmArgsArray;\n    };\n  var runEmAsmFunction = (code, sigPtr, argbuf) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      return ASM_CONSTS[code](...args);\n    };\n  var _emscripten_asm_const_int = (code, sigPtr, argbuf) => {\n      return runEmAsmFunction(code, sigPtr, argbuf);\n    };\n\n  var runMainThreadEmAsm = (emAsmAddr, sigPtr, argbuf, sync) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      return ASM_CONSTS[emAsmAddr](...args);\n    };\n  var _emscripten_asm_const_int_sync_on_main_thread = (emAsmAddr, sigPtr, argbuf) => runMainThreadEmAsm(emAsmAddr, sigPtr, argbuf, 1);\n\n  var _emscripten_asm_const_ptr_sync_on_main_thread = (emAsmAddr, sigPtr, argbuf) => runMainThreadEmAsm(emAsmAddr, sigPtr, argbuf, 1);\n\n\n  var onExits = [];\n  var addOnExit = (cb) => onExits.push(cb);\n  var JSEvents = {\n  memcpy(target, src, size) {\n        HEAP8.set(HEAP8.subarray(src, src + size), target);\n      },\n  removeAllEventListeners() {\n        while (JSEvents.eventHandlers.length) {\n          JSEvents._removeHandler(JSEvents.eventHandlers.length - 1);\n        }\n        JSEvents.deferredCalls = [];\n      },\n  inEventHandler:0,\n  deferredCalls:[],\n  deferCall(targetFunction, precedence, argsList) {\n        function arraysHaveEqualContent(arrA, arrB) {\n          if (arrA.length != arrB.length) return false;\n  \n          for (var i in arrA) {\n            if (arrA[i] != arrB[i]) return false;\n          }\n          return true;\n        }\n        // Test if the given call was already queued, and if so, don't add it again.\n        for (var call of JSEvents.deferredCalls) {\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n            return;\n          }\n        }\n        JSEvents.deferredCalls.push({\n          targetFunction,\n          precedence,\n          argsList\n        });\n  \n        JSEvents.deferredCalls.sort((x,y) => x.precedence < y.precedence);\n      },\n  removeDeferredCalls(targetFunction) {\n        JSEvents.deferredCalls = JSEvents.deferredCalls.filter((call) => call.targetFunction != targetFunction);\n      },\n  canPerformEventHandlerRequests() {\n        if (navigator.userActivation) {\n          // Verify against transient activation status from UserActivation API\n          // whether it is possible to perform a request here without needing to defer. See\n          // https://developer.mozilla.org/en-US/docs/Web/Security/User_activation#transient_activation\n          // and https://caniuse.com/mdn-api_useractivation\n          // At the time of writing, Firefox does not support this API: https://bugzilla.mozilla.org/show_bug.cgi?id=1791079\n          return navigator.userActivation.isActive;\n        }\n  \n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n      },\n  runDeferredCalls() {\n        if (!JSEvents.canPerformEventHandlerRequests()) {\n          return;\n        }\n        var deferredCalls = JSEvents.deferredCalls;\n        JSEvents.deferredCalls = [];\n        for (var call of deferredCalls) {\n          call.targetFunction(...call.argsList);\n        }\n      },\n  eventHandlers:[],\n  removeAllHandlersOnTarget:(target, eventTypeString) => {\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n          if (JSEvents.eventHandlers[i].target == target &&\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n             JSEvents._removeHandler(i--);\n           }\n        }\n      },\n  _removeHandler(i) {\n        var h = JSEvents.eventHandlers[i];\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n        JSEvents.eventHandlers.splice(i, 1);\n      },\n  registerOrRemoveHandler(eventHandler) {\n        if (!eventHandler.target) {\n          return -4;\n        }\n        if (eventHandler.callbackfunc) {\n          eventHandler.eventListenerFunc = function(event) {\n            // Increment nesting count for the event handler.\n            ++JSEvents.inEventHandler;\n            JSEvents.currentEventHandler = eventHandler;\n            // Process any old deferred calls the user has placed.\n            JSEvents.runDeferredCalls();\n            // Process the actual event, calls back to user C code handler.\n            eventHandler.handlerFunc(event);\n            // Process any new deferred calls that were placed right now from this event handler.\n            JSEvents.runDeferredCalls();\n            // Out of event handler - restore nesting count.\n            --JSEvents.inEventHandler;\n          };\n  \n          eventHandler.target.addEventListener(eventHandler.eventTypeString,\n                                               eventHandler.eventListenerFunc,\n                                               eventHandler.useCapture);\n          JSEvents.eventHandlers.push(eventHandler);\n        } else {\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n               JSEvents._removeHandler(i--);\n             }\n          }\n        }\n        return 0;\n      },\n  getNodeNameForTarget(target) {\n        if (!target) return '';\n        if (target == window) return '#window';\n        if (target == screen) return '#screen';\n        return target?.nodeName || '';\n      },\n  fullscreenEnabled() {\n        return document.fullscreenEnabled\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\n        || document.webkitFullscreenEnabled\n         ;\n      },\n  };\n  \n  var hideEverythingExceptGivenElement = (onlyVisibleElement) => {\n      var child = onlyVisibleElement;\n      var parent = child.parentNode;\n      var hiddenElements = [];\n      while (child != document.body) {\n        var children = parent.children;\n        for (var currChild of children) {\n          if (currChild != child) {\n            hiddenElements.push({ node: currChild, displayState: currChild.style.display });\n            currChild.style.display = 'none';\n          }\n        }\n        child = parent;\n        parent = parent.parentNode;\n      }\n      return hiddenElements;\n    };\n  \n  var restoreOldWindowedStyle = null;\n  \n  var restoreHiddenElements = (hiddenElements) => {\n      for (var elem of hiddenElements) {\n        elem.node.style.display = elem.displayState;\n      }\n    };\n  \n  var currentFullscreenStrategy = {\n  };\n  \n  var setLetterbox = (element, topBottom, leftRight) => {\n      // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\n      element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\n      element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\n    };\n  \n  \n  var maybeCStringToJsString = (cString) => {\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\n      // In other words, if cString > 2 then it's a pointer to a valid place in\n      // memory, and points to a C string.\n      return cString > 2 ? UTF8ToString(cString) : cString;\n    };\n  \n  /** @type {Object} */\n  var specialHTMLTargets = [0, document, window];\n  /** @suppress {duplicate } */\n  var findEventTarget = (target) => {\n      target = maybeCStringToJsString(target);\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\n      return domElement;\n    };\n  var findCanvasEventTarget = findEventTarget;\n  var _emscripten_get_canvas_element_size = (target, width, height) => {\n      var canvas = findCanvasEventTarget(target);\n      if (!canvas) return -4;\n      HEAP32[((width)>>2)] = canvas.width;\n      HEAP32[((height)>>2)] = canvas.height;\n    };\n  \n  \n  \n  \n  \n  var stackAlloc = (sz) => __emscripten_stack_alloc(sz);\n  var stringToUTF8OnStack = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    };\n  var getCanvasElementSize = (target) => {\n      var sp = stackSave();\n      var w = stackAlloc(8);\n      var h = w + 4;\n  \n      var targetInt = stringToUTF8OnStack(target.id);\n      var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\n      var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\n      stackRestore(sp);\n      return size;\n    };\n  \n  var _emscripten_set_canvas_element_size = (target, width, height) => {\n      var canvas = findCanvasEventTarget(target);\n      if (!canvas) return -4;\n      canvas.width = width;\n      canvas.height = height;\n      return 0;\n    };\n  \n  \n  \n  var setCanvasElementSize = (target, width, height) => {\n      if (!target.controlTransferredOffscreen) {\n        target.width = width;\n        target.height = height;\n      } else {\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\n        var sp = stackSave();\n        var targetInt = stringToUTF8OnStack(target.id);\n        _emscripten_set_canvas_element_size(targetInt, width, height);\n        stackRestore(sp);\n      }\n    };\n  \n  /** @suppress {checkTypes} */\n  var jstoi_q = (str) => parseInt(str);\n  var softFullscreenResizeWebGLRenderTarget = () => {\n      var dpr = devicePixelRatio;\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\n      var w = screenWidth;\n      var h = screenHeight;\n      var canvas = currentFullscreenStrategy.target;\n      var canvasSize = getCanvasElementSize(canvas);\n      var x = canvasSize[0];\n      var y = canvasSize[1];\n      var topMargin;\n  \n      if (inAspectRatioFixedFullscreenMode) {\n        if (w*y < x*h) h = (w * y / x) | 0;\n        else if (w*y > x*h) w = (h * x / y) | 0;\n        topMargin = ((screenHeight - h) / 2) | 0;\n      }\n  \n      if (inPixelPerfectFullscreenMode) {\n        setCanvasElementSize(canvas, w, h);\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\n      }\n  \n      // Back to CSS pixels.\n      if (inHiDPIFullscreenMode) {\n        topMargin /= dpr;\n        w /= dpr;\n        h /= dpr;\n        // Round to nearest 4 digits of precision.\n        w = Math.round(w*1e4)/1e4;\n        h = Math.round(h*1e4)/1e4;\n        topMargin = Math.round(topMargin*1e4)/1e4;\n      }\n  \n      if (inCenteredWithoutScalingFullscreenMode) {\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\n        setLetterbox(canvas, t, b);\n      } else {\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        var b = (innerWidth - w) / 2;\n        setLetterbox(canvas, topMargin, b);\n      }\n  \n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii(currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\n      }\n    };\n  \n  \n  \n  var registerRestoreOldStyle = (canvas) => {\n      var canvasSize = getCanvasElementSize(canvas);\n      var oldWidth = canvasSize[0];\n      var oldHeight = canvasSize[1];\n      var oldCssWidth = canvas.style.width;\n      var oldCssHeight = canvas.style.height;\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\n      // Firefox always has black background color.\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\n      var oldPaddingRight = canvas.style.paddingRight;\n      var oldPaddingTop = canvas.style.paddingTop;\n      var oldPaddingBottom = canvas.style.paddingBottom;\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\n      var oldMarginRight = canvas.style.marginRight;\n      var oldMarginTop = canvas.style.marginTop;\n      var oldMarginBottom = canvas.style.marginBottom;\n      var oldDocumentBodyMargin = document.body.style.margin;\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\n      var oldDocumentScroll = document.body.scroll; // IE\n      var oldImageRendering = canvas.style.imageRendering;\n  \n      function restoreOldStyle() {\n        var fullscreenElement = document.fullscreenElement\n          || document.webkitFullscreenElement\n          ;\n        if (!fullscreenElement) {\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\n  \n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\n  \n          setCanvasElementSize(canvas, oldWidth, oldHeight);\n  \n          canvas.style.width = oldCssWidth;\n          canvas.style.height = oldCssHeight;\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\n          canvas.style.paddingRight = oldPaddingRight;\n          canvas.style.paddingTop = oldPaddingTop;\n          canvas.style.paddingBottom = oldPaddingBottom;\n          canvas.style.marginLeft = oldMarginLeft; // IE11\n          canvas.style.marginRight = oldMarginRight;\n          canvas.style.marginTop = oldMarginTop;\n          canvas.style.marginBottom = oldMarginBottom;\n          document.body.style.margin = oldDocumentBodyMargin;\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\n          document.body.scroll = oldDocumentScroll; // IE\n          canvas.style.imageRendering = oldImageRendering;\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\n  \n          if (currentFullscreenStrategy.canvasResizedCallback) {\n            ((a1, a2, a3) => dynCall_iiii(currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\n          }\n        }\n      }\n      document.addEventListener('fullscreenchange', restoreOldStyle);\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\n      return restoreOldStyle;\n    };\n  \n  \n  \n  \n  var getBoundingClientRect = (e) => specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\n  var JSEvents_resizeCanvasForFullscreen = (target, strategy) => {\n      var restoreOldStyle = registerRestoreOldStyle(target);\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\n      var rect = getBoundingClientRect(target);\n      var windowedCssWidth = rect.width;\n      var windowedCssHeight = rect.height;\n      var canvasSize = getCanvasElementSize(target);\n      var windowedRttWidth = canvasSize[0];\n      var windowedRttHeight = canvasSize[1];\n  \n      if (strategy.scaleMode == 3) {\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\n        cssWidth = windowedCssWidth;\n        cssHeight = windowedCssHeight;\n      } else if (strategy.scaleMode == 2) {\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\n          cssHeight = desiredCssHeight;\n        } else {\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\n          cssWidth = desiredCssWidth;\n        }\n      }\n  \n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\n      // padding a default white color. Do it only if user has not customized their own background color.\n      target.style.backgroundColor ||= 'black';\n      // IE11 does the same, but requires the color to be set in the document body.\n      document.body.style.backgroundColor ||= 'black'; // IE11\n      // Firefox always shows black letterboxes independent of style color.\n  \n      target.style.width = cssWidth + 'px';\n      target.style.height = cssHeight + 'px';\n  \n      if (strategy.filteringMode == 1) {\n        target.style.imageRendering = 'optimizeSpeed';\n        target.style.imageRendering = '-moz-crisp-edges';\n        target.style.imageRendering = '-o-crisp-edges';\n        target.style.imageRendering = '-webkit-optimize-contrast';\n        target.style.imageRendering = 'optimize-contrast';\n        target.style.imageRendering = 'crisp-edges';\n        target.style.imageRendering = 'pixelated';\n      }\n  \n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\n      if (strategy.canvasResolutionScaleMode != 0) {\n        var newWidth = (cssWidth * dpiScale)|0;\n        var newHeight = (cssHeight * dpiScale)|0;\n        setCanvasElementSize(target, newWidth, newHeight);\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\n      }\n      return restoreOldStyle;\n    };\n  \n  var _emscripten_enter_soft_fullscreen = (target, fullscreenStrategy) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      var strategy = {\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\n          target,\n          softFullscreen: true\n      };\n  \n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\n  \n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\n      document.body.scroll = \"no\"; // IE11\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\n  \n      var hiddenElements = hideEverythingExceptGivenElement(target);\n  \n      function restoreWindowedState() {\n        restoreOldStyle();\n        restoreHiddenElements(hiddenElements);\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\n        if (strategy.canvasResizedCallback) {\n          ((a1, a2, a3) => dynCall_iiii(strategy.canvasResizedCallback, a1, a2, a3))(37, 0, strategy.canvasResizedCallbackUserData);\n        }\n        currentFullscreenStrategy = 0;\n      }\n      restoreOldWindowedStyle = restoreWindowedState;\n      currentFullscreenStrategy = strategy;\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\n  \n      // Inform the caller that the canvas size has changed.\n      if (strategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii(strategy.canvasResizedCallback, a1, a2, a3))(37, 0, strategy.canvasResizedCallbackUserData);\n      }\n  \n      return 0;\n    };\n\n  var _emscripten_err = (str) => err(UTF8ToString(str));\n\n  \n  \n  \n  var JSEvents_requestFullscreen = (target, strategy) => {\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\n      }\n  \n      if (target.requestFullscreen) {\n        target.requestFullscreen();\n      } else if (target.webkitRequestFullscreen) {\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else {\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\n      }\n  \n      currentFullscreenStrategy = strategy;\n  \n      if (strategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii(strategy.canvasResizedCallback, a1, a2, a3))(37, 0, strategy.canvasResizedCallbackUserData);\n      }\n  \n      return 0;\n    };\n  var _emscripten_exit_fullscreen = () => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      // Make sure no queued up calls will fire after this.\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\n  \n      var d = specialHTMLTargets[1];\n      if (d.exitFullscreen) {\n        d.fullscreenElement && d.exitFullscreen();\n      } else if (d.webkitExitFullscreen) {\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\n      } else {\n        return -1;\n      }\n  \n      return 0;\n    };\n\n  \n  var requestPointerLock = (target) => {\n      if (target.requestPointerLock) {\n        target.requestPointerLock();\n      } else {\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\n        // or if the whole browser just doesn't support the feature.\n        if (document.body.requestPointerLock) {\n          return -3;\n        }\n        return -1;\n      }\n      return 0;\n    };\n  var _emscripten_exit_pointerlock = () => {\n      // Make sure no queued up calls will fire after this.\n      JSEvents.removeDeferredCalls(requestPointerLock);\n      if (!document.exitPointerLock) return -1;\n      document.exitPointerLock();\n      return 0;\n    };\n\n  var _emscripten_exit_soft_fullscreen = () => {\n      restoreOldWindowedStyle?.();\n      restoreOldWindowedStyle = null;\n  \n      return 0;\n    };\n\n  var _emscripten_get_device_pixel_ratio = () => {\n      return devicePixelRatio;\n    };\n\n  \n  var _emscripten_get_element_css_size = (target, width, height) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      var rect = getBoundingClientRect(target);\n      HEAPF64[((width)>>3)] = rect.width;\n      HEAPF64[((height)>>3)] = rect.height;\n  \n      return 0;\n    };\n\n  \n  var fillGamepadEventData = (eventStruct, e) => {\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\n      for (var i = 0; i < e.axes.length; ++i) {\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\n      }\n      for (var i = 0; i < e.buttons.length; ++i) {\n        if (typeof e.buttons[i] == 'object') {\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\n        } else {\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\n        }\n      }\n      for (var i = 0; i < e.buttons.length; ++i) {\n        if (typeof e.buttons[i] == 'object') {\n          HEAP8[(eventStruct+i)+(1040)] = e.buttons[i].pressed;\n        } else {\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\n          /** @suppress {checkTypes} */\n          HEAP8[(eventStruct+i)+(1040)] = e.buttons[i] == 1;\n        }\n      }\n      HEAP8[(eventStruct)+(1104)] = e.connected;\n      HEAP32[(((eventStruct)+(1108))>>2)] = e.index;\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\n      stringToUTF8(e.id, eventStruct + 1112, 64);\n      stringToUTF8(e.mapping, eventStruct + 1176, 64);\n    };\n  var _emscripten_get_gamepad_status = (index, gamepadState) => {\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\n  \n      // NO_DATA is returned on a Gamepad index that was removed.\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\n      // This is because gamepads must keep their original position in the array.\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\n      if (!JSEvents.lastGamepadState[index]) return -7;\n  \n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\n      return 0;\n    };\n\n\n  var _emscripten_get_num_gamepads = () => {\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\n      // Otherwise the following line will throw an exception.\n      return JSEvents.lastGamepadState.length;\n    };\n\n  var _emscripten_get_screen_size = (width, height) => {\n      HEAP32[((width)>>2)] = screen.width;\n      HEAP32[((height)>>2)] = screen.height;\n    };\n\n  /** @suppress {duplicate } */\n  var _glActiveTexture = (x0) => GLctx.activeTexture(x0);\n  var _emscripten_glActiveTexture = _glActiveTexture;\n\n  /** @suppress {duplicate } */\n  var _glAttachShader = (program, shader) => {\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glAttachShader = _glAttachShader;\n\n  /** @suppress {duplicate } */\n  var _glBeginQuery = (target, id) => {\n      GLctx.beginQuery(target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQuery = _glBeginQuery;\n\n  /** @suppress {duplicate } */\n  var _glBeginQueryEXT = (target, id) => {\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\n\n  /** @suppress {duplicate } */\n  var _glBeginTransformFeedback = (x0) => GLctx.beginTransformFeedback(x0);\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindAttribLocation = (program, index, name) => {\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\n    };\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\n\n  /** @suppress {duplicate } */\n  var _glBindBuffer = (target, buffer) => {\n  \n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2\n        // API function call when a buffer is bound to\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelPackBufferBinding = buffer;\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\n        // use a different WebGL 2 API function call when a buffer is bound to\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelUnpackBufferBinding = buffer;\n      }\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBuffer = _glBindBuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferBase = (target, index, buffer) => {\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferRange = (target, index, buffer, offset, ptrsize) => {\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\n    };\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\n\n  /** @suppress {duplicate } */\n  var _glBindFramebuffer = (target, framebuffer) => {\n  \n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\n  \n    };\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindRenderbuffer = (target, renderbuffer) => {\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindSampler = (unit, sampler) => {\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\n    };\n  var _emscripten_glBindSampler = _glBindSampler;\n\n  /** @suppress {duplicate } */\n  var _glBindTexture = (target, texture) => {\n      GLctx.bindTexture(target, GL.textures[texture]);\n    };\n  var _emscripten_glBindTexture = _glBindTexture;\n\n  /** @suppress {duplicate } */\n  var _glBindTransformFeedback = (target, id) => {\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\n    };\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glBindVertexArray = (vao) => {\n      GLctx.bindVertexArray(GL.vaos[vao]);\n    };\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindVertexArrayOES = _glBindVertexArray;\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  var _glBlendColor = (x0, x1, x2, x3) => GLctx.blendColor(x0, x1, x2, x3);\n  var _emscripten_glBlendColor = _glBlendColor;\n\n  /** @suppress {duplicate } */\n  var _glBlendEquation = (x0) => GLctx.blendEquation(x0);\n  var _emscripten_glBlendEquation = _glBlendEquation;\n\n  /** @suppress {duplicate } */\n  var _glBlendEquationSeparate = (x0, x1) => GLctx.blendEquationSeparate(x0, x1);\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\n\n  /** @suppress {duplicate } */\n  var _glBlendFunc = (x0, x1) => GLctx.blendFunc(x0, x1);\n  var _emscripten_glBlendFunc = _glBlendFunc;\n\n  /** @suppress {duplicate } */\n  var _glBlendFuncSeparate = (x0, x1, x2, x3) => GLctx.blendFuncSeparate(x0, x1, x2, x3);\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\n\n  /** @suppress {duplicate } */\n  var _glBlitFramebuffer = (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) => GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9);\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBufferData = (target, size, data, usage) => {\n  \n      if (true) {\n        // If size is zero, WebGL would interpret uploading the whole input\n        // arraybuffer (starting from given offset), which would not make sense in\n        // WebAssembly, so avoid uploading if size is zero. However we must still\n        // call bufferData to establish a backing storage of zero bytes.\n        if (data && size) {\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\n        } else {\n          GLctx.bufferData(target, size, usage);\n        }\n        return;\n      }\n    };\n  var _emscripten_glBufferData = _glBufferData;\n\n  /** @suppress {duplicate } */\n  var _glBufferSubData = (target, offset, size, data) => {\n      if (true) {\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\n        return;\n      }\n    };\n  var _emscripten_glBufferSubData = _glBufferSubData;\n\n  /** @suppress {duplicate } */\n  var _glCheckFramebufferStatus = (x0) => GLctx.checkFramebufferStatus(x0);\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\n\n  /** @suppress {duplicate } */\n  var _glClear = (x0) => GLctx.clear(x0);\n  var _emscripten_glClear = _glClear;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferfi = (x0, x1, x2, x3) => GLctx.clearBufferfi(x0, x1, x2, x3);\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferfv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, ((value)>>2));\n    };\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, ((value)>>2));\n    };\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferuiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, ((value)>>2));\n    };\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\n\n  /** @suppress {duplicate } */\n  var _glClearColor = (x0, x1, x2, x3) => GLctx.clearColor(x0, x1, x2, x3);\n  var _emscripten_glClearColor = _glClearColor;\n\n  /** @suppress {duplicate } */\n  var _glClearDepthf = (x0) => GLctx.clearDepth(x0);\n  var _emscripten_glClearDepthf = _glClearDepthf;\n\n  /** @suppress {duplicate } */\n  var _glClearStencil = (x0) => GLctx.clearStencil(x0);\n  var _emscripten_glClearStencil = _glClearStencil;\n\n  /** @suppress {duplicate } */\n  var _glClientWaitSync = (sync, flags, timeout) => {\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\n      timeout = Number(timeout);\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\n\n  /** @suppress {duplicate } */\n  var _glClipControlEXT = (origin, depth) => {\n      GLctx.extClipControl['clipControlEXT'](origin, depth);\n    };\n  var _emscripten_glClipControlEXT = _glClipControlEXT;\n\n  /** @suppress {duplicate } */\n  var _glColorMask = (red, green, blue, alpha) => {\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\n    };\n  var _emscripten_glColorMask = _glColorMask;\n\n  /** @suppress {duplicate } */\n  var _glCompileShader = (shader) => {\n      GLctx.compileShader(GL.shaders[shader]);\n    };\n  var _emscripten_glCompileShader = _glCompileShader;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage2D = (target, level, internalFormat, width, height, border, imageSize, data) => {\n      // `data` may be null here, which means \"allocate uniniitalized space but\n      // don't upload\" in GLES parlance, but `compressedTexImage2D` requires the\n      // final data parameter, so we simply pass a heap view starting at zero\n      // effectively uploading whatever happens to be near address zero.  See\n      // https://github.com/emscripten-core/emscripten/issues/19300.\n      if (true) {\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\n          return;\n        }\n        GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\n        return;\n      }\n    };\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage3D = (target, level, internalFormat, width, height, depth, border, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\n      } else {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, imageSize, data) => {\n      if (true) {\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\n          return;\n        }\n        GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\n        return;\n      }\n    };\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\n      } else {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCopyBufferSubData = (x0, x1, x2, x3, x4) => GLctx.copyBufferSubData(x0, x1, x2, x3, x4);\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\n\n  /** @suppress {duplicate } */\n  var _glCopyTexImage2D = (x0, x1, x2, x3, x4, x5, x6, x7) => GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7);\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCopyTexSubImage2D = (x0, x1, x2, x3, x4, x5, x6, x7) => GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7);\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCopyTexSubImage3D = (x0, x1, x2, x3, x4, x5, x6, x7, x8) => GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8);\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCreateProgram = () => {\n      var id = GL.getNewId(GL.programs);\n      var program = GLctx.createProgram();\n      // Store additional information needed for each shader program:\n      program.name = id;\n      // Lazy cache results of\n      // glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\n      program.uniformIdCounter = 1;\n      GL.programs[id] = program;\n      return id;\n    };\n  var _emscripten_glCreateProgram = _glCreateProgram;\n\n  /** @suppress {duplicate } */\n  var _glCreateShader = (shaderType) => {\n      var id = GL.getNewId(GL.shaders);\n      GL.shaders[id] = GLctx.createShader(shaderType);\n  \n      return id;\n    };\n  var _emscripten_glCreateShader = _glCreateShader;\n\n  /** @suppress {duplicate } */\n  var _glCullFace = (x0) => GLctx.cullFace(x0);\n  var _emscripten_glCullFace = _glCullFace;\n\n  /** @suppress {duplicate } */\n  var _glDeleteBuffers = (n, buffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\n        var buffer = GL.buffers[id];\n  \n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\n        // correspond to existing buffer objects.\"\n        if (!buffer) continue;\n  \n        GLctx.deleteBuffer(buffer);\n        buffer.name = 0;\n        GL.buffers[id] = null;\n  \n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\n      }\n    };\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteFramebuffers = (n, framebuffers) => {\n      for (var i = 0; i < n; ++i) {\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\n        var framebuffer = GL.framebuffers[id];\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\n        GLctx.deleteFramebuffer(framebuffer);\n        framebuffer.name = 0;\n        GL.framebuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteProgram = (id) => {\n      if (!id) return;\n      var program = GL.programs[id];\n      if (!program) {\n        // glDeleteProgram actually signals an error when deleting a nonexisting\n        // object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteProgram(program);\n      program.name = 0;\n      GL.programs[id] = null;\n    };\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueries = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteQuery(query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\n\n  /** @suppress {duplicate } */\n  var _glDeleteRenderbuffers = (n, renderbuffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\n        var renderbuffer = GL.renderbuffers[id];\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\n        GLctx.deleteRenderbuffer(renderbuffer);\n        renderbuffer.name = 0;\n        GL.renderbuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSamplers = (n, samplers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\n        var sampler = GL.samplers[id];\n        if (!sampler) continue;\n        GLctx.deleteSampler(sampler);\n        sampler.name = 0;\n        GL.samplers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteShader = (id) => {\n      if (!id) return;\n      var shader = GL.shaders[id];\n      if (!shader) {\n        // glDeleteShader actually signals an error when deleting a nonexisting\n        // object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteShader(shader);\n      GL.shaders[id] = null;\n    };\n  var _emscripten_glDeleteShader = _glDeleteShader;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSync = (id) => {\n      if (!id) return;\n      var sync = GL.syncs[id];\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteSync(sync);\n      sync.name = 0;\n      GL.syncs[id] = null;\n    };\n  var _emscripten_glDeleteSync = _glDeleteSync;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTextures = (n, textures) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((textures)+(i*4))>>2)];\n        var texture = GL.textures[id];\n        // GL spec: \"glDeleteTextures silently ignores 0s and names that do not\n        // correspond to existing textures\".\n        if (!texture) continue;\n        GLctx.deleteTexture(texture);\n        texture.name = 0;\n        GL.textures[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTransformFeedbacks = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var transformFeedback = GL.transformFeedbacks[id];\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteTransformFeedback(transformFeedback);\n        transformFeedback.name = 0;\n        GL.transformFeedbacks[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\n\n  /** @suppress {duplicate } */\n  var _glDeleteVertexArrays = (n, vaos) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\n        GLctx.deleteVertexArray(GL.vaos[id]);\n        GL.vaos[id] = null;\n      }\n    };\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  var _glDepthFunc = (x0) => GLctx.depthFunc(x0);\n  var _emscripten_glDepthFunc = _glDepthFunc;\n\n  /** @suppress {duplicate } */\n  var _glDepthMask = (flag) => {\n      GLctx.depthMask(!!flag);\n    };\n  var _emscripten_glDepthMask = _glDepthMask;\n\n  /** @suppress {duplicate } */\n  var _glDepthRangef = (x0, x1) => GLctx.depthRange(x0, x1);\n  var _emscripten_glDepthRangef = _glDepthRangef;\n\n  /** @suppress {duplicate } */\n  var _glDetachShader = (program, shader) => {\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glDetachShader = _glDetachShader;\n\n  /** @suppress {duplicate } */\n  var _glDisable = (x0) => GLctx.disable(x0);\n  var _emscripten_glDisable = _glDisable;\n\n  /** @suppress {duplicate } */\n  var _glDisableVertexAttribArray = (index) => {\n      GLctx.disableVertexAttribArray(index);\n    };\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  var _glDrawArrays = (mode, first, count) => {\n  \n      GLctx.drawArrays(mode, first, count);\n  \n    };\n  var _emscripten_glDrawArrays = _glDrawArrays;\n\n  /** @suppress {duplicate } */\n  var _glDrawArraysInstanced = (mode, first, count, primcount) => {\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\n    };\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\n\n  var tempFixedLengthArray = [];\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffers = (n, bufs) => {\n  \n      var bufArray = tempFixedLengthArray[n];\n      for (var i = 0; i < n; i++) {\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\n      }\n  \n      GLctx.drawBuffers(bufArray);\n    };\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersEXT = _glDrawBuffers;\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\n\n  /** @suppress {duplicate } */\n  var _glDrawElements = (mode, count, type, indices) => {\n  \n      GLctx.drawElements(mode, count, type, indices);\n  \n    };\n  var _emscripten_glDrawElements = _glDrawElements;\n\n  /** @suppress {duplicate } */\n  var _glDrawElementsInstanced = (mode, count, type, indices, primcount) => {\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\n    };\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\n\n  /** @suppress {duplicate } */\n  var _glDrawRangeElements = (mode, start, end, count, type, indices) => {\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\n      // glFuncs[6][1] += ' drawRangeElements';\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\n      // we work around by ignoring the range.\n      _glDrawElements(mode, count, type, indices);\n    };\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\n\n  /** @suppress {duplicate } */\n  var _glEnable = (x0) => GLctx.enable(x0);\n  var _emscripten_glEnable = _glEnable;\n\n  /** @suppress {duplicate } */\n  var _glEnableVertexAttribArray = (index) => {\n      GLctx.enableVertexAttribArray(index);\n    };\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  var _glEndQuery = (x0) => GLctx.endQuery(x0);\n  var _emscripten_glEndQuery = _glEndQuery;\n\n  /** @suppress {duplicate } */\n  var _glEndQueryEXT = (target) => {\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\n    };\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\n\n  /** @suppress {duplicate } */\n  var _glEndTransformFeedback = () => GLctx.endTransformFeedback();\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glFenceSync = (condition, flags) => {\n      var sync = GLctx.fenceSync(condition, flags);\n      if (sync) {\n        var id = GL.getNewId(GL.syncs);\n        sync.name = id;\n        GL.syncs[id] = sync;\n        return id;\n      }\n      return 0; // Failed to create a sync object\n    };\n  var _emscripten_glFenceSync = _glFenceSync;\n\n  /** @suppress {duplicate } */\n  var _glFinish = () => GLctx.finish();\n  var _emscripten_glFinish = _glFinish;\n\n  /** @suppress {duplicate } */\n  var _glFlush = () => GLctx.flush();\n  var _emscripten_glFlush = _glFlush;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferRenderbuffer = (target, attachment, renderbuffertarget, renderbuffer) => {\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\n                                         GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTexture2D = (target, attachment, textarget, texture, level) => {\n      GLctx.framebufferTexture2D(target, attachment, textarget,\n                                      GL.textures[texture], level);\n    };\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTextureLayer = (target, attachment, texture, level, layer) => {\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\n    };\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\n\n  /** @suppress {duplicate } */\n  var _glFrontFace = (x0) => GLctx.frontFace(x0);\n  var _emscripten_glFrontFace = _glFrontFace;\n\n  /** @suppress {duplicate } */\n  var _glGenBuffers = (n, buffers) => {\n      GL.genObject(n, buffers, 'createBuffer', GL.buffers\n        );\n    };\n  var _emscripten_glGenBuffers = _glGenBuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenFramebuffers = (n, ids) => {\n      GL.genObject(n, ids, 'createFramebuffer', GL.framebuffers\n        );\n    };\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenQueries = (n, ids) => {\n      GL.genObject(n, ids, 'createQuery', GL.queries\n        );\n    };\n  var _emscripten_glGenQueries = _glGenQueries;\n\n  /** @suppress {duplicate } */\n  var _glGenQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\n        if (!query) {\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\n          return;\n        }\n        var id = GL.getNewId(GL.queries);\n        query.name = id;\n        GL.queries[id] = query;\n        HEAP32[(((ids)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\n\n  /** @suppress {duplicate } */\n  var _glGenRenderbuffers = (n, renderbuffers) => {\n      GL.genObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\n        );\n    };\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenSamplers = (n, samplers) => {\n      GL.genObject(n, samplers, 'createSampler', GL.samplers\n        );\n    };\n  var _emscripten_glGenSamplers = _glGenSamplers;\n\n  /** @suppress {duplicate } */\n  var _glGenTextures = (n, textures) => {\n      GL.genObject(n, textures, 'createTexture', GL.textures\n        );\n    };\n  var _emscripten_glGenTextures = _glGenTextures;\n\n  /** @suppress {duplicate } */\n  var _glGenTransformFeedbacks = (n, ids) => {\n      GL.genObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\n        );\n    };\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\n\n  /** @suppress {duplicate } */\n  var _glGenVertexArrays = (n, arrays) => {\n      GL.genObject(n, arrays, 'createVertexArray', GL.vaos\n        );\n    };\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenVertexArraysOES = _glGenVertexArrays;\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  var _glGenerateMipmap = (x0) => GLctx.generateMipmap(x0);\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\n\n  \n  var __glGetActiveAttribOrUniform = (funcName, program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx[funcName](program, index);\n      if (info) {\n        // If an error occurs, nothing will be written to length, size and type and name.\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n        if (size) HEAP32[((size)>>2)] = info.size;\n        if (type) HEAP32[((type)>>2)] = info.type;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveAttrib = (program, index, bufSize, length, size, type, name) =>\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveUniform = (program, index, bufSize, length, size, type, name) =>\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockName = (program, uniformBlockIndex, bufSize, length, uniformBlockName) => {\n      program = GL.programs[program];\n  \n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\n      if (uniformBlockName && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockiv = (program, uniformBlockIndex, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n  \n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n        HEAP32[((params)>>2)] = name.length+1;\n        return;\n      }\n  \n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\n      if (result === null) return; // If an error occurs, nothing should be written to params.\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\n        for (var i = 0; i < result.length; i++) {\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\n        }\n      } else {\n        HEAP32[((params)>>2)] = result;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformsiv = (program, uniformCount, uniformIndices, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && uniformIndices == 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var ids = [];\n      for (var i = 0; i < uniformCount; i++) {\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\n      }\n  \n      var result = GLctx.getActiveUniforms(program, ids, pname);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\n\n  /** @suppress {duplicate } */\n  var _glGetAttachedShaders = (program, maxCount, count, shaders) => {\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\n      var len = result.length;\n      if (len > maxCount) {\n        len = maxCount;\n      }\n      HEAP32[((count)>>2)] = len;\n      for (var i = 0; i < len; ++i) {\n        var id = GL.shaders.indexOf(result[i]);\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetAttribLocation = (program, name) =>\n      GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\n\n  var writeI53ToI64 = (ptr, num) => {\n      HEAPU32[((ptr)>>2)] = num;\n      var lower = HEAPU32[((ptr)>>2)];\n      HEAPU32[(((ptr)+(4))>>2)] = (num - lower)/4294967296;\n    };\n  \n  \n  var webglGetExtensions = () => {\n      var exts = getEmscriptenSupportedExtensions(GLctx);\n      exts = exts.concat(exts.map((e) => \"GL_\" + e));\n      return exts;\n    };\n  \n  var emscriptenWebGLGet = (name_, p, type) => {\n      // Guard against user passing a null pointer.\n      // Note that GLES2 spec does not say anything about how passing a null\n      // pointer should be treated.  Testing on desktop core GL 3, the application\n      // crashes on glGetIntegerv to a null pointer, but better to report an error\n      // instead of doing anything random.\n      if (!p) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = undefined;\n      switch (name_) { // Handle a few trivial GLES values\n        case 0x8DFA: // GL_SHADER_COMPILER\n          ret = 1;\n          break;\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\n          if (type != 0 && type != 1) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n          }\n          // Do not write anything to the out pointer, since no binary formats are\n          // supported.\n          return;\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\n          ret = 0;\n          break;\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete\n          // since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be\n          // queried for length), so implement it ourselves to allow C++ GLES2\n          // code get the length.\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\n          ret = formats ? formats.length : 0;\n          break;\n  \n        case 0x821D: // GL_NUM_EXTENSIONS\n          if (GL.currentContext.version < 2) {\n            // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n            return;\n          }\n          ret = webglGetExtensions().length;\n          break;\n        case 0x821B: // GL_MAJOR_VERSION\n        case 0x821C: // GL_MINOR_VERSION\n          if (GL.currentContext.version < 2) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\n          break;\n      }\n  \n      if (ret === undefined) {\n        var result = GLctx.getParameter(name_);\n        switch (typeof result) {\n          case \"number\":\n            ret = result;\n            break;\n          case \"boolean\":\n            ret = result ? 1 : 0;\n            break;\n          case \"string\":\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          case \"object\":\n            if (result === null) {\n              // null is a valid result for some (e.g., which buffer is bound -\n              // perhaps nothing is bound), but otherwise can mean an invalid\n              // name_, which we need to report as an error\n              switch (name_) {\n                case 0x8894: // ARRAY_BUFFER_BINDING\n                case 0x8B8D: // CURRENT_PROGRAM\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\n                case 0x8CA7: // RENDERBUFFER_BINDING\n                case 0x8069: // TEXTURE_BINDING_2D\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\n                case 0x8919: // SAMPLER_BINDING\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\n                case 0x806A: // TEXTURE_BINDING_3D\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\n                  ret = 0;\n                  break;\n                }\n                default: {\n                  GL.recordError(0x500); // GL_INVALID_ENUM\n                  return;\n                }\n              }\n            } else if (result instanceof Float32Array ||\n                       result instanceof Uint32Array ||\n                       result instanceof Int32Array ||\n                       result instanceof Array) {\n              for (var i = 0; i < result.length; ++i) {\n                switch (type) {\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 4: HEAP8[(p)+(i)] = result[i] ? 1 : 0; break;\n                }\n              }\n              return;\n            } else {\n              try {\n                ret = result.name | 0;\n              } catch(e) {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                err(`GL_INVALID_ENUM in glGet${type}v: Unknown object returned from WebGL getParameter(${name_})! (error: ${e})`);\n                return;\n              }\n            }\n            break;\n          default:\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            err(`GL_INVALID_ENUM in glGet${type}v: Native code calling glGet${type}v(${name_}) and it returns ${result} of type ${typeof(result)}!`);\n            return;\n        }\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(p, ret); break;\n        case 0: HEAP32[((p)>>2)] = ret; break;\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\n        case 4: HEAP8[p] = ret ? 1 : 0; break;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetBooleanv = (name_, p) => emscriptenWebGLGet(name_, p, 4);\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteri64v = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\n    };\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteriv = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null\n        // pointer. Since calling this function does not make sense if data ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\n    };\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetError = () => {\n      var error = GLctx.getError() || GL.lastError;\n      GL.lastError = 0/*GL_NO_ERROR*/;\n      return error;\n    };\n  var _emscripten_glGetError = _glGetError;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetFloatv = (name_, p) => emscriptenWebGLGet(name_, p, 2);\n  var _emscripten_glGetFloatv = _glGetFloatv;\n\n  /** @suppress {duplicate } */\n  var _glGetFragDataLocation = (program, name) => {\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\n    };\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\n\n  /** @suppress {duplicate } */\n  var _glGetFramebufferAttachmentParameteriv = (target, attachment, pname, params) => {\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\n      if (result instanceof WebGLRenderbuffer ||\n          result instanceof WebGLTexture) {\n        result = result.name | 0;\n      }\n      HEAP32[((params)>>2)] = result;\n    };\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\n\n  var emscriptenWebGLGetIndexed = (target, index, data, type) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var result = GLctx.getIndexedParameter(target, index);\n      var ret;\n      switch (typeof result) {\n        case 'boolean':\n          ret = result ? 1 : 0;\n          break;\n        case 'number':\n          ret = result;\n          break;\n        case 'object':\n          if (result === null) {\n            switch (target) {\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\n                ret = 0;\n                break;\n              default: {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                return;\n              }\n            }\n          } else if (result instanceof WebGLBuffer) {\n            ret = result.name | 0;\n          } else {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          break;\n        default:\n          GL.recordError(0x500); // GL_INVALID_ENUM\n          return;\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(data, ret); break;\n        case 0: HEAP32[((data)>>2)] = ret; break;\n        case 2: HEAPF32[((data)>>2)] = ret; break;\n        case 4: HEAP8[data] = ret ? 1 : 0; break;\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetInteger64i_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 1);\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\n\n  /** @suppress {duplicate } */\n  var _glGetInteger64v = (name_, p) => {\n      emscriptenWebGLGet(name_, p, 1);\n    };\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\n\n  /** @suppress {duplicate } */\n  var _glGetIntegeri_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 0);\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetIntegerv = (name_, p) => emscriptenWebGLGet(name_, p, 0);\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\n\n  /** @suppress {duplicate } */\n  var _glGetInternalformativ = (target, internalformat, pname, bufSize, params) => {\n      if (bufSize < 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!params) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\n      if (ret === null) return;\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\n      }\n    };\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramBinary = (program, bufSize, length, binaryFormat, binary) => {\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n    };\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramInfoLog = (program, maxLength, length, infoLog) => {\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramiv = (program, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      if (program >= GL.counter) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      program = GL.programs[program];\n  \n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getProgramInfoLog(program);\n        if (log === null) log = '(unknown error)';\n        HEAP32[((p)>>2)] = log.length + 1;\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\n        if (!program.maxUniformLength) {\n          var numActiveUniforms = GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/);\n          for (var i = 0; i < numActiveUniforms; ++i) {\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformLength;\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\n        if (!program.maxAttributeLength) {\n          var numActiveAttributes = GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/);\n          for (var i = 0; i < numActiveAttributes; ++i) {\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\n        if (!program.maxUniformBlockNameLength) {\n          var numActiveUniformBlocks = GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/);\n          for (var i = 0; i < numActiveUniformBlocks; ++i) {\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\n      }\n    };\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjecti64vEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param;\n      if (GL.currentContext.version < 2)\n      {\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      }\n      else {\n        param = GLctx.getQueryParameter(query, pname);\n      }\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      writeI53ToI64(params, ret);\n    };\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectivEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuiv = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.getQueryParameter(query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryiv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\n    };\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryivEXT = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\n    };\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetRenderbufferParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\n    };\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameterfv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameteriv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetShaderInfoLog = (shader, maxLength, length, infoLog) => {\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderPrecisionFormat = (shaderType, precisionType, range, precision) => {\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\n      HEAP32[((range)>>2)] = result.rangeMin;\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\n      HEAP32[((precision)>>2)] = result.precision;\n    };\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderSource = (shader, bufSize, length, source) => {\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderiv = (shader, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n        if (log === null) log = '(unknown error)';\n        // The GLES2 specification says that if the shader has an empty info log,\n        // a value of 0 is returned. Otherwise the log has a null char appended.\n        // (An empty string is falsey, so we can just check that instead of\n        // looking at log.length.)\n        var logLength = log ? log.length + 1 : 0;\n        HEAP32[((p)>>2)] = logLength;\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\n        // source may be a null, or the empty string, both of which are falsey\n        // values that we report a 0 length for.\n        var sourceLength = source ? source.length + 1 : 0;\n        HEAP32[((p)>>2)] = sourceLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\n      }\n    };\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glGetString = (name_) => {\n      var ret = GL.stringCache[name_];\n      if (!ret) {\n        switch (name_) {\n          case 0x1F03 /* GL_EXTENSIONS */:\n            ret = stringToNewUTF8(webglGetExtensions().join(' '));\n            break;\n          case 0x1F00 /* GL_VENDOR */:\n          case 0x1F01 /* GL_RENDERER */:\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\n            var s = GLctx.getParameter(name_);\n            if (!s) {\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            }\n            ret = s ? stringToNewUTF8(s) : 0;\n            break;\n  \n          case 0x1F02 /* GL_VERSION */:\n            var webGLVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\n            // return GLES version string corresponding to the version of the WebGL context\n            var glVersion = `OpenGL ES 2.0 (${webGLVersion})`;\n            if (true) glVersion = `OpenGL ES 3.0 (${webGLVersion})`;\n            ret = stringToNewUTF8(glVersion);\n            break;\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\n            var ver_num = glslVersion.match(ver_re);\n            if (ver_num !== null) {\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\n              glslVersion = `OpenGL ES GLSL ES ${ver_num[1]} (${glslVersion})`;\n            }\n            ret = stringToNewUTF8(glslVersion);\n            break;\n          default:\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            // fall through\n        }\n        GL.stringCache[name_] = ret;\n      }\n      return ret;\n    };\n  var _emscripten_glGetString = _glGetString;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetStringi = (name, index) => {\n      if (GL.currentContext.version < 2) {\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n        return 0;\n      }\n      var stringiCache = GL.stringiCache[name];\n      if (stringiCache) {\n        if (index < 0 || index >= stringiCache.length) {\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\n          return 0;\n        }\n        return stringiCache[index];\n      }\n      switch (name) {\n        case 0x1F03 /* GL_EXTENSIONS */:\n          var exts = webglGetExtensions().map(stringToNewUTF8);\n          stringiCache = GL.stringiCache[name] = exts;\n          if (index < 0 || index >= stringiCache.length) {\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\n            return 0;\n          }\n          return stringiCache[index];\n        default:\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\n          return 0;\n      }\n    };\n  var _emscripten_glGetStringi = _glGetStringi;\n\n  /** @suppress {duplicate } */\n  var _glGetSynciv = (sync, pname, bufSize, length, values) => {\n      if (bufSize < 0) {\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\n        // so raise GL_INVALID_VALUE here as well.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!values) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\n      if (ret !== null) {\n        HEAP32[((values)>>2)] = ret;\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\n      }\n    };\n  var _emscripten_glGetSynciv = _glGetSynciv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameterfv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetTransformFeedbackVarying = (program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx.getTransformFeedbackVarying(program, index);\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\n  \n      if (name && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n  \n      if (size) HEAP32[((size)>>2)] = info.size;\n      if (type) HEAP32[((type)>>2)] = info.type;\n    };\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformBlockIndex = (program, uniformBlockName) => {\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\n    };\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformIndices = (program, uniformCount, uniformNames, uniformIndices) => {\n      if (!uniformIndices) {\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\n        // if uniformIndices == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var names = [];\n      for (var i = 0; i < uniformCount; i++)\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\n  \n      var result = GLctx.getUniformIndices(program, names);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\n\n  \n  /** @noinline */\n  var webglGetLeftBracePos = (name) => name.slice(-1) == ']' && name.lastIndexOf('[');\n  \n  var webglPrepareUniformLocationsBeforeFirstUse = (program) => {\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\n        i, j;\n  \n      // On the first time invocation of glGetUniformLocation on this shader program:\n      // initialize cache data structures and discover which uniforms are arrays.\n      if (!uniformLocsById) {\n        // maps GLint integer locations to WebGLUniformLocations\n        program.uniformLocsById = uniformLocsById = {};\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\n        program.uniformArrayNamesById = {};\n  \n        var numActiveUniforms = GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/);\n        for (i = 0; i < numActiveUniforms; ++i) {\n          var u = GLctx.getActiveUniform(program, i);\n          var nm = u.name;\n          var sz = u.size;\n          var lb = webglGetLeftBracePos(nm);\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\n  \n          // Assign a new location.\n          var id = program.uniformIdCounter;\n          program.uniformIdCounter += sz;\n          // Eagerly get the location of the uniformArray[0] base element.\n          // The remaining indices >0 will be left for lazy evaluation to\n          // improve performance. Those may never be needed to fetch, if the\n          // application fills arrays always in full starting from the first\n          // element of the array.\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\n  \n          // Store placeholder integers in place that highlight that these\n          // >0 index locations are array indices pending population.\n          for (j = 0; j < sz; ++j) {\n            uniformLocsById[id] = j;\n            program.uniformArrayNamesById[id++] = arrayName;\n          }\n        }\n      }\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glGetUniformLocation = (program, name) => {\n  \n      name = UTF8ToString(name);\n  \n      if (program = GL.programs[program]) {\n        webglPrepareUniformLocationsBeforeFirstUse(program);\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\n        var arrayIndex = 0;\n        var uniformBaseName = name;\n  \n        // Invariant: when populating integer IDs for uniform locations, we must\n        // maintain the precondition that arrays reside in contiguous addresses,\n        // i.e. for a 'vec4 colors[10];', colors[4] must be at location\n        // colors[0]+4.  However, user might call glGetUniformLocation(program,\n        // \"colors\") for an array, so we cannot discover based on the user input\n        // arguments whether the uniform we are dealing with is an array. The only\n        // way to discover which uniforms are arrays is to enumerate over all the\n        // active uniforms in the program.\n        var leftBrace = webglGetLeftBracePos(name);\n  \n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\n        if (leftBrace > 0) {\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\n          uniformBaseName = name.slice(0, leftBrace);\n        }\n  \n        // Have we cached the location of this uniform before?\n        // A pair [array length, GLint of the uniform location]\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName];\n  \n        // If an uniform with this name exists, and if its index is within the\n        // array limits (if it's even an array), query the WebGLlocation, or\n        // return an existing cached location.\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\n            return arrayIndex;\n          }\n        }\n      }\n      else {\n        // N.b. we are currently unable to distinguish between GL program IDs that\n        // never existed vs GL program IDs that have been deleted, so report\n        // GL_INVALID_VALUE in both cases.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n      }\n      return -1;\n    };\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\n\n  var webglGetUniformLocation = (location) => {\n      var p = GLctx.currentProgram;\n  \n      if (p) {\n        var webglLoc = p.uniformLocsById[location];\n        // p.uniformLocsById[location] stores either an integer, or a\n        // WebGLUniformLocation.\n        // If an integer, we have not yet bound the location, so do it now. The\n        // integer value specifies the array index we should bind to.\n        if (typeof webglLoc == 'number') {\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? `[${webglLoc}]` : ''));\n        }\n        // Else an already cached WebGLUniformLocation, return it.\n        return webglLoc;\n      } else {\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n      }\n    };\n  \n  \n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetUniform = (program, location, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if params ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      webglPrepareUniformLocationsBeforeFirstUse(program);\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\n      if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n          }\n        }\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformfv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 2);\n    };\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformiv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 0);\n    };\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformuiv = (program, location, params) =>\n      emscriptenWebGLGetUniform(program, location, params, 0);\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\n\n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetVertexAttrib = (index, pname, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if params ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var data = GLctx.getVertexAttrib(index, pname);\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\n        HEAP32[((params)>>2)] = data && data[\"name\"];\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\n          }\n        }\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\n    };\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\n\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribPointerv = (index, pname, pointer) => {\n      if (!pointer) {\n        // GLES2 specification does not specify how to behave if pointer is a null\n        // pointer. Since calling this function does not make sense if pointer ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\n    };\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribfv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was\n      // specified using the function glVertexAttrib*f(), otherwise the results\n      // are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\n    };\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was\n      // specified using the function glVertexAttrib*f(), otherwise the results\n      // are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\n    };\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\n\n  /** @suppress {duplicate } */\n  var _glHint = (x0, x1) => GLctx.hint(x0, x1);\n  var _emscripten_glHint = _glHint;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateFramebuffer = (target, numAttachments, attachments) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateFramebuffer(target, list);\n    };\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateSubFramebuffer = (target, numAttachments, attachments, x, y, width, height) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\n    };\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsBuffer = (buffer) => {\n      var b = GL.buffers[buffer];\n      if (!b) return 0;\n      return GLctx.isBuffer(b);\n    };\n  var _emscripten_glIsBuffer = _glIsBuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsEnabled = (x0) => GLctx.isEnabled(x0);\n  var _emscripten_glIsEnabled = _glIsEnabled;\n\n  /** @suppress {duplicate } */\n  var _glIsFramebuffer = (framebuffer) => {\n      var fb = GL.framebuffers[framebuffer];\n      if (!fb) return 0;\n      return GLctx.isFramebuffer(fb);\n    };\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsProgram = (program) => {\n      program = GL.programs[program];\n      if (!program) return 0;\n      return GLctx.isProgram(program);\n    };\n  var _emscripten_glIsProgram = _glIsProgram;\n\n  /** @suppress {duplicate } */\n  var _glIsQuery = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.isQuery(query);\n    };\n  var _emscripten_glIsQuery = _glIsQuery;\n\n  /** @suppress {duplicate } */\n  var _glIsQueryEXT = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\n    };\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\n\n  /** @suppress {duplicate } */\n  var _glIsRenderbuffer = (renderbuffer) => {\n      var rb = GL.renderbuffers[renderbuffer];\n      if (!rb) return 0;\n      return GLctx.isRenderbuffer(rb);\n    };\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsSampler = (id) => {\n      var sampler = GL.samplers[id];\n      if (!sampler) return 0;\n      return GLctx.isSampler(sampler);\n    };\n  var _emscripten_glIsSampler = _glIsSampler;\n\n  /** @suppress {duplicate } */\n  var _glIsShader = (shader) => {\n      var s = GL.shaders[shader];\n      if (!s) return 0;\n      return GLctx.isShader(s);\n    };\n  var _emscripten_glIsShader = _glIsShader;\n\n  /** @suppress {duplicate } */\n  var _glIsSync = (sync) => GLctx.isSync(GL.syncs[sync]);\n  var _emscripten_glIsSync = _glIsSync;\n\n  /** @suppress {duplicate } */\n  var _glIsTexture = (id) => {\n      var texture = GL.textures[id];\n      if (!texture) return 0;\n      return GLctx.isTexture(texture);\n    };\n  var _emscripten_glIsTexture = _glIsTexture;\n\n  /** @suppress {duplicate } */\n  var _glIsTransformFeedback = (id) => GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glIsVertexArray = (array) => {\n  \n      var vao = GL.vaos[array];\n      if (!vao) return 0;\n      return GLctx.isVertexArray(vao);\n    };\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glIsVertexArrayOES = _glIsVertexArray;\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  var _glLineWidth = (x0) => GLctx.lineWidth(x0);\n  var _emscripten_glLineWidth = _glLineWidth;\n\n  /** @suppress {duplicate } */\n  var _glLinkProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.linkProgram(program);\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\n      program.uniformSizeAndIdsByName = {};\n  \n    };\n  var _emscripten_glLinkProgram = _glLinkProgram;\n\n  /** @suppress {duplicate } */\n  var _glPauseTransformFeedback = () => GLctx.pauseTransformFeedback();\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glPixelStorei = (pname, param) => {\n      if (pname == 3317) {\n        GL.unpackAlignment = param;\n      } else if (pname == 3314) {\n        GL.unpackRowLength = param;\n      }\n      GLctx.pixelStorei(pname, param);\n    };\n  var _emscripten_glPixelStorei = _glPixelStorei;\n\n  /** @suppress {duplicate } */\n  var _glPolygonModeWEBGL = (face, mode) => {\n      GLctx.webglPolygonMode['polygonModeWEBGL'](face, mode);\n    };\n  var _emscripten_glPolygonModeWEBGL = _glPolygonModeWEBGL;\n\n  /** @suppress {duplicate } */\n  var _glPolygonOffset = (x0, x1) => GLctx.polygonOffset(x0, x1);\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\n\n  /** @suppress {duplicate } */\n  var _glPolygonOffsetClampEXT = (factor, units, clamp) => {\n      GLctx.extPolygonOffsetClamp['polygonOffsetClampEXT'](factor, units, clamp);\n    };\n  var _emscripten_glPolygonOffsetClampEXT = _glPolygonOffsetClampEXT;\n\n  /** @suppress {duplicate } */\n  var _glProgramBinary = (program, binaryFormat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramBinary = _glProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glProgramParameteri = (program, pname, value) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\n\n  /** @suppress {duplicate } */\n  var _glQueryCounterEXT = (id, target) => {\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\n    };\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\n\n  /** @suppress {duplicate } */\n  var _glReadBuffer = (x0) => GLctx.readBuffer(x0);\n  var _emscripten_glReadBuffer = _glReadBuffer;\n\n  var heapObjectForWebGLType = (type) => {\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\n      // smaller values for the heap, for shorter generated code size.\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\n      // (since most types are HEAPU16)\n      type -= 0x1400;\n      if (type == 0) return HEAP8;\n  \n      if (type == 1) return HEAPU8;\n  \n      if (type == 2) return HEAP16;\n  \n      if (type == 4) return HEAP32;\n  \n      if (type == 6) return HEAPF32;\n  \n      if (type == 5\n        || type == 28922\n        || type == 28520\n        || type == 30779\n        || type == 30782\n        )\n        return HEAPU32;\n  \n      return HEAPU16;\n    };\n  \n  var toTypedArrayIndex = (pointer, heap) =>\n      pointer >>> (31 - Math.clz32(heap.BYTES_PER_ELEMENT));\n  \n  /** @suppress {duplicate } */\n  var _glReadPixels = (x, y, width, height, format, type, pixels) => {\n      if (true) {\n        if (GLctx.currentPixelPackBufferBinding) {\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\n          return;\n        }\n        var heap = heapObjectForWebGLType(type);\n        var target = toTypedArrayIndex(pixels, heap);\n        GLctx.readPixels(x, y, width, height, format, type, heap, target);\n        return;\n      }\n    };\n  var _emscripten_glReadPixels = _glReadPixels;\n\n  /** @suppress {duplicate } */\n  var _glReleaseShaderCompiler = () => {\n      // NOP (as allowed by GLES 2.0 spec)\n    };\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\n\n  /** @suppress {duplicate } */\n  var _glRenderbufferStorage = (x0, x1, x2, x3) => GLctx.renderbufferStorage(x0, x1, x2, x3);\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\n\n  /** @suppress {duplicate } */\n  var _glRenderbufferStorageMultisample = (x0, x1, x2, x3, x4) => GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4);\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\n\n  /** @suppress {duplicate } */\n  var _glResumeTransformFeedback = () => GLctx.resumeTransformFeedback();\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glSampleCoverage = (value, invert) => {\n      GLctx.sampleCoverage(value, !!invert);\n    };\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterf = (sampler, pname, param) => {\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterfv = (sampler, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteri = (sampler, pname, param) => {\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteriv = (sampler, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glScissor = (x0, x1, x2, x3) => GLctx.scissor(x0, x1, x2, x3);\n  var _emscripten_glScissor = _glScissor;\n\n  /** @suppress {duplicate } */\n  var _glShaderBinary = (count, shaders, binaryformat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glShaderBinary = _glShaderBinary;\n\n  /** @suppress {duplicate } */\n  var _glShaderSource = (shader, count, string, length) => {\n      var source = GL.getSource(shader, count, string, length);\n  \n      GLctx.shaderSource(GL.shaders[shader], source);\n    };\n  var _emscripten_glShaderSource = _glShaderSource;\n\n  /** @suppress {duplicate } */\n  var _glStencilFunc = (x0, x1, x2) => GLctx.stencilFunc(x0, x1, x2);\n  var _emscripten_glStencilFunc = _glStencilFunc;\n\n  /** @suppress {duplicate } */\n  var _glStencilFuncSeparate = (x0, x1, x2, x3) => GLctx.stencilFuncSeparate(x0, x1, x2, x3);\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\n\n  /** @suppress {duplicate } */\n  var _glStencilMask = (x0) => GLctx.stencilMask(x0);\n  var _emscripten_glStencilMask = _glStencilMask;\n\n  /** @suppress {duplicate } */\n  var _glStencilMaskSeparate = (x0, x1) => GLctx.stencilMaskSeparate(x0, x1);\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\n\n  /** @suppress {duplicate } */\n  var _glStencilOp = (x0, x1, x2) => GLctx.stencilOp(x0, x1, x2);\n  var _emscripten_glStencilOp = _glStencilOp;\n\n  /** @suppress {duplicate } */\n  var _glStencilOpSeparate = (x0, x1, x2, x3) => GLctx.stencilOpSeparate(x0, x1, x2, x3);\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\n\n  var computeUnpackAlignedImageSize = (width, height, sizePerPixel) => {\n      function roundedToNextMultipleOf(x, y) {\n        return (x + y - 1) & -y;\n      }\n      var plainRowSize = (GL.unpackRowLength || width) * sizePerPixel;\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, GL.unpackAlignment);\n      return height * alignedRowSize;\n    };\n  \n  var colorChannelsInGlTextureFormat = (format) => {\n      // Micro-optimizations for size: map format to size by subtracting smallest\n      // enum value (0x1902) from all values first.  Also omit the most common\n      // size value (1) from the list, which is assumed by formats not on the\n      // list.\n      var colorChannels = {\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\n        5: 3,\n        6: 4,\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\n        8: 2,\n        29502: 3,\n        29504: 4,\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\n        26917: 2,\n        26918: 2,\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\n        29846: 3,\n        29847: 4\n      };\n      return colorChannels[format - 0x1902]||1;\n    };\n  \n  \n  \n  var emscriptenWebGLGetTexPixelData = (type, format, width, height, pixels, internalFormat) => {\n      var heap = heapObjectForWebGLType(type);\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * heap.BYTES_PER_ELEMENT;\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel);\n      return heap.subarray(toTypedArrayIndex(pixels, heap), toTypedArrayIndex(pixels + bytes, heap));\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexImage2D = (target, level, internalFormat, width, height, border, format, type, pixels) => {\n      if (true) {\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\n          return;\n        }\n        if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          var index = toTypedArrayIndex(pixels, heap);\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, index);\n          return;\n        }\n      }\n      var pixelData = pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null;\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixelData);\n    };\n  var _emscripten_glTexImage2D = _glTexImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexImage3D = (target, level, internalFormat, width, height, depth, border, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, toTypedArrayIndex(pixels, heap));\n      } else {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\n      }\n    };\n  var _emscripten_glTexImage3D = _glTexImage3D;\n\n  /** @suppress {duplicate } */\n  var _glTexParameterf = (x0, x1, x2) => GLctx.texParameterf(x0, x1, x2);\n  var _emscripten_glTexParameterf = _glTexParameterf;\n\n  /** @suppress {duplicate } */\n  var _glTexParameterfv = (target, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.texParameterf(target, pname, param);\n    };\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glTexParameteri = (x0, x1, x2) => GLctx.texParameteri(x0, x1, x2);\n  var _emscripten_glTexParameteri = _glTexParameteri;\n\n  /** @suppress {duplicate } */\n  var _glTexParameteriv = (target, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.texParameteri(target, pname, param);\n    };\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glTexStorage2D = (x0, x1, x2, x3, x4) => GLctx.texStorage2D(x0, x1, x2, x3, x4);\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\n\n  /** @suppress {duplicate } */\n  var _glTexStorage3D = (x0, x1, x2, x3, x4, x5) => GLctx.texStorage3D(x0, x1, x2, x3, x4, x5);\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\n\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, type, pixels) => {\n      if (true) {\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\n          return;\n        }\n        if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, toTypedArrayIndex(pixels, heap));\n          return;\n        }\n      }\n      var pixelData = pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0) : null;\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\n    };\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, toTypedArrayIndex(pixels, heap));\n      } else {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\n      }\n    };\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glTransformFeedbackVaryings = (program, count, varyings, bufferMode) => {\n      program = GL.programs[program];\n      var vars = [];\n      for (var i = 0; i < count; i++)\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\n  \n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\n    };\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1f = (location, v0) => {\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1f = _glUniform1f;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1fv = (location, count, value) => {\n  \n      count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, ((value)>>2), count);\n    };\n  var _emscripten_glUniform1fv = _glUniform1fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1i = (location, v0) => {\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1i = _glUniform1i;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1iv = (location, count, value) => {\n  \n      count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, ((value)>>2), count);\n    };\n  var _emscripten_glUniform1iv = _glUniform1iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform1ui = (location, v0) => {\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1ui = _glUniform1ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform1uiv = (location, count, value) => {\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, ((value)>>2), count);\n    };\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2f = (location, v0, v1) => {\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2f = _glUniform2f;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2fv = (location, count, value) => {\n  \n      count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, ((value)>>2), count*2);\n    };\n  var _emscripten_glUniform2fv = _glUniform2fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2i = (location, v0, v1) => {\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2i = _glUniform2i;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2iv = (location, count, value) => {\n  \n      count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, ((value)>>2), count*2);\n    };\n  var _emscripten_glUniform2iv = _glUniform2iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform2ui = (location, v0, v1) => {\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2ui = _glUniform2ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform2uiv = (location, count, value) => {\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, ((value)>>2), count*2);\n    };\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3f = (location, v0, v1, v2) => {\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3f = _glUniform3f;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3fv = (location, count, value) => {\n  \n      count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, ((value)>>2), count*3);\n    };\n  var _emscripten_glUniform3fv = _glUniform3fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3i = (location, v0, v1, v2) => {\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3i = _glUniform3i;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3iv = (location, count, value) => {\n  \n      count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, ((value)>>2), count*3);\n    };\n  var _emscripten_glUniform3iv = _glUniform3iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform3ui = (location, v0, v1, v2) => {\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3ui = _glUniform3ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform3uiv = (location, count, value) => {\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, ((value)>>2), count*3);\n    };\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4f = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4f = _glUniform4f;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4fv = (location, count, value) => {\n  \n      count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, ((value)>>2), count*4);\n    };\n  var _emscripten_glUniform4fv = _glUniform4fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4i = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4i = _glUniform4i;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4iv = (location, count, value) => {\n  \n      count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, ((value)>>2), count*4);\n    };\n  var _emscripten_glUniform4iv = _glUniform4iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform4ui = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4ui = _glUniform4ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform4uiv = (location, count, value) => {\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, ((value)>>2), count*4);\n    };\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\n\n  /** @suppress {duplicate } */\n  var _glUniformBlockBinding = (program, uniformBlockIndex, uniformBlockBinding) => {\n      program = GL.programs[program];\n  \n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\n    };\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix2fv = (location, count, transpose, value) => {\n  \n      count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*4);\n    };\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*6);\n    };\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*8);\n    };\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix3fv = (location, count, transpose, value) => {\n  \n      count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*9);\n    };\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*6);\n    };\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*12);\n    };\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix4fv = (location, count, transpose, value) => {\n  \n      count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*16);\n    };\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*8);\n    };\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*12);\n    };\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUseProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.useProgram(program);\n      // Record the currently active program so that we can access the uniform\n      // mapping table of that program.\n      GLctx.currentProgram = program;\n    };\n  var _emscripten_glUseProgram = _glUseProgram;\n\n  /** @suppress {duplicate } */\n  var _glValidateProgram = (program) => {\n      GLctx.validateProgram(GL.programs[program]);\n    };\n  var _emscripten_glValidateProgram = _glValidateProgram;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib1f = (x0, x1) => GLctx.vertexAttrib1f(x0, x1);\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib1fv = (index, v) => {\n  \n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\n    };\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib2f = (x0, x1, x2) => GLctx.vertexAttrib2f(x0, x1, x2);\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib2fv = (index, v) => {\n  \n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\n    };\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib3f = (x0, x1, x2, x3) => GLctx.vertexAttrib3f(x0, x1, x2, x3);\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib3fv = (index, v) => {\n  \n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\n    };\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib4f = (x0, x1, x2, x3, x4) => GLctx.vertexAttrib4f(x0, x1, x2, x3, x4);\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib4fv = (index, v) => {\n  \n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisor = (index, divisor) => {\n      GLctx.vertexAttribDivisor(index, divisor);\n    };\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4i = (x0, x1, x2, x3, x4) => GLctx.vertexAttribI4i(x0, x1, x2, x3, x4);\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4iv = (index, v) => {\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4ui = (x0, x1, x2, x3, x4) => GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4);\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4uiv = (index, v) => {\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribIPointer = (index, size, type, stride, ptr) => {\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\n    };\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribPointer = (index, size, type, normalized, stride, ptr) => {\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\n    };\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\n\n  /** @suppress {duplicate } */\n  var _glViewport = (x0, x1, x2, x3) => GLctx.viewport(x0, x1, x2, x3);\n  var _emscripten_glViewport = _glViewport;\n\n  /** @suppress {duplicate } */\n  var _glWaitSync = (sync, flags, timeout) => {\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\n      timeout = Number(timeout);\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glWaitSync = _glWaitSync;\n\n  var _emscripten_has_asyncify = () => 1;\n\n  \n  \n  var doRequestFullscreen = (target, strategy) => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      if (!target.requestFullscreen\n        && !target.webkitRequestFullscreen\n        ) {\n        return -3;\n      }\n  \n      // Queue this function call if we're not currently in an event handler and\n      // the user saw it appropriate to do so.\n      if (!JSEvents.canPerformEventHandlerRequests()) {\n        if (strategy.deferUntilInEventHandler) {\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\n          return 1;\n        }\n        return -2;\n      }\n  \n      return JSEvents_requestFullscreen(target, strategy);\n    };\n  var _emscripten_request_fullscreen_strategy = (target, deferUntilInEventHandler, fullscreenStrategy) => {\n      var strategy = {\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\n        deferUntilInEventHandler,\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\n      };\n  \n      return doRequestFullscreen(target, strategy);\n    };\n\n  \n  \n  var _emscripten_request_pointerlock = (target, deferUntilInEventHandler) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n      if (!target.requestPointerLock) {\n        return -1;\n      }\n  \n      // Queue this function call if we're not currently in an event handler and\n      // the user saw it appropriate to do so.\n      if (!JSEvents.canPerformEventHandlerRequests()) {\n        if (deferUntilInEventHandler) {\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\n          return 1;\n        }\n        return -2;\n      }\n  \n      return requestPointerLock(target);\n    };\n\n  var getHeapMax = () =>\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n      // for any code that deals with heap sizes, which would require special\n      // casing all heap size related code to treat 0 specially.\n      2147483648;\n  \n  var alignMemory = (size, alignment) => {\n      return Math.ceil(size / alignment) * alignment;\n    };\n  \n  var growMemory = (size) => {\n      var oldHeapSize = wasmMemory.buffer.byteLength;\n      var pages = ((size - oldHeapSize + 65535) / 65536) | 0;\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size\n        updateMemoryViews();\n        return 1 /*success*/;\n      } catch(e) {\n      }\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\n      // anyhow)\n    };\n  var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      requestedSize >>>= 0;\n      // With multithreaded builds, races can happen (another thread might increase the size\n      // in between), so return a failure, and let the caller retry.\n  \n      // Memory resize rules:\n      // 1.  Always increase heap size to at least the requested size, rounded up\n      //     to next page multiple.\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n      //     geometrically: increase the heap size according to\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n      //     linearly: increase the heap size by at least\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n      // 4.  If we were unable to allocate as much memory, it may be due to\n      //     over-eager decision to excessively reserve due to (3) above.\n      //     Hence if an allocation fails, cut down on the amount of excess\n      //     growth, in an attempt to succeed to perform a smaller allocation.\n  \n      // A limit is set for how much we can grow. We should not exceed that\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n  \n      // Loop through potential heap size increases. If we attempt a too eager\n      // reservation that fails, cut down on the attempted size and reserve a\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\n  \n        var newSize = Math.min(maxHeapSize, alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536));\n  \n        var replacement = growMemory(newSize);\n        if (replacement) {\n  \n          return true;\n        }\n      }\n      return false;\n    };\n\n  /** @suppress {checkTypes} */\n  var _emscripten_sample_gamepad_data = () => {\n      try {\n        if (navigator.getGamepads) return (JSEvents.lastGamepadState = navigator.getGamepads())\n          ? 0 : -1;\n      } catch(e) {\n        navigator.getGamepads = null; // Disable getGamepads() so that it won't be attempted to be used again.\n      }\n      return -1;\n    };\n\n  \n  \n  var registerBeforeUnloadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) => {\n      var beforeUnloadEventHandlerFunc = (e = event) => {\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, 0, userData);\n  \n        if (confirmationMessage) {\n          confirmationMessage = UTF8ToString(confirmationMessage);\n        }\n        if (confirmationMessage) {\n          e.preventDefault();\n          e.returnValue = confirmationMessage;\n          return confirmationMessage;\n        }\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: beforeUnloadEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_beforeunload_callback_on_thread = (userData, callbackfunc, targetThread) => {\n      if (typeof onbeforeunload == 'undefined') return -1;\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\n      // and there is no time to start proxying it anywhere.\n      if (targetThread !== 1) return -5;\n      return registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\n    };\n\n  \n  \n  \n  var registerFocusEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.focusEvent ||= _malloc(256);\n  \n      var focusEventHandlerFunc = (e = event) => {\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\n        var id = e.target.id ? e.target.id : '';\n  \n        var focusEvent = JSEvents.focusEvent;\n        stringToUTF8(nodeName, focusEvent + 0, 128);\n        stringToUTF8(id, focusEvent + 128, 128);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, focusEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: focusEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_blur_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\n\n\n  var _emscripten_set_element_css_size = (target, width, height) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      target.style.width = width + \"px\";\n      target.style.height = height + \"px\";\n  \n      return 0;\n    };\n\n  var _emscripten_set_focus_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\n\n  \n  \n  \n  var fillFullscreenChangeEventData = (eventStruct) => {\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\n      var isFullscreen = !!fullscreenElement;\n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP8[eventStruct] = isFullscreen;\n      HEAP8[(eventStruct)+(1)] = JSEvents.fullscreenEnabled();\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\n      var id = reportedElement?.id || '';\n      stringToUTF8(nodeName, eventStruct + 2, 128);\n      stringToUTF8(id, eventStruct + 130, 128);\n      HEAP32[(((eventStruct)+(260))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\n      HEAP32[(((eventStruct)+(268))>>2)] = screen.width;\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.height;\n      if (isFullscreen) {\n        JSEvents.previousFullscreenElement = fullscreenElement;\n      }\n    };\n  \n  var registerFullscreenChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.fullscreenChangeEvent ||= _malloc(276);\n  \n      var fullscreenChangeEventhandlerFunc = (e = event) => {\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\n  \n        fillFullscreenChangeEventData(fullscreenChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: fullscreenChangeEventhandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_fullscreenchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\n  \n      return registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\n    };\n\n  \n  \n  \n  var registerGamepadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.gamepadEvent ||= _malloc(1240);\n  \n      var gamepadEventHandlerFunc = (e = event) => {\n        var gamepadEvent = JSEvents.gamepadEvent;\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: gamepadEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_gamepadconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      if (_emscripten_sample_gamepad_data()) return -1;\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\n    };\n\n  \n  var _emscripten_set_gamepaddisconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      if (_emscripten_sample_gamepad_data()) return -1;\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\n    };\n\n  \n  \n  \n  var registerKeyEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.keyEvent ||= _malloc(160);\n  \n      var keyEventHandlerFunc = (e) => {\n  \n        var keyEventData = JSEvents.keyEvent;\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\n  \n        var idx = ((keyEventData)>>2);\n  \n        HEAP32[idx + 2] = e.location;\n        HEAP8[keyEventData + 12] = e.ctrlKey;\n        HEAP8[keyEventData + 13] = e.shiftKey;\n        HEAP8[keyEventData + 14] = e.altKey;\n        HEAP8[keyEventData + 15] = e.metaKey;\n        HEAP8[keyEventData + 16] = e.repeat;\n        HEAP32[idx + 5] = e.charCode;\n        HEAP32[idx + 6] = e.keyCode;\n        HEAP32[idx + 7] = e.which;\n        stringToUTF8(e.key || '', keyEventData + 32, 32);\n        stringToUTF8(e.code || '', keyEventData + 64, 32);\n        stringToUTF8(e.char || '', keyEventData + 96, 32);\n        stringToUTF8(e.locale || '', keyEventData + 128, 32);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, keyEventData, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: keyEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_keydown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\n\n  var _emscripten_set_keypress_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\n\n  var _emscripten_set_keyup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\n\n  var _emscripten_set_main_loop = (func, fps, simulateInfiniteLoop) => {\n      var iterFunc = (() => dynCall_v(func));\n      setMainLoop(iterFunc, fps, simulateInfiniteLoop);\n    };\n\n  \n  var fillMouseEventData = (eventStruct, e, target) => {\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\n      var idx = ((eventStruct)>>2);\n      HEAP32[idx + 2] = e.screenX;\n      HEAP32[idx + 3] = e.screenY;\n      HEAP32[idx + 4] = e.clientX;\n      HEAP32[idx + 5] = e.clientY;\n      HEAP8[eventStruct + 24] = e.ctrlKey;\n      HEAP8[eventStruct + 25] = e.shiftKey;\n      HEAP8[eventStruct + 26] = e.altKey;\n      HEAP8[eventStruct + 27] = e.metaKey;\n      HEAP16[idx*2 + 14] = e.button;\n      HEAP16[idx*2 + 15] = e.buttons;\n  \n      HEAP32[idx + 8] = e[\"movementX\"];\n  \n      HEAP32[idx + 9] = e[\"movementY\"];\n  \n      // Note: rect contains doubles (truncated to placate SAFE_HEAP, which is the same behaviour when writing to HEAP32 anyway)\n      var rect = getBoundingClientRect(target);\n      HEAP32[idx + 10] = e.clientX - (rect.left | 0);\n      HEAP32[idx + 11] = e.clientY - (rect.top  | 0);\n    };\n  \n  \n  var registerMouseEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.mouseEvent ||= _malloc(64);\n      target = findEventTarget(target);\n  \n      var mouseEventHandlerFunc = (e = event) => {\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: mouseEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_mousedown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\n\n  var _emscripten_set_mouseenter_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\n\n  var _emscripten_set_mouseleave_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\n\n  var _emscripten_set_mousemove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\n\n  var _emscripten_set_mouseup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\n\n  \n  \n  var fillPointerlockChangeEventData = (eventStruct) => {\n      var pointerLockElement = document.pointerLockElement;\n      var isPointerlocked = !!pointerLockElement;\n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP8[eventStruct] = isPointerlocked;\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\n      var id = pointerLockElement?.id || '';\n      stringToUTF8(nodeName, eventStruct + 1, 128);\n      stringToUTF8(id, eventStruct + 129, 128);\n    };\n  \n  var registerPointerlockChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.pointerlockChangeEvent ||= _malloc(257);\n  \n      var pointerlockChangeEventHandlerFunc = (e = event) => {\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: pointerlockChangeEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_pointerlockchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      if (!document.body?.requestPointerLock) {\n        return -1;\n      }\n  \n      target = findEventTarget(target);\n      if (!target) return -4;\n      return registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\n    };\n\n  \n  \n  var registerUiEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.uiEvent ||= _malloc(36);\n  \n      target = findEventTarget(target);\n  \n      var uiEventHandlerFunc = (e = event) => {\n        if (e.target != target) {\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\n          // causing a new scroll, etc..\n          return;\n        }\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\n        if (!b) {\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\n          return;\n        }\n        var uiEvent = JSEvents.uiEvent;\n        HEAP32[((uiEvent)>>2)] = 0; // always zero for resize and scroll\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset | 0; // scroll offsets are float\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset | 0;\n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, uiEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: uiEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_resize_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\n\n  \n  \n  \n  var registerTouchEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.touchEvent ||= _malloc(1552);\n  \n      target = findEventTarget(target);\n  \n      var touchEventHandlerFunc = (e) => {\n        var t, touches = {}, et = e.touches;\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches,\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\n  \n        for (let t of et) {\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\n          // changed/target states we may have set from previous frame.\n          t.isChanged = t.onTarget = 0;\n          touches[t.identifier] = t;\n        }\n        // Mark which touches are part of the changedTouches list.\n        for (let t of e.changedTouches) {\n          t.isChanged = 1;\n          touches[t.identifier] = t;\n        }\n        // Mark which touches are part of the targetTouches list.\n        for (let t of e.targetTouches) {\n          touches[t.identifier].onTarget = 1;\n        }\n  \n        var touchEvent = JSEvents.touchEvent;\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\n        HEAP8[touchEvent + 12] = e.ctrlKey;\n        HEAP8[touchEvent + 13] = e.shiftKey;\n        HEAP8[touchEvent + 14] = e.altKey;\n        HEAP8[touchEvent + 15] = e.metaKey;\n        var idx = touchEvent + 16;\n        var targetRect = getBoundingClientRect(target);\n        var numTouches = 0;\n        for (let t of Object.values(touches)) {\n          var idx32 = ((idx)>>2); // Pre-shift the ptr to index to HEAP32 to save code size\n          HEAP32[idx32 + 0] = t.identifier;\n          HEAP32[idx32 + 1] = t.screenX;\n          HEAP32[idx32 + 2] = t.screenY;\n          HEAP32[idx32 + 3] = t.clientX;\n          HEAP32[idx32 + 4] = t.clientY;\n          HEAP32[idx32 + 5] = t.pageX;\n          HEAP32[idx32 + 6] = t.pageY;\n          HEAP8[idx + 28] = t.isChanged;\n          HEAP8[idx + 29] = t.onTarget;\n          HEAP32[idx32 + 8] = t.clientX - (targetRect.left | 0);\n          HEAP32[idx32 + 9] = t.clientY - (targetRect.top  | 0);\n  \n          idx += 48;\n  \n          if (++numTouches > 31) {\n            break;\n          }\n        }\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, touchEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: touchEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_touchcancel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\n\n  var _emscripten_set_touchend_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\n\n  var _emscripten_set_touchmove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\n\n  var _emscripten_set_touchstart_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\n\n  \n  var fillVisibilityChangeEventData = (eventStruct) => {\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\n  \n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP8[eventStruct] = document.hidden;\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\n    };\n  \n  var registerVisibilityChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.visibilityChangeEvent ||= _malloc(8);\n  \n      var visibilityChangeEventHandlerFunc = (e = event) => {\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\n  \n        fillVisibilityChangeEventData(visibilityChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: visibilityChangeEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_visibilitychange_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      return registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\n    };\n\n  \n  \n  var registerWheelEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.wheelEvent ||= _malloc(96);\n  \n      // The DOM Level 3 events spec event 'wheel'\n      var wheelHandlerFunc = (e = event) => {\n        var wheelEvent = JSEvents.wheelEvent;\n        fillMouseEventData(wheelEvent, e, target);\n        HEAPF64[(((wheelEvent)+(64))>>3)] = e[\"deltaX\"];\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaY\"];\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaZ\"];\n        HEAP32[(((wheelEvent)+(88))>>2)] = e[\"deltaMode\"];\n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, wheelEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: wheelHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_wheel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n      if (typeof target.onwheel != 'undefined') {\n        return registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\n      } else {\n        return -1;\n      }\n    };\n\n  \n  var _emscripten_set_window_title = (title) => document.title = UTF8ToString(title);\n\n  var _emscripten_sleep = (ms) => Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\n  _emscripten_sleep.isAsync = true;\n\n  var ENV = {\n  };\n  \n  var getExecutableName = () => thisProgram || './this.program';\n  var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        // Default values.\n        // Browser language detection #8751\n        var lang = ((typeof navigator == 'object' && navigator.language) || 'C').replace('-', '_') + '.UTF-8';\n        var env = {\n          'USER': 'web_user',\n          'LOGNAME': 'web_user',\n          'PATH': '/',\n          'PWD': '/',\n          'HOME': '/home/web_user',\n          'LANG': lang,\n          '_': getExecutableName()\n        };\n        // Apply the user-provided values, if any.\n        for (var x in ENV) {\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\n          // explicitly set to be so. We allow user code to do that to\n          // force variables with default values to remain unset.\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n  \n  var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      var envp = 0;\n      for (var string of getEnvStrings()) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(((__environ)+(envp))>>2)] = ptr;\n        bufSize += stringToUTF8(string, ptr, Infinity) + 1;\n        envp += 4;\n      }\n      return 0;\n    };\n\n  \n  var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[((penviron_count)>>2)] = strings.length;\n      var bufSize = 0;\n      for (var string of strings) {\n        bufSize += lengthBytesUTF8(string) + 1;\n      }\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\n      return 0;\n    };\n\n\n  function _fd_close(fd) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  /** @param {number=} offset */\n  var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break; // nothing more to read\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_read(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doReadv(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  \n  function _fd_seek(fd, offset, whence, newOffset) {\n    offset = bigintToI53Checked(offset);\n  \n  \n  try {\n  \n      if (isNaN(offset)) return 61;\n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.llseek(stream, offset, whence);\n      HEAP64[((newOffset)>>3)] = BigInt(stream.position);\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  ;\n  }\n\n  /** @param {number=} offset */\n  var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) {\n          // No more space to write.\n          break;\n        }\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_write(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doWritev(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  function _random_get(buffer, size) {\n  try {\n  \n      randomFill(HEAPU8.subarray(buffer, buffer + size));\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n\n\n\n  /** @param {Object=} elements */\n  var autoResumeAudioContext = (ctx, elements) => {\n      if (!elements) {\n        elements = [document, document.getElementById('canvas')];\n      }\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\n        elements.forEach((element) => {\n          element?.addEventListener(event, () => {\n            if (ctx.state === 'suspended') ctx.resume();\n          }, { 'once': true });\n        });\n      });\n    };\n\n\n\n\n\n  var ptrToString = (ptr) => {\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      ptr >>>= 0;\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    };\n\n  var wasmTableMirror = [];\n  \n  /** @type {WebAssembly.Table} */\n  var wasmTable;\n  var getWasmTableEntry = (funcPtr) => {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        /** @suppress {checkTypes} */\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    };\n\n\n  var runAndAbortIfError = (func) => {\n      try {\n        return func();\n      } catch (e) {\n        abort(e);\n      }\n    };\n  \n  \n  var runtimeKeepalivePush = () => {\n      runtimeKeepaliveCounter += 1;\n    };\n  \n  var runtimeKeepalivePop = () => {\n      runtimeKeepaliveCounter -= 1;\n    };\n  \n  \n  var Asyncify = {\n  instrumentWasmImports(imports) {\n        var importPattern = /^(invoke_.*|__asyncjs__.*)$/;\n  \n        for (let [x, original] of Object.entries(imports)) {\n          if (typeof original == 'function') {\n            let isAsyncifyImport = original.isAsync || importPattern.test(x);\n          }\n        }\n      },\n  instrumentFunction(original) {\n        var wrapper = (...args) => {\n          Asyncify.exportCallStack.push(original);\n          try {\n            return original(...args);\n          } finally {\n            if (!ABORT) {\n              var top = Asyncify.exportCallStack.pop();\n              Asyncify.maybeStopUnwind();\n            }\n          }\n        };\n        Asyncify.funcWrappers.set(original, wrapper);\n        return wrapper;\n      },\n  instrumentWasmExports(exports) {\n        var ret = {};\n        for (let [x, original] of Object.entries(exports)) {\n          if (typeof original == 'function') {\n            var wrapper = Asyncify.instrumentFunction(original);\n            ret[x] = wrapper;\n  \n         } else {\n            ret[x] = original;\n          }\n        }\n        return ret;\n      },\n  State:{\n  Normal:0,\n  Unwinding:1,\n  Rewinding:2,\n  Disabled:3,\n  },\n  state:0,\n  StackSize:4096,\n  currData:null,\n  handleSleepReturnValue:0,\n  exportCallStack:[],\n  callstackFuncToId:new Map,\n  callStackIdToFunc:new Map,\n  funcWrappers:new Map,\n  callStackId:0,\n  asyncPromiseHandlers:null,\n  sleepCallbacks:[],\n  getCallStackId(func) {\n        if (!Asyncify.callstackFuncToId.has(func)) {\n          var id = Asyncify.callStackId++;\n          Asyncify.callstackFuncToId.set(func, id);\n          Asyncify.callStackIdToFunc.set(id, func);\n        }\n        return Asyncify.callstackFuncToId.get(func);\n      },\n  maybeStopUnwind() {\n        if (Asyncify.currData &&\n            Asyncify.state === Asyncify.State.Unwinding &&\n            Asyncify.exportCallStack.length === 0) {\n          // We just finished unwinding.\n          // Be sure to set the state before calling any other functions to avoid\n          // possible infinite recursion here (For example in debug pthread builds\n          // the dbg() function itself can call back into WebAssembly to get the\n          // current pthread_self() pointer).\n          Asyncify.state = Asyncify.State.Normal;\n          \n          // Keep the runtime alive so that a re-wind can be done later.\n          runAndAbortIfError(_asyncify_stop_unwind);\n          if (typeof Fibers != 'undefined') {\n            Fibers.trampoline();\n          }\n        }\n      },\n  whenDone() {\n        return new Promise((resolve, reject) => {\n          Asyncify.asyncPromiseHandlers = { resolve, reject };\n        });\n      },\n  allocateData() {\n        // An asyncify data structure has three fields:\n        //  0  current stack pos\n        //  4  max stack pos\n        //  8  id of function at bottom of the call stack (callStackIdToFunc[id] == wasm func)\n        //\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\n        // We also embed a stack in the same memory region here, right next to the structure.\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\n        var ptr = _malloc(12 + Asyncify.StackSize);\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\n        Asyncify.setDataRewindFunc(ptr);\n        return ptr;\n      },\n  setDataHeader(ptr, stack, stackSize) {\n        HEAPU32[((ptr)>>2)] = stack;\n        HEAPU32[(((ptr)+(4))>>2)] = stack + stackSize;\n      },\n  setDataRewindFunc(ptr) {\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\n      },\n  getDataRewindFunc(ptr) {\n        var id = HEAP32[(((ptr)+(8))>>2)];\n        var func = Asyncify.callStackIdToFunc.get(id);\n        return func;\n      },\n  doRewind(ptr) {\n        var original = Asyncify.getDataRewindFunc(ptr);\n        var func = Asyncify.funcWrappers.get(original);\n        // Once we have rewound and the stack we no longer need to artificially\n        // keep the runtime alive.\n        \n        return func();\n      },\n  handleSleep(startAsync) {\n        if (ABORT) return;\n        if (Asyncify.state === Asyncify.State.Normal) {\n          // Prepare to sleep. Call startAsync, and see what happens:\n          // if the code decided to call our callback synchronously,\n          // then no async operation was in fact begun, and we don't\n          // need to do anything.\n          var reachedCallback = false;\n          var reachedAfterCallback = false;\n          startAsync((handleSleepReturnValue = 0) => {\n            if (ABORT) return;\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\n            reachedCallback = true;\n            if (!reachedAfterCallback) {\n              // We are happening synchronously, so no need for async.\n              return;\n            }\n            Asyncify.state = Asyncify.State.Rewinding;\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\n            if (typeof MainLoop != 'undefined' && MainLoop.func) {\n              MainLoop.resume();\n            }\n            var asyncWasmReturnValue, isError = false;\n            try {\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\n            } catch (err) {\n              asyncWasmReturnValue = err;\n              isError = true;\n            }\n            // Track whether the return value was handled by any promise handlers.\n            var handled = false;\n            if (!Asyncify.currData) {\n              // All asynchronous execution has finished.\n              // `asyncWasmReturnValue` now contains the final\n              // return value of the exported async WASM function.\n              //\n              // Note: `asyncWasmReturnValue` is distinct from\n              // `Asyncify.handleSleepReturnValue`.\n              // `Asyncify.handleSleepReturnValue` contains the return\n              // value of the last C function to have executed\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\n              // contains the return value of the exported WASM function\n              // that may have called C functions that\n              // call `Asyncify.handleSleep()`.\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\n              if (asyncPromiseHandlers) {\n                Asyncify.asyncPromiseHandlers = null;\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\n                handled = true;\n              }\n            }\n            if (isError && !handled) {\n              // If there was an error and it was not handled by now, we have no choice but to\n              // rethrow that error into the global scope where it can be caught only by\n              // `onerror` or `onunhandledpromiserejection`.\n              throw asyncWasmReturnValue;\n            }\n          });\n          reachedAfterCallback = true;\n          if (!reachedCallback) {\n            // A true async operation was begun; start a sleep.\n            Asyncify.state = Asyncify.State.Unwinding;\n            // TODO: reuse, don't alloc/free every sleep\n            Asyncify.currData = Asyncify.allocateData();\n            if (typeof MainLoop != 'undefined' && MainLoop.func) {\n              MainLoop.pause();\n            }\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\n          }\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\n          // Stop a resume.\n          Asyncify.state = Asyncify.State.Normal;\n          runAndAbortIfError(_asyncify_stop_rewind);\n          _free(Asyncify.currData);\n          Asyncify.currData = null;\n          // Call all sleep callbacks now that the sleep-resume is all done.\n          Asyncify.sleepCallbacks.forEach(callUserCallback);\n        } else {\n          abort(`invalid state: ${Asyncify.state}`);\n        }\n        return Asyncify.handleSleepReturnValue;\n      },\n  handleAsync:(startAsync) => Asyncify.handleSleep((wakeUp) => {\n        // TODO: add error handling as a second param when handleSleep implements it.\n        startAsync().then(wakeUp);\n      }),\n  };\n\n\n  var FS_createPath = (...args) => FS.createPath(...args);\n\n\n\n  var FS_unlink = (...args) => FS.unlink(...args);\n\n  var FS_createLazyFile = (...args) => FS.createLazyFile(...args);\n\n  var FS_createDevice = (...args) => FS.createDevice(...args);\n\n  var createContext = Browser.createContext;\n\n  FS.createPreloadedFile = FS_createPreloadedFile;\n  FS.staticInit();;\n\n      Module['requestAnimationFrame'] = MainLoop.requestAnimationFrame;\n      Module['pauseMainLoop'] = MainLoop.pause;\n      Module['resumeMainLoop'] = MainLoop.resume;\n      MainLoop.init();;\nfor (let i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\n// End JS library code\n\n// include: postlibrary.js\n// This file is included after the automatically-generated JS library code\n// but before the wasm module is created.\n\n{\n\n  // Begin ATMODULES hooks\n  if (Module['noExitRuntime']) noExitRuntime = Module['noExitRuntime'];\nif (Module['preloadPlugins']) preloadPlugins = Module['preloadPlugins'];\nif (Module['print']) out = Module['print'];\nif (Module['printErr']) err = Module['printErr'];\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n  // End ATMODULES hooks\n\n  if (Module['arguments']) arguments_ = Module['arguments'];\n  if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n}\n\n// Begin runtime exports\n  Module['addRunDependency'] = addRunDependency;\n  Module['removeRunDependency'] = removeRunDependency;\n  Module['createContext'] = createContext;\n  Module['FS_createPreloadedFile'] = FS_createPreloadedFile;\n  Module['FS_unlink'] = FS_unlink;\n  Module['FS_createPath'] = FS_createPath;\n  Module['FS_createDevice'] = FS_createDevice;\n  Module['FS_createDataFile'] = FS_createDataFile;\n  Module['FS_createLazyFile'] = FS_createLazyFile;\n  Module['LZ4'] = LZ4;\n  // End runtime exports\n  // Begin JS library exports\n  // End JS library exports\n\n// end include: postlibrary.js\n\nvar ASM_CONSTS = {\n  561376: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \n 561432: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line : $ { args }`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs( true, function(err) { if (err) { console.error(`Error mounting home dir $ { err }`); return; } Module._WebMain($0, $1); }); },  \n 562027: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \n 562083: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs( $0, function(err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \n 562232: ($0, $1, $2, $3, $4) => { if (typeof window === 'undefined' || (window.AudioContext || window.webkitAudioContext) === undefined) { return 0; } if (typeof(window.miniaudio) === 'undefined') { window.miniaudio = { referenceCount: 0 }; window.miniaudio.device_type = {}; window.miniaudio.device_type.playback = $0; window.miniaudio.device_type.capture = $1; window.miniaudio.device_type.duplex = $2; window.miniaudio.device_state = {}; window.miniaudio.device_state.stopped = $3; window.miniaudio.device_state.started = $4; let miniaudio = window.miniaudio; miniaudio.devices = []; miniaudio.track_device = function(device) { for (var iDevice = 0; iDevice < miniaudio.devices.length; ++iDevice) { if (miniaudio.devices[iDevice] == null) { miniaudio.devices[iDevice] = device; return iDevice; } } miniaudio.devices.push(device); return miniaudio.devices.length - 1; }; miniaudio.untrack_device_by_index = function(deviceIndex) { miniaudio.devices[deviceIndex] = null; while (miniaudio.devices.length > 0) { if (miniaudio.devices[miniaudio.devices.length-1] == null) { miniaudio.devices.pop(); } else { break; } } }; miniaudio.untrack_device = function(device) { for (var iDevice = 0; iDevice < miniaudio.devices.length; ++iDevice) { if (miniaudio.devices[iDevice] == device) { return miniaudio.untrack_device_by_index(iDevice); } } }; miniaudio.get_device_by_index = function(deviceIndex) { return miniaudio.devices[deviceIndex]; }; miniaudio.unlock_event_types = (function(){ return ['touchend', 'click']; })(); miniaudio.unlock = function() { for(var i = 0; i < miniaudio.devices.length; ++i) { var device = miniaudio.devices[i]; if (device != null && device.webaudio != null && device.state === miniaudio.device_state.started) { device.webaudio.resume().then(() => { _ma_device__on_notification_unlocked(device.pDevice); }, (error) => {console.error(\"Failed to resume audiocontext\", error); }); } } miniaudio.unlock_event_types.map(function(event_type) { document.removeEventListener(event_type, miniaudio.unlock, true); }); }; miniaudio.unlock_event_types.map(function(event_type) { document.addEventListener(event_type, miniaudio.unlock, true); }); } window.miniaudio.referenceCount += 1; return 1; },  \n 564410: () => { if (typeof(window.miniaudio) !== 'undefined') { miniaudio.unlock_event_types.map(function(event_type) { document.removeEventListener(event_type, miniaudio.unlock, true); }); window.miniaudio.referenceCount -= 1; if (window.miniaudio.referenceCount === 0) { delete window.miniaudio; } } },  \n 564700: () => { return (navigator.mediaDevices !== undefined && navigator.mediaDevices.getUserMedia !== undefined); },  \n 564804: () => { try { var temp = new (window.AudioContext || window.webkitAudioContext)(); var sampleRate = temp.sampleRate; temp.close(); return sampleRate; } catch(e) { return 0; } },  \n 564975: ($0, $1, $2, $3, $4, $5) => { var deviceType = $0; var channels = $1; var sampleRate = $2; var bufferSize = $3; var pIntermediaryBuffer = $4; var pDevice = $5; if (typeof(window.miniaudio) === 'undefined') { return -1; } var device = {}; var audioContextOptions = {}; if (deviceType == window.miniaudio.device_type.playback && sampleRate != 0) { audioContextOptions.sampleRate = sampleRate; } device.webaudio = new (window.AudioContext || window.webkitAudioContext)(audioContextOptions); device.webaudio.suspend(); device.state = window.miniaudio.device_state.stopped; var channelCountIn = 0; var channelCountOut = channels; if (deviceType != window.miniaudio.device_type.playback) { channelCountIn = channels; } device.scriptNode = device.webaudio.createScriptProcessor(bufferSize, channelCountIn, channelCountOut); device.scriptNode.onaudioprocess = function(e) { if (device.intermediaryBufferView == null || device.intermediaryBufferView.length == 0) { device.intermediaryBufferView = new Float32Array(HEAPF32.buffer, pIntermediaryBuffer, bufferSize * channels); } if (deviceType == window.miniaudio.device_type.capture || deviceType == window.miniaudio.device_type.duplex) { for (var iChannel = 0; iChannel < channels; iChannel += 1) { var inputBuffer = e.inputBuffer.getChannelData(iChannel); var intermediaryBuffer = device.intermediaryBufferView; for (var iFrame = 0; iFrame < bufferSize; iFrame += 1) { intermediaryBuffer[iFrame*channels + iChannel] = inputBuffer[iFrame]; } } _ma_device_process_pcm_frames_capture__webaudio(pDevice, bufferSize, pIntermediaryBuffer); } if (deviceType == window.miniaudio.device_type.playback || deviceType == window.miniaudio.device_type.duplex) { _ma_device_process_pcm_frames_playback__webaudio(pDevice, bufferSize, pIntermediaryBuffer); for (var iChannel = 0; iChannel < e.outputBuffer.numberOfChannels; ++iChannel) { var outputBuffer = e.outputBuffer.getChannelData(iChannel); var intermediaryBuffer = device.intermediaryBufferView; for (var iFrame = 0; iFrame < bufferSize; iFrame += 1) { outputBuffer[iFrame] = intermediaryBuffer[iFrame*channels + iChannel]; } } } else { for (var iChannel = 0; iChannel < e.outputBuffer.numberOfChannels; ++iChannel) { e.outputBuffer.getChannelData(iChannel).fill(0.0); } } }; if (deviceType == window.miniaudio.device_type.capture || deviceType == window.miniaudio.device_type.duplex) { navigator.mediaDevices.getUserMedia({audio:true, video:false}) .then(function(stream) { device.streamNode = device.webaudio.createMediaStreamSource(stream); device.streamNode.connect(device.scriptNode); device.scriptNode.connect(device.webaudio.destination); }) .catch(function(error) { console.log(\"Failed to get user media: \" + error); }); } if (deviceType == window.miniaudio.device_type.playback) { device.scriptNode.connect(device.webaudio.destination); } device.pDevice = pDevice; return window.miniaudio.track_device(device); },  \n 567852: ($0) => { return window.miniaudio.get_device_by_index($0).webaudio.sampleRate; },  \n 567925: ($0) => { var device = window.miniaudio.get_device_by_index($0); if (device.scriptNode !== undefined) { device.scriptNode.onaudioprocess = function(e) {}; device.scriptNode.disconnect(); device.scriptNode = undefined; } if (device.streamNode !== undefined) { device.streamNode.disconnect(); device.streamNode = undefined; } device.webaudio.close(); device.webaudio = undefined; device.pDevice = undefined; },  \n 568325: ($0) => { window.miniaudio.untrack_device_by_index($0); },  \n 568375: ($0) => { var device = window.miniaudio.get_device_by_index($0); device.webaudio.resume(); device.state = window.miniaudio.device_state.started; },  \n 568514: ($0) => { var device = window.miniaudio.get_device_by_index($0); device.webaudio.suspend(); device.state = window.miniaudio.device_state.stopped; },  \n 568654: ($0) => { var str = UTF8ToString($0) + '\\n\\n' + 'Abort/Retry/Ignore/AlwaysIgnore? [ariA] :'; var reply = window.prompt(str, \"i\"); if (reply === null) { reply = \"i\"; } return allocate(intArrayFromString(reply), 'i8', ALLOC_NORMAL); },  \n 568879: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \n 569026: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \n 569260: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { if ((typeof navigator.userActivation) === 'undefined') { autoResumeAudioContext(SDL2.audioContext); } } } return SDL2.audioContext === undefined ? -1 : 0; },  \n 569812: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \n 569880: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearInterval(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; SDL2.capture.silenceBuffer = undefined } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setInterval(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \n 571573: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } if (SDL2.audio.silenceTimer !== undefined) { clearInterval(SDL2.audio.silenceTimer); SDL2.audio.silenceTimer = undefined; SDL2.audio.silenceBuffer = undefined; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); if (SDL2.audioContext.state === 'suspended') { SDL2.audio.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.audio.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { if ((typeof navigator.userActivation) !== 'undefined') { if (navigator.userActivation.hasBeenActive) { SDL2.audioContext.resume(); } } SDL2.audio.currentOutputBuffer = SDL2.audio.silenceBuffer; dynCall('vi', $2, [$3]); SDL2.audio.currentOutputBuffer = undefined; }; SDL2.audio.silenceTimer = setInterval(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); } },  \n 572748: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \n 573353: ($0, $1) => { var SDL2 = Module['SDL2']; var buf = $0 >>> 2; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[buf + (j*numChannels + c)]; } } },  \n 573842: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearInterval(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); } if (SDL2.audio.silenceTimer !== undefined) { clearInterval(SDL2.audio.silenceTimer); } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \n 574848: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels / 4; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \n 576316: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels / 4; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \n 577304: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \n 577387: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \n 577456: () => { return window.innerWidth; },  \n 577486: () => { return window.innerHeight; },  \n 577517: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\n};\nfunction slog_js_log(level,c_str) { const str = UTF8ToString(c_str); switch (level) { case 0: console.error(str); break; case 1: console.error(str); break; case 2: console.warn(str); break; default: console.info(str); break; } }\n\n// Imports from the Wasm binary.\nvar __ZdaPv,\n  __ZdlPvm,\n  __ZdaPvm,\n  _malloc,\n  _free,\n  _calloc,\n  _realloc,\n  _WebSetFullscreen,\n  _WebOpenGameMenu,\n  _WebSyncScreenSize,\n  _WebMain,\n  _main,\n  _ma_device__on_notification_unlocked,\n  _ma_malloc_emscripten,\n  _ma_free_emscripten,\n  _ma_device_process_pcm_frames_capture__webaudio,\n  _ma_device_process_pcm_frames_playback__webaudio,\n  ___libc_free,\n  ___libc_malloc,\n  _emscripten_builtin_malloc,\n  _strndup,\n  __ZdlPv,\n  __Znaj,\n  __ZnajSt11align_val_t,\n  __Znwj,\n  __ZnwjSt11align_val_t,\n  ___libc_calloc,\n  ___libc_realloc,\n  _emscripten_builtin_calloc,\n  _emscripten_builtin_free,\n  _emscripten_builtin_realloc,\n  _malloc_size,\n  _malloc_usable_size,\n  _reallocf,\n  _setThrew,\n  __emscripten_stack_restore,\n  __emscripten_stack_alloc,\n  _emscripten_stack_get_current,\n  dynCall_viii,\n  dynCall_vi,\n  dynCall_iii,\n  dynCall_ii,\n  dynCall_vii,\n  dynCall_fi,\n  dynCall_fii,\n  dynCall_v,\n  dynCall_viifff,\n  dynCall_viifffii,\n  dynCall_viiiifiiiii,\n  dynCall_viiiiiii,\n  dynCall_iiiiiiiii,\n  dynCall_iiiiiii,\n  dynCall_iiiji,\n  dynCall_iij,\n  dynCall_iiiii,\n  dynCall_iiji,\n  dynCall_i,\n  dynCall_iiii,\n  dynCall_viiiii,\n  dynCall_viif,\n  dynCall_viff,\n  dynCall_vif,\n  dynCall_viiiiiiiiiii,\n  dynCall_viiiiiiii,\n  dynCall_viiii,\n  dynCall_viiffi,\n  dynCall_iiiiii,\n  dynCall_iiid,\n  dynCall_jii,\n  dynCall_iijii,\n  dynCall_viiiiii,\n  dynCall_diii,\n  dynCall_viiid,\n  dynCall_viiiddd,\n  dynCall_vid,\n  dynCall_ji,\n  dynCall_jiji,\n  dynCall_vffff,\n  dynCall_vf,\n  dynCall_viiiiiiiii,\n  dynCall_vff,\n  dynCall_vfi,\n  dynCall_vifff,\n  dynCall_viffff,\n  dynCall_vfff,\n  dynCall_viiiiiiiiii,\n  dynCall_viifi,\n  dynCall_iidiiii,\n  _asyncify_start_unwind,\n  _asyncify_stop_unwind,\n  _asyncify_start_rewind,\n  _asyncify_stop_rewind;\n\n\nfunction assignWasmExports(wasmExports) {\n  Module['__ZdaPv'] = __ZdaPv = wasmExports['_ZdaPv'];\n  Module['__ZdlPvm'] = __ZdlPvm = wasmExports['_ZdlPvm'];\n  Module['__ZdaPvm'] = __ZdaPvm = wasmExports['_ZdaPvm'];\n  _malloc = wasmExports['malloc'];\n  _free = wasmExports['free'];\n  Module['_calloc'] = _calloc = wasmExports['calloc'];\n  _realloc = wasmExports['realloc'];\n  Module['_WebSetFullscreen'] = _WebSetFullscreen = wasmExports['WebSetFullscreen'];\n  Module['_WebOpenGameMenu'] = _WebOpenGameMenu = wasmExports['WebOpenGameMenu'];\n  Module['_WebSyncScreenSize'] = _WebSyncScreenSize = wasmExports['WebSyncScreenSize'];\n  Module['_WebMain'] = _WebMain = wasmExports['WebMain'];\n  Module['_main'] = _main = wasmExports['__main_argc_argv'];\n  Module['_ma_device__on_notification_unlocked'] = _ma_device__on_notification_unlocked = wasmExports['ma_device__on_notification_unlocked'];\n  Module['_ma_malloc_emscripten'] = _ma_malloc_emscripten = wasmExports['ma_malloc_emscripten'];\n  Module['_ma_free_emscripten'] = _ma_free_emscripten = wasmExports['ma_free_emscripten'];\n  Module['_ma_device_process_pcm_frames_capture__webaudio'] = _ma_device_process_pcm_frames_capture__webaudio = wasmExports['ma_device_process_pcm_frames_capture__webaudio'];\n  Module['_ma_device_process_pcm_frames_playback__webaudio'] = _ma_device_process_pcm_frames_playback__webaudio = wasmExports['ma_device_process_pcm_frames_playback__webaudio'];\n  Module['___libc_free'] = ___libc_free = wasmExports['__libc_free'];\n  Module['___libc_malloc'] = ___libc_malloc = wasmExports['__libc_malloc'];\n  Module['_emscripten_builtin_malloc'] = _emscripten_builtin_malloc = wasmExports['emscripten_builtin_malloc'];\n  Module['_strndup'] = _strndup = wasmExports['strndup'];\n  Module['__ZdlPv'] = __ZdlPv = wasmExports['_ZdlPv'];\n  Module['__Znaj'] = __Znaj = wasmExports['_Znaj'];\n  Module['__ZnajSt11align_val_t'] = __ZnajSt11align_val_t = wasmExports['_ZnajSt11align_val_t'];\n  Module['__Znwj'] = __Znwj = wasmExports['_Znwj'];\n  Module['__ZnwjSt11align_val_t'] = __ZnwjSt11align_val_t = wasmExports['_ZnwjSt11align_val_t'];\n  Module['___libc_calloc'] = ___libc_calloc = wasmExports['__libc_calloc'];\n  Module['___libc_realloc'] = ___libc_realloc = wasmExports['__libc_realloc'];\n  Module['_emscripten_builtin_calloc'] = _emscripten_builtin_calloc = wasmExports['emscripten_builtin_calloc'];\n  Module['_emscripten_builtin_free'] = _emscripten_builtin_free = wasmExports['emscripten_builtin_free'];\n  Module['_emscripten_builtin_realloc'] = _emscripten_builtin_realloc = wasmExports['emscripten_builtin_realloc'];\n  Module['_malloc_size'] = _malloc_size = wasmExports['malloc_size'];\n  Module['_malloc_usable_size'] = _malloc_usable_size = wasmExports['malloc_usable_size'];\n  Module['_reallocf'] = _reallocf = wasmExports['reallocf'];\n  _setThrew = wasmExports['setThrew'];\n  __emscripten_stack_restore = wasmExports['_emscripten_stack_restore'];\n  __emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc'];\n  _emscripten_stack_get_current = wasmExports['emscripten_stack_get_current'];\n  dynCalls['viii'] = dynCall_viii = wasmExports['dynCall_viii'];\n  dynCalls['vi'] = dynCall_vi = wasmExports['dynCall_vi'];\n  dynCalls['iii'] = dynCall_iii = wasmExports['dynCall_iii'];\n  dynCalls['ii'] = dynCall_ii = wasmExports['dynCall_ii'];\n  dynCalls['vii'] = dynCall_vii = wasmExports['dynCall_vii'];\n  dynCalls['fi'] = dynCall_fi = wasmExports['dynCall_fi'];\n  dynCalls['fii'] = dynCall_fii = wasmExports['dynCall_fii'];\n  dynCalls['v'] = dynCall_v = wasmExports['dynCall_v'];\n  dynCalls['viifff'] = dynCall_viifff = wasmExports['dynCall_viifff'];\n  dynCalls['viifffii'] = dynCall_viifffii = wasmExports['dynCall_viifffii'];\n  dynCalls['viiiifiiiii'] = dynCall_viiiifiiiii = wasmExports['dynCall_viiiifiiiii'];\n  dynCalls['viiiiiii'] = dynCall_viiiiiii = wasmExports['dynCall_viiiiiii'];\n  dynCalls['iiiiiiiii'] = dynCall_iiiiiiiii = wasmExports['dynCall_iiiiiiiii'];\n  dynCalls['iiiiiii'] = dynCall_iiiiiii = wasmExports['dynCall_iiiiiii'];\n  dynCalls['iiiji'] = dynCall_iiiji = wasmExports['dynCall_iiiji'];\n  dynCalls['iij'] = dynCall_iij = wasmExports['dynCall_iij'];\n  dynCalls['iiiii'] = dynCall_iiiii = wasmExports['dynCall_iiiii'];\n  dynCalls['iiji'] = dynCall_iiji = wasmExports['dynCall_iiji'];\n  dynCalls['i'] = dynCall_i = wasmExports['dynCall_i'];\n  dynCalls['iiii'] = dynCall_iiii = wasmExports['dynCall_iiii'];\n  dynCalls['viiiii'] = dynCall_viiiii = wasmExports['dynCall_viiiii'];\n  dynCalls['viif'] = dynCall_viif = wasmExports['dynCall_viif'];\n  dynCalls['viff'] = dynCall_viff = wasmExports['dynCall_viff'];\n  dynCalls['vif'] = dynCall_vif = wasmExports['dynCall_vif'];\n  dynCalls['viiiiiiiiiii'] = dynCall_viiiiiiiiiii = wasmExports['dynCall_viiiiiiiiiii'];\n  dynCalls['viiiiiiii'] = dynCall_viiiiiiii = wasmExports['dynCall_viiiiiiii'];\n  dynCalls['viiii'] = dynCall_viiii = wasmExports['dynCall_viiii'];\n  dynCalls['viiffi'] = dynCall_viiffi = wasmExports['dynCall_viiffi'];\n  dynCalls['iiiiii'] = dynCall_iiiiii = wasmExports['dynCall_iiiiii'];\n  dynCalls['iiid'] = dynCall_iiid = wasmExports['dynCall_iiid'];\n  dynCalls['jii'] = dynCall_jii = wasmExports['dynCall_jii'];\n  dynCalls['iijii'] = dynCall_iijii = wasmExports['dynCall_iijii'];\n  dynCalls['viiiiii'] = dynCall_viiiiii = wasmExports['dynCall_viiiiii'];\n  dynCalls['diii'] = dynCall_diii = wasmExports['dynCall_diii'];\n  dynCalls['viiid'] = dynCall_viiid = wasmExports['dynCall_viiid'];\n  dynCalls['viiiddd'] = dynCall_viiiddd = wasmExports['dynCall_viiiddd'];\n  dynCalls['vid'] = dynCall_vid = wasmExports['dynCall_vid'];\n  dynCalls['ji'] = dynCall_ji = wasmExports['dynCall_ji'];\n  dynCalls['jiji'] = dynCall_jiji = wasmExports['dynCall_jiji'];\n  dynCalls['vffff'] = dynCall_vffff = wasmExports['dynCall_vffff'];\n  dynCalls['vf'] = dynCall_vf = wasmExports['dynCall_vf'];\n  dynCalls['viiiiiiiii'] = dynCall_viiiiiiiii = wasmExports['dynCall_viiiiiiiii'];\n  dynCalls['vff'] = dynCall_vff = wasmExports['dynCall_vff'];\n  dynCalls['vfi'] = dynCall_vfi = wasmExports['dynCall_vfi'];\n  dynCalls['vifff'] = dynCall_vifff = wasmExports['dynCall_vifff'];\n  dynCalls['viffff'] = dynCall_viffff = wasmExports['dynCall_viffff'];\n  dynCalls['vfff'] = dynCall_vfff = wasmExports['dynCall_vfff'];\n  dynCalls['viiiiiiiiii'] = dynCall_viiiiiiiiii = wasmExports['dynCall_viiiiiiiiii'];\n  dynCalls['viifi'] = dynCall_viifi = wasmExports['dynCall_viifi'];\n  dynCalls['iidiiii'] = dynCall_iidiiii = wasmExports['dynCall_iidiiii'];\n  _asyncify_start_unwind = wasmExports['asyncify_start_unwind'];\n  _asyncify_stop_unwind = wasmExports['asyncify_stop_unwind'];\n  _asyncify_start_rewind = wasmExports['asyncify_start_rewind'];\n  _asyncify_stop_rewind = wasmExports['asyncify_stop_rewind'];\n}\nvar wasmImports = {\n  /** @export */\n  __syscall_dup3: ___syscall_dup3,\n  /** @export */\n  __syscall_faccessat: ___syscall_faccessat,\n  /** @export */\n  __syscall_fcntl64: ___syscall_fcntl64,\n  /** @export */\n  __syscall_fstat64: ___syscall_fstat64,\n  /** @export */\n  __syscall_getdents64: ___syscall_getdents64,\n  /** @export */\n  __syscall_ioctl: ___syscall_ioctl,\n  /** @export */\n  __syscall_lstat64: ___syscall_lstat64,\n  /** @export */\n  __syscall_mkdirat: ___syscall_mkdirat,\n  /** @export */\n  __syscall_newfstatat: ___syscall_newfstatat,\n  /** @export */\n  __syscall_openat: ___syscall_openat,\n  /** @export */\n  __syscall_readlinkat: ___syscall_readlinkat,\n  /** @export */\n  __syscall_renameat: ___syscall_renameat,\n  /** @export */\n  __syscall_rmdir: ___syscall_rmdir,\n  /** @export */\n  __syscall_stat64: ___syscall_stat64,\n  /** @export */\n  __syscall_unlinkat: ___syscall_unlinkat,\n  /** @export */\n  _abort_js: __abort_js,\n  /** @export */\n  _emscripten_system: __emscripten_system,\n  /** @export */\n  _emscripten_throw_longjmp: __emscripten_throw_longjmp,\n  /** @export */\n  _gmtime_js: __gmtime_js,\n  /** @export */\n  _localtime_js: __localtime_js,\n  /** @export */\n  _mktime_js: __mktime_js,\n  /** @export */\n  _tzset_js: __tzset_js,\n  /** @export */\n  clock_time_get: _clock_time_get,\n  /** @export */\n  eglBindAPI: _eglBindAPI,\n  /** @export */\n  eglChooseConfig: _eglChooseConfig,\n  /** @export */\n  eglCreateContext: _eglCreateContext,\n  /** @export */\n  eglCreateWindowSurface: _eglCreateWindowSurface,\n  /** @export */\n  eglDestroyContext: _eglDestroyContext,\n  /** @export */\n  eglDestroySurface: _eglDestroySurface,\n  /** @export */\n  eglGetConfigAttrib: _eglGetConfigAttrib,\n  /** @export */\n  eglGetDisplay: _eglGetDisplay,\n  /** @export */\n  eglGetError: _eglGetError,\n  /** @export */\n  eglInitialize: _eglInitialize,\n  /** @export */\n  eglMakeCurrent: _eglMakeCurrent,\n  /** @export */\n  eglQueryString: _eglQueryString,\n  /** @export */\n  eglSwapBuffers: _eglSwapBuffers,\n  /** @export */\n  eglSwapInterval: _eglSwapInterval,\n  /** @export */\n  eglTerminate: _eglTerminate,\n  /** @export */\n  eglWaitGL: _eglWaitGL,\n  /** @export */\n  eglWaitNative: _eglWaitNative,\n  /** @export */\n  emscripten_asm_const_int: _emscripten_asm_const_int,\n  /** @export */\n  emscripten_asm_const_int_sync_on_main_thread: _emscripten_asm_const_int_sync_on_main_thread,\n  /** @export */\n  emscripten_asm_const_ptr_sync_on_main_thread: _emscripten_asm_const_ptr_sync_on_main_thread,\n  /** @export */\n  emscripten_date_now: _emscripten_date_now,\n  /** @export */\n  emscripten_enter_soft_fullscreen: _emscripten_enter_soft_fullscreen,\n  /** @export */\n  emscripten_err: _emscripten_err,\n  /** @export */\n  emscripten_exit_fullscreen: _emscripten_exit_fullscreen,\n  /** @export */\n  emscripten_exit_pointerlock: _emscripten_exit_pointerlock,\n  /** @export */\n  emscripten_exit_soft_fullscreen: _emscripten_exit_soft_fullscreen,\n  /** @export */\n  emscripten_get_device_pixel_ratio: _emscripten_get_device_pixel_ratio,\n  /** @export */\n  emscripten_get_element_css_size: _emscripten_get_element_css_size,\n  /** @export */\n  emscripten_get_gamepad_status: _emscripten_get_gamepad_status,\n  /** @export */\n  emscripten_get_now: _emscripten_get_now,\n  /** @export */\n  emscripten_get_num_gamepads: _emscripten_get_num_gamepads,\n  /** @export */\n  emscripten_get_screen_size: _emscripten_get_screen_size,\n  /** @export */\n  emscripten_glActiveTexture: _emscripten_glActiveTexture,\n  /** @export */\n  emscripten_glAttachShader: _emscripten_glAttachShader,\n  /** @export */\n  emscripten_glBeginQuery: _emscripten_glBeginQuery,\n  /** @export */\n  emscripten_glBeginQueryEXT: _emscripten_glBeginQueryEXT,\n  /** @export */\n  emscripten_glBeginTransformFeedback: _emscripten_glBeginTransformFeedback,\n  /** @export */\n  emscripten_glBindAttribLocation: _emscripten_glBindAttribLocation,\n  /** @export */\n  emscripten_glBindBuffer: _emscripten_glBindBuffer,\n  /** @export */\n  emscripten_glBindBufferBase: _emscripten_glBindBufferBase,\n  /** @export */\n  emscripten_glBindBufferRange: _emscripten_glBindBufferRange,\n  /** @export */\n  emscripten_glBindFramebuffer: _emscripten_glBindFramebuffer,\n  /** @export */\n  emscripten_glBindRenderbuffer: _emscripten_glBindRenderbuffer,\n  /** @export */\n  emscripten_glBindSampler: _emscripten_glBindSampler,\n  /** @export */\n  emscripten_glBindTexture: _emscripten_glBindTexture,\n  /** @export */\n  emscripten_glBindTransformFeedback: _emscripten_glBindTransformFeedback,\n  /** @export */\n  emscripten_glBindVertexArray: _emscripten_glBindVertexArray,\n  /** @export */\n  emscripten_glBindVertexArrayOES: _emscripten_glBindVertexArrayOES,\n  /** @export */\n  emscripten_glBlendColor: _emscripten_glBlendColor,\n  /** @export */\n  emscripten_glBlendEquation: _emscripten_glBlendEquation,\n  /** @export */\n  emscripten_glBlendEquationSeparate: _emscripten_glBlendEquationSeparate,\n  /** @export */\n  emscripten_glBlendFunc: _emscripten_glBlendFunc,\n  /** @export */\n  emscripten_glBlendFuncSeparate: _emscripten_glBlendFuncSeparate,\n  /** @export */\n  emscripten_glBlitFramebuffer: _emscripten_glBlitFramebuffer,\n  /** @export */\n  emscripten_glBufferData: _emscripten_glBufferData,\n  /** @export */\n  emscripten_glBufferSubData: _emscripten_glBufferSubData,\n  /** @export */\n  emscripten_glCheckFramebufferStatus: _emscripten_glCheckFramebufferStatus,\n  /** @export */\n  emscripten_glClear: _emscripten_glClear,\n  /** @export */\n  emscripten_glClearBufferfi: _emscripten_glClearBufferfi,\n  /** @export */\n  emscripten_glClearBufferfv: _emscripten_glClearBufferfv,\n  /** @export */\n  emscripten_glClearBufferiv: _emscripten_glClearBufferiv,\n  /** @export */\n  emscripten_glClearBufferuiv: _emscripten_glClearBufferuiv,\n  /** @export */\n  emscripten_glClearColor: _emscripten_glClearColor,\n  /** @export */\n  emscripten_glClearDepthf: _emscripten_glClearDepthf,\n  /** @export */\n  emscripten_glClearStencil: _emscripten_glClearStencil,\n  /** @export */\n  emscripten_glClientWaitSync: _emscripten_glClientWaitSync,\n  /** @export */\n  emscripten_glClipControlEXT: _emscripten_glClipControlEXT,\n  /** @export */\n  emscripten_glColorMask: _emscripten_glColorMask,\n  /** @export */\n  emscripten_glCompileShader: _emscripten_glCompileShader,\n  /** @export */\n  emscripten_glCompressedTexImage2D: _emscripten_glCompressedTexImage2D,\n  /** @export */\n  emscripten_glCompressedTexImage3D: _emscripten_glCompressedTexImage3D,\n  /** @export */\n  emscripten_glCompressedTexSubImage2D: _emscripten_glCompressedTexSubImage2D,\n  /** @export */\n  emscripten_glCompressedTexSubImage3D: _emscripten_glCompressedTexSubImage3D,\n  /** @export */\n  emscripten_glCopyBufferSubData: _emscripten_glCopyBufferSubData,\n  /** @export */\n  emscripten_glCopyTexImage2D: _emscripten_glCopyTexImage2D,\n  /** @export */\n  emscripten_glCopyTexSubImage2D: _emscripten_glCopyTexSubImage2D,\n  /** @export */\n  emscripten_glCopyTexSubImage3D: _emscripten_glCopyTexSubImage3D,\n  /** @export */\n  emscripten_glCreateProgram: _emscripten_glCreateProgram,\n  /** @export */\n  emscripten_glCreateShader: _emscripten_glCreateShader,\n  /** @export */\n  emscripten_glCullFace: _emscripten_glCullFace,\n  /** @export */\n  emscripten_glDeleteBuffers: _emscripten_glDeleteBuffers,\n  /** @export */\n  emscripten_glDeleteFramebuffers: _emscripten_glDeleteFramebuffers,\n  /** @export */\n  emscripten_glDeleteProgram: _emscripten_glDeleteProgram,\n  /** @export */\n  emscripten_glDeleteQueries: _emscripten_glDeleteQueries,\n  /** @export */\n  emscripten_glDeleteQueriesEXT: _emscripten_glDeleteQueriesEXT,\n  /** @export */\n  emscripten_glDeleteRenderbuffers: _emscripten_glDeleteRenderbuffers,\n  /** @export */\n  emscripten_glDeleteSamplers: _emscripten_glDeleteSamplers,\n  /** @export */\n  emscripten_glDeleteShader: _emscripten_glDeleteShader,\n  /** @export */\n  emscripten_glDeleteSync: _emscripten_glDeleteSync,\n  /** @export */\n  emscripten_glDeleteTextures: _emscripten_glDeleteTextures,\n  /** @export */\n  emscripten_glDeleteTransformFeedbacks: _emscripten_glDeleteTransformFeedbacks,\n  /** @export */\n  emscripten_glDeleteVertexArrays: _emscripten_glDeleteVertexArrays,\n  /** @export */\n  emscripten_glDeleteVertexArraysOES: _emscripten_glDeleteVertexArraysOES,\n  /** @export */\n  emscripten_glDepthFunc: _emscripten_glDepthFunc,\n  /** @export */\n  emscripten_glDepthMask: _emscripten_glDepthMask,\n  /** @export */\n  emscripten_glDepthRangef: _emscripten_glDepthRangef,\n  /** @export */\n  emscripten_glDetachShader: _emscripten_glDetachShader,\n  /** @export */\n  emscripten_glDisable: _emscripten_glDisable,\n  /** @export */\n  emscripten_glDisableVertexAttribArray: _emscripten_glDisableVertexAttribArray,\n  /** @export */\n  emscripten_glDrawArrays: _emscripten_glDrawArrays,\n  /** @export */\n  emscripten_glDrawArraysInstanced: _emscripten_glDrawArraysInstanced,\n  /** @export */\n  emscripten_glDrawArraysInstancedANGLE: _emscripten_glDrawArraysInstancedANGLE,\n  /** @export */\n  emscripten_glDrawArraysInstancedARB: _emscripten_glDrawArraysInstancedARB,\n  /** @export */\n  emscripten_glDrawArraysInstancedEXT: _emscripten_glDrawArraysInstancedEXT,\n  /** @export */\n  emscripten_glDrawArraysInstancedNV: _emscripten_glDrawArraysInstancedNV,\n  /** @export */\n  emscripten_glDrawBuffers: _emscripten_glDrawBuffers,\n  /** @export */\n  emscripten_glDrawBuffersEXT: _emscripten_glDrawBuffersEXT,\n  /** @export */\n  emscripten_glDrawBuffersWEBGL: _emscripten_glDrawBuffersWEBGL,\n  /** @export */\n  emscripten_glDrawElements: _emscripten_glDrawElements,\n  /** @export */\n  emscripten_glDrawElementsInstanced: _emscripten_glDrawElementsInstanced,\n  /** @export */\n  emscripten_glDrawElementsInstancedANGLE: _emscripten_glDrawElementsInstancedANGLE,\n  /** @export */\n  emscripten_glDrawElementsInstancedARB: _emscripten_glDrawElementsInstancedARB,\n  /** @export */\n  emscripten_glDrawElementsInstancedEXT: _emscripten_glDrawElementsInstancedEXT,\n  /** @export */\n  emscripten_glDrawElementsInstancedNV: _emscripten_glDrawElementsInstancedNV,\n  /** @export */\n  emscripten_glDrawRangeElements: _emscripten_glDrawRangeElements,\n  /** @export */\n  emscripten_glEnable: _emscripten_glEnable,\n  /** @export */\n  emscripten_glEnableVertexAttribArray: _emscripten_glEnableVertexAttribArray,\n  /** @export */\n  emscripten_glEndQuery: _emscripten_glEndQuery,\n  /** @export */\n  emscripten_glEndQueryEXT: _emscripten_glEndQueryEXT,\n  /** @export */\n  emscripten_glEndTransformFeedback: _emscripten_glEndTransformFeedback,\n  /** @export */\n  emscripten_glFenceSync: _emscripten_glFenceSync,\n  /** @export */\n  emscripten_glFinish: _emscripten_glFinish,\n  /** @export */\n  emscripten_glFlush: _emscripten_glFlush,\n  /** @export */\n  emscripten_glFramebufferRenderbuffer: _emscripten_glFramebufferRenderbuffer,\n  /** @export */\n  emscripten_glFramebufferTexture2D: _emscripten_glFramebufferTexture2D,\n  /** @export */\n  emscripten_glFramebufferTextureLayer: _emscripten_glFramebufferTextureLayer,\n  /** @export */\n  emscripten_glFrontFace: _emscripten_glFrontFace,\n  /** @export */\n  emscripten_glGenBuffers: _emscripten_glGenBuffers,\n  /** @export */\n  emscripten_glGenFramebuffers: _emscripten_glGenFramebuffers,\n  /** @export */\n  emscripten_glGenQueries: _emscripten_glGenQueries,\n  /** @export */\n  emscripten_glGenQueriesEXT: _emscripten_glGenQueriesEXT,\n  /** @export */\n  emscripten_glGenRenderbuffers: _emscripten_glGenRenderbuffers,\n  /** @export */\n  emscripten_glGenSamplers: _emscripten_glGenSamplers,\n  /** @export */\n  emscripten_glGenTextures: _emscripten_glGenTextures,\n  /** @export */\n  emscripten_glGenTransformFeedbacks: _emscripten_glGenTransformFeedbacks,\n  /** @export */\n  emscripten_glGenVertexArrays: _emscripten_glGenVertexArrays,\n  /** @export */\n  emscripten_glGenVertexArraysOES: _emscripten_glGenVertexArraysOES,\n  /** @export */\n  emscripten_glGenerateMipmap: _emscripten_glGenerateMipmap,\n  /** @export */\n  emscripten_glGetActiveAttrib: _emscripten_glGetActiveAttrib,\n  /** @export */\n  emscripten_glGetActiveUniform: _emscripten_glGetActiveUniform,\n  /** @export */\n  emscripten_glGetActiveUniformBlockName: _emscripten_glGetActiveUniformBlockName,\n  /** @export */\n  emscripten_glGetActiveUniformBlockiv: _emscripten_glGetActiveUniformBlockiv,\n  /** @export */\n  emscripten_glGetActiveUniformsiv: _emscripten_glGetActiveUniformsiv,\n  /** @export */\n  emscripten_glGetAttachedShaders: _emscripten_glGetAttachedShaders,\n  /** @export */\n  emscripten_glGetAttribLocation: _emscripten_glGetAttribLocation,\n  /** @export */\n  emscripten_glGetBooleanv: _emscripten_glGetBooleanv,\n  /** @export */\n  emscripten_glGetBufferParameteri64v: _emscripten_glGetBufferParameteri64v,\n  /** @export */\n  emscripten_glGetBufferParameteriv: _emscripten_glGetBufferParameteriv,\n  /** @export */\n  emscripten_glGetError: _emscripten_glGetError,\n  /** @export */\n  emscripten_glGetFloatv: _emscripten_glGetFloatv,\n  /** @export */\n  emscripten_glGetFragDataLocation: _emscripten_glGetFragDataLocation,\n  /** @export */\n  emscripten_glGetFramebufferAttachmentParameteriv: _emscripten_glGetFramebufferAttachmentParameteriv,\n  /** @export */\n  emscripten_glGetInteger64i_v: _emscripten_glGetInteger64i_v,\n  /** @export */\n  emscripten_glGetInteger64v: _emscripten_glGetInteger64v,\n  /** @export */\n  emscripten_glGetIntegeri_v: _emscripten_glGetIntegeri_v,\n  /** @export */\n  emscripten_glGetIntegerv: _emscripten_glGetIntegerv,\n  /** @export */\n  emscripten_glGetInternalformativ: _emscripten_glGetInternalformativ,\n  /** @export */\n  emscripten_glGetProgramBinary: _emscripten_glGetProgramBinary,\n  /** @export */\n  emscripten_glGetProgramInfoLog: _emscripten_glGetProgramInfoLog,\n  /** @export */\n  emscripten_glGetProgramiv: _emscripten_glGetProgramiv,\n  /** @export */\n  emscripten_glGetQueryObjecti64vEXT: _emscripten_glGetQueryObjecti64vEXT,\n  /** @export */\n  emscripten_glGetQueryObjectivEXT: _emscripten_glGetQueryObjectivEXT,\n  /** @export */\n  emscripten_glGetQueryObjectui64vEXT: _emscripten_glGetQueryObjectui64vEXT,\n  /** @export */\n  emscripten_glGetQueryObjectuiv: _emscripten_glGetQueryObjectuiv,\n  /** @export */\n  emscripten_glGetQueryObjectuivEXT: _emscripten_glGetQueryObjectuivEXT,\n  /** @export */\n  emscripten_glGetQueryiv: _emscripten_glGetQueryiv,\n  /** @export */\n  emscripten_glGetQueryivEXT: _emscripten_glGetQueryivEXT,\n  /** @export */\n  emscripten_glGetRenderbufferParameteriv: _emscripten_glGetRenderbufferParameteriv,\n  /** @export */\n  emscripten_glGetSamplerParameterfv: _emscripten_glGetSamplerParameterfv,\n  /** @export */\n  emscripten_glGetSamplerParameteriv: _emscripten_glGetSamplerParameteriv,\n  /** @export */\n  emscripten_glGetShaderInfoLog: _emscripten_glGetShaderInfoLog,\n  /** @export */\n  emscripten_glGetShaderPrecisionFormat: _emscripten_glGetShaderPrecisionFormat,\n  /** @export */\n  emscripten_glGetShaderSource: _emscripten_glGetShaderSource,\n  /** @export */\n  emscripten_glGetShaderiv: _emscripten_glGetShaderiv,\n  /** @export */\n  emscripten_glGetString: _emscripten_glGetString,\n  /** @export */\n  emscripten_glGetStringi: _emscripten_glGetStringi,\n  /** @export */\n  emscripten_glGetSynciv: _emscripten_glGetSynciv,\n  /** @export */\n  emscripten_glGetTexParameterfv: _emscripten_glGetTexParameterfv,\n  /** @export */\n  emscripten_glGetTexParameteriv: _emscripten_glGetTexParameteriv,\n  /** @export */\n  emscripten_glGetTransformFeedbackVarying: _emscripten_glGetTransformFeedbackVarying,\n  /** @export */\n  emscripten_glGetUniformBlockIndex: _emscripten_glGetUniformBlockIndex,\n  /** @export */\n  emscripten_glGetUniformIndices: _emscripten_glGetUniformIndices,\n  /** @export */\n  emscripten_glGetUniformLocation: _emscripten_glGetUniformLocation,\n  /** @export */\n  emscripten_glGetUniformfv: _emscripten_glGetUniformfv,\n  /** @export */\n  emscripten_glGetUniformiv: _emscripten_glGetUniformiv,\n  /** @export */\n  emscripten_glGetUniformuiv: _emscripten_glGetUniformuiv,\n  /** @export */\n  emscripten_glGetVertexAttribIiv: _emscripten_glGetVertexAttribIiv,\n  /** @export */\n  emscripten_glGetVertexAttribIuiv: _emscripten_glGetVertexAttribIuiv,\n  /** @export */\n  emscripten_glGetVertexAttribPointerv: _emscripten_glGetVertexAttribPointerv,\n  /** @export */\n  emscripten_glGetVertexAttribfv: _emscripten_glGetVertexAttribfv,\n  /** @export */\n  emscripten_glGetVertexAttribiv: _emscripten_glGetVertexAttribiv,\n  /** @export */\n  emscripten_glHint: _emscripten_glHint,\n  /** @export */\n  emscripten_glInvalidateFramebuffer: _emscripten_glInvalidateFramebuffer,\n  /** @export */\n  emscripten_glInvalidateSubFramebuffer: _emscripten_glInvalidateSubFramebuffer,\n  /** @export */\n  emscripten_glIsBuffer: _emscripten_glIsBuffer,\n  /** @export */\n  emscripten_glIsEnabled: _emscripten_glIsEnabled,\n  /** @export */\n  emscripten_glIsFramebuffer: _emscripten_glIsFramebuffer,\n  /** @export */\n  emscripten_glIsProgram: _emscripten_glIsProgram,\n  /** @export */\n  emscripten_glIsQuery: _emscripten_glIsQuery,\n  /** @export */\n  emscripten_glIsQueryEXT: _emscripten_glIsQueryEXT,\n  /** @export */\n  emscripten_glIsRenderbuffer: _emscripten_glIsRenderbuffer,\n  /** @export */\n  emscripten_glIsSampler: _emscripten_glIsSampler,\n  /** @export */\n  emscripten_glIsShader: _emscripten_glIsShader,\n  /** @export */\n  emscripten_glIsSync: _emscripten_glIsSync,\n  /** @export */\n  emscripten_glIsTexture: _emscripten_glIsTexture,\n  /** @export */\n  emscripten_glIsTransformFeedback: _emscripten_glIsTransformFeedback,\n  /** @export */\n  emscripten_glIsVertexArray: _emscripten_glIsVertexArray,\n  /** @export */\n  emscripten_glIsVertexArrayOES: _emscripten_glIsVertexArrayOES,\n  /** @export */\n  emscripten_glLineWidth: _emscripten_glLineWidth,\n  /** @export */\n  emscripten_glLinkProgram: _emscripten_glLinkProgram,\n  /** @export */\n  emscripten_glPauseTransformFeedback: _emscripten_glPauseTransformFeedback,\n  /** @export */\n  emscripten_glPixelStorei: _emscripten_glPixelStorei,\n  /** @export */\n  emscripten_glPolygonModeWEBGL: _emscripten_glPolygonModeWEBGL,\n  /** @export */\n  emscripten_glPolygonOffset: _emscripten_glPolygonOffset,\n  /** @export */\n  emscripten_glPolygonOffsetClampEXT: _emscripten_glPolygonOffsetClampEXT,\n  /** @export */\n  emscripten_glProgramBinary: _emscripten_glProgramBinary,\n  /** @export */\n  emscripten_glProgramParameteri: _emscripten_glProgramParameteri,\n  /** @export */\n  emscripten_glQueryCounterEXT: _emscripten_glQueryCounterEXT,\n  /** @export */\n  emscripten_glReadBuffer: _emscripten_glReadBuffer,\n  /** @export */\n  emscripten_glReadPixels: _emscripten_glReadPixels,\n  /** @export */\n  emscripten_glReleaseShaderCompiler: _emscripten_glReleaseShaderCompiler,\n  /** @export */\n  emscripten_glRenderbufferStorage: _emscripten_glRenderbufferStorage,\n  /** @export */\n  emscripten_glRenderbufferStorageMultisample: _emscripten_glRenderbufferStorageMultisample,\n  /** @export */\n  emscripten_glResumeTransformFeedback: _emscripten_glResumeTransformFeedback,\n  /** @export */\n  emscripten_glSampleCoverage: _emscripten_glSampleCoverage,\n  /** @export */\n  emscripten_glSamplerParameterf: _emscripten_glSamplerParameterf,\n  /** @export */\n  emscripten_glSamplerParameterfv: _emscripten_glSamplerParameterfv,\n  /** @export */\n  emscripten_glSamplerParameteri: _emscripten_glSamplerParameteri,\n  /** @export */\n  emscripten_glSamplerParameteriv: _emscripten_glSamplerParameteriv,\n  /** @export */\n  emscripten_glScissor: _emscripten_glScissor,\n  /** @export */\n  emscripten_glShaderBinary: _emscripten_glShaderBinary,\n  /** @export */\n  emscripten_glShaderSource: _emscripten_glShaderSource,\n  /** @export */\n  emscripten_glStencilFunc: _emscripten_glStencilFunc,\n  /** @export */\n  emscripten_glStencilFuncSeparate: _emscripten_glStencilFuncSeparate,\n  /** @export */\n  emscripten_glStencilMask: _emscripten_glStencilMask,\n  /** @export */\n  emscripten_glStencilMaskSeparate: _emscripten_glStencilMaskSeparate,\n  /** @export */\n  emscripten_glStencilOp: _emscripten_glStencilOp,\n  /** @export */\n  emscripten_glStencilOpSeparate: _emscripten_glStencilOpSeparate,\n  /** @export */\n  emscripten_glTexImage2D: _emscripten_glTexImage2D,\n  /** @export */\n  emscripten_glTexImage3D: _emscripten_glTexImage3D,\n  /** @export */\n  emscripten_glTexParameterf: _emscripten_glTexParameterf,\n  /** @export */\n  emscripten_glTexParameterfv: _emscripten_glTexParameterfv,\n  /** @export */\n  emscripten_glTexParameteri: _emscripten_glTexParameteri,\n  /** @export */\n  emscripten_glTexParameteriv: _emscripten_glTexParameteriv,\n  /** @export */\n  emscripten_glTexStorage2D: _emscripten_glTexStorage2D,\n  /** @export */\n  emscripten_glTexStorage3D: _emscripten_glTexStorage3D,\n  /** @export */\n  emscripten_glTexSubImage2D: _emscripten_glTexSubImage2D,\n  /** @export */\n  emscripten_glTexSubImage3D: _emscripten_glTexSubImage3D,\n  /** @export */\n  emscripten_glTransformFeedbackVaryings: _emscripten_glTransformFeedbackVaryings,\n  /** @export */\n  emscripten_glUniform1f: _emscripten_glUniform1f,\n  /** @export */\n  emscripten_glUniform1fv: _emscripten_glUniform1fv,\n  /** @export */\n  emscripten_glUniform1i: _emscripten_glUniform1i,\n  /** @export */\n  emscripten_glUniform1iv: _emscripten_glUniform1iv,\n  /** @export */\n  emscripten_glUniform1ui: _emscripten_glUniform1ui,\n  /** @export */\n  emscripten_glUniform1uiv: _emscripten_glUniform1uiv,\n  /** @export */\n  emscripten_glUniform2f: _emscripten_glUniform2f,\n  /** @export */\n  emscripten_glUniform2fv: _emscripten_glUniform2fv,\n  /** @export */\n  emscripten_glUniform2i: _emscripten_glUniform2i,\n  /** @export */\n  emscripten_glUniform2iv: _emscripten_glUniform2iv,\n  /** @export */\n  emscripten_glUniform2ui: _emscripten_glUniform2ui,\n  /** @export */\n  emscripten_glUniform2uiv: _emscripten_glUniform2uiv,\n  /** @export */\n  emscripten_glUniform3f: _emscripten_glUniform3f,\n  /** @export */\n  emscripten_glUniform3fv: _emscripten_glUniform3fv,\n  /** @export */\n  emscripten_glUniform3i: _emscripten_glUniform3i,\n  /** @export */\n  emscripten_glUniform3iv: _emscripten_glUniform3iv,\n  /** @export */\n  emscripten_glUniform3ui: _emscripten_glUniform3ui,\n  /** @export */\n  emscripten_glUniform3uiv: _emscripten_glUniform3uiv,\n  /** @export */\n  emscripten_glUniform4f: _emscripten_glUniform4f,\n  /** @export */\n  emscripten_glUniform4fv: _emscripten_glUniform4fv,\n  /** @export */\n  emscripten_glUniform4i: _emscripten_glUniform4i,\n  /** @export */\n  emscripten_glUniform4iv: _emscripten_glUniform4iv,\n  /** @export */\n  emscripten_glUniform4ui: _emscripten_glUniform4ui,\n  /** @export */\n  emscripten_glUniform4uiv: _emscripten_glUniform4uiv,\n  /** @export */\n  emscripten_glUniformBlockBinding: _emscripten_glUniformBlockBinding,\n  /** @export */\n  emscripten_glUniformMatrix2fv: _emscripten_glUniformMatrix2fv,\n  /** @export */\n  emscripten_glUniformMatrix2x3fv: _emscripten_glUniformMatrix2x3fv,\n  /** @export */\n  emscripten_glUniformMatrix2x4fv: _emscripten_glUniformMatrix2x4fv,\n  /** @export */\n  emscripten_glUniformMatrix3fv: _emscripten_glUniformMatrix3fv,\n  /** @export */\n  emscripten_glUniformMatrix3x2fv: _emscripten_glUniformMatrix3x2fv,\n  /** @export */\n  emscripten_glUniformMatrix3x4fv: _emscripten_glUniformMatrix3x4fv,\n  /** @export */\n  emscripten_glUniformMatrix4fv: _emscripten_glUniformMatrix4fv,\n  /** @export */\n  emscripten_glUniformMatrix4x2fv: _emscripten_glUniformMatrix4x2fv,\n  /** @export */\n  emscripten_glUniformMatrix4x3fv: _emscripten_glUniformMatrix4x3fv,\n  /** @export */\n  emscripten_glUseProgram: _emscripten_glUseProgram,\n  /** @export */\n  emscripten_glValidateProgram: _emscripten_glValidateProgram,\n  /** @export */\n  emscripten_glVertexAttrib1f: _emscripten_glVertexAttrib1f,\n  /** @export */\n  emscripten_glVertexAttrib1fv: _emscripten_glVertexAttrib1fv,\n  /** @export */\n  emscripten_glVertexAttrib2f: _emscripten_glVertexAttrib2f,\n  /** @export */\n  emscripten_glVertexAttrib2fv: _emscripten_glVertexAttrib2fv,\n  /** @export */\n  emscripten_glVertexAttrib3f: _emscripten_glVertexAttrib3f,\n  /** @export */\n  emscripten_glVertexAttrib3fv: _emscripten_glVertexAttrib3fv,\n  /** @export */\n  emscripten_glVertexAttrib4f: _emscripten_glVertexAttrib4f,\n  /** @export */\n  emscripten_glVertexAttrib4fv: _emscripten_glVertexAttrib4fv,\n  /** @export */\n  emscripten_glVertexAttribDivisor: _emscripten_glVertexAttribDivisor,\n  /** @export */\n  emscripten_glVertexAttribDivisorANGLE: _emscripten_glVertexAttribDivisorANGLE,\n  /** @export */\n  emscripten_glVertexAttribDivisorARB: _emscripten_glVertexAttribDivisorARB,\n  /** @export */\n  emscripten_glVertexAttribDivisorEXT: _emscripten_glVertexAttribDivisorEXT,\n  /** @export */\n  emscripten_glVertexAttribDivisorNV: _emscripten_glVertexAttribDivisorNV,\n  /** @export */\n  emscripten_glVertexAttribI4i: _emscripten_glVertexAttribI4i,\n  /** @export */\n  emscripten_glVertexAttribI4iv: _emscripten_glVertexAttribI4iv,\n  /** @export */\n  emscripten_glVertexAttribI4ui: _emscripten_glVertexAttribI4ui,\n  /** @export */\n  emscripten_glVertexAttribI4uiv: _emscripten_glVertexAttribI4uiv,\n  /** @export */\n  emscripten_glVertexAttribIPointer: _emscripten_glVertexAttribIPointer,\n  /** @export */\n  emscripten_glVertexAttribPointer: _emscripten_glVertexAttribPointer,\n  /** @export */\n  emscripten_glViewport: _emscripten_glViewport,\n  /** @export */\n  emscripten_glWaitSync: _emscripten_glWaitSync,\n  /** @export */\n  emscripten_has_asyncify: _emscripten_has_asyncify,\n  /** @export */\n  emscripten_request_fullscreen_strategy: _emscripten_request_fullscreen_strategy,\n  /** @export */\n  emscripten_request_pointerlock: _emscripten_request_pointerlock,\n  /** @export */\n  emscripten_resize_heap: _emscripten_resize_heap,\n  /** @export */\n  emscripten_sample_gamepad_data: _emscripten_sample_gamepad_data,\n  /** @export */\n  emscripten_set_beforeunload_callback_on_thread: _emscripten_set_beforeunload_callback_on_thread,\n  /** @export */\n  emscripten_set_blur_callback_on_thread: _emscripten_set_blur_callback_on_thread,\n  /** @export */\n  emscripten_set_canvas_element_size: _emscripten_set_canvas_element_size,\n  /** @export */\n  emscripten_set_element_css_size: _emscripten_set_element_css_size,\n  /** @export */\n  emscripten_set_focus_callback_on_thread: _emscripten_set_focus_callback_on_thread,\n  /** @export */\n  emscripten_set_fullscreenchange_callback_on_thread: _emscripten_set_fullscreenchange_callback_on_thread,\n  /** @export */\n  emscripten_set_gamepadconnected_callback_on_thread: _emscripten_set_gamepadconnected_callback_on_thread,\n  /** @export */\n  emscripten_set_gamepaddisconnected_callback_on_thread: _emscripten_set_gamepaddisconnected_callback_on_thread,\n  /** @export */\n  emscripten_set_keydown_callback_on_thread: _emscripten_set_keydown_callback_on_thread,\n  /** @export */\n  emscripten_set_keypress_callback_on_thread: _emscripten_set_keypress_callback_on_thread,\n  /** @export */\n  emscripten_set_keyup_callback_on_thread: _emscripten_set_keyup_callback_on_thread,\n  /** @export */\n  emscripten_set_main_loop: _emscripten_set_main_loop,\n  /** @export */\n  emscripten_set_mousedown_callback_on_thread: _emscripten_set_mousedown_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseenter_callback_on_thread: _emscripten_set_mouseenter_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseleave_callback_on_thread: _emscripten_set_mouseleave_callback_on_thread,\n  /** @export */\n  emscripten_set_mousemove_callback_on_thread: _emscripten_set_mousemove_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseup_callback_on_thread: _emscripten_set_mouseup_callback_on_thread,\n  /** @export */\n  emscripten_set_pointerlockchange_callback_on_thread: _emscripten_set_pointerlockchange_callback_on_thread,\n  /** @export */\n  emscripten_set_resize_callback_on_thread: _emscripten_set_resize_callback_on_thread,\n  /** @export */\n  emscripten_set_touchcancel_callback_on_thread: _emscripten_set_touchcancel_callback_on_thread,\n  /** @export */\n  emscripten_set_touchend_callback_on_thread: _emscripten_set_touchend_callback_on_thread,\n  /** @export */\n  emscripten_set_touchmove_callback_on_thread: _emscripten_set_touchmove_callback_on_thread,\n  /** @export */\n  emscripten_set_touchstart_callback_on_thread: _emscripten_set_touchstart_callback_on_thread,\n  /** @export */\n  emscripten_set_visibilitychange_callback_on_thread: _emscripten_set_visibilitychange_callback_on_thread,\n  /** @export */\n  emscripten_set_wheel_callback_on_thread: _emscripten_set_wheel_callback_on_thread,\n  /** @export */\n  emscripten_set_window_title: _emscripten_set_window_title,\n  /** @export */\n  emscripten_sleep: _emscripten_sleep,\n  /** @export */\n  environ_get: _environ_get,\n  /** @export */\n  environ_sizes_get: _environ_sizes_get,\n  /** @export */\n  exit: _exit,\n  /** @export */\n  fd_close: _fd_close,\n  /** @export */\n  fd_read: _fd_read,\n  /** @export */\n  fd_seek: _fd_seek,\n  /** @export */\n  fd_write: _fd_write,\n  /** @export */\n  glActiveTexture: _glActiveTexture,\n  /** @export */\n  glAttachShader: _glAttachShader,\n  /** @export */\n  glBindBuffer: _glBindBuffer,\n  /** @export */\n  glBindBufferBase: _glBindBufferBase,\n  /** @export */\n  glBindFramebuffer: _glBindFramebuffer,\n  /** @export */\n  glBindRenderbuffer: _glBindRenderbuffer,\n  /** @export */\n  glBindSampler: _glBindSampler,\n  /** @export */\n  glBindTexture: _glBindTexture,\n  /** @export */\n  glBindVertexArray: _glBindVertexArray,\n  /** @export */\n  glBlendColor: _glBlendColor,\n  /** @export */\n  glBlendEquationSeparate: _glBlendEquationSeparate,\n  /** @export */\n  glBlendFuncSeparate: _glBlendFuncSeparate,\n  /** @export */\n  glBlitFramebuffer: _glBlitFramebuffer,\n  /** @export */\n  glBufferData: _glBufferData,\n  /** @export */\n  glBufferSubData: _glBufferSubData,\n  /** @export */\n  glClearBufferfi: _glClearBufferfi,\n  /** @export */\n  glClearBufferfv: _glClearBufferfv,\n  /** @export */\n  glClearBufferiv: _glClearBufferiv,\n  /** @export */\n  glColorMask: _glColorMask,\n  /** @export */\n  glCompileShader: _glCompileShader,\n  /** @export */\n  glCompressedTexImage2D: _glCompressedTexImage2D,\n  /** @export */\n  glCompressedTexImage3D: _glCompressedTexImage3D,\n  /** @export */\n  glCreateProgram: _glCreateProgram,\n  /** @export */\n  glCreateShader: _glCreateShader,\n  /** @export */\n  glCullFace: _glCullFace,\n  /** @export */\n  glDeleteBuffers: _glDeleteBuffers,\n  /** @export */\n  glDeleteFramebuffers: _glDeleteFramebuffers,\n  /** @export */\n  glDeleteProgram: _glDeleteProgram,\n  /** @export */\n  glDeleteRenderbuffers: _glDeleteRenderbuffers,\n  /** @export */\n  glDeleteSamplers: _glDeleteSamplers,\n  /** @export */\n  glDeleteShader: _glDeleteShader,\n  /** @export */\n  glDeleteTextures: _glDeleteTextures,\n  /** @export */\n  glDeleteVertexArrays: _glDeleteVertexArrays,\n  /** @export */\n  glDepthFunc: _glDepthFunc,\n  /** @export */\n  glDepthMask: _glDepthMask,\n  /** @export */\n  glDisable: _glDisable,\n  /** @export */\n  glDisableVertexAttribArray: _glDisableVertexAttribArray,\n  /** @export */\n  glDrawArrays: _glDrawArrays,\n  /** @export */\n  glDrawArraysInstanced: _glDrawArraysInstanced,\n  /** @export */\n  glDrawElements: _glDrawElements,\n  /** @export */\n  glDrawElementsInstanced: _glDrawElementsInstanced,\n  /** @export */\n  glEnable: _glEnable,\n  /** @export */\n  glEnableVertexAttribArray: _glEnableVertexAttribArray,\n  /** @export */\n  glFrontFace: _glFrontFace,\n  /** @export */\n  glGenBuffers: _glGenBuffers,\n  /** @export */\n  glGenRenderbuffers: _glGenRenderbuffers,\n  /** @export */\n  glGenSamplers: _glGenSamplers,\n  /** @export */\n  glGenTextures: _glGenTextures,\n  /** @export */\n  glGenVertexArrays: _glGenVertexArrays,\n  /** @export */\n  glGetAttribLocation: _glGetAttribLocation,\n  /** @export */\n  glGetIntegerv: _glGetIntegerv,\n  /** @export */\n  glGetProgramInfoLog: _glGetProgramInfoLog,\n  /** @export */\n  glGetProgramiv: _glGetProgramiv,\n  /** @export */\n  glGetShaderInfoLog: _glGetShaderInfoLog,\n  /** @export */\n  glGetShaderiv: _glGetShaderiv,\n  /** @export */\n  glGetStringi: _glGetStringi,\n  /** @export */\n  glGetUniformLocation: _glGetUniformLocation,\n  /** @export */\n  glInvalidateFramebuffer: _glInvalidateFramebuffer,\n  /** @export */\n  glLinkProgram: _glLinkProgram,\n  /** @export */\n  glPixelStorei: _glPixelStorei,\n  /** @export */\n  glPolygonOffset: _glPolygonOffset,\n  /** @export */\n  glReadBuffer: _glReadBuffer,\n  /** @export */\n  glReadPixels: _glReadPixels,\n  /** @export */\n  glRenderbufferStorageMultisample: _glRenderbufferStorageMultisample,\n  /** @export */\n  glSamplerParameterf: _glSamplerParameterf,\n  /** @export */\n  glSamplerParameteri: _glSamplerParameteri,\n  /** @export */\n  glScissor: _glScissor,\n  /** @export */\n  glShaderSource: _glShaderSource,\n  /** @export */\n  glStencilFunc: _glStencilFunc,\n  /** @export */\n  glStencilFuncSeparate: _glStencilFuncSeparate,\n  /** @export */\n  glStencilMask: _glStencilMask,\n  /** @export */\n  glStencilOp: _glStencilOp,\n  /** @export */\n  glStencilOpSeparate: _glStencilOpSeparate,\n  /** @export */\n  glTexImage2D: _glTexImage2D,\n  /** @export */\n  glTexImage3D: _glTexImage3D,\n  /** @export */\n  glTexParameteri: _glTexParameteri,\n  /** @export */\n  glTexStorage2D: _glTexStorage2D,\n  /** @export */\n  glTexStorage3D: _glTexStorage3D,\n  /** @export */\n  glTexSubImage2D: _glTexSubImage2D,\n  /** @export */\n  glTexSubImage3D: _glTexSubImage3D,\n  /** @export */\n  glUniform1fv: _glUniform1fv,\n  /** @export */\n  glUniform1i: _glUniform1i,\n  /** @export */\n  glUniform1iv: _glUniform1iv,\n  /** @export */\n  glUniform2fv: _glUniform2fv,\n  /** @export */\n  glUniform2iv: _glUniform2iv,\n  /** @export */\n  glUniform3fv: _glUniform3fv,\n  /** @export */\n  glUniform3iv: _glUniform3iv,\n  /** @export */\n  glUniform4fv: _glUniform4fv,\n  /** @export */\n  glUniform4iv: _glUniform4iv,\n  /** @export */\n  glUniformMatrix4fv: _glUniformMatrix4fv,\n  /** @export */\n  glUseProgram: _glUseProgram,\n  /** @export */\n  glVertexAttribDivisor: _glVertexAttribDivisor,\n  /** @export */\n  glVertexAttribIPointer: _glVertexAttribIPointer,\n  /** @export */\n  glVertexAttribPointer: _glVertexAttribPointer,\n  /** @export */\n  glViewport: _glViewport,\n  /** @export */\n  invoke_vii,\n  /** @export */\n  random_get: _random_get,\n  /** @export */\n  slog_js_log\n};\nvar wasmExports = await createWasm();\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    dynCall_vii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nfunction callMain(args = []) {\n\n  var entryFunction = _main;\n\n  args.unshift(thisProgram);\n\n  var argc = args.length;\n  var argv = stackAlloc((argc + 1) * 4);\n  var argv_ptr = argv;\n  args.forEach((arg) => {\n    HEAPU32[((argv_ptr)>>2)] = stringToUTF8OnStack(arg);\n    argv_ptr += 4;\n  });\n  HEAPU32[((argv_ptr)>>2)] = 0;\n\n  try {\n\n    var ret = entryFunction(argc, argv);\n\n    // if we're not running an evented main loop, it's time to exit\n    exitJS(ret, /* implicit = */ true);\n    return ret;\n  } catch (e) {\n    return handleException(e);\n  }\n}\n\nfunction run(args = arguments_) {\n\n  if (runDependencies > 0) {\n    dependenciesFulfilled = run;\n    return;\n  }\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    dependenciesFulfilled = run;\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    readyPromiseResolve?.(Module);\n    Module['onRuntimeInitialized']?.();\n\n    var noInitialRun = Module['noInitialRun'] || false;\n    if (!noInitialRun) callMain(args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(() => {\n      setTimeout(() => Module['setStatus'](''), 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n}\n\nfunction preInit() {\n  if (Module['preInit']) {\n    if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n    while (Module['preInit'].length > 0) {\n      Module['preInit'].shift()();\n    }\n  }\n}\n\npreInit();\nrun();\n\n// end include: postamble.js\n\n// include: postamble_modularize.js\n// In MODULARIZE mode we wrap the generated code in a factory function\n// and return either the Module itself, or a promise of the module.\n//\n// We assign to the `moduleRtn` global here and configure closure to see\n// this as and extern so it won't get minified.\n\nif (runtimeInitialized)  {\n  moduleRtn = Module;\n} else {\n  // Set up the promise that indicates the Module is initialized\n  moduleRtn = new Promise((resolve, reject) => {\n    readyPromiseResolve = resolve;\n    readyPromiseReject = reject;\n  });\n}\n\n// end include: postamble_modularize.js\n\n\n\n    return moduleRtn;\n  };\n})();\n\n// Export using a UMD style export, or ES6 exports if selected\nif (typeof exports === 'object' && typeof module === 'object') {\n  module.exports = createEdgeModule;\n  // This default export looks redundant, but it allows TS to import this\n  // commonjs style module.\n  module.exports.default = createEdgeModule;\n} else if (typeof define === 'function' && define['amd'])\n  define([], () => createEdgeModule);\n\n","import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] == UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n","/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState != this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce != options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index == -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor == UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex != -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original == null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original == NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\t// When the array of children is growing we need to decrease the skew\n\t\t\t\t// as we are adding a new element to the array.\n\t\t\t\t// Example:\n\t\t\t\t// [1, 2, 3] --> [0, 1, 2, 3]\n\t\t\t\t// oldChildren   newChildren\n\t\t\t\t//\n\t\t\t\t// The new element is at index 0, so our skew is 0,\n\t\t\t\t// we need to decrease the skew as we are adding a new element.\n\t\t\t\t// The decrease will cause us to compare the element at position 1\n\t\t\t\t// with value 1 with the element at position 0 with value 0.\n\t\t\t\t//\n\t\t\t\t// A linear concept is applied when the array is shrinking,\n\t\t\t\t// if the length is unchanged we can assume that no skew\n\t\t\t\t// changes are needed.\n\t\t\t\tif (newChildrenLength > oldChildrenLength) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else if (newChildrenLength < oldChildrenLength) {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren >\n\t\t(oldVNode != NULL && (oldVNode._flags & MATCHED) == 0 ? 1 : 0);\n\n\tif (\n\t\t(oldVNode === NULL && childVNode.key == null) ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype == oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) == 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype == oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype == oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n","import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] != oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname == 'onFocusOut' ||\n\t\t\tname == 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n","import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor != UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original == oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\trenderResult = cloneNode(tmp.props.children);\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\nfunction cloneNode(node) {\n\tif (\n\t\ttypeof node != 'object' ||\n\t\tnode == NULL ||\n\t\t(node._depth && node._depth > 0)\n\t) {\n\t\treturn node;\n\t}\n\n\tif (isArray(node)) {\n\t\treturn node.map(cloneNode);\n\t}\n\n\treturn assign({}, node);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType == NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data != newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html != oldHtml.__html && newHtml.__html != dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type == 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue != UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue != oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked != UNDEFINED && checked != dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current == vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = hookState._component.props !== p;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn prevScu\n\t\t\t\t\t? prevScu.call(this, p, s, c) || shouldUpdate\n\t\t\t\t\t: shouldUpdate;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tconst result = ref(createHandle());\n\t\t\t\treturn () => {\n\t\t\t\t\tref(null);\n\t\t\t\t\tif (result && typeof result == 'function') result();\n\t\t\t\t};\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","// An named symbol/brand for detecting Signal instances even when they weren't\n// created using the same signals library version.\nconst BRAND_SYMBOL = Symbol.for(\"preact-signals\");\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * Combine multiple value updates into one \"commit\" at the end of the provided callback.\n *\n * Batches can be nested and changes are only flushed once the outermost batch callback\n * completes.\n *\n * Accessing a signal that has been modified within a batch will reflect its updated\n * value.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction batch<T>(fn: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn fn();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n/**\n * Run a callback function that can access signal values without\n * subscribing to the signal updates.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction untracked<T>(fn: () => T): T {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n}\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n/**\n * The base class for plain and computed signals.\n */\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\n//\n// A function with the same name is defined later, so we need to ignore TypeScript's\n// warning about a redeclared variable.\n//\n// The class is declared here, but later implemented with ES5-style prototypes.\n// This enables better control of the transpiled output size.\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\ttoJSON(): T;\n\n\tpeek(): T;\n\n\tbrand: typeof BRAND_SYMBOL;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\n//\n// A class with the same name has already been declared, so we need to ignore\n// TypeScript's warning about a redeclared variable.\n//\n// The previously declared class is implemented here with ES5-style prototypes.\n// This enables better control of the transpiled output size.\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype.brand = BRAND_SYMBOL;\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\treturn effect(() => {\n\t\tconst value = this.value;\n\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.toJSON = function () {\n\treturn this.value;\n};\n\nSignal.prototype.peek = function () {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn this.value;\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget(this: Signal) {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(this: Signal, value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tthrow new Error(\"Cycle detected\");\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\n/**\n * Create a new plain signal.\n *\n * @param value The initial value for the signal.\n * @returns A new signal.\n */\nexport function signal<T>(value: T): Signal<T>;\nexport function signal<T = undefined>(): Signal<T | undefined>;\nexport function signal<T>(value?: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_fn: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(fn: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, fn: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._fn = fn;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._fn();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget(this: Computed) {\n\t\tif (this._flags & RUNNING) {\n\t\t\tthrow new Error(\"Cycle detected\");\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\n/**\n * An interface for read-only signals.\n */\ninterface ReadonlySignal<T = any> {\n\treadonly value: T;\n\tpeek(): T;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\tvalueOf(): T;\n\ttoString(): string;\n\ttoJSON(): T;\n\tbrand: typeof BRAND_SYMBOL;\n}\n\n/**\n * Create a new signal that is computed based on the values of other signals.\n *\n * The returned computed signal is read-only, and its value is automatically\n * updated when any signals accessed from within the callback function change.\n *\n * @param fn The effect callback.\n * @returns A new read-only signal.\n */\nfunction computed<T>(fn: () => T): ReadonlySignal<T> {\n\treturn new Computed(fn);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._fn = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ntype EffectFn = () => void | (() => void);\n\ndeclare class Effect {\n\t_fn?: EffectFn;\n\t_cleanup?: () => void;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(fn: EffectFn);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, fn: EffectFn) {\n\tthis._fn = fn;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (this._flags & DISPOSED) return;\n\t\tif (this._fn === undefined) return;\n\n\t\tconst cleanup = this._fn();\n\t\tif (typeof cleanup === \"function\") {\n\t\t\tthis._cleanup = cleanup;\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tthrow new Error(\"Cycle detected\");\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\n/**\n * Create an effect to run arbitrary code in response to signal changes.\n *\n * An effect tracks which signals are accessed within the given callback\n * function `fn`, and re-runs the callback when those signals change.\n *\n * The callback may return a cleanup function. The cleanup function gets\n * run once, either when the callback is next called or when the effect\n * gets disposed, whichever happens first.\n *\n * @param fn The effect callback.\n * @returns A function for disposing the effect.\n */\nfunction effect(fn: EffectFn): () => void {\n\tconst effect = new Effect(fn);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { computed, effect, batch, untracked, Signal, ReadonlySignal };\n","import { options, Component, isValidElement } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n};\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\nlet oldNotify: (this: Effect) => void,\n\teffectsQueue: Array<Effect> = [],\n\tdomQueue: Array<Effect> = [];\n\n// Capture the original `Effect.prototype._notify` method so that we can install\n// custom `._notify`s for each different use-case but still call the original\n// implementation in the end. Dispose the temporary effect immediately afterwards.\neffect(function (this: Effect) {\n\toldNotify = this._notify;\n})();\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction SignalValue(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst [isText, s] = useMemo(() => {\n\t\tlet self = this;\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst wrappedSignal = computed(() => {\n\t\t\tlet s = currentSignal.value.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\n\t\tconst isText = computed(\n\t\t\t() =>\n\t\t\t\t!Array.isArray(wrappedSignal.value) &&\n\t\t\t\t!isValidElement(wrappedSignal.value)\n\t\t);\n\t\t// Update text nodes directly without rerendering when the new value\n\t\t// is also text.\n\t\tconst dispose = effect(function (this: Effect) {\n\t\t\tthis._notify = notifyDomUpdates;\n\n\t\t\t// Subscribe to wrappedSignal updates only when its values are text...\n\t\t\tif (isText.value) {\n\t\t\t\t// ...but regardless of `self.base`'s current value, as it can be\n\t\t\t\t// undefined before mounting or a non-text node. In both of those cases\n\t\t\t\t// the update gets handled by a full rerender.\n\t\t\t\tconst value = wrappedSignal.value;\n\t\t\t\tif (self.__v && self.__v.__e && self.__v.__e.nodeType === 3) {\n\t\t\t\t\t(self.__v.__e as Text).data = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Piggyback this._updater's disposal to ensure that the text updater effect\n\t\t// above also gets disposed on unmount.\n\t\tconst oldDispose = this._updater!._dispose;\n\t\tthis._updater!._dispose = function () {\n\t\t\tdispose();\n\t\t\toldDispose.call(this);\n\t\t};\n\n\t\treturn [isText, wrappedSignal];\n\t}, []);\n\n\t// Rerender the component whenever `data.value` changes from a VNode\n\t// to another VNode, from text to a VNode, or from a VNode to text.\n\t// That is, everything else except text-to-text updates.\n\t//\n\t// This also ensures that the backing DOM node types gets updated to\n\t// text nodes and back when needed.\n\t//\n\t// For text-to-text updates, `.peek()` is used to skip full rerenders,\n\t// leaving them to the optimized path above.\n\treturn isText.value ? s.peek() : s.value;\n}\nSignalValue.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: SignalValue },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(function (this: Effect) {\n\t\t\tthis._notify = notifyDomUpdates;\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3 || type === 9)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// If this is a component using state, rerender\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\tif (this.__f || (typeof this.u == \"boolean\" && this.u === true)) {\n\t\tconst hasHooksState = this._updateFlags & HAS_HOOK_STATE;\n\t\t// if this component used no signals or computeds and no hooks state, update:\n\t\tif (!hasSignals && !hasHooksState && !(this._updateFlags & HAS_COMPUTEDS))\n\t\t\treturn true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & HAS_PENDING_UPDATE) return true;\n\t} else {\n\t\t// if this component used no signals or computeds, update:\n\t\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\t}\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T): Signal<T>;\nexport function useSignal<T = undefined>(): Signal<T | undefined>;\nexport function useSignal<T>(value?: T) {\n\treturn useMemo(() => signal<T | undefined>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nfunction safeRaf(callback: () => void) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tcancelAnimationFrame(raf);\n\t\tcallback();\n\t};\n\n\tconst timeout = setTimeout(done, 100);\n\tconst raf = requestAnimationFrame(done);\n}\n\nconst deferEffects =\n\ttypeof requestAnimationFrame === \"undefined\" ? setTimeout : safeRaf;\n\nconst deferDomUpdates = (cb: any) => {\n\tqueueMicrotask(() => {\n\t\tqueueMicrotask(cb);\n\t});\n};\n\nfunction flushEffects() {\n\tbatch(() => {\n\t\tlet inst: Effect | undefined;\n\t\twhile ((inst = effectsQueue.shift())) {\n\t\t\toldNotify.call(inst);\n\t\t}\n\t});\n}\n\nfunction notifyEffects(this: Effect) {\n\tif (effectsQueue.push(this) === 1) {\n\t\t(options.requestAnimationFrame || deferEffects)(flushEffects);\n\t}\n}\n\nfunction flushDomUpdates() {\n\tbatch(() => {\n\t\tlet inst: Effect | undefined;\n\t\twhile ((inst = domQueue.shift())) {\n\t\t\toldNotify.call(inst);\n\t\t}\n\t});\n}\n\nfunction notifyDomUpdates(this: Effect) {\n\tif (domQueue.push(this) === 1) {\n\t\t(options.requestAnimationFrame || deferDomUpdates)(flushDomUpdates);\n\t}\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(function (this: Effect) {\n\t\t\tthis._notify = notifyEffects;\n\t\t\treturn callback.current();\n\t\t});\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","import { Signal, signal } from '@preact/signals';\nimport { h } from 'preact';\nimport style from './style.css';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport createEdgeModule from '../../edge-classic';\nimport LicenseModal from '../licenses';\n\nconst defaultDoomIWad = \"/freedoom2.wad\"\nconst defaultHereticIWad = \"/blasphem.wad\";\n\ntype PlayerConfig = {\n\tindexDBName: string;\n}\n\ntype WadState = {\n\terror?: string;\n\twadName?: string;\n\tisIWAD?: boolean;\n}\n\nconst config: PlayerConfig = {\n\tindexDBName: '/edge-classic'\n}\n\nfunction getCookie(cname: string): string {\n\tlet name = cname + \"=\";\n\tlet ca;\n\t// prerender guard\n\tif (typeof window !== 'undefined') {\n\t\tca = document.cookie.split(';');\n\t}\n\tif (!ca) {\n\t\treturn \"\";\n\t}\n\tfor (let i = 0; i < ca.length; i++) {\n\t\tlet c = ca[i];\n\t\twhile (c.charAt(0) == ' ') {\n\t\t\tc = c.substring(1);\n\t\t}\n\t\tif (c.indexOf(name) == 0) {\n\t\t\treturn c.substring(name.length, c.length);\n\t\t}\n\t}\n\treturn \"\";\n}\n\nclass WadHandler {\n\n\tconstructor(config: PlayerConfig) {\n\t\tthis.config = config;\n\t}\n\n\tprivate error(message: string) {\n\t\talert(message);\n\t\tconsole.error(message);\n\t\tconsole.trace();\n\t}\n\n\tsetWads(wads: WadState[] | undefined) {\n\t\tthis.wadState.value = wads;\n\t}\n\n\tasync uploadWads(files: File[]) {\n\n\t\tconst wads: WadState[] = [];\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\n\t\t\tconst file = files[i];\n\n\t\t\tlet database: IDBDatabase | undefined;\n\n\t\t\ttry {\n\t\t\t\tdatabase = await this.openDatabase();\n\t\t\t\tif (!database) {\n\t\t\t\t\tthis.error(\"Unable to open database\")\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis.error(e);\n\t\t\t\tdatabase?.close();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst upload = new Promise<WadState>((resolve, reject) => {\n\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.readAsArrayBuffer(file);\n\n\t\t\t\treader.onload = (e) => {\n\n\t\t\t\t\tconst bits = e.target.result;\n\t\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\n\n\t\t\t\t\tconst iwad = contents[0] === 73;\n\n\t\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\n\t\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\n\t\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\n\n\t\t\t\t\taddReq.onerror = (e) => {\n\t\t\t\t\t\treject(\"Error storing wad data\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttrans.oncomplete = (e) => {\n\t\t\t\t\t\tresolve({ wadName: file.name, isIWAD: iwad });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treader.onerror = (e) => {\n\t\t\t\t\treject(\"Error reading wad\");\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tconst wad = await upload;\n\t\t\t\tdatabase?.close();\n\t\t\t\tdatabase = undefined;\n\t\t\t\twads.push(wad)\n\t\t\t} catch (e) {\n\t\t\t\tthis.error(e);\n\t\t\t} finally {\n\t\t\t\tdatabase?.close();\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setWads(wads.length ? wads : undefined);\n\n\t}\n\n\tprivate async openDatabase() {\n\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\n\n\t\t\t// build pre-render guard\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\n\n\t\t\t\tdbrequest.onerror = (e) => {\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\n\t\t\t\t}\n\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\n\n\t\t\t\t\tconsole.log(\"upgrade needed\");\n\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tdbrequest.onsuccess = (e) => {\n\t\t\t\t\tconsole.log(\"db open\");\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\n\t\t\t\t\tresolve(db);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\twadState: Signal<WadState[] | undefined> = signal(undefined);\n\n\tconfig: PlayerConfig;\n\n\tstatic get singleton(): WadHandler {\n\t\tif (!WadHandler.instance) {\n\t\t\tWadHandler.instance = new WadHandler(config);\n\t\t}\n\t\treturn WadHandler.instance;\n\t}\n\n\tprivate static instance?: WadHandler;\n}\n\ntype Project = {\n\tname: string;\n\timage: string;\n\tlink: string;\n}\n\nconst projects: Project[] = [\n\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\n]\n\nconst WadChooser = () => {\n\n\tconst [showLicense, setShowLicense] = useState(false);\n\n\tconst pelements = projects.map(p => {\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\n\t\t\t</div>\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\n\t\t\t</div>\n\t\t</a>\n\t});\n\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\n\t\t{showLicense && <LicenseModal onClose={() => setShowLicense(false)} />}\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tWadHandler.singleton.setWads([{ wadName: defaultDoomIWad, isIWAD: true }])\n\t\t\t\t\t\t}}>Play Freedoom 2</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tWadHandler.singleton.setWads([{ wadName: defaultHereticIWad, isIWAD: true }])\n\t\t\t\t\t\t}}>Play Blasphemer</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\n\t\t\t\t\t\t}}>Play Wad, EPK, or Zip files</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\n\n\t\t\t\t\t<textarea style=\"font-size:12px;width:292px;height:48px\" placeholder=\"Enter custom command line\" spellcheck={false} onChange={(ev: any) => {\n\n\t\t\t\t\t\tconst value = (ev?.target?.value?.length ? ev?.target?.value : undefined)?.trim().replace(\"\\n\", \" \");\n\t\t\t\t\t\tif (value?.length) {\n\t\t\t\t\t\t\tdocument.cookie = `customCommandLineCookie=${value}; SameSite=None; Secure`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdocument.cookie = `customCommandLineCookie=; SameSite=None; Secure`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}}>{getCookie(\"customCommandLineCookie\")?.trim() ?? \"\"}</textarea>\n\n\n\t\t\t\t\t<div style={{ paddingTop: 128 }} />\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tsetShowLicense(true);\n\t\t\t\t\t\t}}>Show Licenses</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" multiple onChange={(e) => {\n\t\t\t\t\tconst files = Array.from((e.target as any).files as File[]);\n\t\t\t\t\tif (files.length === 0) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst badFile = files.find(f => {\n\t\t\t\t\t\tconst check = f.name.toLowerCase();\n\t\t\t\t\t\tif (!check.endsWith(\".wad\") && !check.endsWith(\".zip\") && !check.endsWith(\".epk\") && !check.endsWith(\".7z\")) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t})\n\n\t\t\t\t\tif (badFile) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\talert(`Please select wad, epk, or zip files, ${badFile.name} is invalid`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\n\t\t\t\t\twadHandler.uploadWads(files);\n\n\t\t\t\t}} />\n\t\t\t</div>\n\t\t</div>\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\n\t\t\t</div>\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\n\t\t\t\t{pelements}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n}\n\nconst EdgeClassic = () => {\n\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\n\tconst wadState = WadHandler.singleton.wadState.value;\n\n\n\tconst pointerLockChange = () => {\n\t\tconst canvas = canvasRef?.current;\n\t\tconst lock = canvas === document.pointerLockElement;\n\n\t\t// disabled for embedded classic site\n\t\t//Module._WebSetFullscreen(lock ? 1 : 0);\n\n\t\t/*\n\t\t// It feels good to open the menu when releasing pointer lock\n\t\t// though, it makes the interaction tricky to close the menu\n\t\tif (!lock) {\n\t\t\tModule._WebOpenGameMenu(1);\n\t\t}\n\t\t*/\n\t}\n\n\tuseEffect(() => {\n\n\t\tconst canvas = canvasRef?.current;\n\t\tconst canvasContainer = canvasContainerRef?.current;\n\n\t\tlet iwad = wadState?.find(w => w.isIWAD);\n\n\t\tif (!iwad) {\n\t\t\tiwad = { wadName: defaultDoomIWad, isIWAD: true };\n\t\t}\n\t\t\n\t\tconsole.log(\"WadState\", wadState);\n\n\t\t/*\n\t\tlet iwad = defaultDoomIWad;\n\t\tif (wadState.wadName === defaultHereticIWad) {\n\t\t\tiwad = defaultHereticIWad;\n\t\t}\n\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\n\t\t\tiwad = `edge-classic/${wadName}`;\n\t\t}\n\t\t*/\n\n\t\tif (!iwad) {\n\t\t\tthrow \"Unable to get iwad\";\n\t\t}\n\n\n\t\tif (!canvasContainer) {\n\t\t\tthrow \"Unable to get canvas container\";\n\t\t}\n\n\t\tif (!canvas) {\n\t\t\tthrow \"Unable to get canvas\";\n\t\t}\n\n\t\tconst syncCanvasSize = () => {\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\n\t\t\tcanvas.style.width = `${w}px`;\n\t\t\tcanvas.style.height = `${h}px`;\n\t\t\tcanvas.width = w;\n\t\t\tcanvas.height = h;\n\t\t}\n\n\t\t// initial update\n\t\tsyncCanvasSize();\n\n\t\tconst canvasSync = () => {\n\t\t\tsyncCanvasSize();\n\t\t\tModule._WebSyncScreenSize();\n\t\t};\n\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\n\n\t\tlet doSyncTimeout;\n\t\twindow.addEventListener(\"resize\", (ev) => {\n\n\t\t\tclearTimeout(doSyncTimeout);\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\n\n\t\t});\n\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\n\n\t\tlet iwadPath = iwad.wadName!;\n\t\tif (iwadPath !== defaultDoomIWad && iwadPath !== defaultHereticIWad) {\n\t\t\tiwadPath = `edge-classic/${iwadPath}`;\n\t\t}\n\n\t\tconst args = [\"-home\", \"/edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwadPath];\n\n\t\twadState.forEach(w => {\n\t\t\tif (w.isIWAD) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\targs.push(\"-file\")\n\t\t\targs.push(`edge-classic/${w.wadName}`);\n\t\t})\n\n\t\tlet customCommandLine = getCookie(\"customCommandLineCookie\");\n\t\tif (customCommandLine?.length) {\n\t\t\targs.push(...customCommandLine.split(\" \"));\n\t\t}\n\n\n\n\t\tcreateEdgeModule({\n\t\t\tedgePostInit: () => {\n\t\t\t\tconsole.log(\"Post-Init!\");\n\t\t\t\t// jump\n\t\t\t\tif (!args.find(a => a.startsWith(\"-warp\"))) {\n\t\t\t\t\tModule._WebOpenGameMenu(1);\n\t\t\t\t}\n\n\t\t\t\tsetState({ ...state, loading: false });\n\t\t\t},\n\t\t\tonFullscreen: () => {\n\t\t\t\t/*\n\t\t\t\tconsole.log(\"On fullscreen\");\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\n\t\t\t\telements?.forEach(e => {\n\t\t\t\t\t(e as any).style.display = \"flex\";\n\t\t\t\t});\n\t\t\t\t*/\n\t\t\t},\n\t\t\tpreEdgeSyncFS: () => {\n\t\t\t},\n\t\t\tpostEdgeSyncFS: () => {\n\t\t\t},\n\t\t\targuments: args,\n\t\t\tpreInit: () => {\n\t\t\t\tconsole.log(\"Pre-Init\");\n\t\t\t},\n\t\t\tpreRun: [],\n\t\t\tpostRun: [],\n\t\t\tprint: (function () {\n\t\t\t\treturn function (text) {\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\n\t\t\t\t\tconsole.log(text);\n\t\t\t\t};\n\t\t\t})(),\n\t\t\tprintErr: function (text) {\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\n\t\t\t\tconsole.error(text);\n\t\t\t},\n\t\t\tcanvas: canvas,\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\n\t\t}).then(module => {\n\t\t\tglobalThis.Module = module;\n\t\t\tmodule.canvas = canvas;\n\t\t});\n\n\n\t\treturn () => {\n\n\t\t};\n\n\t}, []);\n\n\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\n\t\t\tonClick={async (ev) => {\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\n\t\t\t\tif (!lock) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}} />\n\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\n\t\t\t<div class={style.loading}>\n\t\t\t\t<span style=\"--i:1\">L</span>\n\t\t\t\t<span style=\"--i:2\">O</span>\n\t\t\t\t<span style=\"--i:3\">A</span>\n\t\t\t\t<span style=\"--i:4\">D</span>\n\t\t\t\t<span style=\"--i:5\">I</span>\n\t\t\t\t<span style=\"--i:6\">N</span>\n\t\t\t\t<span style=\"--i:7\">G</span>\n\t\t\t\t<span style=\"--i:8\">.</span>\n\t\t\t\t<span style=\"--i:9\">.</span>\n\t\t\t\t<span style=\"--i:10\">.</span>\n\t\t\t</div>\n\t\t</div>}\n\n\t</div>\n}\n// floating player controls, not currently used\n// {!state.loading && <PlayerControls />}\n\nconst PlayerControls = () => {\n\tconst [fullscreen, setFullscreen] = useState(false);\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\n\t\t</div>\n\t</div>\n}\n\nconst Player = () => {\n\n\tconst wadHandler = WadHandler.singleton;\n\tconst wadState = wadHandler.wadState.value;\n\n\treturn (\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\n\t\t\t{!wadState?.length && <WadChooser />}\n\t\t\t{!!wadState?.length && <EdgeClassic />}\n\t\t</div>\n\t);\n};\n\nexport default Player;\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal__bCOJk\",\"modal_content\":\"modal_content__O8DzT\",\"animatetop\":\"animatetop__1b7Bz\",\"close\":\"close__jJbSs\",\"modal_header\":\"modal_header__7dLiC\",\"modal_body\":\"modal_body__8R0ze\",\"modal_footer\":\"modal_footer__P6GcC\"};","import { FunctionComponent, h } from 'preact';\nimport style from './style.css';\n\nconst LicenseModal = ({ onClose }) => (\n    <div id=\"myModal\" class={style.modal}>\n        <div class={style.modal_content}>\n            <div class={style.modal_header}>\n                <span class={style.close} onClick={() => onClose()}>&times;</span>\n                <h2>EDGE-Classic Licenses</h2>\n            </div>\n            <div class={style.modal_body}>\n                <div style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"512px\" }}>\n                    <div style={{ fontFamily: \"monospace\", whiteSpace: \"pre\", fontSize: 11 }}>{license}</div>\n                </div>\n            </div>\n            <div class={style.modal_footer}>\n            </div>\n        </div>\n    </div>\n\n);\n\nconst license = `===========================================================================================\nApache License 2.0\n===========================================================================================\n\nglad2 Loader Generator (generated output) - Copyright (c) 2013-2020 The Khronos Group Inc. \n\n===========================================================================================\nBSD 3-Clause License\n===========================================================================================\n\n\"16-Bit Game Station\" soundfont (select melodic instruments) - Copyright (c) 2009 Beatnik, Inc\n\nAlmostEquals Google Test Framework Component - Copyright (c) 2005 Google, Inc.\n\nBlasphemer (various assets) - Copyright (c) 2021 Contributors to the Blasphemer project\n\nFreedoom (various assets) - Copyright (c) 2001-2019 Contributors to the Freedoom project\n\nminivorbis library - Copyright (c) 2020 Eduardo Bart\n  Copyright (c) 2002-2020 Xiph.org Foundation\n\nMod4Play library - \tCopyright (c) 2024-2025 dashodanger\n\t\t\t\t\tCopyright (c) 2022 Olav Sørensen\n\nOpalMIDI library - Copyright (c) 2025, Dashodanger\n\t\t\t\t   Copyright (c) 2021-2024, Devin Acker\n\t\t\t\t   Opal Emulation released into Public Domain by Reality Productions\n\n===========================================================================================\nCC 1.0 Universal License\n===========================================================================================\n\nHandmadeMath.h - Ben Visness\n\n\"ProtoSquare!\" soundfont - Yingchun Soul\n\n===========================================================================================\nCC-BY-3.0 Unported License\n===========================================================================================\n\nGerman Shepherd Dog Sprites - Copyright (c) 2017 Nash Muhandes\n\n===========================================================================================\nCC-BY-NC-4.0 International License\n===========================================================================================\n\nREKKR (various assets) - Copyright (c) 2021 Mockingbird Softworks\n\n===========================================================================================\nCC-BY-SA-4.0 International License\n===========================================================================================\n\n\"ChipFreak\" soundfont - Copyright (c) Jayvee Enaguas\n\n===========================================================================================\nGPL3 License\n===========================================================================================\n\nAJBSP - Copyright (c) 2000-2023 Andrew Apted, et al\n\t \tCopyright (c) 1994-1998 Colin Reed\n\t \tCopyright (c) 1997-1998 Lee Killough\n\nCOAL - Copyright (c) 2021-2024 The EDGE Team\n\t   Copyright (c) 2009-2021 Andrew Apted, et al\n       Copyright (c) 1996-1997 Id Software, Inc.\n\nDDF library - Copyright (c) 1999-2024 The EDGE Team\n\nDEH_EDGE library - Copyright (c) 2004-2024 The EDGE Team\n\nEDGE-Classic - Copyright (c) 1999-2024 The EDGE Team\n\nEPI library - Copyright (c) 2002-2024 The EDGE Team\n\nFluidlite - Copyright (c) 2016 Robin Lobel\n\nSLADE (IMF->WAV conversion and sky drawing routines) - Copyright (c) 2008 - 2023 Simon Judd\n\nXMIDI library (MIDI conversion) - Copyright (c) 2015-2022 Vitaly Novichkov\n\t\t\t\t\t\t\t\t  Copyright (c) 2015-2016 WildMIDI Developers\n\t\t\t\t\t\t\t\t  Copyright (c) 2014 Bret Curtis\n\t\t\t\t\t\t\t\t  Copyright (c) 2001 Ryan Nunn\n\n===========================================================================================\nHacX License\n===========================================================================================\n\nHacX 1.2/2.0 (various assets) - Copyright (c) 1997-2012 Banjo Software, et al\n\n===========================================================================================\nMIT License\n===========================================================================================\n\n3dreamEngine Lua Math Libraries - Copyright (c) 2019 Luke100000 \n\n\"16-Bit Game Station\" soundfont (percussion and select melodic instruments) - Copyright (c) 2022 Yingchun Soul\n\nbase64.lua - Copyright (c) 2018 Ilya Kolbin \n\nBW_Midi_Sequencer library - Copyright (c) 2015-2022 Vitaly Novichkov\n\n\"C++ implementation of a fast Gaussian blur algorithm by Ivan Kutskir - Integer Version\"\n\t- Copyright (C) 2017 Basile Fraboni\n\t- Copyright (C) 2014 Ivan Kutskir\n\nDear ImGUI - Copyright (c) 2014-2023 Omar Cornut\n\ndebugger.lua -Copyright (c) 2023 Scott Lembcke and Howling Moon Software\n\njson.lua - Copyright (c) 2020 rxi\n\nLua - Copyright (C) 1994-2023 Lua.org, PUC-Rio.\n\nminiz library - Copyright (c) 2013-2014 RAD Game Tools and Valve Software\n\t\t\t\tCopyright (c) 2010-2014 Rich Geldreich and Tenacious Software LLC\n\nPL_MPEG library - Copyright(c) 2019 Dominic Szablewski\n\nPNPOLY algorithm - Copyright (c) 1970-2003 Wm. Randolph Franklin\n\nStringHash class - Copyright (c) 2024-2024 the rbfx project\n\t\t\t       Copyright (c) 2008-2022 the Urho3D project.\n\n===========================================================================================\nPublic Domain\n===========================================================================================\n\nFraction.hpp - Bisqwit\n\nMiniaudio library - David Reid\n\nprns.h - Marc B. Reynolds\n\n\"sf_GMbank\" soundfont (renamed to Default.sf2) - The Csound Developers\n\nstb_image, stb_rect_pack, stb_sprintf and stb_truetype libraries - Sean Barrett\n\n===========================================================================================\nSIL Open Font License\n===========================================================================================\n\nFira Code (renamed to ECFONT02.ttf) - Copyright 2014-2020 The Fira Code Project Authors\n\nGermania One (renamed to ECFONT03.ttf) - Copyright (c) 2011, John Vargas Beltrán,\n\t\t\t\t\t\t\t\t\t\t with Reserved Font Name \"Germania One\"\n\nRusso One (renamed to ECFONT01.ttf) - Copyright (c) 2011-2012, Jovanny Lemonad,\n\t\t\t\t\t\t\t\t\t  with Reserved Font Name \"Russo\"\n\n===========================================================================================\nWidePix License\n===========================================================================================\n\nWidePix (various assets) - Copyright (c) 2020-2021 Nash Muhandes\n\n===========================================================================================\nzlib License\n===========================================================================================\n\nSDL2 library - Copyright (c) 1997-2020 Sam Lantinga\n\nSokol libraries - Copyright (c) 2018 Andre Weissflog\n`\n\nexport default LicenseModal;\n","import './style/index.css';\nimport App from './components/app';\n\nexport default App;\n","import { h } from 'preact';\n\nimport Player from './player';\n\nconst App = () => (\n\t<div id=\"app\">\n\t\t<main>\n\t\t\t<Player/>\n\t\t</main>\n\t</div>\n);\n\nexport default App;\n"],"sourceRoot":""}