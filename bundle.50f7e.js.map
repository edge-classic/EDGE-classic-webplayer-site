{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/webpack/buildin/module.js","webpack:///./edge-classic.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/index.tsx","webpack:///./components/player/style.css","webpack:///./components/licenses/style.css","webpack:///./components/licenses/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","Preact","render","hydrate","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","init","webpackPolyfill","deprecate","paths","children","_document$currentScri","_scriptName","createEdgeModule","currentScript","src","undefined","_asyncToGenerator","assert","condition","text","abort","updateMemoryViews","b","wasmMemory","buffer","HEAP8","Int8Array","HEAP16","Int16Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAP32","Int32Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","HEAP64","BigInt64Array","BigUint64Array","addRunDependency","_Module$monitorRunDep","_Module6","runDependencies","Module","removeRunDependency","_Module$monitorRunDep2","_Module7","dependenciesFulfilled","callback","what","_Module$onAbort","_Module8","err","ABORT","e","WebAssembly","RuntimeError","readyPromiseReject","findWasmBinary","path","scriptDirectory","_getWasmBinary","binaryFile","wasmBinary","response","readAsync","_unused2","file","wasmBinaryFile","getBinarySync","apply","arguments","_instantiateArrayBuffer","imports","binary","_x2","getWasmBinary","instantiate","reason","concat","_instantiateAsync","instantiateStreaming","fetch","credentials","_x3","_x4","instantiateArrayBuffer","_createWasm","receiveInstance","instance","wasmExports","Asyncify","instrumentWasmExports","info","wasmImports","Promise","resolve","mod","result","_x5","_x6","_x7","instantiateAsync","receiveInstantiationResult","reject","setValue","ptr","type","endsWith","BigInt","_Module","_Module$_expectedData","readyPromiseResolve","isPthread","isWasmWorker","readyPromise","ENVIRONMENT_IS_PTHREAD","ENVIRONMENT_IS_WASM_WORKER","metadata","fetchRemotePackage","packageName","packageSize","_Module2","_Module2$_dataFileDow","catch","cause","Error","then","_headers$get","_Module$setStatus2","_Module4","ok","status","arrayBuffer","reader","getReader","iterate","read","handleChunk","chunks","total","Number","headers","loaded","_ref2","done","_Module$setStatus","_Module3","push","totalLoaded","totalSize","_i","_Object$values","values","download","packageData","map","reduce","a","offset","_i2","_chunks","chunk","set","runWithFS","check","msg","stack","processPackageData","constructor","ArrayBuffer","byteArray","compressedData","_typeof","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","_Module$_preloadResul","_Module$setStatus3","PACKAGE_UUID","IDB_RO","IDB_RW","METADATA_STORE_NAME","PACKAGE_STORE_NAME","errback","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","openRequest","open","onupgradeneeded","event","db","target","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","onerror","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","chunkCount","Array","chunkId","byteLength","tempTyped","byteOffset","fetchCachedPackage","packageMeta","chunkSliceStart","nextChunkSliceStart","Math","ceil","finishedChunks","putPackageRequest","put","slice","putMetadataRequest","uuid","cacheRemotePackage","substring","lastIndexOf","process","encodeURIComponent","_Module5","_Module5$_preRun","REMOTE_PACKAGE_BASE","readBinary","arguments_","thisProgram","quit_","toThrow","URL","href","_unused","_ref3","_x","EXITSTATUS","out","log","ExitStatus","_createClass","_defineProperty","this","message","callRuntimeCallbacks","callbacks","shift","onPostRuns","addOnPostRun","cb","onPreRuns","addOnPreRun","noExitRuntime","stackRestore","val","__emscripten_stack_restore","stackSave","_emscripten_stack_get_current","PATH","isAbs","charAt","splitPath","filename","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","trailingSlash","split","filter","join","dirname","dir","basename","match","_len","_key","join2","randomFill","view","crypto","getRandomValues","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","min","samePartsLength","outputParts","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","endIdx","NaN","endPtr","decode","subarray","str","u0","u1","u2","String","fromCharCode","ch","FS_stdin_getChar_buffer","lengthBytesUTF8","len","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","TTY","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","fsync","get_char","bytesRead","atime","Date","now","write","put_char","mtime","ctime","default_tty_ops","prompt","FS_stdin_getChar","_tty$output","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","ioctl_tiocgwinsz","default_tty1_ops","_tty$output2","mmapAlloc","MEMFS","ops_table","mount","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","id","ino","nlink","uid","gid","size","blksize","blocks","_i3","_arr","doesNotExistError","old_node","new_dir","new_name","new_node","lookupNode","hashRemoveNode","_toConsumableArray","keys","newname","oldpath","position","canOwn","whence","prot","flags","allocated","asyncLoad","_ref4","_x8","isAsync","GLctx","FS_createDataFile","createDataFile","preloadPlugins","FS_createPreloadedFile","canRead","canWrite","onload","dontCreateFile","preFinish","processData","finish","fullname","Browser","handled","forEach","plugin","FS_handledByPreloadPlugin","FS_getMode","IDBFS","dbs","_indexedDB","toString","ret","DB_VERSION","DB_STORE_NAME","queuePersist","onPersistComplete","idbPersistState","startPersist","syncfs","setTimeout","_mount2$opts","mnt","opts","autoPersist","memfs_node_ops","_objectSpread","idbfs_mount","memfs_stream_ops","isModified","mkdir","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","getDB","req","fileStore","indexNames","createIndex","unique","preventDefault","isRealDir","toAbsolute","entries","mountpoint","stat","pop","index","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","mkdirTree","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","dst","errored","e2","getTime","remove","onabort","oncomplete","sort","reverse","LZ4","DIR_MODE","FILE_MODE","CHUNK_SIZE","codec","MiniLZ4","sIdx","eIdx","j","token","literals_length","match_length","pos","maxInputSize","hashShift","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","copyLength","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","minMatch","ref","runMask","ln","compressBlock","compressPackage","data","verify","temp","compressedChunks","successes","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","analyzePath","readFile","_i4","_arr2","written","currChunk","desired","chunkIndex","floor","compressedStart","found","indexOf","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","readFiles","errno","FSStream","shared","FSNode","readMode","writeMode","_opts$follow_mount","follow_mount","linkloop","nlinks","current","current_path","islast","noent_okay","isMountpoint","mounted","follow","isRoot","getPath","hashName","parentid","hashAddNode","name_next","errCode","mayLookup","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","mayOpen","checkOpExists","op","MAX_OPEN_FDS","nextfd","fd","getStreamChecked","getStream","createStream","_extends","closeStream","dupStream","origStream","_stream$stream_ops","_stream$stream_ops$du","dup","doSetAttr","arg","_stream$stream_ops$op","_stream$stream_ops2","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","unmount","next","statfs","statfsNode","statfsStream","rtn","bsize","frsize","bfree","bavail","ffree","fsid","namelen","_step","_iterator","_createForOfIteratorHelper","f","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","fstat","lstat","doChmod","lchmod","fchmod","doChown","timestamp","chown","lchown","fchown","doTruncate","truncate","ftruncate","isDirPath","FS_modeStringToFlags","created","ungotten","isClosed","getdents","seeking","bytesWritten","mmapFlags","ioctl","cmd","encoding","buf","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","_ref5","_ref6","_slicedToArray","_ref7","_ref8","createStandardStreams","staticInit","_step2","_iterator2","findObject","dontResolveLastLink","exists","parentExists","parentPath","parentObject","part","createFile","properties","_FS$createDevice","_FS$createDevice$majo","_output$buffer","forceLoadFile","obj","isDevice","isFolder","XMLHttpRequest","createLazyFile","writeChunks","defineProperties","fn","UTF8ToString","maxBytesToRead","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","writeStat","writeStatFs","stats","doMsync","addr","varargs","getStr","syscallGetVarargI","syscallGetVarargP","stringToUTF8","outPtr","bigintToI53Checked","num","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","year","getFullYear","getMonth","getDate","_emscripten_get_now","performance","_emscripten_date_now","handleException","runtimeKeepaliveCounter","keepRuntimeAlive","exitJS","code","_Module$onExit","_Module9","_exit","maybeExit","callUserCallback","func","safeSetTimeout","timeout","useWebGL","isFullscreen","pointerLock","moduleContextCreatedCallbacks","workers","preloadedImages","preloadedAudios","getCanvas","pointerLockChange","canvas","initted","imagePlugin","test","Blob","getMimetype","createObjectURL","img","Image","createElement","width","height","getContext","drawImage","revokeObjectURL","audioPlugin","audio","Audio","addEventListener","BASE","leftchar","leftbits","curr","PAD","encode64","requestPointerLock","exitPointerLock","ev","createContext","setInModule","webGLContextAttributes","ctx","contextHandle","contextAttributes","antialias","alpha","majorVersion","attribute","GL","makeContextCurrent","fullscreenHandlersInstalled","lockPointer","resizeCanvas","requestFullscreen","fullscreenChange","_Module$onFullScreen","_Module0","_Module$onFullscreen","_Module1","canvasContainer","parentNode","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","insertBefore","removeChild","setWindowedCanvasSize","appendChild","Element","getUserMedia","_window","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","touches","lastTouches","calculateMouseCoords","pageX","pageY","rect","getBoundingClientRect","scrollX","pageXOffset","scrollY","pageYOffset","adjustedX","left","adjustedY","top","x","y","setMouseCoords","_Browser$calculateMou","calculateMouseEvent","touch","coords","identifier","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","SDL","screen","wNative","hNative","widthNative","heightNative","w","round","factor","style","removeProperty","setProperty","EGL","errorCode","defaultDisplayInitialized","currentContext","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","param","lowLatency","getEmscriptenSupportedExtensions","supportedExtensions","getSupportedExtensions","ext","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","vaos","contexts","offscreenCanvases","queries","samplers","transformFeedbacks","syncs","stringiCache","unpackAlignment","unpackRowLength","recordError","lastError","getNewId","table","genObject","createFunction","objectTable","getSource","shader","count","string","source","getContextSafariWebGL2Fixed","ver","attrs","gl","WebGLRenderingContext","registerContext","handle","context","attributes","version","GLctxObject","enableExtensionsByDefault","initExtensions","_GL$currentContext","deleteContext","_GL$contexts$contextH","JSEvents","removeAllHandlersOnTarget","initExtensionsDone","multiDrawWebgl","getExtension","extPolygonOffsetClamp","webgl_enable_EXT_polygon_offset_clamp","extClipControl","webgl_enable_EXT_clip_control","webglPolygonMode","webgl_enable_WEBGL_polygon_mode","dibvbi","webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","disjointTimerQueryExt","stringToNewUTF8","_malloc","setMainLoop","iterFunc","fps","simulateInfiniteLoop","noSetTiming","checkIsRunning","thisMainLoopId","MainLoop","currentlyRunningMainloop","running","runner","queue","blocker","remainingBlockers","remaining","counted","updateStatus","currentFrameNumber","timingMode","timingValue","scheduler","tickStartTime","runIter","_emscripten_set_main_loop_timing","method","preMainLoop","postMainLoop","pause","resume","_MainLoop$remainingBl","_MainLoop$expectedBlo","expected","expectedBlockers","_step3","_iterator3","pre","_step4","_iterator4","post","nextRAF","fakeRequestAnimationFrame","delay","requestAnimationFrame","_requestAnimationFrame","_x9","RAF","timeUntilNextTick","setImmediate","setImmediates","emscriptenMainLoopMessageId","stopPropagation","postMessage","_eglWaitGL","readEmAsmArgsArray","readEmAsmArgs","sigPtr","wide","runMainThreadEmAsm","emAsmAddr","argbuf","args","ASM_CONSTS","memcpy","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","inEventHandler","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","_step5","_iterator5","removeDeferredCalls","canPerformEventHandlerRequests","userActivation","isActive","currentEventHandler","allowsDeferredCalls","runDeferredCalls","_step6","_iterator6","_call","eventTypeString","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","callbackfunc","handlerFunc","getNodeNameForTarget","nodeName","fullscreenEnabled","webkitFullscreenEnabled","restoreOldWindowedStyle","currentFullscreenStrategy","setLetterbox","element","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","specialHTMLTargets","findEventTarget","cString","findCanvasEventTarget","stackAlloc","sz","__emscripten_stack_alloc","stringToUTF8OnStack","getCanvasElementSize","sp","_emscripten_get_canvas_element_size","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","targetInt","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","innerWidth","screenHeight","innerHeight","canvasSize","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","JSEvents_resizeCanvasForFullscreen","strategy","_target$style","_document$body$style","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","cssHeight","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","webkitRequestFullscreen","ALLOW_KEYBOARD_INPUT","fillGamepadEventData","eventStruct","axes","buttons","pressed","connected","mapping","_glActiveTexture","x0","activeTexture","_emscripten_glActiveTexture","_glAttachShader","program","attachShader","_emscripten_glAttachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_glBindBuffer","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","bindBuffer","_emscripten_glBindBuffer","_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindFramebuffer","_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindRenderbuffer","_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindSampler","_glBindTexture","texture","bindTexture","_emscripten_glBindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_glBindVertexArray","vao","bindVertexArray","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendColor","_emscripten_glBlendEquation","blendEquation","_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlendFuncSeparate","_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBlitFramebuffer","_glBufferData","usage","bufferData","_emscripten_glBufferData","_glBufferSubData","bufferSubData","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfi","_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferfv","_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","_emscripten_glClientWaitSync","sync","clientWaitSync","_emscripten_glClipControlEXT","origin","_glColorMask","red","green","blue","colorMask","_emscripten_glColorMask","_glCompileShader","compileShader","_emscripten_glCompileShader","_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage2D","_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","format","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","uniformIdCounter","_emscripten_glCreateProgram","_glCreateShader","shaderType","createShader","_emscripten_glCreateShader","_glCullFace","cullFace","_emscripten_glCullFace","_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteBuffers","_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteFramebuffers","_glDeleteProgram","deleteProgram","_emscripten_glDeleteProgram","_emscripten_glDeleteQueries","ids","query","deleteQuery","_emscripten_glDeleteQueriesEXT","_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteRenderbuffers","_glDeleteSamplers","deleteSampler","_emscripten_glDeleteSamplers","_glDeleteShader","deleteShader","_emscripten_glDeleteShader","_emscripten_glDeleteSync","deleteSync","_glDeleteTextures","deleteTexture","_emscripten_glDeleteTextures","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_glDeleteVertexArrays","deleteVertexArray","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_glDepthFunc","depthFunc","_emscripten_glDepthFunc","_glDepthMask","depthMask","_emscripten_glDepthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_glDisable","disable","_emscripten_glDisable","_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDisableVertexAttribArray","_glDrawArrays","first","drawArrays","_emscripten_glDrawArrays","_glDrawArraysInstanced","primcount","drawArraysInstanced","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","tempFixedLengthArray","_glDrawBuffers","bufs","bufArray","drawBuffers","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_glDrawElements","indices","drawElements","_emscripten_glDrawElements","_glDrawElementsInstanced","drawElementsInstanced","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_glEnable","enable","_emscripten_glEnable","_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEnableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_glFrontFace","frontFace","_emscripten_glFrontFace","_glGenBuffers","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_glGenRenderbuffers","_emscripten_glGenRenderbuffers","_glGenSamplers","_emscripten_glGenSamplers","_glGenTextures","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_glGenVertexArrays","arrays","_emscripten_glGenVertexArrays","_glGenVertexArraysOES","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","__glGetActiveAttribOrUniform","funcName","bufSize","numBytesWrittenExclNull","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","pname","params","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_glGetAttribLocation","getAttribLocation","_emscripten_glGetAttribLocation","writeI53ToI64","webglGetExtensions","exts","emscriptenWebGLGet","name_","formats","getParameter","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_glGetIntegerv","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramInfoLog","_glGetProgramiv","numActiveUniforms","getProgramParameter","getActiveUniform","numActiveAttributes","getActiveAttrib","numActiveUniformBlocks","_emscripten_glGetProgramiv","_glGetQueryObjecti64vEXT","getQueryParameter","_emscripten_glGetQueryObjecti64vEXT","_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectivEXT","_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_glGetQueryObjectuivEXT","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_glGetShaderiv","getShaderParameter","_emscripten_glGetShaderiv","_emscripten_glGetString","webGLVersion","glVersion","glslVersion","ver_num","_glGetStringi","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","webglGetLeftBracePos","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","nm","lb","arrayName","_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","getUniformLocation","_emscripten_glGetUniformLocation","webglGetUniformLocation","currentProgram","webglLoc","emscriptenWebGLGetUniform","getUniform","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","emscriptenWebGLGetVertexAttrib","getVertexAttrib","fround","_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIiv","_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_glIsVertexArray","array","isVertexArray","_emscripten_glIsVertexArray","_glIsVertexArrayOES","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_glLinkProgram","linkProgram","_emscripten_glLinkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_glPixelStorei","pixelStorei","_emscripten_glPixelStorei","_emscripten_glPolygonModeWEBGL","face","_glPolygonOffset","polygonOffset","_emscripten_glPolygonOffset","_emscripten_glPolygonOffsetClampEXT","units","clamp","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_glReadBuffer","readBuffer","_emscripten_glReadBuffer","heapObjectForWebGLType","toTypedArrayIndex","clz32","BYTES_PER_ELEMENT","_glReadPixels","pixels","readPixels","_emscripten_glReadPixels","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glRenderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterf","_emscripten_glSamplerParameterfv","_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteri","_emscripten_glSamplerParameteriv","_glScissor","scissor","_emscripten_glScissor","_emscripten_glShaderBinary","_glShaderSource","shaderSource","_emscripten_glShaderSource","_glStencilFunc","stencilFunc","_emscripten_glStencilFunc","_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilFuncSeparate","_glStencilMask","stencilMask","_emscripten_glStencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_glStencilOp","stencilOp","_emscripten_glStencilOp","_glStencilOpSeparate","stencilOpSeparate","_emscripten_glStencilOpSeparate","emscriptenWebGLGetTexPixelData","sizePerPixel","colorChannelsInGlTextureFormat","bytes","computeUnpackAlignedImageSize","_glTexImage2D","texImage2D","pixelData","_emscripten_glTexImage2D","_glTexImage3D","texImage3D","_emscripten_glTexImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_glTexParameteri","texParameteri","_emscripten_glTexParameteri","_emscripten_glTexParameteriv","_glTexStorage2D","texStorage2D","_emscripten_glTexStorage2D","_glTexStorage3D","texStorage3D","_emscripten_glTexStorage3D","_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage2D","_glTexSubImage3D","texSubImage3D","_emscripten_glTexSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","_glUniform1fv","uniform1fv","_emscripten_glUniform1fv","_glUniform1i","uniform1i","_emscripten_glUniform1i","_glUniform1iv","uniform1iv","_emscripten_glUniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_glUniform2fv","uniform2fv","_emscripten_glUniform2fv","_emscripten_glUniform2i","uniform2i","_glUniform2iv","uniform2iv","_emscripten_glUniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_glUniform3fv","uniform3fv","_emscripten_glUniform3fv","_emscripten_glUniform3i","uniform3i","_glUniform3iv","uniform3iv","_emscripten_glUniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_glUniform4fv","uniform4fv","_emscripten_glUniform4fv","_emscripten_glUniform4i","uniform4i","_glUniform4iv","uniform4iv","_emscripten_glUniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_glUseProgram","useProgram","_emscripten_glUseProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","v","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_glVertexAttribDivisor","divisor","vertexAttribDivisor","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_glVertexAttribIPointer","stride","vertexAttribIPointer","_emscripten_glVertexAttribIPointer","_glVertexAttribPointer","normalized","vertexAttribPointer","_emscripten_glVertexAttribPointer","_glViewport","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","growMemory","pages","grow","_emscripten_sample_gamepad_data","getGamepads","lastGamepadState","registerFocusEventCallback","userData","eventTypeId","focusEvent","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","_step9","_iterator9","isChanged","onTarget","_step0","_iterator0","changedTouches","_step1","_iterator1","targetTouches","targetRect","numTouches","_i5","_Object$values2","idx32","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","handleSleep","wakeUp","ENV","getEnvStrings","strings","env","languages","replace","dynCall","sig","dynCallLegacy","runAndAbortIfError","instrumentWasmImports","importPattern","_i6","_Object$entries","_Object$entries$_i","original","_loop","_Object$entries2$_i","_Object$entries2","_i7","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","state","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFuncName","getDataRewindFunc","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","createPreloadedFile","edgePostInit","$0","$1","homeIndex","startsWith","homeDir","_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","$2","$3","$4","AudioContext","webkitAudioContext","miniaudio","referenceCount","device_type","playback","capture","duplex","device_state","stopped","started","track_device","iDevice","untrack_device_by_index","deviceIndex","untrack_device","get_device_by_index","unlock_event_types","unlock","webaudio","_ma_device__on_notification_unlocked","pDevice","event_type","mediaDevices","sampleRate","$5","deviceType","channels","bufferSize","pIntermediaryBuffer","audioContextOptions","suspend","channelCountIn","scriptNode","createScriptProcessor","onaudioprocess","intermediaryBufferView","iChannel","inputBuffer","getChannelData","intermediaryBuffer","iFrame","_ma_device_process_pcm_frames_capture__webaudio","_ma_device_process_pcm_frames_playback__webaudio","outputBuffer","numberOfChannels","fill","video","streamNode","createMediaStreamSource","connect","destination","disconnect","reply","allocate","ALLOC_NORMAL","webkitGetUserMedia","elements","SDL2","audioContext","listenOnce","have_microphone","silenceTimer","clearInterval","silenceBuffer","mediaStreamNode","scriptProcessorNode","audioProcessingEvent","currentCaptureBuffer","no_microphone","createBuffer","setInterval","currentOutputBuffer","hasBeenActive","numChannels","channelData","tracks","getAudioTracks","removeTrack","ctxCanvas","imageCtx","image","createImageData","CanvasPixelArray","data32Data","data32","data8","putImageData","hot_x","hot_y","toDataURL","urlBuf","alert","__syscall_dup3","newfd","old","existing","__syscall_faccessat","amode","__syscall_fcntl64","__syscall_fstat64","__syscall_getdents64","dirp","struct_size","off","child","__syscall_ioctl","termios","argp","winsize","__syscall_lstat64","__syscall_mkdirat","__syscall_newfstatat","nofollow","__syscall_openat","__syscall_readlinkat","bufsize","endChar","__syscall_renameat","olddirfd","newdirfd","__syscall_rmdir","__syscall_stat64","__syscall_unlinkat","_abort_js","_emscripten_system","command","_emscripten_throw_longjmp","Infinity","_gmtime_js","time","tmPtr","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","yday","_localtime_js","getSeconds","getMinutes","getHours","getDay","getTimezoneOffset","summerOffset","winterOffset","_mktime_js","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timeMs","isNaN","_tzset_js","timezone","daylight","std_name","dst_name","currentYear","winter","summer","stdTimezoneOffset","extractZone","timezoneOffset","sign","absOffset","abs","hours","padStart","minutes","winterName","summerName","clock_time_get","clk_id","ignored_precision","ptime","clock_id","nsec","eglBindAPI","api","eglChooseConfig","attrib_list","configs","eglCreateContext","hmm","contextAttribs","glesContextVersion","minorVersion","eglCreateWindowSurface","eglDestroyContext","eglDestroySurface","surface","eglGetConfigAttrib","eglGetDisplay","nativeDisplayType","eglGetError","eglInitialize","eglMakeCurrent","draw","eglQueryString","eglSwapBuffers","isContextLost","eglSwapInterval","interval","eglTerminate","eglWaitGL","eglWaitNative","emscripten_asm_const_int","runEmAsmFunction","emscripten_asm_const_int_sync_on_main_thread","emscripten_asm_const_ptr_sync_on_main_thread","emscripten_date_now","emscripten_enter_soft_fullscreen","fullscreenStrategy","hiddenElements","onlyVisibleElement","_step7","_iterator7","currChild","displayState","hideEverythingExceptGivenElement","_step8","_iterator8","elem","restoreHiddenElements","emscripten_err","emscripten_exit_fullscreen","webkitExitFullscreen","emscripten_exit_pointerlock","emscripten_exit_soft_fullscreen","_restoreOldWindowedSt","emscripten_get_device_pixel_ratio","emscripten_get_element_css_size","emscripten_get_gamepad_status","gamepadState","emscripten_get_now","emscripten_get_num_gamepads","emscripten_get_screen_size","emscripten_glActiveTexture","emscripten_glAttachShader","emscripten_glBeginQuery","emscripten_glBeginQueryEXT","emscripten_glBeginTransformFeedback","emscripten_glBindAttribLocation","emscripten_glBindBuffer","emscripten_glBindBufferBase","emscripten_glBindBufferRange","emscripten_glBindFramebuffer","emscripten_glBindRenderbuffer","emscripten_glBindSampler","emscripten_glBindTexture","emscripten_glBindTransformFeedback","emscripten_glBindVertexArray","emscripten_glBindVertexArrayOES","emscripten_glBlendColor","emscripten_glBlendEquation","emscripten_glBlendEquationSeparate","emscripten_glBlendFunc","emscripten_glBlendFuncSeparate","emscripten_glBlitFramebuffer","emscripten_glBufferData","emscripten_glBufferSubData","emscripten_glCheckFramebufferStatus","emscripten_glClear","emscripten_glClearBufferfi","emscripten_glClearBufferfv","emscripten_glClearBufferiv","emscripten_glClearBufferuiv","emscripten_glClearColor","emscripten_glClearDepthf","emscripten_glClearStencil","emscripten_glClientWaitSync","emscripten_glClipControlEXT","emscripten_glColorMask","emscripten_glCompileShader","emscripten_glCompressedTexImage2D","emscripten_glCompressedTexImage3D","emscripten_glCompressedTexSubImage2D","emscripten_glCompressedTexSubImage3D","emscripten_glCopyBufferSubData","emscripten_glCopyTexImage2D","emscripten_glCopyTexSubImage2D","emscripten_glCopyTexSubImage3D","emscripten_glCreateProgram","emscripten_glCreateShader","emscripten_glCullFace","emscripten_glDeleteBuffers","emscripten_glDeleteFramebuffers","emscripten_glDeleteProgram","emscripten_glDeleteQueries","emscripten_glDeleteQueriesEXT","emscripten_glDeleteRenderbuffers","emscripten_glDeleteSamplers","emscripten_glDeleteShader","emscripten_glDeleteSync","emscripten_glDeleteTextures","emscripten_glDeleteTransformFeedbacks","emscripten_glDeleteVertexArrays","emscripten_glDeleteVertexArraysOES","emscripten_glDepthFunc","emscripten_glDepthMask","emscripten_glDepthRangef","emscripten_glDetachShader","emscripten_glDisable","emscripten_glDisableVertexAttribArray","emscripten_glDrawArrays","emscripten_glDrawArraysInstanced","emscripten_glDrawArraysInstancedANGLE","emscripten_glDrawArraysInstancedARB","emscripten_glDrawArraysInstancedEXT","emscripten_glDrawArraysInstancedNV","emscripten_glDrawBuffers","emscripten_glDrawBuffersEXT","emscripten_glDrawBuffersWEBGL","emscripten_glDrawElements","emscripten_glDrawElementsInstanced","emscripten_glDrawElementsInstancedANGLE","emscripten_glDrawElementsInstancedARB","emscripten_glDrawElementsInstancedEXT","emscripten_glDrawElementsInstancedNV","emscripten_glDrawRangeElements","emscripten_glEnable","emscripten_glEnableVertexAttribArray","emscripten_glEndQuery","emscripten_glEndQueryEXT","emscripten_glEndTransformFeedback","emscripten_glFenceSync","emscripten_glFinish","emscripten_glFlush","emscripten_glFramebufferRenderbuffer","emscripten_glFramebufferTexture2D","emscripten_glFramebufferTextureLayer","emscripten_glFrontFace","emscripten_glGenBuffers","emscripten_glGenFramebuffers","emscripten_glGenQueries","emscripten_glGenQueriesEXT","emscripten_glGenRenderbuffers","emscripten_glGenSamplers","emscripten_glGenTextures","emscripten_glGenTransformFeedbacks","emscripten_glGenVertexArrays","emscripten_glGenVertexArraysOES","emscripten_glGenerateMipmap","emscripten_glGetActiveAttrib","emscripten_glGetActiveUniform","emscripten_glGetActiveUniformBlockName","emscripten_glGetActiveUniformBlockiv","emscripten_glGetActiveUniformsiv","emscripten_glGetAttachedShaders","emscripten_glGetAttribLocation","emscripten_glGetBooleanv","emscripten_glGetBufferParameteri64v","emscripten_glGetBufferParameteriv","emscripten_glGetError","emscripten_glGetFloatv","emscripten_glGetFragDataLocation","emscripten_glGetFramebufferAttachmentParameteriv","emscripten_glGetInteger64i_v","emscripten_glGetInteger64v","emscripten_glGetIntegeri_v","emscripten_glGetIntegerv","emscripten_glGetInternalformativ","emscripten_glGetProgramBinary","emscripten_glGetProgramInfoLog","emscripten_glGetProgramiv","emscripten_glGetQueryObjecti64vEXT","emscripten_glGetQueryObjectivEXT","emscripten_glGetQueryObjectui64vEXT","emscripten_glGetQueryObjectuiv","emscripten_glGetQueryObjectuivEXT","emscripten_glGetQueryiv","emscripten_glGetQueryivEXT","emscripten_glGetRenderbufferParameteriv","emscripten_glGetSamplerParameterfv","emscripten_glGetSamplerParameteriv","emscripten_glGetShaderInfoLog","emscripten_glGetShaderPrecisionFormat","emscripten_glGetShaderSource","emscripten_glGetShaderiv","emscripten_glGetString","emscripten_glGetStringi","emscripten_glGetSynciv","emscripten_glGetTexParameterfv","emscripten_glGetTexParameteriv","emscripten_glGetTransformFeedbackVarying","emscripten_glGetUniformBlockIndex","emscripten_glGetUniformIndices","emscripten_glGetUniformLocation","emscripten_glGetUniformfv","emscripten_glGetUniformiv","emscripten_glGetUniformuiv","emscripten_glGetVertexAttribIiv","emscripten_glGetVertexAttribIuiv","emscripten_glGetVertexAttribPointerv","emscripten_glGetVertexAttribfv","emscripten_glGetVertexAttribiv","emscripten_glHint","emscripten_glInvalidateFramebuffer","emscripten_glInvalidateSubFramebuffer","emscripten_glIsBuffer","emscripten_glIsEnabled","emscripten_glIsFramebuffer","emscripten_glIsProgram","emscripten_glIsQuery","emscripten_glIsQueryEXT","emscripten_glIsRenderbuffer","emscripten_glIsSampler","emscripten_glIsShader","emscripten_glIsSync","emscripten_glIsTexture","emscripten_glIsTransformFeedback","emscripten_glIsVertexArray","emscripten_glIsVertexArrayOES","emscripten_glLineWidth","emscripten_glLinkProgram","emscripten_glPauseTransformFeedback","emscripten_glPixelStorei","emscripten_glPolygonModeWEBGL","emscripten_glPolygonOffset","emscripten_glPolygonOffsetClampEXT","emscripten_glProgramBinary","emscripten_glProgramParameteri","emscripten_glQueryCounterEXT","emscripten_glReadBuffer","emscripten_glReadPixels","emscripten_glReleaseShaderCompiler","emscripten_glRenderbufferStorage","emscripten_glRenderbufferStorageMultisample","emscripten_glResumeTransformFeedback","emscripten_glSampleCoverage","emscripten_glSamplerParameterf","emscripten_glSamplerParameterfv","emscripten_glSamplerParameteri","emscripten_glSamplerParameteriv","emscripten_glScissor","emscripten_glShaderBinary","emscripten_glShaderSource","emscripten_glStencilFunc","emscripten_glStencilFuncSeparate","emscripten_glStencilMask","emscripten_glStencilMaskSeparate","emscripten_glStencilOp","emscripten_glStencilOpSeparate","emscripten_glTexImage2D","emscripten_glTexImage3D","emscripten_glTexParameterf","emscripten_glTexParameterfv","emscripten_glTexParameteri","emscripten_glTexParameteriv","emscripten_glTexStorage2D","emscripten_glTexStorage3D","emscripten_glTexSubImage2D","emscripten_glTexSubImage3D","emscripten_glTransformFeedbackVaryings","emscripten_glUniform1f","emscripten_glUniform1fv","emscripten_glUniform1i","emscripten_glUniform1iv","emscripten_glUniform1ui","emscripten_glUniform1uiv","emscripten_glUniform2f","emscripten_glUniform2fv","emscripten_glUniform2i","emscripten_glUniform2iv","emscripten_glUniform2ui","emscripten_glUniform2uiv","emscripten_glUniform3f","emscripten_glUniform3fv","emscripten_glUniform3i","emscripten_glUniform3iv","emscripten_glUniform3ui","emscripten_glUniform3uiv","emscripten_glUniform4f","emscripten_glUniform4fv","emscripten_glUniform4i","emscripten_glUniform4iv","emscripten_glUniform4ui","emscripten_glUniform4uiv","emscripten_glUniformBlockBinding","emscripten_glUniformMatrix2fv","emscripten_glUniformMatrix2x3fv","emscripten_glUniformMatrix2x4fv","emscripten_glUniformMatrix3fv","emscripten_glUniformMatrix3x2fv","emscripten_glUniformMatrix3x4fv","emscripten_glUniformMatrix4fv","emscripten_glUniformMatrix4x2fv","emscripten_glUniformMatrix4x3fv","emscripten_glUseProgram","emscripten_glValidateProgram","emscripten_glVertexAttrib1f","emscripten_glVertexAttrib1fv","emscripten_glVertexAttrib2f","emscripten_glVertexAttrib2fv","emscripten_glVertexAttrib3f","emscripten_glVertexAttrib3fv","emscripten_glVertexAttrib4f","emscripten_glVertexAttrib4fv","emscripten_glVertexAttribDivisor","emscripten_glVertexAttribDivisorANGLE","emscripten_glVertexAttribDivisorARB","emscripten_glVertexAttribDivisorEXT","emscripten_glVertexAttribDivisorNV","emscripten_glVertexAttribI4i","emscripten_glVertexAttribI4iv","emscripten_glVertexAttribI4ui","emscripten_glVertexAttribI4uiv","emscripten_glVertexAttribIPointer","emscripten_glVertexAttribPointer","emscripten_glViewport","emscripten_glWaitSync","emscripten_has_asyncify","emscripten_request_fullscreen_strategy","deferUntilInEventHandler","doRequestFullscreen","emscripten_request_pointerlock","emscripten_resize_heap","requestedSize","alignment","oldSize","maxHeapSize","cutDown","overGrownHeapSize","emscripten_sample_gamepad_data","emscripten_set_beforeunload_callback_on_thread","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","emscripten_set_blur_callback_on_thread","emscripten_set_canvas_element_size","emscripten_set_element_css_size","emscripten_set_focus_callback_on_thread","emscripten_set_fullscreenchange_callback_on_thread","emscripten_set_gamepadconnected_callback_on_thread","emscripten_set_gamepaddisconnected_callback_on_thread","emscripten_set_keydown_callback_on_thread","emscripten_set_keypress_callback_on_thread","emscripten_set_keyup_callback_on_thread","emscripten_set_main_loop","dynCall_v","emscripten_set_mousedown_callback_on_thread","emscripten_set_mouseenter_callback_on_thread","emscripten_set_mouseleave_callback_on_thread","emscripten_set_mousemove_callback_on_thread","emscripten_set_mouseup_callback_on_thread","emscripten_set_pointerlockchange_callback_on_thread","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","emscripten_set_resize_callback_on_thread","uiEvent","outerWidth","outerHeight","registerUiEventCallback","emscripten_set_touchcancel_callback_on_thread","emscripten_set_touchend_callback_on_thread","emscripten_set_touchmove_callback_on_thread","emscripten_set_touchstart_callback_on_thread","emscripten_set_visibilitychange_callback_on_thread","emscripten_set_wheel_callback_on_thread","onwheel","wheelEvent","registerWheelEventCallback","emscripten_set_window_title","title","emscripten_sleep","environ_get","__environ","environ_buf","_step10","envp","_iterator10","environ_sizes_get","penviron_count","penviron_buf_size","_step11","_iterator11","exit","fd_close","fd_read","iov","iovcnt","pnum","doReadv","fd_seek","newOffset","fd_write","doWritev","glActiveTexture","glAttachShader","glBindBuffer","glBindBufferBase","glBindFramebuffer","glBindRenderbuffer","glBindSampler","glBindTexture","glBindVertexArray","glBlendColor","glBlendEquationSeparate","glBlendFuncSeparate","glBlitFramebuffer","glBufferData","glBufferSubData","glClearBufferfi","glClearBufferfv","glClearBufferiv","glColorMask","glCompileShader","glCompressedTexImage2D","glCompressedTexImage3D","glCreateProgram","glCreateShader","glCullFace","glDeleteBuffers","glDeleteFramebuffers","glDeleteProgram","glDeleteRenderbuffers","glDeleteSamplers","glDeleteShader","glDeleteTextures","glDeleteVertexArrays","glDepthFunc","glDepthMask","glDisable","glDisableVertexAttribArray","glDrawArrays","glDrawArraysInstanced","glDrawElements","glDrawElementsInstanced","glEnable","glEnableVertexAttribArray","glFrontFace","glGenBuffers","glGenRenderbuffers","glGenSamplers","glGenTextures","glGenVertexArrays","glGetAttribLocation","glGetIntegerv","glGetProgramInfoLog","glGetProgramiv","glGetShaderInfoLog","glGetShaderiv","glGetStringi","glGetUniformLocation","glInvalidateFramebuffer","glLinkProgram","glPixelStorei","glPolygonOffset","glReadBuffer","glReadPixels","glRenderbufferStorageMultisample","glSamplerParameterf","glSamplerParameteri","glScissor","glShaderSource","glStencilFunc","glStencilFuncSeparate","glStencilMask","glStencilOp","glStencilOpSeparate","glTexImage2D","glTexImage3D","glTexParameteri","glTexStorage2D","glTexStorage3D","glTexSubImage2D","glTexSubImage3D","glUniform1fv","glUniform1i","glUniform1iv","glUniform2fv","glUniform2iv","glUniform3fv","glUniform3iv","glUniform4fv","glUniform4iv","glUniformMatrix4fv","glUseProgram","glVertexAttribDivisor","glVertexAttribIPointer","glVertexAttribPointer","glViewport","invoke_vii","a1","a2","dynCall_vii","_setThrew","random_get","slog_js_log","c_str","warn","createWasm","_main","preInit","run","doRun","_Module$onRuntimeInit","_Module11","entryFunction","argc","argv","argv_ptr","callMain","postRun","preRun","g","_","defaultProps","props","__k","__","__b","__e","__c","__v","__i","__u","vnode","k","S","C","base","M","__d","$","__r","debounceRendering","__P","O","__n","namespaceURI","z","I","P","q","A","nextSibling","L","B","nodeType","T","cssText","toLowerCase","removeAttribute","setAttribute","F","H","contextType","__E","D","sub","__h","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","some","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","V","diffed","localName","createTextNode","createElementNS","is","__m","childNodes","__html","content","componentWillUnmount","E","firstChild","G","isArray","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","__H","__N","__f","every","clearTimeout","cancelAnimationFrame","U","useSignal","__$f","__$u","peek","ownerSVGElement","getCookie","cname","ca","cookie","for","brand","subscribe","valueOf","toJSON","displayName","configurable","__np","queueMicrotask","license","LicenseModal","_ref","onClose","class","onClick","overflowY","overflowX","fontFamily","whiteSpace","fontSize","defaultDoomIWad","defaultHereticIWad","indexDBName","WadHandler","signal","trace","wads","wadState","_uploadWads","_ret","_this","database","_database","upload","FileReader","readAsArrayBuffer","iwad","trans","wadName","isIWAD","_database2","wad","_database3","setWads","_openDatabase","_this2","dbrequest","projects","WadChooser","_getCookie$trim","_getCookie","_useState2","useState","showLicense","setShowLicense","pelements","flex","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","singleton","click","placeholder","spellcheck","onChange","_ev$target","_ev$target2","multiple","badFile","find","uploadWads","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","_useState4","loading","useEffect","syncCanvasSize","offsetWidth","offsetHeight","doSyncTimeout","canvasSync","_WebSyncScreenSize","iwadPath","customCommandLine","_WebOpenGameMenu","preEdgeSyncFS","postEdgeSyncFS","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_canvasRef$current","Player","App"],"mappings":"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AmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kDAAmD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mDAAoD,MA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qD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAA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,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,4CAA6C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0DAA2D,MAAS,SAAU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MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,U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AY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,M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AO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UA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","file":"bundle.50f7e.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var createEdgeModule = (() => {\n  var _scriptName = typeof document != 'undefined' ? document.currentScript?.src : undefined;\n  return (\nasync function(moduleArg = {}) {\n  var moduleRtn;\n\n// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(moduleArg) => Promise<Module>\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = moduleArg;\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\nvar readyPromise = new Promise((resolve, reject) => {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = true;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// include: /home/dasho/Desktop/EDGE-classic/web/site/edge-classic-data.js\n\n  var Module = typeof Module != 'undefined' ? Module : {};\n\n  Module['expectedDataFileDownloads'] ??= 0;\n  Module['expectedDataFileDownloads']++;\n  (() => {\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\n    var isPthread = typeof ENVIRONMENT_IS_PTHREAD != 'undefined' && ENVIRONMENT_IS_PTHREAD;\n    var isWasmWorker = typeof ENVIRONMENT_IS_WASM_WORKER != 'undefined' && ENVIRONMENT_IS_WASM_WORKER;\n    if (isPthread || isWasmWorker) return;\n    function loadPackage(metadata) {\n\n      var PACKAGE_PATH = '';\n      if (typeof window === 'object') {\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/')) + '/');\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\n        // web worker\n        PACKAGE_PATH = encodeURIComponent(location.pathname.substring(0, location.pathname.lastIndexOf('/')) + '/');\n      }\n      var PACKAGE_NAME = '/home/dasho/Desktop/EDGE-classic/web/site/edge-classic.data';\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\n\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\n        \n        Module['dataFileDownloads'] ??= {};\n        fetch(packageName)\n          .catch((cause) => Promise.reject(new Error(`Network Error: ${packageName}`, {cause}))) // If fetch fails, rewrite the error to include the failing URL & the cause.\n          .then((response) => {\n            if (!response.ok) {\n              return Promise.reject(new Error(`${response.status}: ${response.url}`));\n            }\n\n            if (!response.body && response.arrayBuffer) { // If we're using the polyfill, readers won't be available...\n              return response.arrayBuffer().then(callback);\n            }\n\n            const reader = response.body.getReader();\n            const iterate = () => reader.read().then(handleChunk).catch((cause) => {\n              return Promise.reject(new Error(`Unexpected error while handling : ${response.url} ${cause}`, {cause}));\n            });\n\n            const chunks = [];\n            const headers = response.headers;\n            const total = Number(headers.get('Content-Length') ?? packageSize);\n            let loaded = 0;\n\n            const handleChunk = ({done, value}) => {\n              if (!done) {\n                chunks.push(value);\n                loaded += value.length;\n                Module['dataFileDownloads'][packageName] = {loaded, total};\n\n                let totalLoaded = 0;\n                let totalSize = 0;\n\n                for (const download of Object.values(Module['dataFileDownloads'])) {\n                  totalLoaded += download.loaded;\n                  totalSize += download.total;\n                }\n\n                Module['setStatus']?.(`Downloading data... (${totalLoaded}/${totalSize})`);\n                return iterate();\n              } else {\n                const packageData = new Uint8Array(chunks.map((c) => c.length).reduce((a, b) => a + b, 0));\n                let offset = 0;\n                for (const chunk of chunks) {\n                  packageData.set(chunk, offset);\n                  offset += chunk.length;\n                }\n                callback(packageData.buffer);\n              }\n            };\n\n            Module['setStatus']?.('Downloading data...');\n            return iterate();\n          });\n      };\n\n      function handleError(error) {\n        console.error('package error:', error);\n      };\n\n    function runWithFS(Module) {\n\n      function assert(check, msg) {\n        if (!check) throw msg + new Error().stack;\n      }\nModule['FS_createPath'](\"/\", \"crosshairs\", true, true);\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer/graphics\", \"tome\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex1\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/chex1\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex3v\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3v\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3v/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3v\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex3vm\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3vm\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3vm/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex3vm\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"harmonyc\", true, true);\nModule['FS_createPath'](\"/edge_base/harmonyc\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/harmonyc\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/harmonyc/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"skull\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"tome\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"wings\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"strife\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"movies\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_defs/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_defs/scripts/lua\", \"core\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\nModule['FS_createPath'](\"/\", \"overlays\", true, true);\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\n\n        var PACKAGE_UUID = metadata['package_uuid'];\n        var IDB_RO = \"readonly\";\n        var IDB_RW = \"readwrite\";\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\n        var DB_VERSION = 1;\n        var METADATA_STORE_NAME = 'METADATA';\n        var PACKAGE_STORE_NAME = 'PACKAGES';\n        function openDatabase(callback, errback) {\n          var indexedDB;\n          if (typeof window === 'object') {\n            indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n          } else if (typeof location !== 'undefined') {\n            // worker\n            indexedDB = self.indexedDB;\n          } else {\n            throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\n          }\n          try {\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\n          } catch (e) {\n            return errback(e);\n          }\n          openRequest.onupgradeneeded = (event) => {\n            var db = /** @type {IDBDatabase} */ (event.target.result);\n\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\n            }\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\n\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\n              db.deleteObjectStore(METADATA_STORE_NAME);\n            }\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\n          };\n          openRequest.onsuccess = (event) => {\n            var db = /** @type {IDBDatabase} */ (event.target.result);\n            callback(db);\n          };\n          openRequest.onerror = (error) => errback(error);\n        };\n\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\n        // We set the chunk size to 64MB to stay well-below the limit\n        var CHUNK_SIZE = 64 * 1024 * 1024;\n\n        function cacheRemotePackage(\n          db,\n          packageName,\n          packageData,\n          packageMeta,\n          callback,\n          errback\n        ) {\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\n          var chunkSliceStart = 0;\n          var nextChunkSliceStart = 0;\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\n          var finishedChunks = 0;\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\n            nextChunkSliceStart += CHUNK_SIZE;\n            var putPackageRequest = packages.put(\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\n              `package/${packageName}/${chunkId}`\n            );\n            chunkSliceStart = nextChunkSliceStart;\n            putPackageRequest.onsuccess = (event) => {\n              finishedChunks++;\n              if (finishedChunks == chunkCount) {\n                var transaction_metadata = db.transaction(\n                  [METADATA_STORE_NAME],\n                  IDB_RW\n                );\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\n                var putMetadataRequest = metadata.put(\n                  {\n                    'uuid': packageMeta.uuid,\n                    'chunkCount': chunkCount\n                  },\n                  `metadata/${packageName}`\n                );\n                putMetadataRequest.onsuccess = (event) =>  callback(packageData);\n                putMetadataRequest.onerror = (error) => errback(error);\n              }\n            };\n            putPackageRequest.onerror = (error) => errback(error);\n          }\n        }\n\n        /* Check if there's a cached package, and if so whether it's the latest available */\n        function checkCachedPackage(db, packageName, callback, errback) {\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\n          var getRequest = metadata.get(`metadata/${packageName}`);\n          getRequest.onsuccess = (event) => {\n            var result = event.target.result;\n            if (!result) {\n              return callback(false, null);\n            } else {\n              return callback(PACKAGE_UUID === result['uuid'], result);\n            }\n          };\n          getRequest.onerror = (error) => errback(error);\n        }\n\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\n\n          var chunksDone = 0;\n          var totalSize = 0;\n          var chunkCount = metadata['chunkCount'];\n          var chunks = new Array(chunkCount);\n\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\n            var getRequest = packages.get(`package/${packageName}/${chunkId}`);\n            getRequest.onsuccess = (event) => {\n              if (!event.target.result) {\n                errback(new Error(`CachedPackageNotFound for: ${packageName}`));\n                return;\n              }\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\n              if (chunkCount == 1) {\n                callback(event.target.result);\n              } else {\n                chunksDone++;\n                totalSize += event.target.result.byteLength;\n                chunks.push(event.target.result);\n                if (chunksDone == chunkCount) {\n                  if (chunksDone == 1) {\n                    callback(event.target.result);\n                  } else {\n                    var tempTyped = new Uint8Array(totalSize);\n                    var byteOffset = 0;\n                    for (var chunkId in chunks) {\n                      var buffer = chunks[chunkId];\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\n                      byteOffset += buffer.byteLength;\n                      buffer = undefined;\n                    }\n                    chunks = undefined;\n                    callback(tempTyped.buffer);\n                    tempTyped = undefined;\n                  }\n                }\n              }\n            };\n            getRequest.onerror = (error) => errback(error);\n          }\n        }\n\n      function processPackageData(arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file failed.');\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\n        var byteArray = new Uint8Array(arrayBuffer);\n        var curr;\n        var compressedData = {\"data\":null,\"cachedOffset\":51536900,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,1641,3123,4598,6082,7575,9057,10533,12016,13496,14972,16446,17922,19399,20880,22354,23846,25307,26785,28261,29745,31222,32717,34199,35677,37164,38649,39781,40340,40906,41609,41980,42578,42887,43420,43930,44396,44846,45440,45939,46344,46564,46870,47122,47372,47635,47908,48128,48444,48766,49011,49162,49300,49529,49669,49766,49856,50222,50718,51073,51342,51663,51907,52438,52889,53310,53548,53877,54323,54822,55268,55838,56027,56413,56961,57577,57900,58046,58338,58794,59114,59387,59691,60041,60297,60596,60906,60988,61073,61179,61447,61705,61939,62464,62979,63389,63689,63795,64139,64515,64809,65168,65643,66022,66313,66707,67197,67713,68161,68614,70666,72686,74734,76790,78821,80849,82903,84956,86778,88498,90222,91959,93657,95386,97108,98831,100552,102252,103959,105678,107397,109095,110793,112497,114174,115874,117611,119246,120917,122592,124286,126018,127737,129470,131200,132940,134664,136316,138053,139770,141507,143252,144978,146701,148406,150195,152243,154291,156339,158387,160435,162434,164168,165869,167555,169273,171021,172852,174625,176486,178136,179887,181674,183360,185110,186813,188504,190177,191769,193473,195151,196868,198544,200165,201860,203605,205295,206974,208700,210427,212198,213818,215475,217124,218859,220617,222352,224064,225798,227435,229191,230883,232596,233318,233765,234332,234973,236049,236874,237755,238612,239589,240610,241685,243128,244952,246822,248659,250533,252392,254263,255820,257298,258799,260254,261701,263143,264585,266027,267458,268899,270335,271811,273281,274744,276192,277663,279119,280594,282065,283531,285014,286480,287954,289377,290829,292302,293776,295247,296707,298186,299627,301082,302536,304005,305471,306940,308415,309893,311354,312815,314267,315737,317204,318650,320099,321555,323009,324455,325912,327393,328855,330329,331776,333250,334713,336160,337629,339090,340561,342035,343513,345000,346464,347942,349417,350876,352340,353803,355245,356683,358138,359597,361066,362533,363492,364086,364542,365081,365443,365774,366130,366517,366990,367516,368045,368473,369020,369547,369945,370404,370862,371336,371782,372230,372708,373139,373576,374159,374755,375238,375678,376288,376846,377202,377721,378358,378814,379407,380040,380506,380971,381321,381745,382129,382558,383034,383426,383847,384319,384708,385131,385439,385640,385891,386429,386922,387317,387680,388283,388724,389184,389738,390304,390925,391500,391997,392465,393012,393484,393987,394465,394936,395431,395828,396362,396737,397081,397411,397921,398404,398855,399366,399955,400586,401059,401552,402096,402467,402972,403487,404022,404360,404947,405545,406117,406717,407303,407884,408484,408975,409487,409947,410477,410938,411382,411826,412301,412865,413316,413852,414398,414895,415493,415947,416493,417028,417618,418231,418718,419209,419662,420121,420586,420965,421393,421736,422233,422684,423180,423649,424086,424492,424963,425441,425993,426606,427171,427658,428026,428445,428794,429358,429861,430484,430827,431036,431204,431310,431515,431880,432333,432599,432869,433176,433648,434057,434471,434885,435272,435703,436144,436492,436941,437489,438078,438478,439001,439518,439964,440377,440868,441377,441881,442417,443033,443632,444297,444921,445537,446116,446653,447140,447698,448270,448841,449258,449840,450380,450896,451414,451958,452481,452895,453412,453963,454462,454914,455414,455935,456450,456927,457507,458069,458481,458890,459332,459847,460479,461001,461486,461961,462427,462885,463203,463693,463927,464292,464741,465004,465350,465747,466090,466478,466983,467390,467730,468221,468730,469248,469761,470254,470789,471255,471711,472216,472675,473140,473609,474059,474487,474911,475320,475759,476216,476673,477128,477555,477978,478439,478748,479105,479537,479978,480358,480724,481125,481632,482035,482452,482886,483263,483711,484045,484484,485001,485460,485923,486448,488139,490084,492109,494096,496095,498094,500016,501998,504048,506094,508148,510190,512207,514234,516260,518290,520345,522400,524448,526327,528053,529776,531478,533200,534914,536628,538360,540081,541786,543523,545246,546939,548648,550348,552061,553781,555485,557181,558866,560571,562294,563985,565660,567359,569026,570711,572390,574087,575774,577469,579176,580875,582557,584250,585940,587628,589306,591007,592735,594439,596170,597897,599604,601270,602950,604650,606388,608114,609831,611525,613178,614858,616522,618219,619906,621601,623284,624968,626663,628392,630144,631869,633534,635194,636892,638605,640322,642024,643729,645429,647124,648832,650521,652218,653932,655629,657339,659040,660729,662425,664147,665847,667548,669241,670939,672633,674353,676033,677743,679483,681226,682975,684724,686487,688220,689987,691723,693394,695068,696729,698418,700122,701803,703486,705159,706834,708564,710304,712036,713771,715459,717129,718796,720485,722323,724371,726419,728467,730515,732563,734611,736659,738707,740755,742803,744851,746899,748947,750995,752714,754466,756172,757921,759727,761415,763132,764886,766524,768305,770049,771711,773448,775195,776935,778631,780220,781890,783580,785201,786828,788512,790065,791635,793218,794854,796462,798131,799754,801391,803030,804652,806305,808032,809759,811454,813231,814948,816696,818345,820153,822039,823882,825628,827335,828986,830630,832365,834104,835818,837467,839241,841091,842964,844623,846294,847937,849454,850975,852508,853987,855479,857019,858627,860287,861953,863507,865027,866660,868327,869961,871644,873328,875040,876618,878145,879805,881337,883106,884950,886746,888540,890332,892111,893890,895726,897521,899207,900861,902539,904238,905912,907560,909272,911044,912815,914565,916291,917904,919583,921210,921692,922168,922723,923238,923822,924523,925171,925781,926368,926837,927175,927793,928459,929078,929837,930441,930958,931671,932311,932931,933476,933914,934423,934970,935543,936106,936238,936379,936814,937340,937619,937859,937989,938737,939383,939928,940236,940692,941250,941638,942235,942593,943015,943159,943275,943423,943570,943780,944149,944791,945536,946211,946828,947379,947891,948604,949426,950206,951181,952233,953261,954132,954921,955676,956525,956823,957137,957573,957915,958276,958410,958544,958698,959161,959567,959817,960062,960287,960491,960802,961208,961460,962212,962711,962989,963484,963903,964140,964343,964567,964979,965394,965660,966002,966270,966580,966837,967458,967938,968409,969066,969586,970094,970736,971549,972466,973242,973990,974851,975755,976501,977182,977910,978664,979338,980044,980853,981543,982179,982684,983201,983695,984224,984756,985257,985799,986420,987250,988059,988880,989679,990471,991255,991834,992519,993485,994292,995186,995728,996511,997517,998454,999258,1000191,1001157,1002013,1002942,1003811,1004672,1005484,1006204,1006895,1007825,1008625,1009374,1010160,1010933,1011584,1012351,1013201,1013580,1013755,1013880,1013994,1014247,1015215,1016211,1017192,1018199,1019271,1020186,1021149,1022107,1023049,1023966,1024736,1025527,1026202,1026757,1027269,1028118,1028959,1029726,1030467,1031311,1032018,1032583,1033055,1033613,1034447,1035448,1036487,1037567,1038622,1039719,1040695,1041790,1042909,1044051,1045144,1046031,1046752,1047255,1047676,1048059,1048425,1048777,1049118,1049713,1050557,1051504,1052519,1053466,1054292,1055027,1055552,1056220,1057000,1057890,1058669,1059403,1060214,1061018,1061925,1062859,1063842,1064838,1065627,1066462,1067504,1068569,1069673,1070856,1071980,1072999,1074135,1075216,1076056,1076926,1077985,1079050,1080245,1081492,1082544,1083519,1084698,1085886,1086989,1087970,1089008,1090024,1090846,1091890,1093146,1094330,1096116,1097722,1099567,1101441,1103275,1105151,1107042,1108881,1110709,1112580,1114517,1116498,1118427,1120319,1122205,1124156,1126112,1127969,1129667,1131260,1132900,1134388,1135874,1137378,1138871,1140388,1141895,1143390,1144890,1146393,1147917,1149397,1150894,1152404,1153884,1155372,1156866,1158341,1159830,1161340,1162800,1164291,1165785,1167276,1168795,1170320,1171809,1173304,1174808,1176260,1177730,1179228,1180732,1182236,1183746,1185246,1186763,1188266,1189409,1189941,1190452,1191033,1191474,1192020,1192520,1193054,1193620,1194130,1194703,1195238,1195874,1196474,1197076,1197698,1198109,1198727,1199351,1199855,1200374,1200963,1201495,1202042,1202608,1203316,1203929,1204446,1204939,1205389,1205932,1206365,1206929,1207520,1208130,1208718,1209341,1209971,1210548,1211030,1211524,1211944,1212397,1212883,1213442,1214004,1214580,1215115,1215683,1216216,1216689,1217043,1217637,1218000,1218198,1218540,1218775,1219263,1219733,1220143,1220759,1221065,1221674,1222209,1222630,1223196,1223684,1224137,1224539,1224975,1225518,1226033,1226543,1226999,1227320,1227693,1228199,1228871,1229332,1229980,1230578,1231032,1231455,1231952,1232362,1232768,1233008,1233053,1233215,1233539,1233867,1234156,1234579,1234837,1235088,1235443,1235828,1236112,1236434,1236879,1237194,1237599,1237915,1238505,1239056,1239629,1240155,1240575,1240918,1241269,1241758,1242113,1242688,1243228,1243760,1244287,1244778,1245336,1245734,1246302,1246774,1247108,1247533,1248020,1248487,1248989,1249495,1250083,1250616,1251071,1251770,1253792,1255810,1257849,1259866,1261859,1263883,1265869,1267923,1269968,1272010,1273972,1275670,1277351,1279076,1280766,1282411,1284103,1285820,1287516,1289188,1290894,1292602,1294321,1296048,1297763,1299489,1301199,1302910,1304626,1306353,1308057,1309778,1311481,1313177,1314880,1316572,1318286,1319994,1321707,1323416,1325103,1326804,1328474,1330175,1331887,1333605,1335311,1337036,1338743,1340482,1342195,1343921,1345651,1347380,1349099,1350820,1352531,1354261,1355984,1357714,1359442,1361083,1362763,1364476,1366188,1367903,1369606,1371594,1373642,1375690,1377738,1379786,1381834,1383871,1385514,1387197,1388850,1390559,1392327,1394003,1395675,1397472,1399206,1400947,1402668,1404455,1406247,1408047,1409876,1411640,1413403,1415183,1416915,1418600,1420344,1422048,1423756,1425532,1427233,1429005,1430714,1432399,1434128,1435882,1437652,1439364,1441151,1442936,1444715,1446488,1448271,1450052,1451808,1453567,1455326,1457129,1458741,1460457,1462220,1463869,1464984,1465740,1466572,1467467,1468364,1469279,1470009,1470953,1472132,1473573,1474837,1475774,1476885,1478054,1479330,1480435,1481558,1482643,1483580,1484493,1485559,1486692,1487596,1488689,1489762,1490882,1492816,1494803,1496810,1498819,1500812,1502819,1504811,1506407,1508003,1509510,1510971,1512430,1513868,1515367,1516844,1518305,1519320,1519941,1520339,1520800,1521373,1521860,1522464,1523077,1523660,1524217,1524767,1525268,1525764,1526190,1526674,1526799,1527369,1527707,1528296,1528744,1529303,1529843,1531473,1533490,1535242,1536951,1538662,1540370,1542071,1543791,1545500,1547214,1548923,1550700,1552749,1554540,1556327,1558224,1560042,1561772,1563510,1565009,1565643,1566230,1566606,1566631,1566656,1566681,1568611,1569624,1571043,1572487,1573895,1575278,1576787,1578283,1579742,1581196,1582661,1584119,1585560,1587005,1588486,1589925,1591395,1592867,1594339,1595800,1597262,1598751,1599499,1599848,1600274,1600630,1600963,1601456,1601870,1602373,1602826,1603091,1603508,1603823,1604322,1604661,1605313,1605874,1606509,1607060,1607595,1608177,1608539,1609033,1609542,1610072,1610577,1611060,1611564,1612124,1612566,1613108,1613559,1614001,1614513,1614933,1615424,1615921,1616405,1616913,1617270,1617773,1618246,1618640,1619137,1619577,1619909,1620319,1620594,1620880,1621322,1621695,1622240,1624296,1626248,1628252,1630223,1631950,1633668,1635354,1637078,1638799,1640484,1642142,1643829,1645519,1647173,1648857,1650526,1652173,1653843,1655515,1657212,1658923,1660649,1662327,1663993,1665680,1667353,1669371,1671419,1673387,1675240,1677050,1678766,1680565,1682270,1683887,1685536,1687264,1689050,1690702,1692417,1694124,1695906,1697726,1699480,1701054,1702727,1704104,1704855,1705416,1706044,1706651,1707424,1708121,1709005,1709950,1711001,1712389,1713657,1714946,1716155,1717589,1719147,1720037,1721047,1722179,1722938,1723569,1724750,1726289,1728103,1729860,1731605,1733319,1734920,1736493,1737978,1739465,1740940,1742419,1743886,1745346,1746835,1748330,1749811,1751294,1752779,1754271,1755749,1757206,1758689,1760131,1761608,1763079,1764560,1766030,1767506,1768979,1770459,1771941,1773421,1774925,1776407,1777894,1779362,1780273,1780666,1781287,1781868,1782329,1782867,1783304,1783777,1784328,1784695,1784889,1785314,1785715,1786217,1786594,1787151,1787590,1787799,1788271,1788921,1789492,1790165,1790662,1791196,1791745,1792134,1792655,1793109,1793617,1794245,1794688,1795200,1795634,1796031,1796485,1796901,1797540,1798000,1798398,1798551,1798748,1799060,1799487,1800047,1800425,1800970,1801469,1802075,1802612,1803150,1803672,1803921,1804352,1804798,1804929,1805300,1805596,1805925,1806279,1806750,1807174,1807554,1808073,1808591,1809064,1809608,1810139,1810713,1811259,1811802,1812328,1812849,1813140,1813429,1813936,1814499,1814990,1815546,1816098,1816577,1817040,1817521,1817967,1818413,1818877,1819320,1819890,1820263,1820734,1821165,1821641,1822075,1822563,1823046,1823451,1823921,1824362,1824751,1826601,1828644,1830687,1832689,1834743,1836795,1838835,1840740,1842426,1844110,1845823,1847532,1849260,1850937,1852654,1854383,1856106,1857805,1859500,1861203,1862919,1864627,1866342,1868064,1869767,1871472,1873137,1874857,1876509,1878194,1879895,1881548,1883251,1884911,1886611,1888310,1890002,1891681,1893340,1895035,1896729,1898422,1900120,1901837,1903552,1905232,1906878,1908603,1910286,1912197,1914245,1916293,1918341,1920356,1921990,1923538,1925224,1926947,1928749,1930533,1932347,1934268,1935958,1937731,1939596,1941360,1943077,1944952,1946667,1948472,1950014,1951768,1953512,1955159,1956943,1958666,1960340,1962043,1963762,1965451,1967251,1968994,1970634,1972339,1974042,1974794,1975614,1976509,1977318,1978092,1978697,1979248,1979776,1980236,1980442,1980852,1981386,1982180,1982797,1983317,1983670,1984124,1984899,1985575,1986254,1986991,1987708,1988283,1988912,1989390,1989826,1990318,1990978,1991808,1992570,1993104,1993851,1994624,1995383,1996069,1996794,1997603,1998284,1999013,1999607,2000123,2000303,2000645,2000967,2001250,2001640,2001874,2002054,2002340,2002999,2003637,2004252,2005112,2005771,2006411,2007041,2007672,2008446,2009266,2009887,2010514,2011044,2011742,2012355,2012988,2013917,2015233,2016723,2018315,2020139,2021833,2023515,2025230,2026949,2028654,2030383,2032082,2033636,2034855,2036293,2037738,2039207,2040680,2042156,2043626,2045120,2046591,2048078,2049566,2051053,2052538,2054016,2055505,2056985,2058442,2059915,2061388,2062874,2064350,2065855,2067335,2068315,2068506,2068790,2069106,2069503,2069957,2070343,2070549,2070834,2071066,2071369,2071597,2072006,2072656,2073050,2073610,2074040,2074586,2074980,2075569,2076027,2076192,2076394,2076859,2077445,2077990,2078398,2078897,2079488,2079990,2080449,2081056,2081497,2082136,2082530,2082778,2082834,2083187,2083684,2084090,2084556,2084733,2084932,2085348,2085870,2086267,2086469,2086663,2086856,2087051,2087239,2087434,2087637,2087835,2088024,2088218,2088409,2088923,2089199,2089563,2089739,2089996,2090306,2090551,2091058,2091518,2092028,2092437,2092911,2094489,2096405,2098315,2100201,2102109,2104146,2106111,2107766,2109442,2111146,2112818,2114483,2116184,2117921,2119574,2121237,2122938,2124627,2126308,2127962,2129632,2131326,2132992,2134638,2136317,2138006,2139695,2141345,2143003,2144646,2146294,2147957,2149601,2151264,2152928,2154589,2156270,2157945,2159612,2161608,2163656,2165704,2167635,2169313,2171058,2172671,2174361,2176226,2177906,2179576,2181330,2183028,2184627,2186431,2188032,2189646,2191246,2192952,2194610,2196239,2197850,2199456,2201084,2202741,2204458,2206100,2207280,2208112,2208852,2209454,2209642,2210128,2210957,2211886,2212766,2213791,2214698,2215516,2216504,2217518,2218433,2219277,2219838,2220540,2221228,2221837,2223553,2225077,2226872,2228686,2230519,2232262,2234069,2235811,2237371,2238913,2240389,2241875,2243364,2244848,2246307,2247805,2249261,2250752,2252222,2253707,2255201,2256700,2257565,2258116,2258728,2259276,2259768,2260149,2260583,2260868,2261247,2261798,2262055,2262614,2263150,2263710,2264132,2264701,2265245,2265834,2266396,2266908,2267449,2267800,2268016,2268494,2268942,2269426,2269950,2270550,2271098,2271656,2271997,2272139,2272256,2272643,2272954,2274099,2276103,2278153,2280185,2281882,2283565,2285279,2286982,2288682,2290343,2292038,2293722,2295452,2297130,2298837,2300549,2302255,2303941,2305641,2307394,2309442,2311421,2313213,2315021,2316860,2318634,2320323,2322074,2323843,2325597,2327419,2329233,2331037,2332789,2333648,2334543,2335285,2336198,2337275,2338362,2339239,2340263,2341025,2342489,2343748,2345329,2347011,2348674,2350237,2351758,2353220,2354787,2356261,2357742,2359205,2360696,2362174,2363654,2365123,2366611,2368077,2369560,2370803,2371324,2371940,2372476,2373006,2373611,2374108,2374711,2374969,2375475,2375864,2376344,2376653,2377126,2377451,2377606,2377868,2378441,2378620,2379098,2379356,2379824,2380332,2380616,2381054,2381497,2382108,2382614,2383216,2383700,2384136,2384358,2384643,2385151,2385747,2386256,2387845,2389766,2391790,2393673,2395342,2397038,2398711,2400361,2402013,2403663,2405323,2407019,2408689,2410342,2412009,2413704,2415437,2417140,2418873,2420873,2422912,2424587,2426283,2427958,2429637,2431285,2432954,2434581,2436310,2438011,2439882,2441778,2443514,2444287,2445120,2445886,2446582,2447242,2447874,2448793,2449740,2450321,2451877,2453439,2454942,2456527,2458171,2459686,2461176,2462642,2464117,2465597,2467083,2468542,2470031,2471515,2472997,2474475,2475523,2475960,2476218,2476533,2476896,2477250,2477533,2477804,2478194,2478669,2479168,2479537,2480016,2480404,2480648,2480983,2481336,2481737,2482039,2482378,2482622,2482792,2483092,2483359,2483723,2484072,2484518,2485086,2485499,2485804,2486200,2486591,2486865,2487204,2487442,2487685,2488018,2488202,2488623,2490020,2492068,2494114,2496162,2497878,2499597,2501301,2503030,2504765,2506482,2508214,2509952,2511685,2513408,2515145,2516872,2518544,2520275,2521988,2523709,2525414,2527348,2529396,2531408,2533223,2535038,2536817,2538668,2540442,2542267,2544094,2545881,2547721,2549574,2551390,2553157,2554827,2556599,2558454,2560278,2562078,2563030,2563985,2565331,2567151,2569000,2570747,2572251,2573657,2575120,2576586,2578042,2579521,2581002,2582464,2583937,2585442,2586931,2588398,2589879,2591369,2592856,2594332,2595818,2597312,2598795,2600282,2601757,2603260,2604718,2606198,2607667,2608991,2609171,2609448,2609658,2609911,2610400,2610881,2611429,2611722,2612086,2612431,2612748,2613224,2613593,2613911,2614280,2614564,2614977,2615435,2615674,2615969,2616326,2616771,2617102,2617531,2617927,2618220,2618417,2618641,2618925,2619339,2619701,2619994,2620335,2620730,2621174,2621535,2621827,2622318,2622576,2622940,2623218,2623642,2624118,2624301,2624490,2624569,2624825,2625051,2625603,2625802,2626201,2626553,2626856,2627211,2627677,2628059,2628612,2628997,2629064,2629126,2629592,2629907,2630292,2630631,2631094,2631527,2631882,2632232,2632564,2632962,2633334,2633787,2634308,2634684,2635073,2636715,2638631,2640571,2642518,2644435,2646377,2648343,2650051,2651739,2653428,2655120,2656817,2658515,2660222,2661915,2663616,2665305,2666995,2668716,2670420,2672134,2673831,2675537,2677242,2678928,2680647,2682349,2684054,2685766,2687468,2689171,2690891,2692598,2694295,2696009,2697708,2699418,2701114,2702825,2704500,2706338,2708386,2710434,2712482,2714330,2715903,2717596,2719316,2721046,2722733,2724442,2726155,2727814,2729468,2731200,2732867,2734608,2736344,2738048,2739838,2741603,2743361,2745010,2746833,2748547,2750332,2751971,2753669,2755342,2757038,2758681,2760383,2762081,2762966,2763763,2764629,2765499,2765928,2765953,2765978,2766003,2766028,2766053,2766078,2766103,2768099,2769686,2771397,2773158,2774943,2776631,2778464,2780240,2781707,2783062,2784525,2786174,2787738,2789250,2790771,2792276,2793783,2795306,2796827,2798334,2799798,2801286,2802775,2804239,2805732,2807209,2808684,2810141,2811577,2813066,2814547,2816028,2817508,2818972,2820440,2821929,2823390,2824861,2826346,2827840,2829120,2829779,2830397,2831041,2831638,2832245,2832868,2833559,2834175,2834882,2835562,2836217,2836922,2837605,2838236,2838868,2839454,2840173,2840881,2841500,2842223,2842882,2843488,2844194,2844907,2845562,2846157,2846680,2847242,2847836,2848502,2849086,2849634,2850242,2850716,2851330,2851869,2852513,2853098,2853625,2854112,2854644,2855191,2855780,2856277,2856814,2857420,2858056,2858622,2859276,2859819,2860374,2861042,2861644,2862310,2862863,2863325,2863903,2864382,2864828,2865246,2865663,2866143,2866712,2867149,2867612,2868088,2868694,2869048,2869590,2870199,2870641,2871129,2871553,2871895,2872389,2872950,2873573,2874124,2874656,2875110,2875679,2876258,2876846,2877162,2877656,2878169,2878699,2879293,2879767,2879943,2880318,2880788,2881262,2881726,2882136,2882524,2882920,2883522,2884099,2884663,2885198,2885639,2887667,2889711,2891735,2893754,2895702,2897720,2899771,2901679,2903390,2905084,2906786,2908500,2910177,2911847,2913564,2915317,2916986,2918667,2920363,2922108,2923836,2925490,2927119,2928830,2930567,2932289,2934002,2935708,2937422,2939116,2940808,2942502,2944207,2945956,2947690,2949393,2951115,2952855,2954580,2956275,2958015,2959736,2961423,2963117,2964821,2966509,2968222,2969944,2971681,2973365,2975058,2976755,2978796,2980844,2982892,2984940,2986988,2988972,2990694,2992398,2994196,2995810,2997464,2999248,3001045,3002661,3004395,3006145,3007983,3009672,3011264,3013041,3014854,3016593,3018292,3020036,3021715,3023397,3025110,3026885,3028692,3030444,3032237,3033948,3035796,3037484,3039263,3040986,3042687,3044405,3046284,3048077,3049880,3051667,3053378,3055127,3056175,3056792,3057572,3058202,3058773,3059422,3060039,3060645,3061177,3061658,3063048,3064547,3066031,3067494,3069075,3070650,3072288,3073858,3075394,3076528,3077683,3079206,3080680,3082265,3083662,3085270,3086838,3088315,3089911,3091335,3092738,3094064,3095475,3096865,3098216,3099129,3100151,3101431,3102308,3103055,3104277,3105637,3107067,3108686,3110294,3112023,3113434,3115269,3116911,3118325,3119927,3121620,3123319,3125011,3126705,3128348,3130025,3131662,3133335,3134901,3136476,3138034,3139627,3141065,3142545,3144024,3145478,3146956,3148419,3149881,3151377,3152862,3154314,3155789,3157274,3158717,3160157,3161616,3163069,3164523,3166004,3167469,3168951,3170447,3171916,3173382,3174845,3176317,3177781,3179238,3180699,3182169,3183646,3185118,3186583,3188056,3189512,3190979,3192470,3193932,3195427,3196878,3198350,3199847,3201302,3202745,3204249,3205720,3207209,3208697,3210162,3211649,3212188,3212647,3213186,3213692,3214153,3214532,3214918,3215347,3215767,3216249,3216730,3217089,3217541,3218034,3218522,3218924,3219275,3219839,3220297,3220558,3220832,3221175,3221456,3221873,3222189,3222555,3222848,3223107,3223622,3224088,3224558,3225043,3225513,3225916,3226206,3226664,3226950,3227357,3227887,3228287,3228658,3229029,3229382,3229952,3230469,3230951,3231420,3231841,3232182,3232388,3232726,3233259,3233571,3233877,3234284,3234790,3235271,3235749,3236088,3236310,3236738,3237272,3237697,3238220,3238651,3239054,3239310,3239490,3239962,3240449,3240875,3241331,3241742,3242170,3242555,3242924,3243337,3243790,3244268,3244784,3245275,3245686,3246032,3246338,3246805,3247140,3247571,3247832,3248256,3248485,3248817,3249185,3249496,3249690,3250007,3250481,3250799,3251076,3251385,3251566,3251952,3252258,3252622,3252974,3253398,3253653,3253998,3254409,3254768,3255103,3255526,3255927,3256417,3256946,3257456,3257916,3258197,3258546,3258739,3259101,3259565,3259875,3260359,3260558,3261021,3261463,3261916,3262230,3262651,3262919,3263342,3263673,3263960,3264381,3264793,3265267,3265654,3265894,3266056,3266557,3267057,3267532,3267968,3268330,3268823,3269630,3271636,3273632,3275594,3277571,3279527,3281481,3283505,3285446,3287422,3289347,3291354,3293402,3295225,3296919,3298561,3300221,3301875,3303568,3305210,3306899,3308597,3310255,3311910,3313595,3315289,3316961,3318666,3320326,3321999,3323705,3325389,3327058,3328732,3330423,3332109,3333822,3335503,3337166,3338857,3340549,3342244,3343925,3345614,3347289,3348963,3350639,3352345,3354049,3355751,3357426,3359103,3360789,3362470,3364145,3365855,3367555,3369240,3370945,3372666,3374334,3375979,3377662,3379351,3381075,3382766,3384440,3386123,3387800,3389478,3391161,3392845,3394516,3396206,3397887,3399571,3401320,3403368,3405416,3407464,3409512,3411560,3413608,3415258,3416954,3418573,3420233,3421835,3423532,3425212,3426861,3428554,3430276,3432015,3433639,3435442,3437095,3438812,3440569,3442314,3444006,3445761,3447548,3449297,3451013,3452713,3454478,3456246,3457989,3459673,3461381,3463134,3464835,3466531,3468389,3470074,3471746,3473547,3475346,3477150,3478851,3480497,3482219,3484012,3485736,3487473,3489024,3490004,3490844,3491635,3492467,3493254,3494005,3494917,3495575,3496474,3497329,3498026,3498677,3499090,3499554,3499883,3500300,3500651,3501067,3501303,3501858,3502344,3502877,3503324,3503662,3503927,3504503,3504953,3505452,3505950,3506560,3507237,3507580,3507796,3508267,3508730,3509124,3509897,3510481,3510983,3511313,3511782,3512111,3512564,3512715,3513066,3513502,3513921,3514433,3514840,3515202,3515684,3516483,3518104,3519733,3521179,3521866,3522802,3524428,3526055,3527694,3529377,3531058,3532772,3534510,3536320,3538043,3539806,3541549,3543296,3544988,3546721,3548410,3549999,3551542,3553091,3554588,3556054,3557521,3559013,3560488,3561988,3563472,3564956,3566450,3567962,3569460,3570974,3572464,3573932,3575401,3576028,3576449,3576642,3577059,3577658,3578110,3578185,3578260,3578518,3578867,3579476,3580071,3580518,3581018,3581451,3582033,3582510,3582949,3583490,3584092,3584567,3584958,3585375,3585881,3586435,3586791,3587343,3587859,3588193,3588673,3589059,3589465,3589894,3590235,3590537,3590757,3591112,3591439,3591953,3592447,3592999,3593443,3594036,3594303,3595829,3597841,3599802,3601757,3603632,3605334,3607055,3608794,3610516,3612243,3613988,3615715,3617452,3619180,3620911,3622635,3624345,3626083,3627804,3629517,3631215,3632930,3634662,3636363,3638070,3640085,3642133,3644114,3645837,3647576,3649355,3651107,3652895,3654598,3656316,3658067,3659814,3661546,3663289,3665067,3666808,3668571,3670360,3672111,3673659,3674468,3675402,3676218,3677141,3677540,3677565,3677590,3677615,3677640,3677665,3677690,3677715,3679321,3680976,3682527,3684217,3685912,3687387,3688723,3689805,3691000,3692605,3694131,3695691,3697178,3698664,3700173,3701671,3703154,3704656,3706149,3707647,3709140,3710625,3712093,3713543,3715003,3716480,3717914,3719423,3720110,3720767,3721233,3721826,3722316,3722739,3723202,3723655,3724125,3724656,3725173,3725620,3726169,3726727,3727163,3727611,3727807,3728171,3728420,3728771,3729171,3729746,3730007,3730552,3731044,3731567,3732249,3732746,3733189,3733638,3734022,3734524,3735126,3735516,3735935,3736458,3736975,3737502,3738066,3738539,3739122,3739828,3740531,3741061,3741464,3741954,3742199,3743684,3745687,3747740,3749759,3751781,3753498,3755213,3756936,3758645,3760356,3762020,3763678,3765374,3767100,3768826,3770535,3772205,3773904,3775620,3777350,3779054,3780763,3782487,3784179,3785844,3787656,3789704,3791752,3793688,3795487,3797271,3799083,3800931,3802617,3804372,3806222,3808014,3809858,3811705,3813515,3815369,3817207,3818968,3820839,3822629,3824387,3826124,3826900,3827537,3828512,3829324,3830002,3830727,3831506,3832032,3832846,3833694,3834447,3835201,3836070,3836942,3837299,3837987,3838942,3840410,3841520,3842363,3843916,3845386,3846913,3848539,3850138,3851753,3853325,3854743,3856119,3857598,3859022,3860387,3861842,3863263,3864734,3866211,3867659,3869133,3870613,3872110,3873589,3875058,3876556,3878054,3879541,3881034,3882518,3884001,3885487,3886982,3888469,3889937,3891435,3892898,3894388,3895887,3897364,3898863,3900358,3901880,3903393,3904864,3906342,3907844,3909333,3910819,3912298,3913751,3915225,3916718,3918059,3918548,3919072,3919671,3920140,3920608,3921154,3921422,3921987,3922540,3923123,3923313,3923872,3924412,3925076,3925737,3926313,3926871,3927432,3928015,3928573,3929094,3929618,3930110,3930489,3930691,3931183,3931737,3932248,3932819,3933350,3933800,3934314,3934857,3935423,3936071,3936641,3937039,3937552,3938072,3938691,3939194,3939769,3940261,3940755,3941231,3941828,3942380,3942952,3943501,3944107,3944663,3945172,3945540,3945993,3946521,3946971,3947451,3948068,3948575,3949033,3949588,3950047,3950502,3950985,3951226,3951543,3952067,3952513,3953016,3953302,3953765,3954291,3954818,3955358,3955822,3956225,3956299,3956390,3956575,3956699,3956881,3957156,3957359,3957753,3958094,3958531,3959088,3959413,3959874,3960095,3960366,3960524,3960657,3961014,3961480,3962160,3962646,3963138,3963665,3964220,3964729,3965277,3965803,3966390,3966871,3967351,3967616,3968162,3968708,3969136,3969632,3970098,3970589,3971089,3971504,3971987,3972425,3972938,3973486,3974089,3974615,3975106,3975534,3976039,3976443,3976865,3977389,3977836,3978231,3978751,3979201,3979387,3979757,3980267,3980606,3981204,3983211,3985196,3987216,3989261,3991248,3993273,3995237,3997285,3999333,4001382,4003368,4005019,4006652,4008275,4009921,4011649,4013364,4015057,4016743,4018401,4020072,4021771,4023475,4025153,4026863,4028598,4030327,4032042,4033768,4035421,4037115,4038856,4040554,4042281,4043967,4045658,4047403,4049147,4050882,4052627,4054324,4056016,4057659,4059359,4061106,4062855,4064592,4066331,4068066,4069802,4071521,4073257,4074982,4076719,4078450,4080188,4081874,4083530,4085214,4086919,4088595,4090302,4092029,4093771,4095507,4097229,4098954,4100610,4102286,4104002,4105722,4107731,4109779,4111827,4113875,4115923,4117971,4120019,4121948,4123447,4124877,4126492,4128208,4129942,4131632,4133227,4134883,4136530,4138264,4140010,4141821,4143579,4145295,4146921,4148618,4150331,4152056,4153797,4155379,4157232,4159108,4160884,4162632,4164362,4165947,4167745,4169562,4171330,4173088,4174875,4176644,4178393,4180217,4181977,4183719,4185492,4187218,4189027,4190744,4192376,4193994,4195648,4197384,4199108,4200899,4202639,4204383,4206127,4207634,4209276,4211075,4212424,4212995,4213641,4214325,4214932,4215438,4215861,4216524,4217234,4217709,4218322,4218674,4220082,4221479,4222877,4224534,4225743,4227065,4228545,4230037,4231719,4232901,4234039,4235376,4236781,4238018,4239390,4240640,4241790,4243109,4244769,4245484,4246835,4248231,4249691,4250588,4252057,4253685,4254493,4255689,4256902,4258333,4259700,4261085,4262526,4264096,4264905,4265803,4266368,4267621,4269329,4270911,4271798,4272789,4274224,4275619,4276937,4278254,4279623,4280945,4282552,4284193,4284842,4285810,4286240,4287090,4288342,4289515,4290334,4291190,4292725,4294354,4296064,4297834,4299635,4301472,4303255,4305003,4306737,4308606,4310411,4311824,4313260,4314619,4315933,4317397,4318833,4320194,4321525,4322967,4324476,4325963,4327416,4328884,4330342,4331792,4333260,4334702,4336179,4337674,4339161,4340655,4342152,4343641,4345122,4346612,4348096,4349582,4351084,4352564,4354017,4355485,4356974,4358459,4359936,4361419,4362889,4364370,4365803,4367295,4368793,4370258,4371716,4373162,4374649,4376136,4377597,4379090,4380583,4382070,4383558,4385027,4386511,4387996,4389471,4390957,4392448,4393911,4395373,4396837,4398342,4399817,4401287,4402769,4404255,4405721,4407206,4408699,4410162,4411669,4413151,4414629,4416102,4417595,4419072,4420520,4421985,4423454,4424924,4426406,4427892,4429379,4430846,4432338,4433834,4435321,4436810,4438279,4439313,4439678,4440255,4440844,4441504,4442025,4442615,4443170,4443717,4444338,4444966,4445553,4446219,4446840,4447430,4448036,4448601,4448978,4449490,4450018,4450573,4451066,4451457,4452067,4452683,4453263,4453882,4454499,4454746,4455305,4455891,4456467,4456937,4457683,4458353,4458854,4459500,4460134,4460773,4461247,4461753,4462231,4462771,4463255,4463866,4464419,4465065,4465630,4466254,4466858,4467456,4467953,4468412,4468832,4469322,4469820,4470333,4470894,4471346,4471811,4472262,4472731,4473228,4473772,4474283,4474848,4475406,4476050,4476595,4477179,4477774,4478391,4479007,4479576,4480162,4480759,4481409,4481936,4482541,4483166,4483687,4484208,4484668,4485185,4485692,4485986,4486386,4486859,4487373,4487901,4488414,4488946,4489488,4490052,4490631,4491266,4491822,4492422,4492997,4493577,4494202,4494744,4495326,4495853,4496352,4496946,4497298,4497597,4498140,4498727,4499263,4499785,4500241,4500781,4501259,4501700,4502139,4502475,4502957,4503277,4503655,4504108,4504621,4505172,4505685,4506202,4506775,4507257,4507618,4507779,4508226,4508758,4509150,4509569,4510038,4510456,4510889,4511353,4511715,4512174,4512687,4513143,4513630,4514000,4514431,4515016,4515762,4516388,4516816,4517366,4517859,4518411,4518961,4519435,4519985,4520579,4521100,4521670,4522201,4522819,4523137,4523656,4524031,4524513,4524982,4525498,4526032,4526536,4527014,4527550,4528100,4528681,4529184,4529513,4529988,4530459,4530893,4531445,4531952,4532500,4533069,4533671,4534209,4534665,4535050,4535657,4536103,4536592,4537046,4537558,4538027,4538305,4538734,4539208,4539768,4540332,4540937,4541398,4541885,4542383,4542849,4543279,4543774,4544293,4544917,4545260,4545725,4546063,4546571,4546891,4547376,4547778,4548240,4548703,4549198,4549551,4549902,4550204,4550425,4550606,4550862,4551180,4551488,4551721,4552135,4552524,4552794,4553259,4553465,4553616,4553916,4554222,4554459,4555092,4555700,4556392,4556919,4557436,4558033,4558487,4559118,4559584,4560121,4560716,4561362,4561778,4562161,4562662,4563081,4563655,4564187,4564752,4565305,4565963,4566595,4567203,4567818,4568414,4568839,4569348,4569916,4570486,4570845,4571363,4571817,4572344,4572829,4573398,4573872,4574421,4574855,4575080,4575351,4575681,4576001,4576386,4576918,4577303,4577857,4578379,4579010,4579577,4580600,4582626,4584637,4586556,4588555,4590546,4592576,4594580,4596595,4598629,4600644,4602648,4604669,4606628,4608668,4610656,4612662,4614693,4616721,4618776,4620651,4622381,4624092,4625751,4627437,4629130,4630833,4632556,4634286,4636023,4637743,4639482,4641199,4642895,4644593,4646259,4647975,4649674,4651364,4653039,4654740,4656466,4658181,4659896,4661607,4663274,4665000,4666708,4668418,4670135,4671847,4673555,4675261,4676979,4678659,4680325,4682018,4683703,4685370,4687052,4688741,4690392,4692064,4693752,4695437,4697139,4698837,4700525,4702230,4703916,4705601,4707286,4708980,4710673,4712348,4714029,4715715,4717424,4719107,4720800,4722487,4724169,4725845,4727519,4729225,4730919,4732599,4734288,4735984,4737676,4739385,4741083,4742802,4744512,4746210,4747874,4749603,4751310,4752987,4754669,4756342,4758051,4759761,4761441,4763140,4764837,4766488,4768153,4769855,4771576,4773266,4774959,4776636,4778294,4779948,4781601,4783271,4784922,4786592,4788300,4789980,4791689,4793380,4795098,4796774,4798459,4800160,4801854,4803572,4805308,4807016,4808717,4810449,4812114,4813824,4815502,4817182,4818866,4820525,4822223,4824072,4826120,4828168,4830216,4832264,4834312,4836360,4838408,4840456,4842504,4844552,4846600,4848648,4850696,4852579,4854345,4856008,4857684,4859377,4861047,4862797,4864517,4866219,4867936,4869699,4871342,4872990,4874669,4876378,4878093,4879673,4881429,4883192,4884859,4886560,4888230,4890042,4891744,4893494,4895341,4897036,4898748,4900369,4901980,4903605,4905265,4906985,4908618,4910246,4911919,4913582,4915239,4916894,4918561,4920243,4921921,4923552,4925086,4926703,4928408,4930149,4931828,4933599,4935280,4936982,4938600,4940182,4941844,4943486,4945066,4946662,4948342,4950089,4951877,4953635,4955364,4957111,4958930,4960614,4962281,4963955,4965752,4967382,4969053,4970710,4972314,4974051,4975711,4977401,4978957,4980551,4982134,4983642,4985309,4986898,4988630,4990299,4992010,4993644,4995374,4996982,4998746,5000555,5002310,5004122,5005937,5007652,5009289,5010920,5012608,5014276,5016015,5017032,5017663,5018280,5018899,5019254,5019728,5019847,5020449,5021155,5021740,5022412,5023027,5023539,5024230,5024969,5025570,5026248,5027036,5027669,5028282,5028887,5029487,5030114,5030797,5031562,5032107,5032722,5033930,5035394,5036758,5038039,5039683,5041282,5042775,5044240,5045843,5047499,5048828,5049898,5051315,5052411,5053427,5054573,5055584,5056445,5057401,5058528,5059082,5060226,5061202,5061921,5063039,5063952,5064909,5065827,5066859,5068102,5069508,5071187,5072809,5074432,5076020,5077427,5079140,5080828,5082414,5084022,5085712,5087328,5088859,5090476,5092050,5093598,5094910,5096354,5097902,5099556,5101256,5102892,5104435,5106005,5107427,5108891,5110230,5111746,5113174,5114471,5116068,5117311,5118911,5120520,5122068,5123474,5124863,5126189,5127711,5129236,5130694,5132111,5133719,5135343,5136967,5138555,5139970,5140875,5142180,5143429,5144242,5144651,5145538,5146714,5147916,5149132,5150148,5151205,5152207,5153168,5154228,5155219,5156088,5157047,5157845,5158559,5159208,5159649,5159810,5159928,5160543,5161155,5161713,5162277,5162684,5163257,5164436,5165964,5167280,5168573,5169745,5171007,5172191,5173785,5175365,5176952,5178402,5179905,5181316,5182729,5184147,5185301,5185972,5186735,5187795,5189079,5190539,5192059,5193600,5194748,5196365,5197640,5199115,5200504,5202080,5203324,5203986,5205233,5206729,5208218,5209608,5211019,5212565,5214026,5215647,5217170,5218759,5220264,5221185,5222157,5223088,5223639,5224895,5226317,5227451,5227849,5228631,5229173,5229657,5230495,5231656,5232504,5233596,5234753,5235625,5236221,5237417,5238346,5239819,5241183,5241810,5242269,5243751,5245177,5246485,5247503,5248715,5250006,5250949,5251758,5252326,5252963,5254063,5254551,5255242,5255494,5256109,5257046,5257770,5258415,5259222,5259698,5260137,5261475,5262995,5264542,5265826,5267410,5269080,5270658,5272095,5273734,5275309,5276597,5277115,5277892,5279289,5280719,5282131,5283272,5284162,5285706,5286847,5287738,5289126,5290424,5291445,5292799,5293568,5294069,5294645,5294989,5295385,5295774,5296231,5296723,5297089,5297506,5297851,5298272,5298737,5299092,5299420,5299867,5300416,5301182,5302014,5302688,5303198,5303698,5304100,5304523,5305233,5305452,5305828,5306215,5306503,5307190,5308056,5308421,5309234,5310087,5310700,5311055,5311659,5312262,5312668,5313060,5313428,5313843,5314206,5315022,5316595,5318117,5319700,5321316,5322955,5324577,5325930,5326510,5327109,5327328,5327539,5327782,5328244,5329406,5331004,5332883,5334799,5336246,5337160,5338785,5340546,5342233,5343871,5345609,5347352,5349098,5350867,5352683,5354435,5356247,5357986,5359780,5361600,5363402,5365214,5367045,5368854,5370652,5372469,5374319,5376109,5377843,5379582,5381159,5382580,5384072,5385534,5387017,5388495,5389969,5391400,5392878,5394374,5395850,5397289,5398771,5400240,5401710,5402145,5402663,5403096,5403471,5403934,5404407,5404901,5405259,5405759,5406138,5406573,5407123,5407518,5407920,5408198,5408506,5408852,5409195,5409510,5409794,5410062,5410616,5411048,5411382,5411967,5412401,5412900,5413359,5413846,5414234,5414760,5415105,5415628,5416131,5416621,5417128,5417569,5418021,5418378,5418725,5419340,5421313,5423272,5425180,5426905,5428569,5430239,5431911,5433593,5435265,5436933,5438587,5440252,5441916,5443580,5445275,5446959,5448647,5450342,5452017,5453698,5455604,5457652,5459473,5461142,5462769,5464449,5466171,5467849,5469560,5471268,5473014,5474760,5476580,5478167,5479757,5480943,5481365,5481744,5482292,5482404,5483334,5484313,5485399,5486372,5487377,5488461,5489327,5490404,5491437,5492096,5493216,5494475,5496142,5497897,5499628,5501271,5502535,5504015,5505485,5506959,5508450,5509931,5511421,5512906,5513321,5513546,5514152,5514809,5515424,5515853,5516430,5516984,5517464,5518013,5518428,5518866,5519272,5519702,5520159,5520489,5521021,5521265,5521702,5522014,5522524,5522972,5523436,5523753,5524325,5526372,5528346,5530004,5531679,5533400,5535114,5536804,5538471,5540126,5541793,5543445,5545079,5546738,5548706,5550638,5552356,5554158,5556048,5557847,5559552,5561315,5563079,5564765,5566064,5566618,5567009,5567758,5568872,5569821,5570828,5571668,5572737,5573725,5575173,5576668,5578363,5579917,5581518,5582996,5584463,5585949,5587447,5588923,5590387,5591839,5593330,5594580,5595164,5595750,5596296,5596642,5596970,5597342,5597829,5598221,5598733,5599288,5599674,5600141,5600624,5601106,5601558,5601997,5602462,5602884,5603460,5603922,5604390,5604964,5605381,5605896,5606392,5606795,5607325,5607863,5609349,5611348,5613255,5614948,5616653,5618342,5620025,5621733,5623431,5625121,5626795,5628515,5630225,5631918,5633597,5635627,5637543,5639325,5641085,5642760,5644513,5646283,5647957,5649765,5651523,5653197,5654085,5654759,5655350,5656467,5658112,5659237,5660590,5662026,5663849,5665503,5667058,5668428,5669923,5671406,5672885,5674390,5675920,5677417,5678902,5680394,5680864,5681403,5681921,5682452,5682985,5683293,5683678,5684185,5684726,5685220,5685816,5686377,5687042,5687627,5687749,5687908,5688318,5688778,5689306,5689883,5690433,5690998,5691740,5693769,5695716,5697404,5699097,5700779,5702455,5704133,5705816,5707489,5709159,5710822,5712601,5714609,5716348,5718067,5719795,5721486,5723194,5724836,5726458,5727211,5727972,5729113,5730698,5731918,5733178,5734622,5736260,5737882,5739313,5740701,5742139,5743677,5745144,5746642,5748118,5749555,5751036,5752518,5753988,5755459,5756962,5758478,5759971,5760570,5760934,5761260,5761657,5761984,5762199,5762625,5763105,5763461,5763942,5764296,5764643,5764943,5765192,5765490,5765918,5766358,5766549,5767060,5767514,5767694,5768079,5768433,5768691,5769109,5769486,5769902,5770512,5770954,5771389,5771781,5772007,5772278,5772770,5773132,5773625,5773974,5774661,5776653,5778647,5780648,5782427,5784117,5785790,5787447,5789154,5790850,5792525,5794204,5795911,5797625,5799336,5801043,5802760,5804455,5806159,5807851,5809539,5811409,5813457,5815435,5817048,5818676,5820409,5822149,5823849,5825658,5827514,5829322,5831203,5833007,5834758,5836464,5838162,5839609,5840173,5840863,5841597,5842462,5843670,5844374,5845315,5846163,5846969,5847524,5848044,5849751,5850946,5852281,5853837,5855373,5856846,5858391,5859862,5861336,5862879,5864375,5865858,5867349,5868831,5870314,5871787,5873290,5874537,5874859,5875381,5876000,5876563,5877066,5877539,5878004,5878604,5879145,5879619,5879957,5880531,5881110,5881621,5882152,5882684,5883348,5883993,5884592,5884987,5885366,5885660,5887388,5889338,5891130,5892821,5894514,5896218,5897924,5899595,5901277,5902957,5904645,5906314,5908351,5910052,5911759,5913517,5915246,5916989,5918739,5920456,5921541,5922255,5923320,5924868,5926424,5927917,5929396,5930930,5932490,5933948,5935505,5937018,5938534,5940080,5941581,5943101,5944584,5946064,5947552,5949055,5950542,5952017,5953515,5955001,5956483,5957937,5959422,5960931,5962425,5963897,5965366,5966859,5968341,5969824,5971294,5972799,5973781,5974417,5975046,5975645,5976313,5976834,5977036,5977494,5977774,5978100,5978669,5978906,5979280,5979888,5980410,5981056,5981600,5982074,5982664,5983277,5983713,5984279,5984708,5985399,5986023,5986603,5987151,5987708,5988390,5988994,5989638,5990307,5990889,5991445,5991930,5992476,5992913,5993325,5993854,5994332,5994960,5995512,5996009,5996425,5996950,5997561,5998083,5998708,5999295,5999805,6000286,6000409,6000548,6000837,6001268,6001800,6002113,6002462,6002900,6003418,6004031,6004627,6005058,6005637,6006224,6006618,6006932,6007177,6007760,6008314,6009018,6009513,6009992,6011947,6013953,6015963,6017982,6019966,6021993,6023620,6025326,6027023,6028721,6030423,6032134,6033811,6035507,6037223,6038923,6040613,6042310,6044004,6045710,6047388,6049070,6050798,6052478,6054166,6055846,6057518,6059216,6060906,6062595,6064290,6065990,6067660,6069358,6071041,6072710,6074396,6076214,6078262,6080310,6082358,6084151,6085928,6087656,6089355,6091175,6092896,6094655,6096547,6098255,6100031,6101791,6103558,6105275,6107031,6108789,6110501,6112225,6113955,6115635,6117422,6119210,6120960,6122743,6124467,6126257,6128133,6128930,6129655,6130262,6130973,6131614,6132289,6132829,6133580,6134098,6134694,6135132,6135737,6136297,6137036,6137998,6138880,6139774,6140671,6141608,6142309,6142811,6143101,6143704,6144386,6144953,6145364,6146030,6146413,6146726,6147036,6147708,6148628,6149494,6150374,6150958,6152235,6153193,6153827,6154126,6155368,6156971,6158619,6160243,6161864,6163666,6165381,6167066,6168698,6170226,6171693,6173273,6174799,6176254,6177739,6179224,6180673,6182148,6183628,6185101,6186574,6188049,6189506,6190968,6192471,6193956,6195433,6196886,6197502,6198015,6198525,6198966,6199407,6199975,6200266,6200778,6201221,6201817,6201966,6202260,6202851,6203345,6203885,6204207,6204773,6205343,6205947,6206433,6206818,6207430,6207678,6207853,6208357,6208911,6209210,6209472,6209638,6209970,6210455,6211007,6211503,6212021,6212521,6212769,6213154,6213556,6213958,6214465,6215000,6215413,6215729,6216079,6216611,6217147,6217760,6219776,6221824,6223825,6225854,6227665,6229377,6231094,6232796,6234513,6236243,6237912,6239617,6241315,6243056,6244722,6246436,6248119,6249802,6251500,6253229,6254947,6256624,6258313,6259993,6261645,6263618,6265666,6267695,6269562,6271431,6273141,6274942,6276691,6278482,6280265,6282193,6284015,6285825,6287607,6289449,6291335,6293205,6294934,6296735,6298371,6299661,6300351,6301160,6301826,6302589,6303297,6304172,6305180,6305896,6306811,6307749,6308721,6309514,6310405,6311225,6312193,6312938,6313573,6314105,6315218,6316675,6317278,6318038,6319558,6321120,6322725,6324340,6325947,6327484,6328986,6330458,6331500,6332110,6332736,6333220,6333600,6335093,6336758,6338445,6340286,6342090,6343156,6344344,6345857,6347266,6348766,6350250,6351722,6353214,6354713,6356194,6357658,6359071,6359623,6360186,6360744,6361325,6361884,6362215,6362610,6363132,6363541,6364083,6364612,6364973,6365387,6365561,6365953,6366448,6366879,6367148,6367491,6367810,6368098,6368381,6368776,6369247,6369757,6370124,6371123,6373055,6374933,6376583,6378245,6379900,6381597,6383269,6384919,6386602,6388299,6389975,6391674,6393350,6395347,6397076,6398606,6400239,6401966,6403698,6405444,6407143,6408866,6410468,6411063,6411692,6412152,6413841,6415240,6416268,6417484,6418715,6420337,6421991,6423615,6424641,6425132,6426252,6427993,6429450,6430826,6431350,6432052,6433742,6435275,6436886,6438377,6439896,6441320,6442776,6444252,6445751,6447233,6448696,6450184,6451660,6453144,6454627,6456127,6457617,6459093,6460575,6462068,6463586,6465049,6466563,6468030,6469509,6470973,6472454,6473926,6475410,6476885,6478358,6479861,6480675,6481286,6481879,6482409,6483031,6483636,6484212,6484817,6485319,6485762,6486293,6486913,6487517,6487915,6488358,6488752,6489191,6489766,6490400,6490873,6491357,6491891,6492401,6492610,6493163,6493743,6494147,6494385,6494772,6495313,6495907,6496466,6497059,6497658,6498025,6498504,6498986,6499466,6499895,6500349,6500834,6501322,6501619,6502093,6502589,6502879,6503260,6503578,6503994,6504491,6504958,6505499,6505975,6506421,6506831,6507423,6507991,6508606,6509105,6509659,6510169,6510587,6511056,6511577,6512080,6512660,6513148,6513644,6513940,6514426,6514898,6515384,6515840,6516225,6516844,6517384,6517755,6518169,6518579,6519014,6519275,6519616,6520069,6520343,6520882,6521282,6521714,6522290,6522672,6523096,6524977,6527007,6529061,6531117,6533133,6535150,6537194,6539043,6540767,6542494,6544227,6545934,6547673,6549400,6551129,6552872,6554595,6556349,6558086,6559831,6561564,6563312,6565055,6566752,6568494,6570215,6571920,6573657,6575372,6577062,6578715,6580394,6582071,6583750,6585431,6587114,6588811,6590521,6592249,6593967,6595685,6597401,6599126,6600842,6602485,6604139,6605889,6607937,6609985,6612033,6614081,6616076,6617909,6619713,6621519,6623337,6625143,6626969,6628763,6630569,6632347,6634127,6635937,6637760,6639616,6641484,6643377,6645177,6646989,6648797,6650589,6652441,6654152,6655793,6657510,6659188,6660896,6662686,6664460,6666243,6667996,6669808,6671589,6673403,6675039,6676658,6677429,6678078,6678892,6679605,6680150,6680680,6681540,6682843,6684075,6685074,6686074,6686893,6688021,6688958,6689956,6691111,6692206,6693094,6694073,6695190,6696063,6696755,6697437,6698410,6699619,6701335,6702851,6704177,6705846,6707449,6709138,6710777,6712447,6714060,6715722,6717460,6719145,6720525,6721061,6721759,6723451,6724978,6726482,6727128,6727528,6729158,6730799,6732304,6733206,6733639,6734968,6736733,6738179,6739391,6739936,6740811,6742530,6744022,6745541,6746085,6746531,6748252,6749829,6751331,6752123,6752543,6754005,6755790,6757204,6758252,6758758,6759811,6761538,6763011,6764430,6764965,6765604,6767303,6768836,6770326,6771006,6771410,6773006,6774679,6776166,6777122,6777583,6778850,6780607,6782049,6783330,6783900,6784725,6786433,6787939,6789451,6790042,6790448,6792163,6793750,6795260,6796077,6796482,6797910,6799691,6801093,6802190,6802719,6803733,6805452,6806938,6808377,6808916,6809510,6811220,6812766,6814330,6815804,6817265,6818743,6820224,6821681,6822642,6823092,6823490,6823708,6823934,6824138,6824486,6824960,6825309,6825793,6826337,6826733,6827135,6827542,6827820,6828062,6828462,6828799,6829155,6831058,6832935,6834581,6836215,6837867,6839537,6841219,6842861,6844505,6846134,6847914,6849693,6851213,6852812,6854434,6856027,6857675,6858978,6859358,6859529,6860358,6861349,6862480,6862964,6864656,6866324,6867587,6868133,6868964,6870674,6872176,6873406,6874889,6876353,6877830,6879266,6880713,6881743,6882293,6882697,6883102,6883569,6884027,6884532,6885276,6885842,6886353,6886835,6887226,6887596,6887968,6888429,6888871,6889418,6891084,6892858,6894518,6896173,6897854,6899472,6901123,6902793,6904697,6906269,6907859,6909461,6910621,6911065,6911601,6912063,6912302,6912830,6913714,6914954,6916525,6918196,6919098,6919785,6920531,6921227,6921837,6922591,6923332,6924074,6924812,6925436,6926100,6926886,6927641,6928805,6930654,6932711,6934751,6936799,6938856,6940040,6941506,6942948,6944215,6945581,6947067,6948527,6949964,6951475,6953027,6954542,6956031,6957490,6958928,6960272,6961653,6963133,6964511,6966069,6967488,6968828,6970165,6971616,6973026,6974343,6975937,6977476,6978862,6980213,6981631,6983176,6984597,6986159,6987656,6989022,6990524,6991530,6991938,6991984,6992056,6992432,6992788,6993135,6993552,6994126,6994551,6995006,6995544,6996168,6997144,6998295,6999380,7000439,7001485,7002729,7003968,7005186,7005868,7006427,7006997,7007523,7008057,7008690,7009392,7009830,7010145,7010576,7011044,7011502,7012286,7013812,7015324,7016775,7018208,7019680,7021220,7022813,7024378,7025925,7027501,7029074,7030614,7032264,7033699,7035208,7036762,7038367,7040053,7041664,7043266,7044958,7046635,7048242,7049734,7051350,7052839,7054354,7055914,7057512,7058918,7060191,7061124,7062092,7063072,7064112,7065270,7066397,7067560,7068786,7070001,7071138,7072347,7073797,7075229,7076686,7078039,7079477,7080891,7082469,7083785,7084947,7086119,7087327,7088498,7089812,7091088,7092445,7093899,7095226,7096640,7098050,7099424,7100557,7101947,7103263,7104277,7105384,7106504,7107637,7108804,7110024,7111513,7112905,7114104,7115378,7116956,7118379,7119700,7121334,7122804,7124548,7125608,7126904,7128091,7129281,7130948,7132136,7133291,7134462,7135612,7136811,7137978,7139100,7140402,7141958,7143482,7144894,7146344,7147837,7149408,7151020,7152581,7154143,7155752,7157317,7158866,7160497,7161979,7163441,7165040,7166663,7168363,7169934,7171594,7173285,7174948,7176513,7177977,7179583,7181061,7182565,7184133,7185722,7187074,7188844,7190895,7192943,7194970,7197018,7198897,7200354,7201926,7203403,7204863,7206315,7207843,7209443,7211017,7212540,7214121,7215719,7217286,7218904,7220402,7221947,7223432,7225052,7226729,7228343,7229918,7231616,7233290,7234887,7236415,7237961,7239513,7241015,7242570,7244139,7245623,7246906,7247992,7249366,7250650,7251672,7252759,7253916,7255039,7256192,7257408,7258885,7260304,7261532,7262836,7264434,7265799,7267146,7268755,7270236,7271983,7273079,7274383,7275597,7276764,7278433,7279663,7280822,7282004,7283152,7284324,7285474,7286608,7287258,7287738,7288125,7288949,7289704,7290521,7291253,7292101,7292858,7293705,7294467,7295116,7295743,7296600,7297179,7297879,7298462,7299225,7300041,7300844,7301361,7302139,7302860,7303609,7304428,7305355,7306090,7306779,7307141,7307505,7308316,7308914,7309622,7310243,7311062,7311892,7313223,7314752,7316132,7317138,7318036,7318844,7319635,7320729,7321917,7323056,7324150,7325277,7326280,7327339,7328374,7329456,7330527,7331645,7332768,7333863,7334932,7336050,7337120,7338151,7339223,7340301,7341360,7342455,7343547,7344558,7345612,7346636,7347636,7348589,7349853,7350934,7351771,7352937,7354149,7355657,7356807,7357707,7358561,7359421,7360281,7361316,7362503,7364032,7366082,7368137,7370193,7372054,7373510,7374966,7377022,7379070,7381118,7383166,7385214,7387262,7389319,7391375,7393423,7395465,7397420,7399456,7401504,7403105,7405022,7406444,7408233,7410101,7411896,7413706,7415574,7417392,7419222,7421080,7422906,7424699,7426571,7428379,7430377,7431995,7433350,7435268,7436587,7438367,7439392,7441143,7443022,7444638,7446289,7447406,7449128,7449873,7450937,7452166,7453998,7455781,7457658,7459460,7461161,7462789,7464297,7465757,7467195,7468552,7470484,7472413,7474189,7475838,7477366,7478801,7480133,7481419,7482631,7483843,7484991,7486392,7488041,7489718,7491557,7493526,7495463,7497426,7499432,7501310,7503222,7505107,7507121,7508925,7510440,7511899,7513947,7515568,7517337,7519161,7520676,7521705,7523546,7525601,7527381,7527723,7528840,7530614,7531860,7533866,7535264,7535926,7537968,7540016,7542064,7543281,7544679,7546727,7548564,7549595,7550018,7551849,7553575,7554205,7556124,7558181,7560229,7562277,7563949,7564542,7566452,7568500,7570464,7571639,7571765,7572942,7574990,7577047,7579095,7580598,7581747,7583800,7585848,7587896,7589944,7591678,7592883,7593624,7594348,7594980,7596982,7599030,7601078,7603132,7605136,7606920,7608472,7609792,7610872,7611892,7612805,7614853,7616675,7618545,7620600,7622593,7624517,7626090,7626694,7627078,7628699,7629711,7630782,7631685,7631974,7633977,7636025,7638073,7640121,7642027,7642464,7643515,7645563,7647620,7649654,7651022,7652240,7654109,7656157,7658205,7660261,7662309,7664204,7665426,7666329,7667001,7669050,7670668,7672716,7674686,7676734,7678595,7680613,7682503,7684069,7685285,7686168,7687564,7689621,7691669,7693717,7695765,7697820,7699868,7701921,7703863,7705912,7707961,7710015,7712037,7714085,7716142,7718190,7720242,7722290,7724140,7725611,7726738,7727624,7728527,7729148,7729431,7731480,7733445,7735202,7736658,7738046,7738968,7739966,7742014,7744068,7746116,7747507,7748838,7750672,7752578,7754493,7756463,7758462,7760417,7762454,7764469,7766441,7768439,7770237,7771458,7773100,7775044,7777091,7779139,7781187,7783235,7785283,7787331,7789379,7791427,7793475,7795523,7797580,7799628,7801612,7803474,7805168,7806680,7808028,7809129,7809756,7810810,7812514,7814227,7816275,7818323,7820252,7821997,7824054,7826102,7828150,7830198,7832246,7834294,7836342,7838390,7840438,7842486,7844534,7846582,7848630,7850678,7852726,7854774,7856831,7858879,7860927,7862984,7864819,7865957,7867856,7869904,7871952,7874000,7876048,7878096,7880144,7882192,7884240,7886283,7888176,7889822,7891158,7892026,7892855,7893089,7893967,7896015,7898063,7900111,7902159,7904207,7906255,7907697,7908241,7908700,7910418,7912392,7914365,7916402,7918450,7920498,7922554,7924602,7926650,7928698,7930746,7932794,7934842,7936890,7938938,7940987,7943034,7945087,7947142,7949190,7951235,7953286,7955342,7957394,7959428,7961391,7963241,7964937,7966460,7967782,7969031,7970573,7972621,7974678,7976416,7977671,7979639,7981051,7982210,7983208,7983413,7983438,7983463,7983488,7983513,7984378,7986003,7987897,7989820,7991868,7993847,7995571,7996572,7997007,7999055,8001103,8003151,8004882,8006534,8008099,8010147,8012199,8014232,8016192,8018130,8019454,8020969,8023017,8025065,8027113,8028540,8030527,8032528,8034576,8036624,8038672,8040719,8042662,8044586,8046429,8048252,8049864,8051157,8052219,8053089,8054922,8056970,8059018,8061066,8063114,8065167,8066793,8068841,8070889,8072937,8074202,8076031,8078048,8080096,8082144,8084192,8086240,8088259,8090019,8091525,8092683,8094716,8095919,8097669,8099671,8101608,8103454,8105059,8106431,8107846,8109408,8111050,8112319,8114156,8116065,8118113,8120168,8122216,8123862,8124107,8125067,8127115,8129172,8131021,8132550,8133927,8135196,8136276,8137331,8138391,8140220,8142275,8144100,8145388,8146485,8147253,8147938,8148633,8149336,8150488,8152536,8154551,8155742,8156382,8157653,8159708,8161756,8163804,8165852,8167900,8169948,8171996,8174044,8176092,8178100,8179816,8181249,8182399,8183790,8185838,8187886,8189926,8190569,8192395,8194452,8196500,8198556,8200303,8200612,8200712,8202112,8203824,8205859,8207907,8209964,8212012,8213782,8215830,8217878,8219926,8221983,8224031,8225596,8227232,8229072,8230540,8232596,8234644,8236692,8238740,8240768,8242013,8243844,8245895,8247950,8249998,8252054,8254102,8256159,8258190,8260180,8262144,8263956,8265565,8266629,8267523,8269114,8271153,8273181,8274955,8277003,8279051,8281108,8283156,8285204,8287192,8288600,8289522,8291570,8293618,8295674,8297722,8299770,8301818,8303866,8305914,8307962,8310010,8312058,8314106,8316154,8318202,8320250,8322307,8324305,8326111,8327656,8328748,8330740,8332788,8334845,8336893,8338941,8340989,8343037,8345085,8346963,8348170,8348950,8349306,8349809,8351857,8353905,8355953,8358001,8360049,8361952,8363552,8365116,8366777,8368626,8370222,8371238,8371836,8373776,8375827,8377883,8379940,8381997,8384045,8386093,8388141,8390198,8392254,8394280,8396195,8397838,8399241,8400123,8400596,8401029,8401604,8402129,8402641,8404651,8406699,8408709,8410559,8412168,8413618,8414878,8416018,8417696,8419653,8421246,8422615,8424604,8426433,8428040,8429489,8430686,8431521,8432007,8433292,8435243,8436995,8438461,8439593,8441576,8443468,8445020,8447071,8449119,8449972,8452020,8453747,8455795,8457597,8458007,8459756,8461804,8463852,8465900,8467807,8469273,8469556,8470892,8472940,8474290,8474315,8475349,8477406,8479463,8481511,8483559,8485607,8487655,8489703,8491751,8493799,8495853,8497908,8499627,8500803,8502851,8504736,8505638,8507370,8509418,8511466,8513514,8515562,8517610,8519658,8521692,8523175,8523924,8525972,8528020,8530068,8532116,8534172,8536224,8537971,8539296,8541344,8543392,8545440,8547488,8549536,8551584,8553632,8555680,8557728,8559776,8561833,8563350,8563805,8564673,8566721,8568737,8570784,8572837,8574885,8576933,8578981,8581029,8583082,8585130,8587178,8589226,8591242,8592855,8594114,8594960,8595280,8596097,8597998,8599840,8601851,8603907,8605955,8608004,8609790,8610760,8612517,8614245,8615030,8616494,8618542,8620590,8622638,8624688,8626284,8627387,8628080,8628783,8629640,8631688,8633736,8635784,8637832,8639883,8641931,8643979,8646027,8648075,8650132,8652011,8653580,8654743,8655558,8656670,8658718,8660766,8662814,8664862,8666750,8668155,8669368,8670026,8671401,8673456,8675504,8676365,8678413,8680452,8682500,8684548,8686596,8688577,8690612,8692016,8693405,8694363,8694947,8695545,8697331,8699272,8700687,8702206,8704263,8706311,8708365,8710422,8712477,8714534,8716484,8718483,8719874,8721931,8723985,8725900,8727655,8729136,8730514,8731718,8732875,8734923,8736980,8739028,8741076,8743124,8745179,8747227,8748757,8749791,8750925,8752973,8755021,8757069,8759117,8761165,8763213,8765266,8767294,8769177,8770914,8772470,8773804,8775079,8777135,8779192,8781240,8783288,8785336,8787384,8789432,8791480,8793528,8795585,8797633,8799681,8801729,8803777,8805831,8807888,8809945,8812001,8814051,8816099,8818152,8820209,8822265,8824313,8826361,8828409,8830466,8832514,8834571,8836557,8837850,8839426,8841243,8843299,8845356,8847404,8849452,8851500,8853548,8855596,8857644,8859692,8861740,8863788,8865836,8867884,8869932,8871987,8874021,8875930,8877625,8879532,8881562,8882689,8884611,8886659,8888707,8890755,8892803,8894860,8896908,8898951,8900989,8902754,8903838,8904724,8906648,8908696,8910744,8912792,8914829,8916328,8918376,8920424,8922472,8924520,8926568,8928616,8930665,8931937,8933697,8935745,8937801,8939829,8941814,8943841,8945673,8947240,8948743,8950222,8951604,8952764,8953881,8955056,8956373,8957831,8959130,8960304,8961427,8962487,8963537,8964719,8965752,8966822,8968044,8969154,8970828,8972286,8973663,8975126,8976257,8977531,8979106,8980289,8981479,8982881,8984276,8985643,8986963,8988194,8989431,8990502,8991170,8992309,8993565,8994982,8996465,8997860,8999247,9000604,9001719,9002888,9004257,9005665,9006788,9008415,9009761,9011053,9012075,9013181,9014367,9015587,9016675,9017865,9018247,9018998,9019730,9020619,9021598,9022329,9023498,9024161,9025265,9026367,9027508,9028726,9030375,9032032,9033497,9034090,9034824,9035316,9035589,9036960,9037935,9038460,9038822,9039434,9039997,9040827,9041761,9042455,9043156,9043988,9044667,9045340,9046094,9046799,9047513,9048503,9049124,9049472,9050638,9052148,9053129,9054584,9056126,9056647,9058170,9059553,9060140,9060433,9060674,9061158,9062767,9063887,9064469,9065017,9065406,9066197,9066363,9066498,9066567,9066642,9066734,9067247,9067955,9068913,9069509,9069781,9070093,9070920,9071805,9072337,9072929,9073447,9073520,9073591,9073955,9074782,9075530,9076028,9076636,9077148,9077687,9078267,9078496,9078768,9079315,9079924,9080497,9080719,9080993,9081165,9081505,9081811,9082174,9082753,9082871,9083360,9083919,9083993,9084126,9084244,9084404,9084563,9085036,9086321,9087574,9088155,9088377,9088459,9088932,9089374,9090058,9090550,9090892,9091135,9091521,9091939,9092258,9092571,9092881,9093333,9093479,9094170,9094889,9095364,9095838,9096373,9097013,9097422,9097875,9098273,9098607,9098909,9099304,9099493,9100788,9102471,9103625,9104681,9105585,9106501,9107675,9108939,9110183,9111432,9112804,9114123,9115525,9116940,9118239,9119553,9120924,9122329,9123621,9125071,9126490,9127982,9129523,9131007,9132360,9133539,9134734,9135906,9137097,9138196,9139114,9139981,9141186,9142487,9144384,9145978,9147607,9149131,9150592,9152159,9153787,9155375,9157040,9158819,9160634,9162443,9164243,9166088,9167825,9169616,9171353,9173011,9174776,9176373,9178075,9179831,9181579,9183259,9184834,9186516,9188006,9189642,9191192,9192800,9194279,9195791,9197393,9199246,9200546,9201823,9203027,9204296,9205494,9206805,9208055,9209410,9210892,9212355,9213943,9215526,9217044,9218566,9220046,9221503,9223034,9224566,9226001,9227472,9228867,9230381,9231859,9233019,9234194,9235289,9236486,9237715,9238924,9240236,9241455,9242797,9244071,9245280,9246463,9247617,9248798,9249951,9251131,9252631,9254544,9256033,9257567,9259001,9260409,9261983,9263557,9265485,9266901,9268205,9269857,9271325,9272900,9274411,9275985,9277775,9279297,9280866,9282379,9283950,9285732,9286720,9287741,9288779,9290057,9291863,9293434,9295021,9296554,9298215,9299583,9300933,9302240,9303592,9304795,9305683,9307194,9308935,9310479,9310871,9311256,9311643,9312793,9313949,9315143,9316395,9318267,9320110,9322079,9324057,9326015,9327949,9329728,9331492,9333120,9334282,9335686,9337071,9338345,9339568,9341222,9342939,9344730,9346533,9348313,9350076,9351739,9353549,9355162,9357083,9359009,9360359,9361439,9362963,9364641,9365649,9367206,9368922,9370599,9372185,9373901,9374997,9376171,9377379,9378945,9380600,9382286,9383977,9385265,9387031,9388626,9390407,9392220,9393930,9395585,9397308,9398935,9400625,9402392,9404159,9405775,9407560,9409251,9411030,9412827,9414661,9416347,9418128,9419866,9421468,9423211,9424993,9426778,9428573,9430399,9432010,9433824,9435527,9437221,9438881,9440571,9442272,9443866,9445530,9447323,9449072,9450709,9452436,9454152,9455887,9457630,9459323,9460983,9462748,9464401,9466196,9468046,9469644,9471429,9473120,9474863,9476663,9478304,9480090,9481861,9483408,9485145,9486849,9488418,9490133,9491881,9493712,9495415,9497225,9498822,9500622,9502438,9504115,9505787,9507475,9509114,9510813,9512642,9514360,9516138,9517980,9519811,9521658,9523466,9525325,9527181,9529085,9530840,9532686,9534428,9536127,9537848,9539641,9541260,9542975,9544685,9546376,9548062,9549775,9551395,9553007,9554950,9556881,9558762,9560680,9562615,9564537,9566435,9568358,9570270,9572167,9574051,9575056,9576902,9578737,9580470,9582240,9584034,9585833,9587595,9589404,9591216,9593081,9594816,9596539,9598387,9600087,9601878,9603612,9605396,9607174,9608938,9610764,9612453,9614279,9616095,9617903,9619658,9621355,9623092,9624893,9626686,9628520,9630311,9632105,9633857,9635485,9637163,9638923,9640645,9642447,9644143,9646021,9647834,9649481,9651353,9653204,9655029,9656855,9658543,9660263,9662087,9663937,9665701,9667396,9669218,9670979,9672808,9674471,9676168,9677785,9679440,9680962,9682475,9684074,9685725,9686482,9688065,9689533,9691208,9692814,9694510,9696038,9697764,9698841,9700503,9701757,9703256,9704784,9706401,9708047,9709748,9711304,9713043,9713982,9715678,9717225,9718703,9720277,9721097,9722681,9724213,9725772,9727452,9729044,9730744,9732315,9734031,9735677,9737265,9739295,9741276,9743242,9745224,9747240,9749043,9751039,9752919,9754935,9756963,9758759,9760771,9762812,9764668,9766682,9768699,9770686,9772678,9774710,9776699,9778712,9780663,9782599,9784423,9786463,9788498,9790211,9792019,9793943,9795812,9797647,9799419,9801140,9802950,9804805,9806699,9808572,9810420,9812209,9813902,9815624,9817389,9819211,9821058,9822907,9824753,9826525,9828267,9830009,9831894,9833773,9835597,9837458,9839286,9841011,9842650,9844440,9846334,9848156,9849994,9851853,9853684,9855392,9857131,9858915,9860775,9862539,9864403,9866296,9868179,9869942,9871672,9873525,9875403,9877223,9879080,9880830,9882591,9884314,9886135,9888005,9889823,9891658,9893505,9895224,9896972,9898811,9900686,9902535,9904428,9906239,9907959,9909803,9911700,9913569,9915372,9917180,9919047,9920831,9922558,9924382,9926082,9927568,9929116,9930642,9932253,9933735,9935313,9936929,9938413,9940139,9941716,9943237,9944978,9946492,9948181,9950145,9951919,9953654,9955568,9957285,9959088,9960857,9962534,9964057,9965662,9967182,9968792,9970279,9971840,9973430,9974954,9976635,9978301,9979915,9981777,9983376,9985222,9987113,9988905,9990603,9992474,9994208,9995834,9997408,9998981,10000645,10002266,10003768,10005424,10006904,10008514,10010073,10011558,10013267,10014639,10016219,10018136,10019852,10021595,10023427,10025188,10026990,10028856,10030603,10032303,10034082,10035652,10037327,10038853,10040368,10041892,10043349,10044967,10046472,10048102,10049727,10051281,10053190,10054703,10056400,10058269,10060044,10061697,10063485,10065067,10066594,10068289,10069892,10071539,10073036,10074483,10076098,10077562,10079225,10080775,10082225,10084062,10085623,10087221,10089084,10090748,10092437,10094216,10095944,10097698,10099535,10101299,10103012,10104859,10106626,10108341,10109978,10111833,10113592,10115334,10117161,10118863,10120638,10122373,10124112,10125796,10127480,10129218,10130727,10132366,10134116,10135665,10137467,10139116,10140849,10142485,10144201,10145891,10147549,10149329,10150923,10152736,10154410,10156194,10157879,10159621,10161333,10163108,10164604,10166251,10167840,10169643,10171280,10172978,10174537,10176121,10177679,10179198,10180737,10182484,10184084,10185831,10187423,10189159,10190953,10192697,10194367,10196107,10197999,10199754,10201464,10203167,10204768,10206335,10208052,10209822,10211457,10213005,10214667,10216325,10217792,10219389,10221060,10222567,10224092,10225810,10227476,10229222,10231066,10232845,10234576,10236383,10238153,10239896,10241733,10243544,10245202,10246736,10248610,10250192,10251810,10253489,10255060,10256683,10258107,10259825,10261263,10262779,10264527,10266095,10267746,10269515,10271005,10272680,10274541,10276405,10278096,10280010,10281729,10283337,10285214,10286830,10288367,10290106,10291719,10293388,10294832,10296401,10297848,10299379,10301061,10302621,10304226,10305999,10307596,10309383,10311257,10313036,10314779,10316690,10318492,10320180,10321962,10323669,10325249,10326890,10328482,10330143,10331550,10332934,10334631,10336026,10337581,10339365,10340875,10342483,10344173,10345649,10347296,10348914,10350559,10352382,10354115,10355704,10357464,10359245,10360937,10362750,10364403,10365920,10367638,10369021,10370590,10372059,10373556,10375048,10376597,10378228,10379873,10381406,10383202,10384959,10386743,10388483,10390141,10391932,10393682,10395383,10397097,10398870,10400611,10402356,10404049,10405804,10407621,10409299,10411053,10412836,10414516,10416163,10417897,10419719,10421384,10423108,10424886,10426704,10428361,10430051,10431811,10433521,10435144,10436834,10438529,10440367,10442151,10443869,10445521,10447237,10449056,10450845,10452644,10454169,10455615,10457463,10459278,10461114,10462648,10464438,10466226,10468105,10469836,10471516,10473225,10474993,10476796,10478452,10480108,10481890,10483649,10485503,10487180,10488852,10490622,10492407,10494182,10495909,10497550,10499299,10501167,10502855,10504621,10506390,10507924,10509747,10511594,10513412,10515223,10516936,10518728,10520576,10522322,10524124,10525837,10527535,10529236,10530924,10532611,10534300,10536042,10537803,10539708,10541605,10543503,10545438,10547380,10549325,10551266,10553167,10554874,10556652,10558543,10560428,10562204,10564014,10565803,10567609,10569437,10571344,10573278,10575174,10577069,10578921,10580749,10582673,10584511,10586347,10588162,10589956,10591824,10593639,10595564,10597509,10599419,10601238,10603048,10604878,10606737,10608650,10610564,10612467,10614299,10616129,10617925,10619735,10621645,10623501,10625327,10627145,10629038,10630860,10632622,10634416,10636300,10638228,10640170,10641950,10643862,10645764,10647670,10649589,10651531,10653455,10655359,10657145,10659060,10660994,10662927,10664834,10666670,10668522,10670260,10672008,10673774,10675472,10677218,10678933,10680740,10682535,10684327,10686089,10687900,10689645,10691529,10693265,10695102,10696862,10698730,10700469,10702183,10703963,10705669,10707378,10709180,10710865,10712727,10714502,10716376,10718195,10720062,10721916,10723750,10725623,10727466,10729327,10731150,10733011,10734860,10736682,10738534,10740316,10742174,10743973,10745778,10747667,10749430,10751257,10753066,10754908,10756771,10758578,10760370,10762180,10763982,10765778,10767568,10769334,10771128,10772901,10774753,10776516,10778396,10780100,10781913,10783726,10785424,10787261,10789010,10790850,10792654,10794310,10796075,10797789,10799489,10801299,10803126,10804988,10806839,10808784,10810674,10812401,10814293,10815930,10817837,10819605,10821545,10823299,10825035,10826900,10828669,10830410,10832317,10834102,10835830,10837520,10839201,10840870,10842626,10844323,10846049,10847765,10849451,10851155,10852907,10854639,10856396,10858075,10859858,10861630,10863359,10865115,10866877,10868641,10870333,10872066,10873808,10875609,10877355,10879080,10880838,10882641,10884458,10886075,10888018,10889967,10891561,10893417,10895049,10896907,10898717,10900630,10902192,10904079,10905611,10907581,10909435,10911108,10912841,10914566,10916317,10917726,10919659,10921138,10923140,10924655,10926546,10928033,10929721,10931422,10933198,10934862,10936363,10938198,10939698,10941613,10943136,10945051,10946563,10948322,10949978,10951827,10953480,10955080,10956822,10958395,10960263,10962250,10964188,10966190,10968152,10970129,10972140,10974002,10975974,10977974,10979880,10981344,10983202,10985119,10986610,10987944,10989357,10990041,10990894,10991687,10992676,10993993,10995489,10996338,10998350,11000366,11002391,11004409,11006446,11008466,11010496,11012496,11014442,11016369,11018042,11019709,11021435,11023163,11024903,11026566,11028321,11030077,11031751,11033443,11035217,11036802,11038758,11040485,11042127,11043696,11045403,11047103,11048913,11050677,11052435,11054325,11055979,11057754,11059489,11060458,11061302,11062845,11064026,11064660,11065289,11066940,11068606,11070416,11072206,11074004,11075795,11077649,11079339,11080962,11082758,11084743,11086705,11088697,11090680,11092664,11094642,11096618,11098571,11100506,11102324,11104256,11105736,11107320,11108087,11109456,11111200,11112686,11114078,11115589,11117044,11117968,11119393,11120825,11122392,11123984,11125720,11127571,11129425,11131239,11132778,11134311,11135849,11137433,11139008,11140622,11142195,11143761,11145385,11147219,11149092,11150949,11152866,11154864,11156731,11158578,11160453,11162311,11164201,11166073,11167695,11169629,11171571,11173211,11174803,11176320,11177327,11178937,11180421,11181309,11182960,11184493,11186065,11187667,11189447,11191417,11193001,11194988,11196963,11198189,11200154,11202112,11203935,11205907,11207889,11209808,11211073,11213019,11214976,11216731,11218124,11219918,11221762,11223655,11225569,11227236,11229091,11231107,11232922,11234885,11236325,11238304,11240177,11241784,11243784,11245421,11247410,11249389,11250600,11252566,11254526,11256349,11258324,11260309,11262240,11263438,11265400,11267338,11269091,11270461,11272249,11274093,11275973,11277890,11279551,11281398,11283405,11285365,11287370,11289350,11291279,11293257,11295227,11297030,11298754,11300495,11302205,11303810,11305368,11307112,11308540,11310196,11311761,11313381,11315179,11317075,11318934,11320717,11322488,11324120,11325934,11327795,11329553,11330929,11332670,11334291,11336037,11337529,11339241,11341063,11343061,11345048,11347014,11348973,11350938,11352886,11354853,11356822,11358006,11359308,11360950,11362431,11364005,11366007,11367850,11369216,11371022,11373019,11374899,11376033,11377947,11379919,11381757,11383407,11385269,11387200,11389180,11390997,11392622,11394474,11396495,11398436,11400285,11401669,11403528,11405530,11407363,11409137,11410439,11412244,11414147,11415954,11417393,11419166,11420844,11422760,11424130,11426018,11427990,11429825,11431599,11433115,11434385,11436033,11437825,11439769,11441687,11443017,11444937,11446894,11448863,11450768,11452734,11454667,11456605,11458576,11460453,11462399,11464373,11466289,11468246,11470213,11472140,11474099,11476075,11478016,11479997,11481956,11483909,11485901,11487902,11489808,11491306,11492850,11494850,11496880,11498877,11500568,11502481,11504347,11506326,11508181,11509902,11511541,11513086,11514687,11516149,11517644,11518693,11520650,11522637,11524397,11525533,11526998,11528382,11530168,11532123,11533960,11535663,11537652,11539602,11541517,11543400,11545023,11546774,11548582,11550204,11551914,11553695,11555455,11557355,11559268,11561108,11562926,11564649,11566371,11567681,11568674,11570479,11572038,11573754,11575152,11576845,11578248,11579966,11581721,11583547,11585263,11586985,11588588,11590412,11592334,11594171,11595867,11597593,11599111,11600603,11601755,11603593,11605425,11607298,11609169,11610794,11612197,11613580,11615484,11617132,11618923,11620762,11622498,11624354,11626097,11627912,11629658,11631576,11633441,11635300,11637068,11638672,11640217,11641907,11643632,11645524,11647303,11649087,11650807,11652628,11654369,11656022,11657404,11658416,11659244,11660475,11661980,11663794,11665487,11667330,11669037,11670747,11672296,11673892,11675778,11677529,11679270,11680937,11682487,11684206,11685972,11687741,11689611,11691410,11693202,11694996,11696686,11698406,11700203,11702019,11703776,11705189,11706415,11707561,11708725,11709887,11711011,11712078,11713274,11714678,11716314,11717944,11719584,11721175,11722770,11724430,11726059,11727691,11729575,11731339,11733104,11734852,11736565,11738337,11740092,11741810,11743549,11745265,11747062,11749032,11750776,11752546,11754299,11756217,11758160,11760045,11761969,11763884,11765801,11767703,11769609,11771477,11773406,11775295,11777324,11779189,11781064,11782964,11784906,11786618,11788330,11790007,11791718,11793395,11795081,11796789,11798453,11800339,11802035,11803725,11805417,11807119,11808806,11810489,11812170,11813928,11815772,11817533,11819270,11821037,11822780,11824524,11826285,11828029,11829843,11831345,11832888,11834412,11835961,11837501,11839048,11840579,11842135,11843716,11845221,11846742,11848181,11849964,11851673,11853353,11855038,11856744,11858485,11860186,11861911,11863687,11865326,11867056,11868771,11870523,11872217,11873949,11875625,11877359,11879088,11880825,11882546,11884297,11886064,11887735,11889448,11891133,11892963,11894720,11896451,11898204,11899943,11901716,11903450,11905204,11907070,11908811,11910611,11912440,11914310,11916102,11917923,11919716,11921531,11923341,11925181,11926984,11928847,11930766,11932533,11934321,11936121,11937983,11939581,11941207,11942790,11944377,11945970,11947575,11949161,11950848,11952540,11954177,11955801,11957432,11959060,11960668,11962306,11963942,11965809,11967618,11969430,11971227,11973029,11974809,11976581,11978373,11980192,11981975,11983611,11984856,11986486,11988083,11989759,11990755,11992399,11994184,11995967,11997804,11999672,12001550,12003597,12005481,12007412,12009363,12011230,12013161,12015198,12017136,12019038,12020955,12022833,12024765,12026808,12028627,12030217,12031840,12033482,12035005,12036653,12038504,12040174,12041782,12043409,12044980,12046669,12048640,12050431,12052183,12053784,12055516,12057273,12058972,12060567,12062329,12064221,12066010,12067669,12069306,12071090,12072821,12074447,12076085,12077997,12079993,12081995,12083989,12085982,12087986,12090006,12092030,12094051,12096074,12098069,12100082,12102074,12104031,12105788,12107586,12109518,12111459,12113348,12115301,12117272,12119139,12120959,12122756,12124593,12126375,12128290,12130228,12132121,12134045,12135862,12137793,12139698,12141614,12143474,12145377,12147293,12149211,12151087,12152699,12154533,12156217,12157893,12159611,12161264,12162943,12164781,12166543,12168409,12170230,12172062,12173967,12175851,12177678,12179551,12181354,12182941,12184402,12185796,12187215,12188984,12190610,12192281,12193921,12195563,12197198,12198831,12200507,12202120,12203667,12205261,12206853,12208498,12210148,12211821,12213464,12215105,12216929,12218530,12220128,12221760,12223338,12224949,12226537,12228126,12229677,12231471,12233131,12234752,12236400,12237978,12239627,12241262,12242865,12244605,12246207,12247817,12249427,12251002,12252602,12254203,12255803,12257384,12259160,12260839,12262492,12264142,12265755,12267411,12269048,12270673,12272388,12274000,12275557,12277094,12278600,12280110,12281637,12283160,12284649,12286413,12287973,12289540,12291108,12292704,12294262,12295804,12297328,12298930,12300691,12302272,12303859,12305478,12307096,12308683,12310200,12311761,12313514,12315111,12316679,12318239,12319824,12321403,12322921,12324402,12325995,12327747,12329327,12330938,12332537,12334159,12335733,12337267,12338823,12340566,12342218,12343818,12345430,12347066,12348718,12350319,12351901,12353535,12355329,12356893,12358506,12360103,12361746,12363340,12364937,12366487,12368191,12370197,12372199,12374171,12376188,12378139,12380127,12382034,12383987,12385905,12387883,12389792,12391767,12393719,12395710,12397647,12399618,12401597,12402982,12404344,12405682,12406966,12408453,12409878,12411257,12412634,12414102,12415482,12416813,12418192,12419659,12421098,12422484,12423862,12425211,12426580,12427994,12429368,12430731,12432212,12433647,12435033,12436436,12437907,12439321,12440720,12442158,12443571,12444991,12446352,12447724,12449020,12450607,12452024,12453389,12454770,12456136,12457515,12458874,12460251,12461734,12463091,12464467,12465824,12467185,12468780,12470253,12471819,12473190,12474526,12475896,12477272,12478673,12480084,12481506,12482879,12484361,12485778,12487148,12488543,12490033,12491459,12492861,12494265,12495719,12497273,12498804,12500402,12501991,12503447,12504869,12506385,12507820,12509344,12510851,12512396,12513882,12515460,12516792,12517999,12519288,12520686,12521925,12523259,12524561,12525817,12527361,12528808,12530263,12531752,12533263,12534600,12536017,12537397,12538764,12540169,12541646,12543050,12544471,12546266,12547965,12549569,12551281,12552878,12554593,12556191,12557871,12559641,12561314,12562957,12564651,12566348,12567989,12569678,12571320,12573043,12574799,12576632,12578273,12580111,12581769,12583543,12585174,12586956,12588768,12590501,12592197,12593914,12595722,12597358,12599099,12600749,12602527,12604262,12605956,12607552,12609247,12610887,12612556,12614173,12615833,12617552,12619302,12621036,12622679,12624462,12626085,12627814,12629450,12631195,12632921,12634420,12635387,12637251,12639219,12640672,12642243,12643744,12645545,12647155,12648615,12650369,12651983,12653603,12655258,12656771,12658293,12660098,12661735,12663438,12665095,12666713,12668536,12670239,12671698,12673425,12675197,12676893,12678252,12679960,12681797,12683525,12685198,12686996,12688793,12690523,12692324,12694176,12695904,12697602,12699293,12701124,12702855,12704647,12706353,12708006,12709838,12711687,12713489,12715316,12717180,12718941,12720438,12721931,12723336,12725106,12726837,12728580,12730202,12731522,12733285,12735047,12736908,12738633,12740366,12741700,12743287,12744923,12746570,12748276,12749735,12751161,12753016,12754881,12756721,12758402,12759739,12761481,12763351,12765320,12767219,12769055,12770374,12771922,12773731,12775551,12777327,12778800,12780375,12782141,12783932,12785725,12787460,12788789,12790508,12792322,12794256,12796060,12797862,12799267,12800750,12802444,12804147,12805884,12807434,12808996,12810698,12812552,12814363,12816175,12817516,12819138,12820963,12822926,12824757,12826639,12828151,12829567,12831285,12833085,12834876,12836493,12838170,12839614,12840926,12841916,12842875,12844135,12845440,12846796,12847971,12849295,12850667,12851822,12852912,12853892,12854997,12856233,12857370,12858539,12859915,12861150,12862527,12863855,12865230,12866560,12867781,12869009,12870516,12872356,12873952,12875513,12877048,12878567,12880159,12881731,12883318,12884906,12886489,12888056,12889662,12891292,12892933,12894554,12896173,12897686,12899216,12900693,12902195,12903803,12905321,12906785,12908262,12909728,12911260,12913081,12914798,12916518,12918204,12919915,12921609,12923275,12924959,12926706,12928414,12930131,12931851,12933573,12935300,12937007,12938719,12940427,12942134,12943824,12945500,12947083,12948702,12950381,12952097,12953773,12955424,12957147,12958939,12960690,12962405,12964137,12966066,12967999,12969851,12971722,12973642,12975526,12977414,12979156,12980934,12982455,12983918,12985709,12987407,12989117,12990830,12992512,12994186,12995896,12997623,12999379,13001120,13002816,13004466,13006200,13007855,13009515,13011234,13012942,13014781,13016466,13018135,13019815,13021448,13023124,13024815,13026499,13028161,13029870,13031544,13033048,13034733,13036217,13037897,13039381,13041077,13042822,13044438,13046048,13047656,13049281,13050859,13052446,13054053,13055653,13057382,13058999,13060558,13062189,13063818,13065455,13067039,13068678,13070432,13072053,13073656,13075206,13076795,13078356,13079969,13081520,13083131,13084803,13086385,13087806,13089448,13090881,13092478,13093893,13095509,13097107,13099135,13101123,13103088,13105083,13107086,13109081,13111054,13113080,13115134,13117117,13119064,13121017,13123008,13124967,13126927,13128931,13130914,13132817,13134611,13136385,13138174,13139985,13141794,13143577,13145366,13147327,13149165,13151023,13152891,13154752,13156616,13158465,13160306,13162170,13163823,13165388,13167179,13168873,13170382,13172070,13173419,13174992,13176683,13178386,13180081,13181731,13183364,13185059,13186782,13188445,13190285,13192007,13193797,13195538,13197273,13199003,13200791,13202559,13204287,13206118,13207899,13209699,13211404,13213133,13214902,13216724,13218441,13220299,13221941,13223566,13225204,13226862,13228502,13230158,13231783,13233432,13235278,13236991,13238715,13240418,13242140,13243864,13245607,13247306,13249158,13251118,13253132,13255138,13257183,13259170,13261169,13263148,13265150,13267154,13269184,13271193,13273201,13275212,13277239,13279243,13281279,13283304,13285316,13287337,13289337,13291345,13293210,13295085,13296820,13298689,13300251,13301554,13303159,13305019,13306822,13308723,13310600,13312383,13314202,13315937,13317941,13319944,13321998,13324016,13325913,13327447,13329007,13330582,13332193,13333983,13335808,13337575,13339342,13341137,13342927,13344754,13346458,13348192,13349846,13351480,13353255,13355013,13356790,13358522,13360279,13362039,13363768,13365456,13367129,13368945,13370760,13372576,13374381,13376159,13377947,13379710,13381517,13383322,13385225,13387206,13389183,13391171,13393153,13395042,13396848,13398687,13400532,13402362,13404200,13405993,13407798,13409713,13411575,13413443,13415254,13417238,13419187,13421167,13423167,13425134,13427096,13429090,13431068,13433036,13434941,13436939,13438814,13440681,13442503,13444261,13446034,13447937,13449849,13451779,13453753,13455678,13457557,13459304,13461054,13462927,13464811,13466647,13468353,13469949,13471424,13472996,13474845,13476807,13478758,13480731,13482690,13484547,13486344,13488230,13489992,13491832,13493681,13495462,13497381,13499084,13500971,13502784,13504650,13506435,13508149,13509914,13511660,13513407,13515172,13516979,13518470,13520194,13521679,13523303,13524747,13526211,13527679,13529314,13530104,13531164,13532329,13533327,13534071,13534919,13535739,13536719,13537834,13538835,13540024,13540947,13541868,13542880,13543715,13544615,13546356,13548190,13549994,13551839,13553796,13555722,13557470,13559214,13560910,13562674,13564449,13566193,13567877,13569613,13571344,13573071,13574728,13576322,13578190,13580120,13582018,13583990,13585939,13587878,13589898,13591860,13593864,13595700,13597557,13599414,13601254,13603292,13605296,13607275,13609274,13611322,13613363,13615388,13617424,13619463,13621265,13622858,13624406,13625962,13627461,13629070,13630645,13632382,13634410,13636429,13638438,13640479,13642479,13644509,13646540,13648553,13650587,13652493,13654498,13656473,13658069,13659693,13661112,13662458,13663815,13665358,13667002,13668713,13670362,13672021,13674048,13676078,13678074,13680119,13681987,13683635,13685369,13686972,13688542,13690256,13691888,13693773,13695652,13697573,13699494,13701368,13703250,13705175,13707102,13709056,13711036,13712901,13714547,13716346,13718026,13719956,13721899,13723882,13725819,13727780,13729711,13731634,13733562,13735490,13736689,13737781,13738871,13739949,13741619,13743368,13745167,13746951,13748362,13749690,13750913,13752283,13753930,13755758,13757567,13759430,13761352,13763253,13765166,13767098,13768842,13770276,13771816,13773260,13774768,13776282,13777722,13779348,13780971,13782334,13784189,13786077,13787927,13789525,13791134,13792753,13794424,13796266,13797852,13799431,13800771,13802345,13803961,13805787,13807582,13809165,13810706,13812136,13813730,13815372,13817244,13818959,13820658,13822318,13824111,13825830,13827557,13829266,13830960,13832695,13834436,13836182,13837875,13839800,13841727,13843645,13845574,13847517,13849438,13851349,13853293,13855226,13857274,13859277,13861274,13863292,13865281,13867312,13869281,13871317,13873352,13875386,13877424,13879446,13881492,13883519,13885550,13887570,13889596,13891649,13893697,13895733,13897774,13899805,13901856,13903879,13905926,13907974,13909991,13912011,13914033,13916067,13918067,13920084,13922090,13924125,13925523,13926584,13927688,13928748,13929802,13930563,13931288,13932056,13933030,13934944,13936702,13938619,13940381,13941889,13943377,13944879,13946467,13947969,13949488,13950977,13952539,13954039,13955537,13957064,13958573,13960059,13961450,13962816,13964202,13965610,13966989,13968322,13969692,13971151,13972542,13973884,13975209,13976590,13978266,13979784,13981426,13983105,13984704,13986407,13988254,13990075,13991957,13993688,13995529,13997193,13998892,14000551,14002240,14003919,14005587,14007271,14008945,14010686,14012244,14013773,14015309,14016900,14018469,14020015,14021574,14023264,14024814,14026382,14027930,14029505,14031028,14032529,14034051,14035595,14037490,14039392,14041345,14043273,14045242,14047218,14049201,14051198,14053230,14055109,14057038,14058928,14060833,14062772,14064667,14066580,14068462,14070475,14072488,14074540,14076564,14078616,14080567,14082559,14084524,14086516,14088561,14090574,14092620,14094669,14096691,14098466,14100139,14101960,14103835,14105729,14107582,14109412,14111313,14113097,14114812,14116436,14117900,14119404,14120920,14122308,14123890,14125671,14127576,14129513,14131307,14133015,14134861,14136547,14138307,14140106,14141868,14143802,14145679,14147647,14149554,14151154,14152638,14154321,14156065,14157896,14159733,14161524,14163408,14165254,14167081,14168903,14170719,14172549,14174433,14176124,14177814,14179501,14181189,14182904,14184593,14186251,14187995,14189929,14191785,14193703,14195627,14197524,14199420,14201280,14203105,14205104,14207047,14208915,14210834,14212765,14214694,14216612,14218471,14220388,14222174,14223999,14225778,14227556,14229388,14231251,14233221,14235080,14236921,14238770,14240524,14242414,14244217,14246052,14247943,14249795,14251634,14253573,14255452,14257315,14259141,14260693,14261763,14263158,14264720,14266289,14267869,14269460,14271041,14272669,14274293,14275887,14277593,14279408,14281208,14282893,14284740,14286560,14288235,14290056,14291825,14293539,14295343,14297055,14298870,14300611,14302546,14304427,14306346,14308277,14310236,14312131,14313710,14315591,14317391,14318879,14320375,14321880,14323641,14325288,14326984,14328751,14330420,14332020,14333594,14335245,14336868,14338512,14340127,14341800,14343713,14345667,14347636,14349625,14351624,14353612,14355609,14357612,14359608,14361638,14363636,14365621,14367617,14369427,14371273,14373020,14374840,14376613,14378481,14380235,14382146,14383886,14385478,14387067,14388615,14390271,14391937,14393397,14394850,14396430,14398199,14399810,14401274,14402873,14404278,14405868,14407280,14408847,14410434,14412004,14413565,14415031,14416541,14417956,14419453,14420858,14422332,14423955,14425621,14427179,14428831,14430425,14432081,14433620,14435227,14436868,14438596,14440225,14441782,14443406,14444969,14446594,14448127,14449702,14451382,14453007,14454637,14456264,14457920,14459574,14461197,14462793,14464380,14466144,14467806,14469423,14471093,14472734,14474395,14476015,14477640,14479413,14481032,14482644,14484252,14485860,14487504,14489102,14490707,14492294,14494180,14495970,14497757,14499525,14501326,14503095,14504895,14506662,14508546,14510196,14511848,14513486,14515111,14516757,14518381,14519997,14521615,14523501,14525313,14527144,14528964,14530784,14532603,14534415,14536199,14538091,14539888,14541650,14543406,14545159,14546927,14548654,14550403,14552149,14553980,14555807,14557564,14559331,14561006,14562549,14564130,14565762,14567419,14569236,14571002,14573050,14575098,14576906,14578735,14580479,14582326,14584330,14586283,14588077,14589919,14591787,14593713,14595664,14597660,14599630,14601455,14603122,14604903,14606621,14608454,14610307,14612233,14614281,14616328,14618376,14620433,14622353,14624245,14626002,14627771,14629497,14631327,14632974,14634764,14636820,14638857,14640797,14642781,14644680,14646602,14648533,14650425,14652263,14654030,14655630,14657425,14659360,14661298,14663076,14664964,14666907,14668845,14670647,14672517,14674474,14676264,14677708,14679282,14680980,14682757,14684545,14686437,14688310,14690119,14691578,14693162,14694947,14696804,14698639,14700517,14702263,14703975,14705569,14707270,14709071,14710935,14712810,14714750,14716727,14718670,14720532,14722404,14724047,14725710,14727285,14728868,14730665,14732383,14734099,14735806,14737439,14739088,14740729,14742408,14743980,14745670,14747574,14749505,14751359,14753263,14754956,14756792,14758443,14760277,14761969,14763783,14765462,14767360,14769279,14771177,14772886,14774684,14776323,14778108,14780070,14781933,14783596,14785203,14786907,14788687,14790376,14792010,14793456,14794909,14796389,14797877,14799326,14800801,14802253,14803860,14805885,14807904,14809927,14811933,14813957,14815985,14818009,14820011,14821843,14823700,14825559,14827415,14829278,14831073,14832602,14834103,14835659,14837203,14838744,14840265,14841577,14843189,14844923,14846764,14848554,14850389,14852219,14854158,14855994,14857884,14859508,14861301,14863218,14865142,14867085,14869041,14870942,14872883,14874887,14876736,14878279,14879860,14881492,14883183,14884992,14886875,14888670,14890549,14892357,14894260,14896297,14898317,14900339,14902327,14904139,14905975,14907785,14909611,14911464,14913181,14914771,14916383,14918003,14919747,14921609,14923436,14925097,14926895,14928929,14930966,14932990,14934973,14936779,14938641,14940644,14942553,14944287,14946091,14947834,14949707,14951590,14953441,14955133,14956922,14958564,14960251,14961870,14963671,14965722,14967757,14969800,14971699,14973285,14974901,14976578,14978286,14979949,14981606,14982904,14984369,14985923,14987608,14989403,14990957,14992079,14993518,14995487,14997481,14999323,15001265,15003301,15005349,15007333,15009345,15011214,15013080,15014888,15016606,15018403,15020120,15021916,15023616,15025355,15027029,15028723,15030349,15031932,15033617,15035310,15037025,15038590,15040135,15041574,15043182,15044989,15046866,15048672,15050484,15052034,15053623,15055019,15056558,15058132,15059764,15061393,15063063,15064770,15066515,15068213,15069942,15071722,15073547,15075219,15076930,15078503,15080229,15082007,15083649,15084930,15086274,15087693,15089273,15091126,15092898,15094355,15095815,15097199,15098580,15099926,15101367,15102864,15104444,15106047,15107656,15109240,15110857,15112429,15113989,15115354,15116789,15118252,15119758,15121162,15122681,15124199,15125786,15127401,15128957,15130602,15132182,15133780,15135403,15136993,15138603,15140003,15141680,15143343,15145031,15146690,15148322,15149886,15151474,15153099,15154706,15156248,15157797,15159347,15160992,15162628,15164275,15165805,15167348,15168934,15170517,15172157,15173851,15175499,15177192,15178710,15180271,15181768,15183314,15184962,15186694,15188522,15190316,15191963,15193716,15195552,15197395,15199200,15200949,15202393,15203828,15205240,15206683,15208126,15209700,15211389,15213099,15214770,15216497,15218284,15220043,15221714,15223513,15225045,15226737,15227941,15229435,15230983,15232822,15234490,15236455,15238154,15240060,15241681,15243515,15244974,15246768,15248401,15250177,15251469,15252781,15253672,15254804,15256498,15257976,15259199,15260581,15262065,15263535,15265024,15266489,15267959,15269417,15270812,15272176,15273558,15274977,15276394,15277655,15278890,15279912,15280933,15282722,15284186,15285743,15287060,15288519,15289955,15291601,15293425,15295387,15297415,15299207,15301173,15303102,15304805,15306588,15307580,15308328,15309126,15310035,15311036,15312036,15313190,15314187,15315246,15316113,15316896,15317845,15318872,15319734,15320651,15321526,15322457,15323396,15324130,15325023,15325852,15326794,15327764,15328868,15329741,15330657,15331951,15333202,15333764,15334306,15334848,15335363,15335883,15336931,15337938,15339018,15339996,15340742,15341513,15342499,15343363,15344407,15345460,15346313,15347320,15348246,15349022,15349565,15350085,15350688,15351432,15352300,15353370,15353809,15354691,15355293,15356031,15356725,15357454,15358557,15359519,15360555,15361623,15362196,15362880,15363372,15363937,15364531,15365269,15365957,15366872,15367603,15368390,15369061,15369979,15371250,15372014,15372841,15373846,15374804,15375824,15376662,15377707,15378452,15379345,15380427,15381394,15382287,15382972,15383947,15384223,15384842,15385721,15386779,15387169,15387737,15388710,15389388,15390105,15390678,15391290,15391982,15392891,15393814,15394674,15395291,15395986,15396706,15397481,15399538,15401339,15402114,15403102,15404369,15405634,15406416,15407727,15408801,15409979,15410760,15411722,15413041,15414208,15415807,15417379,15418862,15420422,15422074,15422119,15422163,15422245,15422293,15422385,15422430,15422536,15422758,15423123,15423583,15424154,15424775,15425356,15426028,15426842,15427527,15428602,15430024,15431502,15432970,15434344,15436023,15437631,15439178,15440821,15442449,15444127,15445796,15447506,15449282,15450985,15452614,15454189,15455891,15457564,15459095,15460648,15462132,15463497,15464462,15465366,15466092,15466751,15467338,15467987,15468572,15469130,15469672,15470094,15470470,15470699,15470857,15470930,15470980,15471027,15471072,15471252,15473300,15473388,15473436,15473483,15473528,15473572,15473617,15473665,15473712,15473757,15473801,15473867,15474110,15474929,15476405,15477683,15479153,15480602,15482017,15483308,15484338,15485442,15486305,15486963,15487674,15488577,15489341,15490180,15491032,15491958,15492946,15493850,15494695,15495451,15496203,15497078,15498051,15498875,15499673,15500480,15501323,15502080,15502745,15503287,15503810,15504011,15504057,15504106,15504153,15504198,15504242,15504289,15504338,15504385,15504430,15504474,15504522,15504571,15506299,15507932,15509378,15510759,15512076,15513391,15514718,15516058,15517337,15518647,15519927,15521283,15522534,15523745,15525074,15526224,15527269,15528315,15529248,15530144,15531118,15531936,15532719,15533722,15534842,15535936,15537286,15538708,15540322,15541971,15543537,15545153,15546832,15548220,15549611,15550801,15551996,15553237,15554566,15556061,15557478,15558875,15559913,15560881,15561963,15563125,15564313,15565587,15566776,15568030,15569270,15570554,15571866,15573208,15574530,15575886,15577214,15578544,15580344,15581451,15581496,15581546,15581593,15581638,15581682,15581890,15582453,15583349,15584305,15585478,15586960,15588651,15590373,15592167,15593897,15595615,15597338,15599093,15600866,15602682,15604539,15606317,15608054,15609502,15610856,15612225,15613600,15615348,15617190,15618999,15620897,15622803,15624725,15626662,15628556,15630387,15632289,15634149,15635949,15637734,15639487,15641152,15642959,15644854,15646565,15647907,15649310,15650537,15651223,15651404,15651452,15651501,15651549,15651594,15651640,15651688,15652293,15653135,15654146,15655350,15656586,15657994,15658528,15659462,15660532,15661434,15662334,15663386,15664258,15665900,15667543,15669076,15670717,15672461,15674059,15675649,15677304,15679040,15680724,15682209,15684018,15685665,15687186,15688801,15690494,15692125,15693695,15695363,15697115,15698773,15700343,15701938,15703757,15705445,15707106,15708618,15710468,15712322,15714149,15715932,15717749,15719687,15721712,15723726,15724890,15724939,15724990,15725137,15725355,15725644,15726055,15726502,15727080,15727735,15728679,15729728,15730814,15732197,15733582,15734961,15736443,15737898,15739246,15740605,15742037,15743522,15745163,15746810,15748437,15750017,15751614,15753120,15754717,15756201,15757643,15759132,15760599,15762028,15763515,15765124,15766874,15768560,15770238,15771872,15773508,15775154,15776823,15778379,15779760,15781210,15782662,15784063,15785240,15786278,15787459,15788537,15789583,15790653,15791683,15792705,15793734,15795014,15797020,15798444,15799861,15801248,15802574,15803876,15805219,15806531,15807777,15809090,15810397,15811726,15812902,15814142,15815443,15816582,15817603,15818533,15819504,15820479,15821360,15822119,15823021,15824112,15825218,15826436,15827797,15829334,15831006,15832585,15834171,15835826,15837320,15838766,15840113,15841230,15842398,15843726,15845108,15846590,15848030,15849255,15850229,15851234,15852365,15853572,15854857,15856075,15857355,15858572,15859805,15861083,15862360,15863753,15865039,15866373,15867687,15869077,15871125,15872534,15873873,15874915,15875778,15877182,15878377,15879473,15880334,15881287,15882241,15883108,15883899,15885181,15886682,15888218,15889570,15891024,15892541,15893817,15895205,15896633,15898156,15899548,15900953,15902401,15903814,15905231,15906422,15907668,15908782,15910116,15911678,15913332,15915053,15916701,15918107,15919544,15921035,15922569,15924057,15925471,15926947,15928377,15929628,15930911,15931986,15933077,15933939,15934900,15936110,15937401,15938753,15940168,15941533,15942912,15944293,15945636,15947575,15948191,15948236,15948281,15948372,15948441,15948504,15948567,15948742,15949021,15949418,15949941,15950568,15951176,15951783,15952510,15953234,15954051,15955400,15956836,15958289,15959709,15961242,15962938,15964444,15966029,15967695,15969325,15971023,15972689,15974399,15976182,15977873,15979473,15981135,15982800,15984448,15985921,15987438,15988842,15990058,15990970,15991754,15992437,15993070,15993701,15994262,15994841,15995376,15995869,15996234,15996549,15996765,15996855,15996939,15996988,15997033,15997071,15998274,15999398,15999446,15999495,15999540,15999585,15999630,15999678,15999727,15999772,15999817,15999862,16000005,16000391,16001709,16003053,16004465,16005881,16007305,16008670,16009781,16010881,16011881,16012635,16013260,16014159,16015008,16015798,16016637,16017525,16018485,16019453,16020293,16021084,16021842,16022600,16023573,16024396,16025189,16025968,16026806,16027549,16028249,16028909,16029507,16029829,16029915,16029963,16030012,16030057,16030095,16030140,16030188,16030237,16030282,16030320,16030365,16030413,16031116,16032754,16032799,16032844,16032889,16032931,16032980,16033048,16033914,16035008,16036095,16037167,16038212,16039256,16040384,16041465,16042428,16043551,16044682,16045918,16047396,16049065,16050736,16052519,16054109,16055555,16057022,16058393,16059692,16060763,16062005,16063367,16064611,16065872,16067159,16068570,16070116,16071704,16073155,16074765,16076465,16077946,16079421,16080993,16082596,16084057,16085116,16086085,16087040,16088187,16089409,16090417,16090977,16091017,16091062,16091110,16091159,16091204,16091394,16093442,16093517,16093561,16093670,16093867,16094115,16094481,16094940,16095479,16096101,16096896,16098002,16099161,16100432,16101916,16103311,16104794,16106407,16107960,16109581,16111121,16112770,16114480,16116268,16118033,16119812,16121566,16123241,16124899,16126533,16128115,16129618,16131170,16132708,16134266,16135796,16137575,16139344,16141085,16142760,16144445,16146092,16147754,16149341,16150831,16152227,16153759,16155266,16156526,16157625,16158771,16159860,16160942,16161978,16163042,16164057,16165047,16165994,16167803,16169851,16171357,16172310,16173321,16174177,16175070,16176083,16177034,16177943,16178927,16179812,16180689,16181442,16182326,16183453,16184729,16186101,16187320,16188652,16190014,16191417,16192845,16194257,16195702,16197142,16198455,16199546,16200547,16201579,16202504,16203667,16204794,16205913,16207067,16208223,16209198,16210262,16211523,16212784,16214064,16215371,16216523,16217606,16218870,16220059,16221220,16222468,16223717,16225086,16226415,16227680,16228963,16230226,16231477,16232812,16234105,16235450,16236807,16238341,16239671,16240906,16242158,16243546,16244920,16246320,16247732,16249135,16250551,16252000,16253411,16254740,16256050,16257365,16258798,16260185,16261569,16262957,16264295,16265609,16266878,16268045,16269215,16270360,16271678,16272975,16274127,16275204,16276404,16277531,16278605,16279471,16281077,16282457,16283723,16284958,16286289,16287633,16289032,16290476,16291891,16293319,16294726,16296150,16297525,16298797,16300129,16301495,16302882,16304293,16305689,16307009,16308316,16309579,16310768,16311976,16313149,16314391,16315666,16316848,16317963,16319170,16320257,16321349,16322331,16323615,16325347,16326255,16327239,16328122,16329024,16330024,16331006,16331892,16332857,16333783,16334701,16335513,16336359,16337389,16338715,16340072,16341329,16342626,16343999,16345369,16346815,16348207,16349644,16351100,16352483,16353627,16354627,16355661,16356617,16357768,16358869,16360012,16361069,16362265,16363269,16364297,16365536,16366796,16368044,16369355,16370564,16371633,16372832,16374038,16375215,16376461,16377709,16379022,16380366,16381653,16382937,16384215,16385472,16386766,16388093,16389376,16390774,16392350,16394398,16394553,16394650,16395942,16397227,16398164,16399246,16400419,16401623,16401754,16401892,16403874,16405179,16406291,16407285,16408278,16409304,16410594,16411851,16413206,16414355,16415597,16416970,16418261,16419712,16421095,16422463,16423726,16425052,16426575,16428243,16429755,16431236,16432627,16434050,16435529,16437005,16438425,16439942,16441459,16442953,16444349,16445813,16447327,16448845,16450414,16452066,16453758,16455363,16456860,16458413,16459957,16461548,16463102,16464571,16466057,16467519,16468996,16470385,16471682,16472888,16474096,16475318,16476549,16477845,16479142,16480302,16481459,16482663,16484456,16486078,16487197,16488273,16489179,16490228,16491396,16492653,16493769,16494830,16495785,16496812,16497765,16498767,16499941,16501148,16502418,16503624,16504676,16505862,16507126,16508558,16509841,16511191,16512394,16513617,16515173,16516707,16518329,16520011,16521650,16523321,16524885,16526422,16528000,16529658,16531342,16533095,16534748,16536391,16537847,16539271,16540611,16542000,16543380,16544732,16546287,16547902,16549461,16550984,16552476,16553930,16555351,16556779,16558198,16559594,16560957,16562308,16563990,16565633,16566330,16567052,16567892,16568834,16569859,16570902,16571986,16573156,16574343,16575520,16576726,16577973,16579205,16580598,16581993,16583339,16584831,16586266,16587767,16589259,16590732,16592238,16593815,16595511,16597151,16598723,16600375,16602040,16603771,16605535,16607313,16609171,16610918,16612500,16614109,16615745,16617390,16619112,16620845,16622571,16624332,16626047,16627753,16629398,16630962,16632740,16634538,16636293,16638009,16639696,16641450,16643164,16644692,16645925,16647067,16647927,16648760,16649990,16651131,16652780,16654316,16655888,16657580,16658752,16658801,16658846,16658891,16658936,16658984,16659195,16660162,16661255,16662372,16663430,16664464,16665490,16666692,16667750,16668753,16669878,16671012,16672304,16673791,16675513,16677203,16678962,16680496,16681894,16683442,16684790,16686013,16687033,16688383,16689701,16690942,16692125,16693428,16694882,16696471,16698006,16699492,16701151,16702822,16704279,16705803,16707340,16708957,16710329,16711290,16712330,16713386,16714543,16715704,16716635,16717032,16717077,16717121,16717166,16717214,16717263,16717914,16719601,16719639,16719684,16719732,16719781,16719826,16719864,16719909,16719957,16720006,16720051,16720119,16720432,16721478,16722900,16724223,16725670,16727065,16728447,16729640,16730679,16731795,16732619,16733246,16734085,16734932,16735703,16736574,16737406,16738367,16739361,16740204,16741014,16741733,16742473,16743432,16744310,16745123,16745903,16746671,16747496,16748250,16748953,16749509,16749931,16750100,16750144,16750189,16750237,16750284,16750329,16750373,16750418,16750466,16750513,16750558,16750602,16750749,16752797,16753732,16754643,16755510,16756667,16757772,16758728,16759673,16760706,16761721,16762693,16763553,16764594,16765629,16766719,16767670,16768870,16770254,16771650,16773110,16774632,16776100,16777703,16779173,16780532,16781826,16783084,16784524,16785875,16787156,16788477,16789609,16790790,16791807,16792902,16794158,16795610,16797055,16798512,16799866,16801069,16802218,16803374,16804533,16805920,16807020,16808014,16809140,16810351,16811421,16812333,16813162,16814160,16815166,16816243,16817306,16818295,16819240,16821067,16821699,16821740,16821785,16821833,16821882,16821932,16822219,16822843,16823704,16824731,16825914,16827477,16829176,16830921,16832711,16834418,16836128,16837849,16839603,16841367,16843194,16845036,16846829,16848505,16849919,16851306,16852597,16854056,16855840,16857692,16859536,16861452,16863341,16865278,16867211,16869066,16870914,16872795,16874664,16876501,16878341,16880113,16881854,16883660,16885553,16887075,16888511,16889868,16891045,16891582,16891704,16891748,16891793,16891843,16891890,16891935,16891979,16892645,16893933,16895282,16896271,16897158,16897865,16898802,16899883,16900905,16902550,16903452,16903497,16903562,16903723,16903945,16904247,16904669,16905158,16905730,16906387,16907392,16908443,16909506,16910888,16912284,16913665,16915138,16916570,16917946,16919322,16920777,16922233,16923861,16925522,16927145,16928735,16930306,16931808,16933389,16934884,16936351,16937855,16939332,16940754,16942221,16943849,16945565,16947246,16948906,16950561,16952212,16953859,16955526,16957037,16958425,16959886,16961351,16962727,16963862,16964919,16966032,16967115,16968177,16969258,16970261,16971307,16972280,16973709,16975615,16977048,16978448,16979805,16981095,16982386,16983727,16985044,16986301,16987639,16988985,16990278,16991470,16992764,16994003,16995088,16996141,16997114,16998027,16999004,16999875,17000644,17001588,17002682,17003807,17005046,17006433,17007996,17009646,17011236,17012814,17014506,17015990,17017433,17018697,17019835,17021024,17022354,17023772,17025228,17026658,17027849,17028824,17029850,17030963,17032137,17033425,17034618,17035913,17037113,17038369,17039652,17040962,17042304,17043607,17044976,17046321,17047829,17049852,17051271,17052574,17053557,17054472,17055857,17056996,17058061,17058949,17059884,17060840,17061817,17062451,17063844,17065341,17066871,17068231,17069667,17071165,17072435,17073802,17075284,17076772,17078204,17079622,17081098,17082509,17083914,17085083,17086337,17087435,17088805,17090396,17092016,17093738,17095379,17096788,17098233,17099718,17101277,17102760,17104193,17105672,17107037,17108303,17109571,17110621,17111724,17112575,17113581,17114789,17116067,17117414,17118847,17120218,17121622,17122976,17124311,17126335,17126688,17126735,17126780,17126824,17126872,17126921,17127477,17128495,17129614,17130717,17131780,17132770,17133795,17134953,17135917,17136968,17138124,17139279,17140650,17142240,17143948,17145723,17147390,17148864,17150290,17151719,17153077,17154209,17155317,17156718,17157953,17159215,17160403,17161774,17163267,17164846,17166306,17167837,17169534,17171126,17172523,17174117,17175669,17177257,17178459,17179446,17180388,17181522,17182738,17183789,17184640,17184713,17184758,17184803,17184851,17184900,17184945,17186409,17187272,17187318,17187366,17187455,17187512,17187608,17187660,17187834,17188120,17188510,17188981,17189558,17190161,17190775,17191472,17192213,17193014,17194314,17195756,17197277,17198720,17200219,17201921,17203473,17205055,17206715,17208321,17210028,17211678,17213392,17215191,17216864,17218467,17220086,17221771,17223431,17224901,17226410,17227818,17229112,17230013,17230850,17231574,17232202,17232802,17233366,17233932,17234515,17235037,17235402,17235707,17235931,17236040,17236126,17236171,17236216,17236261,17237224,17238598,17238647,17238694,17238739,17238784,17238832,17238881,17238927,17238972,17239017,17239065,17239179,17239540,17240738,17242100,17243492,17244918,17246335,17247716,17248874,17249960,17251009,17251817,17252404,17253325,17254158,17254928,17255751,17256610,17257571,17258541,17259392,17260199,17260922,17261666,17262624,17263483,17264277,17265071,17265874,17266615,17267319,17267997,17268591,17268974,17269081,17269130,17269175,17269220,17269265,17269307,17269356,17269401,17269446,17269491,17269533,17269582,17270038,17271911,17271956,17272001,17272049,17272098,17272143,17272188,17272233,17272281,17272330,17272375,17272450,17272748,17273676,17275123,17276427,17277892,17279293,17280694,17281950,17282973,17284097,17284936,17285570,17286363,17287198,17287959,17288823,17289658,17290612,17291610,17292506,17293337,17294080,17294827,17295784,17296663,17297481,17298272,17299072,17299884,17300662,17301364,17301910,17302355,17302529,17302574,17302619,17302662,17302711,17302756,17302801,17302846,17302890,17302939,17302984,17303029,17303074,17305060,17305390,17305439,17305484,17305529,17305574,17305622,17306201,17307231,17308338,17309462,17310527,17311520,17312557,17313709,17314678,17315731,17316865,17318046,17319431,17321023,17322741,17324509,17326191,17327652,17329076,17330520,17331860,17333008,17334103,17335511,17336757,17338009,17339188,17340554,17342051,17343641,17345097,17346635,17348332,17349927,17351337,17352910,17354457,17356060,17357261,17358235,17359168,17360322,17361522,17362573,17363426,17363475,17363520,17363565,17363610,17363658,17363707,17365203,17366040,17366085,17366147,17366310,17366560,17366842,17367286,17367800,17368405,17369123,17370120,17371238,17372424,17373919,17375333,17376784,17378331,17379928,17381522,17383090,17384717,17386403,17388145,17389947,17391707,17393450,17395191,17396837,17398523,17400115,17401641,17403229,17404763,17406269,17407786,17409499,17411300,17413011,17414717,17416377,17418031,17419668,17421313,17422838,17424204,17425742,17427215,17428598,17429743,17430820,17431940,17433036,17434092,17435195,17436197,17437213,17438200,17439594,17441642,17443594,17444512,17445510,17446382,17447281,17448273,17449237,17450151,17451042,17451977,17452904,17453705,17454575,17455562,17456865,17458224,17459488,17460727,17462133,17463502,17464964,17466382,17467848,17469275,17470698,17471907,17472898,17473938,17474870,17475979,17477089,17478260,17479290,17480474,17481525,17482529,17483788,17484998,17486196,17487518,17488785,17489864,17491034,17492220,17493400,17494668,17495911,17497191,17498496,17499776,17501076,17502365,17503655,17504937,17506277,17507574,17508990,17510417,17511770,17513060,17514336,17515605,17516936,17518278,17519684,17521147,17522575,17523973,17525398,17526773,17528072,17529407,17530764,17532123,17533512,17534925,17536261,17537584,17538825,17540061,17541266,17542420,17543637,17544903,17546098,17547244,17548452,17549538,17550591,17551611,17552810,17554432,17555704,17556971,17558258,17559593,17560930,17562284,17563775,17565231,17566606,17568039,17569412,17570719,17572108,17573425,17574812,17576186,17577603,17578984,17580339,17581599,17582812,17584055,17585281,17586471,17587721,17588948,17590099,17591299,17592445,17593499,17594547,17595392,17597440,17598446,17599424,17600334,17601196,17602141,17603148,17604071,17604947,17605906,17606830,17607624,17608459,17609400,17610653,17611962,17613282,17614519,17615861,17617269,17618665,17620068,17621537,17622960,17624327,17625614,17626653,17627659,17628589,17629620,17630730,17631929,17632991,17634161,17635241,17636247,17637458,17638686,17639925,17641202,17642487,17643609,17644729,17645917,17647086,17648342,17649615,17650904,17652199,17653495,17654813,17656150,17657445,17658719,17660030,17661326,17662748,17664139,17666106,17667003,17667095,17668019,17669285,17670449,17671212,17672578,17673770,17674363,17674455,17675784,17677364,17678252,17679090,17680131,17681304,17682327,17683287,17684288,17685379,17686306,17687256,17688194,17689236,17690330,17691351,17692429,17693726,17695119,17696486,17697935,17699433,17700937,17702568,17703929,17705185,17706541,17707909,17709320,17710563,17711965,17713124,17714307,17715427,17716435,17717594,17718952,17720440,17721870,17723264,17724590,17725748,17726944,17728026,17729342,17730627,17731595,17732699,17733863,17735000,17735947,17736800,17737722,17738751,17739766,17740863,17741855,17742858,17744096,17746000,17747131,17748156,17749164,17750185,17751290,17752578,17753899,17755086,17756315,17757603,17758952,17760279,17761704,17763113,17764439,17765666,17767044,17768624,17770316,17771749,17773256,17774667,17776083,17777564,17778988,17780408,17781943,17783489,17784909,17786312,17787819,17789347,17790861,17792495,17794161,17795850,17797401,17798898,17800499,17802028,17803607,17805128,17806592,17808083,17809536,17810979,17812366,17813641,17814883,17816080,17817289,17818530,17819866,17821111,17822271,17823376,17824606,17826654,17826768,17826817,17826862,17826907,17826952,17827031,17827399,17828163,17829083,17830130,17831397,17833025,17834729,17836493,17838271,17839996,17841727,17843453,17845234,17847024,17848887,17850698,17852479,17854171,17855512,17856941,17858188,17859775,17861572,17863412,17865262,17867171,17869065,17870999,17872937,17874745,17876619,17878471,17880338,17882169,17884010,17885778,17887535,17889354,17891196,17892631,17894088,17895394,17896458,17896917,17896965,17897014,17897059,17897098,17897143,17897191,17897240,17898941,17900411,17901494,17902551,17903478,17904527,17905681,17906914,17908089,17909140,17910130,17911140,17912071,17913079,17914284,17915528,17916799,17917958,17918994,17920204,17921531,17922927,17924277,17925565,17926702,17928010,17929570,17931101,17932721,17934394,17936023,17937701,17939249,17940776,17942353,17944022,17945705,17947421,17949065,17950680,17952159,17953570,17954920,17956340,17957716,17959060,17960646,17962262,17963817,17965315,17966793,17968218,17969644,17971058,17972483,17973866,17975212,17976538,17978323,17979729,17980442,17981223,17982081,17983012,17984046,17985074,17986150,17987338,17988569,17989745,17990937,17992187,17993419,17994799,17996171,17997524,17999015,18000462,18001959,18003444,18004874,18006330,18007889,18009543,18011153,18012786,18014401,18016072,18017851,18019595,18021363,18023222,18024926,18026511,18028124,18029746,18031408,18033140,18034849,18036567,18038305,18040009,18041719,18043371,18044976,18046746,18048549,18050299,18052001,18053691,18055443,18057156,18058638,18059834,18060955,18061779,18062659,18063909,18065139,18066818,18068338,18069835,18071010,18072068,18072668,18073218,18074114,18075192,18076428,18077506,18079521,18080962,18082430,18083894,18085412,18086932,18088454,18089987,18091485,18092978,18094535,18096200,18098024,18099908,18101881,18103885,18105884,18107894,18109878,18111890,18113894,18115841,18117694,18119465,18121302,18123184,18125089,18127004,18129010,18131020,18132887,18134739,18136584,18138368,18140063,18141812,18143569,18145400,18147274,18149217,18151174,18153193,18155214,18157208,18159187,18160972,18162559,18164047,18165559,18167064,18168582,18170092,18171599,18173083,18174536,18175997,18177438,18178899,18180947,18182322,18183645,18184941,18186210,18187494,18188753,18190130,18191431,18192690,18193960,18195286,18196442,18197800,18199171,18200618,18202026,18203473,18204921,18206313,18207765,18209303,18210834,18212291,18213858,18215409,18216960,18218624,18220225,18221842,18223426,18225032,18226578,18228112,18229604,18231211,18232902,18234556,18236227,18237916,18239389,18240740,18242153,18243517,18244767,18246010,18247247,18248484,18249703,18250899,18252079,18253279,18254405,18255631,18256835,18258117,18259388,18260623,18262560,18263951,18264992,18266163,18267299,18268364,18269324,18270386,18271502,18272586,18273727,18274834,18276003,18277210,18278559,18279909,18281384,18282893,18284484,18286040,18287554,18289199,18290749,18292175,18293625,18295221,18296780,18298287,18299816,18301222,18302669,18304010,18305345,18306662,18308014,18309282,18310699,18312128,18313674,18315201,18316670,18318150,18319482,18320698,18321860,18322870,18323903,18324927,18326078,18327256,18328424,18329377,18330294,18331341,18332285,18333191,18334121,18335145,18336771,18338582,18340128,18341742,18343259,18344893,18346509,18348161,18349810,18351334,18352923,18354569,18356268,18357768,18359234,18360797,18362392,18363950,18365676,18367365,18368908,18370550,18372134,18373586,18375057,18376507,18378123,18379677,18381110,18382637,18384208,18385755,18387298,18388806,18390375,18391947,18393554,18395224,18396902,18398580,18400116,18401638,18403316,18404957,18406484,18407867,18409038,18410527,18412052,18413586,18415027,18416574,18418187,18419867,18421587,18423273,18424807,18426377,18428121,18430068,18431021,18432018,18433008,18434088,18435158,18436250,18437317,18438421,18439482,18440493,18441657,18442785,18443970,18445131,18446214,18447368,18448473,18449730,18450959,18452192,18453437,18454738,18456065,18457316,18458425,18459523,18460552,18461614,18462643,18463621,18464668,18465711,18466616,18467574,18468482,18469428,18470378,18471439,18472515,18473520,18474544,18475530,18476526,18477519,18478470,18479467,18480464,18481483,18482561,18483628,18484773,18485856,18486989,18488024,18488947,18489835,18490697,18492745,18494103,18495394,18496711,18497999,18499306,18500558,18501942,18503257,18504497,18505765,18507081,18508203,18509464,18510728,18512123,18513469,18514800,18516136,18517462,18518905,18520446,18522082,18523691,18525193,18526526,18527872,18529388,18530942,18532633,18534371,18536050,18537573,18538901,18540241,18541633,18543118,18544578,18546107,18547593,18549036,18550389,18551802,18553169,18554421,18555674,18556890,18558146,18559373,18560578,18561759,18562988,18564126,18565346,18566559,18567853,18569125,18570369,18572313,18574030,18575604,18577208,18578799,18580390,18581960,18583486,18585116,18586701,18588244,18589843,18591487,18593251,18595060,18596850,18598647,18600193,18601834,18603443,18605213,18607047,18608900,18610673,18612495,18614376,18616236,18618042,18619927,18621663,18623483,18625172,18626915,18628661,18630404,18632096,18633803,18635409,18637238,18639151,18640848,18642550,18643870,18645207,18646542,18647827,18649331,18650834,18652303,18653786,18655319,18656835,18658339,18659924,18661426,18662896,18664342,18665841,18667670,18669137,18669946,18670700,18671551,18672494,18673272,18673912,18674801,18675704,18676505,18677339,18678119,18679078,18680147,18681293,18682538,18683756,18685088,18686346,18687760,18689260,18690837,18692333,18693961,18695581,18697229,18698791,18700423,18702022,18703638,18705266,18706821,18708280,18709724,18711232,18712754,18714328,18715802,18717244,18718692,18720080,18721416,18722705,18723828,18725053,18726221,18727434,18728470,18729484,18730520,18731595,18732596,18733547,18734568,18735508,18736492,18737281,18738416,18740453,18742200,18744028,18745921,18747757,18749571,18751379,18753228,18755067,18756791,18758462,18760011,18761470,18762967,18765015,18766666,18768516,18770413,18772300,18774154,18776037,18777940,18779835,18781547,18783276,18784844,18786363,18787850,18789861,18791612,18793460,18795354,18797234,18799165,18800989,18802770,18804385,18805857,18807320,18808875,18810520,18812162,18814070,18815765,18817639,18819603,18821249,18823250,18825196,18826881,18828898,18830726,18832046,18833533,18835150,18836639,18838189,18840161,18841598,18842979,18844636,18846184,18847656,18849471,18851221,18852520,18854080,18855688,18857258,18858819,18860867,18862527,18864197,18865851,18867602,18869387,18871153,18872884,18874664,18876439,18878273,18880082,18881982,18883727,18885467,18887248,18889029,18890858,18892675,18894502,18896291,18898169,18899980,18901743,18903518,18905290,18907044,18908811,18910478,18912269,18914048,18915792,18917533,18919330,18921150,18922917,18924694,18926457,18928173,18929888,18931593,18933338,18935063,18936785,18938475,18940096,18941951,18943821,18945701,18947549,18949354,18951178,18953063,18954936,18956764,18958523,18960199,18961746,18963771,18965774,18967710,18969601,18971538,18973467,18975379,18977277,18979199,18981104,18982989,18984842,18986763,18988645,18990491,18992252,18994019,18995764,18997579,18999406,19001164,19003012,19004777,19006640,19008458,19010284,19012033,19013813,19015515,19017116,19018682,19020269,19021980,19023775,19025558,19027287,19029041,19030720,19032413,19034158,19035856,19037611,19039391,19041179,19042985,19044707,19046598,19048503,19050432,19052324,19054140,19055977,19057857,19059772,19061695,19063598,19065513,19067392,19069389,19071439,19073381,19075340,19077368,19079364,19081359,19083368,19085342,19087288,19089214,19091155,19093127,19095137,19097079,19099011,19100910,19102900,19104857,19106829,19108769,19110792,19112814,19114810,19116704,19118637,19120537,19122484,19124353,19126040,19127856,19129647,19131512,19133432,19135368,19137331,19139295,19141274,19143237,19145198,19147100,19149098,19151082,19152949,19154770,19156617,19158472,19160336,19162150,19163948,19165728,19167555,19169400,19171169,19172891,19174527,19176083,19177514,19178929,19179905,19181953,19184001,19186049,19188097,19190145,19192193,19194241,19196289,19198337,19200385,19202433,19204481,19206529,19208577,19210625,19212673,19214721,19216769,19218817,19220865,19222913,19224961,19227009,19229057,19231105,19233153,19235201,19237249,19239297,19241345,19243393,19245441,19247489,19249537,19251585,19253633,19255681,19257729,19259777,19261825,19263873,19265921,19267969,19270026,19272074,19274122,19276170,19278218,19280266,19282314,19284362,19286410,19288458,19290506,19292554,19294602,19296650,19298698,19300746,19302794,19304842,19306890,19308938,19310986,19313034,19315082,19317130,19319178,19321226,19323274,19325322,19327370,19329418,19331475,19333523,19335571,19337619,19339667,19341715,19343763,19345811,19347868,19349916,19351964,19354012,19356060,19358117,19360165,19362213,19364261,19366309,19368357,19370405,19372453,19374501,19376558,19378606,19380654,19382702,19384750,19386798,19388846,19390894,19392942,19394990,19397038,19399086,19401134,19403191,19405239,19407296,19409344,19411392,19413440,19415488,19417536,19419584,19421632,19423680,19425728,19427776,19429824,19431872,19433920,19435968,19438016,19440064,19442112,19444160,19446208,19448256,19450304,19452352,19454400,19456457,19458505,19460553,19462601,19464649,19466697,19468745,19470793,19472841,19474889,19476937,19478985,19481033,19483081,19485129,19487177,19489225,19491273,19493321,19495369,19497417,19499465,19501513,19503561,19505609,19507657,19509705,19511753,19513809,19515857,19517905,19519953,19522001,19524049,19526097,19528145,19530193,19532241,19534298,19536346,19538394,19540442,19542490,19544538,19546586,19548634,19550682,19552730,19554778,19556826,19558874,19560922,19562970,19565018,19567066,19569114,19571162,19573210,19575258,19577306,19579354,19581402,19583450,19585498,19587546,19589594,19591642,19593690,19595738,19597786,19599834,19601882,19603930,19605978,19608026,19610074,19612122,19614170,19616218,19618266,19620314,19622362,19624410,19626458,19628506,19630554,19632602,19634650,19636698,19638746,19640803,19642851,19644899,19646947,19648995,19651043,19653091,19655139,19657187,19659235,19661283,19663331,19665379,19667427,19669475,19671523,19673571,19675619,19677667,19679715,19681763,19683811,19685859,19687907,19689955,19692003,19694051,19696099,19698147,19700195,19702240,19704171,19705635,19707011,19708439,19709971,19711540,19713029,19714471,19715940,19717137,19718362,19719824,19721340,19722555,19723772,19725156,19726617,19728098,19729543,19731030,19732421,19733811,19735191,19736705,19738157,19739618,19741103,19742551,19744078,19745506,19747053,19748561,19750125,19751621,19753110,19754706,19756193,19757737,19759273,19760713,19762240,19763819,19765341,19766723,19768173,19769581,19771237,19772886,19774527,19776166,19777704,19779257,19780943,19782616,19784122,19785732,19787354,19788890,19790938,19791989,19793071,19794223,19795347,19796373,19797341,19798402,19799528,19800654,19801801,19802903,19804102,19805309,19806692,19808071,19809559,19811111,19812744,19814284,19815841,19817469,19818945,19820355,19821851,19823450,19824975,19826530,19828041,19829418,19830894,19832181,19833500,19834875,19836149,19837454,19838911,19840356,19841893,19843425,19844889,19846326,19847616,19848833,19849910,19850931,19851954,19853001,19854154,19855332,19856457,19857330,19858335,19859382,19860307,19861228,19862199,19863269,19865212,19866538,19867620,19868749,19869844,19870908,19871933,19873013,19874129,19875176,19876336,19877523,19878815,19880081,19881344,19882949,19884473,19885905,19887472,19888956,19890428,19892036,19893577,19895025,19896569,19898169,19899737,19901203,19902703,19904175,19905808,19907439,19909211,19911059,19912954,19914675,19916338,19918146,19919932,19921580,19923156,19924733,19926062,19927370,19928579,19929493,19930636,19931697,19932841,19933991,19935141,19936103,19937042,19938106,19939057,19939954,19940941,19941991,19943668,19945478,19947008,19948512,19950037,19951576,19953082,19954538,19956077,19957611,19959105,19960639,19962218,19963918,19965656,19967431,19969185,19970830,19972381,19973947,19975672,19977428,19979303,19980999,19982736,19984542,19986371,19988117,19989995,19991528,19993292,19995036,19996775,19998475,20000169,20001758,20003368,20004983,20006717,20008605,20010287,20012097,20013335,20014667,20015979,20017221,20018619,20020083,20021549,20022980,20024445,20025912,20027352,20028835,20030329,20031723,20033109,20034546,20036240,20038255,20039925,20041594,20043275,20045048,20046815,20048552,20050291,20052077,20053882,20055700,20057544,20059438,20061169,20062902,20064692,20066490,20068332,20070155,20071945,20073798,20075635,20077416,20079172,20080928,20082698,20084483,20086243,20087952,20089748,20091506,20093249,20094980,20096807,20098589,20100327,20102081,20103836,20105540,20107253,20108974,20110717,20112451,20114167,20115840,20117530,20119394,20121274,20123145,20124999,20126811,20128638,20130539,20132421,20134225,20135945,20137593,20139179,20140044,20142092,20144140,20146188,20148236,20150284,20152332,20154380,20156428,20158476,20160524,20162572,20164620,20166668,20168716,20170764,20172812,20174860,20176908,20178965,20181013,20183061,20185109,20187157,20189205,20191253,20193301,20195349,20197397,20199445,20201493,20203541,20205589,20207637,20209685,20211733,20213781,20215829,20217877,20219925,20221973,20224021,20226069,20228117,20230165,20232213,20234261,20236309,20238357,20240405,20242453,20244501,20246549,20248597,20250645,20252693,20254741,20256789,20258837,20260885,20262933,20264981,20267029,20269077,20271125,20273173,20275226,20276436,20277759,20279094,20280547,20282004,20283541,20285047,20286456,20287905,20289376,20290855,20292265,20293714,20295079,20296421,20297454,20298185,20299261,20300541,20302073,20303701,20305480,20307313,20309151,20311051,20312910,20314652,20316416,20317619,20319389,20321127,20322965,20324851,20326701,20328519,20330307,20332109,20333817,20335268,20336474,20337459,20338578,20339925,20341109,20342361,20343744,20344897,20346103,20347307,20348677,20350124,20351591,20353113,20354539,20355975,20357361,20358702,20360743,20362256,20363707,20365201,20366759,20368236,20369701,20371233,20372721,20374174,20375682,20377283,20378908,20380317,20381899,20383575,20385240,20386920,20388723,20390454,20392085,20393805,20395380,20396963,20398496,20400049,20401621,20403208,20404789,20406402,20408020,20409618,20411182,20412707,20414272,20415872,20417528,20419086,20420726,20422278,20423846,20425443,20427103,20428708,20430284,20431611,20432803,20434276,20435777,20437214,20438556,20440035,20441566,20443141,20444769,20446229,20447598,20449092,20450989,20452636,20454065,20455464,20456860,20458300,20459653,20461120,20462601,20463970,20465359,20466835,20468362,20469501,20470921,20472463,20473991,20475517,20477221,20478868,20480435,20482073,20483583,20485055,20486461,20488025,20489585,20491165,20492601,20494115,20495639,20497199,20498657,20500154,20501720,20503256,20504830,20506392,20507978,20509613,20511133,20512660,20514235,20515737,20517131,20518392,20519281,20520532,20521900,20523278,20524524,20525939,20527388,20528908,20530454,20531889,20533214,20534600,20536274,20538221,20539848,20541522,20543179,20544964,20546723,20548453,20550193,20551798,20553512,20555248,20557076,20558675,20560178,20561826,20563462,20565086,20566827,20568619,20570266,20571948,20573599,20575118,20576668,20578177,20579852,20581528,20583020,20584571,20586164,20587786,20589441,20591046,20592689,20594397,20596082,20597823,20599573,20601319,20602939,20604520,20606247,20607896,20609470,20610948,20612206,20613809,20615503,20617194,20618764,20620405,20622116,20623885,20625706,20627529,20629183,20630820,20632578,20634533,20635090,20635693,20636308,20636956,20637608,20638301,20639139,20640139,20641179,20642231,20643116,20644375,20645840,20647386,20649017,20650469,20651655,20653216,20654759,20656424,20658225,20659873,20661453,20663198,20664861,20666497,20668248,20669860,20671455,20673259,20674943,20676657,20678442,20680132,20681747,20683408,20685150,20686887,20688690,20690393,20691822,20693255,20694657,20695867,20697084,20698457,20699839,20701086,20702335,20703624,20704953,20706425,20707988,20709529,20711052,20712611,20714274,20715205,20717253,20719301,20721349,20723397,20725445,20727493,20729541,20731589,20733637,20735685,20737733,20739781,20741829,20743877,20745925,20747973,20750021,20752069,20754117,20756165,20758213,20760261,20762309,20764357,20766405,20768453,20770501,20772549,20774597,20776645,20778693,20780741,20782789,20784837,20786885,20788933,20790989,20793037,20795085,20797133,20799181,20801229,20803277,20805325,20807373,20809421,20811469,20813517,20815565,20817613,20819661,20821709,20823757,20825805,20827853,20829910,20831958,20834006,20836054,20838102,20840150,20842198,20844246,20846294,20848342,20850390,20852438,20854486,20856534,20858582,20860630,20862678,20864726,20866774,20868822,20870870,20872918,20874966,20877014,20879062,20881110,20883158,20885206,20887254,20889302,20891350,20893398,20895455,20897503,20899551,20901599,20903647,20905695,20907743,20909791,20911839,20913887,20915935,20917983,20920038,20922086,20924134,20926182,20928230,20930278,20932326,20934374,20936422,20938470,20940518,20942566,20944614,20946662,20948710,20950758,20952806,20954854,20956902,20958950,20960998,20963046,20965094,20967142,20969190,20971238,20973286,20975334,20977382,20979430,20981478,20983526,20985574,20987622,20989670,20991718,20993766,20995814,20997862,20999910,21001958,21004006,21006054,21008102,21010159,21012207,21014255,21016303,21018351,21020399,21022447,21024495,21026543,21028591,21030639,21032687,21034735,21036783,21038831,21040879,21042927,21044975,21047023,21049071,21051119,21053175,21055223,21057271,21059319,21061367,21063415,21065463,21067511,21069559,21071607,21073655,21075703,21077751,21079799,21081847,21083895,21085943,21087991,21090039,21092087,21094135,21096181,21098195,21100226,21102277,21104325,21106373,21108421,21110477,21112525,21114573,21116621,21118669,21120717,21122765,21124813,21126861,21128909,21130957,21133005,21135053,21137101,21139149,21141197,21143245,21145293,21147341,21149389,21151437,21153485,21155533,21157581,21159629,21161677,21163725,21165773,21167821,21169869,21171917,21173965,21176013,21178061,21180109,21182157,21184205,21186253,21188301,21190349,21192406,21194434,21196445,21198496,21200550,21202607,21204655,21206711,21208758,21210806,21212854,21214902,21216950,21218998,21221046,21223094,21225142,21227190,21229238,21231286,21233334,21235382,21237430,21239478,21241526,21243574,21245622,21247679,21249727,21251775,21253823,21255871,21257919,21259967,21262015,21264063,21266111,21268159,21270207,21272255,21274303,21276360,21278408,21280456,21282504,21284552,21286609,21288657,21290714,21292749,21294757,21296804,21298854,21300910,21302958,21305006,21307055,21309112,21311160,21313208,21315256,21317304,21319352,21321400,21323448,21325496,21327544,21329592,21331640,21333688,21335736,21337784,21339832,21341880,21343928,21345985,21348033,21350081,21352129,21354177,21356225,21358273,21360321,21362369,21364417,21366465,21368513,21370561,21372609,21374657,21376705,21378753,21380801,21382849,21384897,21386945,21388993,21391041,21393089,21395137,21397185,21399233,21401281,21403329,21405377,21407425,21409473,21411521,21413569,21415617,21417665,21419713,21421761,21423809,21425857,21427905,21429953,21432001,21434049,21436097,21438145,21440193,21442241,21444289,21446337,21448385,21450433,21452481,21454529,21456577,21458625,21460673,21462721,21464769,21466817,21468865,21470913,21472961,21475009,21477057,21479105,21481153,21483201,21485249,21487297,21489345,21491393,21493441,21495489,21497537,21499585,21501633,21503681,21505729,21507777,21509825,21511873,21513921,21515969,21518017,21520065,21522113,21524161,21526209,21528257,21530305,21532356,21534404,21536452,21538500,21540548,21542596,21544644,21546692,21548740,21550788,21552836,21554884,21556932,21558980,21561028,21563076,21565124,21567172,21569220,21571277,21573325,21575362,21577376,21579411,21581462,21583519,21585567,21587615,21589665,21591713,21593761,21595809,21597857,21599905,21601953,21604001,21606049,21608097,21610145,21612193,21614241,21616289,21618337,21620385,21622433,21624481,21626150,21627449,21628953,21630278,21631382,21632410,21633524,21634653,21635727,21636926,21637999,21639091,21640311,21641391,21642626,21643685,21644766,21645874,21647049,21648217,21649414,21650539,21651736,21652693,21653607,21654459,21655402,21656354,21656941,21657995,21658833,21659708,21660835,21661186,21661535,21661904,21663035,21664261,21665741,21667239,21668732,21670154,21671010,21672087,21673045,21673947,21674825,21675759,21677137,21678542,21679834,21681019,21682081,21683107,21684293,21685480,21686463,21687676,21688769,21689941,21691102,21692200,21693423,21694482,21695641,21696730,21697836,21698967,21700194,21701241,21702280,21703198,21704170,21705028,21706006,21706981,21707540,21708514,21709289,21710048,21710888,21711243,21711593,21711947,21713238,21714560,21716067,21717532,21718970,21720087,21721202,21722355,21723270,21724203,21725052,21726584,21728026,21728071,21728115,21728160,21728222,21728348,21728469,21728640,21728833,21729008,21729278,21729488,21729734,21730308,21731280,21732308,21733311,21734479,21735917,21737501,21739083,21740746,21742373,21744143,21745887,21747646,21749262,21750809,21752361,21753980,21755671,21757360,21759122,21760901,21762550,21764190,21765841,21767441,21769072,21770651,21771726,21772672,21773631,21774424,21775001,21775273,21775448,21775576,21775693,21775837,21776010,21776125,21776184,21776240,21776290,21776337,21776382,21776529,21777184,21778205,21780105,21780253,21780509,21780706,21780892,21781112,21781507,21781909,21782300,21782713,21783153,21783412,21783771,21784461,21785275,21786264,21787210,21788305,21789590,21791175,21792878,21794671,21796426,21798200,21800052,21801862,21803609,21805273,21806951,21808642,21810504,21812325,21814214,21816078,21817887,21819680,21821597,21823448,21825308,21827199,21828499,21829482,21830370,21831244,21831939,21832467,21832868,21833206,21833514,21833919,21834257,21834699,21834850,21835007,21835144,21835341,21835544,21835662,21837681,21839027,21840341,21841644,21842849,21844175,21845576,21847007,21848318,21849704,21851029,21852435,21853900,21855309,21856701,21858148,21859644,21861097,21862557,21864020,21865558,21866934,21868310,21869706,21871118,21872395,21873512,21874782,21876178,21877483,21878844,21880185,21881574,21882824,21884212,21885643,21886968,21888252,21889648,21891178,21892636,21894037,21895553,21896837,21898220,21899630,21901071,21902493,21903926,21905299,21906609,21907985,21909274,21910751,21912094,21913285,21914532,21915752,21917092,21918068,21919105,21920551,21922034,21922078,21922123,21922171,21922487,21923535,21924574,21925609,21926950,21928447,21929951,21931292,21933099,21934895,21936654,21938342,21940021,21941249,21942201,21943660,21945365,21947106,21948959,21950664,21952490,21954318,21956082,21957714,21959375,21961064,21962865,21964747,21966590,21968476,21970324,21972075,21973949,21975836,21977721,21979564,21981476,21983058,21984648,21986155,21987870,21989436,21990750,21992012,21993367,21994523,21995675,21996792,21997498,21998382,21998429,21998474,21998518,21998833,21999524,22000615,22001392,22002095,22003153,22004396,22005712,22007073,22008043,22008640,22009629,22010557,22011606,22012284,22013150,22013844,22014517,22015223,22015931,22016896,22017783,22018626,22019524,22020372,22021360,22022209,22022878,22023514,22024491,22025449,22026351,22027239,22028200,22028733,22029495,22030265,22031067,22031772,22032488,22033283,22034193,22035174,22035861,22036690,22037523,22038350,22039211,22040090,22040981,22041896,22042818,22043665,22044497,22045336,22046186,22047246,22048042,22049102,22050846,22052229,22053739,22055246,22056897,22058485,22059927,22061688,22063182,22064735,22066190,22067868,22069474,22071004,22072614,22074079,22075498,22076979,22078653,22080257,22081771,22083387,22084750,22086256,22087959,22089884,22091323,22092815,22094104,22095226,22096469,22097812,22099189,22100277,22101389,22102619,22103662,22104797,22106028,22107290,22108534,22109636,22110462,22111312,22112155,22113932,22115482,22116862,22118321,22119701,22120996,22122390,22123568,22124778,22126157,22127506,22128761,22129875,22130801,22131693,22132328,22133304,22135223,22136730,22138226,22139733,22141136,22142433,22143800,22144966,22146211,22147540,22148856,22150076,22150963,22151802,22152511,22153268,22155171,22156641,22158124,22159538,22161018,22162352,22163601,22164960,22166136,22167436,22168831,22170144,22171342,22172386,22173303,22174175,22174816,22175837,22177734,22179167,22180679,22182100,22183578,22185113,22186614,22187958,22189130,22190037,22190858,22191612,22192514,22193373,22194198,22195952,22197425,22198896,22200315,22201769,22203091,22204335,22205655,22206822,22208138,22209490,22210791,22211924,22212867,22213814,22214565,22215261,22216932,22218587,22220066,22221428,22222559,22223810,22225271,22226681,22228012,22228955,22229951,22231342,22233084,22234678,22236242,22237605,22238863,22239999,22241491,22242882,22244111,22245158,22246434,22247707,22249037,22249974,22251161,22252889,22254662,22256443,22258275,22259960,22261549,22262941,22264795,22266705,22268491,22270241,22272158,22273958,22275250,22276530,22277820,22279166,22280616,22282092,22283968,22285281,22286708,22287997,22289361,22290821,22292357,22293710,22294619,22295567,22296738,22298546,22299520,22300377,22301317,22303088,22304412,22305777,22307452,22309050,22310579,22312324,22314054,22315840,22317041,22318569,22320293,22321808,22323450,22325340,22327203,22328783,22330034,22331641,22333328,22334870,22336631,22338547,22340456,22341855,22343187,22344851,22346539,22348141,22349956,22351874,22353808,22355105,22356483,22358156,22359873,22361408,22363141,22365057,22366976,22368388,22369794,22371443,22373126,22374645,22376359,22378213,22380132,22381474,22382841,22384524,22386095,22387619,22389383,22391092,22392936,22394130,22395689,22397422,22398945,22400583,22402344,22404169,22405580,22406913,22408580,22410231,22411740,22413455,22415230,22417087,22418320,22419808,22421540,22423100,22424705,22426530,22428370,22429949,22431576,22433081,22434671,22436242,22437809,22439483,22441172,22442711,22444250,22445846,22447279,22448868,22450463,22452021,22453584,22455015,22456501,22458042,22459434,22460934,22462409,22463571,22464659,22465833,22467176,22468467,22469622,22470927,22472588,22474152,22475423,22476707,22478117,22479510,22480918,22482113,22483603,22484600,22485995,22487839,22487883,22487928,22487976,22488025,22488070,22488167,22488582,22489251,22489996,22490850,22491797,22492769,22493745,22494803,22495735,22496897,22498004,22499274,22500595,22501770,22503079,22504412,22505578,22506768,22507883,22508877,22510090,22511122,22512336,22513511,22514553,22515463,22516397,22517187,22517852,22518573,22519201,22519516,22519563,22519608,22519652,22519697,22519747,22521062,22521938,22522681,22523492,22524625,22525915,22527193,22528197,22529212,22530221,22531304,22532047,22532778,22533541,22534516,22535504,22536601,22537766,22538883,22540068,22541344,22542602,22543804,22545163,22546529,22547865,22549214,22550492,22551812,22553018,22553944,22554741,22555296,22555842,22556395,22557188,22558079,22558880,22559686,22560568,22561602,22562549,22563432,22564442,22565682,22566721,22567714,22568750,22569571,22570664,22571903,22572984,22574027,22574992,22576083,22576920,22578294,22579026,22580121,22581266,22582894,22584095,22585350,22586690,22588156,22589622,22591098,22592747,22594503,22596297,22598128,22599944,22601749,22603470,22605195,22606811,22608496,22610264,22611871,22613540,22615161,22616810,22618375,22619857,22621506,22623185,22624776,22626334,22627910,22629501,22631050,22632466,22633638,22634705,22636106,22637722,22639239,22640823,22642394,22643837,22645185,22646620,22648061,22650079,22650775,22651519,22652574,22653685,22654844,22656160,22657561,22658878,22660145,22661677,22663116,22664412,22665163,22666093,22667261,22668563,22669997,22671245,22672453,22673673,22674790,22675956,22677153,22678352,22679651,22680838,22682166,22683582,22684821,22686089,22687453,22688844,22690180,22691479,22692710,22693958,22695173,22696121,22697100,22698248,22699385,22700678,22701854,22703296,22703916,22705327,22706185,22707158,22708409,22710154,22711849,22712667,22713623,22714690,22716393,22717200,22718047,22718867,22719920,22721014,22722028,22723010,22724042,22725269,22726613,22728192,22729845,22731494,22733130,22734620,22735961,22737409,22738925,22740617,22742212,22743914,22745544,22747177,22748793,22750358,22751842,22753354,22755014,22756836,22758691,22760535,22762362,22764102,22765849,22767303,22768689,22770017,22771375,22772717,22773953,22774970,22775596,22776609,22777745,22778864,22780003,22780839,22782080,22782915,22783963,22785067,22786004,22786858,22787984,22789250,22790711,22791465,22792074,22792635,22793347,22793955,22794579,22795173,22796025,22796850,22797980,22799043,22799853,22800948,22801744,22802556,22803340,22804168,22804955,22805922,22806798,22807703,22808626,22809514,22810378,22811291,22812194,22813098,22814089,22815117,22816086,22816877,22817513,22818171,22818935,22819685,22820423,22821345,22822230,22822985,22823888,22824673,22825512,22826305,22827361,22828127,22829569,22831376,22833424,22834984,22837041,22837474,22837566,22837742,22837937,22838014,22838108,22838459,22839116,22839847,22840670,22841617,22842569,22843526,22844556,22845503,22846656,22847782,22849074,22850412,22851598,22852907,22854210,22855380,22856585,22857619,22858687,22859886,22860909,22862125,22863244,22864232,22865134,22866021,22866672,22867345,22868086,22868579,22868705,22868786,22868976,22869158,22869250,22869675,22871178,22871889,22872608,22873603,22874745,22876127,22877152,22878104,22879153,22880085,22880891,22881560,22882324,22883270,22884193,22885162,22886250,22887311,22888378,22889534,22890731,22891827,22893185,22894598,22895984,22897256,22898482,22899845,22901006,22901930,22902661,22903170,22903706,22904247,22905037,22905944,22906726,22907543,22908466,22909489,22910393,22911305,22912340,22913519,22914565,22915947,22916644,22917672,22918784,22920107,22920917,22922290,22922921,22923967,22925185,22926148,22927210,22928134,22929099,22930093,22931171,22932326,22933401,22935380,22936514,22937731,22939120,22940465,22941974,22943405,22944983,22946667,22948453,22950277,22952094,22953897,22955606,22957356,22959031,22960647,22962428,22964059,22965706,22967282,22968926,22970532,22972011,22973631,22975306,22976972,22978493,22980079,22981640,22983231,22984726,22986030,22987097,22988308,22989940,22991487,22993085,22994651,22996193,22997534,22998896,23000340,23002123,23003325,23004006,23005006,23006099,23007220,23008500,23009835,23011217,23012498,23013962,23015448,23016779,23017726,23018548,23019592,23020873,23022257,23023521,23024763,23026044,23027154,23028343,23029486,23030708,23032024,23033243,23034457,23035848,23037206,23038447,23039766,23041133,23042448,23043779,23045038,23046285,23047484,23048571,23049546,23050623,23051781,23053042,23054225,23055572,23056344,23057350,23058515,23059700,23060480,23062229,23063543,23064407,23065042,23065773,23066424,23067385,23068088,23069418,23071173,23071982,23072859,23073647,23074718,23075818,23076802,23077821,23078853,23080039,23081377,23082949,23084605,23086254,23087893,23089385,23090727,23092132,23093640,23095301,23096907,23098601,23100235,23101866,23103486,23105065,23106535,23108049,23109695,23111517,23113370,23115220,23117052,23118795,23120546,23122043,23123460,23124784,23126136,23127495,23128737,23129743,23130357,23131335,23132494,23133599,23134800,23135606,23136838,23137692,23138696,23139802,23141040,23141813,23142379,23143346,23144054,23145340,23146528,23148531,23150426,23152273,23153978,23155732,23157451,23159165,23160907,23162830,23164720,23166777,23167241,23167286,23167334,23167383,23167428,23167469,23167514,23167562,23167611,23167656,23167700,23167745,23167893,23168677,23169730,23171147,23172551,23174120,23175689,23177118,23178632,23180181,23181773,23183443,23185151,23186915,23188662,23190328,23192049,23193673,23195344,23196981,23198604,23200171,23201770,23203210,23204527,23205807,23206932,23208098,23208993,23209469,23209791,23209999,23210138,23210182,23210227,23210275,23210322,23210367,23210411,23210456,23210506,23210553,23210598,23210642,23210687,23212046,23214094,23216142,23218190,23220238,23222286,23224334,23226382,23228430,23230478,23232526,23234574,23236622,23238670,23240718,23242766,23244814,23246862,23248910,23250958,23253006,23255054,23257102,23259150,23261198,23263246,23265294,23267342,23269390,23270758,23271984,23273186,23274420,23275662,23276756,23277887,23279024,23280244,23281446,23282721,23284002,23285167,23286488,23287757,23289216,23290917,23292471,23294006,23295371,23296738,23298253,23299826,23301265,23302646,23304246,23305856,23307405,23308902,23310390,23311927,23313358,23314733,23316127,23317593,23319045,23320534,23321802,23323015,23324350,23325616,23326882,23328069,23329168,23330037,23331080,23332113,23333247,23334248,23335072,23335758,23336500,23337317,23338006,23338646,23339270,23339804,23341684,23343348,23344501,23345580,23346720,23347724,23348923,23350204,23351553,23352694,23353920,23355113,23356390,23357740,23359006,23360592,23362121,23363900,23365686,23367371,23369123,23370907,23372510,23373973,23375526,23377003,23378384,23379969,23381587,23383043,23384508,23386139,23387713,23389367,23390850,23392561,23394093,23395469,23396748,23398121,23399357,23400466,23401594,23402612,23403613,23404698,23405612,23406602,23407639,23408689,23409731,23410631,23411490,23412176,23412772,23413206,23413640,23414016,23415387,23416751,23417411,23418102,23418775,23419440,23420109,23420762,23421443,23422132,23422818,23423443,23424120,23424798,23426024,23427607,23429109,23430659,23432242,23433920,23435531,23437084,23438583,23439986,23441067,23441954,23443226,23444688,23446135,23447686,23449209,23450656,23452158,23453577,23454903,23456047,23456996,23458147,23459565,23461080,23462562,23464018,23465511,23466902,23468134,23469070,23469766,23470405,23471082,23471783,23472457,23473131,23473786,23474462,23475172,23475837,23476485,23477151,23478327,23480068,23480766,23481427,23482062,23482727,23483429,23484126,23484781,23485437,23486132,23486837,23487549,23488210,23489031,23490432,23492056,23493651,23495282,23496997,23498686,23500252,23501765,23503199,23504569,23505887,23507249,23508523,23509835,23511181,23512508,23513810,23515086,23516367,23517518,23519182,23520859,23522486,23524104,23525765,23527360,23528898,23530287,23531384,23532375,23533112,23533869,23534541,23535210,23535887,23536510,23537200,23537887,23538542,23539186,23539826,23540518,23541178,23541986,23544014,23544864,23545264,23545808,23546460,23547089,23547806,23548677,23549591,23550587,23551705,23552735,23553872,23555218,23556721,23558228,23559805,23561364,23562923,23564441,23565909,23567343,23568813,23570267,23571709,23573198,23574683,23576105,23577521,23578920,23580179,23581539,23582933,23584349,23585947,23587565,23589125,23590572,23591891,23593009,23594165,23595431,23596661,23597889,23599168,23600320,23601446,23602463,23603404,23604424,23605437,23606439,23607406,23608306,23609183,23609876,23610486,23610880,23612107,23613399,23613725,23614215,23614735,23615410,23616151,23616977,23617864,23618777,23619788,23620819,23621981,23623220,23624563,23626077,23627697,23629364,23631086,23632742,23634375,23635862,23637294,23638667,23639973,23641277,23642651,23644077,23645542,23646945,23648392,23649884,23651327,23652780,23654192,23655653,23657103,23658659,23660342,23661990,23663520,23664870,23666171,23667385,23668624,23669835,23671045,23672264,23673442,23674520,23675578,23676639,23677642,23678549,23679344,23680107,23680791,23681305,23682189,23683950,23684253,23684743,23685372,23686013,23686685,23687465,23688370,23689290,23690355,23691433,23692469,23693824,23695379,23696879,23698369,23699952,23701469,23702932,23704246,23705542,23706862,23708218,23709540,23710982,23712371,23713783,23715147,23716405,23717807,23719176,23720547,23721843,23723192,23724530,23725823,23727179,23728717,23730264,23731884,23733307,23734775,23736176,23737546,23738761,23739947,23741176,23742397,23743549,23744633,23745652,23746635,23747570,23748456,23749233,23749881,23750375,23750777,23752527,23754270,23755993,23757789,23759490,23761543,23763591,23765639,23767687,23769735,23771783,23773831,23775879,23777927,23779975,23782023,23784071,23786119,23788167,23790215,23792263,23794311,23796359,23798407,23800455,23802503,23804551,23806599,23808647,23810695,23812723,23814699,23816752,23818764,23820817,23822807,23824855,23826815,23828863,23830834,23832882,23834886,23836861,23838737,23840766,23842763,23844534,23846417,23848379,23850376,23852360,23854329,23856291,23858253,23860249,23862188,23863194,23863959,23864776,23865675,23866667,23867666,23868793,23869816,23870886,23871733,23872516,23873480,23874512,23875375,23876314,23877207,23878109,23879094,23879918,23880720,23881597,23882435,23883413,23884500,23885384,23886071,23886952,23888302,23889585,23890852,23892225,23893352,23893912,23894451,23894955,23895553,23896109,23896906,23897839,23898780,23899832,23900790,23901498,23902494,23903220,23904163,23905161,23906173,23906923,23907983,23908800,23909314,23909853,23910539,23911273,23911981,23913249,23913719,23914510,23915166,23915860,23916605,23917239,23918373,23919276,23920291,23921330,23922070,23922815,23923355,23923897,23924440,23925136,23925883,23926691,23927514,23928176,23928870,23929754,23930727,23931896,23932702,23933480,23934491,23935490,23936489,23937526,23938267,23939212,23939952,23940761,23941738,23942663,23943588,23944016,23944555,23945458,23946230,23947005,23947536,23948185,23949098,23949746,23950367,23951008,23951679,23952516,23953280,23954128,23954809,23955535,23956285,23957026,23958664,23960353,23962060,23963527,23964962,23966382,23967737,23969284,23970955,23972876,23974618,23976409,23977871,23979310,23980731,23982159,23983715,23985487,23987453,23989093,23990728,23992466,23994102,23995721,23997409,23999157,24000956,24002742,24004493,24006218,24007873,24009141,24010326,24011517,24012972,24014568,24016182,24017897,24019666,24021396,24023172,24024843,24026595,24028300,24030039,24031705,24033457,24035129,24036888,24038659,24040317,24042091,24043890,24045577,24047317,24049106,24050870,24052509,24054083,24055692,24057103,24058405,24059716,24061109,24062640,24064163,24065775,24067421,24068982,24070601,24072217,24073748,24075324,24076963,24078578,24080298,24082332,24083742,24085147,24086634,24088180,24089626,24091106,24092667,24094144,24095607,24097139,24098768,24100336,24101775,24103417,24105089,24106737,24108445,24110223,24111941,24113613,24115294,24116864,24118436,24119944,24121532,24123137,24124731,24126299,24127930,24129571,24131152,24132707,24134275,24135925,24137548,24139189,24140800,24142412,24143985,24145551,24147155,24148797,24150392,24151958,24153192,24154442,24155916,24157424,24158820,24160213,24161692,24163247,24164869,24166482,24167935,24169334,24170825,24172876,24174242,24175472,24176694,24177951,24179176,24180435,24181667,24182912,24184160,24185442,24186743,24188146,24189603,24190894,24192177,24193470,24194781,24196091,24197404,24198675,24199920,24201209,24202477,24203730,24204992,24206250,24207483,24208737,24209992,24211244,24212474,24213662,24214851,24216099,24217324,24218570,24219807,24221044,24222321,24223566,24224835,24226081,24227362,24228662,24229985,24231560,24232855,24234131,24235448,24236783,24238092,24239383,24240615,24241870,24243162,24244436,24245661,24247481,24249395,24251122,24252902,24254689,24256491,24258301,24260078,24261852,24263637,24265421,24267176,24268900,24270628,24272338,24274041,24275711,24277344,24278968,24280578,24282232,24283884,24285478,24287056,24288769,24290476,24292177,24293893,24295655,24297399,24299202,24300941,24302707,24304453,24306188,24307901,24309490,24311202,24312884,24314561,24316222,24317883,24319554,24321295,24323006,24324727,24326457,24328188,24329933,24331722,24333519,24335265,24337009,24338747,24340503,24342251,24344003,24345779,24347288,24348377,24350001,24352049,24354097,24356145,24358193,24360241,24362289,24364337,24366385,24368433,24370481,24372529,24374577,24376625,24378673,24380721,24382769,24384817,24386865,24388913,24390961,24393009,24395057,24397105,24399153,24401201,24403249,24405297,24407345,24409393,24411441,24413489,24415537,24417585,24419633,24421681,24423729,24425777,24427825,24429873,24431921,24433969,24436017,24438073,24440121,24442169,24444217,24446265,24448313,24450361,24452409,24454457,24456505,24458553,24460601,24462649,24464697,24466745,24468793,24470841,24472889,24474937,24476985,24479033,24481081,24483129,24485177,24487225,24489273,24491321,24493369,24495417,24497465,24499513,24501561,24503609,24505657,24507705,24509753,24511801,24513849,24515897,24517945,24519993,24522041,24524089,24526137,24528185,24530233,24532281,24534329,24536377,24538425,24540473,24542521,24544569,24546617,24548665,24550713,24552761,24554809,24556857,24558905,24560953,24563001,24565049,24567097,24569145,24571193,24573241,24575289,24577337,24579385,24581433,24583481,24585529,24587577,24589625,24591673,24593721,24595769,24597817,24599865,24601913,24603961,24606009,24608057,24610105,24612153,24614201,24616249,24618297,24620345,24622393,24624441,24626489,24628537,24630585,24632633,24634681,24636729,24638777,24640825,24642873,24644921,24646969,24649017,24651065,24653113,24655161,24657209,24659257,24661305,24663353,24665401,24667449,24669497,24671545,24673593,24675641,24677689,24679737,24681785,24683833,24685881,24687929,24689977,24692025,24694073,24696121,24698169,24700217,24702265,24704313,24706361,24708409,24710457,24712505,24714553,24716601,24718649,24720697,24722745,24724793,24726841,24728889,24730937,24732985,24735033,24737081,24739129,24741177,24743225,24745273,24747321,24749369,24751417,24753465,24755513,24757561,24759609,24761657,24763705,24765753,24767801,24769849,24771897,24773945,24775993,24778041,24780089,24782137,24784185,24786233,24788290,24790338,24792386,24794434,24796482,24798530,24800578,24802626,24804674,24806722,24808770,24810818,24812866,24814914,24816962,24819010,24821058,24823106,24825154,24827202,24829250,24831298,24833346,24835394,24837442,24839490,24841538,24843586,24845634,24847682,24849730,24851778,24853826,24855874,24857922,24859970,24862018,24864066,24866114,24868162,24870210,24872258,24874306,24876354,24878402,24880450,24882498,24884546,24886594,24888642,24890690,24892738,24894786,24896834,24898882,24900930,24902978,24905026,24907074,24909122,24911170,24913218,24915266,24917314,24919362,24921410,24923458,24925506,24927554,24929602,24931650,24933698,24935746,24937794,24939842,24941890,24943938,24945986,24948034,24950082,24952130,24954178,24956226,24958274,24960322,24962370,24964418,24966466,24968514,24970562,24972610,24974658,24976706,24978754,24980802,24982850,24984898,24986946,24988994,24991042,24993090,24995138,24997194,24999242,25001290,25003338,25005386,25007434,25009482,25011530,25013578,25015626,25017674,25019722,25021770,25023818,25025866,25027914,25029962,25032010,25034058,25036106,25038154,25040202,25042250,25044298,25046346,25048394,25050442,25052490,25054538,25056586,25058634,25060682,25062730,25064778,25066826,25068874,25070922,25072970,25075018,25077066,25079114,25081162,25083210,25085258,25087306,25089354,25091402,25093450,25095498,25097546,25099594,25101642,25103690,25105738,25107786,25109834,25111882,25113930,25115978,25118026,25120074,25122122,25124170,25126218,25128266,25130314,25132362,25134410,25136458,25138506,25140554,25142602,25144650,25146698,25148746,25150794,25152842,25154890,25156938,25158986,25161034,25163082,25165130,25167178,25169226,25171274,25173322,25175370,25177418,25179466,25181514,25183562,25185610,25187658,25189706,25191754,25193802,25195859,25197907,25199955,25202003,25204051,25206099,25208147,25210195,25212243,25214291,25216339,25218387,25220435,25222483,25224531,25226579,25228627,25230675,25232723,25234771,25236819,25238867,25240915,25242963,25245011,25247059,25249107,25251155,25253203,25255251,25257299,25259347,25261395,25263443,25265491,25267539,25269587,25271635,25273683,25275731,25277779,25279827,25281875,25283923,25285603,25286257,25286860,25287442,25288085,25288683,25289274,25289870,25290499,25291131,25291743,25292366,25293697,25294338,25294857,25295453,25296044,25296578,25296957,25297353,25297846,25299539,25301278,25302661,25303692,25304817,25305872,25307175,25308693,25310168,25311304,25312661,25314414,25315637,25316674,25318114,25318510,25318938,25319387,25319861,25320376,25320843,25321354,25321788,25322143,25322404,25322683,25322963,25323365,25325051,25326949,25328703,25330407,25332110,25333885,25334900,25336076,25337218,25338133,25339033,25340154,25341260,25342143,25343324,25343917,25345021,25345937,25346914,25347898,25349267,25349896,25351195,25352272,25353339,25354329,25355375,25356296,25357335,25358583,25359537,25360434,25361276,25362593,25363222,25364394,25365412,25366720,25367878,25368905,25370090,25370671,25371802,25372883,25374041,25374968,25375883,25377160,25377671,25377976,25378277,25378753,25380060,25381105,25382359,25383150,25384455,25385368,25387175,25388108,25389834,25391141,25393091,25394553,25396050,25397608,25399182,25400780,25402409,25404040,25405668,25407353,25408973,25410627,25412302,25413892,25415557,25417196,25418788,25420408,25422049,25423789,25425508,25427193,25428943,25430692,25432467,25434163,25435839,25437611,25439410,25441223,25443033,25444887,25446778,25448671,25450562,25452468,25454343,25456104,25457883,25459710,25461523,25463333,25465116,25466907,25468708,25470460,25472220,25473792,25475380,25477004,25478623,25480189,25481647,25483140,25484752,25486312,25488022,25489688,25491736,25493147,25494549,25496050,25497606,25499102,25500605,25502163,25503629,25505099,25506619,25508248,25509843,25511239,25512857,25514538,25516168,25517864,25519639,25521376,25523031,25524741,25526310,25527905,25529430,25530991,25532596,25534196,25535775,25537384,25539026,25540616,25542160,25543708,25545339,25546947,25548567,25550154,25551775,25553338,25554922,25556534,25558185,25559804,25561386,25562659,25563877,25565354,25566842,25568260,25569588,25571078,25572615,25574223,25575836,25577267,25578649,25580124,25582099,25583081,25583663,25584375,25584863,25585479,25586215,25587049,25587782,25588782,25589740,25590884,25591782,25592968,25594219,25595514,25596834,25598170,25599524,25600903,25602292,25603698,25605173,25606531,25607933,25609389,25610955,25612398,25613803,25615277,25616598,25617626,25618606,25619517,25620729,25621989,25623256,25624521,25625562,25626676,25627635,25628571,25629565,25630447,25631366,25632395,25633268,25634032,25634877,25635777,25636622,25637104,25637752,25638571,25639185,25639888,25640543,25641145,25642553,25643977,25644710,25645452,25646336,25647310,25648363,25649490,25650529,25651642,25652803,25653908,25654864,25655692,25656424,25657433,25658767,25660076,25661499,25662942,25664460,25665935,25667457,25668800,25670289,25671837,25673440,25674983,25676499,25678109,25679751,25681454,25683123,25684687,25686187,25687729,25689315,25690795,25692273,25693742,25695018,25696330,25697539,25698623,25699553,25700582,25701656,25702746,25703807,25704970,25706188,25707423,25708525,25709520,25710353,25711087,25711900,25712671,25713693,25714624,25716276,25718297,25720345,25722393,25724441,25726489,25728537,25730585,25732633,25734681,25736729,25738777,25740825,25742873,25744921,25746969,25749017,25751065,25753113,25755161,25757209,25759257,25761305,25763353,25765401,25767449,25769497,25771554,25773602,25775650,25777698,25779746,25781794,25783842,25785890,25787938,25789986,25792034,25794082,25796130,25798178,25800226,25802274,25804322,25806370,25808418,25810466,25812514,25814562,25816610,25818658,25820706,25822761,25824809,25826857,25828905,25830953,25833001,25835049,25837097,25839145,25841193,25843241,25845289,25847337,25849385,25851433,25853481,25855529,25857577,25859634,25861682,25863730,25865787,25867835,25869883,25871931,25873979,25876027,25878075,25880123,25882171,25884219,25886267,25888315,25890371,25892419,25894467,25896515,25898563,25900611,25902659,25904707,25906755,25908803,25910851,25912899,25914947,25916995,25919043,25921091,25923139,25925187,25927235,25929292,25931340,25933388,25935436,25937484,25939532,25941580,25943602,25945508,25947489,25949537,25951585,25953641,25955555,25957564,25959612,25961669,25963717,25965765,25967632,25969655,25971710,25973761,25975817,25977756,25979750,25981798,25983843,25985838,25987769,25989762,25991755,25993758,25995621,25997600,25999593,26001600,26003463,26005438,26007465,26009470,26011384,26013366,26015361,26017304,26019297,26021167,26023197,26025239,26027135,26029057,26030990,26032868,26034852,26036710,26038685,26040548,26042495,26044402,26046306,26048252,26050171,26052130,26053989,26056000,26057858,26059832,26061695,26063711,26065574,26067507,26069413,26071338,26073271,26075170,26077154,26078983,26081014,26082884,26084878,26086768,26088680,26090617,26092549,26094488,26096438,26098378,26100299,26102261,26104153,26106140,26108056,26110039,26111892,26113922,26115797,26117825,26119692,26121671,26123534,26125502,26127380,26129338,26131228,26133159,26135077,26137022,26138941,26140863,26142802,26144715,26146675,26148548,26150527,26152422,26154427,26156292,26158303,26160192,26162129,26164044,26166029,26167950,26169960,26171809,26173803,26175738,26177710,26179591,26181613,26183592,26185569,26187457,26189438,26191446,26193349,26195292,26197199,26199107,26201046,26203009,26204907,26206886,26208755,26210697,26212593,26214534,26216441,26218344,26220295,26222287,26224155,26226136,26228001,26229994,26231857,26233790,26235704,26237684,26239554,26241583,26243450,26245405,26247299,26249207,26251146,26252971,26254989,26256864,26258849,26260719,26262735,26264783,26266810,26268710,26270689,26272737,26274718,26276694,26278710,26280758,26282621,26284599,26286643,26288657,26290575,26292504,26294437,26296423,26298302,26300280,26302144,26304119,26305985,26307937,26309844,26311792,26313693,26315631,26317548,26319426,26321412,26323246,26325191,26327087,26328996,26330942,26332749,26334780,26336644,26338570,26340502,26342434,26344367,26346290,26348236,26350148,26352125,26354049,26356026,26357917,26359898,26361780,26363795,26365670,26367699,26369569,26371529,26373432,26375380,26377294,26379236,26381141,26383079,26384994,26386920,26388853,26390783,26392722,26394610,26396590,26398518,26400497,26402395,26404404,26406294,26408299,26410195,26412201,26414097,26416102,26418014,26420020,26421923,26423932,26425951,26427867,26429807,26431726,26433655,26435588,26437518,26439451,26441379,26443325,26445209,26447187,26449042,26451070,26452935,26454910,26456774,26458705,26460615,26462536,26464473,26466347,26468328,26470297,26472257,26474197,26476134,26478087,26479992,26481938,26483841,26485792,26487692,26489638,26491545,26493484,26495393,26497332,26499234,26501175,26503092,26505029,26506959,26508919,26510826,26512773,26514674,26516614,26518524,26520465,26522372,26524313,26526227,26528157,26530089,26532023,26533962,26535848,26537827,26539682,26541696,26543560,26545517,26547431,26549375,26551282,26553224,26555131,26557071,26558978,26560916,26562822,26564764,26566680,26568622,26570528,26572466,26574372,26576313,26578219,26580168,26582064,26584001,26585918,26587826,26589783,26591583,26593613,26595477,26597427,26599342,26601285,26603195,26605177,26607041,26608979,26610877,26612791,26614723,26616661,26618612,26620446,26622455,26624305,26626282,26628152,26630127,26631990,26633971,26635836,26637815,26639686,26641715,26643580,26645523,26647437,26649420,26651373,26653353,26655337,26657283,26659130,26661139,26662991,26664989,26666853,26668834,26670701,26672665,26674546,26676460,26678393,26680344,26682259,26684198,26686104,26688012,26689915,26691865,26693763,26695667,26697613,26699445,26701454,26703313,26705342,26707208,26709186,26711056,26712995,26714891,26716832,26718749,26720668,26722607,26724508,26726487,26728344,26730350,26732215,26734193,26736072,26738048,26739913,26741858,26743753,26745732,26747597,26749611,26751575,26753555,26755415,26757448,26759496,26761544,26763408,26765405,26767453,26769482,26771388,26773369,26775426,26777456,26779375,26781367,26783410,26785280,26787256,26789304,26791359,26793222,26795199,26797063,26799041,26800972,26802981,26804956,26806913,26808788,26810768,26812646,26814669,26816546,26818576,26820440,26822434,26824298,26826239,26828146,26830129,26832010,26834040,26836088,26837970,26840000,26842048,26843918,26845948,26847981,26849844,26851817,26853865,26855735,26857733,26859781,26861660,26863636,26865684,26867555,26869533,26871581,26873458,26875488,26877353,26879367,26881415,26883291,26885270,26887318,26889373,26891253,26893228,26895276,26897222,26899201,26901151,26903138,26905082,26907058,26908961,26910937,26912876,26914856,26916798,26918778,26920710,26922690,26924544,26926519,26928384,26930359,26932224,26934216,26936081,26938065,26939935,26941910,26943789,26945765,26947625,26949634,26951574,26953552,26955480,26957459,26959381,26961361,26963216,26965246,26967122,26969152,26971028,26973057,26974927,26976959,26978870,26980878,26982809,26984788,26986709,26988705,26990755,26992812,26994860,26996845,26998815,27000803,27002788,27004729,27006715,27008734,27010722,27012589,27014573,27016621,27018678,27020733,27022598,27024596,27026562,27028551,27030524,27032444,27034343,27036320,27038132,27040162,27042024,27043934,27045867,27047710,27049719,27051570,27053506,27055413,27057362,27059262,27061214,27063110,27065061,27066961,27068912,27070808,27072761,27074656,27076592,27078495,27080437,27082352,27084246,27086219,27088034,27090064,27091944,27093976,27095854,27097883,27099749,27101743,27103606,27105574,27107457,27109389,27111308,27113258,27115173,27117114,27119031,27120981,27122890,27124871,27126738,27128715,27130580,27132557,27134432,27136451,27138317,27140295,27142159,27144155,27146018,27147981,27149865,27151808,27153704,27155650,27157546,27159491,27161393,27163309,27165253,27167145,27169129,27170971,27173001,27174868,27176822,27178723,27180670,27182573,27184521,27186422,27188366,27190271,27192207,27194134,27196067,27198003,27199923,27201869,27203775,27205752,27207646,27209625,27211518,27213523,27215425,27217435,27219292,27221324,27223204,27225236,27227111,27229141,27231021,27233049,27234916,27236867,27238765,27240680,27242614,27244541,27246498,27248423,27250386,27252267,27254241,27256134,27258142,27260008,27262038,27263918,27265897,27267767,27269734,27271616,27273559,27275466,27277404,27279306,27281247,27283164,27285092,27287029,27288926,27290903,27292804,27294786,27296754,27298731,27300671,27302617,27304530,27306507,27308438,27310396,27312320,27314283,27316201,27318158,27319986,27321991,27324039,27325904,27327881,27329895,27331841,27333717,27335697,27337650,27339637,27341587,27343550,27345472,27347418,27349248,27351256,27353113,27355063,27356968,27358852,27360838,27362667,27364612,27366510,27368413,27370359,27372352,27374350,27376314,27378187,27380169,27382155,27384101,27386018,27387979,27389958,27391848,27393782,27395692,27397597,27399543,27401499,27403414,27405401,27407265,27409217,27411124,27413019,27414979,27416905,27418851,27420771,27422735,27424647,27426624,27428527,27430504,27432478,27434437,27436346,27438323,27440263,27442224,27444071,27446080,27448044,27450021,27451905,27453887,27455846,27457829,27459679,27461696,27463558,27465492,27467397,27469279,27471261,27473167,27475150,27477003,27478979,27480841,27482776,27484689,27486609,27488546,27490445,27492431,27494259,27496236,27498104,27500134,27502126,27504088,27506086,27507947,27509918,27511780,27513719,27515615,27517601,27519481,27521509,27523557,27525418,27527390,27529269,27531302,27533350,27535398,27537438,27539357,27541311,27543214,27545197,27547245,27549107,27551085,27553074,27555033,27556965,27558915,27560908,27562769,27564741,27566789,27568824,27570748,27572741,27574789,27576651,27578594,27580500,27582485,27584335,27586310,27588174,27590166,27592028,27593955,27595871,27597794,27599731,27601649,27603599,27605596,27607644,27609669,27611571,27613518,27615414,27617398,27619278,27621306,27623178,27625207,27627218,27629151,27631083,27633017,27634946,27636879,27638884,27640932,27642941,27644878,27646830,27648735,27650674,27652580,27654561,27656423,27658395,27660266,27662316,27664184,27666179,27668059,27670088,27672076,27674039,27675993,27677910,27679899,27681753,27683784,27685832,27687722,27689697,27691568,27693539,27695401,27697337,27699245,27701207,27703100,27705077,27707022,27709002,27710898,27712908,27714872,27716849,27718789,27720735,27722640,27724602,27726521,27728484,27730480,27732347,27734319,27736367,27738243,27740205,27742087,27744062,27746072,27748018,27750011,27751873,27753835,27755702,27757674,27759545,27761483,27763379,27765324,27767234,27769154,27771091,27773087,27774955,27776926,27778797,27780768,27782630,27784603,27786465,27788429,27790301,27792240,27794138,27796042,27797988,27799946,27801853,27803835,27805784,27807763,27809815,27811724,27813733,27815786,27817805,27819736,27821737,27823758,27825691,27827693,27829741,27831611,27833641,27835661,27837594,27839598,27841464,27843442,27845307,27847286,27849280,27851240,27853236,27855284,27857148,27859146,27861194,27863158,27865136,27867188,27869133,27871112,27873164,27875028,27877017,27879030,27880970,27882965,27884838,27886817,27888844,27890746,27892696,27894597,27896548,27898443,27900376,27902282,27904177,27906135,27907960,27909965,27911832,27913790,27915686,27917602,27919540,27921503,27923400,27925380,27927269,27929300,27931308,27933246,27935195,27937115,27939079,27940971,27942889,27944821,27946816,27948761,27950741,27952793,27954660,27956673,27958535,27960507,27962539,27964434,27966413,27968461,27970323,27972301,27974349,27976212,27978193,27980241,27982113,27984088,27986125,27988019,27989999,27991099,27992231,27993376,27994525,27995496,27996472,27998390,28000078,28001932,28003716,28005582,28007172,28008376,28009695,28011670,28013718,28015766,28016813,28016847,28016881,28016915,28016949,28016983,28017017,28017051,28017238,28018131,28019100,28020171,28021274,28022342,28023288,28024166,28024895,28025841,28026790,28027788,28028705,28029765,28030653,28031634,28032762,28033738,28034807,28035831,28036758,28037643,28038494,28039342,28040344,28041461,28042371,28043294,28044129,28045030,28045999,28046907,28047820,28048830,28049700,28050451,28051322,28052396,28053602,28054560,28055511,28056858,28058142,28059411,28060637,28061927,28063194,28064670,28065964,28067475,28068869,28070275,28071283,28072165,28073227,28074251,28075157,28076128,28077179,28078190,28079091,28080235,28081222,28082359,28083386,28084427,28085515,28086609,28087643,28088719,28089904,28091095,28092200,28093445,28094775,28096055,28097148,28098061,28098408,28099185,28100091,28101209,28102290,28103363,28104348,28104870,28106122,28107667,28109188,28110505,28111967,28113281,28114678,28116011,28117084,28118229,28119418,28120331,28122110,28123403,28124752,28126034,28127240,28128435,28129657,28130804,28132038,28133517,28134964,28136345,28137640,28138948,28140175,28141486,28142956,28144491,28146147,28147717,28149294,28150905,28152440,28154003,28155599,28157110,28158640,28160133,28161593,28162982,28164356,28165716,28167311,28169365,28171413,28173461,28175509,28177557,28179605,28181660,28183708,28185756,28187804,28189852,28191900,28193948,28195996,28198044,28200092,28202140,28204188,28206236,28208284,28210332,28212380,28214428,28216476,28218524,28220572,28222620,28224668,28226716,28228764,28230812,28232860,28234908,28236956,28239004,28241052,28243100,28245148,28247196,28249244,28251292,28253340,28255388,28257436,28259484,28261532,28263580,28265628,28267676,28269724,28271772,28273820,28275868,28277916,28279964,28282012,28284060,28286108,28288156,28290204,28292252,28294300,28296348,28298396,28300444,28302492,28304540,28306588,28308636,28310684,28312732,28314780,28316828,28318876,28320924,28322972,28325020,28327068,28329116,28331164,28333212,28335260,28337308,28339356,28341404,28343452,28345500,28347548,28349596,28351068,28352425,28353865,28355245,28356596,28357985,28359432,28360897,28362392,28364051,28365708,28367228,28368678,28370103,28371392,28372946,28374613,28376336,28378092,28379737,28381383,28382899,28384331,28385902,28387547,28389192,28390852,28392501,28394082,28395632,28397065,28398656,28400634,28402689,28404744,28406735,28408783,28410792,28412814,28414862,28416880,28418901,28420949,28422943,28424984,28427032,28429054,28431102,28433150,28435188,28437243,28439291,28441320,28443278,28445204,28447252,28449295,28451210,28452737,28454324,28455936,28457497,28459069,28460656,28461441,28461680,28461886,28462116,28462330,28462602,28463297,28463539,28463752,28463974,28464193,28464412,28465579,28466817,28468152,28469398,28470560,28471683,28472915,28474083,28475352,28476543,28477726,28478922,28480032,28481143,28481601,28481760,28483430,28484759,28486631,28488680,28490714,28492762,28494208,28495086,28497134,28499182,28501230,28503278,28505326,28507374,28508821,28509702,28511750,28513798,28515846,28517894,28519942,28521990,28524038,28525487,28526362,28528413,28530461,28532509,28534557,28536605,28538653,28540070,28541017,28543065,28545113,28547161,28549209,28551257,28553305,28555353,28557401,28559449,28561497,28563212,28564369,28565388,28565469,28565893,28567910,28569958,28572006,28574054,28576102,28578150,28580198,28582246,28584294,28586342,28588393,28590441,28592489,28594537,28596585,28598624,28600672,28602720,28604768,28606816,28608873,28610929,28612977,28615025,28617073,28619121,28621168,28623095,28625143,28627191,28629239,28631287,28633335,28635390,28637438,28639486,28641542,28643590,28645638,28647686,28649734,28651782,28653830,28655878,28657926,28659974,28662022,28664067,28666115,28668163,28670211,28672259,28674291,28676339,28678387,28680435,28682483,28684531,28686564,28688612,28690660,28692708,28694721,28696757,28698805,28700829,28702877,28704925,28706957,28709005,28711030,28713027,28715075,28717109,28719166,28721201,28723249,28725297,28727331,28729379,28731427,28733475,28735529,28737577,28739633,28741689,28743737,28745640,28746549,28748603,28750656,28752704,28754152,28755027,28756974,28759028,28761076,28763074,28765122,28767170,28769218,28771266,28773314,28775362,28777418,28779475,28781523,28783571,28785619,28787667,28789715,28791763,28793798,28795846,28797899,28799947,28801995,28804043,28806092,28808107,28810155,28812166,28814214,28816262,28818319,28820332,28822380,28824316,28826364,28828400,28830448,28832481,28834529,28836551,28838541,28840589,28842622,28844670,28846702,28848750,28850662,28852719,28854754,28856802,28858837,28860885,28862818,28864866,28866917,28868965,28871017,28873073,28875074,28877076,28879124,28881140,28883188,28885229,28887265,28889309,28891357,28893414,28895462,28897510,28899558,28901606,28903661,28905709,28907741,28909789,28911812,28913846,28915894,28917942,28919990,28922007,28924055,28926103,28928151,28930201,28932249,28934297,28936345,28938393,28940441,28942489,28944545,28946579,28948616,28950664,28952712,28954760,28956808,28958856,28960872,28962892,28964899,28966937,28968978,28971026,28973069,28975117,28977141,28979138,28981186,28983211,28985259,28987284,28989341,28991266,28993314,28995359,28997407,28999454,29001502,29003430,29005478,29007524,29009572,29011620,29013668,29015647,29017637,29019685,29021713,29023761,29025777,29027808,29029760,29031808,29033838,29035886,29037919,29039967,29041877,29043933,29045977,29048034,29050078,29052135,29054051,29055475,29055610,29055745,29056625,29058673,29060407,29060574,29061452,29063497,29064940,29066080,29068056,29070036,29072069,29074082,29076136,29078150,29078408,29079282,29081330,29082707,29083643,29085677,29087403,29087539,29088419,29090451,29091789,29091920,29092057,29092484,29092768,29093642,29095690,29096355,29096489,29096626,29097067,29097248,29097702,29098716,29099615,29100479,29101384,29102360,29103287,29104156,29104961,29105885,29106776,29107674,29108479,29109502,29110622,29111530,29112471,29113481,29114273,29115355,29116465,29117557,29118523,29119666,29120584,29121432,29122611,29123694,29124791,29125896,29126529,29127161,29127546,29128374,29129612,29130567,29131569,29132020,29132365,29132711,29133137,29133519,29133990,29134525,29135151,29135609,29137097,29138342,29139311,29140279,29141575,29143024,29144599,29146096,29147435,29148819,29150094,29151659,29153087,29154310,29155418,29156657,29158150,29159560,29161143,29162678,29164044,29165294,29166478,29167826,29169244,29170714,29172258,29173720,29174857,29176064,29177520,29178941,29180503,29182090,29183400,29184560,29185746,29187274,29188699,29190269,29191806,29193034,29194152,29195373,29196879,29198368,29199921,29201386,29202682,29203916,29205309,29206626,29208003,29208651,29209208,29209756,29210453,29211053,29211686,29212289,29213228,29214181,29215046,29215761,29216568,29217494,29218327,29219080,29219898,29220832,29221656,29222321,29222781,29223535,29224111,29225003,29225819,29226540,29227367,29228045,29228929,29229447,29230157,29230767,29231212,29231944,29232684,29233397,29234138,29234897,29235561,29236161,29236771,29237369,29238000,29238519,29239037,29239709,29240159,29240581,29241158,29241722,29242370,29243417,29243866,29244305,29245805,29246955,29248257,29249691,29251276,29252647,29253858,29255132,29256281,29257527,29258588,29259980,29261227,29262440,29263887,29265042,29266191,29267314,29268403,29269832,29270698,29272254,29273239,29274116,29275022,29276580,29277538,29278485,29279330,29280308,29281210,29282424,29283283,29284382,29285396,29286456,29287235,29288108,29289081,29289913,29290879,29291918,29292845,29293829,29294963,29296036,29297004,29298114,29298968,29299637,29300707,29301670,29302779,29303888,29304589,29305566,29306635,29307206,29307792,29308273,29308752,29309517,29310171,29310784,29311723,29312448,29313091,29313742,29314411,29315238,29316011,29317094,29318024,29319158,29319991,29320497,29321376,29322215,29323003,29323860,29324497,29325253,29326021,29326391,29326825,29327387,29328179,29328893,29329834,29330638,29331747,29332363,29333232,29334050,29334863,29335769,29336649,29337485,29338385,29339249,29340126,29340969,29341809,29342771,29343481,29344327,29345171,29346074,29346867,29347836,29348493,29349316,29350483,29351287,29352129,29352649,29353470,29354383,29355234,29356059,29356893,29357614,29358399,29359257,29360118,29360973,29361804,29362620,29363153,29363901,29364490,29365226,29365780,29366630,29366986,29367654,29368385,29369097,29369675,29370699,29371101,29372447,29373155,29373923,29375517,29377268,29379087,29380857,29382871,29384750,29386798,29388846,29390901,29392645,29394014,29395712,29397497,29399546,29401589,29403465,29405271,29407319,29409198,29410953,29413003,29415051,29417099,29419062,29420891,29422834,29424757,29426532,29428561,29430566,29432366,29434275,29435576,29436730,29437319,29437963,29438455,29440286,29442342,29444280,29445840,29447232,29448479,29449625,29450947,29452961,29454775,29456015,29457287,29458392,29459516,29461200,29462668,29464051,29465085,29465589,29465731,29466181,29468213,29470261,29472309,29474357,29476405,29478453,29480501,29482549,29484597,29486645,29488693,29490750,29492798,29494834,29496756,29498127,29500175,29502223,29504271,29506319,29508367,29510415,29512471,29514528,29515125,29515241,29517262,29519293,29521341,29523398,29525382,29526722,29528645,29530647,29532681,29534664,29536664,29538712,29540760,29542808,29544856,29546884,29548744,29550792,29552826,29554757,29556814,29558829,29560878,29562926,29564962,29567013,29569066,29571099,29572893,29574356,29576094,29577982,29580030,29582078,29584126,29586174,29588222,29590270,29592318,29594366,29596236,29598285,29599386,29600369,29601562,29602844,29604089,29605347,29607006,29608477,29609458,29610944,29612108,29613439,29614489,29615595,29616666,29617657,29618816,29620199,29621914,29623800,29625709,29627606,29629509,29631394,29632904,29634639,29636339,29637823,29639594,29641092,29642246,29643219,29644337,29645529,29647169,29648337,29649364,29650402,29651526,29652765,29653788,29654833,29656143,29657333,29658680,29659726,29661660,29663702,29665750,29667730,29669784,29671755,29673803,29675790,29677838,29679871,29681846,29683889,29685900,29687948,29689980,29691965,29694013,29696046,29698014,29700050,29702091,29704139,29706171,29708150,29710198,29712246,29714219,29716267,29718324,29720294,29722342,29724390,29726362,29728410,29730448,29732460,29734496,29736544,29738518,29740561,29742559,29744607,29746634,29748614,29750662,29752626,29754677,29756725,29758773,29760830,29762793,29764841,29766898,29768946,29770994,29773042,29775098,29777146,29779194,29781209,29783259,29785307,29787355,29789403,29791451,29793499,29795547,29797595,29799643,29801691,29803593,29805641,29807689,29809737,29811785,29813833,29815881,29817929,29819977,29821876,29823924,29825972,29828020,29830068,29832116,29834164,29836212,29838106,29840154,29842202,29844250,29846298,29848346,29850394,29852297,29854345,29856393,29858441,29860489,29862537,29864585,29866604,29868561,29870609,29872657,29874714,29876762,29878810,29880858,29882906,29884803,29886851,29888899,29890947,29892995,29895043,29897091,29899139,29901187,29903235,29905162,29906606,29908341,29909562,29911272,29912699,29914335,29916072,29917845,29919551,29921215,29922657,29924173,29925786,29927421,29929110,29930883,29932604,29934310,29935729,29937766,29939529,29940638,29942276,29943521,29944936,29946066,29947172,29948819,29950487,29952225,29953907,29955594,29957228,29959123,29961059,29963110,29965158,29966452,29967601,29968747,29970005,29971175,29972297,29973501,29974443,29975720,29977365,29978790,29980320,29981639,29983114,29984463,29985929,29987454,29988989,29990767,29992396,29994039,29995628,29997123,29998705,30000381,30002192,30004123,30005891,30007647,30009541,30011348,30013217,30014922,30016724,30018540,30020297,30021515,30023326,30025201,30026695,30027722,30029187,30030773,30032456,30033644,30035233,30036887,30038323,30039823,30041287,30043142,30044708,30046374,30048199,30049589,30050137,30050974,30052444,30053637,30054895,30056225,30057569,30059427,30061061,30062527,30064095,30065631,30067000,30068409,30070156,30071887,30073848,30075803,30077244,30078962,30080859,30082640,30084452,30086242,30088082,30089892,30091599,30093385,30094924,30096731,30098396,30100241,30101933,30103357,30104783,30106204,30107742,30109234,30110659,30111845,30113281,30114815,30116495,30118150,30119675,30121269,30122843,30123967,30125534,30127199,30128780,30130305,30131787,30133321,30134845,30136361,30137895,30139415,30140896,30141736,30142505,30143121,30143793,30144469,30145114,30145770,30146395,30147089,30147723,30148339,30148992,30149761,30150377,30151091,30151783,30152537,30153211,30153962,30154748,30155522,30156068,30156667,30157201,30157831,30158452,30158704,30159154,30159630,30160152,30162171,30164202,30166029,30167760,30169497,30171200,30172872,30174549,30176227,30177944,30179644,30181333,30183028,30184743,30186428,30188352,30190326,30192118,30193855,30195599,30197223,30198878,30200602,30202383,30204084,30205840,30207081,30208111,30209134,30211086,30212879,30214732,30216396,30218220,30219850,30221338,30222822,30224310,30225789,30227252,30228733,30230232,30231725,30232718,30233336,30233888,30234500,30235153,30235700,30236259,30236867,30237473,30238033,30238661,30239240,30239878,30240382,30240846,30241113,30241620,30242183,30242563,30242906,30243427,30243949,30244304,30244794,30245073,30246075,30248038,30249900,30251557,30253232,30254888,30256566,30258241,30259905,30261593,30263275,30264968,30266649,30268436,30270421,30272027,30273797,30275527,30277200,30278944,30280633,30282330,30283146,30283899,30284679,30286573,30288400,30290184,30291751,30293534,30295305,30296839,30298364,30299847,30301368,30302857,30304341,30305840,30307347,30308847,30310333,30311844,30313339,30314825,30316327,30317828,30319332,30320838,30322345,30323849,30325321,30326665,30327258,30327511,30328077,30328674,30329369,30329877,30330447,30331076,30331665,30331931,30332481,30332936,30333368,30333812,30334347,30334659,30335063,30335709,30336292,30336910,30337516,30338182,30338800,30339478,30340105,30340600,30341312,30341740,30342243,30342485,30343098,30343480,30343859,30344148,30344630,30345114,30345496,30345983,30346567,30347040,30347503,30348014,30348550,30349121,30349741,30350092,30350531,30351021,30351410,30352018,30352466,30352709,30353093,30353632,30354029,30354529,30354956,30355226,30355666,30356730,30358722,30360741,30362762,30364759,30366790,30368667,30370363,30372060,30373750,30375470,30377165,30378869,30380586,30382300,30383961,30385653,30387332,30388996,30390666,30392352,30394051,30395776,30397456,30399162,30400861,30402565,30404251,30405928,30407625,30409313,30410994,30412681,30414514,30416562,30418610,30420570,30422228,30423935,30425649,30427372,30429032,30430751,30432438,30434121,30435798,30437382,30439136,30440870,30442565,30444242,30445961,30447651,30449284,30451042,30452765,30454439,30455785,30456742,30457843,30458858,30460268,30462031,30463657,30465382,30467050,30468742,30470065,30471163,30472178,30473962,30475798,30477619,30479471,30481275,30482734,30484307,30485791,30487306,30488836,30490329,30491787,30493303,30494803,30496288,30497782,30498301,30498890,30499295,30499757,30500168,30500589,30501120,30501497,30502160,30502809,30503356,30503916,30504442,30505021,30505547,30505755,30506058,30506186,30506505,30507000,30507660,30508157,30508687,30509134,30509642,30510004,30510547,30510993,30511148,30511483,30512712,30514748,30516748,30518510,30520229,30521943,30523653,30525339,30527032,30528721,30530397,30532083,30533800,30535531,30537202,30538887,30540773,30542821,30544537,30546191,30547964,30549678,30551425,30553094,30554780,30556571,30558336,30560031,30561516,30562440,30563773,30565061,30566700,30568443,30570219,30571737,30573289,30574779,30576275,30577772,30579253,30580742,30582236,30583723,30585185,30586690,30587438,30587799,30588214,30588518,30589063,30589633,30589887,30590123,30590463,30590828,30590986,30591392,30591702,30592181,30592319,30592454,30592811,30593035,30593349,30593638,30594117,30594504,30594775,30595270,30595888,30596433,30596859,30597154,30597705,30598239,30599876,30601874,30603930,30605656,30607355,30609046,30610733,30612414,30614108,30615788,30617451,30619172,30620860,30622576,30624300,30626006,30627966,30630022,30631822,30633567,30635353,30637122,30638868,30640496,30642380,30644148,30645904,30647747,30649595,30650608,30651388,30652498,30654065,30655631,30657249,30658916,30660710,30662279,30663785,30665277,30666769,30668273,30669751,30671000,30671448,30671796,30672137,30672517,30673012,30673162,30673559,30674035,30674448,30674837,30675091,30675567,30675853,30676105,30676404,30676887,30677903,30679863,30681687,30683383,30685084,30686754,30688422,30690122,30691799,30693530,30695498,30697305,30699057,30700694,30702406,30704156,30705984,30707786,30708686,30710146,30711390,30713105,30714751,30716306,30717832,30719306,30720798,30722287,30723767,30725274,30726780,30728299,30729822,30730240,30730810,30731389,30732007,30732517,30733073,30733678,30734222,30734844,30735289,30735884,30736526,30737219,30737740,30738324,30738871,30739458,30739972,30740583,30741057,30741509,30741919,30742503,30742928,30743301,30743626,30744196,30745037,30747022,30749049,30750879,30752587,30754265,30755938,30757600,30759297,30761005,30762695,30764409,30766085,30767770,30769423,30771218,30773266,30775105,30776866,30778565,30780255,30782032,30783799,30785609,30787358,30789112,30790549,30791401,30792214,30793218,30794462,30795749,30796926,30798317,30799722,30801390,30802970,30804596,30806172,30807612,30809115,30810606,30812109,30813607,30815088,30816580,30818062,30819550,30821064,30822598,30824067,30825551,30827052,30828597,30829847,30830293,30830672,30831072,30831383,30831636,30832087,30832540,30832888,30833133,30833673,30834152,30834624,30835046,30835402,30835764,30836159,30836662,30837028,30837444,30837748,30837869,30838067,30838484,30838709,30838956,30839071,30839179,30839526,30839922,30840227,30840573,30840819,30841252,30841432,30841840,30842207,30842571,30842910,30843206,30843644,30844016,30844511,30844675,30845046,30845412,30845746,30846152,30846539,30846834,30847266,30847684,30848684,30850672,30852611,30854575,30856580,30858390,30860058,30861713,30863386,30865064,30866750,30868442,30870117,30871786,30873518,30875208,30876879,30878553,30880229,30881891,30883560,30885227,30886898,30888592,30890241,30891908,30893590,30895286,30897066,30899114,30901162,30902856,30904431,30906069,30907681,30909338,30910999,30912803,30914475,30916175,30917849,30919540,30921151,30922783,30924461,30926189,30927825,30929550,30930766,30931497,30932375,30933748,30935413,30936970,30938570,30939922,30941655,30943496,30945303,30947141,30948825,30950383,30951822,30953314,30954767,30956251,30957744,30959249,30960730,30962231,30963720,30965209,30966695,30968187,30969680,30971147,30972623,30973997,30974490,30975084,30975649,30976288,30976831,30977409,30977789,30978296,30978571,30978895,30979388,30979653,30980084,30980533,30981146,30981585,30981951,30982329,30982905,30983446,30984130,30984757,30985341,30985640,30986197,30986683,30987188,30987775,30988444,30989040,30989691,30990232,30990436,30990527,30991093,30991732,30992379,30992907,30993538,30994150,30994739,30995368,30995993,30996547,30997154,30997737,30998289,30998873,30999482,30999956,31001652,31003646,31005604,31007590,31009509,31011204,31012878,31014572,31016228,31017908,31019605,31021290,31022972,31024673,31026380,31028091,31029805,31031526,31033219,31034935,31036636,31038334,31040038,31041722,31043431,31045161,31047086,31049134,31051159,31052891,31054626,31056326,31058090,31059886,31061649,31063385,31065158,31066975,31068769,31070555,31072337,31074100,31075876,31077573,31079380,31081173,31082188,31083070,31084095,31085016,31086092,31087067,31088252,31089508,31090778,31091788,31092781,31093739,31095093,31096914,31098625,31100452,31102300,31103878,31105554,31107175,31108671,31110165,31111678,31113190,31114680,31116186,31117689,31119177,31120669,31122172,31123684,31125175,31126669,31128139,31129625,31131088,31132566,31134045,31135546,31136776,31137365,31138013,31138678,31139249,31139877,31140437,31140966,31141640,31142246,31142834,31143460,31143990,31144539,31145065,31145662,31146144,31146531,31147036,31147620,31148083,31148756,31149244,31149854,31150440,31150823,31151279,31151875,31152311,31152871,31153447,31153785,31154359,31154869,31155383,31155928,31156429,31156824,31157323,31157840,31158411,31158882,31159464,31159957,31160280,31160727,31161206,31161595,31161877,31162375,31162710,31162990,31163299,31163671,31164083,31164563,31165053,31165444,31165716,31166284,31166739,31167010,31167361,31167727,31168212,31168582,31168885,31169189,31169786,31170328,31171346,31173394,31175442,31177496,31179552,31181600,31183648,31185388,31187106,31188837,31190569,31192308,31194037,31195747,31197466,31199199,31200918,31202629,31204332,31206079,31207796,31209544,31211293,31213006,31214734,31216460,31218192,31219923,31221641,31223374,31225113,31226843,31228577,31230314,31232059,31233780,31235516,31237223,31238965,31241004,31243052,31245100,31247148,31249099,31250832,31252640,31254491,31256350,31258200,31260035,31261812,31263620,31265377,31267135,31268948,31270770,31272552,31274382,31276182,31277966,31279735,31281577,31283379,31285206,31287064,31288911,31290738,31292608,31294440,31296259,31298118,31299941,31301702,31303514,31304433,31305283,31306148,31306909,31307724,31309056,31310319,31311889,31312920,31314167,31315711,31317075,31318104,31318976,31319796,31321056,31322253,31323796,31325035,31326827,31328648,31330430,31332062,31333738,31335379,31336972,31338557,31340154,31341721,31343274,31344772,31346252,31347781,31349308,31350860,31352390,31353878,31355409,31356902,31358412,31359922,31361441,31362967,31364504,31366034,31367499,31368991,31370509,31371997,31373529,31375046,31376545,31378031,31379522,31381041,31382530,31384009,31385484,31386995,31388504,31389111,31389776,31390369,31390879,31391476,31391946,31392339,31392996,31393758,31394372,31395001,31395635,31396317,31397018,31397566,31398186,31398819,31399494,31400200,31400862,31401558,31402139,31402811,31403552,31404255,31404839,31405516,31406164,31406783,31407462,31407979,31408144,31408654,31409253,31409893,31410571,31411009,31411685,31412385,31413044,31413532,31413957,31414564,31415022,31415572,31416113,31416612,31416855,31417181,31417377,31417897,31418464,31418718,31418841,31419027,31419706,31419907,31420506,31421046,31421634,31422266,31422831,31423403,31423997,31424577,31425101,31425757,31426351,31426945,31427542,31428107,31428632,31429099,31429675,31430146,31430650,31431153,31431875,31432451,31433017,31433533,31434108,31434608,31435155,31435734,31436047,31436620,31437000,31437534,31438134,31438709,31439273,31439762,31440465,31441062,31441661,31443479,31445510,31447554,31449559,31451557,31453505,31455474,31457526,31459326,31461027,31462690,31464336,31466012,31467725,31469421,31471124,31472808,31474530,31476249,31477953,31479654,31481334,31483047,31484742,31486446,31488130,31489831,31491514,31493225,31494945,31496646,31498333,31500049,31501722,31503438,31505148,31506846,31508532,31510231,31511944,31513632,31515342,31517042,31518729,31520427,31522104,31523807,31525490,31527150,31528799,31530847,31532895,31534943,31536991,31538835,31540564,31542247,31544025,31545729,31547469,31549257,31550956,31552606,31554293,31555998,31557708,31559442,31561218,31562918,31564697,31566520,31568239,31570007,31571706,31573501,31575215,31576928,31578690,31580423,31582189,31583951,31585676,31587459,31589117,31590853,31591829,31592876,31593827,31594873,31595975,31597023,31597972,31598945,31599991,31600819,31601439,31602139,31602826,31603561,31604411,31605291,31606240,31607171,31608050,31608973,31609954,31610828,31611665,31612410,31613240,31613988,31614931,31615643,31616392,31616985,31617280,31618111,31618806,31619540,31620712,31622374,31623128,31624864,31626589,31628251,31629983,31631799,31633644,31635484,31637170,31638875,31640467,31642059,31643666,31645254,31646740,31648264,31649788,31651301,31652782,31654276,31655801,31657301,31658793,31660335,31661863,31663341,31664827,31666320,31667826,31669322,31670834,31672328,31673849,31675343,31676855,31678356,31679850,31681353,31682866,31684379,31685903,31687420,31688942,31690468,31691995,31693481,31694969,31696469,31697986,31699504,31700994,31702525,31704045,31705523,31707032,31708548,31710059,31711551,31713059,31714573,31716105,31717596,31719115,31720027,31720706,31721384,31722097,31722761,31723570,31724225,31724893,31725420,31726090,31726840,31727621,31728301,31728985,31729703,31730101,31730641,31731339,31732002,31732755,31733463,31734116,31734871,31735518,31736185,31736606,31737095,31737820,31738497,31739084,31739613,31740375,31741092,31741793,31742507,31743180,31743681,31744378,31744955,31745634,31746300,31746912,31747569,31748170,31748661,31749024,31749648,31750285,31750635,31751360,31751926,31752594,31753308,31753862,31754483,31754960,31755598,31756342,31756992,31757613,31758168,31758826,31759457,31760113,31760662,31761314,31761857,31762496,31762924,31763473,31763963,31764597,31765236,31765931,31766586,31767279,31767906,31768541,31769162,31769842,31770567,31771312,31771993,31772783,31773438,31774113,31774882,31775623,31776339,31776955,31777684,31778380,31779120,31779816,31780477,31781208,31781815,31782493,31783141,31783718,31784268,31784516,31785163,31785757,31786316,31786958,31787561,31788151,31788693,31789210,31789927,31790313,31790900,31791280,31791926,31792480,31793193,31793810,31794335,31795071,31795774,31796411,31797043,31797657,31798317,31798924,31799565,31799995,31800750,31801214,31801739,31802369,31803137,31803696,31804328,31805017,31805508,31805959,31806430,31806795,31807354,31808030,31808680,31809361,31810034,31810625,31812248,31814234,31816225,31818188,31820161,31822127,31824123,31826145,31828111,31830133,31832095,31834121,31836155,31838066,31839796,31841520,31843235,31844949,31846645,31848328,31850017,31851732,31853431,31855115,31856789,31858462,31860181,31861903,31863616,31865306,31867021,31868722,31870407,31872092,31873794,31875470,31877176,31878855,31880554,31882287,31884014,31885699,31887395,31889083,31890787,31892511,31894242,31895988,31897734,31899456,31901184,31902930,31904662,31906360,31908059,31909748,31911441,31913138,31914812,31916501,31918208,31919908,31921594,31923295,31925002,31926725,31928405,31930076,31931775,31933532,31935262,31936991,31938730,31940457,31942187,31944014,31946062,31948110,31950158,31952206,31954254,31956302,31957841,31959456,31961163,31962926,31964673,31966400,31968159,31969869,31971641,31973445,31975127,31976838,31978534,31980209,31981944,31983668,31985366,31987166,31988882,31990542,31992150,31993863,31995616,31997354,31999096,32000887,32002559,32004284,32005974,32007679,32009420,32011170,32012774,32014539,32016338,32018120,32019832,32021552,32023190,32024884,32026646,32028392,32030178,32031692,32032715,32033748,32034738,32035716,32036788,32037774,32038735,32039707,32040691,32041521,32042722,32044338,32045716,32047307,32048939,32050538,32052113,32053668,32055293,32056921,32058463,32060269,32061669,32063143,32064743,32066059,32067332,32068577,32070176,32071261,32072664,32074247,32075899,32077102,32078501,32079963,32081174,32082481,32083727,32085205,32086696,32088264,32089741,32091244,32092927,32094574,32096186,32097651,32098980,32100523,32102036,32103625,32105232,32106705,32108117,32109689,32111290,32112898,32114330,32116217,32118023,32119894,32121799,32123715,32125597,32127453,32129243,32131006,32132874,32134670,32136528,32137994,32139478,32140951,32142446,32143936,32145432,32146923,32148401,32149898,32151392,32152359,32152896,32153311,32153850,32154354,32154707,32155243,32155737,32156148,32156516,32156837,32157389,32157836,32158378,32158808,32159324,32159877,32160095,32160513,32160835,32161264,32161639,32162030,32162368,32162797,32163038,32163323,32163815,32163984,32164377,32164739,32165257,32166778,32168724,32170751,32172490,32174183,32175889,32177594,32179299,32181017,32182704,32184405,32186097,32187794,32189463,32191141,32192812,32194481,32196153,32198201,32200194,32201912,32203666,32205402,32207164,32208934,32210662,32212424,32214199,32215958,32217678,32219361,32220804,32221610,32222433,32223462,32225018,32226401,32227777,32228996,32230591,32232251,32233993,32235517,32236968,32238500,32239997,32241464,32242921,32244422,32245924,32247421,32248906,32250318,32250860,32251399,32251854,32252341,32252711,32253408,32253955,32254535,32255062,32255654,32256168,32256623,32257054,32257425,32257707,32258190,32258619,32258993,32259360,32259754,32260106,32260563,32261105,32261470,32261829,32262339,32262642,32263278,32265300,32267333,32269129,32270824,32272516,32274232,32275966,32277687,32279421,32281135,32282825,32284530,32286222,32287936,32289615,32291595,32293626,32295199,32296987,32298836,32300689,32302468,32304276,32306048,32307880,32309656,32311425,32313198,32314481,32315147,32316104,32317710,32319331,32320919,32322313,32323957,32325674,32327379,32328921,32330532,32332074,32333581,32335059,32336558,32338030,32339521,32341013,32342507,32343994,32345448,32346935,32348405,32349902,32351357,32352823,32354297,32355799,32357276,32358749,32360240,32361701,32363160,32364634,32366110,32367611,32369054,32370534,32372022,32373510,32374993,32376472,32377964,32379468,32380963,32382445,32383930,32385444,32386031,32386697,32387270,32387928,32388634,32389312,32389981,32390534,32391136,32391688,32392292,32393004,32393583,32394175,32394758,32395399,32395969,32396585,32397125,32397703,32398375,32398995,32399572,32400165,32400755,32401405,32401974,32402553,32403173,32403756,32404200,32404697,32405182,32405864,32406476,32407005,32407566,32408098,32408580,32409150,32409676,32410258,32410820,32411488,32412046,32412425,32412752,32412951,32413364,32413805,32414059,32414572,32414986,32415365,32415852,32416415,32417092,32417638,32417866,32418027,32418388,32418636,32418802,32419007,32419468,32419851,32420390,32420853,32421329,32421874,32422517,32423023,32423555,32424126,32424756,32425350,32425849,32426358,32426777,32427266,32427900,32428426,32428917,32429494,32429927,32430184,32430772,32431228,32431721,32432181,32432468,32432679,32433147,32433738,32434390,32434911,32435468,32435852,32436337,32436978,32437596,32438083,32438606,32439288,32439902,32440493,32441032,32441489,32442117,32443390,32445394,32447442,32449419,32451390,32453373,32455326,32457274,32459252,32461296,32463040,32464756,32466474,32468187,32469887,32471596,32473303,32475007,32476689,32478384,32480073,32481775,32483439,32485156,32486860,32488575,32490256,32491942,32493619,32495325,32496999,32498633,32500302,32501950,32503640,32505319,32507002,32508693,32510371,32512048,32513724,32515387,32517076,32518761,32520456,32522126,32523812,32525479,32527171,32528851,32530546,32532233,32533923,32535580,32537229,32538896,32540677,32542725,32544773,32546821,32548869,32550712,32552474,32554152,32555868,32557584,32559286,32560964,32562751,32564506,32566332,32568068,32569801,32571486,32573200,32574893,32576505,32578214,32579902,32581598,32583341,32585065,32586803,32588523,32590248,32592027,32593700,32595396,32597034,32598728,32600435,32602214,32603838,32605456,32606485,32607418,32608283,32609160,32609984,32610916,32611821,32612697,32613563,32614584,32615824,32616900,32617847,32618939,32620030,32621446,32622635,32623832,32624929,32626137,32627504,32628761,32630004,32631276,32632832,32634221,32635712,32636714,32637932,32639183,32640292,32641065,32641764,32642743,32643351,32643700,32644362,32645415,32646471,32647665,32648674,32649865,32650779,32651376,32651892,32652909,32654066,32655617,32657260,32659102,32660971,32662817,32664738,32666685,32668601,32670529,32672427,32674054,32675608,32677088,32678578,32680083,32681586,32683072,32684567,32686019,32687509,32688998,32690485,32691997,32693219,32693693,32693958,32694381,32694923,32695423,32695787,32696325,32696952,32697506,32697650,32697919,32698149,32698448,32698793,32699124,32699596,32700070,32700491,32700963,32701279,32701594,32701985,32702505,32702838,32703220,32703588,32703930,32704278,32704719,32705009,32705359,32705759,32706169,32706498,32707119,32707770,32708523,32710502,32712490,32714523,32716348,32718056,32719725,32721403,32723097,32724789,32726489,32728194,32729877,32731546,32733259,32734964,32736675,32738357,32740063,32741767,32743609,32745657,32747499,32749218,32750913,32752615,32754368,32756184,32757968,32759692,32761420,32763212,32764978,32766715,32768481,32769845,32770549,32771402,32773011,32774719,32775994,32776592,32777446,32778587,32780288,32782121,32783889,32785457,32787081,32788582,32790068,32791576,32793065,32794581,32796079,32797387,32797958,32798565,32799158,32799742,32800168,32800730,32801265,32801665,32802097,32802601,32803012,32803381,32803678,32804029,32804417,32804906,32805374,32805625,32806059,32806631,32806798,32807128,32807768,32808388,32810337,32812353,32814060,32815764,32817468,32819164,32820877,32822563,32824224,32825910,32827604,32829304,32830990,32833032,32834844,32836625,32838467,32840215,32841954,32843669,32845407,32847177,32849014,32850002,32850789,32851940,32853540,32855062,32856645,32858037,32859642,32861318,32862788,32864257,32865621,32867091,32868581,32870059,32871557,32873014,32874503,32875976,32877460,32878954,32880458,32881934,32883424,32884918,32885732,32886227,32886690,32887276,32887878,32888345,32888907,32889387,32889844,32890523,32891049,32891565,32892125,32892775,32893167,32893485,32893953,32894489,32894814,32895223,32895760,32896174,32896618,32897109,32897390,32897621,32898015,32898713,32899326,32899985,32900569,32901161,32901618,32902254,32902765,32903042,32903619,32903985,32904559,32905104,32905631,32906012,32906553,32907023,32908181,32910164,32912192,32914193,32915986,32917672,32919365,32921085,32922769,32924438,32926123,32927791,32929478,32931209,32932906,32934560,32936229,32937961,32939676,32941389,32943095,32944828,32946529,32948260,32950313,32952361,32954135,32955847,32957551,32959286,32961061,32962727,32964428,32966112,32967771,32969486,32971283,32973070,32974749,32976514,32978292,32979685,32980603,32981454,32982410,32984147,32985686,32987025,32988588,32990110,32991570,32993310,32995163,32996927,32998551,33000000,33001435,33002937,33004451,33005948,33007412,33008907,33010388,33011875,33013350,33014821,33016304,33017801,33019284,33020743,33022236,33023268,33023751,33024330,33024938,33025513,33025888,33026382,33026982,33027605,33028139,33028527,33029003,33029389,33029886,33030184,33030582,33031051,33031535,33032045,33032548,33032987,33033451,33033961,33034385,33034710,33034894,33035120,33035342,33035890,33036345,33036598,33036789,33036914,33037174,33037529,33037757,33037961,33038445,33038965,33039258,33039826,33040109,33040427,33040784,33041114,33041494,33041984,33043270,33045234,33047100,33049092,33051031,33052729,33054404,33056094,33057776,33059467,33061146,33062866,33064572,33066250,33067899,33069561,33071230,33072939,33074628,33076293,33077945,33079639,33081302,33082974,33084641,33086507,33088555,33090607,33092371,33094085,33095794,33097583,33099280,33101091,33102781,33104425,33106114,33107812,33109546,33111135,33112822,33114594,33116333,33118091,33119399,33120144,33121019,33121851,33123456,33124728,33126108,33127543,33129019,33129930,33131257,33132921,33134658,33136346,33138028,33139636,33141241,33142730,33144265,33145764,33147273,33148777,33150288,33151743,33153228,33154717,33156191,33157695,33159217,33160704,33162192,33163696,33165192,33166666,33168113,33169605,33171106,33172628,33174151,33174762,33175351,33175975,33176343,33176737,33177231,33177776,33178326,33178904,33179351,33179875,33180382,33180938,33181345,33181477,33182082,33182644,33183146,33183606,33183973,33184295,33184490,33184759,33184935,33185498,33186035,33186608,33187164,33187696,33188191,33188646,33189089,33189481,33189875,33190472,33191006,33191579,33192020,33192453,33192966,33193230,33193565,33193911,33194051,33194216,33194683,33195241,33195861,33196413,33196792,33197166,33197606,33198041,33198376,33198734,33198988,33199173,33199637,33200033,33200416,33200862,33201275,33201736,33202000,33202485,33202842,33203388,33203861,33204445,33204887,33205737,33207771,33209810,33211804,33213808,33215852,33217841,33219486,33221132,33222825,33224534,33226211,33227929,33229641,33231337,33233028,33234698,33236378,33238077,33239781,33241494,33243203,33244895,33246556,33248226,33249904,33251605,33253335,33255021,33256727,33258431,33260087,33261762,33263466,33265180,33266896,33268630,33270331,33272219,33274267,33276315,33278363,33280015,33281584,33283358,33285134,33286880,33288656,33290395,33292144,33293846,33295563,33297329,33299046,33300788,33302530,33304210,33305944,33307679,33309531,33311251,33312928,33314628,33316353,33318115,33319853,33321699,33323516,33324552,33325360,33326123,33326910,33327463,33328354,33329394,33330247,33330902,33331886,33332901,33333867,33334664,33335312,33335671,33336351,33336526,33337468,33338804,33339571,33340690,33342234,33343934,33345723,33347476,33349263,33350968,33352606,33354271,33355734,33357231,33358701,33360179,33361672,33363164,33364633,33366091,33367577,33368221,33368726,33369230,33369740,33370026,33370523,33371091,33371403,33371916,33372461,33372853,33373287,33373732,33374124,33374428,33374758,33375280,33375640,33376239,33376799,33377322,33377889,33378384,33378983,33379490,33379994,33380544,33380999,33381875,33383883,33385903,33387763,33389451,33391148,33392831,33394482,33396184,33397886,33399599,33401312,33403018,33404710,33406392,33408098,33410131,33412057,33413767,33415480,33417237,33419076,33420845,33422670,33424445,33426194,33427999,33429326,33430210,33431049,33432000,33433101,33434228,33435506,33437165,33438862,33440476,33442052,33443654,33445167,33446682,33448184,33449668,33451159,33452649,33454118,33455611,33457105,33458583,33460057,33461532,33463032,33464532,33466009,33467494,33468655,33469277,33469922,33470428,33471025,33471633,33472248,33472856,33473501,33474160,33474626,33475281,33475878,33476363,33477035,33477429,33477931,33478514,33479043,33479608,33480103,33480687,33481293,33481747,33482248,33482793,33483203,33483617,33484113,33484594,33485110,33485692,33485925,33486346,33486817,33487286,33487657,33488192,33488689,33489207,33489841,33490366,33490956,33491518,33491949,33492376,33492905,33493422,33493996,33494659,33495039,33495615,33496215,33496831,33497430,33498473,33500525,33502566,33504617,33506631,33508520,33510227,33511935,33513656,33515362,33517075,33518779,33520477,33522156,33523859,33525534,33527250,33528914,33530655,33532367,33534068,33535765,33537464,33539153,33540822,33542484,33544193,33545904,33547619,33549427,33551475,33553523,33555367,33557091,33558884,33560548,33562285,33563951,33565712,33567513,33569312,33571136,33572953,33574634,33576377,33578074,33579900,33581658,33583391,33584553,33585288,33586109,33586901,33587665,33589202,33591011,33592347,33593691,33595442,33597138,33598688,33599682,33601342,33603191,33605037,33606787,33608586,33610215,33611827,33613273,33614802,33616272,33617754,33619249,33620730,33622211,33623700,33625170,33626640,33628151,33629636,33631089,33632587,33634080,33635576,33637111,33638606,33640111,33641593,33643086,33644598,33645638,33646024,33646177,33646425,33646735,33647169,33647701,33648170,33648568,33649068,33649546,33650201,33650723,33651004,33651490,33651877,33652339,33652633,33652983,33653517,33654099,33654547,33654918,33655221,33655313,33655891,33656061,33656376,33656869,33657382,33657983,33658577,33659101,33659475,33660060,33660566,33660830,33661202,33661725,33662084,33662668,33663290,33663787,33664378,33664772,33664954,33665146,33665512,33665961,33666319,33666783,33667295,33667883,33668433,33669011,33669652,33670167,33670713,33671238,33671627,33671945,33672403,33672848,33673097,33673381,33673747,33674154,33674616,33674921,33675392,33675997,33677984,33680028,33682034,33684047,33686102,33687983,33689655,33691352,33693063,33694751,33696402,33698081,33699767,33701409,33703097,33704789,33706475,33708156,33709846,33711551,33713257,33714932,33716659,33718363,33720028,33721718,33723413,33725114,33726798,33728504,33730216,33731906,33733598,33735304,33736943,33738663,33740685,33742733,33744781,33746646,33748307,33750051,33751830,33753511,33755258,33756864,33758618,33760374,33762050,33763795,33765567,33767366,33769140,33770959,33772649,33774392,33776099,33777709,33779474,33781164,33782820,33784332,33786156,33787010,33787916,33788674,33789476,33790328,33791062,33791876,33792743,33793635,33794590,33795675,33796731,33797728,33798476,33799381,33800232,33801376,33802498,33803541,33804598,33805704,33806732,33807771,33808815,33809707,33809933,33810249,33811509,33812768,33814429,33816282,33818102,33819945,33821763,33823456,33824967,33826487,33828020,33829531,33831020,33832516,33834002,33835510,33837013,33838497,33840015,33841434,33841804,33842171,33842377,33842675,33843096,33843464,33843844,33844298,33844729,33845234,33845659,33846153,33846446,33846905,33847240,33847648,33848088,33848322,33848685,33849006,33849426,33849812,33850186,33850606,33851034,33851256,33851558,33851774,33852110,33852408,33852819,33853279,33853476,33853739,33854015,33855138,33857130,33859094,33861005,33862687,33864379,33866094,33867776,33869461,33871145,33872813,33874501,33876169,33877857,33879552,33881229,33882896,33884584,33886262,33888229,33890277,33892082,33893798,33895595,33897296,33898993,33900734,33902470,33904200,33905950,33907731,33909411,33911092,33912729,33913972,33914781,33915724,33917267,33918829,33920475,33922365,33924269,33926007,33927528,33929091,33930572,33932077,33933579,33935078,33936590,33938099,33939594,33941089,33942590,33944082,33945575,33947088,33948603,33950119,33951616,33953097,33954592,33956090,33957601,33959101,33960579,33962078,33963584,33965058,33966565,33968082,33969591,33971058,33972566,33974083,33975579,33977046,33978517,33979262,33979739,33980292,33980818,33981252,33981808,33982370,33982948,33983579,33984219,33984878,33985403,33985868,33986355,33986916,33987377,33987817,33988361,33988934,33989571,33990163,33990780,33991355,33991936,33992454,33992902,33993373,33993961,33994582,33995143,33995417,33995963,33996393,33996929,33997436,33997943,33998432,33998951,33999460,34000034,34000576,34001033,34001636,34002038,34002396,34002811,34003165,34003627,34003992,34004362,34004595,34005099,34005504,34005862,34006427,34006847,34007439,34008036,34008554,34008828,34009415,34010015,34010651,34011266,34011839,34012416,34012771,34013338,34013824,34014344,34014834,34015220,34015702,34016242,34016556,34017055,34017542,34018071,34018458,34018829,34019274,34019777,34020306,34020712,34021238,34021823,34022323,34022728,34022995,34023485,34024071,34024403,34024775,34024907,34025148,34025497,34026084,34026417,34026796,34027295,34027571,34027784,34028093,34028539,34028908,34029240,34029587,34029979,34030233,34030707,34031099,34031365,34032000,34034049,34036073,34038129,34040112,34042094,34044128,34046130,34048151,34050206,34052176,34053911,34055647,34057409,34059130,34060830,34062527,34064231,34065922,34067618,34069307,34070977,34072690,34074383,34076112,34077816,34079536,34081265,34082976,34084680,34086373,34088055,34089738,34091444,34093183,34094905,34096595,34098272,34099933,34101600,34103295,34105009,34106687,34108336,34110008,34111693,34113382,34115068,34116787,34118499,34120240,34121994,34123738,34125482,34127163,34128862,34130583,34132278,34133960,34135610,34137292,34139063,34141111,34143159,34145207,34147255,34149303,34151107,34152842,34154627,34156392,34158076,34159819,34161470,34163184,34164817,34166453,34168215,34169932,34171653,34173439,34175158,34176855,34178569,34180300,34181997,34183664,34185317,34186908,34188527,34190307,34192030,34193668,34195362,34197032,34198638,34200339,34202035,34203794,34205581,34207243,34209007,34210709,34212297,34213926,34215342,34216139,34216992,34217783,34218630,34219452,34220188,34220990,34221725,34222838,34223831,34224905,34225970,34226874,34227531,34228271,34229156,34230178,34231026,34231845,34232561,34233522,34234379,34235096,34235730,34236474,34237284,34238207,34238988,34239840,34240914,34241994,34243293,34244351,34245523,34246678,34247797,34249306,34250826,34252756,34254555,34256366,34258248,34260090,34261917,34263799,34265636,34267266,34268879,34270433,34271967,34273508,34275026,34276525,34278054,34279574,34281079,34282579,34284069,34285591,34287096,34288606,34290069,34291572,34292593,34293159,34293897,34294519,34295026,34295633,34296203,34296843,34297315,34297790,34298267,34298786,34299389,34300170,34300703,34301482,34302156,34302820,34303482,34303988,34304781,34305449,34305896,34306610,34307256,34307767,34308264,34308919,34309495,34310215,34310874,34311338,34311868,34312395,34312703,34313009,34313361,34313969,34314573,34315186,34315862,34316409,34316998,34317518,34318042,34318617,34319323,34321378,34323433,34325466,34327516,34329230,34330962,34332703,34334440,34336161,34337885,34339615,34341354,34343062,34344799,34346549,34348277,34349983,34351699,34353418,34355109,34356804,34358536,34360271,34361998,34363714,34365770,34367818,34369837,34371600,34373445,34375315,34377168,34379005,34380881,34382699,34384572,34386421,34388279,34390109,34391926,34393696,34395500,34397227,34399048,34400864,34402677,34404446,34405418,34406428,34407332,34408233,34409529,34410836,34411981,34413221,34414136,34415295,34416215,34417279,34418315,34419796,34421119,34422657,34424332,34426046,34427668,34429289,34430818,34432338,34433832,34435323,34436824,34438297,34439770,34441241,34442733,34444262,34445788,34447260,34448725,34450200,34451701,34453172,34454649,34456115,34457581,34459060,34460519,34461988,34463486,34464952,34466415,34467907,34469341,34469916,34470421,34471018,34471515,34471992,34472489,34472995,34473496,34474021,34474427,34474862,34475277,34475562,34475936,34476159,34476709,34477020,34477606,34478012,34478445,34478795,34479225,34479682,34480238,34480753,34481247,34481734,34482268,34482804,34483259,34483664,34484066,34484548,34484748,34485105,34485464,34485865,34486437,34486867,34487132,34487616,34488153,34488648,34489146,34489580,34489938,34490288,34490655,34491216,34491728,34492081,34492473,34492804,34493214,34493699,34494220,34494614,34495061,34495554,34495990,34496482,34496966,34497605,34498271,34498939,34499591,34500125,34500514,34500798,34501136,34501439,34501754,34502259,34502573,34502857,34503088,34503555,34503989,34504450,34504866,34505422,34505902,34507818,34509749,34511655,34513647,34515631,34517580,34519601,34521297,34523000,34524689,34526364,34528037,34529749,34531412,34533062,34534732,34536404,34538086,34539784,34541477,34543155,34544812,34546503,34548171,34549835,34551550,34553278,34554964,34556677,34558305,34559971,34561653,34563336,34565024,34566679,34568369,34570029,34571656,34573298,34574958,34576606,34578291,34580070,34582118,34584166,34586214,34588122,34589871,34591659,34593433,34595209,34596949,34598622,34600332,34602036,34603760,34605398,34607033,34608725,34610445,34612235,34613956,34615706,34617321,34619013,34620644,34622244,34623904,34625584,34627210,34628834,34630503,34632030,34632873,34633766,34634380,34635249,34636098,34636866,34637930,34639229,34640552,34641725,34642727,34643590,34644637,34645812,34647093,34648149,34649082,34649981,34650956,34652171,34653413,34654242,34655505,34656253,34656690,34658059,34659815,34661551,34663265,34665067,34666928,34668736,34670339,34671977,34673571,34675202,34676699,34678205,34679726,34681241,34682761,34684277,34685794,34687320,34688819,34690333,34691841,34693352,34694864,34696383,34697880,34699398,34700923,34702435,34703933,34705440,34706951,34708468,34709991,34711494,34713004,34714532,34716035,34717528,34719076,34720605,34722123,34723678,34725195,34726713,34728237,34729739,34731242,34732742,34734244,34735746,34737235,34738720,34740186,34741668,34743166,34744651,34746152,34747417,34747955,34748435,34748990,34749415,34749943,34750527,34751004,34751379,34752010,34752667,34753338,34754047,34754767,34755424,34756146,34756830,34757469,34758123,34758758,34759481,34760194,34760760,34761410,34761990,34762416,34762892,34763485,34764075,34764572,34765292,34765943,34766555,34767276,34767887,34768506,34769079,34769727,34770211,34770837,34771363,34771907,34772590,34773167,34773709,34774348,34774850,34775382,34775946,34776467,34777083,34777666,34778317,34778832,34779419,34779983,34780546,34781080,34781599,34782141,34782670,34783341,34783788,34784238,34784857,34785283,34785847,34786482,34787008,34787660,34788235,34788857,34789449,34790015,34790599,34791046,34791676,34792347,34792887,34793412,34793917,34794526,34794958,34795547,34796087,34796618,34797271,34797844,34798251,34798748,34799409,34799987,34800585,34801276,34801866,34802569,34803307,34803989,34804617,34805248,34805960,34806683,34807389,34807977,34808536,34809217,34809891,34810543,34811140,34811655,34812120,34812762,34813399,34813945,34814579,34815190,34815734,34816338,34816946,34817564,34818174,34818725,34819318,34819823,34820180,34820692,34821212,34821795,34822313,34822871,34823441,34823905,34824501,34824921,34825398,34826016,34826610,34827143,34827517,34827959,34828545,34829107,34829582,34830108,34830593,34830903,34831395,34831909,34832461,34832968,34833441,34833788,34834130,34835708,34837765,34839822,34841856,34843894,34845932,34847982,34850024,34852072,34854129,34856177,34858198,34860253,34862212,34863930,34865649,34867331,34869033,34870734,34872467,34874167,34875845,34877564,34879254,34880967,34882667,34884368,34886072,34887776,34889483,34891214,34892949,34894657,34896378,34898103,34899836,34901581,34903325,34905086,34906849,34908606,34910364,34912097,34913812,34915506,34917216,34918914,34920595,34922276,34923947,34925653,34927394,34929078,34930762,34932466,34934177,34935875,34937589,34939304,34941055,34942806,34944568,34946306,34948053,34949758,34951479,34953197,34954937,34956659,34958400,34960135,34961897,34963632,34965359,34967104,34968859,34970614,34972355,34974078,34975837,34977885,34979933,34981981,34984029,34986077,34988125,34990173,34992143,34993841,34995504,34997243,34998984,35000678,35002348,35004076,35005861,35007563,35009343,35011141,35012902,35014746,35016536,35018362,35020181,35021972,35023771,35025564,35027319,35029093,35030887,35032491,35034065,35035764,35037491,35039172,35040797,35042413,35044220,35045905,35047625,35049335,35051030,35052751,35054588,35056408,35058219,35060035,35061862,35063690,35065379,35067090,35068676,35070307,35072096,35073913,35075710,35077499,35079347,35081206,35083020,35084802,35085871,35086816,35087729,35088669,35089623,35090538,35091322,35092303,35093303,35094289,35095596,35096950,35098276,35099497,35100787,35102121,35103376,35104784,35106143,35107457,35108642,35109893,35110647,35111408,35112275,35113191,35114152,35115199,35116372,35116796,35117328,35118693,35120123,35121829,35123764,35125514,35127265,35129155,35131066,35132912,35134747,35136589,35138391,35140244,35142152,35143712,35145260,35146834,35148359,35149865,35151406,35152936,35154451,35155955,35157420,35157820,35158299,35158633,35158959,35159477,35159995,35160516,35160932,35161332,35161695,35162094,35162367,35162736,35162904,35163332,35163639,35163835,35164064,35164272,35164673,35165078,35165461,35165839,35166253,35167608,35169641,35171660,35173391,35175094,35176812,35178494,35180184,35181873,35183568,35185262,35186954,35188644,35190349,35192143,35194191,35196096,35197892,35199705,35201404,35203201,35204992,35206821,35208588,35210343,35211951,35212753,35214149,35215759,35217362,35218848,35220440,35221963,35223399,35224609,35226125,35227552,35227982,35228387,35228870,35229409,35229985,35230471,35231406,35233235,35234922,35236604,35238508,35240231,35242028,35242976,35243740,35245203,35246782,35248285,35249786,35251284,35252449,35252751,35253226,35253588,35254036,35254340,35254432,35254819,35255293,35255739,35255886,35256204,35256789,35257324,35258676,35260545,35262224,35263890,35265578,35267247,35268922,35270687,35272591,35274361,35276045,35277738,35279431,35280587,35281960,35283761,35285481,35287043,35288489,35289997,35291462,35292978,35294484,35295015,35295451,35295820,35296192,35296659,35297043,35297430,35297738,35298240,35298692,35299134,35299510,35299966,35300559,35301039,35301577,35302026,35304022,35305840,35307523,35309203,35310866,35312525,35314196,35315893,35317681,35319604,35321316,35322990,35324677,35326447,35327786,35328428,35329711,35331079,35332083,35333533,35335167,35337137,35339188,35341242,35343277,35345332,35347041,35348635,35350183,35351624,35352916,35354430,35355987,35357139,35358000,35358916,35360338,35362339,35364372,35366299,35368220,35370014,35370781,35371977,35373419,35374602,35376031,35377486,35378888,35380227,35381450,35382526,35383189,35384193,35385313,35386483,35387488,35388292,35389227,35390152,35391008,35391892,35392917,35394090,35395167,35396231,35397118,35398288,35399176,35400275,35401349,35402460,35403568,35404653,35405702,35406641,35407633,35408708,35409846,35410848,35412029,35412743,35413370,35414198,35415035,35416346,35417432,35418250,35419236,35420191,35421112,35422001,35422881,35423609,35424886,35426014,35426898,35427949,35428931,35429730,35430669,35431653,35432433,35433465,35434557,35435032,35436556,35438604,35439832,35440931,35441975,35442912,35443881,35444866,35446003,35447001,35448002,35448914,35449927,35451080,35451994,35453078,35454092,35454980,35455995,35456872,35457730,35458449,35459246,35460102,35461250,35462515,35463931,35465487,35466839,35468428,35470420,35472468,35474516,35476402,35477811,35479839,35481896,35483944,35485992,35487990,35489806,35491860,35493517,35495463,35497518,35499566,35501614,35503662,35505710,35507758,35509806,35511860,35513890,35515932,35517966,35519998,35522032,35524035,35525991,35527794,35529471,35531443,35533491,35535539,35537587,35539635,35541683,35543731,35545779,35547827,35549875,35551923,35553971,35555963,35557890,35559714,35561491,35562826,35564595,35566524,35568424,35570189,35572123,35574171,35576224,35578280,35580328,35582376,35584424,35586472,35588520,35590568,35592616,35594664,35596712,35598760,35600808,35602808,35604306,35605381,35607421,35609469,35611517,35613565,35615613,35617661,35619709,35621757,35623805,35625853,35627901,35629949,35631997,35634045,35636093,35638141,35640189,35642237,35644285,35646309,35647889,35649944,35651992,35654040,35656095,35657969,35659523,35660908,35662085,35663075,35663784,35664224,35666228,35668285,35670333,35672381,35674436,35676493,35678541,35680594,35682642,35684690,35686536,35687990,35688757,35690805,35692857,35694878,35696846,35698689,35700390,35701904,35703052,35703938,35704502,35704778,35705123,35707052,35709100,35711148,35713197,35715247,35717295,35719343,35721391,35723439,35725495,35727543,35729591,35731633,35733609,35735425,35737049,35738543,35739865,35741917,35743974,35746022,35748070,35750126,35752174,35754231,35756288,35758336,35760384,35762440,35764475,35766497,35768418,35770116,35771562,35772586,35773789,35775593,35777481,35779502,35781550,35783605,35785658,35787588,35789271,35790538,35791526,35793574,35795620,35797668,35799489,35801519,35803567,35805624,35807395,35807925,35807999,35808197,35808230,35809050,35811098,35813146,35815203,35817251,35819307,35821355,35823405,35825449,35827352,35829400,35831241,35833075,35835123,35837171,35839219,35841267,35843315,35845363,35847420,35849468,35851525,35853449,35854974,35856952,35858960,35860542,35862144,35863945,35865540,35866410,35867376,35869093,35871058,35873102,35875150,35877198,35879246,35881300,35883317,35885091,35886209,35886302,35888052,35890100,35892148,35894205,35896258,35898315,35900371,35902419,35904476,35906528,35908585,35910530,35912366,35914282,35916137,35917716,35919764,35921812,35923860,35925917,35927965,35930013,35932061,35934109,35936011,35938068,35940116,35942171,35944219,35946267,35948315,35950363,35952411,35954034,35956072,35958039,35960010,35961401,35962994,35965042,35967098,35969079,35970784,35972721,35974769,35976817,35978865,35980913,35982970,35985018,35987066,35989114,35991162,35992796,35994063,35995908,35997877,35999878,36001894,36003948,36005995,36008020,36010063,36012106,36014163,36016217,36018260,36020281,36022295,36024282,36026265,36028267,36030319,36032368,36034415,36036469,36038495,36040532,36042564,36044612,36046662,36048694,36050739,36052745,36054620,36056354,36057892,36059257,36060521,36061713,36062874,36064037,36065078,36066144,36067259,36068251,36069287,36070131,36071007,36071933,36072616,36073249,36073696,36074132,36074325,36074507,36074595,36074658,36075246,36077296,36079317,36081371,36083428,36085433,36087255,36088996,36090500,36091505,36092792,36094840,36096888,36098936,36100984,36102876,36104924,36106972,36109020,36110983,36113031,36115079,36117127,36119141,36121198,36123246,36125303,36127351,36129393,36131437,36133494,36135550,36137598,36139625,36141678,36143683,36145621,36147482,36149258,36151020,36152791,36154360,36156409,36158465,36160513,36162569,36164622,36166677,36168725,36170469,36172517,36174573,36176630,36178686,36180740,36182788,36184843,36186858,36188816,36190864,36192887,36194796,36196226,36198282,36200330,36202308,36203716,36205724,36207781,36209829,36211877,36213925,36215973,36218030,36220078,36222126,36224144,36225926,36227685,36229168,36230553,36231815,36232950,36234778,36236826,36238874,36240922,36242975,36244983,36246830,36248407,36249137,36249617,36250758,36252343,36254127,36256054,36257994,36259950,36261897,36263905,36265770,36267438,36268899,36270201,36271148,36271679,36272316,36274180,36276226,36278218,36279456,36280306,36282363,36284411,36286459,36288507,36290555,36292603,36294651,36296699,36298714,36300679,36302731,36304724,36306470,36307839,36308649,36310657,36312711,36314394,36315741,36317696,36319744,36321792,36323846,36325894,36327947,36329995,36332050,36334105,36336056,36337725,36339569,36341617,36343031,36343665,36345564,36347612,36349660,36351708,36353756,36355804,36357861,36359879,36361636,36363651,36365699,36367756,36369804,36371852,36373900,36375948,36377599,36378636,36380231,36382184,36384216,36386272,36388320,36390269,36391433,36393310,36395109,36397164,36399212,36401260,36403308,36405343,36407352,36409024,36410276,36411140,36411893,36412290,36412629,36412817,36413390,36415438,36417486,36419534,36421582,36423630,36425678,36427726,36429774,36431822,36433870,36435918,36437966,36440014,36442062,36444110,36446158,36448206,36450222,36451450,36453507,36455558,36457613,36459658,36461715,36463769,36465683,36467634,36469691,36471245,36473214,36474500,36475147,36476478,36478175,36480136,36482191,36484239,36486287,36488335,36490383,36492431,36494479,36496527,36498575,36500616,36502475,36504117,36505600,36506951,36508099,36509182,36510192,36511078,36511793,36512629,36513619,36514453,36515355,36516994,36519050,36521098,36523146,36525194,36527242,36529290,36531338,36533386,36535434,36537482,36539530,36541578,36543626,36545466,36546708,36547414,36548117,36549896,36551944,36553992,36556040,36558047,36559626,36561683,36563740,36565795,36567846,36569894,36571942,36573998,36575981,36577466,36578934,36580583,36581891,36583157,36585214,36587097,36588256,36588782,36590613,36592524,36594549,36596604,36598656,36600710,36602760,36604806,36606808,36608351,36610121,36611977,36613912,36615887,36617943,36620000,36622048,36624096,36626144,36628192,36630240,36632296,36634292,36636045,36637541,36638348,36639105,36640712,36642769,36644817,36646865,36648913,36650961,36653009,36655057,36657113,36659167,36661168,36662902,36664341,36665398,36666371,36666561,36667029,36669077,36671127,36673088,36675019,36676807,36678503,36680272,36682320,36684338,36686117,36687729,36688984,36690737,36692500,36694540,36696588,36698521,36700560,36701597,36703645,36705310,36707163,36709077,36711125,36712773,36714687,36716059,36717520,36718638,36720325,36722333,36724357,36726352,36728369,36730375,36732354,36734268,36736316,36738371,36740426,36742114,36743070,36744395,36746362,36748410,36750458,36752506,36754361,36756183,36757429,36758311,36759333,36761381,36763429,36765485,36767542,36769073,36769433,36771240,36773297,36775342,36777390,36779446,36781502,36783559,36785554,36787609,36789657,36791139,36793178,36795226,36796974,36799022,36801070,36802687,36804707,36806755,36808216,36809484,36811401,36812959,36813662,36815707,36817755,36819812,36821869,36823249,36823371,36823495,36824810,36826849,36828897,36830945,36833002,36835059,36837107,36839155,36840904,36842768,36844595,36846129,36846986,36847158,36848199,36850171,36852219,36854189,36856237,36858280,36860324,36862372,36864404,36866452,36868289,36870299,36871938,36873920,36875327,36877248,36878487,36880075,36881720,36883416,36884718,36886037,36887771,36889813,36891785,36893833,36895881,36897929,36899977,36902025,36904073,36906121,36908169,36910217,36912274,36914327,36916378,36918360,36920290,36922096,36924100,36925726,36927702,36929753,36931659,36933126,36934875,36936670,36938718,36940766,36942822,36944870,36946918,36948966,36951014,36953062,36955118,36957168,36959164,36960937,36962511,36963895,36965086,36965997,36967383,36969431,36971479,36973527,36975575,36977632,36979118,36979895,36981943,36983991,36985958,36987940,36989977,36991950,36993958,36995976,36997995,37000051,37002108,37004156,37006202,37008223,37009934,37011395,37013416,37015464,37017520,37019499,37021400,37023425,37025481,37027529,37029577,37031625,37033673,37035721,37037768,37039720,37041487,37042897,37043600,37044854,37046902,37048950,37050998,37053046,37055094,37057044,37059092,37061140,37063188,37065236,37067216,37068457,37070511,37072559,37074607,37076655,37078703,37080759,37082807,37084855,37086711,37088056,37090013,37092061,37094109,37096157,37098205,37100222,37102135,37104183,37105361,37105847,37106301,37107582,37109471,37111527,37113575,37115623,37117671,37119719,37121767,37123815,37125863,37127911,37129967,37131991,37133962,37135755,37137543,37139284,37140871,37142306,37143558,37144771,37146015,37147096,37147900,37148463,37149019,37149536,37150017,37150459,37150915,37151290,37151756,37152186,37152651,37153190,37153735,37153993,37154315,37155081,37156287,37157488,37158719,37159895,37160971,37161910,37162795,37163528,37164054,37164360,37164507,37165090,37166970,37169023,37170782,37172516,37174418,37176374,37178422,37180472,37182490,37184487,37186535,37188585,37190639,37192687,37194552,37196084,37197989,37200018,37201681,37203135,37205121,37206938,37208956,37211004,37213008,37215032,37216907,37218952,37221000,37223037,37224880,37226907,37228964,37230998,37232975,37234961,37236942,37238692,37240109,37241657,37243690,37245710,37247741,37249794,37251842,37253850,37255571,37257407,37259350,37261398,37263440,37265493,37267520,37269568,37271501,37273452,37275364,37277119,37278957,37280889,37282868,37284723,37286733,37288557,37290581,37292524,37294572,37296620,37298668,37300719,37302727,37304310,37305662,37307423,37308638,37309570,37310896,37312943,37314991,37317039,37319030,37320975,37322801,37324598,37326477,37328236,37330219,37332093,37333989,37335953,37337898,37339831,37341877,37343805,37345588,37347583,37349085,37350577,37352503,37354516,37356525,37358419,37360255,37362139,37363998,37365766,37367492,37369007,37370859,37372639,37374076,37375568,37376886,37377773,37378960,37380965,37382932,37384785,37386621,37388361,37389986,37391707,37393381,37394735,37396169,37397449,37398916,37400183,37401454,37402641,37403675,37405010,37406122,37407227,37408513,37409918,37411111,37412594,37414115,37415955,37417759,37419461,37421427,37423416,37425469,37427448,37429458,37431285,37433017,37434591,37436001,37436870,37438340,37440128,37442155,37444209,37446257,37448309,37449463,37449616,37450920,37452977,37455025,37457059,37458498,37460550,37461606,37463654,37465702,37467192,37468846,37470902,37472950,37474998,37477046,37478575,37480632,37482577,37484075,37485462,37487510,37489558,37491606,37493654,37495702,37497758,37499714,37501766,37503814,37505862,37507910,37509958,37512006,37514054,37516102,37518150,37520198,37522246,37524294,37526310,37528367,37530415,37532472,37534520,37536568,37538528,37540476,37542501,37544558,37546606,37548658,37550712,37552768,37554816,37556864,37558912,37560960,37563015,37564661,37566087,37568144,37570192,37572249,37574297,37576350,37578390,37580438,37582338,37584264,37586044,37587607,37589215,37590652,37592411,37594211,37595779,37597225,37598559,37599647,37600499,37600768,37602555,37604387,37606283,37608333,37610381,37612424,37614389,37615915,37617125,37619173,37621230,37622982,37625037,37627085,37629133,37631160,37632689,37634628,37636684,37638597,37640189,37641646,37643487,37645344,37646487,37647283,37647966,37649396,37650808,37652254,37653669,37654865,37656260,37656867,37657588,37658432,37658863,37659138,37659600,37660133,37660458,37661398,37662270,37662631,37663040,37663527,37664006,37664772,37665246,37665781,37666430,37666783,37667075,37667725,37668420,37669068,37669805,37670476,37671608,37672407,37672951,37673918,37674716,37675219,37676137,37676759,37677344,37677989,37678395,37678905,37679530,37679891,37680530,37680944,37681293,37682008,37682585,37683338,37683878,37685059,37685893,37687082,37688078,37689075,37689759,37690312,37690899,37691337,37691919,37692526,37693284,37693661,37693838,37694288,37694749,37695424,37695890,37696214,37696759,37697422,37697760,37698818,37700186,37700543,37700893,37701286,37701599,37702127,37702735,37703408,37703946,37704389,37704986,37705637,37706213,37706568,37707065,37707461,37708545,37709664,37710707,37711577,37711883,37712456,37712811,37713229,37713679,37714131,37714391,37714912,37715112,37715556,37716114,37716317,37716566,37716828,37717385,37718039,37718335,37718783,37719300,37719549,37720304,37721135,37721666,37721882,37722267,37722593,37723088,37723374,37723598,37724010,37724531,37725505,37726044,37726520,37726963,37727634,37728141,37728618,37729044,37729439,37730111,37730436,37730767,37731362,37731866,37732792,37733631,37734231,37734502,37734822,37735103,37735361,37735882,37736207,37736551,37736803,37736961,37737465,37738030,37738771,37739393,37740475,37741815,37742860,37743897,37744572,37745223,37745493,37745962,37746541,37747385,37748718,37749741,37750257,37751139,37751713,37752341,37752896,37753522,37754090,37754854,37755604,37756165,37756813,37757469,37758037,37758731,37759571,37760312,37761503,37762689,37764068,37764878,37765543,37766130,37766711,37767715,37768966,37770168,37771366,37772566,37773771,37774644,37775059,37775508,37776643,37777809,37778683,37779197,37779749,37781115,37781474,37781787,37782129,37782324,37782663,37782921,37783131,37783270,37783500,37783877,37784323,37784463,37784596,37784728,37785119,37785664,37786283,37786597,37787192,37787827,37788267,37789199,37789600,37790260,37790422,37790862,37791361,37791687,37791960,37792394,37793108,37793576,37794171,37794663,37794970,37795251,37795571,37795901,37796313,37796517,37796794,37796980,37797205,37797540,37797685,37798189,37798466,37798765,37798937,37799219,37799405,37799615,37800137,37800597,37801139,37801425,37802126,37803283,37803541,37804021,37804413,37804932,37805539,37806156,37806479,37807039,37807948,37808977,37809984,37810433,37810985,37811328,37811711,37812120,37812448,37812890,37813333,37813637,37813879,37814161,37814327,37814495,37815308,37816211,37816994,37817732,37818500,37818918,37819551,37819967,37820269,37820686,37821114,37821675,37821997,37822156,37822571,37822822,37822990,37823396,37823756,37824176,37824625,37824781,37824974,37825257,37825448,37825626,37825888,37826077,37826431,37826906,37827183,37827422,37827926,37828254,37828588,37829132,37829435,37829803,37830293,37831043,37831895,37833193,37834017,37834520,37834991,37835707,37836180,37836614,37837212,37837581,37838031,37838965,37840014,37840708,37841017,37842241,37843245,37844346,37845441,37845935,37846534,37846838,37847590,37848205,37848851,37849408,37849710,37849995,37850313,37850669,37851012,37852087,37853048,37853464,37853870,37854304,37854851,37855238,37855664,37856132,37856991,37857755,37858446,37859304,37859659,37860055,37860812,37861660,37862148,37862986,37863878,37864768,37865604,37866404,37867280,37868814,37870700,37872066,37873054,37874050,37875040,37876742,37878628,37880514,37881503,37882491,37883481,37885030,37886293,37887466,37888555,37889822,37890344,37891238,37891793,37892953,37893362,37893804,37894712,37895543,37896242,37896923,37897769,37898493,37899235,37899943,37900559,37901152,37901825,37902461,37903447,37903766,37903884,37904059,37904515,37904987,37905163,37905285,37905559,37906029,37906356,37906825,37907294,37908017,37909089,37909819,37910130,37910618,37911181,37911672,37912062,37912627,37913132,37913598,37913896,37914190,37914855,37915805,37916995,37918663,37919178,37919685,37920422,37920871,37921228,37921588,37922057,37922705,37923105,37923530,37923937,37924478,37924869,37925313,37925606,37926024,37926349,37926705,37926964,37927264,37927476,37928001,37928342,37928672,37928836,37929017,37929308,37929803,37930102,37930389,37930785,37930954,37931539,37931775,37932198,37932318,37932885,37933464,37934136,37934416,37934563,37934836,37935289,37935667,37936103,37936519,37936840,37937499,37938149,37938742,37938987,37939555,37940334,37940554,37941191,37942194,37942822,37943136,37943198,37943356,37944099,37944776,37945142,37945755,37946538,37947055,37947598,37947946,37948557,37949161,37949632,37950089,37950526,37950995,37951527,37951822,37952294,37952970,37953443,37954038,37954795,37955625,37956108,37956791,37957488,37957825,37958328,37958814,37959297,37960082,37960996,37961699,37962457,37962978,37963567,37964179,37964729,37965475,37966082,37966908,37967213,37967937,37968428,37969359,37969628,37969937,37970520,37970718,37971094,37971270,37971448,37971679,37972077,37972188,37972631,37973091,37973217,37973475,37973692,37973849,37974175,37974302,37974436,37975147,37975688,37976155,37976594,37976993,37977463,37977675,37977935,37978295,37978669,37978970,37979330,37980259,37980581,37981040,37981393,37981854,37982219,37982879,37983830,37984692,37985763,37986537,37987291,37988012,37988209,37988987,37990011,37990393,37991270,37992478,37992812,37993623,37994393,37995588,37996770,37997266,37997566,37998092,37998412,37999522,38000935,38002006,38003294,38004643,38006105,38007564,38008995,38010522,38012070,38013561,38015099,38016622,38018076,38019577,38021088,38022662,38024169,38025710,38027193,38028674,38030265,38031692,38033076,38034390,38035637,38036857,38038188,38039572,38040844,38042042,38043186,38044260,38045362,38046997,38048519,38050296,38052045,38053792,38055546,38057226,38058929,38060633,38062375,38064054,38065788,38067520,38069224,38070978,38072718,38074479,38076218,38077954,38079494,38081165,38082818,38084481,38086194,38087874,38089575,38091310,38093036,38094718,38096362,38098026,38099703,38101318,38102872,38104534,38106230,38108029,38109617,38111306,38112968,38114591,38116261,38118008,38119737,38121479,38123288,38125156,38126954,38128760,38130573,38132331,38134032,38135766,38137527,38139285,38141157,38142985,38144659,38146340,38148148,38149905,38151618,38153414,38155223,38156983,38158660,38160365,38162013,38163521,38165405,38166999,38168656,38170251,38171844,38173458,38175070,38176752,38178452,38180148,38181807,38183526,38185251,38186939,38188673,38190401,38192093,38193772,38195541,38197253,38198946,38200645,38202300,38203957,38205641,38207288,38208929,38210539,38212147,38213734,38215288,38216785,38218292,38220148,38221771,38223340,38224894,38226276,38227677,38229236,38230705,38232212,38233438,38234669,38236119,38237590,38238892,38240242,38241661,38243043,38244337,38245760,38247364,38248891,38250447,38251975,38253365,38254786,38256289,38257685,38259041,38260591,38262164,38263589,38265116,38266732,38268190,38270018,38271466,38272913,38274306,38275725,38277275,38278687,38280218,38281655,38283218,38284616,38285953,38287177,38288496,38288714,38288921,38289305,38289522,38289762,38290468,38291606,38293043,38294249,38295154,38296425,38297716,38298766,38300261,38301899,38303019,38304393,38306069,38307337,38308290,38309675,38310862,38312509,38313706,38315352,38316778,38318432,38320061,38321749,38323263,38324535,38326132,38327462,38329218,38330473,38331950,38333740,38334948,38336668,38338256,38339591,38341067,38342361,38343803,38345274,38346856,38348603,38349865,38351035,38352720,38354421,38355731,38357428,38358712,38360112,38361571,38363186,38364829,38366230,38367661,38369247,38370639,38372409,38373746,38375343,38376847,38378146,38379646,38381175,38382546,38383991,38385358,38386965,38388461,38390168,38391600,38393184,38394868,38395898,38397442,38398907,38400551,38401579,38403073,38404671,38406342,38407743,38409296,38410781,38412059,38413741,38415270,38416503,38417818,38419323,38420804,38422000,38423490,38425001,38426258,38427664,38428968,38430652,38432225,38433922,38435575,38436898,38438130,38439545,38441050,38442369,38444226,38445503,38447136,38448548,38450265,38451500,38453316,38454852,38456277,38458131,38459839,38461652,38463080,38464703,38466331,38467568,38469493,38470900,38472447,38474060,38475786,38477515,38479353,38480773,38482455,38484214,38485955,38487489,38489201,38490962,38492227,38493904,38495213,38496805,38498387,38500152,38501598,38502779,38504336,38505992,38507745,38509499,38510789,38512616,38514235,38515608,38517240,38518732,38520741,38522795,38524809,38526827,38528869,38530917,38532918,38534962,38536997,38539023,38541030,38543065,38545086,38547113,38549138,38551189,38553233,38555272,38557320,38559324,38561347,38563351,38565369,38567384,38569428,38571479,38573530,38575572,38577612,38579661,38581679,38583701,38585713,38587761,38589810,38591839,38593890,38595946,38598001,38600012,38602051,38603900,38605887,38607911,38609946,38611990,38614028,38616054,38618082,38620128,38622149,38624149,38626124,38628107,38630076,38632088,38634075,38636109,38638138,38640164,38642215,38644245,38646240,38648199,38650210,38652226,38654217,38656218,38658251,38660264,38662287,38664340,38666372,38668364,38670317,38672325,38674333,38676316,38678334,38680374,38682421,38684470,38686507,38688529,38690493,38692487,38694510,38696535,38698565,38700601,38702642,38704695,38706728,38708769,38710813,38712850,38714899,38716952,38718990,38721028,38723074,38725054,38727027,38729011,38731015,38732988,38734925,38736924,38738916,38740902,38742853,38744815,38746775,38748739,38750735,38752733,38754672,38756628,38758614,38760604,38762572,38764520,38766523,38768520,38770490,38772480,38774436,38776427,38778403,38780388,38782382,38784337,38786324,38788299,38790275,38792267,38794220,38796218,38798196,38800201,38802177,38804178,38806153,38808125,38810124,38812103,38814090,38816037,38817996,38819988,38821981,38823956,38825963,38827917,38829910,38831879,38833878,38835831,38837804,38839811,38841801,38843803,38845797,38847803,38849812,38851812,38853790,38855776,38857770,38859751,38861694,38863550,38865346,38867160,38868980,38870743,38872639,38874582,38876396,38878109,38880014,38881768,38883623,38885305,38887105,38888945,38890873,38892812,38894730,38896538,38898300,38900223,38902039,38903891,38905651,38907309,38908975,38910672,38912297,38914062,38915997,38917911,38919691,38921476,38923491,38925547,38927574,38929604,38931497,38933441,38935255,38937168,38939013,38940911,38942811,38944514,38946263,38947950,38949825,38951696,38953600,38955405,38957199,38959020,38960807,38962535,38964250,38966150,38967989,38969840,38971682,38973512,38975247,38977066,38978689,38980575,38982354,38984247,38986069,38987961,38989688,38991646,38993368,38995175,38996732,38998537,39000401,39002241,39003969,39005943,39007722,39009625,39011446,39013119,39014874,39016583,39018446,39020306,39022170,39023925,39025825,39027556,39029422,39030970,39032784,39034423,39036387,39038294,39040252,39042182,39043998,39045925,39047788,39049649,39051351,39053306,39055190,39057190,39059140,39061089,39063093,39064991,39066665,39068631,39070388,39072272,39073934,39075744,39077597,39079407,39081370,39083186,39085038,39086962,39088794,39090633,39092445,39094357,39096170,39098030,39099821,39101759,39103622,39105350,39107287,39109046,39110928,39112673,39114446,39116331,39118151,39119908,39121612,39123425,39125274,39126990,39128896,39130804,39132678,39134595,39136507,39138453,39140402,39142337,39144292,39146194,39148171,39150075,39152034,39153951,39155897,39157846,39159750,39161670,39163591,39165590,39167499,39168947,39170336,39171752,39173171,39174609,39176077,39177664,39179078,39180682,39182220,39183742,39185298,39187026,39188719,39190239,39191940,39193762,39195737,39197707,39199560,39201538,39203206,39205094,39206923,39208630,39210594,39212527,39214515,39216308,39218358,39220112,39222038,39223764,39225590,39227488,39229325,39231314,39233288,39235121,39237135,39238817,39240742,39242555,39244225,39246190,39248082,39250071,39251839,39253794,39255609,39257374,39259173,39260961,39262603,39264546,39266448,39268419,39270244,39272272,39274104,39275948,39277779,39279605,39281334,39283270,39285193,39287113,39288932,39290954,39292742,39294665,39296438,39298276,39300191,39302127,39304105,39306070,39307951,39309938,39311636,39313545,39315414,39317193,39319179,39321119,39323061,39325018,39326914,39328880,39330841,39332781,39334647,39336573,39338492,39340166,39341854,39343800,39345813,39347772,39349724,39351727,39353744,39355751,39357779,39359783,39361794,39363780,39365779,39367775,39369724,39371705,39373687,39375655,39377647,39379641,39381654,39383646,39385601,39387596,39389568,39391586,39393575,39395566,39397570,39399601,39401634,39403618,39405618,39407624,39409659,39411680,39413693,39415705,39417731,39419711,39421714,39423725,39425748,39427772,39429802,39431808,39433830,39435836,39437818,39439841,39441871,39443891,39445892,39447894,39449882,39451896,39453878,39455878,39457880,39459899,39461909,39463918,39465919,39467923,39469922,39471960,39474009,39476012,39477994,39479863,39481605,39483388,39485108,39486824,39488519,39490166,39491944,39493610,39495198,39496842,39498613,39500308,39501988,39503756,39505491,39507107,39508846,39510599,39512200,39513779,39515625,39517211,39518889,39520640,39522445,39524153,39525821,39527609,39529451,39531177,39532859,39534614,39536361,39538139,39539844,39541621,39543335,39545305,39547246,39549209,39551217,39553209,39555152,39557066,39559008,39560957,39562950,39564927,39566902,39568914,39570893,39572855,39574849,39576841,39578826,39580792,39582774,39584732,39586741,39588732,39590725,39592709,39594668,39596674,39598616,39600584,39602580,39604560,39606568,39608564,39610528,39612504,39614469,39616455,39618410,39620370,39622321,39624233,39626140,39628011,39629945,39631830,39633651,39635536,39637370,39639202,39641110,39642971,39644870,39646717,39648602,39650521,39652381,39654250,39656170,39658093,39660084,39662049,39664051,39665979,39667928,39669839,39671743,39673661,39675586,39677524,39679490,39681380,39683314,39685265,39687214,39689175,39691137,39693027,39695006,39696746,39698679,39700555,39702605,39704656,39706684,39708682,39710703,39712721,39714744,39716756,39718794,39720810,39722855,39724885,39726912,39728940,39730961,39732935,39734901,39736864,39738890,39740940,39742995,39745047,39747062,39749106,39751130,39753131,39755141,39757170,39759203,39761255,39763278,39765333,39767389,39769440,39771468,39773455,39775411,39777428,39779450,39781458,39783477,39785520,39787568,39789547,39791538,39793561,39795544,39797503,39799484,39801500,39803543,39805569,39807583,39809595,39811581,39813598,39815598,39817596,39819566,39821560,39823570,39825599,39827632,39829659,39831664,39833663,39835683,39837670,39839654,39841649,39843625,39845618,39847658,39849698,39851729,39853773,39855803,39857842,39859834,39861850,39863857,39865847,39867840,39869865,39871891,39873944,39875989,39878033,39880058,39882094,39884121,39886172,39888224,39890266,39892314,39894360,39896359,39898335,39900350,39902358,39904345,39906311,39908282,39910309,39912303,39914298,39916290,39918236,39920217,39922165,39924120,39926078,39928066,39930030,39932024,39934022,39935977,39937927,39939821,39941747,39943699,39945681,39947649,39949668,39951671,39953678,39955647,39957642,39959568,39961532,39963390,39965350,39967289,39969276,39971062,39972971,39975008,39977037,39979054,39981090,39983116,39985095,39986841,39988821,39990809,39992779,39994644,39996545,39998460,40000438,40002406,40004308,40006232,40008164,40010143,40012091,40014009,40015848,40017777,40019767,40021754,40023622,40025476,40027431,40029396,40031337,40033167,40035055,40036992,40038928,40040916,40042798,40044654,40046581,40048552,40050508,40052386,40054273,40056259,40058188,40060052,40061887,40063850,40065773,40067642,40069478,40071264,40073188,40075135,40077039,40078933,40080832,40082687,40084560,40086475,40088354,40090199,40092088,40093987,40095818,40097697,40099511,40101302,40103328,40105265,40107203,40109144,40111048,40112882,40114728,40116602,40118456,40120216,40122223,40124223,40126235,40128262,40130255,40132282,40134071,40135862,40137793,40139731,40141773,40143811,40145824,40147763,40149743,40151746,40153737,40155734,40157709,40159667,40161623,40163671,40165657,40167656,40169355,40171343,40173376,40175397,40177379,40179201,40181171,40183191,40185232,40187205,40189106,40191105,40193100,40195125,40197149,40199119,40200910,40202884,40204885,40206906,40208893,40210887,40212909,40214941,40216949,40218954,40220962,40222860,40224878,40226890,40228869,40230843,40232861,40234901,40236926,40238943,40240971,40242983,40244825,40246802,40248784,40250787,40252771,40254787,40256754,40258713,40260683,40262674,40264611,40266606,40268501,40270482,40272487,40274422,40276363,40278344,40280350,40282308,40284160,40286097,40288035,40290008,40291860,40293756,40295757,40297743,40299760,40301779,40303751,40305660,40307563,40309520,40311455,40313361,40315272,40317254,40319217,40321209,40323199,40325201,40327190,40329181,40331156,40333078,40335060,40336998,40338960,40340959,40342966,40344925,40346961,40348948,40350926,40352868,40354849,40356809,40358772,40360653,40362628,40364582,40366530,40368508,40370516,40372482,40374466,40376481,40378456,40380454,40382454,40384395,40386367,40388380,40390327,40392301,40394308,40396294,40398263,40400144,40402114,40404106,40406046,40408004,40409965,40411909,40413889,40415832,40417790,40419731,40421681,40423618,40425478,40427327,40429286,40431260,40433171,40435069,40437017,40438907,40440868,40442843,40444733,40446701,40448694,40450635,40452598,40454618,40456524,40458521,40460435,40462420,40464398,40466358,40468357,40470379,40472379,40474431,40476487,40478380,40480403,40482411,40484377,40486396,40488427,40490469,40492502,40494540,40496512,40498522,40500545,40502515,40504539,40506573,40508603,40510641,40512677,40514667,40516711,40518722,40520724,40522756,40524797,40526833,40528884,40530921,40532886,40534870,40536895,40538875,40540903,40542933,40544978,40547031,40549080,40551062,40553064,40555081,40557046,40559089,40561124,40563174,40565205,40567236,40569200,40571202,40573166,40575188,40576974,40578956,40580918,40582902,40584890,40586889,40588931,40590940,40592946,40594922,40596686,40598699,40600698,40602673,40604719,40606684,40608648,40610696,40612673,40614648,40616673,40618609,40620530,40622417,40624234,40625956,40627601,40629110,40630564,40632175,40633563,40635037,40636392,40637863,40639217,40640301,40641930,40643090,40644517,40645716,40647313,40648369,40649714,40650999,40651925,40653220,40654659,40656049,40657143,40658469,40660025,40660917,40662036,40663431,40664650,40665993,40667373,40668564,40669949,40671086,40672659,40673833,40675178,40676666,40678078,40679559,40680940,40682497,40683945,40685535,40687075,40688362,40689809,40691317,40692682,40693953,40695503,40696779,40698150,40699247,40700875,40702055,40703513,40704821,40705677,40707298,40708679,40710023,40711182,40712416,40714038,40714953,40716072,40717506,40718783,40720295,40721441,40722705,40724002,40725197,40726812,40728089,40729544,40731042,40732298,40733950,40735348,40736855,40738398,40739790,40741399,40742674,40744169,40745718,40746949,40748505,40749768,40751120,40752449,40753628,40755208,40756475,40757910,40759157,40760016,40761660,40763067,40764356,40765553,40766796,40768402,40769253,40770423,40771855,40773068,40774611,40775680,40777004,40778318,40779538,40781123,40782458,40783942,40785426,40786652,40788292,40789664,40791177,40792755,40794086,40795659,40796994,40798501,40799985,40801121,40802716,40803918,40805381,40806658,40808021,40809484,40810649,40812111,40813310,40814174,40815746,40817163,40818307,40819564,40820911,40822327,40823228,40824504,40825866,40826919,40828468,40829587,40830975,40832128,40833759,40834848,40836180,40837641,40839078,40840507,40841985,40843554,40844993,40846570,40847989,40849384,40850774,40852243,40853712,40854939,40856564,40857754,40859166,40860311,40861886,40863061,40864578,40865893,40866814,40868283,40869643,40871045,40872136,40873455,40875060,40876047,40877144,40878496,40879823,40881130,40882499,40883706,40884995,40886141,40887794,40888982,40890504,40892003,40893291,40894876,40896222,40897736,40899264,40900691,40902338,40903596,40905052,40906537,40907898,40909386,40910707,40912070,40913401,40914521,40916125,40917337,40918775,40919988,40920818,40922401,40923766,40925080,40926271,40927563,40929154,40929966,40931204,40932623,40933841,40935382,40936483,40937823,40939125,40940372,40941981,40943273,40944790,40946299,40947571,40949201,40950562,40952142,40953750,40955116,40956712,40958066,40959622,40961158,40962385,40963791,40965160,40966471,40967764,40968898,40970501,40971676,40973098,40974370,40975229,40976822,40978167,40979479,40980666,40981899,40983477,40984296,40985528,40986954,40988112,40989589,40990659,40991973,40993316,40994612,40996172,40997320,40998814,41000361,41001731,41003351,41004766,41006339,41007901,41009344,41010944,41012295,41013852,41015393,41016655,41017949,41019493,41020775,41022081,41023222,41024826,41025999,41027409,41028694,41029604,41031016,41032422,41033823,41034900,41036235,41037794,41038706,41039791,41041146,41042421,41043578,41045017,41046182,41047570,41048799,41050497,41051616,41053010,41054570,41056035,41057454,41059002,41060533,41061960,41063524,41065022,41066531,41067907,41069416,41070873,41072032,41073722,41074866,41076304,41077483,41079051,41080260,41081658,41083054,41084009,41085300,41086669,41088095,41089180,41090480,41091772,41093158,41094103,41095471,41096903,41098121,41099733,41100816,41102207,41103381,41105046,41106287,41107678,41109111,41110514,41111937,41113455,41115047,41116533,41118116,41119654,41121113,41122560,41124123,41125535,41126719,41128413,41129654,41131097,41132272,41133873,41135079,41136480,41137870,41138857,41140105,41141503,41142951,41144083,41145385,41146549,41148159,41149017,41150306,41151810,41153099,41154735,41155821,41157211,41158540,41160029,41161458,41162800,41164302,41165821,41167057,41168765,41170387,41171998,41173620,41175024,41176752,41177951,41179185,41180477,41181848,41183154,41184966,41186463,41187910,41189116,41190374,41191963,41193433,41194904,41196718,41198110,41199434,41200701,41202262,41203673,41205138,41206966,41208385,41209831,41211116,41212404,41213893,41215297,41216675,41218520,41219930,41221534,41222911,41224154,41225631,41226866,41228170,41229603,41231350,41232449,41233710,41234996,41236456,41238071,41239401,41240788,41242194,41243775,41245180,41246890,41248597,41250337,41252250,41253837,41255804,41257692,41259489,41261245,41263101,41264915,41266690,41268610,41269579,41270479,41272216,41273902,41275691,41277395,41279104,41280780,41282235,41282978,41284141,41286130,41288039,41289784,41291316,41292564,41294005,41295522,41297243,41298823,41300671,41302477,41304352,41305839,41307539,41309252,41311027,41312924,41314802,41316692,41318427,41319980,41321848,41323265,41325214,41327033,41328955,41330730,41332551,41334399,41336291,41338017,41339835,41341665,41343506,41345406,41347277,41348972,41350635,41352286,41353810,41355359,41356980,41358511,41360200,41361717,41363295,41364892,41366324,41367946,41369418,41370996,41372533,41373958,41375355,41377182,41379095,41381037,41382734,41384587,41386417,41388310,41390095,41391986,41393894,41395631,41397503,41399369,41401212,41403080,41405083,41407035,41408981,41410867,41412842,41414822,41416801,41418645,41420568,41422577,41424542,41426415,41428340,41430109,41432033,41433694,41435746,41437781,41439824,41441784,41443726,41445621,41447391,41449360,41451290,41453209,41455172,41457120,41459094,41461024,41462949,41464902,41466840,41468780,41470717,41472620,41474535,41476496,41478401,41480303,41482222,41484137,41486042,41487897,41489815,41491552,41493418,41495269,41497078,41498824,41500558,41502275,41503906,41505197,41506850,41508747,41510237,41512064,41513620,41515325,41517036,41518615,41520328,41521944,41523267,41524453,41525591,41526825,41528327,41530082,41531747,41533159,41534317,41535829,41537535,41538945,41540101,41541923,41543824,41545615,41547334,41549117,41550901,41552496,41554441,41556272,41557976,41559655,41561339,41563066,41564646,41566401,41568088,41569597,41571274,41572726,41574278,41575876,41577265,41578497,41580135,41581774,41582879,41583848,41585443,41586996,41588578,41590450,41592480,41594445,41596429,41598413,41600337,41602174,41603817,41605363,41607231,41609220,41611063,41612956,41614862,41616629,41618413,41620199,41621958,41623607,41625474,41627310,41629066,41630921,41632610,41634432,41636046,41637582,41639257,41640813,41642520,41644250,41646046,41647897,41649394,41651231,41652744,41654334,41655766,41657544,41659436,41661236,41662981,41664286,41665707,41667403,41669141,41670763,41672195,41673796,41675495,41677107,41678654,41680307,41681825,41683520,41685110,41686409,41687992,41689447,41691121,41692782,41694072,41695695,41697142,41698854,41700505,41701957,41703382,41704966,41706545,41707670,41708947,41710345,41711508,41712929,41714190,41715752,41716912,41718257,41719686,41720998,41722527,41723764,41725094,41726557,41728043,41729574,41731249,41733070,41734312,41735891,41737715,41739642,41741458,41743360,41745141,41747074,41748564,41750100,41751362,41752935,41754581,41756630,41758640,41760613,41762032,41763888,41765586,41767359,41769190,41770668,41772499,41774292,41776093,41777733,41779535,41781029,41782631,41784151,41785415,41787148,41789025,41790745,41792310,41794161,41795443,41797292,41799091,41800991,41802457,41804055,41805724,41807404,41809199,41810943,41812955,41814444,41815952,41817730,41819422,41821169,41822812,41824565,41826111,41826588,41827171,41827633,41828383,41829006,41829718,41830120,41830744,41831990,41833979,41835957,41837924,41839839,41841805,41843763,41845732,41847658,41849529,41851171,41852789,41854423,41856240,41857799,41859382,41860986,41862590,41864353,41865898,41867715,41869067,41870586,41872059,41873602,41874968,41876372,41877864,41879450,41880772,41882024,41883282,41884808,41886197,41887711,41889126,41890468,41892038,41893509,41895021,41896538,41897931,41899285,41900694,41902111,41903538,41904908,41906331,41908073,41909826,41911631,41913490,41915379,41917260,41919109,41920869,41922584,41924398,41926051,41927814,41929608,41931439,41933204,41934926,41936601,41938160,41938960,41939764,41940621,41941599,41943299,41945001,41946661,41948277,41949975,41951577,41953185,41954837,41956484,41958230,41959901,41961639,41963304,41965049,41966851,41968683,41970497,41972072,41973793,41975291,41977101,41978436,41980242,41981811,41983709,41985394,41987247,41989034,41990901,41992664,41994503,41996299,41998138,41999455,42000514,42001556,42002619,42003677,42004760,42005837,42006892,42008367,42009906,42011477,42013008,42014592,42016131,42017697,42019229,42020794,42022370,42023838,42025483,42027083,42028659,42029673,42030698,42031784,42032807,42034322,42035725,42037478,42039295,42040871,42042051,42043274,42044786,42046159,42047240,42048704,42050368,42051658,42053172,42054810,42056399,42057946,42059584,42061191,42062562,42063787,42064636,42065710,42066397,42067181,42068052,42068784,42070197,42071624,42072923,42073476,42074253,42074790,42075355,42076163,42076695,42077572,42078296,42079218,42079708,42080294,42081092,42081745,42082618,42083134,42083987,42084680,42085557,42086085,42086599,42087553,42088252,42089101,42089534,42090348,42090944,42091636,42092045,42092318,42092875,42093132,42093741,42093953,42094507,42094727,42094908,42095536,42095689,42096213,42096410,42096933,42096973,42097211,42097623,42097855,42098446,42098692,42099712,42101150,42102662,42103833,42105022,42106242,42107429,42108670,42109610,42110593,42111599,42112552,42113558,42114557,42115543,42116903,42118265,42119692,42121092,42122575,42124083,42125485,42126874,42128277,42129882,42131347,42132838,42134392,42136014,42137619,42139132,42140640,42142251,42143629,42145034,42146422,42147817,42149234,42150638,42152135,42153578,42154963,42156370,42157786,42159162,42160496,42161439,42162381,42163303,42164396,42165355,42166308,42167269,42168189,42169267,42170161,42171159,42172083,42173356,42174770,42176239,42177584,42178957,42179872,42180794,42181749,42182709,42184440,42186022,42187613,42189184,42190631,42192213,42193801,42195377,42197096,42198459,42199806,42201154,42202453,42203760,42205069,42206452,42207783,42209389,42210977,42212570,42213769,42215170,42216577,42217802,42219283,42220904,42222519,42224074,42225629,42227211,42228982,42230664,42232416,42234068,42235566,42236788,42238225,42239651,42240991,42242331,42243473,42244949,42246374,42247853,42249297,42250745,42252367,42253832,42255540,42257197,42258788,42260415,42261968,42263555,42265109,42266736,42268377,42270078,42271725,42273305,42274957,42276372,42277979,42279524,42281100,42282782,42284423,42286029,42287654,42289220,42290725,42292335,42293956,42295525,42297243,42298883,42300472,42302136,42303580,42305206,42306772,42308373,42310060,42311661,42313221,42314758,42316342,42318173,42319712,42321268,42322795,42324570,42326245,42327868,42329442,42331036,42332845,42334429,42336134,42337734,42339346,42340308,42341245,42342212,42343239,42344804,42346290,42347865,42349349,42350894,42352177,42353453,42354770,42356149,42357267,42358434,42359698,42361059,42362281,42363189,42364152,42365283,42366614,42367782,42368876,42369958,42371130,42372282,42373170,42374085,42375441,42377313,42378805,42380705,42382253,42383813,42385236,42386672,42388000,42389407,42390820,42392255,42393595,42395250,42396762,42398270,42399812,42401348,42402868,42404393,42405925,42407462,42409072,42410456,42411830,42413208,42414579,42415983,42417354,42418717,42420359,42421885,42423406,42424939,42426518,42428072,42429586,42431103,42432638,42434392,42435983,42437588,42439239,42440875,42442470,42444062,42445738,42447492,42448986,42450453,42451873,42453276,42454716,42456168,42457587,42459015,42460812,42462576,42464307,42465988,42467736,42469480,42471183,42472874,42474693,42476504,42478234,42479920,42481570,42483300,42484978,42486666,42488330,42489990,42491025,42492274,42493396,42494497,42495620,42496662,42498000,42499111,42500200,42501163,42502089,42502763,42503439,42504100,42505314,42507070,42508778,42510532,42512205,42513957,42515641,42517377,42519044,42520909,42522640,42524361,42525998,42527694,42529381,42531088,42532800,42534626,42536420,42538172,42539977,42541700,42543473,42545247,42547016,42548739,42550632,42552349,42554056,42555688,42557348,42559015,42560720,42562413,42564181,42565591,42567099,42568465,42569949,42571300,42572263,42573285,42574307,42575900,42577741,42579524,42581360,42583026,42584899,42586678,42588530,42590307,42591937,42593113,42594327,42595711,42597397,42598454,42599470,42600542,42602240,42603925,42605538,42607122,42608738,42610341,42611960,42613566,42615261,42616833,42618305,42619744,42621147,42622518,42623994,42625408,42626848,42628315,42629991,42631484,42633047,42634547,42636045,42637490,42638921,42640381,42642015,42643617,42645271,42646864,42648428,42650078,42651684,42653274,42654994,42656556,42658019,42659443,42660924,42662348,42663792,42665231,42666656,42668265,42670104,42671942,42673783,42675474,42677346,42679113,42680959,42682767,42684501,42686158,42687758,42689398,42690943,42692589,42694192,42695810,42697494,42699046,42700527,42701984,42703377,42704928,42706397,42707867,42709339,42711075,42712887,42714711,42716587,42718268,42720140,42721952,42723802,42725606,42727264,42728914,42730530,42732221,42733774,42735419,42737024,42738698,42740310,42741769,42743195,42744653,42746021,42747483,42748926,42750352,42751897,42753740,42755546,42757387,42759280,42760961,42762786,42764604,42766468,42768124,42768766,42770530,42771486,42772223,42773390,42774073,42774755,42775902,42776600,42777686,42779122,42779770,42780481,42781267,42782664,42783767,42785024,42786386,42787630,42788432,42789559,42790857,42792052,42793339,42794562,42796178,42797519,42798817,42799825,42801132,42802803,42804369,42806121,42807773,42809522,42811074,42812674,42814345,42816014,42817039,42818048,42819502,42820981,42822547,42823566,42824555,42825546,42826566,42827941,42829017,42830155,42831261,42832504,42834078,42836091,42838130,42840133,42842137,42844160,42846190,42848184,42850193,42852225,42854261,42856286,42858295,42860309,42862314,42864331,42866296,42868328,42870353,42872381,42874378,42876367,42878386,42880397,42882372,42884376,42886409,42888438,42890444,42892452,42894459,42896485,42898498,42900445,42902471,42904479,42906372,42908294,42910175,42912071,42914001,42915846,42917695,42919568,42921453,42923342,42925229,42927065,42928952,42930769,42932619,42934510,42936343,42938011,42939684,42941363,42943031,42944697,42946362,42947972,42949738,42951395,42953049,42954713,42956345,42958004,42959669,42961302,42962890,42964604,42966039,42967463,42968902,42970310,42971774,42973189,42974602,42976057,42977653,42979053,42980476,42982116,42983540,42984984,42986459,42988134,42989534,42990991,42992540,42994163,42995674,42997057,42998621,43000177,43001715,43002988,43004551,43005898,43007820,43009596,43011062,43012707,43014356,43015913,43017477,43019004,43020714,43022320,43023873,43025456,43027099,43028857,43030552,43032126,43033678,43035350,43036880,43038457,43040004,43041556,43043101,43044650,43046176,43047698,43049231,43050702,43052374,43053969,43055492,43057138,43058862,43060448,43062110,43063847,43065650,43067163,43068683,43070649,43072588,43074293,43076006,43077823,43079781,43081714,43083642,43085623,43087552,43089511,43091408,43093342,43095172,43097013,43098872,43100776,43102755,43104603,43106468,43108300,43110116,43111890,43113677,43115450,43117375,43119352,43121305,43123260,43125187,43127108,43129010,43130917,43132859,43134879,43136749,43138646,43140502,43142320,43144127,43145969,43147753,43149667,43151670,43153654,43155632,43157602,43159535,43161470,43163384,43165312,43167290,43169087,43170860,43172597,43174334,43176094,43177869,43179603,43181395,43183313,43185111,43186908,43188733,43190500,43192304,43194090,43195869,43197761,43199232,43200673,43202081,43203517,43204925,43206348,43207765,43209214,43211182,43213171,43215097,43217145,43219095,43221031,43222924,43224826,43226720,43228637,43230533,43232500,43234432,43236371,43238298,43240180,43242079,43244006,43245889,43247829,43249705,43251223,43252732,43254334,43255948,43257526,43259121,43260636,43262239,43264159,43265971,43267764,43269510,43271291,43273037,43274770,43276490,43278248,43279586,43280881,43282173,43283542,43284834,43286177,43287546,43288880,43290629,43292292,43293932,43295617,43297324,43299067,43300809,43302474,43304173,43305653,43307123,43308619,43310189,43311752,43313245,43314718,43316167,43317854,43319518,43321000,43322688,43324367,43325909,43327533,43328948,43330304,43331641,43332968,43334212,43335478,43336641,43337920,43339677,43341560,43343422,43345308,43347207,43349083,43350946,43352821,43354735,43356688,43358583,43360455,43362318,43364211,43366093,43367979,43369839,43371716,43373138,43374568,43375913,43377310,43378779,43380251,43381733,43383186,43384992,43386655,43388353,43390123,43391780,43393391,43394961,43396498,43398066,43399600,43401161,43402751,43404372,43406101,43407813,43409514,43411159,43412834,43414282,43415767,43417238,43418690,43420029,43421431,43422841,43424440,43425908,43427421,43428913,43430444,43431734,43433227,43434745,43436207,43437864,43439350,43440885,43442367,43443578,43445076,43446572,43448091,43449679,43451663,43453617,43455541,43457177,43458604,43460014,43461443,43462328,43463739,43465113,43466511,43468102,43469269,43470409,43471525,43472687,43473838,43474908,43476067,43477269,43478794,43480207,43481663,43483617,43485496,43487417,43489331,43491229,43493132,43495036,43496968,43498644,43500254,43501759,43503285,43504731,43506031,43506953,43507860,43508715,43509622,43510446,43511408,43512128,43512981,43513916,43514913,43515669,43516596,43517483,43518577,43519438,43520500,43521780,43523038,43524361,43525653,43526390,43526766,43527382,43527957,43528256,43528568,43529000,43529750,43531106,43531940,43532860,43533764,43534813,43536041,43536898,43538226,43538909,43539129,43539574,43539867,43540168,43541602,43543008,43544512,43546231,43548069,43549835,43551647,43553471,43555287,43557082,43558836,43560628,43562366,43563998,43565646,43567219,43568831,43570435,43572086,43573663,43575348,43576698,43577994,43579330,43580647,43582267,43583958,43585620,43587290,43588979,43590617,43592271,43593961,43595643,43597323,43598992,43600658,43601630,43603200,43605034,43606894,43608661,43610442,43612242,43614113,43615908,43617674,43619312,43620760,43622249,43623694,43625362,43627219,43629061,43630930,43632771,43634649,43636521,43638374,43640256,43642104,43643234,43644988,43646142,43647230,43648478,43649500,43650745,43652778,43654781,43656757,43658679,43660665,43662608,43664502,43666403,43668288,43670264,43672204,43674154,43676081,43677991,43679883,43681812,43683831,43685567,43687220,43688978,43690775,43692584,43694395,43696053,43697676,43699589,43701641,43703689,43705738,43707791,43709839,43711883,43713910,43715963,43718019,43720074,43722113,43724151,43726199,43728241,43730288,43732345,43734393,43736276,43738195,43740048,43741900,43743715,43745584,43747404,43749279,43751231,43753137,43755010,43756854,43758705,43760545,43762395,43764245,43766202,43768048,43769908,43770667,43771479,43772269,43772945,43773680,43774127,43774896,43775795,43776590,43777011,43777623,43778429,43779270,43780010,43780409,43781144,43781988,43782859,43783414,43783868,43784641,43785461,43786405,43786840,43787458,43788673,43789695,43790871,43791502,43791997,43793275,43794351,43795471,43795901,43796637,43797810,43798878,43799929,43800321,43801295,43802371,43803436,43804269,43805534,43806777,43808348,43809631,43811334,43812838,43813814,43814970,43816126,43817272,43818461,43819565,43820662,43821758,43822914,43824073,43825255,43826422,43827546,43828651,43829687,43830764,43832321,43833417,43834505,43835670,43836744,43837817,43838906,43839948,43840975,43841977,43842871,43843908,43844954,43845817,43846707,43847476,43848365,43849768,43850192,43850727,43851232,43851758,43852343,43852822,43853388,43853963,43854410,43854919,43855391,43855911,43856417,43856947,43857521,43858023,43859378,43860848,43862334,43863827,43865374,43866871,43868379,43869889,43871408,43872577,43873567,43874549,43875920,43877544,43878957,43880352,43881646,43882998,43884455,43886181,43887829,43889479,43891146,43892761,43894373,43896032,43897678,43899345,43901253,43902957,43904639,43906388,43908073,43909765,43911489,43913166,43914967,43915951,43917064,43918298,43919632,43920940,43922223,43923546,43924661,43926020,43927455,43928850,43930279,43931810,43933318,43934868,43936417,43938071,43939510,43940539,43941701,43942850,43943981,43945154,43946237,43947329,43948449,43949595,43950713,43951876,43953047,43954141,43955216,43956211,43957315,43958784,43959914,43961018,43962200,43963281,43964358,43965445,43966497,43967523,43968547,43969417,43970447,43971513,43972376,43973267,43974058,43974936,43976297,43976718,43977257,43977764,43978312,43978859,43979320,43979891,43980450,43980905,43981436,43981904,43982417,43982916,43983446,43984033,43984540,43986155,43987953,43989733,43991549,43993330,43995140,43996879,43998726,44000123,44001545,44002928,44004315,44005972,44007795,44009621,44011514,44013362,44015227,44017074,44018940,44020807,44022334,44023881,44025473,44026979,44028429,44030123,44031645,44033344,44034933,44036697,44038490,44040352,44042076,44043618,44044826,44045963,44047126,44048491,44049798,44051522,44053263,44055069,44056890,44058635,44060481,44062250,44063980,44065771,44067103,44068312,44069448,44070554,44071914,44073337,44074903,44076788,44078514,44080428,44082179,44083990,44085796,44087538,44089388,44091151,44092908,44094677,44096378,44098003,44099676,44101445,44103203,44104973,44106566,44108239,44109484,44111259,44112877,44114490,44116084,44117671,44119236,44120815,44122439,44124206,44125690,44127453,44129239,44130712,44132132,44133885,44135666,44137215,44138911,44139937,44141059,44142202,44143325,44144498,44145636,44146722,44147855,44148999,44150147,44151272,44152479,44153600,44154696,44155725,44156805,44158056,44159131,44160340,44161480,44162235,44163022,44164182,44165329,44166398,44167388,44168365,44169601,44170718,44171593,44172257,44173340,44174577,44175676,44176651,44177574,44178792,44179914,44180897,44181451,44182597,44183809,44184988,44185978,44186823,44188016,44189152,44190137,44190577,44191767,44192946,44194140,44195095,44195895,44197051,44198197,44199265,44199695,44200877,44202044,44203183,44204139,44205409,44206515,44207600,44208791,44209861,44210921,44212039,44213061,44214044,44215058,44215953,44216974,44218005,44218843,44219663,44220501,44221481,44222374,44223531,44224753,44225935,44226353,44227404,44228636,44229777,44230632,44231865,44232984,44234203,44235390,44236646,44237782,44238899,44240126,44241311,44242583,44243699,44244803,44246033,44247242,44248576,44249654,44250851,44252056,44253226,44254527,44255691,44256683,44257720,44258818,44260181,44261294,44262294,44263297,44264513,44265797,44266843,44267826,44268902,44270217,44271453,44272517,44273432,44274549,44276091,44276668,44277196,44277707,44279029,44280572,44282321,44284180,44286039,44287860,44289425,44290798,44291272,44291786,44292290,44292822,44293371,44294399,44295919,44297372,44299012,44300530,44301983,44303629,44305155,44306610,44308245,44309779,44311228,44312933,44314608,44316443,44318225,44320041,44321789,44323574,44325400,44327167,44329000,44330869,44332608,44334478,44336208,44337956,44339988,44341695,44343536,44345313,44347081,44348884,44350761,44352506,44354224,44356132,44357824,44359659,44361544,44363238,44365118,44366894,44368731,44370458,44372309,44374058,44375843,44377734,44379489,44381221,44383105,44384837,44386683,44388473,44390227,44392121,44393830,44395660,44397416,44399318,44401054,44402904,44404663,44406402,44408306,44409975,44411796,44413690,44415429,44417193,44419006,44420837,44422554,44424407,44426227,44427955,44429851,44431573,44433328,44435218,44437022,44438787,44440591,44442347,44444199,44446030,44447856,44449530,44451435,44452498,44453726,44454856,44456128,44457402,44458506,44459794,44460850,44461621,44462352,44463172,44464026,44464578,44465046,44465811,44466634,44467554,44468018,44468518,44469328,44470189,44471042,44471630,44472017,44472839,44473738,44474579,44475520,44476731,44477740,44478880,44480059,44481160,44482349,44483417,44484525,44485634,44486797,44487888,44489084,44490264,44491349,44492413,44493504,44494924,44496394,44497934,44499573,44500668,44501770,44502958,44504053,44505158,44506246,44507296,44508341,44509366,44510255,44511281,44512320,44513255,44514159,44514925,44515807,44517231,44518661,44520116,44521397,44521821,44522381,44522890,44523449,44523984,44524451,44525007,44525552,44526026,44526530,44527008,44527498,44528006,44528538,44529113,44529632,44531260,44532910,44534584,44536133,44537849,44539486,44541161,44542835,44544535,44546235,44548001,44549641,44551268,44552879,44554547,44556126,44557179,44557815,44559159,44560579,44561932,44563311,44564640,44566017,44567404,44568716,44569962,44571032,44572257,44573312,44574544,44575639,44576886,44577999,44579217,44580621,44582029,44583484,44584886,44586366,44587728,44589153,44590589,44592147,44593708,44595171,44596527,44597982,44599424,44600857,44602193,44603616,44604800,44605911,44607168,44608269,44609586,44610753,44612097,44613274,44614556,44615701,44616940,44618155,44619512,44620665,44621830,44622999,44624140,44625607,44627117,44628644,44630159,44631866,44633339,44634915,44636388,44637846,44639229,44640684,44641965,44643055,44644202,44645402,44646884,44648245,44649263,44650699,44651615,44652615,44653801,44654982,44657005,44659034,44661049,44663062,44665080,44667076,44669054,44671050,44673073,44675099,44677088,44679124,44681144,44683143,44685164,44687126,44689101,44690440,44691784,44693414,44694927,44696050,44697173,44698292,44699419,44700540,44701657,44702914,44704522,44706000,44707519,44709089,44710892,44712576,44714316,44716063,44717917,44719475,44720971,44722492,44724110,44725718,44727272,44728815,44730413,44730812,44730911,44732590,44734618,44736585,44738474,44740379,44742266,44744086,44745966,44747872,44749759,44751674,44753580,44755489,44757469,44759370,44761234,44763148,44765082,44766980,44768803,44770754,44772714,44774598,44776507,44778450,44780373,44782122,44783892,44785732,44787445,44789422,44791343,44793210,44795063,44796961,44798882,44800763,44802655,44804544,44806495,44808317,44810151,44812002,44813921,44815713,44817231,44818884,44820574,44822237,44823885,44825608,44827283,44828961,44830574,44832317,44833932,44835599,44837273,44839002,44840661,44842340,44843979,44845684,44847469,44848917,44850456,44852068,44853684,44855255,44856744,44858229,44859819,44861420,44863042,44864692,44866174,44867721,44869280,44870839,44872397,44874277,44875780,44877343,44878995,44880521,44882469,44884264,44886011,44887818,44889692,44891548,44893401,44895242,44897134,44898447,44899745,44901054,44902420,44903748,44905102,44906442,44907686,44909326,44910769,44912215,44913639,44915162,44916633,44918090,44919532,44921138,44922596,44924040,44925483,44926949,44928450,44929928,44931380,44932801,44934436,44935900,44937357,44938786,44940288,44941751,44943225,44944656,44946191,44947712,44949149,44950577,44952027,44953518,44954971,44956397,44957812,44959399,44960820,44962204,44963636,44965079,44966557,44967986,44969402,44970830,44972413,44973796,44975181,44976662,44978134,44979581,44980960,44982364,44983976,44985368,44986763,44988155,44989609,44991046,44992473,44993863,44995264,44996880,44998270,44999697,45001168,45002661,45004158,45005579,45006982,45008602,45010061,45011489,45012940,45014431,45015914,45017405,45018860,45020251,45021849,45023203,45024504,45025872,45027262,45028613,45029931,45031238,45032715,45034111,45035430,45036730,45038128,45039443,45040819,45042152,45043415,45044989,45046312,45047603,45048943,45050279,45051624,45052925,45054298,45055622,45057229,45058689,45060120,45061613,45063102,45064610,45066068,45067478,45069101,45070509,45071907,45073345,45074847,45076296,45077768,45079154,45080571,45082178,45083536,45084943,45086380,45087828,45089297,45090687,45092087,45093702,45095122,45096510,45097889,45099353,45100840,45102277,45103684,45105102,45106719,45108113,45109498,45110893,45112386,45113844,45115259,45116693,45118254,45119735,45121150,45122557,45123995,45125500,45126953,45128382,45129785,45131540,45133217,45135063,45136791,45138667,45140335,45142045,45143841,45145672,45147503,45149294,45151003,45152651,45154428,45156192,45157930,45159663,45161534,45163307,45165200,45167043,45168920,45170787,45172665,45174525,45176385,45178323,45180150,45181931,45183722,45185533,45187330,45189103,45190883,45192840,45194588,45196341,45198024,45199735,45201438,45203131,45204801,45206540,45208386,45210135,45211878,45213568,45215293,45217009,45218716,45220400,45222232,45224112,45225959,45227789,45229590,45231377,45233235,45235037,45236844,45238773,45240500,45242275,45244013,45245744,45247457,45249203,45250993,45252805,45254548,45256462,45258303,45260135,45261964,45263757,45265512,45267303,45269073,45270960,45272640,45274388,45276101,45277632,45279398,45281124,45282746,45284518,45286335,45288079,45289854,45291560,45293178,45294865,45296457,45298291,45300185,45301816,45303455,45305089,45306745,45308444,45310128,45311807,45313461,45315230,45316917,45318534,45320165,45321872,45323577,45325268,45326924,45328671,45330497,45332314,45334051,45335842,45337674,45339471,45341285,45343069,45344914,45346705,45348425,45350157,45351916,45353715,45355473,45357266,45359016,45360778,45362484,45364191,45365934,45367652,45369399,45371089,45372818,45374614,45376307,45377995,45379751,45381415,45383092,45384790,45386521,45388272,45390052,45391735,45393467,45395089,45396740,45398387,45400105,45401830,45403647,45405050,45406561,45408062,45409609,45411128,45412625,45414115,45415623,45417580,45419562,45421492,45423465,45425487,45427422,45429389,45431367,45433269,45435211,45437226,45439257,45441232,45443176,45445148,45447134,45449146,45450940,45451867,45451905,45451945,45451983,45452301,45452341,45452380,45452420,45452493,45454455,45456254,45458096,45459954,45461771,45463607,45465424,45467213,45469126,45470601,45472097,45473538,45474978,45476347,45477806,45479253,45480675,45482595,45484424,45486198,45487978,45489778,45491530,45493304,45495078,45496661,45497496,45497583,45497615,45497655,45497695,45498013,45498053,45498085,45498125,45498856,45499981,45501553,45503201,45504883,45506544,45508252,45509938,45511616,45513306,45515049,45516129,45517390,45518843,45519999,45520918,45522515,45523926,45525140,45526246,45528068,45529673,45531325,45531755,45531795,45531835,45531874,45532193,45532226,45532266,45532306,45532876,45534152,45535493,45536699,45537900,45539595,45541249,45542868,45544571,45546262,45547928,45549601,45551208,45552775,45552815,45552853,45552893,45552933,45554046,45554358,45554472,45555714,45557567,45559579,45561315,45562970,45564575,45566227,45567913,45569572,45571278,45573010,45574691,45576427,45578175,45579929,45581669,45583384,45585095,45586786,45588533,45589625,45590768,45591125,45592224,45594042,45595799,45597517,45599255,45600980,45602779,45604445,45606191,45608061,45609910,45611749,45613632,45615402,45617329,45619121,45620978,45622859,45624698,45626380,45628028,45629773,45631425,45633237,45635029,45636734,45638616,45640396,45642372,45644146,45646101,45647909,45649852,45651715,45653596,45655590,45657088,45658467,45659769,45660981,45662315,45663908,45665462,45666922,45668251,45669664,45670901,45672183,45673421,45674720,45676032,45677478,45679242,45679840,45680654,45681528,45682511,45683869,45685541,45686612,45687333,45687981,45688718,45690200,45691772,45693473,45694940,45695750,45697016,45698610,45699971,45701109,45702033,45702860,45703825,45704566,45705187,45706098,45707323,45708687,45709901,45711129,45712478,45713822,45715230,45716501,45717981,45719759,45721482,45723301,45724990,45726776,45728474,45730244,45731967,45733743,45735496,45737239,45739010,45740780,45742581,45744349,45746094,45747262,45748230,45749157,45750132,45751706,45753669,45755373,45757294,45759180,45760303,45761523,45762713,45763940,45765969,45767988,45769985,45772011,45773950,45775868,45777752,45779645,45781593,45783633,45785683,45787731,45789772,45791530,45793348,45795134,45796971,45798782,45800581,45802290,45804100,45805821,45807473,45809115,45810719,45812428,45814014,45815294,45816609,45818246,45819540,45820700,45821965,45823249,45824578,45825756,45827034,45828262,45829871,45831260,45832474,45833678,45835391,45836985,45837768,45838565,45840139,45841784,45842627,45843371,45844667,45845935,45847018,45847796,45848758,45850330,45851934,45853300,45854704,45856312,45858209,45860084,45861942,45863815,45865687,45867607,45869551,45871514,45873362,45875037,45876695,45878350,45880002,45881710,45883507,45885300,45887012,45888614,45890044,45891455,45892882,45894447,45895892,45897323,45898763,45900361,45901888,45903334,45904831,45906374,45907943,45909453,45910922,45912466,45914378,45916359,45918304,45920229,45922245,45924217,45926203,45928174,45930177,45931939,45933716,45935469,45937227,45939018,45940590,45942133,45943702,45945594,45947510,45949308,45951213,45953145,45954921,45956750,45958515,45960357,45962308,45964170,45966013,45967911,45969789,45971602,45973381,45975198,45977098,45978532,45980028,45981616,45983218,45984435,45985682,45987280,45988573,45989756,45991017,45992226,45993942,45995073,45996321,45997619,45999491,46001269,46003059,46004827,46006629,46008438,46010242,46012023,46013828,46015702,46017533,46019334,46021141,46022593,46023482,46024334,46025144,46026113,46027257,46028440,46029584,46030765,46032051,46033257,46034445,46035656,46036985,46038384,46039792,46041085,46042688,46044523,46046392,46048235,46050115,46051967,46053768,46055624,46057449,46059405,46061306,46063244,46065158,46067088,46068997,46070922,46072880,46074766,46076546,46078317,46080098,46081757,46083574,46085317,46086993,46088505,46090095,46091810,46093602,46095404,46097249,46099085,46100812,46102669,46104479,46105944,46107411,46108812,46110333,46111884,46113480,46115264,46116832,46118389,46120026,46121668,46123384,46125063,46126821,46128565,46130356,46132153,46134044,46136100,46138153,46140115,46142081,46144053,46146042,46148030,46150020,46151954,46153918,46155840,46157752,46158857,46160187,46161567,46162610,46164362,46166156,46167899,46169658,46171385,46172896,46174548,46176074,46177720,46179489,46181257,46183034,46184764,46186607,46188385,46190199,46191956,46193739,46195434,46197150,46198882,46200514,46202203,46204022,46205812,46207447,46208614,46209645,46210710,46211875,46213430,46213974,46214526,46215178,46216881,46217588,46218998,46219719,46221141,46221642,46222332,46222779,46223387,46224362,46225081,46225896,46226585,46227342,46228521,46229719,46230915,46232002,46233420,46234740,46236188,46237686,46239160,46240550,46241987,46243550,46245095,46246575,46247984,46249531,46251088,46252629,46253987,46255497,46257063,46258502,46259830,46261292,46262702,46264323,46265766,46267149,46268634,46269564,46269791,46270025,46270237,46271028,46271518,46271967,46272443,46273285,46275333,46277356,46279396,46281437,46283476,46285521,46287561,46289592,46291629,46293598,46295518,46297491,46299383,46301283,46303215,46305119,46307008,46308445,46309829,46311255,46312709,46314053,46315181,46316347,46317471,46318705,46320152,46321513,46323054,46324547,46326404,46328215,46330049,46331927,46333794,46335618,46337402,46339208,46341095,46342865,46344611,46346370,46348169,46349915,46351604,46353363,46355037,46356599,46357898,46359180,46360552,46362102,46363423,46364706,46366076,46367778,46369553,46371301,46373106,46374846,46376052,46377319,46378521,46379788,46381637,46383463,46385243,46387038,46388723,46390185,46391576,46393092,46394649,46396686,46398718,46400753,46402775,46404787,46406773,46408746,46410744,46412489,46413992,46415489,46416965,46418671,46420372,46422031,46423715,46425443,46427436,46429415,46431387,46433380,46435215,46436938,46438660,46440382,46442358,46444410,46446458,46448505,46450480,46452061,46453595,46454340,46454872,46455411,46455946,46456879,46458304,46459728,46461148,46462269,46463565,46465142,46466759,46468003,46469357,46470922,46472468,46473960,46475601,46477256,46478998,46480631,46482542,46484393,46485704,46486927,46488271,46489511,46490699,46491632,46492655,46493614,46494946,46495826,46496812,46497747,46498590,46499846,46500503,46501212,46502818,46504810,46506795,46508752,46510537,46512501,46514495,46516482,46518474,46520320,46522225,46524118,46526002,46527983,46529994,46531149,46533154,46535147,46537025,46538918,46540813,46542726,46544731,46546725,46548550,46550561,46552201,46553857,46555498,46556993,46558484,46560011,46561622,46563117,46564688,46566569,46568485,46570335,46572185,46574114,46576005,46577859,46579725,46581601,46583103,46584580,46586028,46587933,46589889,46591868,46593879,46595889,46597721,46599512,46601313,46603112,46604955,46606830,46608722,46610601,46612280,46613693,46615169,46616567,46617991,46619459,46620990,46622469,46623909,46625447,46627123,46628834,46630466,46632021,46633570,46635143,46636694,46638315,46640049,46641674,46643425,46645180,46646832,46648596,46650256,46651992,46653659,46655326,46656847,46658568,46660224,46661897,46663403,46665069,46666813,46668255,46669825,46671385,46672933,46674392,46676072,46677668,46679294,46680717,46682248,46683787,46685273,46686761,46688228,46689792,46691512,46692988,46694293,46695527,46697048,46698672,46700332,46702096,46703506,46705229,46706828,46708446,46710230,46711969,46713500,46715153,46716661,46718354,46719882,46721400,46723035,46724537,46725996,46727494,46729298,46730642,46732045,46733418,46734669,46735817,46736954,46738261,46739441,46740825,46742287,46743642,46744999,46746574,46747934,46749143,46750509,46752378,46754067,46755808,46757375,46758626,46759671,46760691,46761556,46762499,46763570,46764765,46766064,46767315,46768896,46770483,46772047,46773769,46775713,46777052,46778336,46779867,46781329,46782859,46784340,46785799,46787198,46788675,46790352,46792078,46793775,46795480,46797138,46798857,46800651,46802612,46804278,46806080,46807847,46809435,46810803,46812147,46813475,46814875,46816326,46817879,46819496,46821121,46822730,46824166,46825600,46826968,46828578,46829983,46831355,46832727,46834121,46835528,46836912,46838567,46840070,46841582,46843047,46844457,46845913,46847373,46848847,46850353,46851804,46853560,46855358,46856877,46858279,46859638,46861031,46862427,46863755,46865121,46866615,46868307,46870066,46871808,46873408,46874915,46876424,46877863,46879290,46881013,46882437,46883876,46885265,46886711,46888128,46889674,46891359,46893006,46894588,46896039,46897557,46899040,46900452,46901892,46903380,46904821,46906495,46908131,46908468,46908735,46910336,46911955,46912329,46912609,46914124,46915711,46916109,46916383,46917908,46919511,46919933,46920200,46921735,46923318,46923766,46924029,46925488,46927072,46927536,46927798,46929043,46930315,46931595,46932841,46934291,46935543,46936835,46938145,46939532,46940816,46942057,46943382,46944684,46946125,46947393,46948753,46950053,46951506,46953032,46954293,46955550,46956816,46958048,46959327,46960583,46961876,46963103,46964555,46965780,46966992,46968220,46969425,46970617,46971810,46973001,46974505,46975759,46977014,46978270,46979558,46980849,46982138,46983435,46984697,46986586,46988315,46990100,46991788,46993455,46995076,46996906,46998766,47000221,47001467,47002842,47004190,47005529,47006909,47008254,47009519,47010907,47012204,47013646,47014940,47016316,47017691,47019108,47020472,47021963,47023810,47025432,47027032,47028614,47030237,47031847,47033343,47034730,47036039,47037419,47038822,47040307,47041833,47043379,47044815,47046395,47048127,47050017,47051678,47053268,47054842,47056467,47058058,47059530,47060941,47062249,47063643,47065044,47066503,47068053,47069582,47070997,47072579,47074283,47076175,47077846,47079423,47081012,47082660,47084254,47085745,47087205,47088487,47089842,47091269,47092726,47094308,47095832,47097267,47098782,47100507,47102421,47104094,47105681,47107263,47108927,47110515,47112016,47113497,47114739,47116101,47117503,47118946,47120526,47122038,47123468,47124986,47126690,47128592,47129858,47131128,47132233,47133178,47134126,47135272,47136330,47137441,47138528,47139809,47141092,47142297,47143203,47144182,47145254,47146335,47147978,47149210,47150508,47151631,47152609,47153584,47154710,47155805,47156850,47157943,47159221,47160488,47161713,47162665,47163653,47164727,47165797,47167291,47169259,47171172,47173082,47175046,47177014,47178971,47180922,47182837,47184702,47186505,47188282,47190138,47192002,47193946,47195866,47197817,47199497,47201250,47203221,47205158,47207135,47209155,47211140,47213061,47215031,47216948,47218070,47219247,47220398,47221545,47222831,47223955,47225110,47226237,47227943,47229709,47231463,47233234,47235013,47236773,47238590,47240380,47242111,47243900,47245666,47247446,47249197,47250958,47252617,47254620,47256568,47258469,47260366,47262251,47264231,47265859,47266580,47267372,47269298,47271261,47273277,47275261,47277213,47279170,47281162,47283114,47285112,47287064,47289019,47290980,47292962,47294922,47296896,47298837,47300798,47302642,47304219,47305772,47307365,47308913,47310514,47312076,47313638,47315299,47317075,47318706,47320381,47322047,47323674,47325455,47327126,47328874,47330509,47332210,47333671,47335254,47336684,47338395,47340058,47341794,47343464,47345192,47346885,47348558,47350324,47352065,47353954,47355676,47357519,47359313,47361151,47362766,47364456,47366085,47367846,47369551,47371327,47373022,47374711,47376395,47377912,47379530,47381068,47382735,47384346,47386137,47387799,47389571,47391271,47393046,47394828,47396649,47398265,47399752,47401526,47403165,47404977,47406769,47408577,47410355,47412176,47413986,47415811,47417608,47419377,47421079,47422811,47424570,47426127,47427773,47429311,47431075,47432726,47434586,47436278,47438157,47439913,47441661,47443323,47445106,47446874,47448602,47449877,47451778,47453694,47455497,47457061,47458977,47460857,47462341,47463912,47465460,47467461,47469471,47471444,47472994,47474386,47475630,47476861,47478178,47479336,47480472,47482149,47483776,47485384,47486939,47488430,47489928,47491466,47492993,47494670,47495909,47497043,47497958,47498876,47499995,47501229,47502250,47503238,47504412,47505516,47507418,47509170,47511043,47512875,47514699,47516510,47518364,47520137,47522041,47523798,47525346,47527067,47528701,47530438,47532183,47533876,47535656,47537540,47539357,47541225,47543081,47544903,47546740,47548544,47550355,47552278,47554026,47555602,47557318,47558999,47560723,47562478,47564255,47565983,47567799,47569622,47571528,47573354,47575243,47577041,47578968,47580765,47582716,47584655,47586528,47588518,47590457,47592345,47594310,47596325,47598243,47600190,47601990,47603708,47605523,47607307,47609121,47610932,47612779,47614637,47616001,47617336,47619008,47620428,47621619,47623221,47624714,47626498,47627900,47628947,47630304,47631723,47632843,47633799,47634430,47634726,47635869,47637104,47638411,47639717,47641024,47642461,47643729,47645044,47646387,47647700,47649173,47650486,47651821,47653128,47654566,47655944,47657264,47658621,47659956,47661424,47662928,47664262,47665538,47667052,47668756,47670650,47672609,47674646,47676693,47678691,47680695,47682677,47684616,47686263,47687899,47689419,47690910,47692637,47694217,47695937,47697664,47699352,47701110,47702897,47704517,47706275,47707872,47709446,47711051,47712691,47714273,47716025,47717922,47719849,47721702,47723336,47725048,47726838,47728813,47730771,47732627,47734356,47736071,47737912,47739831,47741672,47743439,47744970,47746777,47748702,47750584,47752468,47754118,47755824,47757723,47759718,47761702,47763622,47765387,47767047,47768914,47770790,47772662,47774480,47775874,47776865,47777858,47778816,47780173,47781627,47783214,47784820,47786464,47788096,47789776,47791428,47793055,47794569,47796487,47798169,47799902,47801618,47803210,47804940,47806568,47808194,47809878,47811562,47813456,47815218,47816937,47818698,47820440,47822160,47823903,47825501,47827193,47828881,47830612,47832321,47834113,47836059,47837839,47839167,47841018,47842894,47844752,47846690,47848654,47850575,47852460,47854184,47855931,47857587,47859260,47860978,47862928,47864802,47866714,47868595,47870499,47872487,47874401,47876359,47878307,47880244,47882073,47883873,47885666,47887448,47889313,47891277,47893147,47895050,47896935,47898842,47900701,47902581,47904327,47905653,47906746,47908102,47909825,47911427,47913104,47914720,47916591,47918359,47920091,47921881,47923637,47925379,47927155,47928912,47930684,47932421,47934221,47935902,47936980,47937561,47938181,47938916,47940082,47941059,47942383,47943629,47944873,47945831,47947678,47949387,47951016,47952569,47954320,47955922,47957580,47959267,47960887,47962300,47963964,47965476,47966852,47968016,47969619,47971188,47972949,47974634,47976278,47977992,47979738,47981307,47982957,47984508,47986011,47987606,47989161,47990836,47992382,47994061,47995603,47997191,47998858,48000422,48002066,48003631,48005302,48006840,48008489,48009940,48011464,48013079,48014596,48016191,48017704,48019213,48020873,48022438,48024111,48025647,48027177,48028986,48030788,48032600,48034446,48036310,48038161,48040016,48041838,48043739,48045544,48047368,48049192,48051114,48053023,48054886,48056736,48058620,48060602,48062621,48064586,48066507,48068395,48070286,48072218,48074147,48076068,48077978,48079908,48081803,48083669,48085539,48087396,48089300,48091183,48092977,48094647,48096289,48097966,48099675,48101283,48102886,48104554,48106169,48107791,48109440,48111048,48112788,48114422,48116065,48117728,48119377,48121012,48122663,48124281,48125923,48127674,48129352,48130974,48132609,48134230,48135851,48137489,48139160,48141005,48142858,48144738,48146574,48148436,48150298,48152145,48154008,48155855,48157790,48159645,48161480,48163312,48165170,48167011,48168835,48170688,48172633,48174525,48176381,48178232,48180105,48181963,48183805,48185666,48187548,48189229,48190628,48192067,48193523,48194839,48196280,48197706,48199312,48200715,48202059,48203523,48205014,48206430,48207876,48209636,48211501,48213337,48215179,48216960,48218759,48220572,48222481,48224396,48226092,48227818,48229532,48231209,48232893,48234583,48236331,48237974,48239683,48241227,48243016,48244733,48246424,48248189,48249958,48251658,48253249,48254945,48256800,48258640,48260446,48262327,48263941,48265718,48267583,48269474,48271331,48273176,48274891,48276585,48278374,48280145,48281920,48283680,48285212,48286955,48288647,48290309,48292134,48293791,48295470,48297251,48299089,48300859,48302608,48304357,48305998,48307693,48309348,48310993,48312758,48314440,48315873,48317366,48318866,48320436,48321924,48323586,48325038,48326710,48328289,48329784,48331402,48333096,48334698,48336192,48337765,48339378,48340869,48342464,48343987,48345774,48347602,48349350,48351117,48352874,48354630,48356332,48357743,48359173,48360956,48362762,48364564,48366314,48368020,48369678,48371146,48372821,48374566,48376295,48377918,48379269,48380590,48382397,48384148,48385885,48387234,48388872,48390293,48391774,48393434,48394868,48396563,48398047,48399526,48401039,48402561,48404089,48405645,48407133,48408436,48409928,48411461,48413046,48414590,48416088,48417594,48419155,48420762,48422253,48423813,48425168,48426612,48428060,48429537,48431351,48433189,48435059,48436850,48438679,48440512,48442303,48444027,48445758,48447248,48449047,48450807,48452522,48454329,48455987,48457748,48459522,48461258,48463035,48465049,48467079,48469080,48471094,48473110,48475107,48476874,48478640,48480380,48482005,48483743,48485462,48487255,48488931,48490629,48492358,48494149,48495884,48497555,48499349,48501049,48502774,48504435,48506103,48507776,48509506,48511164,48512950,48514630,48516404,48518065,48519728,48521442,48523170,48524856,48526544,48528202,48530009,48531612,48533046,48534477,48536241,48537993,48539643,48541345,48543007,48544424,48545939,48547456,48549002,48550429,48551931,48553480,48555003,48556603,48558396,48560144,48561811,48563582,48565239,48566985,48568737,48570478,48572091,48573764,48575421,48577100,48578720,48580317,48581932,48583643,48585260,48586958,48588592,48590229,48591928,48593541,48595218,48596848,48598590,48600244,48601893,48603527,48605200,48606831,48608475,48610112,48611762,48613465,48615107,48616753,48618402,48620124,48621767,48623372,48624961,48626717,48628335,48630012,48631688,48633473,48635143,48636784,48638406,48640053,48641763,48643366,48645025,48646701,48648518,48650144,48651762,48653381,48655058,48656705,48658542,48660383,48662045,48663679,48665427,48667258,48668906,48670629,48672399,48674241,48675989,48677814,48679733,48681605,48683506,48685533,48687488,48689437,48691380,48693333,48695144,48696985,48698901,48700882,48702915,48704915,48706915,48708793,48710713,48712565,48714381,48716245,48718242,48720255,48722273,48724308,48726290,48728273,48730175,48732087,48733972,48735894,48737806,48739736,48741690,48743715,48745421,48747298,48749197,48751101,48752951,48754762,48756344,48757956,48759835,48761661,48763472,48765086,48766725,48768324,48769963,48771587,48773353,48774392,48775449,48776377,48777456,48778685,48779953,48781093,48782431,48783625,48784904,48786051,48787321,48788571,48789785,48790961,48792204,48793384,48795099,48796795,48798552,48800292,48801961,48803676,48805365,48807116,48808780,48810478,48812184,48813971,48815674,48817341,48818985,48820694,48822327,48824053,48825681,48827321,48828980,48830730,48832398,48834067,48835682,48837400,48839078,48840775,48842436,48844070,48845907,48847615,48849337,48851065,48852738,48854461,48856188,48857921,48859730,48861470,48863143,48864885,48866668,48868692,48870688,48872708,48874749,48876784,48878820,48880849,48882873,48884891,48886938,48888981,48891029,48893086,48895134,48897184,48899225,48901260,48903218,48905074,48906941,48908847,48910766,48912655,48914566,48916432,48918332,48919980,48921698,48923230,48924910,48926698,48928380,48929912,48931566,48933299,48934992,48936636,48938328,48939975,48941671,48943438,48945220,48946823,48948546,48950185,48951732,48953391,48954841,48956545,48958312,48960196,48961909,48963569,48965208,48966947,48968905,48970778,48972653,48974446,48976216,48977929,48979756,48981585,48983453,48984927,48986944,48988909,48990934,48992865,48994770,48996668,48998348,49000099,49001745,49003530,49005235,49007012,49008802,49010560,49012233,49013999,49015709,49017403,49019095,49020802,49022247,49023755,49025244,49026762,49028337,49029851,49031372,49032893,49034384,49035959,49037459,49038972,49040495,49042037,49043556,49045096,49046604,49048071,49049081,49049917,49050921,49051878,49053402,49054809,49056098,49057489,49058838,49060276,49061615,49063031,49064536,49066154,49067882,49069499,49071130,49072785,49074385,49076031,49077757,49079531,49081227,49082888,49084572,49086378,49088154,49089877,49091615,49093320,49094995,49096682,49098351,49099953,49100989,49102575,49104244,49105953,49107836,49109733,49111657,49113531,49115397,49117275,49119194,49121098,49123008,49124966,49126628,49128217,49129705,49131245,49132695,49134270,49136008,49137970,49139868,49141694,49143336,49144885,49146461,49148101,49149926,49151825,49153686,49155299,49156964,49158609,49160259,49161894,49163582,49165285,49167074,49168468,49169973,49171651,49173329,49175058,49176788,49178518,49179646,49181171,49182410,49183783,49185287,49186976,49188741,49190484,49191824,49193260,49194752,49196127,49197534,49198896,49200259,49201596,49202951,49204352,49205857,49207297,49208579,49209944,49211284,49212606,49213965,49215233,49216572,49218144,49219509,49221083,49222598,49224294,49226019,49227452,49228582,49230036,49231250,49232664,49234140,49235741,49237347,49238826,49240095,49241301,49242967,49244424,49245798,49247132,49248272,49249578,49250855,49252323,49253988,49255377,49256954,49258649,49260394,49262132,49263814,49265588,49266841,49268488,49269827,49271491,49273039,49274750,49276445,49277906,49279114,49280745,49282277,49283534,49285010,49286645,49288280,49289715,49291197,49292438,49294093,49295380,49296839,49298368,49300058,49301805,49303504,49304965,49306507,49308129,49309577,49311136,49312561,49314094,49315613,49317100,49318513,49320349,49322136,49323851,49325601,49327398,49327778,49327877,49329054,49329511,49330180,49330769,49331308,49331791,49332544,49333178,49333680,49334972,49335885,49336767,49338196,49339595,49340990,49342432,49343847,49345393,49346990,49348696,49350301,49351944,49353499,49355101,49356952,49358534,49359655,49360820,49362003,49363254,49364580,49365843,49367144,49368407,49369882,49371389,49372987,49374531,49376032,49377593,49379267,49380866,49382251,49383592,49384976,49385845,49385870,49385900,49385925,49386371,49387063,49388285,49389032,49390490,49392117,49393786,49395403,49397036,49398253,49399904,49401428,49403034,49404574,49406282,49408187,49410122,49412028,49413976,49415855,49417724,49419199,49420696,49422189,49423535,49424491,49425445,49426690,49428022,49429427,49430868,49432358,49433868,49435295,49436822,49438553,49440319,49441854,49443460,49444959,49446521,49448108,49449625,49451174,49452886,49454936,49456984,49459020,49461032,49462924,49464857,49466875,49468846,49470591,49472502,49474373,49476317,49478313,49480349,49482338,49484372,49486358,49488379,49490351,49492384,49494435,49496446,49498172,49500004,49502005,49504011,49506008,49507951,49509614,49511227,49512474,49513705,49514891,49516315,49518308,49520220,49521933,49523683,49525579,49527471,49529237,49531022,49532804,49534669,49536696,49538724,49540743,49542751,49544795,49546770,49548815,49550734,49552277,49553835,49555388,49556908,49558439,49559992,49561524,49563030,49564405,49565800,49567114,49568455,49569748,49571051,49572381,49573900,49575908,49577932,49579913,49581899,49583897,49585879,49587800,49589736,49591751,49593589,49595312,49596982,49598646,49600364,49602002,49603339,49603564,49604009,49605256,49606574,49607899,49608882,49609899,49610858,49611964,49613123,49614739,49616440,49618000,49619706,49621433,49623107,49624627,49626206,49627788,49629389,49630931,49632521,49634017,49635508,49636752,49638134,49639195,49640366,49641600,49642941,49644182,49645504,49646928,49648418,49649985,49651588,49653052,49654501,49655913,49657197,49658152,49659230,49660822,49662337,49663124,49664287,49665580,49666948,49668434,49669895,49671381,49672895,49674087,49675419,49676963,49678657,49680605,49682409,49683703,49685042,49686226,49687617,49689189,49690826,49692420,49694074,49695652,49697252,49698745,49700343,49701840,49703297,49704535,49705959,49707533,49709087,49710452,49711814,49713198,49714600,49715945,49717234,49717791,49718453,49718899,49719612,49721058,49722582,49724136,49725690,49727116,49728594,49730135,49731593,49732975,49734319,49735463,49736629,49737925,49739319,49740827,49742204,49743322,49744299,49745165,49746331,49748061,49749962,49751747,49753524,49755079,49756486,49757497,49758617,49760173,49761765,49763325,49764880,49766453,49768030,49769589,49771292,49773061,49774893,49776618,49778440,49780227,49782106,49783879,49785637,49787044,49788441,49789796,49791213,49792624,49794118,49795787,49797559,49799527,49801472,49803345,49805278,49807246,49809191,49811064,49813029,49814935,49816764,49818309,49819587,49820318,49821070,49821916,49823156,49824638,49826228,49827895,49829605,49831083,49832693,49834051,49835388,49836624,49837587,49838189,49839020,49839841,49840713,49841327,49842245,49843681,49844909,49845401,49845935,49846438,49847396,49849151,49850843,49851927,49853064,49854088,49855264,49856632,49857988,49859086,49860216,49861121,49862114,49863546,49865018,49866450,49867893,49869318,49870879,49872577,49874337,49875976,49877767,49879645,49881502,49883058,49884461,49885458,49886604,49887742,49888914,49889868,49890881,49891708,49892767,49893765,49894908,49896121,49897273,49897726,49898272,49898894,49899558,49900037,49900559,49901163,49901811,49902277,49902810,49903442,49904147,49904646,49905201,49905810,49906490,49906908,49907394,49907951,49908965,49910844,49912541,49913584,49914709,49915742,49916863,49917895,49918991,49920098,49921434,49923238,49924906,49926584,49928295,49929933,49931607,49933343,49934916,49936064,49937376,49939039,49940703,49942383,49944142,49946018,49947509,49947760,49948119,49948407,49948786,49948977,49949258,49949505,49949879,49949930,49950199,49950224,49950405,49950563,49950847,49951107,49951406,49951647,49952273,49953722,49955196,49956812,49958345,49959412,49960491,49961558,49962683,49963867,49965190,49966657,49968178,49969627,49971241,49973094,49974973,49976670,49978379,49979759,49981376,49983003,49984660,49986031,49987601,49989581,49991565,49993594,49995626,49997566,49999534,50001491,50003466,50005432,50007398,50009408,50011234,50012503,50013798,50015418,50017021,50018608,50019783,50021434,50022885,50024401,50025891,50027385,50028838,50030301,50031779,50033312,50034839,50036354,50037779,50038780,50040092,50041333,50042775,50043894,50045177,50046437,50047536,50048593,50049710,50051758,50053213,50053840,50055469,50057517,50058408,50059201,50061111,50062955,50063753,50064895,50066943,50068263,50068873,50070480,50072446,50074450,50076498,50078546,50080594,50082513,50084502,50086550,50088598,50090646,50092546,50094525,50096378,50098362,50100241,50102272,50104299,50106200,50108173,50110135,50112121,50114077,50116023,50117966,50119883,50121872,50123786,50125795,50127795,50129726,50131727,50133592,50135590,50137451,50139423,50141281,50143260,50145308,50147356,50149219,50151197,50153245,50155293,50157156,50159129,50161086,50163073,50165093,50166960,50168935,50170983,50173015,50175020,50176958,50178979,50181027,50183077,50184992,50187000,50188903,50190912,50192840,50194821,50196872,50198920,50200968,50202999,50204916,50206907,50208955,50211003,50213051,50214916,50216891,50218867,50220853,50222845,50224752,50226735,50228681,50230660,50232705,50234572,50236547,50238414,50240409,50242453,50244489,50246357,50248386,50250439,50252485,50254382,50256389,50258437,50260485,50262470,50264434,50266430,50268478,50270503,50272409,50274390,50276438,50278486,50280349,50282320,50284368,50286416,50288292,50290270,50292141,50294121,50295992,50298020,50299934,50301943,50303847,50305856,50307730,50309758,50311629,50313600,50315466,50317380,50319317,50321154,50323163,50325210,50327258,50329123,50331104,50333152,50335200,50337065,50339045,50341093,50343141,50345005,50346985,50349042,50351097,50352960,50354933,50356982,50358845,50360843,50362896,50364761,50366757,50368702,50370684,50372692,50374611,50376540,50378478,50380411,50382344,50384258,50386219,50388103,50390079,50392094,50394001,50395982,50397859,50399836,50401699,50403632,50405541,50407521,50409569,50411565,50413524,50415519,50417567,50419435,50421464,50423344,50425374,50427244,50429274,50431148,50433181,50435056,50437032,50439007,50440993,50442982,50444888,50446829,50448734,50450676,50452583,50454522,50456432,50458382,50460283,50462264,50464274,50466297,50468175,50470205,50472240,50474252,50476239,50478199,50480151,50482084,50484044,50485951,50487930,50489797,50491791,50493706,50495714,50497761,50499636,50501615,50503620,50505571,50507560,50509432,50511407,50513455,50515483,50517375,50519352,50521409,50523433,50525329,50527313,50529361,50531409,50533279,50535255,50537303,50539351,50541323,50543309,50545335,50547383,50549431,50551329,50553356,50555404,50557452,50559500,50561365,50563342,50565390,50567438,50569314,50571343,50573394,50575450,50577402,50579381,50581236,50583208,50585210,50587104,50589109,50591104,50593068,50595033,50596975,50598912,50600775,50602755,50604727,50606686,50608681,50610665,50612625,50614620,50616645,50618665,50620693,50622612,50624597,50626630,50628636,50630648,50632548,50634527,50636464,50638445,50640464,50642362,50644342,50646208,50648186,50650062,50652040,50654089,50656080,50658033,50660024,50662063,50663926,50665899,50667947,50669815,50671790,50673838,50675708,50677646,50679542,50681508,50683400,50685370,50687242,50689217,50691081,50693056,50694925,50696901,50698764,50700744,50702610,50704585,50706641,50708689,50710734,50712630,50714613,50716661,50718709,50720737,50722670,50724672,50726549,50728525,50730532,50732470,50734393,50736332,50738252,50740198,50742185,50744061,50746038,50747926,50749956,50752002,50753944,50755923,50757964,50759911,50761891,50763840,50765826,50767779,50769725,50771722,50773770,50775818,50777831,50779770,50781766,50783814,50785862,50787877,50789810,50791806,50793854,50795902,50797907,50799853,50801850,50803898,50805946,50807911,50809897,50811874,50813785,50815726,50817641,50819560,50821492,50823504,50825491,50827451,50829448,50831379,50833388,50835411,50837307,50839290,50841234,50843238,50845290,50847338,50849395,50851260,50853232,50855280,50857328,50859326,50861272,50863269,50865317,50867365,50869266,50871271,50873319,50875367,50877415,50879278,50881255,50883120,50885116,50886981,50888952,50890818,50892786,50894661,50896636,50898587,50900565,50902614,50904478,50906448,50908496,50910373,50912349,50914397,50916305,50918310,50920184,50922213,50924080,50926058,50927961,50929889,50931819,50933733,50935690,50937526,50939532,50941396,50943371,50945421,50947469,50949338,50951362,50953418,50955458,50957329,50959348,50961365,50963344,50965277,50967256,50969272,50971137,50973135,50975078,50977057,50979073,50980988,50982965,50984985,50986999,50988870,50990873,50992899,50994915,50996895,50998846,51000801,51002699,51004676,51006550,51008525,51010499,51012475,51014343,51016371,51018354,51020343,51022208,51024203,51026245,51028146,51030131,51032125,51034078,51036075,51038130,51040120,51042066,51044059,51046114,51048116,51050054,51051995,51053927,51055799,51057778,51059773,51061710,51063675,51065569,51067507,51069417,51071354,51073273,51075196,51077146,51079046,51081023,51082839,51084838,51086732,51088645,51090577,51092497,51094482,51096345,51098349,51100404,51102348,51104327,51106377,51108334,51110310,51112360,51114300,51116301,51118353,51120250,51122256,51124286,51126218,51128220,51130086,51132064,51134036,51136022,51138014,51139917,51141899,51143947,51145995,51148043,51149914,51151964,51154012,51156060,51158108,51160033,51161912,51163966,51165850,51167759,51169811,51171692,51173542,51175590,51177467,51179312,51181303,51183161,51185138,51187169,51189030,51191065,51192913,51194946,51196796,51198746,51200598,51202462,51204318,51206185,51208024,51209901,51211704,51213639,51215465,51217454,51219422,51221258,51223235,51225151,51226974,51228896,51230877,51232797,51234766,51236672,51238549,51240434,51242457,51244378,51246350,51248213,51250227,51252078,51254104,51255966,51257850,51259686,51261576,51263454,51265415,51267298,51269251,51271167,51272979,51274809,51276694,51278586,51280413,51282257,51284123,51285960,51287839,51289652,51291562,51293410,51295435,51297298,51299317,51301278,51303153,51305035,51306878,51308907,51310759,51312785,51314548,51316441,51318438,51320466,51322324,51324215,51326057,51327921,51329760,51331799,51333590,51334724,51335912,51337418,51338921,51340179,51341800,51343401,51344604,51345620,51346830,51347997,51349148,51350319,51351465,51352679,51354154,51356017,51357952,51359860,51361799,51363710,51365567,51367429,51369355,51371271,51373168,51375145,51376989,51379001,51380871,51382834,51384730,51386713,51388770,51390818,51392681,51394614,51396520,51398501,51400380,51402414,51404276,51406107,51407279,51408411,51409642,51410684,51412543,51414490,51416390,51418294,51420240,51422078,51424087,51425943,51427900,51429803,51431720,51433652,51435539,51437520,51439376,51441388,51443261,51445173,51447079,51448974,51450939,51452743,51454772,51456635,51458612,51460660,51462712,51464599,51466575,51468623,51470666,51472579,51474561,51476609,51478657,51480558,51482539,51484587,51486568,51488537,51490541,51492589,51494459,51496435,51498483,51500526,51502436,51504418,51506466,51508420,51510397,51512447,51514495,51516358,51518333,51520195,51522210,51524076,51526041,51527363,51528699,51530475,51531751,51532904,51534581,51535907],\"sizes\":[1641,1482,1475,1484,1493,1482,1476,1483,1480,1476,1474,1476,1477,1481,1474,1492,1461,1478,1476,1484,1477,1495,1482,1478,1487,1485,1132,559,566,703,371,598,309,533,510,466,450,594,499,405,220,306,252,250,263,273,220,316,322,245,151,138,229,140,97,90,366,496,355,269,321,244,531,451,421,238,329,446,499,446,570,189,386,548,616,323,146,292,456,320,273,304,350,256,299,310,82,85,106,268,258,234,525,515,410,300,106,344,376,294,359,475,379,291,394,490,516,448,453,2052,2020,2048,2056,2031,2028,2054,2053,1822,1720,1724,1737,1698,1729,1722,1723,1721,1700,1707,1719,1719,1698,1698,1704,1677,1700,1737,1635,1671,1675,1694,1732,1719,1733,1730,1740,1724,1652,1737,1717,1737,1745,1726,1723,1705,1789,2048,2048,2048,2048,2048,1999,1734,1701,1686,1718,1748,1831,1773,1861,1650,1751,1787,1686,1750,1703,1691,1673,1592,1704,1678,1717,1676,1621,1695,1745,1690,1679,1726,1727,1771,1620,1657,1649,1735,1758,1735,1712,1734,1637,1756,1692,1713,722,447,567,641,1076,825,881,857,977,1021,1075,1443,1824,1870,1837,1874,1859,1871,1557,1478,1501,1455,1447,1442,1442,1442,1431,1441,1436,1476,1470,1463,1448,1471,1456,1475,1471,1466,1483,1466,1474,1423,1452,1473,1474,1471,1460,1479,1441,1455,1454,1469,1466,1469,1475,1478,1461,1461,1452,1470,1467,1446,1449,1456,1454,1446,1457,1481,1462,1474,1447,1474,1463,1447,1469,1461,1471,1474,1478,1487,1464,1478,1475,1459,1464,1463,1442,1438,1455,1459,1469,1467,959,594,456,539,362,331,356,387,473,526,529,428,547,527,398,459,458,474,446,448,478,431,437,583,596,483,440,610,558,356,519,637,456,593,633,466,465,350,424,384,429,476,392,421,472,389,423,308,201,251,538,493,395,363,603,441,460,554,566,621,575,497,468,547,472,503,478,471,495,397,534,375,344,330,510,483,451,511,589,631,473,493,544,371,505,515,535,338,587,598,572,600,586,581,600,491,512,460,530,461,444,444,475,564,451,536,546,497,598,454,546,535,590,613,487,491,453,459,465,379,428,343,497,451,496,469,437,406,471,478,552,613,565,487,368,419,349,564,503,623,343,209,168,106,205,365,453,266,270,307,472,409,414,414,387,431,441,348,449,548,589,400,523,517,446,413,491,509,504,536,616,599,665,624,616,579,537,487,558,572,571,417,582,540,516,518,544,523,414,517,551,499,452,500,521,515,477,580,562,412,409,442,515,632,522,485,475,466,458,318,490,234,365,449,263,346,397,343,388,505,407,340,491,509,518,513,493,535,466,456,505,459,465,469,450,428,424,409,439,457,457,455,427,423,461,309,357,432,441,380,366,401,507,403,417,434,377,448,334,439,517,459,463,525,1691,1945,2025,1987,1999,1999,1922,1982,2050,2046,2054,2042,2017,2027,2026,2030,2055,2055,2048,1879,1726,1723,1702,1722,1714,1714,1732,1721,1705,1737,1723,1693,1709,1700,1713,1720,1704,1696,1685,1705,1723,1691,1675,1699,1667,1685,1679,1697,1687,1695,1707,1699,1682,1693,1690,1688,1678,1701,1728,1704,1731,1727,1707,1666,1680,1700,1738,1726,1717,1694,1653,1680,1664,1697,1687,1695,1683,1684,1695,1729,1752,1725,1665,1660,1698,1713,1717,1702,1705,1700,1695,1708,1689,1697,1714,1697,1710,1701,1689,1696,1722,1700,1701,1693,1698,1694,1720,1680,1710,1740,1743,1749,1749,1763,1733,1767,1736,1671,1674,1661,1689,1704,1681,1683,1673,1675,1730,1740,1732,1735,1688,1670,1667,1689,1838,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1719,1752,1706,1749,1806,1688,1717,1754,1638,1781,1744,1662,1737,1747,1740,1696,1589,1670,1690,1621,1627,1684,1553,1570,1583,1636,1608,1669,1623,1637,1639,1622,1653,1727,1727,1695,1777,1717,1748,1649,1808,1886,1843,1746,1707,1651,1644,1735,1739,1714,1649,1774,1850,1873,1659,1671,1643,1517,1521,1533,1479,1492,1540,1608,1660,1666,1554,1520,1633,1667,1634,1683,1684,1712,1578,1527,1660,1532,1769,1844,1796,1794,1792,1779,1779,1836,1795,1686,1654,1678,1699,1674,1648,1712,1772,1771,1750,1726,1613,1679,1627,482,476,555,515,584,701,648,610,587,469,338,618,666,619,759,604,517,713,640,620,545,438,509,547,573,563,132,141,435,526,279,240,130,748,646,545,308,456,558,388,597,358,422,144,116,148,147,210,369,642,745,675,617,551,512,713,822,780,975,1052,1028,871,789,755,849,298,314,436,342,361,134,134,154,463,406,250,245,225,204,311,406,252,752,499,278,495,419,237,203,224,412,415,266,342,268,310,257,621,480,471,657,520,508,642,813,917,776,748,861,904,746,681,728,754,674,706,809,690,636,505,517,494,529,532,501,542,621,830,809,821,799,792,784,579,685,966,807,894,542,783,1006,937,804,933,966,856,929,869,861,812,720,691,930,800,749,786,773,651,767,850,379,175,125,114,253,968,996,981,1007,1072,915,963,958,942,917,770,791,675,555,512,849,841,767,741,844,707,565,472,558,834,1001,1039,1080,1055,1097,976,1095,1119,1142,1093,887,721,503,421,383,366,352,341,595,844,947,1015,947,826,735,525,668,780,890,779,734,811,804,907,934,983,996,789,835,1042,1065,1104,1183,1124,1019,1136,1081,840,870,1059,1065,1195,1247,1052,975,1179,1188,1103,981,1038,1016,822,1044,1256,1184,1786,1606,1845,1874,1834,1876,1891,1839,1828,1871,1937,1981,1929,1892,1886,1951,1956,1857,1698,1593,1640,1488,1486,1504,1493,1517,1507,1495,1500,1503,1524,1480,1497,1510,1480,1488,1494,1475,1489,1510,1460,1491,1494,1491,1519,1525,1489,1495,1504,1452,1470,1498,1504,1504,1510,1500,1517,1503,1143,532,511,581,441,546,500,534,566,510,573,535,636,600,602,622,411,618,624,504,519,589,532,547,566,708,613,517,493,450,543,433,564,591,610,588,623,630,577,482,494,420,453,486,559,562,576,535,568,533,473,354,594,363,198,342,235,488,470,410,616,306,609,535,421,566,488,453,402,436,543,515,510,456,321,373,506,672,461,648,598,454,423,497,410,406,240,45,162,324,328,289,423,258,251,355,385,284,322,445,315,405,316,590,551,573,526,420,343,351,489,355,575,540,532,527,491,558,398,568,472,334,425,487,467,502,506,588,533,455,699,2022,2018,2039,2017,1993,2024,1986,2054,2045,2042,1962,1698,1681,1725,1690,1645,1692,1717,1696,1672,1706,1708,1719,1727,1715,1726,1710,1711,1716,1727,1704,1721,1703,1696,1703,1692,1714,1708,1713,1709,1687,1701,1670,1701,1712,1718,1706,1725,1707,1739,1713,1726,1730,1729,1719,1721,1711,1730,1723,1730,1728,1641,1680,1713,1712,1715,1703,1988,2048,2048,2048,2048,2048,2037,1643,1683,1653,1709,1768,1676,1672,1797,1734,1741,1721,1787,1792,1800,1829,1764,1763,1780,1732,1685,1744,1704,1708,1776,1701,1772,1709,1685,1729,1754,1770,1712,1787,1785,1779,1773,1783,1781,1756,1759,1759,1803,1612,1716,1763,1649,1115,756,832,895,897,915,730,944,1179,1441,1264,937,1111,1169,1276,1105,1123,1085,937,913,1066,1133,904,1093,1073,1120,1934,1987,2007,2009,1993,2007,1992,1596,1596,1507,1461,1459,1438,1499,1477,1461,1015,621,398,461,573,487,604,613,583,557,550,501,496,426,484,125,570,338,589,448,559,540,1630,2017,1752,1709,1711,1708,1701,1720,1709,1714,1709,1777,2049,1791,1787,1897,1818,1730,1738,1499,634,587,376,25,25,25,1930,1013,1419,1444,1408,1383,1509,1496,1459,1454,1465,1458,1441,1445,1481,1439,1470,1472,1472,1461,1462,1489,748,349,426,356,333,493,414,503,453,265,417,315,499,339,652,561,635,551,535,582,362,494,509,530,505,483,504,560,442,542,451,442,512,420,491,497,484,508,357,503,473,394,497,440,332,410,275,286,442,373,545,2056,1952,2004,1971,1727,1718,1686,1724,1721,1685,1658,1687,1690,1654,1684,1669,1647,1670,1672,1697,1711,1726,1678,1666,1687,1673,2018,2048,1968,1853,1810,1716,1799,1705,1617,1649,1728,1786,1652,1715,1707,1782,1820,1754,1574,1673,1377,751,561,628,607,773,697,884,945,1051,1388,1268,1289,1209,1434,1558,890,1010,1132,759,631,1181,1539,1814,1757,1745,1714,1601,1573,1485,1487,1475,1479,1467,1460,1489,1495,1481,1483,1485,1492,1478,1457,1483,1442,1477,1471,1481,1470,1476,1473,1480,1482,1480,1504,1482,1487,1468,911,393,621,581,461,538,437,473,551,367,194,425,401,502,377,557,439,209,472,650,571,673,497,534,549,389,521,454,508,628,443,512,434,397,454,416,639,460,398,153,197,312,427,560,378,545,499,606,537,538,522,249,431,446,131,371,296,329,354,471,424,380,519,518,473,544,531,574,546,543,526,521,291,289,507,563,491,556,552,479,463,481,446,446,464,443,570,373,471,431,476,434,488,483,405,470,441,389,1850,2043,2043,2002,2054,2052,2040,1905,1686,1684,1713,1709,1728,1677,1717,1729,1723,1699,1695,1703,1716,1708,1715,1722,1703,1705,1665,1720,1652,1685,1701,1653,1703,1660,1700,1699,1692,1679,1659,1695,1694,1693,1698,1717,1715,1680,1646,1725,1683,1911,2048,2048,2048,2015,1634,1548,1686,1723,1802,1784,1814,1921,1690,1773,1865,1764,1717,1875,1715,1805,1542,1754,1744,1647,1784,1723,1674,1703,1719,1689,1800,1743,1640,1705,1703,752,820,895,809,774,605,551,528,460,206,410,534,794,617,520,353,454,775,676,679,737,717,575,629,478,436,492,660,830,762,534,747,773,759,686,725,809,681,729,594,516,180,342,322,283,390,234,180,286,659,638,615,860,659,640,630,631,774,820,621,627,530,698,613,633,929,1316,1490,1592,1824,1694,1682,1715,1719,1705,1729,1699,1554,1219,1438,1445,1469,1473,1476,1470,1494,1471,1487,1488,1487,1485,1478,1489,1480,1457,1473,1473,1486,1476,1505,1480,980,191,284,316,397,454,386,206,285,232,303,228,409,650,394,560,430,546,394,589,458,165,202,465,586,545,408,499,591,502,459,607,441,639,394,248,56,353,497,406,466,177,199,416,522,397,202,194,193,195,188,195,203,198,189,194,191,514,276,364,176,257,310,245,507,460,510,409,474,1578,1916,1910,1886,1908,2037,1965,1655,1676,1704,1672,1665,1701,1737,1653,1663,1701,1689,1681,1654,1670,1694,1666,1646,1679,1689,1689,1650,1658,1643,1648,1663,1644,1663,1664,1661,1681,1675,1667,1996,2048,2048,1931,1678,1745,1613,1690,1865,1680,1670,1754,1698,1599,1804,1601,1614,1600,1706,1658,1629,1611,1606,1628,1657,1717,1642,1180,832,740,602,188,486,829,929,880,1025,907,818,988,1014,915,844,561,702,688,609,1716,1524,1795,1814,1833,1743,1807,1742,1560,1542,1476,1486,1489,1484,1459,1498,1456,1491,1470,1485,1494,1499,865,551,612,548,492,381,434,285,379,551,257,559,536,560,422,569,544,589,562,512,541,351,216,478,448,484,524,600,548,558,341,142,117,387,311,1145,2004,2050,2032,1697,1683,1714,1703,1700,1661,1695,1684,1730,1678,1707,1712,1706,1686,1700,1753,2048,1979,1792,1808,1839,1774,1689,1751,1769,1754,1822,1814,1804,1752,859,895,742,913,1077,1087,877,1024,762,1464,1259,1581,1682,1663,1563,1521,1462,1567,1474,1481,1463,1491,1478,1480,1469,1488,1466,1483,1243,521,616,536,530,605,497,603,258,506,389,480,309,473,325,155,262,573,179,478,258,468,508,284,438,443,611,506,602,484,436,222,285,508,596,509,1589,1921,2024,1883,1669,1696,1673,1650,1652,1650,1660,1696,1670,1653,1667,1695,1733,1703,1733,2000,2039,1675,1696,1675,1679,1648,1669,1627,1729,1701,1871,1896,1736,773,833,766,696,660,632,919,947,581,1556,1562,1503,1585,1644,1515,1490,1466,1475,1480,1486,1459,1489,1484,1482,1478,1048,437,258,315,363,354,283,271,390,475,499,369,479,388,244,335,353,401,302,339,244,170,300,267,364,349,446,568,413,305,396,391,274,339,238,243,333,184,421,1397,2048,2046,2048,1716,1719,1704,1729,1735,1717,1732,1738,1733,1723,1737,1727,1672,1731,1713,1721,1705,1934,2048,2012,1815,1815,1779,1851,1774,1825,1827,1787,1840,1853,1816,1767,1670,1772,1855,1824,1800,952,955,1346,1820,1849,1747,1504,1406,1463,1466,1456,1479,1481,1462,1473,1505,1489,1467,1481,1490,1487,1476,1486,1494,1483,1487,1475,1503,1458,1480,1469,1324,180,277,210,253,489,481,548,293,364,345,317,476,369,318,369,284,413,458,239,295,357,445,331,429,396,293,197,224,284,414,362,293,341,395,444,361,292,491,258,364,278,424,476,183,189,79,256,226,552,199,399,352,303,355,466,382,553,385,67,62,466,315,385,339,463,433,355,350,332,398,372,453,521,376,389,1642,1916,1940,1947,1917,1942,1966,1708,1688,1689,1692,1697,1698,1707,1693,1701,1689,1690,1721,1704,1714,1697,1706,1705,1686,1719,1702,1705,1712,1702,1703,1720,1707,1697,1714,1699,1710,1696,1711,1675,1838,2048,2048,2048,1848,1573,1693,1720,1730,1687,1709,1713,1659,1654,1732,1667,1741,1736,1704,1790,1765,1758,1649,1823,1714,1785,1639,1698,1673,1696,1643,1702,1698,885,797,866,870,429,25,25,25,25,25,25,25,1996,1587,1711,1761,1785,1688,1833,1776,1467,1355,1463,1649,1564,1512,1521,1505,1507,1523,1521,1507,1464,1488,1489,1464,1493,1477,1475,1457,1436,1489,1481,1481,1480,1464,1468,1489,1461,1471,1485,1494,1280,659,618,644,597,607,623,691,616,707,680,655,705,683,631,632,586,719,708,619,723,659,606,706,713,655,595,523,562,594,666,584,548,608,474,614,539,644,585,527,487,532,547,589,497,537,606,636,566,654,543,555,668,602,666,553,462,578,479,446,418,417,480,569,437,463,476,606,354,542,609,442,488,424,342,494,561,623,551,532,454,569,579,588,316,494,513,530,594,474,176,375,470,474,464,410,388,396,602,577,564,535,441,2028,2044,2024,2019,1948,2018,2051,1908,1711,1694,1702,1714,1677,1670,1717,1753,1669,1681,1696,1745,1728,1654,1629,1711,1737,1722,1713,1706,1714,1694,1692,1694,1705,1749,1734,1703,1722,1740,1725,1695,1740,1721,1687,1694,1704,1688,1713,1722,1737,1684,1693,1697,2041,2048,2048,2048,2048,1984,1722,1704,1798,1614,1654,1784,1797,1616,1734,1750,1838,1689,1592,1777,1813,1739,1699,1744,1679,1682,1713,1775,1807,1752,1793,1711,1848,1688,1779,1723,1701,1718,1879,1793,1803,1787,1711,1749,1048,617,780,630,571,649,617,606,532,481,1390,1499,1484,1463,1581,1575,1638,1570,1536,1134,1155,1523,1474,1585,1397,1608,1568,1477,1596,1424,1403,1326,1411,1390,1351,913,1022,1280,877,747,1222,1360,1430,1619,1608,1729,1411,1835,1642,1414,1602,1693,1699,1692,1694,1643,1677,1637,1673,1566,1575,1558,1593,1438,1480,1479,1454,1478,1463,1462,1496,1485,1452,1475,1485,1443,1440,1459,1453,1454,1481,1465,1482,1496,1469,1466,1463,1472,1464,1457,1461,1470,1477,1472,1465,1473,1456,1467,1491,1462,1495,1451,1472,1497,1455,1443,1504,1471,1489,1488,1465,1487,539,459,539,506,461,379,386,429,420,482,481,359,452,493,488,402,351,564,458,261,274,343,281,417,316,366,293,259,515,466,470,485,470,403,290,458,286,407,530,400,371,371,353,570,517,482,469,421,341,206,338,533,312,306,407,506,481,478,339,222,428,534,425,523,431,403,256,180,472,487,426,456,411,428,385,369,413,453,478,516,491,411,346,306,467,335,431,261,424,229,332,368,311,194,317,474,318,277,309,181,386,306,364,352,424,255,345,411,359,335,423,401,490,529,510,460,281,349,193,362,464,310,484,199,463,442,453,314,421,268,423,331,287,421,412,474,387,240,162,501,500,475,436,362,493,807,2006,1996,1962,1977,1956,1954,2024,1941,1976,1925,2007,2048,1823,1694,1642,1660,1654,1693,1642,1689,1698,1658,1655,1685,1694,1672,1705,1660,1673,1706,1684,1669,1674,1691,1686,1713,1681,1663,1691,1692,1695,1681,1689,1675,1674,1676,1706,1704,1702,1675,1677,1686,1681,1675,1710,1700,1685,1705,1721,1668,1645,1683,1689,1724,1691,1674,1683,1677,1678,1683,1684,1671,1690,1681,1684,1749,2048,2048,2048,2048,2048,2048,1650,1696,1619,1660,1602,1697,1680,1649,1693,1722,1739,1624,1803,1653,1717,1757,1745,1692,1755,1787,1749,1716,1700,1765,1768,1743,1684,1708,1753,1701,1696,1858,1685,1672,1801,1799,1804,1701,1646,1722,1793,1724,1737,1551,980,840,791,832,787,751,912,658,899,855,697,651,413,464,329,417,351,416,236,555,486,533,447,338,265,576,450,499,498,610,677,343,216,471,463,394,773,584,502,330,469,329,453,151,351,436,419,512,407,362,482,799,1621,1629,1446,687,936,1626,1627,1639,1683,1681,1714,1738,1810,1723,1763,1743,1747,1692,1733,1689,1589,1543,1549,1497,1466,1467,1492,1475,1500,1484,1484,1494,1512,1498,1514,1490,1468,1469,627,421,193,417,599,452,75,75,258,349,609,595,447,500,433,582,477,439,541,602,475,391,417,506,554,356,552,516,334,480,386,406,429,341,302,220,355,327,514,494,552,444,593,267,1526,2012,1961,1955,1875,1702,1721,1739,1722,1727,1745,1727,1737,1728,1731,1724,1710,1738,1721,1713,1698,1715,1732,1701,1707,2015,2048,1981,1723,1739,1779,1752,1788,1703,1718,1751,1747,1732,1743,1778,1741,1763,1789,1751,1548,809,934,816,923,399,25,25,25,25,25,25,25,1606,1655,1551,1690,1695,1475,1336,1082,1195,1605,1526,1560,1487,1486,1509,1498,1483,1502,1493,1498,1493,1485,1468,1450,1460,1477,1434,1509,687,657,466,593,490,423,463,453,470,531,517,447,549,558,436,448,196,364,249,351,400,575,261,545,492,523,682,497,443,449,384,502,602,390,419,523,517,527,564,473,583,706,703,530,403,490,245,1485,2003,2053,2019,2022,1717,1715,1723,1709,1711,1664,1658,1696,1726,1726,1709,1670,1699,1716,1730,1704,1709,1724,1692,1665,1812,2048,2048,1936,1799,1784,1812,1848,1686,1755,1850,1792,1844,1847,1810,1854,1838,1761,1871,1790,1758,1737,776,637,975,812,678,725,779,526,814,848,753,754,869,872,357,688,955,1468,1110,843,1553,1470,1527,1626,1599,1615,1572,1418,1376,1479,1424,1365,1455,1421,1471,1477,1448,1474,1480,1497,1479,1469,1498,1498,1487,1493,1484,1483,1486,1495,1487,1468,1498,1463,1490,1499,1477,1499,1495,1522,1513,1471,1478,1502,1489,1486,1479,1453,1474,1493,1341,489,524,599,469,468,546,268,565,553,583,190,559,540,664,661,576,558,561,583,558,521,524,492,379,202,492,554,511,571,531,450,514,543,566,648,570,398,513,520,619,503,575,492,494,476,597,552,572,549,606,556,509,368,453,528,450,480,617,507,458,555,459,455,483,241,317,524,446,503,286,463,526,527,540,464,403,74,91,185,124,182,275,203,394,341,437,557,325,461,221,271,158,133,357,466,680,486,492,527,555,509,548,526,587,481,480,265,546,546,428,496,466,491,500,415,483,438,513,548,603,526,491,428,505,404,422,524,447,395,520,450,186,370,510,339,598,2007,1985,2020,2045,1987,2025,1964,2048,2048,2049,1986,1651,1633,1623,1646,1728,1715,1693,1686,1658,1671,1699,1704,1678,1710,1735,1729,1715,1726,1653,1694,1741,1698,1727,1686,1691,1745,1744,1735,1745,1697,1692,1643,1700,1747,1749,1737,1739,1735,1736,1719,1736,1725,1737,1731,1738,1686,1656,1684,1705,1676,1707,1727,1742,1736,1722,1725,1656,1676,1716,1720,2009,2048,2048,2048,2048,2048,2048,1929,1499,1430,1615,1716,1734,1690,1595,1656,1647,1734,1746,1811,1758,1716,1626,1697,1713,1725,1741,1582,1853,1876,1776,1748,1730,1585,1798,1817,1768,1758,1787,1769,1749,1824,1760,1742,1773,1726,1809,1717,1632,1618,1654,1736,1724,1791,1740,1744,1744,1507,1642,1799,1349,571,646,684,607,506,423,663,710,475,613,352,1408,1397,1398,1657,1209,1322,1480,1492,1682,1182,1138,1337,1405,1237,1372,1250,1150,1319,1660,715,1351,1396,1460,897,1469,1628,808,1196,1213,1431,1367,1385,1441,1570,809,898,565,1253,1708,1582,887,991,1435,1395,1318,1317,1369,1322,1607,1641,649,968,430,850,1252,1173,819,856,1535,1629,1710,1770,1801,1837,1783,1748,1734,1869,1805,1413,1436,1359,1314,1464,1436,1361,1331,1442,1509,1487,1453,1468,1458,1450,1468,1442,1477,1495,1487,1494,1497,1489,1481,1490,1484,1486,1502,1480,1453,1468,1489,1485,1477,1483,1470,1481,1433,1492,1498,1465,1458,1446,1487,1487,1461,1493,1493,1487,1488,1469,1484,1485,1475,1486,1491,1463,1462,1464,1505,1475,1470,1482,1486,1466,1485,1493,1463,1507,1482,1478,1473,1493,1477,1448,1465,1469,1470,1482,1486,1487,1467,1492,1496,1487,1489,1469,1034,365,577,589,660,521,590,555,547,621,628,587,666,621,590,606,565,377,512,528,555,493,391,610,616,580,619,617,247,559,586,576,470,746,670,501,646,634,639,474,506,478,540,484,611,553,646,565,624,604,598,497,459,420,490,498,513,561,452,465,451,469,497,544,511,565,558,644,545,584,595,617,616,569,586,597,650,527,605,625,521,521,460,517,507,294,400,473,514,528,513,532,542,564,579,635,556,600,575,580,625,542,582,527,499,594,352,299,543,587,536,522,456,540,478,441,439,336,482,320,378,453,513,551,513,517,573,482,361,161,447,532,392,419,469,418,433,464,362,459,513,456,487,370,431,585,746,626,428,550,493,552,550,474,550,594,521,570,531,618,318,519,375,482,469,516,534,504,478,536,550,581,503,329,475,471,434,552,507,548,569,602,538,456,385,607,446,489,454,512,469,278,429,474,560,564,605,461,487,498,466,430,495,519,624,343,465,338,508,320,485,402,462,463,495,353,351,302,221,181,256,318,308,233,414,389,270,465,206,151,300,306,237,633,608,692,527,517,597,454,631,466,537,595,646,416,383,501,419,574,532,565,553,658,632,608,615,596,425,509,568,570,359,518,454,527,485,569,474,549,434,225,271,330,320,385,532,385,554,522,631,567,1023,2026,2011,1919,1999,1991,2030,2004,2015,2034,2015,2004,2021,1959,2040,1988,2006,2031,2028,2055,1875,1730,1711,1659,1686,1693,1703,1723,1730,1737,1720,1739,1717,1696,1698,1666,1716,1699,1690,1675,1701,1726,1715,1715,1711,1667,1726,1708,1710,1717,1712,1708,1706,1718,1680,1666,1693,1685,1667,1682,1689,1651,1672,1688,1685,1702,1698,1688,1705,1686,1685,1685,1694,1693,1675,1681,1686,1709,1683,1693,1687,1682,1676,1674,1706,1694,1680,1689,1696,1692,1709,1698,1719,1710,1698,1664,1729,1707,1677,1682,1673,1709,1710,1680,1699,1697,1651,1665,1702,1721,1690,1693,1677,1658,1654,1653,1670,1651,1670,1708,1680,1709,1691,1718,1676,1685,1701,1694,1718,1736,1708,1701,1732,1665,1710,1678,1680,1684,1659,1698,1849,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1883,1766,1663,1676,1693,1670,1750,1720,1702,1717,1763,1643,1648,1679,1709,1715,1580,1756,1763,1667,1701,1670,1812,1702,1750,1847,1695,1712,1621,1611,1625,1660,1720,1633,1628,1673,1663,1657,1655,1667,1682,1678,1631,1534,1617,1705,1741,1679,1771,1681,1702,1618,1582,1662,1642,1580,1596,1680,1747,1788,1758,1729,1747,1819,1684,1667,1674,1797,1630,1671,1657,1604,1737,1660,1690,1556,1594,1583,1508,1667,1589,1732,1669,1711,1634,1730,1608,1764,1809,1755,1812,1815,1715,1637,1631,1688,1668,1739,1017,631,617,619,355,474,119,602,706,585,672,615,512,691,739,601,678,788,633,613,605,600,627,683,765,545,615,1208,1464,1364,1281,1644,1599,1493,1465,1603,1656,1329,1070,1417,1096,1016,1146,1011,861,956,1127,554,1144,976,719,1118,913,957,918,1032,1243,1406,1679,1622,1623,1588,1407,1713,1688,1586,1608,1690,1616,1531,1617,1574,1548,1312,1444,1548,1654,1700,1636,1543,1570,1422,1464,1339,1516,1428,1297,1597,1243,1600,1609,1548,1406,1389,1326,1522,1525,1458,1417,1608,1624,1624,1588,1415,905,1305,1249,813,409,887,1176,1202,1216,1016,1057,1002,961,1060,991,869,959,798,714,649,441,161,118,615,612,558,564,407,573,1179,1528,1316,1293,1172,1262,1184,1594,1580,1587,1450,1503,1411,1413,1418,1154,671,763,1060,1284,1460,1520,1541,1148,1617,1275,1475,1389,1576,1244,662,1247,1496,1489,1390,1411,1546,1461,1621,1523,1589,1505,921,972,931,551,1256,1422,1134,398,782,542,484,838,1161,848,1092,1157,872,596,1196,929,1473,1364,627,459,1482,1426,1308,1018,1212,1291,943,809,568,637,1100,488,691,252,615,937,724,645,807,476,439,1338,1520,1547,1284,1584,1670,1578,1437,1639,1575,1288,518,777,1397,1430,1412,1141,890,1544,1141,891,1388,1298,1021,1354,769,501,576,344,396,389,457,492,366,417,345,421,465,355,328,447,549,766,832,674,510,500,402,423,710,219,376,387,288,687,866,365,813,853,613,355,604,603,406,392,368,415,363,816,1573,1522,1583,1616,1639,1622,1353,580,599,219,211,243,462,1162,1598,1879,1916,1447,914,1625,1761,1687,1638,1738,1743,1746,1769,1816,1752,1812,1739,1794,1820,1802,1812,1831,1809,1798,1817,1850,1790,1734,1739,1577,1421,1492,1462,1483,1478,1474,1431,1478,1496,1476,1439,1482,1469,1470,435,518,433,375,463,473,494,358,500,379,435,550,395,402,278,308,346,343,315,284,268,554,432,334,585,434,499,459,487,388,526,345,523,503,490,507,441,452,357,347,615,1973,1959,1908,1725,1664,1670,1672,1682,1672,1668,1654,1665,1664,1664,1695,1684,1688,1695,1675,1681,1906,2048,1821,1669,1627,1680,1722,1678,1711,1708,1746,1746,1820,1587,1590,1186,422,379,548,112,930,979,1086,973,1005,1084,866,1077,1033,659,1120,1259,1667,1755,1731,1643,1264,1480,1470,1474,1491,1481,1490,1485,415,225,606,657,615,429,577,554,480,549,415,438,406,430,457,330,532,244,437,312,510,448,464,317,572,2047,1974,1658,1675,1721,1714,1690,1667,1655,1667,1652,1634,1659,1968,1932,1718,1802,1890,1799,1705,1763,1764,1686,1299,554,391,749,1114,949,1007,840,1069,988,1448,1495,1695,1554,1601,1478,1467,1486,1498,1476,1464,1452,1491,1250,584,586,546,346,328,372,487,392,512,555,386,467,483,482,452,439,465,422,576,462,468,574,417,515,496,403,530,538,1486,1999,1907,1693,1705,1689,1683,1708,1698,1690,1674,1720,1710,1693,1679,2030,1916,1782,1760,1675,1753,1770,1674,1808,1758,1674,888,674,591,1117,1645,1125,1353,1436,1823,1654,1555,1370,1495,1483,1479,1505,1530,1497,1485,1492,470,539,518,531,533,308,385,507,541,494,596,561,665,585,122,159,410,460,528,577,550,565,742,2029,1947,1688,1693,1682,1676,1678,1683,1673,1670,1663,1779,2008,1739,1719,1728,1691,1708,1642,1622,753,761,1141,1585,1220,1260,1444,1638,1622,1431,1388,1438,1538,1467,1498,1476,1437,1481,1482,1470,1471,1503,1516,1493,599,364,326,397,327,215,426,480,356,481,354,347,300,249,298,428,440,191,511,454,180,385,354,258,418,377,416,610,442,435,392,226,271,492,362,493,349,687,1992,1994,2001,1779,1690,1673,1657,1707,1696,1675,1679,1707,1714,1711,1707,1717,1695,1704,1692,1688,1870,2048,1978,1613,1628,1733,1740,1700,1809,1856,1808,1881,1804,1751,1706,1698,1447,564,690,734,865,1208,704,941,848,806,555,520,1707,1195,1335,1556,1536,1473,1545,1471,1474,1543,1496,1483,1491,1482,1483,1473,1503,1247,322,522,619,563,503,473,465,600,541,474,338,574,579,511,531,532,664,645,599,395,379,294,1728,1950,1792,1691,1693,1704,1706,1671,1682,1680,1688,1669,2037,1701,1707,1758,1729,1743,1750,1717,1085,714,1065,1548,1556,1493,1479,1534,1560,1458,1557,1513,1516,1546,1501,1520,1483,1480,1488,1503,1487,1475,1498,1486,1482,1454,1485,1509,1494,1472,1469,1493,1482,1483,1470,1505,982,636,629,599,668,521,202,458,280,326,569,237,374,608,522,646,544,474,590,613,436,566,429,691,624,580,548,557,682,604,644,669,582,556,485,546,437,412,529,478,628,552,497,416,525,611,522,625,587,510,481,123,139,289,431,532,313,349,438,518,613,596,431,579,587,394,314,245,583,554,704,495,479,1955,2006,2010,2019,1984,2027,1627,1706,1697,1698,1702,1711,1677,1696,1716,1700,1690,1697,1694,1706,1678,1682,1728,1680,1688,1680,1672,1698,1690,1689,1695,1700,1670,1698,1683,1669,1686,1818,2048,2048,2048,1793,1777,1728,1699,1820,1721,1759,1892,1708,1776,1760,1767,1717,1756,1758,1712,1724,1730,1680,1787,1788,1750,1783,1724,1790,1876,797,725,607,711,641,675,540,751,518,596,438,605,560,739,962,882,894,897,937,701,502,290,603,682,567,411,666,383,313,310,672,920,866,880,584,1277,958,634,299,1242,1603,1648,1624,1621,1802,1715,1685,1632,1528,1467,1580,1526,1455,1485,1485,1449,1475,1480,1473,1473,1475,1457,1462,1503,1485,1477,1453,616,513,510,441,441,568,291,512,443,596,149,294,591,494,540,322,566,570,604,486,385,612,248,175,504,554,299,262,166,332,485,552,496,518,500,248,385,402,402,507,535,413,316,350,532,536,613,2016,2048,2001,2029,1811,1712,1717,1702,1717,1730,1669,1705,1698,1741,1666,1714,1683,1683,1698,1729,1718,1677,1689,1680,1652,1973,2048,2029,1867,1869,1710,1801,1749,1791,1783,1928,1822,1810,1782,1842,1886,1870,1729,1801,1636,1290,690,809,666,763,708,875,1008,716,915,938,972,793,891,820,968,745,635,532,1113,1457,603,760,1520,1562,1605,1615,1607,1537,1502,1472,1042,610,626,484,380,1493,1665,1687,1841,1804,1066,1188,1513,1409,1500,1484,1472,1492,1499,1481,1464,1413,552,563,558,581,559,331,395,522,409,542,529,361,414,174,392,495,431,269,343,319,288,283,395,471,510,367,999,1932,1878,1650,1662,1655,1697,1672,1650,1683,1697,1676,1699,1676,1997,1729,1530,1633,1727,1732,1746,1699,1723,1602,595,629,460,1689,1399,1028,1216,1231,1622,1654,1624,1026,491,1120,1741,1457,1376,524,702,1690,1533,1611,1491,1519,1424,1456,1476,1499,1482,1463,1488,1476,1484,1483,1500,1490,1476,1482,1493,1518,1463,1514,1467,1479,1464,1481,1472,1484,1475,1473,1503,814,611,593,530,622,605,576,605,502,443,531,620,604,398,443,394,439,575,634,473,484,534,510,209,553,580,404,238,387,541,594,559,593,599,367,479,482,480,429,454,485,488,297,474,496,290,381,318,416,497,467,541,476,446,410,592,568,615,499,554,510,418,469,521,503,580,488,496,296,486,472,486,456,385,619,540,371,414,410,435,261,341,453,274,539,400,432,576,382,424,1881,2030,2054,2056,2016,2017,2044,1849,1724,1727,1733,1707,1739,1727,1729,1743,1723,1754,1737,1745,1733,1748,1743,1697,1742,1721,1705,1737,1715,1690,1653,1679,1677,1679,1681,1683,1697,1710,1728,1718,1718,1716,1725,1716,1643,1654,1750,2048,2048,2048,2048,1995,1833,1804,1806,1818,1806,1826,1794,1806,1778,1780,1810,1823,1856,1868,1893,1800,1812,1808,1792,1852,1711,1641,1717,1678,1708,1790,1774,1783,1753,1812,1781,1814,1636,1619,771,649,814,713,545,530,860,1303,1232,999,1000,819,1128,937,998,1155,1095,888,979,1117,873,692,682,973,1209,1716,1516,1326,1669,1603,1689,1639,1670,1613,1662,1738,1685,1380,536,698,1692,1527,1504,646,400,1630,1641,1505,902,433,1329,1765,1446,1212,545,875,1719,1492,1519,544,446,1721,1577,1502,792,420,1462,1785,1414,1048,506,1053,1727,1473,1419,535,639,1699,1533,1490,680,404,1596,1673,1487,956,461,1267,1757,1442,1281,570,825,1708,1506,1512,591,406,1715,1587,1510,817,405,1428,1781,1402,1097,529,1014,1719,1486,1439,539,594,1710,1546,1564,1474,1461,1478,1481,1457,961,450,398,218,226,204,348,474,349,484,544,396,402,407,278,242,400,337,356,1903,1877,1646,1634,1652,1670,1682,1642,1644,1629,1780,1779,1520,1599,1622,1593,1648,1303,380,171,829,991,1131,484,1692,1668,1263,546,831,1710,1502,1230,1483,1464,1477,1436,1447,1030,550,404,405,467,458,505,744,566,511,482,391,370,372,461,442,547,1666,1774,1660,1655,1681,1618,1651,1670,1904,1572,1590,1602,1160,444,536,462,239,528,884,1240,1571,1671,902,687,746,696,610,754,741,742,738,624,664,786,755,1164,1849,2057,2040,2048,2057,1184,1466,1442,1267,1366,1486,1460,1437,1511,1552,1515,1489,1459,1438,1344,1381,1480,1378,1558,1419,1340,1337,1451,1410,1317,1594,1539,1386,1351,1418,1545,1421,1562,1497,1366,1502,1006,408,46,72,376,356,347,417,574,425,455,538,624,976,1151,1085,1059,1046,1244,1239,1218,682,559,570,526,534,633,702,438,315,431,468,458,784,1526,1512,1451,1433,1472,1540,1593,1565,1547,1576,1573,1540,1650,1435,1509,1554,1605,1686,1611,1602,1692,1677,1607,1492,1616,1489,1515,1560,1598,1406,1273,933,968,980,1040,1158,1127,1163,1226,1215,1137,1209,1450,1432,1457,1353,1438,1414,1578,1316,1162,1172,1208,1171,1314,1276,1357,1454,1327,1414,1410,1374,1133,1390,1316,1014,1107,1120,1133,1167,1220,1489,1392,1199,1274,1578,1423,1321,1634,1470,1744,1060,1296,1187,1190,1667,1188,1155,1171,1150,1199,1167,1122,1302,1556,1524,1412,1450,1493,1571,1612,1561,1562,1609,1565,1549,1631,1482,1462,1599,1623,1700,1571,1660,1691,1663,1565,1464,1606,1478,1504,1568,1589,1352,1770,2051,2048,2027,2048,1879,1457,1572,1477,1460,1452,1528,1600,1574,1523,1581,1598,1567,1618,1498,1545,1485,1620,1677,1614,1575,1698,1674,1597,1528,1546,1552,1502,1555,1569,1484,1283,1086,1374,1284,1022,1087,1157,1123,1153,1216,1477,1419,1228,1304,1598,1365,1347,1609,1481,1747,1096,1304,1214,1167,1669,1230,1159,1182,1148,1172,1150,1134,650,480,387,824,755,817,732,848,757,847,762,649,627,857,579,700,583,763,816,803,517,778,721,749,819,927,735,689,362,364,811,598,708,621,819,830,1331,1529,1380,1006,898,808,791,1094,1188,1139,1094,1127,1003,1059,1035,1082,1071,1118,1123,1095,1069,1118,1070,1031,1072,1078,1059,1095,1092,1011,1054,1024,1000,953,1264,1081,837,1166,1212,1508,1150,900,854,860,860,1035,1187,1529,2050,2055,2056,1861,1456,1456,2056,2048,2048,2048,2048,2048,2057,2056,2048,2042,1955,2036,2048,1601,1917,1422,1789,1868,1795,1810,1868,1818,1830,1858,1826,1793,1872,1808,1998,1618,1355,1918,1319,1780,1025,1751,1879,1616,1651,1117,1722,745,1064,1229,1832,1783,1877,1802,1701,1628,1508,1460,1438,1357,1932,1929,1776,1649,1528,1435,1332,1286,1212,1212,1148,1401,1649,1677,1839,1969,1937,1963,2006,1878,1912,1885,2014,1804,1515,1459,2048,1621,1769,1824,1515,1029,1841,2055,1780,342,1117,1774,1246,2006,1398,662,2042,2048,2048,1217,1398,2048,1837,1031,423,1831,1726,630,1919,2057,2048,2048,1672,593,1910,2048,1964,1175,126,1177,2048,2057,2048,1503,1149,2053,2048,2048,2048,1734,1205,741,724,632,2002,2048,2048,2054,2004,1784,1552,1320,1080,1020,913,2048,1822,1870,2055,1993,1924,1573,604,384,1621,1012,1071,903,289,2003,2048,2048,2048,1906,437,1051,2048,2057,2034,1368,1218,1869,2048,2048,2056,2048,1895,1222,903,672,2049,1618,2048,1970,2048,1861,2018,1890,1566,1216,883,1396,2057,2048,2048,2048,2055,2048,2053,1942,2049,2049,2054,2022,2048,2057,2048,2052,2048,1850,1471,1127,886,903,621,283,2049,1965,1757,1456,1388,922,998,2048,2054,2048,1391,1331,1834,1906,1915,1970,1999,1955,2037,2015,1972,1998,1798,1221,1642,1944,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1984,1862,1694,1512,1348,1101,627,1054,1704,1713,2048,2048,1929,1745,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2057,1835,1138,1899,2048,2048,2048,2048,2048,2048,2048,2048,2043,1893,1646,1336,868,829,234,878,2048,2048,2048,2048,2048,2048,1442,544,459,1718,1974,1973,2037,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2049,2047,2053,2055,2048,2045,2051,2056,2052,2034,1963,1850,1696,1523,1322,1249,1542,2048,2057,1738,1255,1968,1412,1159,998,205,25,25,25,25,865,1625,1894,1923,2048,1979,1724,1001,435,2048,2048,2048,1731,1652,1565,2048,2052,2033,1960,1938,1324,1515,2048,2048,2048,1427,1987,2001,2048,2048,2048,2047,1943,1924,1843,1823,1612,1293,1062,870,1833,2048,2048,2048,2048,2053,1626,2048,2048,2048,1265,1829,2017,2048,2048,2048,2048,2019,1760,1506,1158,2033,1203,1750,2002,1937,1846,1605,1372,1415,1562,1642,1269,1837,1909,2048,2055,2048,1646,245,960,2048,2057,1849,1529,1377,1269,1080,1055,1060,1829,2055,1825,1288,1097,768,685,695,703,1152,2048,2015,1191,640,1271,2055,2048,2048,2048,2048,2048,2048,2048,2048,2008,1716,1433,1150,1391,2048,2048,2040,643,1826,2057,2048,2056,1747,309,100,1400,1712,2035,2048,2057,2048,1770,2048,2048,2048,2057,2048,1565,1636,1840,1468,2056,2048,2048,2048,2028,1245,1831,2051,2055,2048,2056,2048,2057,2031,1990,1964,1812,1609,1064,894,1591,2039,2028,1774,2048,2048,2057,2048,2048,1988,1408,922,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1998,1806,1545,1092,1992,2048,2057,2048,2048,2048,2048,2048,1878,1207,780,356,503,2048,2048,2048,2048,2048,1903,1600,1564,1661,1849,1596,1016,598,1940,2051,2056,2057,2057,2048,2048,2048,2057,2056,2026,1915,1643,1403,882,473,433,575,525,512,2010,2048,2010,1850,1609,1450,1260,1140,1678,1957,1593,1369,1989,1829,1607,1449,1197,835,486,1285,1951,1752,1466,1132,1983,1892,1552,2051,2048,853,2048,1727,2048,1802,410,1749,2048,2048,2048,1907,1466,283,1336,2048,1350,25,1034,2057,2057,2048,2048,2048,2048,2048,2048,2048,2054,2055,1719,1176,2048,1885,902,1732,2048,2048,2048,2048,2048,2048,2034,1483,749,2048,2048,2048,2048,2056,2052,1747,1325,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1517,455,868,2048,2016,2047,2053,2048,2048,2048,2048,2053,2048,2048,2048,2016,1613,1259,846,320,817,1901,1842,2011,2056,2048,2049,1786,970,1757,1728,785,1464,2048,2048,2048,2050,1596,1103,693,703,857,2048,2048,2048,2048,2051,2048,2048,2048,2048,2057,1879,1569,1163,815,1112,2048,2048,2048,2048,1888,1405,1213,658,1375,2055,2048,861,2048,2039,2048,2048,2048,1981,2035,1404,1389,958,584,598,1786,1941,1415,1519,2057,2048,2054,2057,2055,2057,1950,1999,1391,2057,2054,1915,1755,1481,1378,1204,1157,2048,2057,2048,2048,2048,2055,2048,1530,1034,1134,2048,2048,2048,2048,2048,2048,2053,2028,1883,1737,1556,1334,1275,2056,2057,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2054,2057,2057,2056,2050,2048,2053,2057,2056,2048,2048,2048,2057,2048,2057,1986,1293,1576,1817,2056,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2034,1909,1695,1907,2030,1127,1922,2048,2048,2048,2048,2057,2048,2043,2038,1765,1084,886,1924,2048,2048,2048,2037,1499,2048,2048,2048,2048,2048,2048,2049,1272,1760,2048,2056,2028,1985,2027,1832,1567,1503,1479,1382,1160,1117,1175,1317,1458,1299,1174,1123,1060,1050,1182,1033,1070,1222,1110,1674,1458,1377,1463,1131,1274,1575,1183,1190,1402,1395,1367,1320,1231,1237,1071,668,1139,1256,1417,1483,1395,1387,1357,1115,1169,1369,1408,1123,1627,1346,1292,1022,1106,1186,1220,1088,1190,382,751,732,889,979,731,1169,663,1104,1102,1141,1218,1649,1657,1465,593,734,492,273,1371,975,525,362,612,563,830,934,694,701,832,679,673,754,705,714,990,621,348,1166,1510,981,1455,1542,521,1523,1383,587,293,241,484,1609,1120,582,548,389,791,166,135,69,75,92,513,708,958,596,272,312,827,885,532,592,518,73,71,364,827,748,498,608,512,539,580,229,272,547,609,573,222,274,172,340,306,363,579,118,489,559,74,133,118,160,159,473,1285,1253,581,222,82,473,442,684,492,342,243,386,418,319,313,310,452,146,691,719,475,474,535,640,409,453,398,334,302,395,189,1295,1683,1154,1056,904,916,1174,1264,1244,1249,1372,1319,1402,1415,1299,1314,1371,1405,1292,1450,1419,1492,1541,1484,1353,1179,1195,1172,1191,1099,918,867,1205,1301,1897,1594,1629,1524,1461,1567,1628,1588,1665,1779,1815,1809,1800,1845,1737,1791,1737,1658,1765,1597,1702,1756,1748,1680,1575,1682,1490,1636,1550,1608,1479,1512,1602,1853,1300,1277,1204,1269,1198,1311,1250,1355,1482,1463,1588,1583,1518,1522,1480,1457,1531,1532,1435,1471,1395,1514,1478,1160,1175,1095,1197,1229,1209,1312,1219,1342,1274,1209,1183,1154,1181,1153,1180,1500,1913,1489,1534,1434,1408,1574,1574,1928,1416,1304,1652,1468,1575,1511,1574,1790,1522,1569,1513,1571,1782,988,1021,1038,1278,1806,1571,1587,1533,1661,1368,1350,1307,1352,1203,888,1511,1741,1544,392,385,387,1150,1156,1194,1252,1872,1843,1969,1978,1958,1934,1779,1764,1628,1162,1404,1385,1274,1223,1654,1717,1791,1803,1780,1763,1663,1810,1613,1921,1926,1350,1080,1524,1678,1008,1557,1716,1677,1586,1716,1096,1174,1208,1566,1655,1686,1691,1288,1766,1595,1781,1813,1710,1655,1723,1627,1690,1767,1767,1616,1785,1691,1779,1797,1834,1686,1781,1738,1602,1743,1782,1785,1795,1826,1611,1814,1703,1694,1660,1690,1701,1594,1664,1793,1749,1637,1727,1716,1735,1743,1693,1660,1765,1653,1795,1850,1598,1785,1691,1743,1800,1641,1786,1771,1547,1737,1704,1569,1715,1748,1831,1703,1810,1597,1800,1816,1677,1672,1688,1639,1699,1829,1718,1778,1842,1831,1847,1808,1859,1856,1904,1755,1846,1742,1699,1721,1793,1619,1715,1710,1691,1686,1713,1620,1612,1943,1931,1881,1918,1935,1922,1898,1923,1912,1897,1884,1005,1846,1835,1733,1770,1794,1799,1762,1809,1812,1865,1735,1723,1848,1700,1791,1734,1784,1778,1764,1826,1689,1826,1816,1808,1755,1697,1737,1801,1793,1834,1791,1794,1752,1628,1678,1760,1722,1802,1696,1878,1813,1647,1872,1851,1825,1826,1688,1720,1824,1850,1764,1695,1822,1761,1829,1663,1697,1617,1655,1522,1513,1599,1651,757,1583,1468,1675,1606,1696,1528,1726,1077,1662,1254,1499,1528,1617,1646,1701,1556,1739,939,1696,1547,1478,1574,820,1584,1532,1559,1680,1592,1700,1571,1716,1646,1588,2030,1981,1966,1982,2016,1803,1996,1880,2016,2028,1796,2012,2041,1856,2014,2017,1987,1992,2032,1989,2013,1951,1936,1824,2040,2035,1713,1808,1924,1869,1835,1772,1721,1810,1855,1894,1873,1848,1789,1693,1722,1765,1822,1847,1849,1846,1772,1742,1742,1885,1879,1824,1861,1828,1725,1639,1790,1894,1822,1838,1859,1831,1708,1739,1784,1860,1764,1864,1893,1883,1763,1730,1853,1878,1820,1857,1750,1761,1723,1821,1870,1818,1835,1847,1719,1748,1839,1875,1849,1893,1811,1720,1844,1897,1869,1803,1808,1867,1784,1727,1824,1700,1486,1548,1526,1611,1482,1578,1616,1484,1726,1577,1521,1741,1514,1689,1964,1774,1735,1914,1717,1803,1769,1677,1523,1605,1520,1610,1487,1561,1590,1524,1681,1666,1614,1862,1599,1846,1891,1792,1698,1871,1734,1626,1574,1573,1664,1621,1502,1656,1480,1610,1559,1485,1709,1372,1580,1917,1716,1743,1832,1761,1802,1866,1747,1700,1779,1570,1675,1526,1515,1524,1457,1618,1505,1630,1625,1554,1909,1513,1697,1869,1775,1653,1788,1582,1527,1695,1603,1647,1497,1447,1615,1464,1663,1550,1450,1837,1561,1598,1863,1664,1689,1779,1728,1754,1837,1764,1713,1847,1767,1715,1637,1855,1759,1742,1827,1702,1775,1735,1739,1684,1684,1738,1509,1639,1750,1549,1802,1649,1733,1636,1716,1690,1658,1780,1594,1813,1674,1784,1685,1742,1712,1775,1496,1647,1589,1803,1637,1698,1559,1584,1558,1519,1539,1747,1600,1747,1592,1736,1794,1744,1670,1740,1892,1755,1710,1703,1601,1567,1717,1770,1635,1548,1662,1658,1467,1597,1671,1507,1525,1718,1666,1746,1844,1779,1731,1807,1770,1743,1837,1811,1658,1534,1874,1582,1618,1679,1571,1623,1424,1718,1438,1516,1748,1568,1651,1769,1490,1675,1861,1864,1691,1914,1719,1608,1877,1616,1537,1739,1613,1669,1444,1569,1447,1531,1682,1560,1605,1773,1597,1787,1874,1779,1743,1911,1802,1688,1782,1707,1580,1641,1592,1661,1407,1384,1697,1395,1555,1784,1510,1608,1690,1476,1647,1618,1645,1823,1733,1589,1760,1781,1692,1813,1653,1517,1718,1383,1569,1469,1497,1492,1549,1631,1645,1533,1796,1757,1784,1740,1658,1791,1750,1701,1714,1773,1741,1745,1693,1755,1817,1678,1754,1783,1680,1647,1734,1822,1665,1724,1778,1818,1657,1690,1760,1710,1623,1690,1695,1838,1784,1718,1652,1716,1819,1789,1799,1525,1446,1848,1815,1836,1534,1790,1788,1879,1731,1680,1709,1768,1803,1656,1656,1782,1759,1854,1677,1672,1770,1785,1775,1727,1641,1749,1868,1688,1766,1769,1534,1823,1847,1818,1811,1713,1792,1848,1746,1802,1713,1698,1701,1688,1687,1689,1742,1761,1905,1897,1898,1935,1942,1945,1941,1901,1707,1778,1891,1885,1776,1810,1789,1806,1828,1907,1934,1896,1895,1852,1828,1924,1838,1836,1815,1794,1868,1815,1925,1945,1910,1819,1810,1830,1859,1913,1914,1903,1832,1830,1796,1810,1910,1856,1826,1818,1893,1822,1762,1794,1884,1928,1942,1780,1912,1902,1906,1919,1942,1924,1904,1786,1915,1934,1933,1907,1836,1852,1738,1748,1766,1698,1746,1715,1807,1795,1792,1762,1811,1745,1884,1736,1837,1760,1868,1739,1714,1780,1706,1709,1802,1685,1862,1775,1874,1819,1867,1854,1834,1873,1843,1861,1823,1861,1849,1822,1852,1782,1858,1799,1805,1889,1763,1827,1809,1842,1863,1807,1792,1810,1802,1796,1790,1766,1794,1773,1852,1763,1880,1704,1813,1813,1698,1837,1749,1840,1804,1656,1765,1714,1700,1810,1827,1862,1851,1945,1890,1727,1892,1637,1907,1768,1940,1754,1736,1865,1769,1741,1907,1785,1728,1690,1681,1669,1756,1697,1726,1716,1686,1704,1752,1732,1757,1679,1783,1772,1729,1756,1762,1764,1692,1733,1742,1801,1746,1725,1758,1803,1817,1617,1943,1949,1594,1856,1632,1858,1810,1913,1562,1887,1532,1970,1854,1673,1733,1725,1751,1409,1933,1479,2002,1515,1891,1487,1688,1701,1776,1664,1501,1835,1500,1915,1523,1915,1512,1759,1656,1849,1653,1600,1742,1573,1868,1987,1938,2002,1962,1977,2011,1862,1972,2000,1906,1464,1858,1917,1491,1334,1413,684,853,793,989,1317,1496,849,2012,2016,2025,2018,2037,2020,2030,2000,1946,1927,1673,1667,1726,1728,1740,1663,1755,1756,1674,1692,1774,1585,1956,1727,1642,1569,1707,1700,1810,1764,1758,1890,1654,1775,1735,969,844,1543,1181,634,629,1651,1666,1810,1790,1798,1791,1854,1690,1623,1796,1985,1962,1992,1983,1984,1978,1976,1953,1935,1818,1932,1480,1584,767,1369,1744,1486,1392,1511,1455,924,1425,1432,1567,1592,1736,1851,1854,1814,1539,1533,1538,1584,1575,1614,1573,1566,1624,1834,1873,1857,1917,1998,1867,1847,1875,1858,1890,1872,1622,1934,1942,1640,1592,1517,1007,1610,1484,888,1651,1533,1572,1602,1780,1970,1584,1987,1975,1226,1965,1958,1823,1972,1982,1919,1265,1946,1957,1755,1393,1794,1844,1893,1914,1667,1855,2016,1815,1963,1440,1979,1873,1607,2000,1637,1989,1979,1211,1966,1960,1823,1975,1985,1931,1198,1962,1938,1753,1370,1788,1844,1880,1917,1661,1847,2007,1960,2005,1980,1929,1978,1970,1803,1724,1741,1710,1605,1558,1744,1428,1656,1565,1620,1798,1896,1859,1783,1771,1632,1814,1861,1758,1376,1741,1621,1746,1492,1712,1822,1998,1987,1966,1959,1965,1948,1967,1969,1184,1302,1642,1481,1574,2002,1843,1366,1806,1997,1880,1134,1914,1972,1838,1650,1862,1931,1980,1817,1625,1852,2021,1941,1849,1384,1859,2002,1833,1774,1302,1805,1903,1807,1439,1773,1678,1916,1370,1888,1972,1835,1774,1516,1270,1648,1792,1944,1918,1330,1920,1957,1969,1905,1966,1933,1938,1971,1877,1946,1974,1916,1957,1967,1927,1959,1976,1941,1981,1959,1953,1992,2001,1906,1498,1544,2000,2030,1997,1691,1913,1866,1979,1855,1721,1639,1545,1601,1462,1495,1049,1957,1987,1760,1136,1465,1384,1786,1955,1837,1703,1989,1950,1915,1883,1623,1751,1808,1622,1710,1781,1760,1900,1913,1840,1818,1723,1722,1310,993,1805,1559,1716,1398,1693,1403,1718,1755,1826,1716,1722,1603,1824,1922,1837,1696,1726,1518,1492,1152,1838,1832,1873,1871,1625,1403,1383,1904,1648,1791,1839,1736,1856,1743,1815,1746,1918,1865,1859,1768,1604,1545,1690,1725,1892,1779,1784,1720,1821,1741,1653,1382,1012,828,1231,1505,1814,1693,1843,1707,1710,1549,1596,1886,1751,1741,1667,1550,1719,1766,1769,1870,1799,1792,1794,1690,1720,1797,1816,1757,1413,1226,1146,1164,1162,1124,1067,1196,1404,1636,1630,1640,1591,1595,1660,1629,1632,1884,1764,1765,1748,1713,1772,1755,1718,1739,1716,1797,1970,1744,1770,1753,1918,1943,1885,1924,1915,1917,1902,1906,1868,1929,1889,2029,1865,1875,1900,1942,1712,1712,1677,1711,1677,1686,1708,1664,1886,1696,1690,1692,1702,1687,1683,1681,1758,1844,1761,1737,1767,1743,1744,1761,1744,1814,1502,1543,1524,1549,1540,1547,1531,1556,1581,1505,1521,1439,1783,1709,1680,1685,1706,1741,1701,1725,1776,1639,1730,1715,1752,1694,1732,1676,1734,1729,1737,1721,1751,1767,1671,1713,1685,1830,1757,1731,1753,1739,1773,1734,1754,1866,1741,1800,1829,1870,1792,1821,1793,1815,1810,1840,1803,1863,1919,1767,1788,1800,1862,1598,1626,1583,1587,1593,1605,1586,1687,1692,1637,1624,1631,1628,1608,1638,1636,1867,1809,1812,1797,1802,1780,1772,1792,1819,1783,1636,1245,1630,1597,1676,996,1644,1785,1783,1837,1868,1878,2047,1884,1931,1951,1867,1931,2037,1938,1902,1917,1878,1932,2043,1819,1590,1623,1642,1523,1648,1851,1670,1608,1627,1571,1689,1971,1791,1752,1601,1732,1757,1699,1595,1762,1892,1789,1659,1637,1784,1731,1626,1638,1912,1996,2002,1994,1993,2004,2020,2024,2021,2023,1995,2013,1992,1957,1757,1798,1932,1941,1889,1953,1971,1867,1820,1797,1837,1782,1915,1938,1893,1924,1817,1931,1905,1916,1860,1903,1916,1918,1876,1612,1834,1684,1676,1718,1653,1679,1838,1762,1866,1821,1832,1905,1884,1827,1873,1803,1587,1461,1394,1419,1769,1626,1671,1640,1642,1635,1633,1676,1613,1547,1594,1592,1645,1650,1673,1643,1641,1824,1601,1598,1632,1578,1611,1588,1589,1551,1794,1660,1621,1648,1578,1649,1635,1603,1740,1602,1610,1610,1575,1600,1601,1600,1581,1776,1679,1653,1650,1613,1656,1637,1625,1715,1612,1557,1537,1506,1510,1527,1523,1489,1764,1560,1567,1568,1596,1558,1542,1524,1602,1761,1581,1587,1619,1618,1587,1517,1561,1753,1597,1568,1560,1585,1579,1518,1481,1593,1752,1580,1611,1599,1622,1574,1534,1556,1743,1652,1600,1612,1636,1652,1601,1582,1634,1794,1564,1613,1597,1643,1594,1597,1550,1704,2006,2002,1972,2017,1951,1988,1907,1953,1918,1978,1909,1975,1952,1991,1937,1971,1979,1385,1362,1338,1284,1487,1425,1379,1377,1468,1380,1331,1379,1467,1439,1386,1378,1349,1369,1414,1374,1363,1481,1435,1386,1403,1471,1414,1399,1438,1413,1420,1361,1372,1296,1587,1417,1365,1381,1366,1379,1359,1377,1483,1357,1376,1357,1361,1595,1473,1566,1371,1336,1370,1376,1401,1411,1422,1373,1482,1417,1370,1395,1490,1426,1402,1404,1454,1554,1531,1598,1589,1456,1422,1516,1435,1524,1507,1545,1486,1578,1332,1207,1289,1398,1239,1334,1302,1256,1544,1447,1455,1489,1511,1337,1417,1380,1367,1405,1477,1404,1421,1795,1699,1604,1712,1597,1715,1598,1680,1770,1673,1643,1694,1697,1641,1689,1642,1723,1756,1833,1641,1838,1658,1774,1631,1782,1812,1733,1696,1717,1808,1636,1741,1650,1778,1735,1694,1596,1695,1640,1669,1617,1660,1719,1750,1734,1643,1783,1623,1729,1636,1745,1726,1499,967,1864,1968,1453,1571,1501,1801,1610,1460,1754,1614,1620,1655,1513,1522,1805,1637,1703,1657,1618,1823,1703,1459,1727,1772,1696,1359,1708,1837,1728,1673,1798,1797,1730,1801,1852,1728,1698,1691,1831,1731,1792,1706,1653,1832,1849,1802,1827,1864,1761,1497,1493,1405,1770,1731,1743,1622,1320,1763,1762,1861,1725,1733,1334,1587,1636,1647,1706,1459,1426,1855,1865,1840,1681,1337,1742,1870,1969,1899,1836,1319,1548,1809,1820,1776,1473,1575,1766,1791,1793,1735,1329,1719,1814,1934,1804,1802,1405,1483,1694,1703,1737,1550,1562,1702,1854,1811,1812,1341,1622,1825,1963,1831,1882,1512,1416,1718,1800,1791,1617,1677,1444,1312,990,959,1260,1305,1356,1175,1324,1372,1155,1090,980,1105,1236,1137,1169,1376,1235,1377,1328,1375,1330,1221,1228,1507,1840,1596,1561,1535,1519,1592,1572,1587,1588,1583,1567,1606,1630,1641,1621,1619,1513,1530,1477,1502,1608,1518,1464,1477,1466,1532,1821,1717,1720,1686,1711,1694,1666,1684,1747,1708,1717,1720,1722,1727,1707,1712,1708,1707,1690,1676,1583,1619,1679,1716,1676,1651,1723,1792,1751,1715,1732,1929,1933,1852,1871,1920,1884,1888,1742,1778,1521,1463,1791,1698,1710,1713,1682,1674,1710,1727,1756,1741,1696,1650,1734,1655,1660,1719,1708,1839,1685,1669,1680,1633,1676,1691,1684,1662,1709,1674,1504,1685,1484,1680,1484,1696,1745,1616,1610,1608,1625,1578,1587,1607,1600,1729,1617,1559,1631,1629,1637,1584,1639,1754,1621,1603,1550,1589,1561,1613,1551,1611,1672,1582,1421,1642,1433,1597,1415,1616,1598,2028,1988,1965,1995,2003,1995,1973,2026,2054,1983,1947,1953,1991,1959,1960,2004,1983,1903,1794,1774,1789,1811,1809,1783,1789,1961,1838,1858,1868,1861,1864,1849,1841,1864,1653,1565,1791,1694,1509,1688,1349,1573,1691,1703,1695,1650,1633,1695,1723,1663,1840,1722,1790,1741,1735,1730,1788,1768,1728,1831,1781,1800,1705,1729,1769,1822,1717,1858,1642,1625,1638,1658,1640,1656,1625,1649,1846,1713,1724,1703,1722,1724,1743,1699,1852,1960,2014,2006,2045,1987,1999,1979,2002,2004,2030,2009,2008,2011,2027,2004,2036,2025,2012,2021,2000,2008,1865,1875,1735,1869,1562,1303,1605,1860,1803,1901,1877,1783,1819,1735,2004,2003,2054,2018,1897,1534,1560,1575,1611,1790,1825,1767,1767,1795,1790,1827,1704,1734,1654,1634,1775,1758,1777,1732,1757,1760,1729,1688,1673,1816,1815,1816,1805,1778,1788,1763,1807,1805,1903,1981,1977,1988,1982,1889,1806,1839,1845,1830,1838,1793,1805,1915,1862,1868,1811,1984,1949,1980,2000,1967,1962,1994,1978,1968,1905,1998,1875,1867,1822,1758,1773,1903,1912,1930,1974,1925,1879,1747,1750,1873,1884,1836,1706,1596,1475,1572,1849,1962,1951,1973,1959,1857,1797,1886,1762,1840,1849,1781,1919,1703,1887,1813,1866,1785,1714,1765,1746,1747,1765,1807,1491,1724,1485,1624,1444,1464,1468,1635,790,1060,1165,998,744,848,820,980,1115,1001,1189,923,921,1012,835,900,1741,1834,1804,1845,1957,1926,1748,1744,1696,1764,1775,1744,1684,1736,1731,1727,1657,1594,1868,1930,1898,1972,1949,1939,2020,1962,2004,1836,1857,1857,1840,2038,2004,1979,1999,2048,2041,2025,2036,2039,1802,1593,1548,1556,1499,1609,1575,1737,2028,2019,2009,2041,2000,2030,2031,2013,2034,1906,2005,1975,1596,1624,1419,1346,1357,1543,1644,1711,1649,1659,2027,2030,1996,2045,1868,1648,1734,1603,1570,1714,1632,1885,1879,1921,1921,1874,1882,1925,1927,1954,1980,1865,1646,1799,1680,1930,1943,1983,1937,1961,1931,1923,1928,1928,1199,1092,1090,1078,1670,1749,1799,1784,1411,1328,1223,1370,1647,1828,1809,1863,1922,1901,1913,1932,1744,1434,1540,1444,1508,1514,1440,1626,1623,1363,1855,1888,1850,1598,1609,1619,1671,1842,1586,1579,1340,1574,1616,1826,1795,1583,1541,1430,1594,1642,1872,1715,1699,1660,1793,1719,1727,1709,1694,1735,1741,1746,1693,1925,1927,1918,1929,1943,1921,1911,1944,1933,2048,2003,1997,2018,1989,2031,1969,2036,2035,2034,2038,2022,2046,2027,2031,2020,2026,2053,2048,2036,2041,2031,2051,2023,2047,2048,2017,2020,2022,2034,2000,2017,2006,2035,1398,1061,1104,1060,1054,761,725,768,974,1914,1758,1917,1762,1508,1488,1502,1588,1502,1519,1489,1562,1500,1498,1527,1509,1486,1391,1366,1386,1408,1379,1333,1370,1459,1391,1342,1325,1381,1676,1518,1642,1679,1599,1703,1847,1821,1882,1731,1841,1664,1699,1659,1689,1679,1668,1684,1674,1741,1558,1529,1536,1591,1569,1546,1559,1690,1550,1568,1548,1575,1523,1501,1522,1544,1895,1902,1953,1928,1969,1976,1983,1997,2032,1879,1929,1890,1905,1939,1895,1913,1882,2013,2013,2052,2024,2052,1951,1992,1965,1992,2045,2013,2046,2049,2022,1775,1673,1821,1875,1894,1853,1830,1901,1784,1715,1624,1464,1504,1516,1388,1582,1781,1905,1937,1794,1708,1846,1686,1760,1799,1762,1934,1877,1968,1907,1600,1484,1683,1744,1831,1837,1791,1884,1846,1827,1822,1816,1830,1884,1691,1690,1687,1688,1715,1689,1658,1744,1934,1856,1918,1924,1897,1896,1860,1825,1999,1943,1868,1919,1931,1929,1918,1859,1917,1786,1825,1779,1778,1832,1863,1970,1859,1841,1849,1754,1890,1803,1835,1891,1852,1839,1939,1879,1863,1826,1552,1070,1395,1562,1569,1580,1591,1581,1628,1624,1594,1706,1815,1800,1685,1847,1820,1675,1821,1769,1714,1804,1712,1815,1741,1935,1881,1919,1931,1959,1895,1579,1881,1800,1488,1496,1505,1761,1647,1696,1767,1669,1600,1574,1651,1623,1644,1615,1673,1913,1954,1969,1989,1999,1988,1997,2003,1996,2030,1998,1985,1996,1810,1846,1747,1820,1773,1868,1754,1911,1740,1592,1589,1548,1656,1666,1460,1453,1580,1769,1611,1464,1599,1405,1590,1412,1567,1587,1570,1561,1466,1510,1415,1497,1405,1474,1623,1666,1558,1652,1594,1656,1539,1607,1641,1728,1629,1557,1624,1563,1625,1533,1575,1680,1625,1630,1627,1656,1654,1623,1596,1587,1764,1662,1617,1670,1641,1661,1620,1625,1773,1619,1612,1608,1608,1644,1598,1605,1587,1886,1790,1787,1768,1801,1769,1800,1767,1884,1650,1652,1638,1625,1646,1624,1616,1618,1886,1812,1831,1820,1820,1819,1812,1784,1892,1797,1762,1756,1753,1768,1727,1749,1746,1831,1827,1757,1767,1675,1543,1581,1632,1657,1817,1766,2048,2048,1808,1829,1744,1847,2004,1953,1794,1842,1868,1926,1951,1996,1970,1825,1667,1781,1718,1833,1853,1926,2048,2047,2048,2057,1920,1892,1757,1769,1726,1830,1647,1790,2056,2037,1940,1984,1899,1922,1931,1892,1838,1767,1600,1795,1935,1938,1778,1888,1943,1938,1802,1870,1957,1790,1444,1574,1698,1777,1788,1892,1873,1809,1459,1584,1785,1857,1835,1878,1746,1712,1594,1701,1801,1864,1875,1940,1977,1943,1862,1872,1643,1663,1575,1583,1797,1718,1716,1707,1633,1649,1641,1679,1572,1690,1904,1931,1854,1904,1693,1836,1651,1834,1692,1814,1679,1898,1919,1898,1709,1798,1639,1785,1962,1863,1663,1607,1704,1780,1689,1634,1446,1453,1480,1488,1449,1475,1452,1607,2025,2019,2023,2006,2024,2028,2024,2002,1832,1857,1859,1856,1863,1795,1529,1501,1556,1544,1541,1521,1312,1612,1734,1841,1790,1835,1830,1939,1836,1890,1624,1793,1917,1924,1943,1956,1901,1941,2004,1849,1543,1581,1632,1691,1809,1883,1795,1879,1808,1903,2037,2020,2022,1988,1812,1836,1810,1826,1853,1717,1590,1612,1620,1744,1862,1827,1661,1798,2034,2037,2024,1983,1806,1862,2003,1909,1734,1804,1743,1873,1883,1851,1692,1789,1642,1687,1619,1801,2051,2035,2043,1899,1586,1616,1677,1708,1663,1657,1298,1465,1554,1685,1795,1554,1122,1439,1969,1994,1842,1942,2036,2048,1984,2012,1869,1866,1808,1718,1797,1717,1796,1700,1739,1674,1694,1626,1583,1685,1693,1715,1565,1545,1439,1608,1807,1877,1806,1812,1550,1589,1396,1539,1574,1632,1629,1670,1707,1745,1698,1729,1780,1825,1672,1711,1573,1726,1778,1642,1281,1344,1419,1580,1853,1772,1457,1460,1384,1381,1346,1441,1497,1580,1603,1609,1584,1617,1572,1560,1365,1435,1463,1506,1404,1519,1518,1587,1615,1556,1645,1580,1598,1623,1590,1610,1400,1677,1663,1688,1659,1632,1564,1588,1625,1607,1542,1549,1550,1645,1636,1647,1530,1543,1586,1583,1640,1694,1648,1693,1518,1561,1497,1546,1648,1732,1828,1794,1647,1753,1836,1843,1805,1749,1444,1435,1412,1443,1443,1574,1689,1710,1671,1727,1787,1759,1671,1799,1532,1692,1204,1494,1548,1839,1668,1965,1699,1906,1621,1834,1459,1794,1633,1776,1292,1312,891,1132,1694,1478,1223,1382,1484,1470,1489,1465,1470,1458,1395,1364,1382,1419,1417,1261,1235,1022,1021,1789,1464,1557,1317,1459,1436,1646,1824,1962,2028,1792,1966,1929,1703,1783,992,748,798,909,1001,1000,1154,997,1059,867,783,949,1027,862,917,875,931,939,734,893,829,942,970,1104,873,916,1294,1251,562,542,542,515,520,1048,1007,1080,978,746,771,986,864,1044,1053,853,1007,926,776,543,520,603,744,868,1070,439,882,602,738,694,729,1103,962,1036,1068,573,684,492,565,594,738,688,915,731,787,671,918,1271,764,827,1005,958,1020,838,1045,745,893,1082,967,893,685,975,276,619,879,1058,390,568,973,678,717,573,612,692,909,923,860,617,695,720,775,2057,1801,775,988,1267,1265,782,1311,1074,1178,781,962,1319,1167,1599,1572,1483,1560,1652,45,44,82,48,92,45,106,222,365,460,571,621,581,672,814,685,1075,1422,1478,1468,1374,1679,1608,1547,1643,1628,1678,1669,1710,1776,1703,1629,1575,1702,1673,1531,1553,1484,1365,965,904,726,659,587,649,585,558,542,422,376,229,158,73,50,47,45,180,2048,88,48,47,45,44,45,48,47,45,44,66,243,819,1476,1278,1470,1449,1415,1291,1030,1104,863,658,711,903,764,839,852,926,988,904,845,756,752,875,973,824,798,807,843,757,665,542,523,201,46,49,47,45,44,47,49,47,45,44,48,49,1728,1633,1446,1381,1317,1315,1327,1340,1279,1310,1280,1356,1251,1211,1329,1150,1045,1046,933,896,974,818,783,1003,1120,1094,1350,1422,1614,1649,1566,1616,1679,1388,1391,1190,1195,1241,1329,1495,1417,1397,1038,968,1082,1162,1188,1274,1189,1254,1240,1284,1312,1342,1322,1356,1328,1330,1800,1107,45,50,47,45,44,208,563,896,956,1173,1482,1691,1722,1794,1730,1718,1723,1755,1773,1816,1857,1778,1737,1448,1354,1369,1375,1748,1842,1809,1898,1906,1922,1937,1894,1831,1902,1860,1800,1785,1753,1665,1807,1895,1711,1342,1403,1227,686,181,48,49,48,45,46,48,605,842,1011,1204,1236,1408,534,934,1070,902,900,1052,872,1642,1643,1533,1641,1744,1598,1590,1655,1736,1684,1485,1809,1647,1521,1615,1693,1631,1570,1668,1752,1658,1570,1595,1819,1688,1661,1512,1850,1854,1827,1783,1817,1938,2025,2014,1164,49,51,147,218,289,411,447,578,655,944,1049,1086,1383,1385,1379,1482,1455,1348,1359,1432,1485,1641,1647,1627,1580,1597,1506,1597,1484,1442,1489,1467,1429,1487,1609,1750,1686,1678,1634,1636,1646,1669,1556,1381,1450,1452,1401,1177,1038,1181,1078,1046,1070,1030,1022,1029,1280,2006,1424,1417,1387,1326,1302,1343,1312,1246,1313,1307,1329,1176,1240,1301,1139,1021,930,971,975,881,759,902,1091,1106,1218,1361,1537,1672,1579,1586,1655,1494,1446,1347,1117,1168,1328,1382,1482,1440,1225,974,1005,1131,1207,1285,1218,1280,1217,1233,1278,1277,1393,1286,1334,1314,1390,2048,1409,1339,1042,863,1404,1195,1096,861,953,954,867,791,1282,1501,1536,1352,1454,1517,1276,1388,1428,1523,1392,1405,1448,1413,1417,1191,1246,1114,1334,1562,1654,1721,1648,1406,1437,1491,1534,1488,1414,1476,1430,1251,1283,1075,1091,862,961,1210,1291,1352,1415,1365,1379,1381,1343,1939,616,45,45,91,69,63,63,175,279,397,523,627,608,607,727,724,817,1349,1436,1453,1420,1533,1696,1506,1585,1666,1630,1698,1666,1710,1783,1691,1600,1662,1665,1648,1473,1517,1404,1216,912,784,683,633,631,561,579,535,493,365,315,216,90,84,49,45,38,1203,1124,48,49,45,45,45,48,49,45,45,45,143,386,1318,1344,1412,1416,1424,1365,1111,1100,1000,754,625,899,849,790,839,888,960,968,840,791,758,758,973,823,793,779,838,743,700,660,598,322,86,48,49,45,38,45,48,49,45,38,45,48,703,1638,45,45,45,42,49,68,866,1094,1087,1072,1045,1044,1128,1081,963,1123,1131,1236,1478,1669,1671,1783,1590,1446,1467,1371,1299,1071,1242,1362,1244,1261,1287,1411,1546,1588,1451,1610,1700,1481,1475,1572,1603,1461,1059,969,955,1147,1222,1008,560,40,45,48,49,45,190,2048,75,44,109,197,248,366,459,539,622,795,1106,1159,1271,1484,1395,1483,1613,1553,1621,1540,1649,1710,1788,1765,1779,1754,1675,1658,1634,1582,1503,1552,1538,1558,1530,1779,1769,1741,1675,1685,1647,1662,1587,1490,1396,1532,1507,1260,1099,1146,1089,1082,1036,1064,1015,990,947,1809,2048,1506,953,1011,856,893,1013,951,909,984,885,877,753,884,1127,1276,1372,1219,1332,1362,1403,1428,1412,1445,1440,1313,1091,1001,1032,925,1163,1127,1119,1154,1156,975,1064,1261,1261,1280,1307,1152,1083,1264,1189,1161,1248,1249,1369,1329,1265,1283,1263,1251,1335,1293,1345,1357,1534,1330,1235,1252,1388,1374,1400,1412,1403,1416,1449,1411,1329,1310,1315,1433,1387,1384,1388,1338,1314,1269,1167,1170,1145,1318,1297,1152,1077,1200,1127,1074,866,1606,1380,1266,1235,1331,1344,1399,1444,1415,1428,1407,1424,1375,1272,1332,1366,1387,1411,1396,1320,1307,1263,1189,1208,1173,1242,1275,1182,1115,1207,1087,1092,982,1284,1732,908,984,883,902,1000,982,886,965,926,918,812,846,1030,1326,1357,1257,1297,1373,1370,1446,1392,1437,1456,1383,1144,1000,1034,956,1151,1101,1143,1057,1196,1004,1028,1239,1260,1248,1311,1209,1069,1199,1206,1177,1246,1248,1313,1344,1287,1284,1278,1257,1294,1327,1283,1398,1576,2048,155,97,1292,1285,937,1082,1173,1204,131,138,1982,1305,1112,994,993,1026,1290,1257,1355,1149,1242,1373,1291,1451,1383,1368,1263,1326,1523,1668,1512,1481,1391,1423,1479,1476,1420,1517,1517,1494,1396,1464,1514,1518,1569,1652,1692,1605,1497,1553,1544,1591,1554,1469,1486,1462,1477,1389,1297,1206,1208,1222,1231,1296,1297,1160,1157,1204,1793,1622,1119,1076,906,1049,1168,1257,1116,1061,955,1027,953,1002,1174,1207,1270,1206,1052,1186,1264,1432,1283,1350,1203,1223,1556,1534,1622,1682,1639,1671,1564,1537,1578,1658,1684,1753,1653,1643,1456,1424,1340,1389,1380,1352,1555,1615,1559,1523,1492,1454,1421,1428,1419,1396,1363,1351,1682,1643,697,722,840,942,1025,1043,1084,1170,1187,1177,1206,1247,1232,1393,1395,1346,1492,1435,1501,1492,1473,1506,1577,1696,1640,1572,1652,1665,1731,1764,1778,1858,1747,1582,1609,1636,1645,1722,1733,1726,1761,1715,1706,1645,1564,1778,1798,1755,1716,1687,1754,1714,1528,1233,1142,860,833,1230,1141,1649,1536,1572,1692,1172,49,45,45,45,48,211,967,1093,1117,1058,1034,1026,1202,1058,1003,1125,1134,1292,1487,1722,1690,1759,1534,1398,1548,1348,1223,1020,1350,1318,1241,1183,1303,1454,1589,1535,1486,1659,1671,1457,1524,1537,1617,1372,961,1040,1056,1157,1161,931,397,45,44,45,48,49,651,1687,38,45,48,49,45,38,45,48,49,45,68,313,1046,1422,1323,1447,1395,1382,1193,1039,1116,824,627,839,847,771,871,832,961,994,843,810,719,740,959,878,813,780,768,825,754,703,556,422,169,44,45,48,47,45,44,45,48,47,45,44,147,2048,935,911,867,1157,1105,956,945,1033,1015,972,860,1041,1035,1090,951,1200,1384,1396,1460,1522,1468,1603,1470,1359,1294,1258,1440,1351,1281,1321,1132,1181,1017,1095,1256,1452,1445,1457,1354,1203,1149,1156,1159,1387,1100,994,1126,1211,1070,912,829,998,1006,1077,1063,989,945,1827,632,41,45,48,49,50,287,624,861,1027,1183,1563,1699,1745,1790,1707,1710,1721,1754,1764,1827,1842,1793,1676,1414,1387,1291,1459,1784,1852,1844,1916,1889,1937,1933,1855,1848,1881,1869,1837,1840,1772,1741,1806,1893,1522,1436,1357,1177,537,122,44,45,50,47,45,44,666,1288,1349,989,887,707,937,1081,1022,1645,902,45,65,161,222,302,422,489,572,657,1005,1051,1063,1382,1396,1381,1473,1432,1376,1376,1455,1456,1628,1661,1623,1590,1571,1502,1581,1495,1467,1504,1477,1422,1467,1628,1716,1681,1660,1655,1651,1647,1667,1511,1388,1461,1465,1376,1135,1057,1113,1083,1062,1081,1003,1046,973,1429,1906,1433,1400,1357,1290,1291,1341,1317,1257,1338,1346,1293,1192,1294,1239,1085,1053,973,913,977,871,769,944,1094,1125,1239,1387,1563,1650,1590,1578,1692,1484,1443,1264,1138,1189,1330,1418,1456,1430,1191,975,1026,1113,1174,1288,1193,1295,1200,1256,1283,1310,1342,1303,1369,1345,1508,2023,1419,1303,983,915,1385,1139,1065,888,935,956,977,634,1393,1497,1530,1360,1436,1498,1270,1367,1482,1488,1432,1418,1476,1411,1405,1169,1254,1098,1370,1591,1620,1722,1641,1409,1445,1485,1559,1483,1433,1479,1365,1266,1268,1050,1103,851,1006,1208,1278,1347,1433,1371,1404,1354,1335,2024,353,47,45,44,48,49,556,1018,1119,1103,1063,990,1025,1158,964,1051,1156,1155,1371,1590,1708,1775,1667,1474,1426,1429,1358,1132,1108,1401,1235,1262,1188,1371,1493,1579,1460,1531,1697,1592,1397,1594,1552,1588,1202,987,942,1134,1216,1051,851,73,45,45,48,49,45,1464,863,46,48,89,57,96,52,174,286,390,471,577,603,614,697,741,801,1300,1442,1521,1443,1499,1702,1552,1582,1660,1606,1707,1650,1714,1799,1673,1603,1619,1685,1660,1470,1509,1408,1294,901,837,724,628,600,564,566,583,522,365,305,224,109,86,45,45,45,963,1374,49,47,45,45,48,49,46,45,45,48,114,361,1198,1362,1392,1426,1417,1381,1158,1086,1049,808,587,921,833,770,823,859,961,970,851,807,723,744,958,859,794,794,803,741,704,678,594,383,107,49,45,45,45,42,49,45,45,45,42,49,456,1873,45,45,48,49,45,45,45,48,49,45,75,298,928,1447,1304,1465,1401,1401,1256,1023,1124,839,634,793,835,761,864,835,954,998,896,831,743,747,957,879,818,791,800,812,778,702,546,445,174,45,45,43,49,45,45,45,44,49,45,45,45,1986,330,49,45,45,45,48,579,1030,1107,1124,1065,993,1037,1152,969,1053,1134,1181,1385,1592,1718,1768,1682,1461,1424,1444,1340,1148,1095,1408,1246,1252,1179,1366,1497,1590,1456,1538,1697,1595,1410,1573,1547,1603,1201,974,933,1154,1200,1051,853,49,45,45,45,48,49,1496,837,45,62,163,250,282,444,514,605,718,997,1118,1186,1495,1414,1451,1547,1597,1594,1568,1627,1686,1742,1802,1760,1743,1741,1646,1686,1592,1526,1588,1534,1506,1517,1713,1801,1711,1706,1660,1654,1637,1645,1525,1366,1538,1473,1383,1145,1077,1120,1096,1056,1103,1002,1016,987,1394,2048,1952,918,998,872,899,992,964,914,891,935,927,801,870,987,1303,1359,1264,1239,1406,1369,1462,1418,1466,1427,1423,1209,991,1040,932,1109,1110,1171,1030,1184,1051,1004,1259,1210,1198,1322,1267,1079,1170,1186,1180,1268,1243,1280,1305,1280,1300,1289,1290,1282,1340,1297,1416,1427,1353,1290,1276,1269,1331,1342,1406,1463,1428,1398,1425,1375,1299,1335,1357,1359,1389,1413,1336,1323,1241,1236,1205,1154,1217,1266,1195,1146,1208,1086,1053,1020,1199,1622,1272,1267,1287,1335,1337,1354,1491,1456,1375,1433,1373,1307,1389,1317,1387,1374,1417,1381,1355,1260,1213,1243,1226,1190,1250,1227,1151,1200,1146,1054,1048,845,2048,1006,978,910,862,945,1007,923,876,959,924,794,835,941,1253,1309,1320,1237,1342,1408,1396,1403,1469,1423,1367,1287,1039,1006,930,1031,1110,1199,1062,1170,1080,1006,1211,1228,1239,1277,1285,1122,1120,1188,1169,1256,1273,1289,1295,1296,1318,1337,1295,1274,1311,1296,1422,1391,1967,897,92,924,1266,1164,763,1366,1192,593,92,1329,1580,888,838,1041,1173,1023,960,1001,1091,927,950,938,1042,1094,1021,1078,1297,1393,1367,1449,1498,1504,1631,1361,1256,1356,1368,1411,1243,1402,1159,1183,1120,1008,1159,1358,1488,1430,1394,1326,1158,1196,1082,1316,1285,968,1104,1164,1137,947,853,922,1029,1015,1097,992,1003,1238,1904,1131,1025,1008,1021,1105,1288,1321,1187,1229,1288,1349,1327,1425,1409,1326,1227,1378,1580,1692,1433,1507,1411,1416,1481,1424,1420,1535,1546,1420,1403,1507,1528,1514,1634,1666,1689,1551,1497,1601,1529,1579,1521,1464,1491,1453,1443,1387,1275,1242,1197,1209,1241,1336,1245,1160,1105,1230,2048,114,49,45,45,45,79,368,764,920,1047,1267,1628,1704,1764,1778,1725,1731,1726,1781,1790,1863,1811,1781,1692,1341,1429,1247,1587,1797,1840,1850,1909,1894,1934,1938,1808,1874,1852,1867,1831,1841,1768,1757,1819,1842,1435,1457,1306,1064,459,48,49,45,39,45,48,49,1701,1470,1083,1057,927,1049,1154,1233,1175,1051,990,1010,931,1008,1205,1244,1271,1159,1036,1210,1327,1396,1350,1288,1137,1308,1560,1531,1620,1673,1629,1678,1548,1527,1577,1669,1683,1716,1644,1615,1479,1411,1350,1420,1376,1344,1586,1616,1555,1498,1478,1425,1426,1414,1425,1383,1346,1326,1785,1406,713,781,858,931,1034,1028,1076,1188,1231,1176,1192,1250,1232,1380,1372,1353,1491,1447,1497,1485,1430,1456,1559,1654,1610,1633,1615,1671,1779,1744,1768,1859,1704,1585,1613,1622,1662,1732,1709,1718,1738,1704,1710,1652,1605,1770,1803,1750,1702,1690,1752,1713,1482,1196,1121,824,880,1250,1230,1679,1520,1497,1175,1058,600,550,896,1078,1236,1078,2015,1441,1468,1464,1518,1520,1522,1533,1498,1493,1557,1665,1824,1884,1973,2004,1999,2010,1984,2012,2004,1947,1853,1771,1837,1882,1905,1915,2006,2010,1867,1852,1845,1784,1695,1749,1757,1831,1874,1943,1957,2019,2021,1994,1979,1785,1587,1488,1512,1505,1518,1510,1507,1484,1453,1461,1441,1461,2048,1375,1323,1296,1269,1284,1259,1377,1301,1259,1270,1326,1156,1358,1371,1447,1408,1447,1448,1392,1452,1538,1531,1457,1567,1551,1551,1664,1601,1617,1584,1606,1546,1534,1492,1607,1691,1654,1671,1689,1473,1351,1413,1364,1250,1243,1237,1237,1219,1196,1180,1200,1126,1226,1204,1282,1271,1235,1937,1391,1041,1171,1136,1065,960,1062,1116,1084,1141,1107,1169,1207,1349,1350,1475,1509,1591,1556,1514,1645,1550,1426,1450,1596,1559,1507,1529,1406,1447,1341,1335,1317,1352,1268,1417,1429,1546,1527,1469,1480,1332,1216,1162,1010,1033,1024,1151,1178,1168,953,917,1047,944,906,930,1024,1626,1811,1546,1614,1517,1634,1616,1652,1649,1524,1589,1646,1699,1500,1466,1563,1595,1558,1726,1689,1543,1642,1584,1452,1471,1450,1616,1554,1433,1527,1571,1547,1543,1508,1569,1572,1607,1670,1678,1678,1536,1522,1678,1641,1527,1383,1171,1489,1525,1534,1441,1547,1613,1680,1720,1686,1534,1570,1744,1947,953,997,990,1080,1070,1092,1067,1104,1061,1011,1164,1128,1185,1161,1083,1154,1105,1257,1229,1233,1245,1301,1327,1251,1109,1098,1029,1062,1029,978,1047,1043,905,958,908,946,950,1061,1076,1005,1024,986,996,993,951,997,997,1019,1078,1067,1145,1083,1133,1035,923,888,862,2048,1358,1291,1317,1288,1307,1252,1384,1315,1240,1268,1316,1122,1261,1264,1395,1346,1331,1336,1326,1443,1541,1636,1609,1502,1333,1346,1516,1554,1691,1738,1679,1523,1328,1340,1392,1485,1460,1529,1486,1443,1353,1413,1367,1252,1253,1216,1256,1227,1205,1181,1229,1138,1220,1213,1294,1272,1244,1944,1717,1574,1604,1591,1591,1570,1526,1630,1585,1543,1599,1644,1764,1809,1790,1797,1546,1641,1609,1770,1834,1853,1773,1822,1881,1860,1806,1885,1736,1820,1689,1743,1746,1743,1692,1707,1606,1829,1913,1697,1702,1320,1337,1335,1285,1504,1503,1469,1483,1533,1516,1504,1585,1502,1470,1446,1499,1829,1467,809,754,851,943,778,640,889,903,801,834,780,959,1069,1146,1245,1218,1332,1258,1414,1500,1577,1496,1628,1620,1648,1562,1632,1599,1616,1628,1555,1459,1444,1508,1522,1574,1474,1442,1448,1388,1336,1289,1123,1225,1168,1213,1036,1014,1036,1075,1001,951,1021,940,984,789,1135,2037,1747,1828,1893,1836,1814,1808,1849,1839,1724,1671,1549,1459,1497,2048,1651,1850,1897,1887,1854,1883,1903,1895,1712,1729,1568,1519,1487,2011,1751,1848,1894,1880,1931,1824,1781,1615,1472,1463,1555,1645,1642,1908,1695,1874,1964,1646,2001,1946,1685,2017,1828,1320,1487,1617,1489,1550,1972,1437,1381,1657,1548,1472,1815,1750,1299,1560,1608,1570,1561,2048,1660,1670,1654,1751,1785,1766,1731,1780,1775,1834,1809,1900,1745,1740,1781,1781,1829,1817,1827,1789,1878,1811,1763,1775,1772,1754,1767,1667,1791,1779,1744,1741,1797,1820,1767,1777,1763,1716,1715,1705,1745,1725,1722,1690,1621,1855,1870,1880,1848,1805,1824,1885,1873,1828,1759,1676,1547,2025,2003,1936,1891,1937,1929,1912,1898,1922,1905,1885,1853,1921,1882,1846,1761,1767,1745,1815,1827,1758,1848,1765,1863,1818,1826,1749,1780,1702,1601,1566,1587,1711,1795,1783,1729,1754,1679,1693,1745,1698,1755,1780,1788,1806,1722,1891,1905,1929,1892,1816,1837,1880,1915,1923,1903,1915,1879,1997,2050,1942,1959,2028,1996,1995,2009,1974,1946,1926,1941,1972,2010,1942,1932,1899,1990,1957,1972,1940,2023,2022,1996,1894,1933,1900,1947,1869,1687,1816,1791,1865,1920,1936,1963,1964,1979,1963,1961,1902,1998,1984,1867,1821,1847,1855,1864,1814,1798,1780,1827,1845,1769,1722,1636,1556,1431,1415,976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2045,1931,1464,1376,1428,1532,1569,1489,1442,1469,1197,1225,1462,1516,1215,1217,1384,1461,1481,1445,1487,1391,1390,1380,1514,1452,1461,1485,1448,1527,1428,1547,1508,1564,1496,1489,1596,1487,1544,1536,1440,1527,1579,1522,1382,1450,1408,1656,1649,1641,1639,1538,1553,1686,1673,1506,1610,1622,1536,2048,1051,1082,1152,1124,1026,968,1061,1126,1126,1147,1102,1199,1207,1383,1379,1488,1552,1633,1540,1557,1628,1476,1410,1496,1599,1525,1555,1511,1377,1476,1287,1319,1375,1274,1305,1457,1445,1537,1532,1464,1437,1290,1217,1077,1021,1023,1047,1153,1178,1125,873,1005,1047,925,921,971,1070,1943,1326,1082,1129,1095,1064,1025,1080,1116,1047,1160,1187,1292,1266,1263,1605,1524,1432,1567,1484,1472,1608,1541,1448,1544,1600,1568,1466,1500,1472,1633,1631,1772,1848,1895,1721,1663,1808,1786,1648,1576,1577,1329,1308,1209,914,1143,1061,1144,1150,1150,962,939,1064,951,897,987,1050,1677,1810,1530,1504,1525,1539,1506,1456,1539,1534,1494,1534,1579,1700,1738,1775,1754,1645,1551,1566,1725,1756,1875,1696,1737,1806,1829,1746,1878,1533,1764,1744,1739,1700,1694,1589,1610,1615,1734,1888,1682,1810,1238,1332,1312,1242,1398,1464,1466,1431,1465,1467,1440,1483,1494,1394,1386,1437,1694,2015,1670,1669,1681,1773,1767,1737,1739,1786,1805,1818,1844,1894,1731,1733,1790,1798,1842,1823,1790,1853,1837,1781,1756,1756,1770,1785,1760,1709,1796,1758,1743,1731,1827,1782,1738,1754,1755,1704,1713,1721,1743,1734,1716,1673,1690,1864,1880,1871,1854,1812,1827,1901,1882,1804,1720,1648,1586,865,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,1210,1323,1335,1453,1457,1537,1506,1409,1449,1471,1479,1410,1449,1365,1342,1033,731,1076,1280,1532,1628,1779,1833,1838,1900,1859,1742,1764,1203,1770,1738,1838,1886,1850,1818,1788,1802,1708,1451,1206,985,1119,1347,1184,1252,1383,1153,1206,1204,1370,1447,1467,1522,1426,1436,1386,1341,2041,1513,1451,1494,1558,1477,1465,1532,1488,1453,1508,1601,1625,1409,1582,1676,1665,1680,1803,1731,1631,1720,1575,1583,1533,1553,1572,1587,1581,1613,1618,1598,1564,1525,1565,1600,1656,1558,1640,1552,1568,1597,1660,1605,1576,1327,1192,1473,1501,1437,1342,1479,1531,1575,1628,1460,1369,1494,1897,1647,1429,1399,1396,1440,1353,1467,1481,1369,1389,1476,1527,1139,1420,1542,1528,1526,1704,1647,1567,1638,1510,1472,1406,1564,1560,1580,1436,1514,1524,1560,1458,1497,1566,1536,1574,1562,1586,1635,1520,1527,1575,1502,1394,1261,889,1251,1368,1378,1246,1415,1449,1520,1546,1435,1325,1386,1674,1947,1627,1674,1657,1785,1759,1730,1740,1605,1714,1736,1828,1599,1503,1648,1636,1624,1741,1792,1647,1682,1651,1519,1550,1509,1675,1676,1492,1551,1593,1622,1655,1605,1643,1708,1685,1741,1750,1746,1620,1581,1727,1649,1574,1478,1258,1603,1694,1691,1570,1641,1711,1769,1821,1823,1654,1637,1758,1955,557,603,615,648,652,693,838,1000,1040,1052,885,1259,1465,1546,1631,1452,1186,1561,1543,1665,1801,1648,1580,1745,1663,1636,1751,1612,1595,1804,1684,1714,1785,1690,1615,1661,1742,1737,1803,1703,1429,1433,1402,1210,1217,1373,1382,1247,1249,1289,1329,1472,1563,1541,1523,1559,1663,931,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2046,2014,2031,2051,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2028,2011,2051,2054,2057,2048,2056,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2057,2048,2057,2035,2008,2047,2050,2056,2048,2048,2049,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2037,2014,2035,2051,2057,2048,2048,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1669,1299,1504,1325,1104,1028,1114,1129,1074,1199,1073,1092,1220,1080,1235,1059,1081,1108,1175,1168,1197,1125,1197,957,914,852,943,952,587,1054,838,875,1127,351,349,369,1131,1226,1480,1498,1493,1422,856,1077,958,902,878,934,1378,1405,1292,1185,1062,1026,1186,1187,983,1213,1093,1172,1161,1098,1223,1059,1159,1089,1106,1131,1227,1047,1039,918,972,858,978,975,559,974,775,759,840,355,350,354,1291,1322,1507,1465,1438,1117,1115,1153,915,933,849,1532,1442,45,44,45,62,126,121,171,193,175,270,210,246,574,972,1028,1003,1168,1438,1584,1582,1663,1627,1770,1744,1759,1616,1547,1552,1619,1691,1689,1762,1779,1649,1640,1651,1600,1631,1579,1075,946,959,793,577,272,175,128,117,144,173,115,59,56,50,47,45,147,655,1021,1900,148,256,197,186,220,395,402,391,413,440,259,359,690,814,989,946,1095,1285,1585,1703,1793,1755,1774,1852,1810,1747,1664,1678,1691,1862,1821,1889,1864,1809,1793,1917,1851,1860,1891,1300,983,888,874,695,528,401,338,308,405,338,442,151,157,137,197,203,118,2019,1346,1314,1303,1205,1326,1401,1431,1311,1386,1325,1406,1465,1409,1392,1447,1496,1453,1460,1463,1538,1376,1376,1396,1412,1277,1117,1270,1396,1305,1361,1341,1389,1250,1388,1431,1325,1284,1396,1530,1458,1401,1516,1284,1383,1410,1441,1422,1433,1373,1310,1376,1289,1477,1343,1191,1247,1220,1340,976,1037,1446,1483,44,45,48,316,1048,1039,1035,1341,1497,1504,1341,1807,1796,1759,1688,1679,1228,952,1459,1705,1741,1853,1705,1826,1828,1764,1632,1661,1689,1801,1882,1843,1886,1848,1751,1874,1887,1885,1843,1912,1582,1590,1507,1715,1566,1314,1262,1355,1156,1152,1117,706,884,47,45,44,315,691,1091,777,703,1058,1243,1316,1361,970,597,989,928,1049,678,866,694,673,706,708,965,887,843,898,848,988,849,669,636,977,958,902,888,961,533,762,770,802,705,716,795,910,981,687,829,833,827,861,879,891,915,922,847,832,839,850,1060,796,1060,1744,1383,1510,1507,1651,1588,1442,1761,1494,1553,1455,1678,1606,1530,1610,1465,1419,1481,1674,1604,1514,1616,1363,1506,1703,1925,1439,1492,1289,1122,1243,1343,1377,1088,1112,1230,1043,1135,1231,1262,1244,1102,826,850,843,1777,1550,1380,1459,1380,1295,1394,1178,1210,1379,1349,1255,1114,926,892,635,976,1919,1507,1496,1507,1403,1297,1367,1166,1245,1329,1316,1220,887,839,709,757,1903,1470,1483,1414,1480,1334,1249,1359,1176,1300,1395,1313,1198,1044,917,872,641,1021,1897,1433,1512,1421,1478,1535,1501,1344,1172,907,821,754,902,859,825,1754,1473,1471,1419,1454,1322,1244,1320,1167,1316,1352,1301,1133,943,947,751,696,1671,1655,1479,1362,1131,1251,1461,1410,1331,943,996,1391,1742,1594,1564,1363,1258,1136,1492,1391,1229,1047,1276,1273,1330,937,1187,1728,1773,1781,1832,1685,1589,1392,1854,1910,1786,1750,1917,1800,1292,1280,1290,1346,1450,1476,1876,1313,1427,1289,1364,1460,1536,1353,909,948,1171,1808,974,857,940,1771,1324,1365,1675,1598,1529,1745,1730,1786,1201,1528,1724,1515,1642,1890,1863,1580,1251,1607,1687,1542,1761,1916,1909,1399,1332,1664,1688,1602,1815,1918,1934,1297,1378,1673,1717,1535,1733,1916,1919,1412,1406,1649,1683,1519,1714,1854,1919,1342,1367,1683,1571,1524,1764,1709,1844,1194,1559,1733,1523,1638,1761,1825,1411,1333,1667,1651,1509,1715,1775,1857,1233,1488,1732,1560,1605,1825,1840,1579,1627,1505,1590,1571,1567,1674,1689,1539,1539,1596,1433,1589,1595,1558,1563,1431,1486,1541,1392,1500,1475,1162,1088,1174,1343,1291,1155,1305,1661,1564,1271,1284,1410,1393,1408,1195,1490,997,1395,1844,44,45,48,49,45,97,415,669,745,854,947,972,976,1058,932,1162,1107,1270,1321,1175,1309,1333,1166,1190,1115,994,1213,1032,1214,1175,1042,910,934,790,665,721,628,315,47,45,44,45,50,1315,876,743,811,1133,1290,1278,1004,1015,1009,1083,743,731,763,975,988,1097,1165,1117,1185,1276,1258,1202,1359,1366,1336,1349,1278,1320,1206,926,797,555,546,553,793,891,801,806,882,1034,947,883,1010,1240,1039,993,1036,821,1093,1239,1081,1043,965,1091,837,1374,732,1095,1145,1628,1201,1255,1340,1466,1466,1476,1649,1756,1794,1831,1816,1805,1721,1725,1616,1685,1768,1607,1669,1621,1649,1565,1482,1649,1679,1591,1558,1576,1591,1549,1416,1172,1067,1401,1616,1517,1584,1571,1443,1348,1435,1441,2018,696,744,1055,1111,1159,1316,1401,1317,1267,1532,1439,1296,751,930,1168,1302,1434,1248,1208,1220,1117,1166,1197,1199,1299,1187,1328,1416,1239,1268,1364,1391,1336,1299,1231,1248,1215,948,979,1148,1137,1293,1176,1442,620,1411,858,973,1251,1745,1695,818,956,1067,1703,807,847,820,1053,1094,1014,982,1032,1227,1344,1579,1653,1649,1636,1490,1341,1448,1516,1692,1595,1702,1630,1633,1616,1565,1484,1512,1660,1822,1855,1844,1827,1740,1747,1454,1386,1328,1358,1342,1236,1017,626,1013,1136,1119,1139,836,1241,835,1048,1104,937,854,1126,1266,1461,754,609,561,712,608,624,594,852,825,1130,1063,810,1095,796,812,784,828,787,967,876,905,923,888,864,913,903,904,991,1028,969,791,636,658,764,750,738,922,885,755,903,785,839,793,1056,766,1442,1807,2048,1560,2057,433,92,176,195,77,94,351,657,731,823,947,952,957,1030,947,1153,1126,1292,1338,1186,1309,1303,1170,1205,1034,1068,1199,1023,1216,1119,988,902,887,651,673,741,493,126,81,190,182,92,425,1503,711,719,995,1142,1382,1025,952,1049,932,806,669,764,946,923,969,1088,1061,1067,1156,1197,1096,1358,1413,1386,1272,1226,1363,1161,924,731,509,536,541,790,907,782,817,923,1023,904,912,1035,1179,1046,1382,697,1028,1112,1323,810,1373,631,1046,1218,963,1062,924,965,994,1078,1155,1075,1979,1134,1217,1389,1345,1509,1431,1578,1684,1786,1824,1817,1803,1709,1750,1675,1616,1781,1631,1647,1576,1644,1606,1479,1620,1675,1666,1521,1586,1561,1591,1495,1304,1067,1211,1632,1547,1598,1566,1542,1341,1362,1444,1783,1202,681,1000,1093,1121,1280,1335,1382,1281,1464,1486,1331,947,822,1044,1281,1384,1264,1242,1281,1110,1189,1143,1222,1316,1219,1214,1391,1358,1241,1319,1367,1315,1331,1259,1247,1199,1087,975,1077,1158,1261,1183,1347,772,1006,1165,1185,780,1749,1314,864,635,731,651,961,703,1330,1755,809,877,788,1071,1100,984,1019,1032,1186,1338,1572,1656,1649,1639,1492,1342,1405,1508,1661,1606,1694,1634,1631,1620,1579,1470,1514,1646,1822,1853,1850,1832,1743,1751,1497,1417,1324,1352,1359,1242,1006,614,978,1159,1105,1201,806,1232,854,1004,1106,1238,773,566,967,708,1286,1188,2003,1895,1847,1705,1754,1719,1714,1742,1923,1890,2057,464,45,48,49,45,41,45,48,49,45,44,45,148,784,1053,1417,1404,1569,1569,1429,1514,1549,1592,1670,1708,1764,1747,1666,1721,1624,1671,1637,1623,1567,1599,1440,1317,1280,1125,1166,895,476,322,208,139,44,45,48,47,45,44,45,50,47,45,44,45,1359,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1368,1226,1202,1234,1242,1094,1131,1137,1220,1202,1275,1281,1165,1321,1269,1459,1701,1554,1535,1365,1367,1515,1573,1439,1381,1600,1610,1549,1497,1488,1537,1431,1375,1394,1466,1452,1489,1268,1213,1335,1266,1266,1187,1099,869,1043,1033,1134,1001,824,686,742,817,689,640,624,534,1880,1664,1153,1079,1140,1004,1199,1281,1349,1141,1226,1193,1277,1350,1266,1586,1529,1779,1786,1685,1752,1784,1603,1463,1553,1477,1381,1585,1618,1456,1465,1631,1574,1654,1483,1711,1532,1376,1279,1373,1236,1109,1128,1018,1001,1085,914,990,1037,1050,1042,900,859,686,596,434,434,376,1371,1364,660,691,673,665,669,653,681,689,686,625,677,678,1226,1583,1502,1550,1583,1678,1611,1553,1499,1403,1081,887,1272,1462,1447,1551,1523,1447,1502,1419,1326,1144,949,1151,1418,1515,1482,1456,1493,1391,1232,936,696,639,677,701,674,674,655,676,710,665,648,666,1176,1741,698,661,635,665,702,697,655,656,695,705,712,661,821,1401,1624,1595,1631,1715,1689,1566,1513,1434,1370,1318,1362,1274,1312,1346,1327,1302,1276,1281,1151,1664,1677,1627,1618,1661,1595,1538,1389,1097,991,737,757,672,669,677,623,690,687,655,644,640,692,660,808,2028,850,400,544,652,629,717,871,914,996,1118,1030,1137,1346,1503,1507,1577,1559,1559,1518,1468,1434,1470,1454,1442,1489,1485,1422,1416,1399,1259,1360,1394,1416,1598,1618,1560,1447,1319,1118,1156,1266,1230,1228,1279,1152,1126,1017,941,1020,1013,1002,967,900,877,693,610,394,1227,1292,326,490,520,675,741,826,887,913,1011,1031,1162,1239,1343,1514,1620,1667,1722,1656,1633,1487,1432,1373,1306,1304,1374,1426,1465,1403,1447,1492,1443,1453,1412,1461,1450,1556,1683,1648,1530,1350,1301,1214,1239,1211,1210,1219,1178,1078,1058,1061,1003,907,795,763,684,514,884,1761,303,490,629,641,672,780,905,920,1065,1078,1036,1355,1555,1500,1490,1583,1517,1463,1314,1296,1320,1356,1322,1442,1389,1412,1364,1258,1402,1369,1371,1296,1349,1338,1293,1356,1538,1547,1620,1423,1468,1401,1370,1215,1186,1229,1221,1152,1084,1019,983,935,886,777,648,494,402,1750,1743,1723,1796,1701,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2028,1976,2053,2012,2053,1990,2048,1960,2048,1971,2048,2004,1975,1876,2029,1997,1771,1883,1962,1997,1984,1969,1962,1962,1996,1939,1006,765,817,899,992,999,1127,1023,1070,847,783,964,1032,863,939,893,902,985,824,802,877,838,978,1087,884,687,881,1350,1283,1267,1373,1127,560,539,504,598,556,797,933,941,1052,958,708,996,726,943,998,1012,750,1060,817,514,539,686,734,708,1268,470,791,656,694,745,634,1134,903,1015,1039,740,745,540,542,543,696,747,808,823,662,694,884,973,1169,806,778,1011,999,999,1037,741,945,740,809,977,925,925,428,539,903,772,775,531,649,913,648,621,641,671,837,764,848,681,726,750,741,1638,1689,1707,1467,1435,1420,1355,1547,1671,1921,1742,1791,1462,1439,1421,1428,1556,1772,1966,1640,1635,1738,1636,1619,1688,1748,1799,1786,1751,1725,1655,1268,1185,1191,1455,1596,1614,1715,1769,1730,1776,1671,1752,1705,1739,1666,1752,1672,1759,1771,1658,1774,1799,1687,1740,1789,1764,1639,1574,1609,1411,1302,1311,1393,1531,1523,1612,1646,1561,1619,1616,1531,1576,1639,1615,1720,2034,1410,1405,1487,1546,1446,1480,1561,1477,1463,1532,1629,1568,1439,1642,1672,1648,1708,1778,1718,1672,1681,1570,1572,1508,1588,1605,1594,1568,1631,1641,1581,1555,1568,1650,1623,1641,1611,1612,1573,1566,1604,1642,1595,1566,1234,1250,1474,1508,1396,1393,1479,1555,1622,1613,1453,1399,1491,2051,1366,1230,1222,1257,1225,1259,1232,1245,1248,1282,1301,1403,1457,1291,1283,1293,1311,1310,1313,1271,1245,1289,1268,1253,1262,1258,1233,1254,1255,1252,1230,1188,1189,1248,1225,1246,1237,1237,1277,1245,1269,1246,1281,1300,1323,1575,1295,1276,1317,1335,1309,1291,1232,1255,1292,1274,1225,1820,1914,1727,1780,1787,1802,1810,1777,1774,1785,1784,1755,1724,1728,1710,1703,1670,1633,1624,1610,1654,1652,1594,1578,1713,1707,1701,1716,1762,1744,1803,1739,1766,1746,1735,1713,1589,1712,1682,1677,1661,1661,1671,1741,1711,1721,1730,1731,1745,1789,1797,1746,1744,1738,1756,1748,1752,1776,1509,1089,1624,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1680,654,603,582,643,598,591,596,629,632,612,623,1331,641,519,596,591,534,379,396,493,1693,1739,1383,1031,1125,1055,1303,1518,1475,1136,1357,1753,1223,1037,1440,396,428,449,474,515,467,511,434,355,261,279,280,402,1686,1898,1754,1704,1703,1775,1015,1176,1142,915,900,1121,1106,883,1181,593,1104,916,977,984,1369,629,1299,1077,1067,990,1046,921,1039,1248,954,897,842,1317,629,1172,1018,1308,1158,1027,1185,581,1131,1081,1158,927,915,1277,511,305,301,476,1307,1045,1254,791,1305,913,1807,933,1726,1307,1950,1462,1497,1558,1574,1598,1629,1631,1628,1685,1620,1654,1675,1590,1665,1639,1592,1620,1641,1740,1719,1685,1750,1749,1775,1696,1676,1772,1799,1813,1810,1854,1891,1893,1891,1906,1875,1761,1779,1827,1813,1810,1783,1791,1801,1752,1760,1572,1588,1624,1619,1566,1458,1493,1612,1560,1710,1666,2048,1411,1402,1501,1556,1496,1503,1558,1466,1470,1520,1629,1595,1396,1618,1681,1630,1696,1775,1737,1655,1710,1569,1595,1525,1561,1605,1600,1579,1609,1642,1590,1544,1548,1631,1608,1620,1587,1621,1563,1584,1612,1651,1619,1582,1273,1218,1477,1488,1418,1328,1490,1537,1608,1613,1431,1382,1475,1975,982,582,712,488,616,736,834,733,1000,958,1144,898,1186,1251,1295,1320,1336,1354,1379,1389,1406,1475,1358,1402,1456,1566,1443,1405,1474,1321,1028,980,911,1212,1260,1267,1265,1041,1114,959,936,994,882,919,1029,873,764,845,900,845,482,648,819,614,703,655,602,1408,1424,733,742,884,974,1053,1127,1039,1113,1161,1105,956,828,732,1009,1334,1309,1423,1443,1518,1475,1522,1343,1489,1548,1603,1543,1516,1610,1642,1703,1669,1564,1500,1542,1586,1480,1478,1469,1276,1312,1209,1084,930,1029,1074,1090,1061,1163,1218,1235,1102,995,833,734,813,771,1022,931,1652,2021,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2022,1906,1981,2048,2048,2056,1914,2009,2048,2057,2048,2048,1867,2023,2055,2051,2056,1939,1994,2048,2045,1995,1931,1993,1993,2003,1863,1979,1993,2007,1863,1975,2027,2005,1914,1982,1995,1943,1993,1870,2030,2042,1896,1922,1933,1878,1984,1858,1975,1863,1947,1907,1904,1946,1919,1959,1859,2011,1858,1974,1863,2016,1863,1933,1906,1925,1933,1899,1984,1829,2031,1870,1994,1890,1912,1937,1932,1939,1950,1940,1921,1962,1892,1987,1916,1983,1853,2030,1875,2028,1867,1979,1863,1968,1878,1958,1890,1931,1918,1945,1919,1922,1939,1913,1960,1873,1979,1895,2005,1865,2011,1889,1937,1915,1985,1921,2010,1849,1994,1935,1972,1881,2022,1979,1977,1888,1981,2008,1903,1943,1907,1908,1939,1963,1898,1979,1869,1942,1896,1941,1907,1903,1951,1992,1868,1981,1865,1993,1863,1933,1914,1980,1870,2029,1867,1955,1894,1908,1939,1825,2018,1875,1985,1870,2016,2048,2027,1900,1979,2048,1981,1976,2016,2048,1863,1978,2044,2014,1918,1929,1933,1986,1879,1978,1864,1975,1866,1952,1907,1948,1901,1938,1917,1878,1986,1834,1945,1896,1909,1946,1807,2031,1864,1926,1932,1932,1933,1923,1946,1912,1977,1924,1977,1891,1981,1882,2015,1875,2029,1870,1960,1903,1948,1914,1942,1905,1938,1915,1926,1933,1930,1939,1888,1980,1928,1979,1898,2009,1890,2005,1896,2006,1896,2005,1912,2006,1903,2009,2019,1916,1940,1919,1929,1933,1930,1933,1928,1946,1884,1978,1855,2028,1865,1975,1864,1931,1910,1921,1937,1874,1981,1969,1960,1940,1937,1953,1905,1946,1903,1951,1900,1946,1907,1939,1909,1939,1902,1941,1917,1937,1930,1960,1907,1947,1901,1940,1910,1941,1907,1941,1914,1930,1932,1934,1939,1886,1979,1855,2014,1864,1957,1914,1944,1907,1942,1907,1940,1907,1938,1906,1942,1916,1942,1906,1938,1906,1941,1906,1949,1896,1937,1917,1908,1957,1800,2030,1864,1950,1915,1943,1910,1982,1864,1938,1898,1914,1932,1938,1951,1834,2009,1850,1977,1870,1975,1863,1981,1865,1979,1871,2029,1865,1943,1914,1983,1953,1980,1984,1946,1847,2009,1852,1998,1864,1981,1867,1964,1881,1914,1933,1951,1915,1939,1906,1908,1903,1950,1898,1904,1946,1832,2009,1859,2029,1866,1978,1870,1939,1896,1941,1917,1919,1939,1901,1979,1857,2006,1865,1978,1879,1976,1865,1945,1895,1979,1865,2014,1964,1980,1860,2033,2048,2048,1864,1997,2048,2029,1906,1981,2057,2030,1919,1992,2043,1870,1976,2048,2055,1863,1977,1864,1978,1931,2009,1975,1957,1875,1980,1878,2023,1877,2030,1864,1994,1864,1941,1907,1983,1881,2030,2048,1882,2030,2048,1870,2030,2033,1863,1973,2048,1870,1998,2048,1879,1976,2048,1871,1978,2048,1877,2030,1865,2014,2048,1876,1979,2048,2055,1880,1975,2048,1946,1979,1950,1987,1944,1976,1903,1976,1939,1980,1942,1980,1932,1980,1854,1975,1865,1975,1865,1992,1865,1984,1870,1975,1879,1976,1860,2009,1940,1978,1928,1979,1922,1980,1855,2030,1876,2030,1876,2029,1870,2032,1911,2008,1931,1979,1921,1996,2050,2057,2048,1985,1970,1988,1985,1941,1986,2019,1988,1867,1984,2048,2057,2055,1865,1998,1966,1989,1973,1920,1899,1977,1812,2030,1862,1910,1933,1843,2009,1851,1936,1907,1949,1900,1952,1896,1951,1900,1951,1896,1953,1895,1936,1903,1942,1915,1894,1973,1815,2030,1880,2032,1878,2029,1866,1994,1863,1968,1883,1932,1919,1950,1915,1941,1917,1950,1909,1981,1867,1977,1865,1977,1875,2019,1866,1978,1864,1996,1863,1963,1884,1943,1896,1946,1896,1945,1902,1916,1944,1892,1984,1842,2030,1867,1954,1901,1947,1903,1948,1901,1944,1905,1936,1927,1933,1936,1920,1946,1906,1977,1894,1979,1893,2005,1902,2010,1857,2032,1880,2032,1875,2030,1880,2028,1867,1951,1898,1915,1934,1927,1957,1925,1963,1881,1974,1893,2008,1866,2030,1880,1979,1870,1967,1882,1943,1907,1938,1902,1941,1917,1928,1937,1897,1977,1901,1982,1968,1977,1940,1946,1913,1977,1931,1958,1924,1963,1918,1957,1828,2005,2048,1865,1977,2014,1946,1876,1980,1953,1987,1950,1963,1922,1946,1830,2008,1857,1950,1905,1884,1986,1829,1945,1898,1903,1946,1993,1998,1964,1873,1982,1986,1946,1917,1961,1979,1890,1934,1910,1905,1946,1956,1915,1987,1864,1952,1907,1895,1960,1926,1946,1920,1964,1912,1977,1903,1977,1974,1959,1909,1977,1940,1961,1847,2009,1964,1977,1884,1982,1959,1983,1850,2017,1862,1934,1905,1882,1982,1906,1983,1853,1976,1862,1935,1913,1920,1937,1899,1986,1828,1977,1868,2030,1992,1962,1998,1861,1971,1862,1939,1896,1986,1880,2028,2048,1861,1972,1879,2033,2048,2048,2040,1919,1954,1903,1983,2048,1862,1978,1989,1959,1932,1950,1993,1861,1972,2048,2035,1924,1993,2048,1862,1943,1906,1985,1850,1975,1864,1992,1862,1927,1916,1923,1937,1918,1950,1997,2048,2025,1902,1947,1896,1984,1880,2028,1872,2029,2011,1933,1932,1934,1929,1933,2005,2048,2009,1937,1952,1905,1939,1906,1981,1862,1972,1871,2050,1868,1995,1880,2029,1988,1963,1954,1917,1989,1854,2031,2048,1890,1975,1871,1971,1862,1936,1908,1962,1893,1977,1945,1980,1896,2010,1964,1977,1940,1946,1905,1962,1919,1963,1996,1867,1972,2048,1876,1962,1882,1975,2010,1946,1993,1862,1962,1867,1972,1871,1938,1896,1945,1910,1920,1937,1996,1868,1971,1871,1971,1862,1973,1862,1964,1872,1939,1898,1904,1946,1958,1907,1982,1949,1979,2052,1909,2009,2053,2019,1931,2001,2021,1933,2002,2048,1870,2030,2020,1933,2004,1866,1978,1865,1979,1994,1960,1996,2048,1864,1998,2048,1964,1978,2052,1945,1979,2052,1864,1989,2013,1940,1995,1873,1979,2027,1902,1950,1901,1951,1895,1933,1906,1895,1958,1825,2005,1867,1958,1896,1916,1938,1963,1897,1980,1889,2031,2008,1938,1949,1920,1964,1892,1918,1932,1995,1945,1980,2052,1867,2013,1862,1972,2032,1895,1979,2048,1862,1978,2048,1863,1981,2048,1872,1975,2037,1894,1980,1100,1132,1145,1149,971,976,1918,1688,1854,1784,1866,1590,1204,1319,1975,2048,2048,1047,34,34,34,34,34,34,34,187,893,969,1071,1103,1068,946,878,729,946,949,998,917,1060,888,981,1128,976,1069,1024,927,885,851,848,1002,1117,910,923,835,901,969,908,913,1010,870,751,871,1074,1206,958,951,1347,1284,1269,1226,1290,1267,1476,1294,1511,1394,1406,1008,882,1062,1024,906,971,1051,1011,901,1144,987,1137,1027,1041,1088,1094,1034,1076,1185,1191,1105,1245,1330,1280,1093,913,347,777,906,1118,1081,1073,985,522,1252,1545,1521,1317,1462,1314,1397,1333,1073,1145,1189,913,1779,1293,1349,1282,1206,1195,1222,1147,1234,1479,1447,1381,1295,1308,1227,1311,1470,1535,1656,1570,1577,1611,1535,1563,1596,1511,1530,1493,1460,1389,1374,1360,1595,2054,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1472,1357,1440,1380,1351,1389,1447,1465,1495,1659,1657,1520,1450,1425,1289,1554,1667,1723,1756,1645,1646,1516,1432,1571,1645,1645,1660,1649,1581,1550,1433,1591,1978,2055,2055,1991,2048,2009,2022,2048,2018,2021,2048,1994,2041,2048,2022,2048,2048,2038,2055,2048,2029,1958,1926,2048,2043,1915,1527,1587,1612,1561,1572,1587,785,239,206,230,214,272,695,242,213,222,219,219,1167,1238,1335,1246,1162,1123,1232,1168,1269,1191,1183,1196,1110,1111,458,159,1670,1329,1872,2049,2034,2048,1446,878,2048,2048,2048,2048,2048,2048,1447,881,2048,2048,2048,2048,2048,2048,2048,1449,875,2051,2048,2048,2048,2048,2048,1417,947,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1715,1157,1019,81,424,2017,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,2048,2048,2048,2048,2039,2048,2048,2048,2048,2057,2056,2048,2048,2048,2048,2047,1927,2048,2048,2048,2048,2048,2055,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2045,2048,2048,2048,2048,2032,2048,2048,2048,2048,2048,2033,2048,2048,2048,2013,2036,2048,2024,2048,2048,2032,2048,2025,1997,2048,2034,2057,2035,2048,2048,2034,2048,2048,2048,2054,2048,2056,2056,2048,1903,909,2054,2053,2048,1448,875,1947,2054,2048,1998,2048,2048,2048,2048,2048,2048,2056,2057,2048,2048,2048,2048,2048,2048,2035,2048,2053,2048,2048,2048,2049,2015,2048,2011,2048,2048,2057,2013,2048,1936,2048,2036,2048,2033,2048,2022,1990,2048,2033,2048,2032,2048,1912,2057,2035,2048,2035,2048,1933,2048,2051,2048,2052,2056,2001,2002,2048,2016,2048,2041,2036,2044,2048,2057,2048,2048,2048,2048,2055,2048,2032,2048,2023,2034,2048,2048,2048,2017,2048,2048,2048,2050,2048,2048,2048,2048,2048,2048,2056,2034,2037,2048,2048,2048,2048,2048,2016,2020,2007,2038,2041,2048,2043,2048,2024,1997,2048,2025,2048,2025,2057,1925,2048,2045,2048,2047,2048,1928,2048,2046,2048,2048,2048,1979,1990,2048,2028,2048,2016,2031,1952,2048,2030,2048,2033,2048,1910,2056,2044,2057,2044,2057,1916,1424,135,135,880,2048,1734,167,878,2045,1443,1140,1976,1980,2033,2013,2054,2014,258,874,2048,1377,936,2034,1726,136,880,2032,1338,131,137,427,284,874,2048,665,134,137,441,181,454,1014,899,864,905,976,927,869,805,924,891,898,805,1023,1120,908,941,1010,792,1082,1110,1092,966,1143,918,848,1179,1083,1097,1105,633,632,385,828,1238,955,1002,451,345,346,426,382,471,535,626,458,1488,1245,969,968,1296,1449,1575,1497,1339,1384,1275,1565,1428,1223,1108,1239,1493,1410,1583,1535,1366,1250,1184,1348,1418,1470,1544,1462,1137,1207,1456,1421,1562,1587,1310,1160,1186,1528,1425,1570,1537,1228,1118,1221,1506,1489,1553,1465,1296,1234,1393,1317,1377,648,557,548,697,600,633,603,939,953,865,715,807,926,833,753,818,934,824,665,460,754,576,892,816,721,827,678,884,518,710,610,445,732,740,713,741,759,664,600,610,598,631,519,518,672,450,422,577,564,648,1047,449,439,1500,1150,1302,1434,1585,1371,1211,1274,1149,1246,1061,1392,1247,1213,1447,1155,1149,1123,1089,1429,866,1556,985,877,906,1558,958,947,845,978,902,1214,859,1099,1014,1060,779,873,973,832,966,1039,927,984,1134,1073,968,1110,854,669,1070,963,1109,1109,701,977,1069,571,586,481,479,765,654,613,939,725,643,651,669,827,773,1083,930,1134,833,506,879,839,788,857,637,756,768,370,434,562,792,714,941,804,1109,616,869,818,813,906,880,836,900,864,877,843,840,962,710,846,844,903,793,969,657,823,1167,804,842,520,821,913,851,825,834,721,785,858,861,855,831,816,533,748,589,736,554,850,356,668,731,712,578,1024,402,1346,708,768,1594,1751,1819,1770,2014,1879,2048,2048,2055,1744,1369,1698,1785,2049,2043,1876,1806,2048,1879,1755,2050,2048,2048,1963,1829,1943,1923,1775,2029,2005,1800,1909,1301,1154,589,644,492,1831,2056,1938,1560,1392,1247,1146,1322,2014,1814,1240,1272,1105,1124,1684,1468,1383,1034,504,142,450,2032,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2036,1922,1371,2048,2048,2048,2048,2048,2048,2056,2057,597,116,2021,2031,2048,2057,1984,1340,1923,2002,2034,1983,2000,2048,2048,2048,2048,2028,1860,2048,2034,1931,2057,2015,2049,2048,2036,2051,2053,2033,1794,1463,1738,1888,2048,2048,2048,2048,2048,2048,2048,2048,1870,2049,1101,983,1193,1282,1245,1258,1659,1471,981,1486,1164,1331,1050,1106,1071,991,1159,1383,1715,1886,1909,1897,1903,1885,1510,1735,1700,1484,1771,1498,1154,973,1118,1192,1640,1168,1027,1038,1124,1239,1023,1045,1310,1190,1347,1046,1934,2042,2048,1980,2054,1971,2048,1987,2048,2033,1975,2043,2011,2048,2032,1985,2048,2033,1968,2036,2041,2048,2032,1979,2048,2048,1973,2048,2057,1970,2048,2048,1972,2048,2038,2012,2036,2048,1974,2043,1998,2048,2027,1980,2048,1964,2051,2048,2048,2057,1963,2048,2057,2048,2048,2048,2056,2048,2048,2015,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,1902,2048,2048,2048,2048,2048,2048,2048,2048,1899,2048,2048,2048,2048,2048,2048,2048,1894,2048,2048,2048,2048,2048,2048,1903,2048,2048,2048,2048,2048,2048,2019,1957,2048,2048,2057,2048,2048,2048,2048,1897,2048,2048,2048,2048,2048,2048,2048,2048,2048,1927,1444,1735,1221,1710,1427,1636,1737,1773,1706,1664,1442,1516,1613,1635,1689,1773,1721,1706,1419,2037,1763,1109,1638,1245,1415,1130,1106,1647,1668,1738,1682,1687,1634,1895,1936,2051,2048,1294,1149,1146,1258,1170,1122,1204,942,1277,1645,1425,1530,1319,1475,1349,1466,1525,1535,1778,1629,1643,1589,1495,1582,1676,1811,1931,1768,1756,1894,1807,1869,1705,1802,1816,1757,1218,1811,1875,1494,1027,1465,1586,1683,1188,1589,1654,1436,1500,1464,1855,1566,1666,1825,1390,548,837,1470,1193,1258,1330,1344,1858,1634,1466,1568,1536,1369,1409,1747,1731,1961,1955,1441,1718,1897,1781,1812,1790,1840,1810,1707,1786,1539,1807,1665,1845,1692,1424,1426,1421,1538,1492,1425,1186,1436,1534,1680,1655,1525,1594,1574,1124,1567,1665,1581,1525,1482,1534,1524,1516,1534,1520,1481,840,769,616,672,676,645,656,625,694,634,616,653,769,616,714,692,754,674,751,786,774,546,599,534,630,621,252,450,476,522,2019,2031,1827,1731,1737,1703,1672,1677,1678,1717,1700,1689,1695,1715,1685,1924,1974,1792,1737,1744,1624,1655,1724,1781,1701,1756,1241,1030,1023,1952,1793,1853,1664,1824,1630,1488,1484,1488,1479,1463,1481,1499,1493,993,618,552,612,653,547,559,608,606,560,628,579,638,504,464,267,507,563,380,343,521,522,355,490,279,1002,1963,1862,1657,1675,1656,1678,1675,1664,1688,1682,1693,1681,1787,1985,1606,1770,1730,1673,1744,1689,1697,816,753,780,1894,1827,1784,1567,1783,1771,1534,1525,1483,1521,1489,1484,1499,1507,1500,1486,1511,1495,1486,1502,1501,1504,1506,1507,1504,1472,1344,593,253,566,597,695,508,570,629,589,266,550,455,432,444,535,312,404,646,583,618,606,666,618,678,627,495,712,428,503,242,613,382,379,289,482,484,382,487,584,473,463,511,536,571,620,351,439,490,389,608,448,243,384,539,397,500,427,270,440,1064,1992,2019,2021,1997,2031,1877,1696,1697,1690,1720,1695,1704,1717,1714,1661,1692,1679,1664,1670,1686,1699,1725,1680,1706,1699,1704,1686,1677,1697,1688,1681,1687,1833,2048,2048,1960,1658,1707,1714,1723,1660,1719,1687,1683,1677,1584,1754,1734,1695,1677,1719,1690,1633,1758,1723,1674,1346,957,1101,1015,1410,1763,1626,1725,1668,1692,1323,1098,1015,1784,1836,1821,1852,1804,1459,1573,1484,1515,1530,1493,1458,1516,1500,1485,1494,519,589,405,462,411,421,531,377,663,649,547,560,526,579,526,208,303,128,319,495,660,497,530,447,508,362,543,446,155,335,1229,2036,2000,1762,1719,1714,1710,1686,1693,1689,1676,1686,1717,1731,1671,1685,1886,2048,1716,1654,1773,1714,1747,1669,1686,1791,1765,1695,1485,924,1333,1288,1639,1743,1776,1518,1552,1490,1496,1497,1481,1489,1494,1487,1462,1505,748,361,415,304,545,570,254,236,340,365,158,406,310,479,138,135,357,224,314,289,479,387,271,495,618,545,426,295,551,534,1637,1998,2056,1726,1699,1691,1687,1681,1694,1680,1663,1721,1688,1716,1724,1706,1960,2056,1800,1745,1786,1769,1746,1628,1884,1768,1756,1843,1848,1013,780,1110,1567,1566,1618,1667,1794,1569,1506,1492,1492,1504,1478,1249,448,348,341,380,495,150,397,476,413,389,254,476,286,252,299,483,1016,1960,1824,1696,1701,1670,1668,1700,1677,1731,1968,1807,1752,1637,1712,1750,1828,1802,900,1460,1244,1715,1646,1555,1526,1474,1492,1489,1480,1507,1506,1519,1523,418,570,579,618,510,556,605,544,622,445,595,642,693,521,584,547,587,514,611,474,452,410,584,425,373,325,570,841,1985,2027,1830,1708,1678,1673,1662,1697,1708,1690,1714,1676,1685,1653,1795,2048,1839,1761,1699,1690,1777,1767,1810,1749,1754,1437,852,813,1004,1244,1287,1177,1391,1405,1668,1580,1626,1576,1440,1503,1491,1503,1498,1481,1492,1482,1488,1514,1534,1469,1484,1501,1545,1250,446,379,400,311,253,451,453,348,245,540,479,472,422,356,362,395,503,366,416,304,121,198,417,225,247,115,108,347,396,305,346,246,433,180,408,367,364,339,296,438,372,495,164,371,366,334,406,387,295,432,418,1000,1988,1939,1964,2005,1810,1668,1655,1673,1678,1686,1692,1675,1669,1732,1690,1671,1674,1676,1662,1669,1667,1671,1694,1649,1667,1682,1696,1780,2048,2048,1694,1575,1638,1612,1657,1661,1804,1672,1700,1674,1691,1611,1632,1678,1728,1636,1725,1216,731,878,1373,1665,1557,1600,1352,1733,1841,1807,1838,1684,1558,1439,1492,1453,1484,1493,1505,1481,1501,1489,1489,1486,1492,1493,1467,1476,1374,493,594,565,639,543,578,380,507,275,324,493,265,431,449,613,439,366,378,576,541,684,627,584,299,557,486,505,587,669,596,651,541,204,91,566,639,647,528,631,612,589,629,625,554,607,583,552,584,609,474,1696,1994,1958,1986,1919,1695,1674,1694,1656,1680,1697,1685,1682,1701,1707,1711,1714,1721,1693,1716,1701,1698,1704,1684,1709,1730,1925,2048,2025,1732,1735,1700,1764,1796,1763,1736,1773,1817,1794,1786,1782,1763,1776,1697,1807,1793,1015,882,1025,921,1076,975,1185,1256,1270,1010,993,958,1354,1821,1711,1827,1848,1578,1676,1621,1496,1494,1513,1512,1490,1506,1503,1488,1492,1503,1512,1491,1494,1470,1486,1463,1478,1479,1501,1230,589,648,665,571,628,560,529,674,606,588,626,530,549,526,597,482,387,505,584,463,673,488,610,586,383,456,596,436,560,576,338,574,510,514,545,501,395,499,517,571,471,582,493,323,447,479,389,282,498,335,280,309,372,412,480,490,391,272,568,455,271,351,366,485,370,303,304,597,542,1018,2048,2048,2054,2056,2048,2048,1740,1718,1731,1732,1739,1729,1710,1719,1733,1719,1711,1703,1747,1717,1748,1749,1713,1728,1726,1732,1731,1718,1733,1739,1730,1734,1737,1745,1721,1736,1707,1742,2039,2048,2048,2048,1951,1733,1808,1851,1859,1850,1835,1777,1808,1757,1758,1813,1822,1782,1830,1800,1784,1769,1842,1802,1827,1858,1847,1827,1870,1832,1819,1859,1823,1761,1812,919,850,865,761,815,1332,1263,1570,1031,1247,1544,1364,1029,872,820,1260,1197,1543,1239,1792,1821,1782,1632,1676,1641,1593,1585,1597,1567,1553,1498,1480,1529,1527,1552,1530,1488,1531,1493,1510,1510,1519,1526,1537,1530,1465,1492,1518,1488,1532,1517,1499,1486,1491,1519,1489,1479,1475,1511,1509,607,665,593,510,597,470,393,657,762,614,629,634,682,701,548,620,633,675,706,662,696,581,672,741,703,584,677,648,619,679,517,165,510,599,640,678,438,676,700,659,488,425,607,458,550,541,499,243,326,196,520,567,254,123,186,679,201,599,540,588,632,565,572,594,580,524,656,594,594,597,565,525,467,576,471,504,503,722,576,566,516,575,500,547,579,313,573,380,534,600,575,564,489,703,597,599,1818,2031,2044,2005,1998,1948,1969,2052,1800,1701,1663,1646,1676,1713,1696,1703,1684,1722,1719,1704,1701,1680,1713,1695,1704,1684,1701,1683,1711,1720,1701,1687,1716,1673,1716,1710,1698,1686,1699,1713,1688,1710,1700,1687,1698,1677,1703,1683,1660,1649,2048,2048,2048,2048,1844,1729,1683,1778,1704,1740,1788,1699,1650,1687,1705,1710,1734,1776,1700,1779,1823,1719,1768,1699,1795,1714,1713,1762,1733,1766,1762,1725,1783,1658,1736,976,1047,951,1046,1102,1048,949,973,1046,828,620,700,687,735,850,880,949,931,879,923,981,874,837,745,830,748,943,712,749,593,295,831,695,734,1172,1662,754,1736,1725,1662,1732,1816,1845,1840,1686,1705,1592,1592,1607,1588,1486,1524,1524,1513,1481,1494,1525,1500,1492,1542,1528,1478,1486,1493,1506,1496,1512,1494,1521,1494,1512,1501,1494,1503,1513,1513,1524,1517,1522,1526,1527,1486,1488,1500,1517,1518,1490,1531,1520,1478,1509,1516,1511,1492,1508,1514,1532,1491,1519,912,679,678,713,664,809,655,668,527,670,750,781,680,684,718,398,540,698,663,753,708,653,755,647,667,421,489,725,677,587,529,762,717,701,714,673,501,697,577,679,666,612,657,601,491,363,624,637,350,725,566,668,714,554,621,477,638,744,650,621,555,658,631,656,549,652,543,639,428,549,490,634,639,695,655,693,627,635,621,680,725,745,681,790,655,675,769,741,716,616,729,696,740,696,661,731,607,678,648,577,550,248,647,594,559,642,603,590,542,517,717,386,587,380,646,554,713,617,525,736,703,637,632,614,660,607,641,430,755,464,525,630,768,559,632,689,491,451,471,365,559,676,650,681,673,591,1623,1986,1991,1963,1973,1966,1996,2022,1966,2022,1962,2026,2034,1911,1730,1724,1715,1714,1696,1683,1689,1715,1699,1684,1674,1673,1719,1722,1713,1690,1715,1701,1685,1685,1702,1676,1706,1679,1699,1733,1727,1685,1696,1688,1704,1724,1731,1746,1746,1722,1728,1746,1732,1698,1699,1689,1693,1697,1674,1689,1707,1700,1686,1701,1707,1723,1680,1671,1699,1757,1730,1729,1739,1727,1730,1827,2048,2048,2048,2048,2048,2048,1539,1615,1707,1763,1747,1727,1759,1710,1772,1804,1682,1711,1696,1675,1735,1724,1698,1800,1716,1660,1608,1713,1753,1738,1742,1791,1672,1725,1690,1705,1741,1750,1604,1765,1799,1782,1712,1720,1638,1694,1762,1746,1786,1514,1023,1033,990,978,1072,986,961,972,984,830,1201,1616,1378,1591,1632,1599,1575,1555,1625,1628,1542,1806,1400,1474,1600,1316,1273,1245,1599,1085,1403,1583,1652,1203,1399,1462,1211,1307,1246,1478,1491,1568,1477,1503,1683,1647,1612,1465,1329,1543,1513,1589,1607,1473,1412,1572,1601,1608,1432,1887,1806,1871,1905,1916,1882,1856,1790,1763,1868,1796,1858,1466,1484,1473,1495,1490,1496,1491,1478,1497,1494,967,537,415,539,504,353,536,494,411,368,321,552,447,542,430,516,553,218,418,322,429,375,391,338,429,241,285,492,169,393,362,518,1521,1946,2027,1739,1693,1706,1705,1705,1718,1687,1701,1692,1697,1669,1678,1671,1669,1672,2048,1993,1718,1754,1736,1762,1770,1728,1762,1775,1759,1720,1683,1443,806,823,1029,1556,1383,1376,1219,1595,1660,1742,1524,1451,1532,1497,1467,1457,1501,1502,1497,1485,1412,542,539,455,487,370,697,547,580,527,592,514,455,431,371,282,483,429,374,367,394,352,457,542,365,359,510,303,636,2022,2033,1796,1695,1692,1716,1734,1721,1734,1714,1690,1705,1692,1714,1679,1980,2031,1573,1788,1849,1853,1779,1808,1772,1832,1776,1769,1773,1283,666,957,1606,1621,1588,1394,1644,1717,1705,1542,1611,1542,1507,1478,1499,1472,1491,1492,1494,1487,1454,1487,1470,1497,1455,1466,1474,1502,1477,1473,1491,1461,1459,1474,1476,1501,1443,1480,1488,1488,1483,1479,1492,1504,1495,1482,1485,1514,587,666,573,658,706,678,669,553,602,552,604,712,579,592,583,641,570,616,540,578,672,620,577,593,590,650,569,579,620,583,444,497,485,682,612,529,561,532,482,570,526,582,562,668,558,379,327,199,413,441,254,513,414,379,487,563,677,546,228,161,361,248,166,205,461,383,539,463,476,545,643,506,532,571,630,594,499,509,419,489,634,526,491,577,433,257,588,456,493,460,287,211,468,591,652,521,557,384,485,641,618,487,523,682,614,591,539,457,628,1273,2004,2048,1977,1971,1983,1953,1948,1978,2044,1744,1716,1718,1713,1700,1709,1707,1704,1682,1695,1689,1702,1664,1717,1704,1715,1681,1686,1677,1706,1674,1634,1669,1648,1690,1679,1683,1691,1678,1677,1676,1663,1689,1685,1695,1670,1686,1667,1692,1680,1695,1687,1690,1657,1649,1667,1781,2048,2048,2048,2048,1843,1762,1678,1716,1716,1702,1678,1787,1755,1826,1736,1733,1685,1714,1693,1612,1709,1688,1696,1743,1724,1738,1720,1725,1779,1673,1696,1638,1694,1707,1779,1624,1618,1029,933,865,877,824,932,905,876,866,1021,1240,1076,947,1092,1091,1416,1189,1197,1097,1208,1367,1257,1243,1272,1556,1389,1491,1002,1218,1251,1109,773,699,979,608,349,662,1053,1056,1194,1009,1191,914,597,516,1017,1157,1551,1643,1842,1869,1846,1921,1947,1916,1928,1898,1627,1554,1480,1490,1505,1503,1486,1495,1452,1490,1489,1487,1512,1222,474,265,423,542,500,364,538,627,554,144,269,230,299,345,331,472,474,421,472,316,315,391,520,333,382,368,342,348,441,290,350,400,410,329,621,651,753,1979,1988,2033,1825,1708,1669,1678,1694,1692,1700,1705,1683,1669,1713,1705,1711,1682,1706,1704,1842,2048,1842,1719,1695,1702,1753,1816,1784,1724,1728,1792,1766,1737,1766,1364,704,853,1609,1708,1275,598,854,1141,1701,1833,1768,1568,1624,1501,1486,1508,1489,1516,1498,1308,571,607,593,584,426,562,535,400,432,504,411,369,297,351,388,489,468,251,434,572,167,330,640,620,1949,2016,1707,1704,1704,1696,1713,1686,1661,1686,1694,1700,1686,2042,1812,1781,1842,1748,1739,1715,1738,1770,1837,988,787,1151,1600,1522,1583,1392,1605,1676,1470,1469,1364,1470,1490,1478,1498,1457,1489,1473,1484,1494,1504,1476,1490,1494,814,495,463,586,602,467,562,480,457,679,526,516,560,650,392,318,468,536,325,409,537,414,444,491,281,231,394,698,613,659,584,592,457,636,511,277,577,366,574,545,527,381,541,470,1158,1983,2028,2001,1793,1686,1693,1720,1684,1669,1685,1668,1687,1731,1697,1654,1669,1732,1715,1713,1706,1733,1701,1731,2053,2048,1774,1712,1704,1735,1775,1666,1701,1684,1659,1715,1797,1787,1679,1765,1778,1393,918,851,956,1737,1539,1339,1563,1522,1460,1740,1853,1764,1624,1449,1435,1502,1514,1497,1464,1495,1481,1487,1475,1471,1483,1497,1483,1459,1493,1032,483,579,608,575,375,494,600,623,534,388,476,386,497,298,398,469,484,510,503,439,464,510,424,325,184,226,222,548,455,253,191,125,260,355,228,204,484,520,293,568,283,318,357,330,380,490,1286,1964,1866,1992,1939,1698,1675,1690,1682,1691,1679,1720,1706,1678,1649,1662,1669,1709,1689,1665,1652,1694,1663,1672,1667,1866,2048,2052,1764,1714,1709,1789,1697,1811,1690,1644,1689,1698,1734,1589,1687,1772,1739,1758,1308,745,875,832,1605,1272,1380,1435,1476,911,1327,1664,1737,1688,1682,1608,1605,1489,1535,1499,1509,1504,1511,1455,1485,1489,1474,1504,1522,1487,1488,1504,1496,1474,1447,1492,1501,1522,1523,611,589,624,368,394,494,545,550,578,447,524,507,556,407,132,605,562,502,460,367,322,195,269,176,563,537,573,556,532,495,455,443,392,394,597,534,573,441,433,513,264,335,346,140,165,467,558,620,552,379,374,440,435,335,358,254,185,464,396,383,446,413,461,264,485,357,546,473,584,442,850,2034,2039,1994,2004,2044,1989,1645,1646,1693,1709,1677,1718,1712,1696,1691,1670,1680,1699,1704,1713,1709,1692,1661,1670,1678,1701,1730,1686,1706,1704,1656,1675,1704,1714,1716,1734,1701,1888,2048,2048,2048,1652,1569,1774,1776,1746,1776,1739,1749,1702,1717,1766,1717,1742,1742,1680,1734,1735,1852,1720,1677,1700,1725,1762,1738,1846,1817,1036,808,763,787,553,891,1040,853,655,984,1015,966,797,648,359,680,175,942,1336,767,1119,1544,1700,1789,1753,1787,1705,1638,1665,1463,1497,1470,1478,1493,1492,1469,1458,1486,644,505,504,510,286,497,568,312,513,545,392,434,445,392,304,330,522,360,599,560,523,567,495,599,507,504,550,455,876,2008,2020,1860,1688,1697,1683,1651,1702,1702,1713,1713,1706,1692,1682,1706,2033,1926,1710,1713,1757,1839,1769,1825,1775,1749,1805,1327,884,839,951,1101,1127,1278,1659,1697,1614,1576,1602,1513,1515,1502,1484,1491,1490,1469,1493,1494,1478,1474,1475,1500,1500,1477,1485,1161,622,645,506,597,608,615,608,645,659,466,655,597,485,672,394,502,583,529,565,495,584,606,454,501,545,410,414,496,481,516,582,233,421,471,469,371,535,497,518,634,525,590,562,431,427,529,517,574,663,380,576,600,616,599,1043,2052,2041,2051,2014,1889,1707,1708,1721,1706,1713,1704,1698,1679,1703,1675,1716,1664,1741,1712,1701,1697,1699,1689,1669,1662,1709,1711,1715,1808,2048,2048,1844,1724,1793,1664,1737,1666,1761,1801,1799,1824,1817,1681,1743,1697,1826,1758,1733,1162,735,821,792,764,1537,1809,1336,1344,1751,1696,1550,994,1660,1849,1846,1750,1799,1629,1612,1446,1529,1470,1482,1495,1481,1481,1489,1470,1470,1511,1485,1453,1498,1493,1496,1535,1495,1505,1482,1493,1512,1040,386,153,248,310,434,532,469,398,500,478,655,522,281,486,387,462,294,350,534,582,448,371,303,92,578,170,315,493,513,601,594,524,374,585,506,264,372,523,359,584,622,497,591,394,182,192,366,449,358,464,512,588,550,578,641,515,546,525,389,318,458,445,249,284,366,407,462,305,471,605,1987,2044,2006,2013,2055,1881,1672,1697,1711,1688,1651,1679,1686,1642,1688,1692,1686,1681,1690,1705,1706,1675,1727,1704,1665,1690,1695,1701,1684,1706,1712,1690,1692,1706,1639,1720,2022,2048,2048,1865,1661,1744,1779,1681,1747,1606,1754,1756,1676,1745,1772,1799,1774,1819,1690,1743,1707,1610,1765,1690,1656,1512,1824,854,906,758,802,852,734,814,867,892,955,1085,1056,997,748,905,851,1144,1122,1043,1057,1106,1028,1039,1044,892,226,316,1260,1259,1661,1853,1820,1843,1818,1693,1511,1520,1533,1511,1489,1496,1486,1508,1503,1484,1518,1419,370,367,206,298,421,368,380,454,431,505,425,494,293,459,335,408,440,234,363,321,420,386,374,420,428,222,302,216,336,298,411,460,197,263,276,1123,1992,1964,1911,1682,1692,1715,1682,1685,1684,1668,1688,1668,1688,1695,1677,1667,1688,1678,1967,2048,1805,1716,1797,1701,1697,1741,1736,1730,1750,1781,1680,1681,1637,1243,809,943,1543,1562,1646,1890,1904,1738,1521,1563,1481,1505,1502,1499,1512,1509,1495,1495,1501,1492,1493,1513,1515,1516,1497,1481,1495,1498,1511,1500,1478,1499,1506,1474,1507,1517,1509,1467,1508,1517,1496,1467,1471,745,477,553,526,434,556,562,578,631,640,659,525,465,487,561,461,440,544,573,637,592,617,575,581,518,448,471,588,621,561,274,546,430,536,507,507,489,519,509,574,542,457,603,402,358,415,354,462,365,370,233,504,405,358,565,420,592,597,518,274,587,600,636,615,573,577,355,567,486,520,490,386,482,540,314,499,487,529,387,371,445,503,529,406,526,585,500,405,267,490,586,332,372,132,241,349,587,333,379,499,276,213,309,446,369,332,347,392,254,474,392,266,635,2049,2024,2056,1983,1982,2034,2002,2021,2055,1970,1735,1736,1762,1721,1700,1697,1704,1691,1696,1689,1670,1713,1693,1729,1704,1720,1729,1711,1704,1693,1682,1683,1706,1739,1722,1690,1677,1661,1667,1695,1714,1678,1649,1672,1685,1689,1686,1719,1712,1741,1754,1744,1744,1681,1699,1721,1695,1682,1650,1682,1771,2048,2048,2048,2048,2048,1804,1735,1785,1765,1684,1743,1651,1714,1633,1636,1762,1717,1721,1786,1719,1697,1714,1731,1697,1667,1653,1591,1619,1780,1723,1638,1694,1670,1606,1701,1696,1759,1787,1662,1764,1702,1588,1629,1416,797,853,791,847,822,736,802,735,1113,993,1074,1065,904,657,740,885,1022,848,819,716,961,857,717,634,744,810,923,781,852,1074,1080,1299,1058,1172,1155,1119,1509,1520,1930,1799,1811,1882,1842,1827,1882,1837,1630,1613,1554,1534,1541,1518,1499,1529,1520,1505,1500,1490,1522,1505,1510,1463,1503,1021,566,738,622,507,607,570,640,472,475,477,519,603,781,533,779,674,664,662,506,793,668,447,714,646,511,497,655,576,720,659,464,530,527,308,306,352,608,604,613,676,547,589,520,524,575,706,2055,2055,2033,2050,1714,1732,1741,1737,1721,1724,1730,1739,1708,1737,1750,1728,1706,1716,1719,1691,1695,1732,1735,1727,1716,2056,2048,2019,1763,1845,1870,1853,1837,1876,1818,1873,1849,1858,1830,1817,1770,1804,1727,1821,1816,1813,1769,972,1010,904,901,1296,1307,1145,1240,915,1159,920,1064,1036,1481,1323,1538,1675,1714,1622,1621,1529,1520,1494,1491,1501,1473,1473,1471,1492,1529,1526,1472,1465,1475,1501,1471,1477,1466,1466,1479,1459,1469,1498,1466,1463,1492,1434,575,505,597,497,477,497,506,501,525,406,435,415,285,374,223,550,311,586,406,433,350,430,457,556,515,494,487,534,536,455,405,402,482,200,357,359,401,572,430,265,484,537,495,498,434,358,350,367,561,512,353,392,331,410,485,521,394,447,493,436,492,484,639,666,668,652,534,389,284,338,303,315,505,314,284,231,467,434,461,416,556,480,1916,1931,1906,1992,1984,1949,2021,1696,1703,1689,1675,1673,1712,1663,1650,1670,1672,1682,1698,1693,1678,1657,1691,1668,1664,1715,1728,1686,1713,1628,1666,1682,1683,1688,1655,1690,1660,1627,1642,1660,1648,1685,1779,2048,2048,2048,1908,1749,1788,1774,1776,1740,1673,1710,1704,1724,1638,1635,1692,1720,1790,1721,1750,1615,1692,1631,1600,1660,1680,1626,1624,1669,1527,843,893,614,869,849,768,1064,1299,1323,1173,1002,863,1047,1175,1281,1056,933,899,975,1215,1242,829,1263,748,437,1369,1756,1736,1714,1802,1861,1808,1603,1638,1594,1631,1497,1506,1521,1515,1520,1516,1517,1526,1499,1514,1508,1511,1512,1519,1497,1518,1525,1512,1498,1507,1511,1517,1523,1503,1510,1528,1503,1493,1548,1529,1518,1555,1517,1518,1524,1502,1503,1500,1502,1502,1489,1485,1466,1482,1498,1485,1501,1265,538,480,555,425,528,584,477,375,631,657,671,709,720,657,722,684,639,654,635,723,713,566,650,580,426,476,593,590,497,720,651,612,721,611,619,573,648,484,626,526,544,683,577,542,639,502,532,564,521,616,583,651,515,587,564,563,534,519,542,529,671,447,450,619,426,564,635,526,652,575,622,592,566,584,447,630,671,540,525,505,609,432,589,540,531,653,573,407,497,661,578,598,691,590,703,738,682,628,631,712,723,706,588,559,681,674,652,597,515,465,642,637,546,634,611,544,604,608,618,610,551,593,505,357,512,520,583,518,558,570,464,596,420,477,618,594,533,374,442,586,562,475,526,485,310,492,514,552,507,473,347,342,1578,2057,2057,2034,2038,2038,2050,2042,2048,2057,2048,2021,2055,1959,1718,1719,1682,1702,1701,1733,1700,1678,1719,1690,1713,1700,1701,1704,1704,1707,1731,1735,1708,1721,1725,1733,1745,1744,1761,1763,1757,1758,1733,1715,1694,1710,1698,1681,1681,1671,1706,1741,1684,1684,1704,1711,1698,1714,1715,1751,1751,1762,1738,1747,1705,1721,1718,1740,1722,1741,1735,1762,1735,1727,1745,1755,1755,1741,1723,1759,2048,2048,2048,2048,2048,2048,2048,1970,1698,1663,1739,1741,1694,1670,1728,1785,1702,1780,1798,1761,1844,1790,1826,1819,1791,1799,1793,1755,1774,1794,1604,1574,1699,1727,1681,1625,1616,1807,1685,1720,1710,1695,1721,1837,1820,1811,1816,1827,1828,1689,1711,1586,1631,1789,1817,1797,1789,1848,1859,1814,1782,1069,945,913,940,954,915,784,981,1000,986,1307,1354,1326,1221,1290,1334,1255,1408,1359,1314,1185,1251,754,761,867,916,961,1047,1173,424,532,1365,1430,1706,1935,1750,1751,1890,1911,1846,1835,1842,1802,1853,1908,1560,1548,1574,1525,1506,1541,1530,1515,1504,1465,400,479,334,326,518,518,521,416,400,363,399,273,369,168,428,307,196,229,208,401,405,383,378,414,1355,2033,2019,1731,1703,1718,1682,1690,1689,1695,1694,1692,1690,1705,1794,2048,1905,1796,1813,1699,1797,1791,1829,1767,1755,1608,802,1396,1610,1603,1486,1592,1523,1436,1210,1516,1427,430,405,483,539,576,486,935,1829,1687,1682,1904,1723,1797,948,764,1463,1579,1503,1501,1498,1165,302,475,362,448,304,92,387,474,446,147,318,585,535,1352,1869,1679,1666,1688,1669,1675,1765,1904,1770,1684,1693,1693,1156,1373,1801,1720,1562,1446,1508,1465,1516,1506,531,436,369,372,467,384,387,308,502,452,442,376,456,593,480,538,449,1996,1818,1683,1680,1663,1659,1671,1697,1788,1923,1712,1674,1687,1770,1339,642,1283,1368,1004,1450,1634,1970,2051,2054,2035,2055,1709,1594,1548,1441,1292,1514,1557,1152,861,916,1422,2001,2033,1927,1921,1794,767,1196,1442,1183,1429,1455,1402,1339,1223,1076,663,1004,1120,1170,1005,804,935,925,856,884,1025,1173,1077,1064,887,1170,888,1099,1074,1111,1108,1085,1049,939,992,1075,1138,1002,1181,714,627,828,837,1311,1086,818,986,955,921,889,880,728,1277,1128,884,1051,982,799,939,984,780,1032,1092,475,1524,2048,1228,1099,1044,937,969,985,1137,998,1001,912,1013,1153,914,1084,1014,888,1015,877,858,719,797,856,1148,1265,1416,1556,1352,1589,1992,2048,2048,1886,1409,2028,2057,2048,2048,1998,1816,2054,1657,1946,2055,2048,2048,2048,2048,2048,2048,2054,2030,2042,2034,2032,2034,2003,1956,1803,1677,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1992,1927,1824,1777,1335,1769,1929,1900,1765,1934,2048,2053,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,1498,1075,2040,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2024,1580,2055,2048,2048,2055,1874,1554,1385,1177,990,709,440,2004,2057,2048,2048,2055,2057,2048,2053,2048,2048,1846,1454,767,2048,2052,2021,1968,1843,1701,1514,1148,886,564,276,345,1929,2048,2048,2049,2050,2048,2048,2048,2048,2056,2048,2048,2042,1976,1816,1624,1494,1322,2052,2057,2048,2048,2056,2048,2057,2057,2048,2048,2056,2035,2022,1921,1698,1446,1024,1203,1804,1888,2021,2048,2055,2053,1930,1683,1267,988,2048,2046,2048,1821,2030,2048,2057,1771,530,74,198,33,820,2048,2048,2057,2048,2056,2048,2050,2044,1903,2048,1841,1834,2048,2048,2048,2048,2048,2048,2057,2048,2057,1924,1525,1978,2008,1582,1602,1801,1595,870,966,1717,1965,2044,2048,2048,2048,2054,2017,1774,1118,93,1750,2048,2048,2057,2053,2057,2056,2048,2057,2052,2057,1945,1836,1916,1855,1579,2048,2048,2048,2057,2048,2048,2048,2048,1902,2057,2048,2055,2048,2048,2048,2048,2048,1623,2038,1967,1971,1391,1593,2048,2056,1981,1705,1937,2048,2048,2048,2048,2057,2048,2048,2048,2048,1634,1267,1845,1969,2001,2016,2054,2047,2025,2043,2043,2057,2054,2043,2021,2014,1987,1983,2002,2052,2049,2047,2054,2026,2037,2032,2048,2050,2032,2045,2006,1875,1734,1538,1365,1264,1192,1161,1163,1041,1066,1115,992,1036,844,876,926,683,633,447,436,193,182,88,63,588,2050,2021,2054,2057,2005,1822,1741,1504,1005,1287,2048,2048,2048,2048,1892,2048,2048,2048,1963,2048,2048,2048,2014,2057,2048,2057,2048,2042,2044,2057,2056,2048,2027,2053,2005,1938,1861,1776,1762,1771,1569,2049,2056,2048,2056,2053,2055,2048,1744,2048,2056,2057,2056,2054,2048,2055,2015,1958,2048,2023,1909,1430,2056,2048,1978,1408,2008,2057,2048,2048,2048,2048,2057,2048,2048,2018,1782,1759,1483,1385,1262,1135,1828,2048,2048,2048,2053,2008,1847,1577,730,480,1141,1585,1784,1927,1940,1956,1947,2008,1865,1668,1461,1302,947,531,637,1864,2046,1992,1238,850,2057,2048,2048,2048,2048,2048,2048,2048,2015,1965,2052,1993,1746,1369,810,2008,2054,1683,1347,1955,2048,2048,2054,2048,2053,2048,2055,2055,1951,1669,1844,2048,1414,634,1899,2048,2048,2048,2048,2048,2057,2018,1757,2015,2048,2057,2048,2048,2048,2048,1651,1037,1595,1953,2032,2056,2048,1949,1164,1877,1799,2055,2048,2048,2048,2035,2009,1672,1252,864,753,397,339,188,573,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2016,1228,2057,2051,2055,2045,2057,2054,1914,1951,2057,1554,1969,1286,647,1331,1697,1961,2055,2048,2048,2048,2048,2048,2048,2048,2048,2041,1859,1642,1483,1351,1148,1083,1010,886,715,836,990,834,902,1639,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1840,1242,706,703,1779,2048,2048,2048,2007,1579,2057,2057,2055,2051,2048,2048,2056,1983,1485,1468,1649,1308,1266,2057,1883,1159,526,1831,1911,2025,2055,2052,2054,2050,2046,2002,1543,1770,1856,1935,1975,2056,2057,2048,2048,2048,2048,2048,2056,1996,1753,1496,807,757,1607,2057,2048,2048,2048,2048,2048,2048,2056,2054,2001,1734,1439,1057,973,190,468,2048,2050,1961,1931,1788,1696,1769,2048,2018,1779,1612,1255,1753,1763,2040,2048,1933,2039,1037,2048,1665,1853,1914,2048,1648,1914,1372,1461,1118,1687,2008,2024,1995,2017,2006,1979,1914,2048,2055,2055,1688,956,1325,1967,2048,2048,2048,1855,1822,1246,882,1022,2048,2048,2056,2057,1531,360,1807,2057,2045,2048,2056,2056,2057,1995,2055,2048,1482,2039,2048,1748,2048,2048,1617,2020,2048,1461,1268,1917,1558,703,2045,2048,2057,2057,1380,122,124,1315,2039,2048,2048,2057,2057,2048,2048,1749,1864,1827,1534,857,172,1041,1972,2048,1970,2048,2043,2044,2048,2032,2048,1837,2010,1639,1982,1407,1921,1239,1588,1645,1696,1302,1319,1734,2042,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2053,2051,1982,1930,1806,2004,1626,1976,2051,1906,1467,1749,1795,2048,2048,2056,2048,2048,2048,2048,2048,2056,2050,1996,1773,1574,1384,1191,911,1386,2048,2048,2048,2048,2057,1486,777,2048,2048,1967,1982,2037,1973,2008,2018,2019,2056,2057,2048,2046,2021,1711,1461,2021,2048,2056,1979,1901,2025,2056,2048,2048,2048,2048,2048,2047,1952,1767,1410,703,1254,2048,2048,2048,2048,2048,1950,2048,2048,2048,2048,1980,1241,2054,2048,2048,2048,2048,2056,2048,2048,1856,1345,1957,2048,2048,2048,2048,2017,1913,2048,1178,486,454,1281,1889,2056,2048,2048,2048,2048,2048,2048,2048,2048,2056,2024,1971,1793,1788,1741,1587,1435,1252,1213,1244,1081,804,563,556,517,481,442,456,375,466,430,465,539,545,258,322,766,1206,1201,1231,1176,1076,939,885,733,526,306,147,583,1880,2053,1759,1734,1902,1956,2048,2050,2018,1997,2048,2050,2054,2048,1865,1532,1905,2029,1663,1454,1986,1817,2018,2048,2004,2024,1875,2045,2048,2037,1843,2027,2057,2034,1977,1986,1981,1750,1417,1548,2033,2020,2031,2053,2048,2008,1721,1836,1943,2048,2042,2053,2027,2048,1933,1951,1912,1755,1838,1932,1979,1855,2010,1824,2024,1943,2048,2048,2048,2051,2008,1583,1352,1761,1215,932,1326,2047,2048,2048,1991,1945,1826,1797,1879,1759,1983,1874,1896,1964,1945,1933,2046,1928,1783,1995,1502,1492,1926,2013,2009,1894,1836,1884,1859,1768,1726,1515,1852,1780,1437,1492,1318,887,1187,2005,1967,1853,1836,1740,1625,1721,1674,1354,1434,1280,1467,1267,1271,1187,1034,1335,1112,1105,1286,1405,1193,1483,1521,1840,1804,1702,1966,1989,2053,1979,2010,1827,1732,1574,1410,869,1470,1788,2027,2054,2048,2052,1154,153,1304,2057,2048,2034,1439,2052,1056,2048,2048,1490,1654,2056,2048,2048,2048,1529,2057,1945,1498,1387,2048,2048,2048,2048,2048,2056,1956,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2016,2057,2048,2057,2048,2048,1960,1948,2025,2057,2048,2052,2054,2056,2048,2048,2048,2048,2055,1646,1426,2057,2048,2057,2048,2053,2040,2048,1900,1926,1780,1563,1608,1437,1759,1800,1568,1446,1334,1088,852,269,1787,1832,1896,2050,2048,2043,1965,1526,1210,2048,2057,1752,2055,2048,2048,2027,1529,1939,2056,1913,1592,1457,1841,1857,1143,796,683,1430,1412,1446,1415,1196,1395,607,721,844,431,275,462,533,325,940,872,361,409,487,479,766,474,535,649,353,292,650,695,648,737,671,1132,799,544,967,798,503,918,622,585,645,406,510,625,361,639,414,349,715,577,753,540,1181,834,1189,996,997,684,553,587,438,582,607,758,377,177,450,461,675,466,324,545,663,338,1058,1368,357,350,393,313,528,608,673,538,443,597,651,576,355,497,396,1084,1119,1043,870,306,573,355,418,450,452,260,521,200,444,558,203,249,262,557,654,296,448,517,249,755,831,531,216,385,326,495,286,224,412,521,974,539,476,443,671,507,477,426,395,672,325,331,595,504,926,839,600,271,320,281,258,521,325,344,252,158,504,565,741,622,1082,1340,1045,1037,675,651,270,469,579,844,1333,1023,516,882,574,628,555,626,568,764,750,561,648,656,568,694,840,741,1191,1186,1379,810,665,587,581,1004,1251,1202,1198,1200,1205,873,415,449,1135,1166,874,514,552,1366,359,313,342,195,339,258,210,139,230,377,446,140,133,132,391,545,619,314,595,635,440,932,401,660,162,440,499,326,273,434,714,468,595,492,307,281,320,330,412,204,277,186,225,335,145,504,277,299,172,282,186,210,522,460,542,286,701,1157,258,480,392,519,607,617,323,560,909,1029,1007,449,552,343,383,409,328,442,443,304,242,282,166,168,813,903,783,738,768,418,633,416,302,417,428,561,322,159,415,251,168,406,360,420,449,156,193,283,191,178,262,189,354,475,277,239,504,328,334,544,303,368,490,750,852,1298,824,503,471,716,473,434,598,369,450,934,1049,694,309,1224,1004,1101,1095,494,599,304,752,615,646,557,302,285,318,356,343,1075,961,416,406,434,547,387,426,468,859,764,691,858,355,396,757,848,488,838,892,890,836,800,876,1534,1886,1366,988,996,990,1702,1886,1886,989,988,990,1549,1263,1173,1089,1267,522,894,555,1160,409,442,908,831,699,681,846,724,742,708,616,593,673,636,986,319,118,175,456,472,176,122,274,470,327,469,469,723,1072,730,311,488,563,491,390,565,505,466,298,294,665,950,1190,1668,515,507,737,449,357,360,469,648,400,425,407,541,391,444,293,418,325,356,259,300,212,525,341,330,164,181,291,495,299,287,396,169,585,236,423,120,567,579,672,280,147,273,453,378,436,416,321,659,650,593,245,568,779,220,637,1003,628,314,62,158,743,677,366,613,783,517,543,348,611,604,471,457,437,469,532,295,472,676,473,595,757,830,483,683,697,337,503,486,483,785,914,703,758,521,589,612,550,746,607,826,305,724,491,931,269,309,583,198,376,176,178,231,398,111,443,460,126,258,217,157,326,127,134,711,541,467,439,399,470,212,260,360,374,301,360,929,322,459,353,461,365,660,951,862,1071,774,754,721,197,778,1024,382,877,1208,334,811,770,1195,1182,496,300,526,320,1110,1413,1071,1288,1349,1462,1459,1431,1527,1548,1491,1538,1523,1454,1501,1511,1574,1507,1541,1483,1481,1591,1427,1384,1314,1247,1220,1331,1384,1272,1198,1144,1074,1102,1635,1522,1777,1749,1747,1754,1680,1703,1704,1742,1679,1734,1732,1704,1754,1740,1761,1739,1736,1540,1671,1653,1663,1713,1680,1701,1735,1726,1682,1644,1664,1677,1615,1554,1662,1696,1799,1588,1689,1662,1623,1670,1747,1729,1742,1809,1868,1798,1806,1813,1758,1701,1734,1761,1758,1872,1828,1674,1681,1808,1757,1713,1796,1809,1760,1677,1705,1648,1508,1884,1594,1657,1595,1593,1614,1612,1682,1700,1696,1659,1719,1725,1688,1734,1728,1692,1679,1769,1712,1693,1699,1655,1657,1684,1647,1641,1610,1608,1587,1554,1497,1507,1856,1623,1569,1554,1382,1401,1559,1469,1507,1226,1231,1450,1471,1302,1350,1419,1382,1294,1423,1604,1527,1556,1528,1390,1421,1503,1396,1356,1550,1573,1425,1527,1616,1458,1828,1448,1447,1393,1419,1550,1412,1531,1437,1563,1398,1337,1224,1319,218,207,384,217,240,706,1138,1437,1206,905,1271,1291,1050,1495,1638,1120,1374,1676,1268,953,1385,1187,1647,1197,1646,1426,1654,1629,1688,1514,1272,1597,1330,1756,1255,1477,1790,1208,1720,1588,1335,1476,1294,1442,1471,1582,1747,1262,1170,1685,1701,1310,1697,1284,1400,1459,1615,1643,1401,1431,1586,1392,1770,1337,1597,1504,1299,1500,1529,1371,1445,1367,1607,1496,1707,1432,1584,1684,1030,1544,1465,1644,1028,1494,1598,1671,1401,1553,1485,1278,1682,1529,1233,1315,1505,1481,1196,1490,1511,1257,1406,1304,1684,1573,1697,1653,1323,1232,1415,1505,1319,1857,1277,1633,1412,1717,1235,1816,1536,1425,1854,1708,1813,1428,1623,1628,1237,1925,1407,1547,1613,1726,1729,1838,1420,1682,1759,1741,1534,1712,1761,1265,1677,1309,1592,1582,1765,1446,1181,1557,1656,1753,1754,1290,1827,1619,1373,1632,1492,2009,2054,2014,2018,2042,2048,2001,2044,2035,2026,2007,2035,2021,2027,2025,2051,2044,2039,2048,2004,2023,2004,2018,2015,2044,2051,2051,2042,2040,2049,2018,2022,2012,2048,2049,2029,2051,2056,2055,2011,2039,1849,1987,2024,2035,2044,2038,2026,2028,2046,2021,2000,1975,1983,1969,2012,1987,2034,2029,2026,2051,2030,1995,1959,2011,2016,1991,2001,2033,2013,2023,2053,2032,1992,1953,2008,2008,1983,2018,2040,2047,2049,2037,2022,1964,1994,2023,2025,2030,2036,2041,2053,2033,2041,2044,2037,2049,2053,2038,2038,2046,1980,1973,1984,2004,1973,1937,1999,1992,1986,1951,1962,1960,1964,1996,1998,1939,1956,1986,1990,1968,1948,2003,1997,1970,1990,1956,1991,1976,1985,1994,1955,1987,1975,1976,1992,1953,1998,1978,2005,1976,2001,1975,1972,1999,1979,1987,1947,1959,1992,1993,1975,2007,1954,1993,1969,1999,1953,1973,2007,1990,2002,1994,2006,2009,2000,1978,1986,1994,1981,1943,1856,1796,1814,1820,1763,1896,1943,1814,1713,1905,1754,1855,1682,1800,1840,1928,1939,1918,1808,1762,1923,1816,1852,1760,1658,1666,1697,1625,1765,1935,1914,1780,1785,2015,2056,2027,2030,1893,1944,1814,1913,1845,1898,1900,1703,1749,1687,1875,1871,1904,1805,1794,1821,1787,1728,1715,1900,1839,1851,1842,1830,1735,1819,1623,1886,1779,1893,1822,1892,1727,1958,1722,1807,1557,1805,1864,1840,1728,1974,1779,1903,1821,1673,1755,1709,1863,1860,1864,1755,1900,1731,1866,1548,1814,1639,1964,1907,1958,1930,1816,1927,1863,1861,1702,1955,1884,2000,1950,1949,2004,1898,1674,1966,1757,1884,1662,1810,1853,1810,1963,1816,1852,1924,1832,1839,1812,1912,1813,1860,1791,1938,1863,1728,1937,1759,1882,1745,1773,1885,1820,1757,1704,1813,1849,1716,1906,1908,1874,1917,1912,1946,1949,1935,1955,1902,1977,1904,1959,1917,1946,1949,1904,1920,1921,1999,1909,1448,1389,1416,1419,1438,1468,1587,1414,1604,1538,1522,1556,1728,1693,1520,1701,1822,1975,1970,1853,1978,1668,1888,1829,1707,1964,1933,1988,1793,2050,1754,1926,1726,1826,1898,1837,1989,1974,1833,2014,1682,1925,1813,1670,1965,1892,1989,1768,1955,1815,1765,1799,1788,1642,1943,1902,1971,1825,2028,1832,1844,1831,1826,1729,1936,1923,1920,1819,2022,1788,1923,1773,1838,1915,1936,1978,1965,1881,1987,1698,1909,1869,1779,1986,1940,1942,1957,1896,1966,1961,1940,1866,1926,1919,1674,1688,1946,2013,1959,1952,2003,2017,2007,2028,2004,2011,1986,1999,1996,1949,1981,1982,1968,1992,1994,2013,1992,1955,1995,1972,2018,1989,1991,2004,2031,2033,1984,2000,2006,2035,2021,2013,2012,2026,1980,2003,2011,2023,2024,2030,2006,2022,2006,1982,2023,2030,2020,2001,2002,1988,2014,1982,2000,2002,2019,2010,2009,2001,2004,1999,2038,2049,2003,1982,1869,1742,1783,1720,1716,1695,1647,1778,1666,1588,1644,1771,1695,1680,1768,1735,1616,1739,1753,1601,1579,1846,1586,1678,1751,1805,1708,1668,1788,1842,1726,1682,1755,1747,1778,1705,1777,1714,1970,1941,1963,2008,1992,1943,1914,1942,1949,1993,1977,1975,2012,1979,1962,1994,1992,1985,1966,1982,1958,2009,1991,1993,1984,1959,2006,1942,1968,1996,1980,2008,1996,1964,1976,1965,1986,1955,1960,1951,1912,1907,1871,1934,1885,1821,1885,1834,1832,1908,1861,1899,1847,1885,1919,1860,1869,1920,1923,1991,1965,2002,1928,1949,1911,1904,1918,1925,1938,1966,1890,1934,1951,1949,1961,1962,1890,1979,1740,1933,1876,2050,2051,2028,1998,2021,2018,2023,2012,2038,2016,2045,2030,2027,2028,2021,1974,1966,1963,2026,2050,2055,2052,2015,2044,2024,2001,2010,2029,2033,2052,2023,2055,2056,2051,2028,1987,1956,2017,2022,2008,2019,2043,2048,1979,1991,2023,1983,1959,1981,2016,2043,2026,2014,2012,1986,2017,2000,1998,1970,1994,2010,2029,2033,2027,2005,1999,2020,1987,1984,1995,1976,1993,2040,2040,2031,2044,2030,2039,1992,2016,2007,1990,1993,2025,2026,2053,2045,2044,2025,2036,2027,2051,2052,2042,2048,2046,1999,1976,2015,2008,1987,1966,1971,2027,1994,1995,1992,1946,1981,1948,1955,1958,1988,1964,1994,1998,1955,1950,1894,1926,1952,1982,1968,2019,2003,2007,1969,1995,1926,1964,1858,1960,1939,1987,1786,1909,2037,2029,2017,2036,2026,1979,1746,1980,1988,1970,1865,1901,1915,1978,1968,1902,1924,1932,1979,1948,1918,1839,1929,1990,1987,1868,1854,1955,1965,1941,1830,1888,1937,1936,1988,1882,1856,1927,1971,1956,1878,1887,1986,1929,1864,1835,1963,1923,1869,1836,1786,1924,1947,1904,1894,1899,1855,1873,1915,1879,1845,1889,1899,1831,1879,1814,1791,2026,1937,1938,1941,1904,1834,1846,1874,1854,1760,2007,2000,2012,2027,1993,2027,1789,1791,1931,1938,2042,2038,2013,1939,1980,2003,1991,1997,1975,1958,1956,2048,1986,1999,1699,1988,2033,2021,1982,1822,1970,2020,2041,1973,1901,1999,1995,2025,2024,1970,1791,1974,2001,2021,1987,1994,2022,2032,2008,2005,2008,1898,2018,2012,1979,1974,2018,2040,2025,2017,2028,2012,1842,1977,1982,2003,1984,2016,1967,1959,1970,1991,1937,1995,1895,1981,2005,1935,1941,1981,2006,1958,1852,1937,1938,1973,1852,1896,2001,1986,2017,2019,1972,1909,1903,1957,1935,1906,1911,1982,1963,1992,1990,2002,1989,1991,1975,1922,1982,1938,1962,1999,2007,1959,2036,1987,1978,1942,1981,1960,1963,1881,1975,1954,1948,1978,2008,1966,1984,2015,1975,1998,2000,1941,1972,2013,1947,1974,2007,1986,1969,1881,1970,1992,1940,1958,1961,1944,1980,1943,1958,1941,1950,1937,1860,1849,1959,1974,1911,1898,1948,1890,1961,1975,1890,1968,1993,1941,1963,2020,1906,1997,1914,1985,1978,1960,1999,2022,2000,2052,2056,1893,2023,2008,1966,2019,2031,2042,2033,2038,1972,2010,2023,1970,2024,2034,2030,2038,2036,1990,2044,2011,2002,2032,2041,2036,2051,2037,1965,1984,2025,1980,2028,2030,2045,2053,2049,1982,2002,2017,1965,2043,2035,2050,2031,2031,1964,2002,1964,2022,1786,1982,1962,1984,1988,1999,2042,2009,2006,1976,1764,2013,1999,1975,2046,1965,1964,2048,1977,1975,2025,1936,1921,1887,1817,1722,1645,1509,1454,1611,1388,1474,1355,1471,1354,1084,1629,1160,1427,1199,1597,1056,1345,1285,926,1295,1439,1390,1094,1326,1556,892,1119,1395,1219,1343,1380,1191,1385,1137,1573,1174,1345,1488,1412,1481,1381,1557,1448,1590,1540,1287,1447,1508,1365,1271,1550,1276,1371,1097,1628,1180,1458,1308,856,1621,1381,1344,1159,1234,1622,915,1119,1434,1277,1512,1146,1264,1297,1195,1615,1277,1455,1498,1256,1652,1398,1507,1543,1392,1609,1275,1495,1549,1231,1556,1263,1352,1329,1179,1580,1267,1435,1247,859,1644,1407,1289,1197,1243,1606,851,1170,1432,1213,1543,1069,1324,1314,1220,1585,1335,1484,1484,1226,1640,1372,1513,1578,1331,1573,1335,1507,1484,1136,1595,1202,1463,1277,1363,1463,1165,1462,1199,864,1572,1417,1144,1257,1347,1416,901,1276,1362,1053,1549,1119,1388,1153,1631,1089,1332,1461,1437,1429,1478,1569,1439,1577,1419,1395,1390,1469,1469,1227,1625,1190,1412,1145,1575,1175,1517,1315,921,1469,1360,1402,1091,1319,1605,987,1097,1352,1327,1307,1369,1207,1289,1146,1653,1188,1522,1499,1288,1585,1346,1514,1528,1427,1647,1258,1456,1485,1361,1488,1321,1363,1331,1120,1604,1212,1438,1213,830,1583,1365,1314,1191,1292,1591,812,1238,1419,1218,1541,1101,1340,1302,1247,1609,1292,1517,1509,1272,1630,1361,1580,1608,1366,1596,1354,1556,1536,1227,1406,1369,1311,1293,1134,1603,1175,1422,1272,859,1593,1345,1312,1187,1233,1578,819,1232,1426,1158,1477,1070,1314,1343,1296,1560,1148,1494,1547,1370,1620,1415,1573,1562,1443,1600,1351,1557,1541,1262,1294,1544,1282,1306,1141,1604,1173,1410,1285,910,1412,1406,1401,1077,1335,1559,912,1085,1355,1275,1157,1439,1165,1388,1229,1698,1119,1394,1560,1465,1419,1548,1531,1427,1564,1498,1509,1376,1509,1457,1159,1690,1144,1438,1179,1568,1209,1398,1396,955,1291,1369,1426,1085,1300,1292,1386,945,1368,1432,1218,1612,1083,1391,1174,1665,1241,1391,1433,1403,1423,1518,1592,1486,1583,1538,1459,1447,1563,1412,1184,1694,1241,1443,1175,1601,1206,1401,1390,987,1248,1398,1448,1132,1302,1164,1610,858,1289,1504,1289,1636,1086,1390,1329,1489,1429,1342,1502,1519,1236,1708,1622,1611,1622,1404,1728,1199,1234,1292,1371,1306,1812,1497,1447,1206,1258,1589,1470,1471,1814,1392,1324,1267,1561,1411,1465,1828,1419,1446,1285,1288,1489,1404,1378,1845,1410,1604,1377,1243,1477,1235,1304,1433,1747,1099,1261,1286,1460,1615,1330,1387,1406,1581,1405,1710,1707,1740,1913,1587,1967,1888,1797,1756,1856,1814,1775,1920,969,900,1737,1686,1789,1704,1709,1676,1455,743,1163,1989,1909,1745,1532,1248,1441,1517,1721,1580,1848,1806,1875,1487,1700,1713,1775,1897,1878,1890,1735,1553,1868,1417,1949,1819,1922,1775,1821,1848,1892,1726,1818,1830,1841,1900,1871,1695,1663,1651,1524,1549,1621,1531,1689,1517,1578,1597,1432,1622,1472,1578,1537,1425,1397,1827,1913,1942,1697,1853,1830,1893,1785,1891,1908,1737,1872,1866,1843,1868,2003,1952,1946,1886,1975,1980,1979,1844,1923,2009,1965,1873,1925,1769,1924,1661,2052,2035,2043,1960,1942,1895,1770,1969,1930,1919,1963,1948,1974,1930,1925,1953,1938,1940,1937,1903,1915,1961,1905,1902,1919,1915,1905,1855,1918,1737,1866,1851,1809,1746,1734,1717,1631,1291,1653,1897,1490,1827,1556,1705,1711,1579,1713,1616,1323,1186,1138,1234,1502,1755,1665,1412,1158,1512,1706,1410,1156,1822,1901,1791,1719,1783,1784,1595,1945,1831,1704,1679,1684,1727,1580,1755,1687,1509,1677,1452,1552,1598,1389,1232,1638,1639,1105,969,1595,1553,1582,1872,2030,1965,1984,1984,1924,1837,1643,1546,1868,1989,1843,1893,1906,1767,1784,1786,1759,1649,1867,1836,1756,1855,1689,1822,1614,1536,1675,1556,1707,1730,1796,1851,1497,1837,1513,1590,1432,1778,1892,1800,1745,1305,1421,1696,1738,1622,1432,1601,1699,1612,1547,1653,1518,1695,1590,1299,1583,1455,1674,1661,1290,1623,1447,1712,1651,1452,1425,1584,1579,1125,1277,1398,1163,1421,1261,1562,1160,1345,1429,1312,1529,1237,1330,1463,1486,1531,1675,1821,1242,1579,1824,1927,1816,1902,1781,1933,1490,1536,1262,1573,1646,2049,2010,1973,1419,1856,1698,1773,1831,1478,1831,1793,1801,1640,1802,1494,1602,1520,1264,1733,1877,1720,1565,1851,1282,1849,1799,1900,1466,1598,1669,1680,1795,1744,2012,1489,1508,1778,1692,1747,1643,1753,1546,477,583,462,750,623,712,402,624,1246,1989,1978,1967,1915,1966,1958,1969,1926,1871,1642,1618,1634,1817,1559,1583,1604,1604,1763,1545,1817,1352,1519,1473,1543,1366,1404,1492,1586,1322,1252,1258,1526,1389,1514,1415,1342,1570,1471,1512,1517,1393,1354,1409,1417,1427,1370,1423,1742,1753,1805,1859,1889,1881,1849,1760,1715,1814,1653,1763,1794,1831,1765,1722,1675,1559,800,804,857,978,1700,1702,1660,1616,1698,1602,1608,1652,1647,1746,1671,1738,1665,1745,1802,1832,1814,1575,1721,1498,1810,1335,1806,1569,1898,1685,1853,1787,1867,1763,1839,1796,1839,1317,1059,1042,1063,1058,1083,1077,1055,1475,1539,1571,1531,1584,1539,1566,1532,1565,1576,1468,1645,1600,1576,1014,1025,1086,1023,1515,1403,1753,1817,1576,1180,1223,1512,1373,1081,1464,1664,1290,1514,1638,1589,1547,1638,1607,1371,1225,849,1074,687,784,871,732,1413,1427,1299,553,777,537,565,808,532,877,724,922,490,586,798,653,873,516,853,693,877,528,514,954,699,849,433,814,596,692,409,273,557,257,609,212,554,220,181,628,153,524,197,523,40,238,412,232,591,246,1020,1438,1512,1171,1189,1220,1187,1241,940,983,1006,953,1006,999,986,1360,1362,1427,1400,1483,1508,1402,1389,1403,1605,1465,1491,1554,1622,1605,1513,1508,1611,1378,1405,1388,1395,1417,1404,1497,1443,1385,1407,1416,1376,1334,943,942,922,1093,959,953,961,920,1078,894,998,924,1273,1414,1469,1345,1373,915,922,955,960,1731,1582,1591,1571,1447,1582,1588,1576,1719,1363,1347,1348,1299,1307,1309,1383,1331,1606,1588,1593,1199,1401,1407,1225,1481,1621,1615,1555,1555,1582,1771,1682,1752,1652,1498,1222,1437,1426,1340,1340,1142,1476,1425,1479,1444,1448,1622,1465,1708,1657,1591,1627,1553,1587,1554,1627,1641,1701,1647,1580,1652,1415,1607,1545,1576,1682,1641,1606,1625,1566,1505,1610,1621,1569,1718,1640,1589,1664,1444,1626,1566,1601,1687,1601,1560,1537,1584,1831,1539,1556,1527,1775,1675,1623,1574,1594,1809,1584,1705,1600,1612,962,937,967,1027,1565,1486,1575,1484,1545,1283,1276,1317,1379,1118,1167,1264,1361,1222,908,963,1131,1331,1168,1094,1082,1172,1152,888,915,1356,1872,1492,1900,1548,1560,1423,1436,1328,1407,1413,1435,1340,1655,1512,1508,1542,1536,1520,1525,1532,1537,1610,1384,1374,1378,1371,1404,1371,1363,1642,1526,1521,1533,1579,1554,1514,1517,1535,1754,1591,1605,1651,1636,1595,1592,1676,1754,1494,1467,1420,1403,1440,1452,1419,1428,1797,1764,1731,1681,1748,1744,1703,1691,1819,1811,1730,1686,1650,1730,1678,1688,1664,1660,1035,1249,1122,1101,1123,1042,1338,1111,1089,963,926,674,676,661,1214,1756,1708,1754,1673,1752,1684,1736,1667,1865,1731,1721,1637,1696,1687,1707,1712,1826,1794,1752,1805,1723,1773,1774,1769,1723,1893,1717,1707,1632,1660,1667,1705,1693,1768,1410,1508,1366,1484,1351,963,1022,1022,1593,1841,1783,1836,1666,1873,1779,1852,1777,1630,1176,1214,1384,1686,1057,1016,1072,1698,1685,1613,1584,1616,1603,1619,1606,1695,1572,1472,1439,1403,1371,1476,1414,1440,1467,1676,1493,1563,1500,1498,1445,1431,1460,1634,1602,1654,1593,1564,1650,1606,1590,1720,1562,1463,1424,1481,1424,1444,1439,1425,1609,1839,1838,1841,1691,1872,1767,1846,1808,1734,1657,1600,1640,1545,1646,1603,1618,1684,1552,1481,1457,1393,1551,1469,1470,1472,1736,1812,1824,1876,1681,1872,1812,1850,1804,1658,1650,1616,1691,1553,1645,1605,1674,1612,1459,1426,1458,1368,1462,1443,1426,1545,1843,1806,1841,1893,1681,1825,1818,1864,1656,642,1764,956,737,1167,683,682,1147,698,1086,1436,648,711,786,1397,1103,1257,1362,1244,802,1127,1298,1195,1287,1223,1616,1341,1298,1008,1307,1671,1566,1752,1652,1749,1552,1600,1671,1669,1025,1009,1454,1479,1566,1019,989,991,1020,1375,1076,1138,1106,1243,1574,2013,2039,2003,2004,2023,2030,1994,2009,2032,2036,2025,2009,2014,2005,2017,1965,2032,2025,2028,1997,1989,2019,2011,1975,2004,2033,2029,2006,2008,2007,2026,2013,1947,2026,2008,1893,1922,1881,1896,1930,1845,1849,1873,1885,1889,1887,1836,1887,1817,1850,1891,1833,1668,1673,1679,1668,1666,1665,1610,1766,1657,1654,1664,1632,1659,1665,1633,1588,1714,1435,1424,1439,1408,1464,1415,1413,1455,1596,1400,1423,1640,1424,1444,1475,1675,1400,1457,1549,1623,1511,1383,1564,1556,1538,1273,1563,1347,1922,1776,1466,1645,1649,1557,1564,1527,1710,1606,1553,1583,1643,1758,1695,1574,1552,1672,1530,1577,1547,1552,1545,1549,1526,1522,1533,1471,1672,1595,1523,1646,1724,1586,1662,1737,1803,1513,1520,1966,1939,1705,1713,1817,1958,1933,1928,1981,1929,1959,1897,1934,1830,1841,1859,1904,1979,1848,1865,1832,1816,1774,1787,1773,1925,1977,1953,1955,1927,1921,1902,1907,1942,2020,1870,1897,1856,1818,1807,1842,1784,1914,2003,1984,1978,1970,1933,1935,1914,1928,1978,1797,1773,1737,1737,1760,1775,1734,1792,1918,1798,1797,1825,1767,1804,1786,1779,1892,1471,1441,1408,1436,1408,1423,1417,1449,1968,1989,1926,2048,1950,1936,1893,1902,1894,1917,1896,1967,1932,1939,1927,1882,1899,1927,1883,1940,1876,1518,1509,1602,1614,1578,1595,1515,1603,1920,1812,1793,1746,1781,1746,1733,1720,1758,1338,1295,1292,1369,1292,1343,1369,1334,1749,1663,1640,1685,1707,1743,1742,1665,1699,1480,1470,1496,1570,1563,1493,1473,1449,1687,1664,1482,1688,1679,1542,1624,1415,1356,1337,1327,1244,1266,1163,1279,1757,1883,1862,1886,1899,1876,1863,1875,1914,1953,1895,1872,1863,1893,1882,1886,1860,1877,1422,1430,1345,1397,1469,1472,1482,1453,1806,1663,1698,1770,1657,1611,1570,1537,1568,1534,1561,1590,1621,1729,1712,1701,1645,1675,1448,1485,1471,1452,1339,1402,1410,1599,1468,1513,1492,1531,1290,1493,1518,1462,1657,1486,1535,1482,1211,1498,1496,1519,1588,1984,1954,1924,1636,1427,1410,1429,885,1411,1374,1398,1591,1167,1140,1116,1162,1151,1070,1159,1202,1525,1413,1456,1954,1879,1921,1914,1898,1903,1904,1932,1676,1610,1505,1526,1446,1300,922,907,855,907,824,962,720,853,935,997,756,927,887,1094,861,1062,1280,1258,1323,1292,737,376,616,575,299,312,432,750,1356,834,920,904,1049,1228,857,1328,683,220,445,293,301,1434,1406,1504,1719,1838,1766,1812,1824,1816,1795,1754,1792,1738,1632,1648,1573,1612,1604,1651,1577,1685,1350,1296,1336,1317,1620,1691,1662,1670,1689,1638,1654,1690,1682,1680,1669,1666,972,1570,1834,1860,1767,1781,1800,1871,1795,1766,1638,1448,1489,1445,1668,1857,1842,1869,1841,1878,1872,1853,1882,1848,1130,1754,1154,1088,1248,1022,1245,2033,2003,1976,1922,1986,1943,1894,1901,1885,1976,1940,1950,1927,1910,1892,1929,2019,1736,1653,1758,1797,1809,1811,1658,1623,1913,2052,2048,2049,2053,2048,2044,2027,2053,2056,2055,2039,2038,2048,2042,2047,2057,2048,1883,1919,1853,1852,1815,1869,1820,1875,1952,1906,1873,1844,1851,1840,1850,1850,1957,1846,1860,759,812,790,676,735,447,769,899,795,421,612,806,841,740,399,735,844,871,555,454,773,820,944,435,618,1215,1022,1176,631,495,1278,1076,1120,430,736,1173,1068,1051,392,974,1076,1065,833,1265,1243,1571,1283,1703,1504,976,1156,1156,1146,1189,1104,1097,1096,1156,1159,1182,1167,1124,1105,1036,1077,1557,1096,1088,1165,1074,1073,1089,1042,1027,1002,894,1037,1046,863,890,769,889,1403,424,535,505,526,585,479,566,575,447,509,472,520,506,530,574,502,1355,1470,1486,1493,1547,1497,1508,1510,1519,1169,990,982,1371,1624,1413,1395,1294,1352,1457,1726,1648,1650,1667,1615,1612,1659,1646,1667,1908,1704,1682,1749,1685,1692,1724,1677,1801,984,1113,1234,1334,1308,1283,1323,1115,1359,1435,1395,1429,1531,1508,1550,1549,1654,1439,1029,1162,1149,1131,1173,1083,1092,1120,1146,1118,1163,1171,1094,1075,995,1104,1469,1130,1104,1182,1081,1077,1087,1052,1026,1024,870,1030,1066,863,891,791,878,1361,421,539,507,548,547,461,571,559,455,531,468,513,499,530,587,507,1615,1798,1780,1816,1781,1810,1739,1847,1397,1422,1383,1387,1657,1823,1826,1893,1848,1865,1847,1866,1867,1527,1547,1592,1506,1450,1694,1522,1699,1589,1764,1793,1862,1724,1542,1208,1137,1163,1365,1307,1724,1741,1806,1821,1745,1846,1769,1730,1791,1332,1209,1136,1106,1360,1423,1566,1885,1726,1914,1751,1811,1806,1742,1850,1763,1757,1769,1701,1625,1673,1769,1758,1770,1593,1673,1245,1775,1618,1613,1594,1587,1565,1579,1624,1767,1484,1763,1786,1473,1420,1753,1781,1549,1696,1026,1122,1143,1123,1173,1138,1086,1133,1144,1148,1125,1207,1121,1096,1029,1080,1251,1075,1209,1140,755,787,1160,1147,1069,990,977,1236,1117,875,664,1083,1237,1099,975,923,1218,1122,983,554,1146,1212,1179,990,845,1193,1136,985,440,1190,1179,1194,955,800,1156,1146,1068,430,1182,1167,1139,956,1270,1106,1085,1191,1070,1060,1118,1022,983,1014,895,1021,1031,838,820,838,980,893,1157,1222,1182,418,1051,1232,1141,855,1233,1119,1219,1187,1256,1136,1117,1227,1185,1272,1116,1104,1230,1209,1334,1078,1197,1205,1170,1301,1164,992,1037,1098,1363,1113,1000,1003,1216,1284,1046,983,1076,1315,1236,1064,915,1117,1542,577,528,511,1322,1543,1749,1859,1859,1821,1565,1373,474,514,504,532,549,1028,1520,1453,1640,1518,1453,1646,1526,1455,1635,1534,1449,1705,1675,1835,1782,1816,1748,1785,1826,1767,1833,1869,1739,1870,1730,1748,2032,1707,1841,1777,1768,1803,1877,1745,1718,1908,1692,1835,1885,1694,1880,1776,1837,1727,1851,1749,1785,1891,1755,1732,1884,1732,1846,1790,1754,1894,1709,1830,1756,1902,1736,1850,1759,1739,1904,1669,1821,1894,1739,1764,1813,1831,1717,1853,1820,1728,1896,1722,1755,1890,1804,1765,1804,1756,1852,1831,1826,1674,1905,1063,1228,1130,1272,1274,1104,1288,1056,771,731,820,854,552,468,765,823,920,464,500,810,861,853,588,387,822,899,841,941,1211,1009,1140,1179,1101,1189,1068,1108,1109,1163,1091,1196,1180,1085,1064,1091,1420,1470,1540,1639,1095,1102,1188,1095,1105,1088,1050,1045,1025,889,1026,1039,935,904,766,882,1424,1430,1455,1281,424,560,509,559,535,467,556,545,474,504,478,490,508,532,575,519,1628,1650,1674,1549,1716,1637,1675,1674,1700,1700,1766,1640,1627,1611,1668,1579,1053,636,1344,1420,1353,1379,1329,1377,1387,1312,1246,1070,1225,1055,1232,1095,1247,1113,1218,1404,1408,1455,1402,1480,1362,1425,1436,1558,1561,1463,1356,1455,1442,1433,1336,1423,1184,1111,1257,1101,1317,1167,1344,1177,1282,1145,1239,1215,1357,1153,1165,1169,1141,1467,1510,1527,1515,1707,1473,1576,1473,1458,1383,1455,1281,1090,1147,1200,1482,1361,1018,1436,916,1000,1186,1181,2023,2029,2015,2013,2018,1996,1978,1996,2023,2026,1989,2036,2020,1999,2021,1962,1975,1339,1344,1630,1513,1123,1123,1119,1127,1121,1117,1257,1608,1478,1519,1570,1803,1684,1740,1747,1854,1558,1496,1521,1618,1608,1554,1543,1598,399,99,1679,2028,1967,1889,1905,1887,1820,1880,1906,1887,1915,1906,1909,1980,1901,1864,1914,1934,1898,1823,1951,1960,1884,1909,1943,1923,1749,1770,1840,1713,1977,1921,1867,1853,1898,1921,1881,1892,1889,1951,1822,1834,1851,1919,1792,1518,1653,1690,1663,1648,1723,1675,1678,1613,1743,1615,1667,1674,1729,1659,1679,1639,1705,1785,1448,1539,1612,1616,1571,1489,1485,1590,1601,1622,1650,1482,1547,1559,1559,1558,1880,1503,1563,1652,1526,1948,1795,1747,1807,1874,1856,1853,1841,1892,1313,1298,1309,1366,1328,1354,1340,1244,1640,1443,1446,1424,1523,1471,1457,1442,1606,1458,1444,1443,1466,1501,1478,1452,1421,1635,1464,1457,1429,1502,1463,1474,1431,1535,1521,1437,1428,1450,1491,1453,1426,1415,1587,1421,1384,1432,1443,1478,1429,1416,1428,1583,1383,1385,1481,1472,1447,1379,1404,1612,1392,1395,1392,1454,1437,1427,1390,1401,1616,1390,1427,1471,1493,1497,1421,1403,1620,1459,1428,1451,1491,1483,1491,1455,1391,1598,1354,1301,1368,1390,1351,1318,1307,1477,1396,1319,1300,1398,1315,1376,1333,1263,1574,1323,1291,1340,1336,1345,1301,1373,1324,1607,1460,1431,1493,1489,1508,1458,1410,1623,1408,1398,1438,1502,1449,1472,1386,1417,1607,1358,1407,1437,1448,1469,1390,1400,1615,1420,1388,1379,1464,1487,1437,1407,1418,1617,1394,1385,1395,1493,1458,1415,1434,1561,1481,1415,1407,1438,1505,1453,1429,1403,1755,1677,1846,1728,1876,1668,1710,1796,1831,1831,1791,1709,1648,1777,1764,1738,1733,1871,1773,1893,1843,1877,1867,1878,1860,1860,1938,1827,1781,1791,1811,1797,1773,1780,1957,1748,1753,1683,1711,1703,1693,1670,1739,1846,1749,1743,1690,1725,1716,1707,1684,1832,1880,1847,1830,1801,1787,1858,1802,1807,1929,1727,1775,1738,1731,1713,1746,1790,1812,1743,1914,1841,1832,1829,1793,1755,1791,1770,1887,1680,1748,1713,1531,1766,1726,1622,1772,1817,1744,1775,1706,1618,1687,1592,1834,1894,1631,1639,1634,1656,1699,1684,1679,1654,1769,1687,1617,1631,1707,1705,1691,1656,1747,1826,1817,1737,1791,1832,1797,1814,1784,1845,1791,1720,1732,1759,1799,1758,1793,1750,1762,1706,1707,1743,1718,1747,1690,1729,1796,1693,1688,1756,1664,1677,1698,1731,1751,1780,1683,1732,1622,1651,1647,1718,1725,1817,1403,1511,1501,1547,1519,1497,1490,1508,1957,1982,1930,1973,2022,1935,1967,1978,1902,1942,2015,2031,1975,1944,1972,1986,2012,1794,927,38,40,38,318,40,39,40,73,1962,1799,1842,1858,1817,1836,1817,1789,1913,1475,1496,1441,1440,1369,1459,1447,1422,1920,1829,1774,1780,1800,1752,1774,1774,1583,835,87,32,40,40,318,40,32,40,731,1125,1572,1648,1682,1661,1708,1686,1678,1690,1743,1080,1261,1453,1156,919,1597,1411,1214,1106,1822,1605,1652,430,40,40,39,319,33,40,40,570,1276,1341,1206,1201,1695,1654,1619,1703,1691,1666,1673,1607,1567,40,38,40,40,1113,312,114,1242,1853,2012,1736,1655,1605,1652,1686,1659,1706,1732,1681,1736,1748,1754,1740,1715,1711,1691,1747,1092,1143,357,1099,1818,1757,1718,1738,1725,1799,1666,1746,1870,1849,1839,1883,1770,1927,1792,1857,1881,1839,1682,1648,1745,1652,1812,1792,1705,1882,1780,1976,1774,1955,1808,1943,1863,1881,1994,1498,1379,1302,1212,1334,1593,1554,1460,1329,1413,1237,1282,1238,1299,1312,1446,1764,598,814,874,983,1358,1672,1071,721,648,737,1482,1572,1701,1467,810,1266,1594,1361,1138,924,827,965,741,621,911,1225,1364,1214,1228,1349,1344,1408,1271,1480,1778,1723,1819,1689,1786,1698,1770,1723,1776,1753,1743,1771,1770,1801,1768,1745,1168,968,927,975,1574,1963,1704,1921,1886,1123,1220,1190,1227,2029,2019,1997,2026,1939,1918,1884,1893,1948,2040,2050,2048,2041,1758,1818,1786,1837,1811,1799,1709,1810,1721,1652,1642,1604,1709,1586,1280,1315,1637,1294,1160,1265,1284,1329,1178,1278,1228,1609,1389,1214,1204,1713,1594,783,797,1574,1645,843,744,1296,1268,1083,778,962,1572,1604,1366,1404,1608,1897,1875,1858,1873,1872,1920,1944,1963,1848,1675,1658,1655,1652,1708,1797,1793,1712,1602,1430,1411,1427,1565,1445,1431,1440,1598,1527,1446,1497,1543,1569,1510,1469,1544,1912,1981,1945,1925,2016,1972,1986,1971,2003,1762,1777,1753,1758,1791,1572,1543,1569,1892,1916,1798,1905,1932,1776,1829,1765,1842,1951,1862,1843,1898,1878,1813,1779,1817,1900,1434,1496,1588,1602,1217,1247,1598,1293,1183,1261,1209,1716,1131,1248,1298,1872,1778,1790,1768,1802,1809,1804,1781,1805,1874,1831,1801,1807,1452,889,852,810,969,1144,1183,1144,1181,1286,1206,1188,1211,1329,1399,1408,1293,1603,1835,1869,1843,1880,1852,1801,1856,1825,1956,1901,1938,1914,1930,1909,1925,1958,1886,1780,1771,1781,1659,1817,1743,1676,1512,1590,1715,1792,1802,1845,1836,1727,1857,1810,1465,1467,1401,1521,1551,1596,1784,1568,1557,1637,1642,1716,1679,1758,1744,1791,1797,1891,2056,2053,1962,1966,1972,1989,1988,1990,1934,1964,1922,1912,1105,1330,1380,1043,1752,1794,1743,1759,1727,1511,1652,1526,1646,1769,1768,1777,1730,1843,1778,1814,1757,1783,1695,1716,1732,1632,1689,1819,1790,1635,1167,1031,1065,1165,1555,544,552,652,1703,707,1410,721,1422,501,690,447,608,975,719,815,689,757,1179,1198,1196,1087,1418,1320,1448,1498,1474,1390,1437,1563,1545,1480,1409,1547,1557,1541,1358,1510,1566,1439,1328,1462,1410,1621,1443,1383,1485,930,227,234,212,791,490,449,476,842,2048,2023,2040,2041,2039,2045,2040,2031,2037,1969,1920,1973,1892,1900,1932,1904,1889,1437,1384,1426,1454,1344,1128,1166,1124,1234,1447,1361,1541,1493,1857,1811,1834,1878,1867,1824,1784,1806,1887,1770,1746,1759,1799,1746,1689,1759,1674,1562,1299,1282,1372,1550,1321,1283,1370,1702,1775,1748,1805,1740,1206,1267,1202,1267,1849,1826,1780,1795,1685,1462,1391,1516,1557,2037,2032,2035,2022,2012,1986,1973,1998,1745,1503,1497,1476,1706,1701,1659,1684,1728,1993,1979,1972,1993,1835,1723,1722,1722,1976,2052,2048,2047,1975,1581,1534,745,532,539,535,933,1425,1424,1420,1121,1296,1577,1617,1244,1354,1565,1546,1492,1641,1655,1742,1633,1911,1851,1311,1223,1344,1240,1188,933,1023,959,1332,880,986,935,843,1256,657,709,1606,1992,1985,1957,1785,1964,1994,1987,1992,1846,1905,1893,1884,1981,2011,1155,2005,1993,1878,1893,1895,1913,2005,1994,1825,2011,1640,1656,1641,1495,1491,1527,1611,1495,1571,1881,1916,1850,1850,1929,1891,1854,1866,1876,1502,1477,1448,1905,1956,1979,2011,2010,1832,1791,1801,1799,1843,1875,1892,1879,1679,1413,1476,1398,1424,1468,1531,1479,1440,1538,1676,1711,1632,1555,1549,1573,1551,1621,1734,1625,1751,1755,1652,1764,1660,1736,1667,1667,1521,1721,1656,1673,1506,1666,1744,1442,1570,1560,1548,1459,1680,1596,1626,1423,1531,1539,1486,1488,1467,1564,1720,1476,1305,1234,1521,1624,1660,1764,1410,1723,1599,1618,1784,1739,1531,1653,1508,1693,1528,1518,1635,1502,1459,1498,1804,1344,1403,1373,1251,1148,1137,1307,1180,1384,1462,1355,1357,1575,1360,1209,1366,1869,1689,1741,1567,1251,1045,1020,865,943,1071,1195,1299,1251,1581,1587,1564,1722,1944,1339,1284,1531,1462,1530,1481,1459,1399,1477,1677,1726,1697,1705,1658,1719,1794,1961,1666,1802,1767,1588,1368,1344,1328,1400,1451,1553,1617,1625,1609,1436,1434,1368,1610,1405,1372,1372,1394,1407,1384,1655,1503,1512,1465,1410,1456,1460,1474,1506,1451,1756,1798,1519,1402,1359,1393,1396,1328,1366,1494,1692,1759,1742,1600,1507,1509,1439,1427,1723,1424,1439,1389,1446,1417,1546,1685,1647,1582,1451,1518,1483,1412,1440,1488,1441,1674,1636,337,267,1601,1619,374,280,1515,1587,398,274,1525,1603,422,267,1535,1583,448,263,1459,1584,464,262,1245,1272,1280,1246,1450,1252,1292,1310,1387,1284,1241,1325,1302,1441,1268,1360,1300,1453,1526,1261,1257,1266,1232,1279,1256,1293,1227,1452,1225,1212,1228,1205,1192,1193,1191,1504,1254,1255,1256,1288,1291,1289,1297,1262,1889,1729,1785,1688,1667,1621,1830,1860,1455,1246,1375,1348,1339,1380,1345,1265,1388,1297,1442,1294,1376,1375,1417,1364,1491,1847,1622,1600,1582,1623,1610,1496,1387,1309,1380,1403,1485,1526,1546,1436,1580,1732,1890,1661,1590,1574,1625,1591,1472,1411,1308,1394,1401,1459,1550,1529,1415,1582,1704,1892,1671,1577,1589,1648,1594,1491,1460,1282,1355,1427,1457,1582,1524,1435,1515,1725,1914,1673,1587,1582,1664,1588,1501,1481,1242,1362,1402,1443,1580,1512,1430,1518,1704,1902,1266,1270,1105,945,948,1146,1058,1111,1087,1281,1283,1205,906,979,1072,1081,1643,1232,1298,1123,978,975,1126,1095,1045,1093,1278,1267,1225,952,988,1074,1070,1494,1968,1913,1910,1964,1968,1957,1951,1915,1865,1803,1777,1856,1864,1944,1920,1951,1680,1753,1971,1937,1977,2020,1985,1921,1970,1917,1122,1177,1151,1147,1286,1124,1155,1127,1706,1766,1754,1771,1779,1760,1817,1790,1731,1789,1766,1780,1751,1761,1659,2003,1948,1901,1897,1885,1980,1628,721,792,1926,1963,2016,1984,1952,1957,1992,1952,1998,1952,1955,1961,1982,1960,1974,1941,1961,1844,1577,1553,1593,1548,1601,1562,1562,1661,1776,1631,1675,1666,1627,1781,1671,1748,1635,1701,1461,1583,1430,1711,1663,1736,1670,1728,1693,1673,1766,1741,1889,1722,1843,1794,1838,1615,1690,1629,1761,1705,1776,1695,1689,1684,1517,1618,1538,1667,1611,1791,1662,1772,1700,1775,1782,1821,1616,1487,1774,1639,1812,1792,1808,1778,1821,1810,1825,1797,1769,1702,1732,1759,1557,1646,1538,1764,1651,1860,1692,1879,1756,1748,1662,1783,1768,1728,1275,1901,1916,1803,1564,1916,1880,1484,1571,1548,2001,2010,1973,1550,1392,1244,1231,1317,1158,1136,1677,1627,1608,1555,1491,1498,1538,1527,1677,1239,1134,915,918,1119,1234,1021,988,1174,1104,1902,1752,1873,1832,1824,1811,1854,1773,1904,1757,1548,1721,1634,1737,1745,1693,1780,1884,1817,1868,1856,1822,1837,1804,1811,1923,1748,1576,1716,1681,1724,1755,1777,1728,1816,1823,1906,1826,1889,1798,1927,1797,1951,1939,1873,1990,1939,1888,1965,2015,1918,1947,1800,1718,1815,1784,1814,1811,1847,1858,1364,1335,1672,1420,1191,1602,1493,1784,1402,1047,1357,1419,1120,956,631,296,1143,1235,1307,1306,1307,1437,1268,1315,1343,1313,1473,1313,1335,1307,1438,1378,1320,1357,1335,1468,1504,1334,1276,1514,1704,1894,1959,2037,2047,1998,2004,1982,1939,1647,1636,1520,1491,1727,1580,1720,1727,1688,1758,1787,1620,1758,1597,1574,1605,1640,1582,1752,1897,1927,1853,1634,1712,1790,1975,1958,1856,1729,1715,1841,1919,1841,1767,1531,1807,1925,1882,1884,1650,1706,1899,1995,1984,1920,1765,1660,1867,1876,1872,1818,1394,991,993,958,1357,1454,1587,1606,1644,1632,1680,1652,1627,1514,1918,1682,1733,1716,1592,1730,1628,1626,1684,1684,1894,1762,1719,1761,1742,1720,1743,1598,1692,1688,1731,1709,1792,1946,1780,1328,1851,1876,1858,1938,1964,1921,1885,1724,1747,1656,1673,1718,1950,1874,1912,1881,1904,1988,1914,1958,1948,1937,1829,1800,1793,1782,1865,1964,1870,1903,1885,1907,1859,1880,1746,1326,1093,1356,1723,1602,1677,1616,1871,1768,1732,1790,1756,1742,1776,1757,1772,1737,1800,1681,1078,581,620,735,1166,977,1324,1246,1244,958,1847,1709,1629,1553,1751,1602,1658,1687,1620,1413,1664,1512,1376,1164,1603,1569,1761,1685,1644,1714,1746,1569,1650,1551,1503,1595,1555,1675,1546,1679,1542,1588,1667,1564,1644,1565,1671,1538,1649,1451,1524,1615,1517,1595,1513,1509,1660,1565,1673,1536,1530,1809,1802,1812,1846,1864,1851,1855,1822,1901,1805,1824,1824,1922,1909,1863,1850,1884,1982,2019,1965,1921,1888,1891,1932,1929,1921,1910,1930,1895,1866,1870,1857,1904,1883,1794,1670,1642,1677,1709,1608,1603,1668,1615,1622,1649,1608,1740,1634,1643,1663,1649,1635,1651,1618,1642,1751,1678,1622,1635,1621,1621,1638,1671,1845,1853,1880,1836,1862,1862,1847,1863,1847,1935,1855,1835,1832,1858,1841,1824,1853,1945,1892,1856,1851,1873,1858,1842,1861,1882,1681,1399,1439,1456,1316,1441,1426,1606,1403,1344,1464,1491,1416,1446,1760,1865,1836,1842,1781,1799,1813,1909,1915,1696,1726,1714,1677,1684,1690,1748,1643,1709,1544,1789,1717,1691,1765,1769,1700,1591,1696,1855,1840,1806,1881,1614,1777,1865,1891,1857,1845,1715,1694,1789,1771,1775,1760,1532,1743,1692,1662,1825,1657,1679,1781,1838,1770,1749,1749,1641,1695,1655,1645,1765,1682,1433,1493,1500,1570,1488,1662,1452,1672,1579,1495,1618,1694,1602,1494,1573,1613,1491,1595,1523,1787,1828,1748,1767,1757,1756,1702,1411,1430,1783,1806,1802,1750,1706,1658,1468,1675,1745,1729,1623,1351,1321,1807,1751,1737,1349,1638,1421,1481,1660,1434,1695,1484,1479,1513,1522,1528,1556,1488,1303,1492,1533,1585,1544,1498,1506,1561,1607,1491,1560,1355,1444,1448,1477,1814,1838,1870,1791,1829,1833,1791,1724,1731,1490,1799,1760,1715,1807,1658,1761,1774,1736,1777,2014,2030,2001,2014,2016,1997,1767,1766,1740,1625,1738,1719,1793,1676,1698,1729,1791,1735,1671,1794,1700,1725,1661,1668,1673,1730,1658,1786,1680,1774,1661,1663,1714,1728,1686,1688,1658,1807,1603,1434,1431,1764,1752,1650,1702,1662,1417,1515,1517,1546,1427,1502,1549,1523,1600,1793,1748,1667,1771,1657,1746,1752,1741,1613,1673,1657,1679,1620,1597,1615,1711,1617,1698,1634,1637,1699,1613,1677,1630,1742,1654,1649,1634,1673,1631,1644,1637,1650,1703,1642,1646,1649,1722,1643,1605,1589,1756,1618,1677,1676,1785,1670,1641,1622,1647,1710,1603,1659,1676,1817,1626,1618,1619,1677,1647,1837,1841,1662,1634,1748,1831,1648,1723,1770,1842,1748,1825,1919,1872,1901,2027,1955,1949,1943,1953,1811,1841,1916,1981,2033,2000,2000,1878,1920,1852,1816,1864,1997,2013,2018,2035,1982,1983,1902,1912,1885,1922,1912,1930,1954,2025,1706,1877,1899,1904,1850,1811,1582,1612,1879,1826,1811,1614,1639,1599,1639,1624,1766,1039,1057,928,1079,1229,1268,1140,1338,1194,1279,1147,1270,1250,1214,1176,1243,1180,1715,1696,1757,1740,1669,1715,1689,1751,1664,1698,1706,1787,1703,1667,1644,1709,1633,1726,1628,1640,1659,1750,1668,1669,1615,1718,1678,1697,1661,1634,1837,1708,1722,1728,1673,1723,1727,1733,1809,1740,1673,1742,1783,2024,1996,2020,2041,2035,2036,2029,2024,2018,2047,2043,2048,2057,2048,2050,2041,2035,1958,1856,1867,1906,1919,1889,1911,1866,1900,1648,1718,1532,1680,1788,1682,1532,1654,1733,1693,1644,1692,1647,1696,1767,1782,1603,1723,1639,1547,1659,1450,1704,1767,1884,1713,1660,1639,1739,1958,1873,1875,1793,1770,1713,1827,1829,1868,1474,2017,1965,2025,1931,1905,1898,1680,1751,1646,1785,1705,1777,1790,1758,1673,1766,1710,1694,1692,1707,1445,1508,1489,1518,1575,1514,1521,1521,1491,1575,1500,1513,1523,1542,1519,1540,1508,1467,1010,836,1004,957,1524,1407,1289,1391,1349,1438,1339,1416,1505,1618,1728,1617,1631,1655,1600,1646,1726,1774,1696,1661,1684,1806,1776,1723,1738,1705,1675,1687,1669,1602,1036,1586,1669,1709,1883,1897,1924,1874,1866,1878,1919,1904,1910,1958,1662,1589,1488,1540,1450,1575,1738,1962,1898,1826,1642,1549,1576,1640,1825,1899,1861,1613,1665,1645,1650,1635,1688,1703,1789,1394,1505,1678,1678,1729,1730,1730,1128,1525,1239,1373,1504,1689,1765,1743,1340,1436,1492,1375,1407,1362,1363,1337,1355,1401,1505,1440,1282,1365,1340,1322,1359,1268,1339,1572,1365,1574,1515,1696,1725,1433,1130,1454,1214,1414,1476,1601,1606,1479,1269,1206,1666,1457,1374,1334,1140,1306,1277,1468,1665,1389,1577,1695,1745,1738,1682,1774,1253,1647,1339,1664,1548,1711,1695,1461,1208,1631,1532,1257,1476,1635,1635,1435,1482,1241,1655,1287,1459,1529,1690,1747,1699,1461,1542,1622,1448,1559,1425,1533,1519,1487,1413,1836,1787,1715,1750,1797,380,99,1177,457,669,589,539,483,753,634,502,1292,913,882,1429,1399,1395,1442,1415,1546,1597,1706,1605,1643,1555,1602,1851,1582,1121,1165,1183,1251,1326,1263,1301,1263,1475,1507,1598,1544,1501,1561,1674,1599,1385,1341,1384,869,25,30,25,446,692,1222,747,1458,1627,1669,1617,1633,1217,1651,1524,1606,1540,1708,1905,1935,1906,1948,1879,1869,1475,1497,1493,1346,956,954,1245,1332,1405,1441,1490,1510,1427,1527,1731,1766,1535,1606,1499,1562,1587,1517,1549,1712,2050,2048,2036,2012,1892,1933,2018,1971,1745,1911,1871,1944,1996,2036,1989,2034,1986,2021,1972,2033,2051,2011,1726,1832,2001,2006,1997,1943,1663,1613,1247,1231,1186,1424,1993,1912,1713,1750,1896,1892,1766,1785,1782,1865,2027,2028,2019,2008,2044,1975,2045,1919,1543,1558,1553,1520,1531,1553,1532,1506,1375,1395,1314,1341,1293,1303,1330,1519,2008,2024,1981,1986,1998,1982,1921,1936,2015,1838,1723,1670,1664,1718,1638,1337,225,445,1247,1318,1325,983,1017,959,1106,1159,1616,1701,1560,1706,1727,1674,1520,1579,1582,1601,1542,1590,1496,1491,1244,1382,1061,1171,1234,1341,1241,1322,1424,1490,1567,1603,1464,1449,1412,1284,955,1078,1592,1515,787,1163,1293,1368,1486,1461,1486,1514,1192,1332,1544,1694,1948,1804,1294,1339,1184,1391,1572,1637,1594,1654,1578,1600,1493,1598,1497,1457,1238,1424,1574,1554,1365,1362,1384,1402,1345,1289,557,662,446,713,1446,1524,1554,1554,1426,1478,1541,1458,1382,1344,1144,1166,1296,1394,1508,1377,1118,977,866,1166,1730,1901,1785,1777,1555,1407,1011,1120,1556,1592,1560,1555,1573,1577,1559,1703,1769,1832,1725,1822,1787,1879,1773,1758,1407,1397,1355,1417,1411,1494,1669,1772,1968,1945,1873,1933,1968,1945,1873,1965,1906,1829,1545,1278,731,752,846,1240,1482,1590,1667,1710,1478,1610,1358,1337,1236,963,602,831,821,872,614,918,1436,1228,492,534,503,958,1755,1692,1084,1137,1024,1176,1368,1356,1098,1130,905,993,1432,1472,1432,1443,1425,1561,1698,1760,1639,1791,1878,1857,1556,1403,997,1146,1138,1172,954,1013,827,1059,998,1143,1213,1152,453,546,622,664,479,522,604,648,466,533,632,705,499,555,609,680,418,486,557,1014,1879,1697,1043,1125,1033,1121,1032,1096,1107,1336,1804,1668,1678,1711,1638,1674,1736,1573,1148,1312,1663,1664,1680,1759,1876,1491,251,359,288,379,191,281,247,374,51,269,25,181,158,284,260,299,241,626,1449,1474,1616,1533,1067,1079,1067,1125,1184,1323,1467,1521,1449,1614,1853,1879,1697,1709,1380,1617,1627,1657,1371,1570,1980,1984,2029,2032,1940,1968,1957,1975,1966,1966,2010,1826,1269,1295,1620,1603,1587,1175,1651,1451,1516,1490,1494,1453,1463,1478,1533,1527,1515,1425,1001,1312,1241,1442,1119,1283,1260,1099,1057,1117,2048,1455,627,1629,2048,891,793,1910,1844,798,1142,2048,1320,610,1607,1966,2004,2048,2048,2048,1919,1989,2048,2048,2048,1900,1979,1853,1984,1879,2031,2027,1901,1973,1962,1986,1956,1946,1943,1917,1989,1914,2009,2000,1931,2001,1865,1998,1861,1972,1858,1979,2048,2048,1863,1978,2048,2048,1863,1973,1957,1987,2020,1867,1975,2048,2032,2005,1938,2021,2048,2050,1915,2008,1903,2009,1928,1981,2051,2048,2048,2031,1917,1991,2048,2048,2048,1865,1975,1976,1986,1992,1907,1983,1946,1979,2045,1867,1975,1867,1995,2044,2036,1868,2029,2053,2046,1897,2007,2048,2048,1985,1964,1996,2048,2025,1906,1981,2048,2048,1863,1971,2048,2048,1876,1978,1871,1980,1871,2028,1914,2009,1904,2009,1874,2028,1871,1971,1866,1914,1937,1837,2009,2047,2048,1865,1981,2048,2048,1865,1980,2048,2048,1864,1980,2057,2055,1863,1973,2049,1863,1998,2053,1865,1996,1945,1982,2008,1919,1929,1938,1933,1933,1914,1961,1884,1976,2015,1907,1981,1877,1977,1863,1933,1909,1980,2048,1996,1959,1995,2048,1868,2029,1880,2030,1870,2030,1874,2033,1875,1976,1975,1986,1989,1906,1941,1905,1942,1907,1939,1910,1950,1901,1981,2010,2023,1878,2030,2035,2012,1987,1960,1952,1933,1960,1907,1979,1867,1994,1915,2008,2047,1875,1979,2005,1951,1989,1872,1975,2048,2028,1892,1977,2057,2024,1896,1984,2048,2048,1870,1976,2048,2048,1972,1986,2026,2048,2048,1898,2027,2048,2048,2048,1865,1977,2048,2048,1876,2029,2051,2056,1952,1979,1855,1972,2002,1894,2005,1995,1964,1965,1942,1937,1863,1980,1972,1959,1995,1984,1960,1995,2025,2020,2028,1919,1985,2033,2006,2012,1900,1979,1937,1981,2019,1898,1980,1866,1978,1876,1978,2049,1991,1953,1991,2039,1863,1973,2048,1868,1975,2048,1870,1938,1896,1966,1892,1970,1872,1975,1864,1975,1869,1976,1863,1980,1866,1975,2056,2048,2045,1896,1983,2048,2048,2028,1933,2002,1877,1976,2007,1938,1923,1939,1920,1946,1987,1876,1977,1888,2030,2046,1942,1979,2041,1947,1980,1949,1986,1953,1946,1997,2048,2048,2013,1939,1996,2048,2048,2015,1933,1996,2048,2048,2005,1946,1997,2048,2048,1965,1986,1977,1911,1941,1915,1919,1932,2012,1987,1960,1997,1931,2009,2023,1896,1983,1944,2004,2052,2048,2057,1865,1972,2048,2048,1998,1946,1997,2048,2048,1901,2005,2048,2048,2048,1863,1977,1865,1996,1865,1971,1866,1968,1875,1975,1951,1978,2049,1864,1970,2048,1877,1976,2048,1908,2005,1874,2029,1867,1978,1903,1928,1930,1914,1957,1836,2006,1864,1975,2050,2048,1869,2024,2056,2040,1871,2019,2017,1979,1933,1979,2016,1865,1998,1943,1979,2016,1915,1977,2020,2014,1871,2003,2026,2016,1980,1951,1955,1898,1977,1874,1975,1974,1976,1868,2028,1983,1989,1865,1995,2042,1901,1985,1994,1953,1997,2055,1990,1946,1993,2055,2002,1938,1941,1932,1872,1979,1995,1937,1965,1894,1938,1910,1937,1919,1923,1950,1900,1977,1816,1999,1894,1913,1932,1920,1985,1863,2004,2055,1944,1979,2050,1957,1976,2050,1940,2001,2052,1897,2006,2030,1932,2002,1866,1978,1972,1986,1992,1903,1982,2048,2048,2048,1871,2050,2048,2048,2048,1925,1879,2054,1884,1909,2052,1881,1850,2048,1877,1845,1991,1858,1977,2031,1861,2035,1848,2033,1850,1950,1852,1864,1856,1867,1839,1877,1803,1935,1826,1989,1968,1836,1977,1916,1823,1922,1981,1920,1969,1906,1877,1885,2023,1921,1972,1863,2014,1851,2026,1862,1884,1836,1890,1878,1961,1883,1953,1916,1812,1830,1885,1892,1827,1844,1866,1837,1879,1813,1910,1848,2025,1863,2019,1961,1875,1882,1843,2029,1852,2026,1763,1893,1997,2028,1858,1891,1842,1864,1839,2039,1791,1134,1188,1506,1503,1258,1621,1601,1203,1016,1210,1167,1151,1171,1146,1214,1475,1863,1935,1908,1939,1911,1857,1862,1926,1916,1897,1977,1844,2012,1870,1963,1896,1983,2057,2048,1863,1933,1906,1981,1879,2034,1862,1831,1172,1132,1231,1042,1859,1947,1900,1904,1946,1838,2009,1856,1957,1903,1917,1932,1887,1981,1856,2012,1873,1912,1906,1895,1965,1804,2029,1863,1977,2048,2052,1887,1976,2048,2043,1913,1982,2048,2048,1901,1981,2048,1981,1969,2004,2048,1870,1976,2048,2043,1910,1982,2048,1954,1977,2050,2048,1863,1975,1862,2015,1866,1965,1322,1336,1776,1276,1153,1677,1326,993],\"successes\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,0,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,0,0,0,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,0,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,1,1,1,0,0,1,0,0,0,1,0,1,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1,1,0,1,0,1,1,1,0,1,0,0,0,0,1,0,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,1,0,1,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,0,0,1,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1,0,1,1,1,1,0,1,1,0,0,1,0,1,1,0,0,1,0,1,1,1,0,1,1,1,0,1,1,0,1,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,0,1,0,1,0,1,1,1,0,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,0,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,0,0,1,1,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,0,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\n;\n            compressedData['data'] = byteArray;\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\n            Module['removeRunDependency']('datafile_/home/dasho/Desktop/EDGE-classic/web/site/edge-classic.data');\n      };\n      Module['addRunDependency']('datafile_/home/dasho/Desktop/EDGE-classic/web/site/edge-classic.data');\n\n      Module['preloadResults'] ??= {};\n\n        function preloadFallback(error) {\n          console.error(error);\n          console.error('falling back to default preload behavior');\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\n        };\n\n        openDatabase(\n          (db) => checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\n              (useCached, metadata) => {\n                Module['preloadResults'][PACKAGE_NAME] = {fromCache: useCached};\n                if (useCached) {\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\n                } else {\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\n                    (packageData) => {\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\n                        (error) => {\n                          console.error(error);\n                          processPackageData(packageData);\n                        });\n                    }\n                  , preloadFallback);\n                }\n              }, preloadFallback)\n        , preloadFallback);\n\n        Module['setStatus']?.('Downloading...');\n\n    }\n    if (Module['calledRun']) {\n      runWithFS(Module);\n    } else {\n      (Module['preRun'] ??= []).push(runWithFS); // FS is not initialized yet, wait for it\n    }\n\n    }\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/blasphem.wad\", \"start\": 0, \"end\": 23224248}, {\"filename\": \"/crosshairs/.gitignore\", \"start\": 23224248, \"end\": 23224248}, {\"filename\": \"/crosshairs/Angle.png\", \"start\": 23224248, \"end\": 23224433}, {\"filename\": \"/crosshairs/Carat.png\", \"start\": 23224433, \"end\": 23224727}, {\"filename\": \"/crosshairs/Circle.png\", \"start\": 23224727, \"end\": 23226111}, {\"filename\": \"/crosshairs/Cross.png\", \"start\": 23226111, \"end\": 23226452}, {\"filename\": \"/crosshairs/Dot.png\", \"start\": 23226452, \"end\": 23226645}, {\"filename\": \"/crosshairs/Double.png\", \"start\": 23226645, \"end\": 23227064}, {\"filename\": \"/crosshairs/Plus.png\", \"start\": 23227064, \"end\": 23227249}, {\"filename\": \"/crosshairs/Spiked.png\", \"start\": 23227249, \"end\": 23227436}, {\"filename\": \"/crosshairs/Thin.png\", \"start\": 23227436, \"end\": 23227702}, {\"filename\": \"/edge_base/blasphemer/graphics/ARTISOAR.png\", \"start\": 23227702, \"end\": 23228054}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 23228054, \"end\": 23229214}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 23229214, \"end\": 23233455}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 23233455, \"end\": 23237696}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK0.png\", \"start\": 23237696, \"end\": 23239192}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK1.png\", \"start\": 23239192, \"end\": 23240282}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK10.png\", \"start\": 23240282, \"end\": 23241233}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK11.png\", \"start\": 23241233, \"end\": 23242204}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK12.png\", \"start\": 23242204, \"end\": 23243476}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK13.png\", \"start\": 23243476, \"end\": 23244708}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK14.png\", \"start\": 23244708, \"end\": 23246248}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK15.png\", \"start\": 23246248, \"end\": 23247215}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK2.png\", \"start\": 23247215, \"end\": 23248275}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK3.png\", \"start\": 23248275, \"end\": 23248942}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK4.png\", \"start\": 23248942, \"end\": 23249506}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK5.png\", \"start\": 23249506, \"end\": 23250444}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK6.png\", \"start\": 23250444, \"end\": 23251779}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK7.png\", \"start\": 23251779, \"end\": 23252409}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK8.png\", \"start\": 23252409, \"end\": 23253825}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK9.png\", \"start\": 23253825, \"end\": 23254787}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 23254787, \"end\": 23256049}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 23256049, \"end\": 23301046}, {\"filename\": \"/edge_base/blasphemer/scripts/colmap.ddf\", \"start\": 23301046, \"end\": 23301329}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 23301329, \"end\": 23301992}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 23301992, \"end\": 23303076}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 23303076, \"end\": 23305914}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 23305914, \"end\": 23307743}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 23307743, \"end\": 23311594}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 23311594, \"end\": 23323805}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 23323805, \"end\": 23328376}, {\"filename\": \"/edge_base/blasphemer/scripts/lua/edge_hud.lua\", \"start\": 23328376, \"end\": 23347712}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 23347712, \"end\": 23349791}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 23349791, \"end\": 23362052}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 23362052, \"end\": 23365822}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 23365822, \"end\": 23376737}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 23376737, \"end\": 23381603}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 23381603, \"end\": 23381988}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 23381988, \"end\": 23466908}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 23466908, \"end\": 23478092}, {\"filename\": \"/edge_base/chex1/graphics/M_SKULL1.png\", \"start\": 23478092, \"end\": 23478659}, {\"filename\": \"/edge_base/chex1/graphics/M_SKULL2.png\", \"start\": 23478659, \"end\": 23479407}, {\"filename\": \"/edge_base/chex1/graphics/STBAR.lmp\", \"start\": 23479407, \"end\": 23502949}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT033.lmp\", \"start\": 23502949, \"end\": 23503066}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT034.lmp\", \"start\": 23503066, \"end\": 23503199}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT035.lmp\", \"start\": 23503199, \"end\": 23503450}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT036.lmp\", \"start\": 23503450, \"end\": 23503777}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT037.lmp\", \"start\": 23503777, \"end\": 23504040}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT038.lmp\", \"start\": 23504040, \"end\": 23504132}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT039.lmp\", \"start\": 23504132, \"end\": 23504290}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT040.lmp\", \"start\": 23504290, \"end\": 23504448}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT041.lmp\", \"start\": 23504448, \"end\": 23504608}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT042.lmp\", \"start\": 23504608, \"end\": 23504728}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT043.lmp\", \"start\": 23504728, \"end\": 23504803}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT044.lmp\", \"start\": 23504803, \"end\": 23504881}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT045.lmp\", \"start\": 23504881, \"end\": 23504955}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT046.lmp\", \"start\": 23504955, \"end\": 23505146}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT047.lmp\", \"start\": 23505146, \"end\": 23505373}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT048.lmp\", \"start\": 23505373, \"end\": 23505511}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT049.lmp\", \"start\": 23505511, \"end\": 23505755}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT050.lmp\", \"start\": 23505755, \"end\": 23506002}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT051.lmp\", \"start\": 23506002, \"end\": 23506208}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT052.lmp\", \"start\": 23506208, \"end\": 23506452}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT053.lmp\", \"start\": 23506452, \"end\": 23506691}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT054.lmp\", \"start\": 23506691, \"end\": 23506889}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT055.lmp\", \"start\": 23506889, \"end\": 23507116}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT056.lmp\", \"start\": 23507116, \"end\": 23507355}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT057.lmp\", \"start\": 23507355, \"end\": 23507443}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT058.lmp\", \"start\": 23507443, \"end\": 23507549}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT059.lmp\", \"start\": 23507549, \"end\": 23507710}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT060.lmp\", \"start\": 23507710, \"end\": 23507802}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT061.lmp\", \"start\": 23507802, \"end\": 23507963}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT062.lmp\", \"start\": 23507963, \"end\": 23508157}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT063.lmp\", \"start\": 23508157, \"end\": 23508378}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT064.lmp\", \"start\": 23508378, \"end\": 23508579}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT065.lmp\", \"start\": 23508579, \"end\": 23508782}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT066.lmp\", \"start\": 23508782, \"end\": 23509008}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT067.lmp\", \"start\": 23509008, \"end\": 23509204}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT068.lmp\", \"start\": 23509204, \"end\": 23509362}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT069.lmp\", \"start\": 23509362, \"end\": 23509587}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT070.lmp\", \"start\": 23509587, \"end\": 23509814}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT071.lmp\", \"start\": 23509814, \"end\": 23509925}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT072.lmp\", \"start\": 23509925, \"end\": 23510116}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT073.lmp\", \"start\": 23510116, \"end\": 23510322}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT074.lmp\", \"start\": 23510322, \"end\": 23510484}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT075.lmp\", \"start\": 23510484, \"end\": 23510772}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT076.lmp\", \"start\": 23510772, \"end\": 23510995}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT077.lmp\", \"start\": 23510995, \"end\": 23511218}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT078.lmp\", \"start\": 23511218, \"end\": 23511388}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT079.lmp\", \"start\": 23511388, \"end\": 23511617}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT080.lmp\", \"start\": 23511617, \"end\": 23511831}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT081.lmp\", \"start\": 23511831, \"end\": 23512035}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT082.lmp\", \"start\": 23512035, \"end\": 23512194}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT083.lmp\", \"start\": 23512194, \"end\": 23512415}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT084.lmp\", \"start\": 23512415, \"end\": 23512611}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT085.lmp\", \"start\": 23512611, \"end\": 23512928}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT086.lmp\", \"start\": 23512928, \"end\": 23513130}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT087.lmp\", \"start\": 23513130, \"end\": 23513300}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT088.lmp\", \"start\": 23513300, \"end\": 23513500}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT089.lmp\", \"start\": 23513500, \"end\": 23513718}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT090.lmp\", \"start\": 23513718, \"end\": 23513909}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT091.lmp\", \"start\": 23513909, \"end\": 23514127}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT092.lmp\", \"start\": 23514127, \"end\": 23514310}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT093.lmp\", \"start\": 23514310, \"end\": 23514390}, {\"filename\": \"/edge_base/chex1/graphics/chex_font/FONT094.lmp\", \"start\": 23514390, \"end\": 23514482}, {\"filename\": \"/edge_base/chex1/graphics/credit.lmp\", \"start\": 23514482, \"end\": 23633770}, {\"filename\": \"/edge_base/chex1/graphics/help1.lmp\", \"start\": 23633770, \"end\": 23753058}, {\"filename\": \"/edge_base/chex1/graphics/titlepic.lmp\", \"start\": 23753058, \"end\": 23872346}, {\"filename\": \"/edge_base/chex1/graphics/wimap0.lmp\", \"start\": 23872346, \"end\": 23991634}, {\"filename\": \"/edge_base/chex1/scripts/attacks.ddf\", \"start\": 23991634, \"end\": 23994836}, {\"filename\": \"/edge_base/chex1/scripts/fonts.ddf\", \"start\": 23994836, \"end\": 23995440}, {\"filename\": \"/edge_base/chex1/scripts/games.ddf\", \"start\": 23995440, \"end\": 23996473}, {\"filename\": \"/edge_base/chex1/scripts/language.ldf\", \"start\": 23996473, \"end\": 24002285}, {\"filename\": \"/edge_base/chex1/scripts/levels.ddf\", \"start\": 24002285, \"end\": 24005269}, {\"filename\": \"/edge_base/chex1/scripts/styles.ddf\", \"start\": 24005269, \"end\": 24008189}, {\"filename\": \"/edge_base/chex1/scripts/things.ddf\", \"start\": 24008189, \"end\": 24017307}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA1.lmp\", \"start\": 24017307, \"end\": 24018442}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA2A8.lmp\", \"start\": 24018442, \"end\": 24020111}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA3A7.lmp\", \"start\": 24020111, \"end\": 24022021}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA4A6.lmp\", \"start\": 24022021, \"end\": 24023687}, {\"filename\": \"/edge_base/chex1/sprites/DOGSA5.lmp\", \"start\": 24023687, \"end\": 24024806}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB1.lmp\", \"start\": 24024806, \"end\": 24025971}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB2B8.lmp\", \"start\": 24025971, \"end\": 24027659}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB3B7.lmp\", \"start\": 24027659, \"end\": 24029586}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB4B6.lmp\", \"start\": 24029586, \"end\": 24031292}, {\"filename\": \"/edge_base/chex1/sprites/DOGSB5.lmp\", \"start\": 24031292, \"end\": 24032406}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC1.lmp\", \"start\": 24032406, \"end\": 24033541}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC2C8.lmp\", \"start\": 24033541, \"end\": 24035210}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC3C7.lmp\", \"start\": 24035210, \"end\": 24037120}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC4C6.lmp\", \"start\": 24037120, \"end\": 24038786}, {\"filename\": \"/edge_base/chex1/sprites/DOGSC5.lmp\", \"start\": 24038786, \"end\": 24039905}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD1.lmp\", \"start\": 24039905, \"end\": 24041070}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD2D8.lmp\", \"start\": 24041070, \"end\": 24042758}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD3D7.lmp\", \"start\": 24042758, \"end\": 24044685}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD4D6.lmp\", \"start\": 24044685, \"end\": 24046391}, {\"filename\": \"/edge_base/chex1/sprites/DOGSD5.lmp\", \"start\": 24046391, \"end\": 24047505}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE1.lmp\", \"start\": 24047505, \"end\": 24048643}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE2E8.lmp\", \"start\": 24048643, \"end\": 24050418}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE3E7.lmp\", \"start\": 24050418, \"end\": 24052474}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE4E6.lmp\", \"start\": 24052474, \"end\": 24054238}, {\"filename\": \"/edge_base/chex1/sprites/DOGSE5.lmp\", \"start\": 24054238, \"end\": 24055466}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF1.lmp\", \"start\": 24055466, \"end\": 24056722}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF2F8.lmp\", \"start\": 24056722, \"end\": 24058689}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF3F7.lmp\", \"start\": 24058689, \"end\": 24060927}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF4F6.lmp\", \"start\": 24060927, \"end\": 24062836}, {\"filename\": \"/edge_base/chex1/sprites/DOGSF5.lmp\", \"start\": 24062836, \"end\": 24064189}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG1.lmp\", \"start\": 24064189, \"end\": 24065445}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG2G8.lmp\", \"start\": 24065445, \"end\": 24067412}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG3G7.lmp\", \"start\": 24067412, \"end\": 24069650}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG4G6.lmp\", \"start\": 24069650, \"end\": 24071559}, {\"filename\": \"/edge_base/chex1/sprites/DOGSG5.lmp\", \"start\": 24071559, \"end\": 24072912}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH1.lmp\", \"start\": 24072912, \"end\": 24074239}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH2H8.lmp\", \"start\": 24074239, \"end\": 24076127}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH3H7.lmp\", \"start\": 24076127, \"end\": 24078234}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH4H6.lmp\", \"start\": 24078234, \"end\": 24080110}, {\"filename\": \"/edge_base/chex1/sprites/DOGSH5.lmp\", \"start\": 24080110, \"end\": 24081511}, {\"filename\": \"/edge_base/chex1/sprites/DOGSI0.lmp\", \"start\": 24081511, \"end\": 24082845}, {\"filename\": \"/edge_base/chex1/sprites/DOGSJ0.lmp\", \"start\": 24082845, \"end\": 24084380}, {\"filename\": \"/edge_base/chex1/sprites/DOGSK0.lmp\", \"start\": 24084380, \"end\": 24086138}, {\"filename\": \"/edge_base/chex1/sprites/DOGSL0.lmp\", \"start\": 24086138, \"end\": 24087092}, {\"filename\": \"/edge_base/chex1/sprites/DOGSM0.lmp\", \"start\": 24087092, \"end\": 24087319}, {\"filename\": \"/edge_base/chex1/sprites/DOGSN0.lmp\", \"start\": 24087319, \"end\": 24087437}, {\"filename\": \"/edge_base/chex3v/graphics/BOSSBACK.lmp\", \"start\": 24087437, \"end\": 24206725}, {\"filename\": \"/edge_base/chex3v/graphics/CQ1TITLE.lmp\", \"start\": 24206725, \"end\": 24326013}, {\"filename\": \"/edge_base/chex3v/graphics/CQ2TITLE.lmp\", \"start\": 24326013, \"end\": 24445301}, {\"filename\": \"/edge_base/chex3v/graphics/ENDPIC.lmp\", \"start\": 24445301, \"end\": 24564589}, {\"filename\": \"/edge_base/chex3v/graphics/HELP.lmp\", \"start\": 24564589, \"end\": 24683877}, {\"filename\": \"/edge_base/chex3v/graphics/HELP2.lmp\", \"start\": 24683877, \"end\": 24803165}, {\"filename\": \"/edge_base/chex3v/graphics/INTERPIC.lmp\", \"start\": 24803165, \"end\": 24922453}, {\"filename\": \"/edge_base/chex3v/graphics/M_SKULL1.png\", \"start\": 24922453, \"end\": 24923020}, {\"filename\": \"/edge_base/chex3v/graphics/M_SKULL2.png\", \"start\": 24923020, \"end\": 24923768}, {\"filename\": \"/edge_base/chex3v/graphics/PFUB0.lmp\", \"start\": 24923768, \"end\": 25111216}, {\"filename\": \"/edge_base/chex3v/graphics/PFUB1.lmp\", \"start\": 25111216, \"end\": 25179384}, {\"filename\": \"/edge_base/chex3v/graphics/PFUB2.lmp\", \"start\": 25179384, \"end\": 25298672}, {\"filename\": \"/edge_base/chex3v/graphics/STBAR.lmp\", \"start\": 25298672, \"end\": 25321640}, {\"filename\": \"/edge_base/chex3v/graphics/VICTORY2.lmp\", \"start\": 25321640, \"end\": 25440928}, {\"filename\": \"/edge_base/chex3v/graphics/WIMAP1.lmp\", \"start\": 25440928, \"end\": 25560216}, {\"filename\": \"/edge_base/chex3v/graphics/WIMAP2.lmp\", \"start\": 25560216, \"end\": 25679504}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT033.lmp\", \"start\": 25679504, \"end\": 25679621}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT034.lmp\", \"start\": 25679621, \"end\": 25679754}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT035.lmp\", \"start\": 25679754, \"end\": 25680005}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT036.lmp\", \"start\": 25680005, \"end\": 25680332}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT037.lmp\", \"start\": 25680332, \"end\": 25680595}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT038.lmp\", \"start\": 25680595, \"end\": 25680687}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT039.lmp\", \"start\": 25680687, \"end\": 25680845}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT040.lmp\", \"start\": 25680845, \"end\": 25681003}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT041.lmp\", \"start\": 25681003, \"end\": 25681163}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT042.lmp\", \"start\": 25681163, \"end\": 25681283}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT043.lmp\", \"start\": 25681283, \"end\": 25681358}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT044.lmp\", \"start\": 25681358, \"end\": 25681436}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT045.lmp\", \"start\": 25681436, \"end\": 25681510}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT046.lmp\", \"start\": 25681510, \"end\": 25681701}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT047.lmp\", \"start\": 25681701, \"end\": 25681928}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT048.lmp\", \"start\": 25681928, \"end\": 25682066}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT049.lmp\", \"start\": 25682066, \"end\": 25682310}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT050.lmp\", \"start\": 25682310, \"end\": 25682557}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT051.lmp\", \"start\": 25682557, \"end\": 25682763}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT052.lmp\", \"start\": 25682763, \"end\": 25683007}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT053.lmp\", \"start\": 25683007, \"end\": 25683246}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT054.lmp\", \"start\": 25683246, \"end\": 25683444}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT055.lmp\", \"start\": 25683444, \"end\": 25683671}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT056.lmp\", \"start\": 25683671, \"end\": 25683910}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT057.lmp\", \"start\": 25683910, \"end\": 25683998}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT058.lmp\", \"start\": 25683998, \"end\": 25684104}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT059.lmp\", \"start\": 25684104, \"end\": 25684265}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT060.lmp\", \"start\": 25684265, \"end\": 25684357}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT061.lmp\", \"start\": 25684357, \"end\": 25684518}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT062.lmp\", \"start\": 25684518, \"end\": 25684712}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT063.lmp\", \"start\": 25684712, \"end\": 25684933}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT064.lmp\", \"start\": 25684933, \"end\": 25685134}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT065.lmp\", \"start\": 25685134, \"end\": 25685337}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT066.lmp\", \"start\": 25685337, \"end\": 25685563}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT067.lmp\", \"start\": 25685563, \"end\": 25685759}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT068.lmp\", \"start\": 25685759, \"end\": 25685917}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT069.lmp\", \"start\": 25685917, \"end\": 25686142}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT070.lmp\", \"start\": 25686142, \"end\": 25686369}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT071.lmp\", \"start\": 25686369, \"end\": 25686480}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT072.lmp\", \"start\": 25686480, \"end\": 25686671}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT073.lmp\", \"start\": 25686671, \"end\": 25686877}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT074.lmp\", \"start\": 25686877, \"end\": 25687039}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT075.lmp\", \"start\": 25687039, \"end\": 25687327}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT076.lmp\", \"start\": 25687327, \"end\": 25687550}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT077.lmp\", \"start\": 25687550, \"end\": 25687773}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT078.lmp\", \"start\": 25687773, \"end\": 25687943}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT079.lmp\", \"start\": 25687943, \"end\": 25688172}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT080.lmp\", \"start\": 25688172, \"end\": 25688386}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT081.lmp\", \"start\": 25688386, \"end\": 25688590}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT082.lmp\", \"start\": 25688590, \"end\": 25688749}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT083.lmp\", \"start\": 25688749, \"end\": 25688970}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT084.lmp\", \"start\": 25688970, \"end\": 25689166}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT085.lmp\", \"start\": 25689166, \"end\": 25689483}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT086.lmp\", \"start\": 25689483, \"end\": 25689685}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT087.lmp\", \"start\": 25689685, \"end\": 25689855}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT088.lmp\", \"start\": 25689855, \"end\": 25690055}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT089.lmp\", \"start\": 25690055, \"end\": 25690273}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT090.lmp\", \"start\": 25690273, \"end\": 25690464}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT091.lmp\", \"start\": 25690464, \"end\": 25690682}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT092.lmp\", \"start\": 25690682, \"end\": 25690865}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT093.lmp\", \"start\": 25690865, \"end\": 25690945}, {\"filename\": \"/edge_base/chex3v/graphics/chex_font/FONT094.lmp\", \"start\": 25690945, \"end\": 25691037}, {\"filename\": \"/edge_base/chex3v/graphics/credit.lmp\", \"start\": 25691037, \"end\": 25810325}, {\"filename\": \"/edge_base/chex3v/graphics/help1.lmp\", \"start\": 25810325, \"end\": 25929613}, {\"filename\": \"/edge_base/chex3v/graphics/titlepic.lmp\", \"start\": 25929613, \"end\": 26048901}, {\"filename\": \"/edge_base/chex3v/graphics/wimap0.lmp\", \"start\": 26048901, \"end\": 26168189}, {\"filename\": \"/edge_base/chex3v/scripts/UMAPINFO.txt\", \"start\": 26168189, \"end\": 26172081}, {\"filename\": \"/edge_base/chex3v/scripts/fonts.ddf\", \"start\": 26172081, \"end\": 26172685}, {\"filename\": \"/edge_base/chex3v/scripts/games.ddf\", \"start\": 26172685, \"end\": 26175100}, {\"filename\": \"/edge_base/chex3v/scripts/language.ldf\", \"start\": 26175100, \"end\": 26175813}, {\"filename\": \"/edge_base/chex3v/scripts/levels.ddf\", \"start\": 26175813, \"end\": 26181029}, {\"filename\": \"/edge_base/chex3v/scripts/rscript.rts\", \"start\": 26181029, \"end\": 26181404}, {\"filename\": \"/edge_base/chex3v/scripts/styles.ddf\", \"start\": 26181404, \"end\": 26184323}, {\"filename\": \"/edge_base/chex3v/scripts/things.ddf\", \"start\": 26184323, \"end\": 26186376}, {\"filename\": \"/edge_base/chex3vm/graphics/BOSSBACK.lmp\", \"start\": 26186376, \"end\": 26305664}, {\"filename\": \"/edge_base/chex3vm/graphics/CQ1TITLE.lmp\", \"start\": 26305664, \"end\": 26424952}, {\"filename\": \"/edge_base/chex3vm/graphics/CQ2TITLE.lmp\", \"start\": 26424952, \"end\": 26544240}, {\"filename\": \"/edge_base/chex3vm/graphics/CREDIT.lmp\", \"start\": 26544240, \"end\": 26663528}, {\"filename\": \"/edge_base/chex3vm/graphics/ENDPIC.lmp\", \"start\": 26663528, \"end\": 26782816}, {\"filename\": \"/edge_base/chex3vm/graphics/HELP.lmp\", \"start\": 26782816, \"end\": 26902104}, {\"filename\": \"/edge_base/chex3vm/graphics/HELP1.lmp\", \"start\": 26902104, \"end\": 27021392}, {\"filename\": \"/edge_base/chex3vm/graphics/HELP2.lmp\", \"start\": 27021392, \"end\": 27140680}, {\"filename\": \"/edge_base/chex3vm/graphics/INTERPIC.lmp\", \"start\": 27140680, \"end\": 27259968}, {\"filename\": \"/edge_base/chex3vm/graphics/M_SKULL1.png\", \"start\": 27259968, \"end\": 27260535}, {\"filename\": \"/edge_base/chex3vm/graphics/M_SKULL2.png\", \"start\": 27260535, \"end\": 27261283}, {\"filename\": \"/edge_base/chex3vm/graphics/PFUB0.lmp\", \"start\": 27261283, \"end\": 27448731}, {\"filename\": \"/edge_base/chex3vm/graphics/PFUB1.lmp\", \"start\": 27448731, \"end\": 27516899}, {\"filename\": \"/edge_base/chex3vm/graphics/PFUB2.lmp\", \"start\": 27516899, \"end\": 27636187}, {\"filename\": \"/edge_base/chex3vm/graphics/STBAR.lmp\", \"start\": 27636187, \"end\": 27659155}, {\"filename\": \"/edge_base/chex3vm/graphics/TITLEPIC.lmp\", \"start\": 27659155, \"end\": 27778443}, {\"filename\": \"/edge_base/chex3vm/graphics/VICTORY2.lmp\", \"start\": 27778443, \"end\": 27897731}, {\"filename\": \"/edge_base/chex3vm/graphics/WIMAP0.lmp\", \"start\": 27897731, \"end\": 28017019}, {\"filename\": \"/edge_base/chex3vm/graphics/WIMAP1.lmp\", \"start\": 28017019, \"end\": 28136307}, {\"filename\": \"/edge_base/chex3vm/graphics/WIMAP2.lmp\", \"start\": 28136307, \"end\": 28255595}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT033.lmp\", \"start\": 28255595, \"end\": 28255712}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT034.lmp\", \"start\": 28255712, \"end\": 28255845}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT035.lmp\", \"start\": 28255845, \"end\": 28256096}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT036.lmp\", \"start\": 28256096, \"end\": 28256423}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT037.lmp\", \"start\": 28256423, \"end\": 28256686}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT038.lmp\", \"start\": 28256686, \"end\": 28256778}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT039.lmp\", \"start\": 28256778, \"end\": 28256936}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT040.lmp\", \"start\": 28256936, \"end\": 28257094}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT041.lmp\", \"start\": 28257094, \"end\": 28257254}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT042.lmp\", \"start\": 28257254, \"end\": 28257374}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT043.lmp\", \"start\": 28257374, \"end\": 28257449}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT044.lmp\", \"start\": 28257449, \"end\": 28257527}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT045.lmp\", \"start\": 28257527, \"end\": 28257601}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT046.lmp\", \"start\": 28257601, \"end\": 28257792}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT047.lmp\", \"start\": 28257792, \"end\": 28258019}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT048.lmp\", \"start\": 28258019, \"end\": 28258157}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT049.lmp\", \"start\": 28258157, \"end\": 28258401}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT050.lmp\", \"start\": 28258401, \"end\": 28258648}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT051.lmp\", \"start\": 28258648, \"end\": 28258854}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT052.lmp\", \"start\": 28258854, \"end\": 28259098}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT053.lmp\", \"start\": 28259098, \"end\": 28259337}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT054.lmp\", \"start\": 28259337, \"end\": 28259535}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT055.lmp\", \"start\": 28259535, \"end\": 28259762}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT056.lmp\", \"start\": 28259762, \"end\": 28260001}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT057.lmp\", \"start\": 28260001, \"end\": 28260089}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT058.lmp\", \"start\": 28260089, \"end\": 28260195}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT059.lmp\", \"start\": 28260195, \"end\": 28260356}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT060.lmp\", \"start\": 28260356, \"end\": 28260448}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT061.lmp\", \"start\": 28260448, \"end\": 28260609}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT062.lmp\", \"start\": 28260609, \"end\": 28260803}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT063.lmp\", \"start\": 28260803, \"end\": 28261024}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT064.lmp\", \"start\": 28261024, \"end\": 28261225}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT065.lmp\", \"start\": 28261225, \"end\": 28261428}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT066.lmp\", \"start\": 28261428, \"end\": 28261654}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT067.lmp\", \"start\": 28261654, \"end\": 28261850}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT068.lmp\", \"start\": 28261850, \"end\": 28262008}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT069.lmp\", \"start\": 28262008, \"end\": 28262233}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT070.lmp\", \"start\": 28262233, \"end\": 28262460}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT071.lmp\", \"start\": 28262460, \"end\": 28262571}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT072.lmp\", \"start\": 28262571, \"end\": 28262762}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT073.lmp\", \"start\": 28262762, \"end\": 28262968}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT074.lmp\", \"start\": 28262968, \"end\": 28263130}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT075.lmp\", \"start\": 28263130, \"end\": 28263418}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT076.lmp\", \"start\": 28263418, \"end\": 28263641}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT077.lmp\", \"start\": 28263641, \"end\": 28263864}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT078.lmp\", \"start\": 28263864, \"end\": 28264034}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT079.lmp\", \"start\": 28264034, \"end\": 28264263}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT080.lmp\", \"start\": 28264263, \"end\": 28264477}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT081.lmp\", \"start\": 28264477, \"end\": 28264681}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT082.lmp\", \"start\": 28264681, \"end\": 28264840}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT083.lmp\", \"start\": 28264840, \"end\": 28265061}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT084.lmp\", \"start\": 28265061, \"end\": 28265257}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT085.lmp\", \"start\": 28265257, \"end\": 28265574}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT086.lmp\", \"start\": 28265574, \"end\": 28265776}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT087.lmp\", \"start\": 28265776, \"end\": 28265946}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT088.lmp\", \"start\": 28265946, \"end\": 28266146}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT089.lmp\", \"start\": 28266146, \"end\": 28266364}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT090.lmp\", \"start\": 28266364, \"end\": 28266555}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT091.lmp\", \"start\": 28266555, \"end\": 28266773}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT092.lmp\", \"start\": 28266773, \"end\": 28266956}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT093.lmp\", \"start\": 28266956, \"end\": 28267036}, {\"filename\": \"/edge_base/chex3vm/graphics/chex_font/FONT094.lmp\", \"start\": 28267036, \"end\": 28267128}, {\"filename\": \"/edge_base/chex3vm/scripts/fonts.ddf\", \"start\": 28267128, \"end\": 28267732}, {\"filename\": \"/edge_base/chex3vm/scripts/games.ddf\", \"start\": 28267732, \"end\": 28268612}, {\"filename\": \"/edge_base/chex3vm/scripts/language.ldf\", \"start\": 28268612, \"end\": 28269257}, {\"filename\": \"/edge_base/chex3vm/scripts/levels.ddf\", \"start\": 28269257, \"end\": 28276248}, {\"filename\": \"/edge_base/chex3vm/scripts/styles.ddf\", \"start\": 28276248, \"end\": 28279167}, {\"filename\": \"/edge_base/chex3vm/scripts/things.ddf\", \"start\": 28279167, \"end\": 28282183}, {\"filename\": \"/edge_base/doom/doom_wadfix.wad\", \"start\": 28282183, \"end\": 28282297}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 28282297, \"end\": 28401585}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 28401585, \"end\": 28520873}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 28520873, \"end\": 28640161}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 28640161, \"end\": 28759449}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 28759449, \"end\": 28878737}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 28878737, \"end\": 28998025}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 28998025, \"end\": 29117313}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 29117313, \"end\": 29236601}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 29236601, \"end\": 29265721}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 29265721, \"end\": 29294841}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 29294841, \"end\": 29323961}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 29323961, \"end\": 29329559}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 29329559, \"end\": 29335157}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 29335157, \"end\": 29340755}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 29340755, \"end\": 29353963}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 29353963, \"end\": 29367171}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 29367171, \"end\": 29380379}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 29380379, \"end\": 29499667}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 29499667, \"end\": 29618955}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 29618955, \"end\": 29738243}, {\"filename\": \"/edge_base/doom/scripts/games.ddf\", \"start\": 29738243, \"end\": 29738654}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 29738654, \"end\": 29740377}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 29740377, \"end\": 29755020}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 29755020, \"end\": 29778199}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 29778199, \"end\": 29801086}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 29801086, \"end\": 29823711}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 29823711, \"end\": 29850903}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 29850903, \"end\": 29873746}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 29873746, \"end\": 29890613}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 29890613, \"end\": 29917182}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 29917182, \"end\": 29944038}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 29944038, \"end\": 29971538}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 29971538, \"end\": 29995892}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 29995892, \"end\": 30022079}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 30022079, \"end\": 30034062}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 30034062, \"end\": 30053628}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 30053628, \"end\": 30073329}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 30073329, \"end\": 30093663}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 30093663, \"end\": 30118106}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 30118106, \"end\": 30137151}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 30137151, \"end\": 30175487}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 30175487, \"end\": 30188096}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 30188096, \"end\": 30199812}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 30199812, \"end\": 30211528}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 30211528, \"end\": 30249864}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 30249864, \"end\": 30262473}, {\"filename\": \"/edge_base/doom1/doom1_wadfix.wad\", \"start\": 30262473, \"end\": 30262587}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 30262587, \"end\": 30381875}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 30381875, \"end\": 30501163}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 30501163, \"end\": 30620451}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 30620451, \"end\": 30739739}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 30739739, \"end\": 30859027}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 30859027, \"end\": 30860759}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 30860759, \"end\": 30875402}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 30875402, \"end\": 30898581}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 30898581, \"end\": 30921468}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 30921468, \"end\": 30944093}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 30944093, \"end\": 30971285}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 30971285, \"end\": 30994128}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 30994128, \"end\": 31113416}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 31113416, \"end\": 31232704}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 31232704, \"end\": 31351992}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 31351992, \"end\": 31471280}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 31471280, \"end\": 31590568}, {\"filename\": \"/edge_base/doom2/scripts/games.ddf\", \"start\": 31590568, \"end\": 31590999}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 31590999, \"end\": 31592337}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 31592337, \"end\": 31613617}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 31613617, \"end\": 31631297}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 31631297, \"end\": 31648977}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 31648977, \"end\": 31666657}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 31666657, \"end\": 31687937}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 31687937, \"end\": 31705617}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 31705617, \"end\": 31719540}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 31719540, \"end\": 31744759}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 31744759, \"end\": 31769991}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 31769991, \"end\": 31795194}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 31795194, \"end\": 31819946}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 31819946, \"end\": 31845150}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 31845150, \"end\": 31928720}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 31928720, \"end\": 32023529}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 32023529, \"end\": 32122300}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 32122300, \"end\": 32221071}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 32221071, \"end\": 32407562}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 32407562, \"end\": 32502371}, {\"filename\": \"/edge_base/freedoom1/freedoom_wadfix.wad\", \"start\": 32502371, \"end\": 32502485}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 32502485, \"end\": 32505896}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 32505896, \"end\": 32509307}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 32509307, \"end\": 32509652}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 32509652, \"end\": 32509999}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 32509999, \"end\": 32510430}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 32510430, \"end\": 32510839}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 32510839, \"end\": 32511260}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 32511260, \"end\": 32511707}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 32511707, \"end\": 32512028}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 32512028, \"end\": 32512418}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 32512418, \"end\": 32512807}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 32512807, \"end\": 32513258}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 32513258, \"end\": 32513617}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 32513617, \"end\": 32513941}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 32513941, \"end\": 32514254}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 32514254, \"end\": 32514550}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 32514550, \"end\": 32514973}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 32514973, \"end\": 32515378}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 32515378, \"end\": 32515758}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 32515758, \"end\": 32516166}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 32516166, \"end\": 32516629}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 32516629, \"end\": 32517048}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 32517048, \"end\": 32517456}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 32517456, \"end\": 32517864}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 32517864, \"end\": 32518268}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 32518268, \"end\": 32518740}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 32518740, \"end\": 32519155}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 32519155, \"end\": 32519503}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 32519503, \"end\": 32519864}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 32519864, \"end\": 32520233}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 32520233, \"end\": 32520574}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 32520574, \"end\": 32520995}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 32520995, \"end\": 32521398}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 32521398, \"end\": 32521816}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 32521816, \"end\": 32522319}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 32522319, \"end\": 32522744}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 32522744, \"end\": 32523147}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 32523147, \"end\": 32523580}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 32523580, \"end\": 32523996}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 32523996, \"end\": 32524401}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 32524401, \"end\": 32524820}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 32524820, \"end\": 32525245}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 32525245, \"end\": 32525647}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 32525647, \"end\": 32526116}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 32526116, \"end\": 32526550}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 32526550, \"end\": 32526939}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 32526939, \"end\": 32527394}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 32527394, \"end\": 32527904}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 32527904, \"end\": 32528314}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 32528314, \"end\": 32528721}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 32528721, \"end\": 32529138}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 32529138, \"end\": 32529557}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 32529557, \"end\": 32529983}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 32529983, \"end\": 32530368}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 32530368, \"end\": 32530783}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 32530783, \"end\": 32531207}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 32531207, \"end\": 32531652}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 32531652, \"end\": 32532078}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 32532078, \"end\": 32532543}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 32532543, \"end\": 32532961}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 32532961, \"end\": 32533348}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 32533348, \"end\": 32533782}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 32533782, \"end\": 32534178}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 32534178, \"end\": 32534529}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 32534529, \"end\": 32534842}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 32534842, \"end\": 32535162}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 32535162, \"end\": 32535620}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 32535620, \"end\": 32536020}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 32536020, \"end\": 32536454}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 32536454, \"end\": 32536861}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 32536861, \"end\": 32537257}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 32537257, \"end\": 32537648}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 32537648, \"end\": 32538092}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 32538092, \"end\": 32538494}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 32538494, \"end\": 32538874}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 32538874, \"end\": 32539318}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 32539318, \"end\": 32539787}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 32539787, \"end\": 32540161}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 32540161, \"end\": 32540582}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 32540582, \"end\": 32540998}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 32540998, \"end\": 32541447}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 32541447, \"end\": 32541837}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 32541837, \"end\": 32542295}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 32542295, \"end\": 32542692}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 32542692, \"end\": 32543103}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 32543103, \"end\": 32543537}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 32543537, \"end\": 32543939}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 32543939, \"end\": 32544400}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 32544400, \"end\": 32544817}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 32544817, \"end\": 32545261}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 32545261, \"end\": 32545654}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 32545654, \"end\": 32546089}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 32546089, \"end\": 32546479}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 32546479, \"end\": 32546840}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 32546840, \"end\": 32547228}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 32547228, \"end\": 32547618}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 32547618, \"end\": 32567906}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 32567906, \"end\": 32568544}, {\"filename\": \"/edge_base/freedoom1/scripts/games.ddf\", \"start\": 32568544, \"end\": 32568955}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 32568955, \"end\": 32576151}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 32576151, \"end\": 32586988}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 32586988, \"end\": 32591916}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 32591916, \"end\": 32600234}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 32600234, \"end\": 32603645}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 32603645, \"end\": 32607056}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 32607056, \"end\": 32607401}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 32607401, \"end\": 32607748}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 32607748, \"end\": 32608179}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 32608179, \"end\": 32608588}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 32608588, \"end\": 32609009}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 32609009, \"end\": 32609456}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 32609456, \"end\": 32609777}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 32609777, \"end\": 32610167}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 32610167, \"end\": 32610556}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 32610556, \"end\": 32611007}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 32611007, \"end\": 32611366}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 32611366, \"end\": 32611690}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 32611690, \"end\": 32612003}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 32612003, \"end\": 32612299}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 32612299, \"end\": 32612722}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 32612722, \"end\": 32613127}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 32613127, \"end\": 32613507}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 32613507, \"end\": 32613915}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 32613915, \"end\": 32614378}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 32614378, \"end\": 32614797}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 32614797, \"end\": 32615205}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 32615205, \"end\": 32615613}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 32615613, \"end\": 32616017}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 32616017, \"end\": 32616489}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 32616489, \"end\": 32616904}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 32616904, \"end\": 32617252}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 32617252, \"end\": 32617613}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 32617613, \"end\": 32617982}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 32617982, \"end\": 32618323}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 32618323, \"end\": 32618744}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 32618744, \"end\": 32619147}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 32619147, \"end\": 32619565}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 32619565, \"end\": 32620068}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 32620068, \"end\": 32620493}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 32620493, \"end\": 32620896}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 32620896, \"end\": 32621329}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 32621329, \"end\": 32621745}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 32621745, \"end\": 32622150}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 32622150, \"end\": 32622569}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 32622569, \"end\": 32622994}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 32622994, \"end\": 32623396}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 32623396, \"end\": 32623865}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 32623865, \"end\": 32624299}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 32624299, \"end\": 32624688}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 32624688, \"end\": 32625143}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 32625143, \"end\": 32625653}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 32625653, \"end\": 32626063}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 32626063, \"end\": 32626470}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 32626470, \"end\": 32626887}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 32626887, \"end\": 32627306}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 32627306, \"end\": 32627732}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 32627732, \"end\": 32628117}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 32628117, \"end\": 32628532}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 32628532, \"end\": 32628956}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 32628956, \"end\": 32629401}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 32629401, \"end\": 32629827}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 32629827, \"end\": 32630292}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 32630292, \"end\": 32630710}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 32630710, \"end\": 32631097}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 32631097, \"end\": 32631531}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 32631531, \"end\": 32631927}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 32631927, \"end\": 32632278}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 32632278, \"end\": 32632591}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 32632591, \"end\": 32632911}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 32632911, \"end\": 32633369}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 32633369, \"end\": 32633769}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 32633769, \"end\": 32634203}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 32634203, \"end\": 32634610}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 32634610, \"end\": 32635006}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 32635006, \"end\": 32635397}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 32635397, \"end\": 32635841}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 32635841, \"end\": 32636243}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 32636243, \"end\": 32636623}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 32636623, \"end\": 32637067}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 32637067, \"end\": 32637536}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 32637536, \"end\": 32637910}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 32637910, \"end\": 32638331}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 32638331, \"end\": 32638747}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 32638747, \"end\": 32639196}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 32639196, \"end\": 32639586}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 32639586, \"end\": 32640044}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 32640044, \"end\": 32640441}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 32640441, \"end\": 32640852}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 32640852, \"end\": 32641286}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 32641286, \"end\": 32641688}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 32641688, \"end\": 32642149}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 32642149, \"end\": 32642566}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 32642566, \"end\": 32643010}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 32643010, \"end\": 32643403}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 32643403, \"end\": 32643838}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 32643838, \"end\": 32644228}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 32644228, \"end\": 32644589}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 32644589, \"end\": 32644977}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 32644977, \"end\": 32645367}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 32645367, \"end\": 32665655}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 32665655, \"end\": 32666293}, {\"filename\": \"/edge_base/freedoom2/scripts/games.ddf\", \"start\": 32666293, \"end\": 32666724}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 32666724, \"end\": 32673920}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 32673920, \"end\": 32684621}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 32684621, \"end\": 32689191}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 32689191, \"end\": 32697504}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 32697504, \"end\": 32816792}, {\"filename\": \"/edge_base/hacx/graphics/ENDOOM.bin\", \"start\": 32816792, \"end\": 32820792}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 32820792, \"end\": 32940080}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 32940080, \"end\": 33059368}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 33059368, \"end\": 33062779}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 33062779, \"end\": 33066190}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 33066190, \"end\": 33185478}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 33185478, \"end\": 33188413}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 33188413, \"end\": 33195587}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 33195587, \"end\": 33195855}, {\"filename\": \"/edge_base/hacx/scripts/flats.ddf\", \"start\": 33195855, \"end\": 33196235}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 33196235, \"end\": 33196862}, {\"filename\": \"/edge_base/hacx/scripts/games.ddf\", \"start\": 33196862, \"end\": 33197293}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 33197293, \"end\": 33202953}, {\"filename\": \"/edge_base/hacx/scripts/levels.ddf\", \"start\": 33202953, \"end\": 33207622}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 33207622, \"end\": 33208470}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 33208470, \"end\": 33209903}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 33209903, \"end\": 33212508}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 33212508, \"end\": 33215529}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 33215529, \"end\": 33299316}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 33299316, \"end\": 33304333}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 33304333, \"end\": 33319137}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 33319137, \"end\": 33334163}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 33334163, \"end\": 33348737}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 33348737, \"end\": 33355094}, {\"filename\": \"/edge_base/hacx/sprites/CRYXHRA0.lmp\", \"start\": 33355094, \"end\": 33356194}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 33356194, \"end\": 33396466}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 33396466, \"end\": 33431632}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 33431632, \"end\": 33464785}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 33464785, \"end\": 33501168}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 33501168, \"end\": 33532698}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 33532698, \"end\": 33567804}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 33567804, \"end\": 33591947}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 33591947, \"end\": 33621613}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 33621613, \"end\": 33632477}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 33632477, \"end\": 33645871}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 33645871, \"end\": 33660320}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 33660320, \"end\": 33674428}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 33674428, \"end\": 33683513}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 33683513, \"end\": 33692598}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 33692598, \"end\": 33708109}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 33708109, \"end\": 33723850}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 33723850, \"end\": 33739883}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 33739883, \"end\": 33756010}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 33756010, \"end\": 33772296}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 33772296, \"end\": 33788450}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 33788450, \"end\": 33804266}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 33804266, \"end\": 33819777}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 33819777, \"end\": 33835460}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 33835460, \"end\": 33851665}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 33851665, \"end\": 33860727}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 33860727, \"end\": 33870218}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 33870218, \"end\": 33878877}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 33878877, \"end\": 33891959}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 33891959, \"end\": 33911198}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 33911198, \"end\": 33929445}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 33929445, \"end\": 33933445}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 33933445, \"end\": 34024191}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 34024191, \"end\": 34114937}, {\"filename\": \"/edge_base/harmony/graphics/CWILV00.lmp\", \"start\": 34114937, \"end\": 34116987}, {\"filename\": \"/edge_base/harmony/graphics/CWILV01.lmp\", \"start\": 34116987, \"end\": 34119139}, {\"filename\": \"/edge_base/harmony/graphics/CWILV02.lmp\", \"start\": 34119139, \"end\": 34120917}, {\"filename\": \"/edge_base/harmony/graphics/CWILV03.lmp\", \"start\": 34120917, \"end\": 34123517}, {\"filename\": \"/edge_base/harmony/graphics/CWILV04.lmp\", \"start\": 34123517, \"end\": 34125608}, {\"filename\": \"/edge_base/harmony/graphics/CWILV05.lmp\", \"start\": 34125608, \"end\": 34129474}, {\"filename\": \"/edge_base/harmony/graphics/CWILV06.lmp\", \"start\": 34129474, \"end\": 34133062}, {\"filename\": \"/edge_base/harmony/graphics/CWILV07.lmp\", \"start\": 34133062, \"end\": 34135557}, {\"filename\": \"/edge_base/harmony/graphics/CWILV08.lmp\", \"start\": 34135557, \"end\": 34138396}, {\"filename\": \"/edge_base/harmony/graphics/CWILV09.lmp\", \"start\": 34138396, \"end\": 34142231}, {\"filename\": \"/edge_base/harmony/graphics/CWILV10.lmp\", \"start\": 34142231, \"end\": 34143849}, {\"filename\": \"/edge_base/harmony/graphics/CWILV11.lmp\", \"start\": 34143849, \"end\": 34145578}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 34145578, \"end\": 34234620}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 34234620, \"end\": 34325366}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 34325366, \"end\": 34328563}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 34328563, \"end\": 34329981}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 34329981, \"end\": 34332355}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 34332355, \"end\": 34333305}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 34333305, \"end\": 34335164}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 34335164, \"end\": 34336177}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 34336177, \"end\": 34337117}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 34337117, \"end\": 34338046}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 34338046, \"end\": 34338961}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 34338961, \"end\": 34339899}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 34339899, \"end\": 34343310}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 34343310, \"end\": 34346721}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 34346721, \"end\": 34435763}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 34435763, \"end\": 34435865}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 34435865, \"end\": 34435913}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 34435913, \"end\": 34437044}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 34437044, \"end\": 34437517}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 34437517, \"end\": 34437637}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 34437637, \"end\": 34438737}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 34438737, \"end\": 34438987}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 34438987, \"end\": 34439133}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 34439133, \"end\": 34439419}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 34439419, \"end\": 34439672}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 34439672, \"end\": 34439896}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 34439896, \"end\": 34440151}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 34440151, \"end\": 34440413}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 34440413, \"end\": 34440630}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 34440630, \"end\": 34440892}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 34440892, \"end\": 34441151}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 34441151, \"end\": 34441391}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 34441391, \"end\": 34442839}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 34442839, \"end\": 34444184}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 34444184, \"end\": 34445353}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 34445353, \"end\": 34446330}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 34446330, \"end\": 34446579}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 34446579, \"end\": 34448354}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 34448354, \"end\": 34450063}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 34450063, \"end\": 34450910}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 34450910, \"end\": 34451710}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 34451710, \"end\": 34459233}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 34459233, \"end\": 34459532}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 34459532, \"end\": 34459853}, {\"filename\": \"/edge_base/harmony/scripts/games.ddf\", \"start\": 34459853, \"end\": 34460284}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 34460284, \"end\": 34463885}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 34463885, \"end\": 34479265}, {\"filename\": \"/edge_base/harmony/scripts/lua/edge_hud.lua\", \"start\": 34479265, \"end\": 34482488}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 34482488, \"end\": 34483917}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 34483917, \"end\": 34486248}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 34486248, \"end\": 34553179}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 34553179, \"end\": 34556752}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 34556752, \"end\": 34558494}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 34558494, \"end\": 34561180}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 34561180, \"end\": 34562611}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 34562611, \"end\": 34564795}, {\"filename\": \"/edge_base/harmonyc/graphics/BOSSBACK.lmp\", \"start\": 34564795, \"end\": 34653837}, {\"filename\": \"/edge_base/harmonyc/graphics/CREDIT.lmp\", \"start\": 34653837, \"end\": 34742879}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV00.lmp\", \"start\": 34742879, \"end\": 34744929}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV01.lmp\", \"start\": 34744929, \"end\": 34747081}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV02.lmp\", \"start\": 34747081, \"end\": 34751100}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV03.lmp\", \"start\": 34751100, \"end\": 34753700}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV04.lmp\", \"start\": 34753700, \"end\": 34755791}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV05.lmp\", \"start\": 34755791, \"end\": 34759657}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV06.lmp\", \"start\": 34759657, \"end\": 34763245}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV07.lmp\", \"start\": 34763245, \"end\": 34765740}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV08.lmp\", \"start\": 34765740, \"end\": 34768574}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV09.lmp\", \"start\": 34768574, \"end\": 34772409}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV10.lmp\", \"start\": 34772409, \"end\": 34774027}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV11.lmp\", \"start\": 34774027, \"end\": 34775580}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV12.lmp\", \"start\": 34775580, \"end\": 34777230}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV13.lmp\", \"start\": 34777230, \"end\": 34779082}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV14.lmp\", \"start\": 34779082, \"end\": 34781398}, {\"filename\": \"/edge_base/harmonyc/graphics/CWILV30.lmp\", \"start\": 34781398, \"end\": 34783250}, {\"filename\": \"/edge_base/harmonyc/graphics/HELP.lmp\", \"start\": 34783250, \"end\": 34872292}, {\"filename\": \"/edge_base/harmonyc/graphics/INTERPIC.lmp\", \"start\": 34872292, \"end\": 34963038}, {\"filename\": \"/edge_base/harmonyc/graphics/M_EPISOD.lmp\", \"start\": 34963038, \"end\": 34966235}, {\"filename\": \"/edge_base/harmonyc/graphics/M_JKILL.lmp\", \"start\": 34966235, \"end\": 34967653}, {\"filename\": \"/edge_base/harmonyc/graphics/M_NEWG.lmp\", \"start\": 34967653, \"end\": 34970027}, {\"filename\": \"/edge_base/harmonyc/graphics/M_NGAME.lmp\", \"start\": 34970027, \"end\": 34970977}, {\"filename\": \"/edge_base/harmonyc/graphics/M_RDTHIS.lmp\", \"start\": 34970977, \"end\": 34972836}, {\"filename\": \"/edge_base/harmonyc/graphics/M_SAVEG.lmp\", \"start\": 34972836, \"end\": 34973849}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERML.lmp\", \"start\": 34973849, \"end\": 34973989}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERMM.lmp\", \"start\": 34973989, \"end\": 34974195}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERMO.lmp\", \"start\": 34974195, \"end\": 34974303}, {\"filename\": \"/edge_base/harmonyc/graphics/M_THERMR.lmp\", \"start\": 34974303, \"end\": 34974443}, {\"filename\": \"/edge_base/harmonyc/graphics/STBAR.lmp\", \"start\": 34974443, \"end\": 34991917}, {\"filename\": \"/edge_base/harmonyc/graphics/TITLEPIC.lmp\", \"start\": 34991917, \"end\": 35080959}, {\"filename\": \"/edge_base/harmonyc/graphics/WICOLON.lmp\", \"start\": 35080959, \"end\": 35081061}, {\"filename\": \"/edge_base/harmonyc/graphics/WIF.lmp\", \"start\": 35081061, \"end\": 35081109}, {\"filename\": \"/edge_base/harmonyc/graphics/WIFRGS.lmp\", \"start\": 35081109, \"end\": 35082240}, {\"filename\": \"/edge_base/harmonyc/graphics/WIKILRS.lmp\", \"start\": 35082240, \"end\": 35082713}, {\"filename\": \"/edge_base/harmonyc/graphics/WIMINUS.lmp\", \"start\": 35082713, \"end\": 35082833}, {\"filename\": \"/edge_base/harmonyc/graphics/WIMSTT.lmp\", \"start\": 35082833, \"end\": 35083933}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM0.lmp\", \"start\": 35083933, \"end\": 35084183}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM1.lmp\", \"start\": 35084183, \"end\": 35084329}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM2.lmp\", \"start\": 35084329, \"end\": 35084615}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM3.lmp\", \"start\": 35084615, \"end\": 35084868}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM4.lmp\", \"start\": 35084868, \"end\": 35085092}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM5.lmp\", \"start\": 35085092, \"end\": 35085347}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM6.lmp\", \"start\": 35085347, \"end\": 35085609}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM7.lmp\", \"start\": 35085609, \"end\": 35085826}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM8.lmp\", \"start\": 35085826, \"end\": 35086088}, {\"filename\": \"/edge_base/harmonyc/graphics/WINUM9.lmp\", \"start\": 35086088, \"end\": 35086347}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTF.lmp\", \"start\": 35086347, \"end\": 35086587}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTI.lmp\", \"start\": 35086587, \"end\": 35088035}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTK.lmp\", \"start\": 35088035, \"end\": 35089380}, {\"filename\": \"/edge_base/harmonyc/graphics/WIOSTS.lmp\", \"start\": 35089380, \"end\": 35090549}, {\"filename\": \"/edge_base/harmonyc/graphics/WIPAR.lmp\", \"start\": 35090549, \"end\": 35091526}, {\"filename\": \"/edge_base/harmonyc/graphics/WIPCNT.lmp\", \"start\": 35091526, \"end\": 35091775}, {\"filename\": \"/edge_base/harmonyc/graphics/WISCRT2.lmp\", \"start\": 35091775, \"end\": 35093550}, {\"filename\": \"/edge_base/harmonyc/graphics/WISUCKS.lmp\", \"start\": 35093550, \"end\": 35095259}, {\"filename\": \"/edge_base/harmonyc/graphics/WITIME.lmp\", \"start\": 35095259, \"end\": 35096106}, {\"filename\": \"/edge_base/harmonyc/graphics/WIVCTMS.lmp\", \"start\": 35096106, \"end\": 35096906}, {\"filename\": \"/edge_base/harmonyc/scripts/attacks.ddf\", \"start\": 35096906, \"end\": 35099793}, {\"filename\": \"/edge_base/harmonyc/scripts/colmap.ddf\", \"start\": 35099793, \"end\": 35100092}, {\"filename\": \"/edge_base/harmonyc/scripts/language.ldf\", \"start\": 35100092, \"end\": 35100834}, {\"filename\": \"/edge_base/harmonyc/scripts/levels.ddf\", \"start\": 35100834, \"end\": 35105377}, {\"filename\": \"/edge_base/harmonyc/scripts/lua/edge_hud.lua\", \"start\": 35105377, \"end\": 35110173}, {\"filename\": \"/edge_base/harmonyc/scripts/styles.ddf\", \"start\": 35110173, \"end\": 35112504}, {\"filename\": \"/edge_base/harmonyc/scripts/weapons.ddf\", \"start\": 35112504, \"end\": 35113147}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 35113147, \"end\": 35133661}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 35133661, \"end\": 35252949}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 35252949, \"end\": 35309373}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 35309373, \"end\": 35428661}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 35428661, \"end\": 35547949}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 35547949, \"end\": 35667237}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 35667237, \"end\": 35786525}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 35786525, \"end\": 35787216}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 35787216, \"end\": 35906504}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 35906504, \"end\": 36025792}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 36025792, \"end\": 36145080}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 36145080, \"end\": 36146240}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 36146240, \"end\": 36146989}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 36146989, \"end\": 36151230}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 36151230, \"end\": 36155471}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 36155471, \"end\": 36206094}, {\"filename\": \"/edge_base/heretic/graphics/_WIENTER.png\", \"start\": 36206094, \"end\": 36206993}, {\"filename\": \"/edge_base/heretic/graphics/_WIF.png\", \"start\": 36206993, \"end\": 36207739}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL00.png\", \"start\": 36207739, \"end\": 36208915}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL01.png\", \"start\": 36208915, \"end\": 36210124}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL02.png\", \"start\": 36210124, \"end\": 36211389}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL03.png\", \"start\": 36211389, \"end\": 36212701}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL04.png\", \"start\": 36212701, \"end\": 36214115}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL05.png\", \"start\": 36214115, \"end\": 36215429}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL06.png\", \"start\": 36215429, \"end\": 36216816}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL07.png\", \"start\": 36216816, \"end\": 36218090}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL08.png\", \"start\": 36218090, \"end\": 36219144}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL09.png\", \"start\": 36219144, \"end\": 36220142}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL10.png\", \"start\": 36220142, \"end\": 36221234}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL11.png\", \"start\": 36221234, \"end\": 36222491}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL12.png\", \"start\": 36222491, \"end\": 36223974}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL13.png\", \"start\": 36223974, \"end\": 36225324}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL14.png\", \"start\": 36225324, \"end\": 36226928}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL15.png\", \"start\": 36226928, \"end\": 36228429}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL16.png\", \"start\": 36228429, \"end\": 36229707}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL17.png\", \"start\": 36229707, \"end\": 36230939}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK0.png\", \"start\": 36230939, \"end\": 36231921}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK1.png\", \"start\": 36231921, \"end\": 36232797}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK10.png\", \"start\": 36232797, \"end\": 36233438}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK11.png\", \"start\": 36233438, \"end\": 36234082}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK12.png\", \"start\": 36234082, \"end\": 36234910}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK13.png\", \"start\": 36234910, \"end\": 36235866}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK14.png\", \"start\": 36235866, \"end\": 36237058}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK15.png\", \"start\": 36237058, \"end\": 36238078}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK2.png\", \"start\": 36238078, \"end\": 36238828}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK3.png\", \"start\": 36238828, \"end\": 36239382}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK4.png\", \"start\": 36239382, \"end\": 36240014}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK5.png\", \"start\": 36240014, \"end\": 36240647}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK6.png\", \"start\": 36240647, \"end\": 36241236}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK7.png\", \"start\": 36241236, \"end\": 36241739}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK8.png\", \"start\": 36241739, \"end\": 36242420}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK9.png\", \"start\": 36242420, \"end\": 36243004}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY0.png\", \"start\": 36243004, \"end\": 36244129}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY1.png\", \"start\": 36244129, \"end\": 36245235}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY10.png\", \"start\": 36245235, \"end\": 36246161}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY11.png\", \"start\": 36246161, \"end\": 36246867}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY12.png\", \"start\": 36246867, \"end\": 36247793}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY13.png\", \"start\": 36247793, \"end\": 36248913}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY14.png\", \"start\": 36248913, \"end\": 36250048}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY15.png\", \"start\": 36250048, \"end\": 36251221}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY2.png\", \"start\": 36251221, \"end\": 36252133}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY3.png\", \"start\": 36252133, \"end\": 36252833}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY4.png\", \"start\": 36252833, \"end\": 36253754}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY5.png\", \"start\": 36253754, \"end\": 36254856}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY6.png\", \"start\": 36254856, \"end\": 36255954}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY7.png\", \"start\": 36255954, \"end\": 36257068}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY8.png\", \"start\": 36257068, \"end\": 36258185}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY9.png\", \"start\": 36258185, \"end\": 36259290}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 36259290, \"end\": 36260926}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 36260926, \"end\": 36306875}, {\"filename\": \"/edge_base/heretic/scripts/colmap.ddf\", \"start\": 36306875, \"end\": 36307157}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 36307157, \"end\": 36307820}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 36307820, \"end\": 36308904}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 36308904, \"end\": 36311717}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 36311717, \"end\": 36314725}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 36314725, \"end\": 36324433}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 36324433, \"end\": 36337340}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 36337340, \"end\": 36341911}, {\"filename\": \"/edge_base/heretic/scripts/lua/edge_hud.lua\", \"start\": 36341911, \"end\": 36361252}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 36361252, \"end\": 36363331}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 36363331, \"end\": 36375594}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 36375594, \"end\": 36379364}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 36379364, \"end\": 36390279}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 36390279, \"end\": 36395532}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 36395532, \"end\": 36395957}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 36395957, \"end\": 36480877}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 36480877, \"end\": 36492061}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 36492061, \"end\": 36509191}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 36509191, \"end\": 36527237}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 36527237, \"end\": 36646525}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 36646525, \"end\": 36765813}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 36765813, \"end\": 36885101}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 36885101, \"end\": 37004389}, {\"filename\": \"/edge_base/plutonia/scripts/games.ddf\", \"start\": 37004389, \"end\": 37004820}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 37004820, \"end\": 37006155}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 37006155, \"end\": 37009224}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 37009224, \"end\": 37024255}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 37024255, \"end\": 37039251}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 37039251, \"end\": 37052330}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 37052330, \"end\": 37065409}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 37065409, \"end\": 37080440}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 37080440, \"end\": 37095436}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 37095436, \"end\": 37123371}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 37123371, \"end\": 37135011}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 37135011, \"end\": 37146920}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 37146920, \"end\": 37158829}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 37158829, \"end\": 37186764}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 37186764, \"end\": 37198404}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 37198404, \"end\": 37397154}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 37397154, \"end\": 37487747}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 37487747, \"end\": 37571131}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 37571131, \"end\": 37654515}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 37654515, \"end\": 37853265}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 37853265, \"end\": 37943858}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 37943858, \"end\": 37969149}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 37969149, \"end\": 37986619}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 37986619, \"end\": 37988758}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 37988758, \"end\": 37991517}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 37991517, \"end\": 37993704}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 37993704, \"end\": 37995821}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 37995821, \"end\": 37999096}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 37999096, \"end\": 38001144}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 38001144, \"end\": 38003578}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 38003578, \"end\": 38005415}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 38005415, \"end\": 38007483}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 38007483, \"end\": 38008728}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 38008728, \"end\": 38011297}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 38011297, \"end\": 38013517}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 38013517, \"end\": 38015737}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 38015737, \"end\": 38043829}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 38043829, \"end\": 38044417}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 38044417, \"end\": 38044999}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 38044999, \"end\": 38045594}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 38045594, \"end\": 38046182}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 38046182, \"end\": 38048556}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 38048556, \"end\": 38051967}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 38051967, \"end\": 38055378}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 38055378, \"end\": 38057303}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 38057303, \"end\": 38059084}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 38059084, \"end\": 38060683}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 38060683, \"end\": 38061699}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 38061699, \"end\": 38063726}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 38063726, \"end\": 38066293}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 38066293, \"end\": 38068008}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 38068008, \"end\": 38069736}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 38069736, \"end\": 38073120}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 38073120, \"end\": 38076624}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 38076624, \"end\": 38079467}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 38079467, \"end\": 38080846}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 38080846, \"end\": 38082482}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 38082482, \"end\": 38084802}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 38084802, \"end\": 38086012}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 38086012, \"end\": 38088709}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 38088709, \"end\": 38091796}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 38091796, \"end\": 38093437}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 38093437, \"end\": 38095325}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 38095325, \"end\": 38096512}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 38096512, \"end\": 38098473}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 38098473, \"end\": 38101589}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 38101589, \"end\": 38103350}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 38103350, \"end\": 38106209}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 38106209, \"end\": 38107922}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 38107922, \"end\": 38110186}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 38110186, \"end\": 38111419}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 38111419, \"end\": 38112162}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 38112162, \"end\": 38115940}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 38115940, \"end\": 38117792}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 38117792, \"end\": 38119430}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 38119430, \"end\": 38120552}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 38120552, \"end\": 38122891}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 38122891, \"end\": 38124894}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 38124894, \"end\": 38127028}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 38127028, \"end\": 38130094}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 38130094, \"end\": 38132089}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 38132089, \"end\": 38133949}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 38133949, \"end\": 38134211}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 38134211, \"end\": 38135417}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 38135417, \"end\": 38136482}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 38136482, \"end\": 38137512}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 38137512, \"end\": 38138274}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 38138274, \"end\": 38139841}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 38139841, \"end\": 38140755}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 38140755, \"end\": 38140889}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 38140889, \"end\": 38141582}, {\"filename\": \"/edge_base/rekkr/scripts/fonts.ddf\", \"start\": 38141582, \"end\": 38141825}, {\"filename\": \"/edge_base/rekkr/scripts/games.ddf\", \"start\": 38141825, \"end\": 38142236}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 38142236, \"end\": 38149945}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 38149945, \"end\": 38151459}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 38151459, \"end\": 38155587}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 38155587, \"end\": 38157757}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 38157757, \"end\": 38159622}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 38159622, \"end\": 38160247}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 38160247, \"end\": 38161222}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 38161222, \"end\": 38162197}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 38162197, \"end\": 38163172}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 38163172, \"end\": 38163803}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 38163803, \"end\": 38164386}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 38164386, \"end\": 38165353}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 38165353, \"end\": 38166320}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 38166320, \"end\": 38167287}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 38167287, \"end\": 38167869}, {\"filename\": \"/edge_base/strife/games.ddf\", \"start\": 38167869, \"end\": 38168689}, {\"filename\": \"/edge_base/strife/images.ddf\", \"start\": 38168689, \"end\": 38169025}, {\"filename\": \"/edge_base/strife/playlist.ddf\", \"start\": 38169025, \"end\": 38169999}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 38169999, \"end\": 38289287}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 38289287, \"end\": 38408575}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 38408575, \"end\": 38527863}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 38527863, \"end\": 38647151}, {\"filename\": \"/edge_base/tnt/scripts/games.ddf\", \"start\": 38647151, \"end\": 38647582}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 38647582, \"end\": 38648919}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 38648919, \"end\": 38652275}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 38652275, \"end\": 38668268}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 38668268, \"end\": 38687734}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 38687734, \"end\": 38705160}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 38705160, \"end\": 38721067}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 38721067, \"end\": 38761185}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 38761185, \"end\": 38780509}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 38780509, \"end\": 38781820}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 38781820, \"end\": 38786343}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 38786343, \"end\": 38787572}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 38787572, \"end\": 38793789}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 38793789, \"end\": 38797916}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 38797916, \"end\": 38799458}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 38799458, \"end\": 38823929}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 38823929, \"end\": 38831631}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 38831631, \"end\": 38839510}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 38839510, \"end\": 38846858}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 38846858, \"end\": 38871329}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 38871329, \"end\": 38878670}, {\"filename\": \"/edge_defs/SNDFONT.sf3\", \"start\": 38878670, \"end\": 41236840}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 41236840, \"end\": 41237352}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 41237352, \"end\": 41246056}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 41246056, \"end\": 41246312}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 41246312, \"end\": 41250152}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 41250152, \"end\": 41251688}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 41251688, \"end\": 41251944}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 41251944, \"end\": 41253224}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 41253224, \"end\": 41261928}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 41261928, \"end\": 41263720}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 41263720, \"end\": 41265000}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 41265000, \"end\": 41266280}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 41266280, \"end\": 41267560}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 41267560, \"end\": 41268840}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 41268840, \"end\": 41270120}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 41270120, \"end\": 41271400}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 41271400, \"end\": 41272680}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 41272680, \"end\": 41273960}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 41273960, \"end\": 41275240}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 41275240, \"end\": 41276520}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 41276520, \"end\": 41277800}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 41277800, \"end\": 41279080}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 41279080, \"end\": 41287784}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 41287784, \"end\": 41354672}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 41354672, \"end\": 41369015}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 41369015, \"end\": 41536614}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 41536614, \"end\": 41603502}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 41603502, \"end\": 41610606}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 41610606, \"end\": 41655237}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 41655237, \"end\": 41655420}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 41655420, \"end\": 41656564}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 41656564, \"end\": 41659594}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 41659594, \"end\": 41663005}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 41663005, \"end\": 41666416}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 41666416, \"end\": 41666560}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 41666560, \"end\": 41666702}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 41666702, \"end\": 41666829}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 41666829, \"end\": 41666964}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 41666964, \"end\": 41669561}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 41669561, \"end\": 41670969}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 41670969, \"end\": 41672377}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 41672377, \"end\": 41673785}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 41673785, \"end\": 41675193}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 41675193, \"end\": 41676601}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 41676601, \"end\": 41678009}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 41678009, \"end\": 41679417}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 41679417, \"end\": 41680825}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 41680825, \"end\": 41680945}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 41680945, \"end\": 41681065}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 41681065, \"end\": 41681185}, {\"filename\": \"/edge_defs/graphics/STKEYS9.PNG\", \"start\": 41681185, \"end\": 41681369}, {\"filename\": \"/edge_defs/graphics/STKEYSA.PNG\", \"start\": 41681369, \"end\": 41681621}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 41681621, \"end\": 41683099}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 41683099, \"end\": 41684577}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 41684577, \"end\": 41686055}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 41686055, \"end\": 41687533}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 41687533, \"end\": 41689011}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 41689011, \"end\": 41690489}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 41690489, \"end\": 41691967}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 41691967, \"end\": 41693445}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 41693445, \"end\": 41693802}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 41693802, \"end\": 41694147}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 41694147, \"end\": 41694503}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 41694503, \"end\": 41694851}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 41694851, \"end\": 41695190}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 41695190, \"end\": 41695508}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 41695508, \"end\": 41695858}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 41695858, \"end\": 41696214}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 41696214, \"end\": 41696493}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 41696493, \"end\": 41696818}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 41696818, \"end\": 41697187}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 41697187, \"end\": 41697511}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 41697511, \"end\": 41697877}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 41697877, \"end\": 41698233}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 41698233, \"end\": 41698606}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 41698606, \"end\": 41698940}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 41698940, \"end\": 41699315}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 41699315, \"end\": 41699673}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 41699673, \"end\": 41700024}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 41700024, \"end\": 41700343}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 41700343, \"end\": 41700689}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 41700689, \"end\": 41701018}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 41701018, \"end\": 41701373}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 41701373, \"end\": 41701724}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 41701724, \"end\": 41702073}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 41702073, \"end\": 41702411}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 41702411, \"end\": 41702700}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 41702700, \"end\": 41703014}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 41703014, \"end\": 41703257}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 41703257, \"end\": 41703500}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 41703500, \"end\": 41703766}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 41703766, \"end\": 41703999}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 41703999, \"end\": 41704337}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 41704337, \"end\": 41704630}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 41704630, \"end\": 41704968}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 41704968, \"end\": 41705297}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 41705297, \"end\": 41705626}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 41705626, \"end\": 41705959}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 41705959, \"end\": 41706295}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 41706295, \"end\": 41706592}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 41706592, \"end\": 41706932}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 41706932, \"end\": 41707272}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 41707272, \"end\": 41707507}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 41707507, \"end\": 41707827}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 41707827, \"end\": 41708111}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 41708111, \"end\": 41708441}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 41708441, \"end\": 41708779}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 41708779, \"end\": 41709094}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 41709094, \"end\": 41709423}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 41709423, \"end\": 41709745}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 41709745, \"end\": 41710062}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 41710062, \"end\": 41710401}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 41710401, \"end\": 41710721}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 41710721, \"end\": 41710995}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 41710995, \"end\": 41711302}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 41711302, \"end\": 41711647}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 41711647, \"end\": 41711945}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 41711945, \"end\": 41712299}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 41712299, \"end\": 41712638}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 41712638, \"end\": 41712977}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 41712977, \"end\": 41713301}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 41713301, \"end\": 41713641}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 41713641, \"end\": 41713966}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 41713966, \"end\": 41714305}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 41714305, \"end\": 41714611}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 41714611, \"end\": 41714945}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 41714945, \"end\": 41715277}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 41715277, \"end\": 41715625}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 41715625, \"end\": 41715966}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 41715966, \"end\": 41716291}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 41716291, \"end\": 41716623}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 41716623, \"end\": 41716952}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 41716952, \"end\": 41717186}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 41717186, \"end\": 41717432}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 41717432, \"end\": 41717758}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 41717758, \"end\": 41718045}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 41718045, \"end\": 41718363}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 41718363, \"end\": 41718683}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 41718683, \"end\": 41718994}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 41718994, \"end\": 41719311}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 41719311, \"end\": 41719626}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 41719626, \"end\": 41719928}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 41719928, \"end\": 41720256}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 41720256, \"end\": 41720588}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 41720588, \"end\": 41720836}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 41720836, \"end\": 41721087}, {\"filename\": \"/edge_defs/movies/ECINTRO.mpg\", \"start\": 41721087, \"end\": 42398975}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 42398975, \"end\": 42401003}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 42401003, \"end\": 42425244}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 42425244, \"end\": 42440118}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 42440118, \"end\": 42457178}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 42457178, \"end\": 42461356}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 42461356, \"end\": 42466633}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 42466633, \"end\": 42468094}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 42468094, \"end\": 42472509}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 42472509, \"end\": 42491986}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 42491986, \"end\": 42600385}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 42600385, \"end\": 42615682}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 42615682, \"end\": 42709540}, {\"filename\": \"/edge_defs/scripts/lua/core/base64.lua\", \"start\": 42709540, \"end\": 42716719}, {\"filename\": \"/edge_defs/scripts/lua/core/debugger.lua\", \"start\": 42716719, \"end\": 42738137}, {\"filename\": \"/edge_defs/scripts/lua/core/json.lua\", \"start\": 42738137, \"end\": 42747774}, {\"filename\": \"/edge_defs/scripts/lua/core/mat2.lua\", \"start\": 42747774, \"end\": 42752461}, {\"filename\": \"/edge_defs/scripts/lua/core/mat3.lua\", \"start\": 42752461, \"end\": 42760763}, {\"filename\": \"/edge_defs/scripts/lua/core/mat4.lua\", \"start\": 42760763, \"end\": 42773867}, {\"filename\": \"/edge_defs/scripts/lua/core/mat4Extended.lua\", \"start\": 42773867, \"end\": 42777742}, {\"filename\": \"/edge_defs/scripts/lua/core/quat.lua\", \"start\": 42777742, \"end\": 42781618}, {\"filename\": \"/edge_defs/scripts/lua/core/vec2.lua\", \"start\": 42781618, \"end\": 42784584}, {\"filename\": \"/edge_defs/scripts/lua/core/vec3.lua\", \"start\": 42784584, \"end\": 42788108}, {\"filename\": \"/edge_defs/scripts/lua/core/vec4.lua\", \"start\": 42788108, \"end\": 42791980}, {\"filename\": \"/edge_defs/scripts/lua/edge_api.lua\", \"start\": 42791980, \"end\": 42800738}, {\"filename\": \"/edge_defs/scripts/lua/edge_hud.lua\", \"start\": 42800738, \"end\": 42819022}, {\"filename\": \"/edge_defs/scripts/movies.ddf\", \"start\": 42819022, \"end\": 42819072}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 42819072, \"end\": 42821890}, {\"filename\": \"/edge_defs/scripts/reverbs.ddf\", \"start\": 42821890, \"end\": 42822023}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 42822023, \"end\": 42823626}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 42823626, \"end\": 42841675}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 42841675, \"end\": 42854992}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 42854992, \"end\": 42861069}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 42861069, \"end\": 42865120}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 42865120, \"end\": 42998047}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 42998047, \"end\": 42998741}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 42998741, \"end\": 43004225}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 43004225, \"end\": 43004308}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 43004308, \"end\": 43004354}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 43004354, \"end\": 43004395}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 43004395, \"end\": 43004583}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 43004583, \"end\": 43004682}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 43004682, \"end\": 43004771}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 43004771, \"end\": 43004860}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 43004860, \"end\": 43004971}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 43004971, \"end\": 43005082}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 43005082, \"end\": 43005118}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 43005118, \"end\": 43005397}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 43005397, \"end\": 43005442}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 43005442, \"end\": 43005480}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 43005480, \"end\": 43005614}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 43005614, \"end\": 43005726}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 43005726, \"end\": 43005834}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 43005834, \"end\": 43005890}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 43005890, \"end\": 43005981}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 43005981, \"end\": 43006120}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 43006120, \"end\": 43006165}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 43006165, \"end\": 43006254}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 43006254, \"end\": 43006366}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 43006366, \"end\": 43006412}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 43006412, \"end\": 43006549}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 43006549, \"end\": 43006698}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 43006698, \"end\": 43006709}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 43006709, \"end\": 43006720}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 43006720, \"end\": 43006731}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 43006731, \"end\": 43006758}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 43006758, \"end\": 43006799}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 43006799, \"end\": 43006870}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 43006870, \"end\": 43006943}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 43006943, \"end\": 43006986}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 43006986, \"end\": 43007021}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 43007021, \"end\": 43007038}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 43007038, \"end\": 43007115}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 43007115, \"end\": 43007129}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 43007129, \"end\": 43007266}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 43007266, \"end\": 43007346}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 43007346, \"end\": 43007433}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 43007433, \"end\": 43007518}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 43007518, \"end\": 43007624}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 43007624, \"end\": 43007680}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 43007680, \"end\": 43007803}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 43007803, \"end\": 43007869}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 43007869, \"end\": 43007935}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 43007935, \"end\": 43008013}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 43008013, \"end\": 43008110}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 43008110, \"end\": 43008129}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 43008129, \"end\": 43008189}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 43008189, \"end\": 43008230}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 43008230, \"end\": 43008249}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 43008249, \"end\": 43008327}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 43008327, \"end\": 43008436}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 43008436, \"end\": 43008486}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 43008486, \"end\": 43008603}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 43008603, \"end\": 43008621}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 43008621, \"end\": 43008663}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 43008663, \"end\": 43008812}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 43008812, \"end\": 43008842}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 43008842, \"end\": 43008931}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 43008931, \"end\": 43009020}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 43009020, \"end\": 43009109}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 43009109, \"end\": 43009147}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 43009147, \"end\": 43009177}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 43009177, \"end\": 43009288}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 43009288, \"end\": 43009399}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 43009399, \"end\": 43009510}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 43009510, \"end\": 43009551}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 43009551, \"end\": 43009568}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 43009568, \"end\": 43009605}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 43009605, \"end\": 43009657}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 43009657, \"end\": 43009720}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 43009720, \"end\": 43009892}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 43009892, \"end\": 43009920}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 43009920, \"end\": 43009948}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 43009948, \"end\": 43009953}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 43009953, \"end\": 43010041}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 43010041, \"end\": 43010104}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 43010104, \"end\": 43010178}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 43010178, \"end\": 43010267}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 43010267, \"end\": 43010378}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 43010378, \"end\": 43010420}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 43010420, \"end\": 43010460}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 43010460, \"end\": 43010519}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 43010519, \"end\": 43010599}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 43010599, \"end\": 43010636}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 43010636, \"end\": 43010742}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 43010742, \"end\": 43010782}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 43010782, \"end\": 43010862}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 43010862, \"end\": 43010879}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 43010879, \"end\": 43010988}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 43010988, \"end\": 43011101}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 43011101, \"end\": 43011249}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 43011249, \"end\": 43011338}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 43011338, \"end\": 43011449}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 43011449, \"end\": 43011457}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 43011457, \"end\": 43011485}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 43011485, \"end\": 43011514}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 43011514, \"end\": 43011616}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 43011616, \"end\": 43011668}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 43011668, \"end\": 43011723}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 43011723, \"end\": 43011786}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 43011786, \"end\": 43012054}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 43012054, \"end\": 43012130}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 43012130, \"end\": 43012241}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 43012241, \"end\": 43012285}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 43012285, \"end\": 43019835, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 43019835, \"end\": 43026853}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 43026853, \"end\": 43034514, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 43034514, \"end\": 43041320, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 43041320, \"end\": 43052136, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 43052136, \"end\": 43058128, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 43058128, \"end\": 43064291, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 43064291, \"end\": 43079635, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 43079635, \"end\": 43095107, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 43095107, \"end\": 43107347, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 43107347, \"end\": 43122713, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 43122713, \"end\": 43155311, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 43155311, \"end\": 43171899}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 43171899, \"end\": 43175821}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 43175821, \"end\": 43178788}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 43178788, \"end\": 43180205}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 43180205, \"end\": 43188025}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 43188025, \"end\": 43194099, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 43194099, \"end\": 43206940, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 43206940, \"end\": 43214601, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 43214601, \"end\": 43237077, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 43237077, \"end\": 43257432, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/ARM3A0.png\", \"start\": 43257432, \"end\": 43258182}, {\"filename\": \"/edge_defs/sprites/ARM3B0.png\", \"start\": 43258182, \"end\": 43258860}, {\"filename\": \"/edge_defs/sprites/ARM4A0.png\", \"start\": 43258860, \"end\": 43259654}, {\"filename\": \"/edge_defs/sprites/ARM4B0.png\", \"start\": 43259654, \"end\": 43260355}, {\"filename\": \"/edge_defs/sprites/ARM5A0.png\", \"start\": 43260355, \"end\": 43260858}, {\"filename\": \"/edge_defs/sprites/ARM5B0.png\", \"start\": 43260858, \"end\": 43261373}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 43261373, \"end\": 43262589}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 43262589, \"end\": 43263810}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 43263810, \"end\": 43265020}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 43265020, \"end\": 43266221}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 43266221, \"end\": 43267502}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 43267502, \"end\": 43268845}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 43268845, \"end\": 43270249}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 43270249, \"end\": 43271594}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 43271594, \"end\": 43272901}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 43272901, \"end\": 43274168}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 43274168, \"end\": 43275405}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 43275405, \"end\": 43275499}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 43275499, \"end\": 43275713}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 43275713, \"end\": 43276017}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 43276017, \"end\": 43276385}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 43276385, \"end\": 43276780}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 43276780, \"end\": 43277216}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 43277216, \"end\": 43277686}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 43277686, \"end\": 43278118}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 43278118, \"end\": 43278481}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 43278481, \"end\": 43279297}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 43279297, \"end\": 43280115}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 43280115, \"end\": 43280933}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 43280933, \"end\": 43282231}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 43282231, \"end\": 43283614}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 43283614, \"end\": 43284968}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 43284968, \"end\": 43286268}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 43286268, \"end\": 43287537}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 43287537, \"end\": 43288760}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 43288760, \"end\": 43289970}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 43289970, \"end\": 43291182}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 43291182, \"end\": 43292373}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 43292373, \"end\": 43293558}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 43293558, \"end\": 43294809}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 43294809, \"end\": 43296050}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 43296050, \"end\": 43297299}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 43297299, \"end\": 43298521}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 43298521, \"end\": 43299125}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 43299125, \"end\": 43299729}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 43299729, \"end\": 43300652}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 43300652, \"end\": 43301868}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 43301868, \"end\": 43303263}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 43303263, \"end\": 43304392}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 43304392, \"end\": 43305194}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 43305194, \"end\": 43306142}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 43306142, \"end\": 43307370}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 43307370, \"end\": 43308756}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 43308756, \"end\": 43309894}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 43309894, \"end\": 43310691}, {\"filename\": \"/edge_defs/sprites/PLS1A0.lmp\", \"start\": 43310691, \"end\": 43311076}, {\"filename\": \"/edge_defs/sprites/PLS1B0.lmp\", \"start\": 43311076, \"end\": 43311475}, {\"filename\": \"/edge_defs/sprites/PLS1C0.lmp\", \"start\": 43311475, \"end\": 43311860}, {\"filename\": \"/edge_defs/sprites/PLS1D0.lmp\", \"start\": 43311860, \"end\": 43312259}, {\"filename\": \"/edge_defs/sprites/PLS1E0.lmp\", \"start\": 43312259, \"end\": 43314617}, {\"filename\": \"/edge_defs/sprites/PLS1F0.lmp\", \"start\": 43314617, \"end\": 43316975}, {\"filename\": \"/edge_defs/sprites/PLS1G0.lmp\", \"start\": 43316975, \"end\": 43319202}, {\"filename\": \"/edge_defs/sprites/PLS2A0.lmp\", \"start\": 43319202, \"end\": 43319418}, {\"filename\": \"/edge_defs/sprites/PLS2B0.lmp\", \"start\": 43319418, \"end\": 43319661}, {\"filename\": \"/edge_defs/sprites/PLS2C0.lmp\", \"start\": 43319661, \"end\": 43319873}, {\"filename\": \"/edge_defs/sprites/PLS2D0.lmp\", \"start\": 43319873, \"end\": 43320263}, {\"filename\": \"/edge_defs/sprites/PLS2E0.lmp\", \"start\": 43320263, \"end\": 43320957}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 43320957, \"end\": 43321829}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 43321829, \"end\": 43322701}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 43322701, \"end\": 43322830}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 43322830, \"end\": 43324046}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 43324046, \"end\": 43325264}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 43325264, \"end\": 43326460}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 43326460, \"end\": 43327647}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 43327647, \"end\": 43328898}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 43328898, \"end\": 43330139}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 43330139, \"end\": 43331388}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 43331388, \"end\": 43332610}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 43332610, \"end\": 43333811}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 43333811, \"end\": 43335016}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 43335016, \"end\": 43336203}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 43336203, \"end\": 43337381}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 43337381, \"end\": 43338626}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 43338626, \"end\": 43339862}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 43339862, \"end\": 43341107}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 43341107, \"end\": 43342323}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 43342323, \"end\": 43343540}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 43343540, \"end\": 43344760}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 43344760, \"end\": 43345971}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 43345971, \"end\": 43347172}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 43347172, \"end\": 43348452}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 43348452, \"end\": 43349803}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 43349803, \"end\": 43351210}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 43351210, \"end\": 43352562}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 43352562, \"end\": 43353873}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 43353873, \"end\": 43355141}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 43355141, \"end\": 43356378}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 43356378, \"end\": 43357503}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 43357503, \"end\": 43357845}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 43357845, \"end\": 43359125}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 43359125, \"end\": 43360678}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 43360678, \"end\": 43362309}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 43362309, \"end\": 43363842}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 43363842, \"end\": 43365028}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 43365028, \"end\": 43366544}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 43366544, \"end\": 43368137}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 43368137, \"end\": 43369655}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 43369655, \"end\": 43370885}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 43370885, \"end\": 43372405}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 43372405, \"end\": 43374012}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 43374012, \"end\": 43375545}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 43375545, \"end\": 43376755}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 43376755, \"end\": 43378253}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 43378253, \"end\": 43379845}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 43379845, \"end\": 43381359}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 43381359, \"end\": 43382656}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 43382656, \"end\": 43384162}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 43384162, \"end\": 43385733}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 43385733, \"end\": 43387264}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 43387264, \"end\": 43388601}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 43388601, \"end\": 43390121}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 43390121, \"end\": 43391657}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 43391657, \"end\": 43393146}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 43393146, \"end\": 43394457}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 43394457, \"end\": 43395975}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 43395975, \"end\": 43397563}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 43397563, \"end\": 43399088}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 43399088, \"end\": 43400414}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 43400414, \"end\": 43401956}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 43401956, \"end\": 43403529}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 43403529, \"end\": 43405032}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 43405032, \"end\": 43406394}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 43406394, \"end\": 43407911}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 43407911, \"end\": 43409459}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 43409459, \"end\": 43411057}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 43411057, \"end\": 43412495}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 43412495, \"end\": 43414045}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 43414045, \"end\": 43415599}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 43415599, \"end\": 43417158}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 43417158, \"end\": 43418555}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 43418555, \"end\": 43420126}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 43420126, \"end\": 43421728}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 43421728, \"end\": 43423294}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 43423294, \"end\": 43424697}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 43424697, \"end\": 43426214}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 43426214, \"end\": 43427810}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 43427810, \"end\": 43429418}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 43429418, \"end\": 43430807}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 43430807, \"end\": 43432395}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 43432395, \"end\": 43434039}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 43434039, \"end\": 43435559}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 43435559, \"end\": 43436909}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 43436909, \"end\": 43438430}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 43438430, \"end\": 43440052}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 43440052, \"end\": 43441622}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 43441622, \"end\": 43442932}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 43442932, \"end\": 43444463}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 43444463, \"end\": 43446055}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 43446055, \"end\": 43447538}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 43447538, \"end\": 43448832}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 43448832, \"end\": 43450299}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 43450299, \"end\": 43451877}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 43451877, \"end\": 43453446}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 43453446, \"end\": 43455136}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 43455136, \"end\": 43456918}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 43456918, \"end\": 43458664}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 43458664, \"end\": 43460384}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 43460384, \"end\": 43462111}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 43462111, \"end\": 43463850}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 43463850, \"end\": 43478650}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 43478650, \"end\": 43500768}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 43500768, \"end\": 43519121}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 43519121, \"end\": 43534612}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 43534612, \"end\": 43549906}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 43549906, \"end\": 43564773}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 43564773, \"end\": 43581774}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 43581774, \"end\": 43602482}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 43602482, \"end\": 43639962}, {\"filename\": \"/edge_defs/ttf/ECFONT02.ttf\", \"start\": 43639962, \"end\": 43828454}, {\"filename\": \"/edge_defs/ttf/ECFONT03.ttf\", \"start\": 43828454, \"end\": 43893542}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 43893542, \"end\": 43893546}, {\"filename\": \"/freedoom2.wad\", \"start\": 43893546, \"end\": 72681294}, {\"filename\": \"/overlays/.gitignore\", \"start\": 72681294, \"end\": 72681294}, {\"filename\": \"/overlays/Grill-1x.png\", \"start\": 72681294, \"end\": 72688630}, {\"filename\": \"/overlays/Grill-2x.png\", \"start\": 72688630, \"end\": 72696019}, {\"filename\": \"/overlays/Lines-1x.png\", \"start\": 72696019, \"end\": 72696183}, {\"filename\": \"/overlays/Linex-2x.png\", \"start\": 72696183, \"end\": 72696357}, {\"filename\": \"/overlays/Vertical-1x.png\", \"start\": 72696357, \"end\": 72703660}, {\"filename\": \"/overlays/Vertical-2x.png\", \"start\": 72703660, \"end\": 72710995}, {\"filename\": \"/soundfont/16-Bit Game Station.sf3\", \"start\": 72710995, \"end\": 74063687}, {\"filename\": \"/soundfont/ChipFreak.sf3\", \"start\": 74063687, \"end\": 74127361}, {\"filename\": \"/soundfont/ProtoSquare!.sf3\", \"start\": 74127361, \"end\": 74264287}], \"remote_package_size\": 51540996, \"package_uuid\": \"sha256-44304bda52697f89cc9526be846e11811bc029093f223f0adc1d4b6c5bd9c52b\"});\n\n  })();\n// end include: /home/dasho/Desktop/EDGE-classic/web/site/edge-classic-data.js\n\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar readAsync, readBinary;\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  try {\n    scriptDirectory = new URL('.', _scriptName).href; // includes trailing slash\n  } catch {\n    // Must be a `blob:` or `data:` URL (e.g. `blob:http://site.com/etc/etc`), we cannot\n    // infer anything from them.\n  }\n\n  {\n// include: web_or_worker_shell_read.js\nreadAsync = async (url) => {\n    var response = await fetch(url, { credentials: 'same-origin' });\n    if (response.ok) {\n      return response.arrayBuffer();\n    }\n    throw new Error(response.status + ' : ' + response.url);\n  };\n// end include: web_or_worker_shell_read.js\n  }\n} else\n{\n}\n\nvar out = console.log.bind(console);\nvar err = console.error.bind(console);\n\n// end include: shell.js\n\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\n// don't define it at all in release modes.  This matches the behaviour of\n// MINIMAL_RUNTIME.\n// TODO(sbc): Make this the default even without STRICT enabled.\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    // This build was created without ASSERTIONS defined.  `assert()` should not\n    // ever be called in this configuration but in case there are callers in\n    // the wild leave this simple abort() implementation here for now.\n    abort(text);\n  }\n}\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/* BigInt64Array type is not correctly defined in closure\n/** not-@type {!BigInt64Array} */\n  HEAP64,\n/* BigUint64Array type is not correctly defined in closure\n/** not-t@type {!BigUint64Array} */\n  HEAPU64,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nvar runtimeInitialized = false;\n\n/**\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\n * @noinline\n */\nvar isFileURI = (filename) => filename.startsWith('file://');\n\n// include: runtime_shared.js\n// include: runtime_stack_check.js\n// end include: runtime_stack_check.js\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\n// include: runtime_debug.js\n// end include: runtime_debug.js\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  HEAP8 = new Int8Array(b);\n  HEAP16 = new Int16Array(b);\n  HEAPU8 = new Uint8Array(b);\n  HEAPU16 = new Uint16Array(b);\n  HEAP32 = new Int32Array(b);\n  HEAPU32 = new Uint32Array(b);\n  HEAPF32 = new Float32Array(b);\n  HEAPF64 = new Float64Array(b);\n  HEAP64 = new BigInt64Array(b);\n  HEAPU64 = new BigUint64Array(b);\n}\n\n// end include: runtime_shared.js\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  // Begin ATPRERUNS hooks\n  callRuntimeCallbacks(onPreRuns);\n  // End ATPRERUNS hooks\n}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n\n  // Begin ATINITS hooks\n  if (!Module['noFSInit'] && !FS.initialized) FS.init();\nTTY.init();\n  // End ATINITS hooks\n\n  wasmExports['__wasm_call_ctors']();\n\n  // Begin ATPOSTCTORS hooks\n  FS.ignorePermissions = false;\n  // End ATPOSTCTORS hooks\n}\n\nfunction preMain() {\n  // No ATMAINS hooks\n}\n\nfunction postRun() {\n   // PThreads reuse the runtime from the main thread.\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  // Begin ATPOSTRUNS hooks\n  callRuntimeCallbacks(onPostRuns);\n  // End ATPOSTRUNS hooks\n}\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n\nfunction getUniqueRunDependency(id) {\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n  if (runDependencies == 0) {\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  Module['onAbort']?.(what);\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n\n  what += '. Build with -sASSERTIONS for more info.';\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // definition for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  readyPromiseReject(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\nvar wasmBinaryFile;\n\nfunction findWasmBinary() {\n    return locateFile('edge-classic.wasm');\n}\n\nfunction getBinarySync(file) {\n  if (file == wasmBinaryFile && wasmBinary) {\n    return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n    return readBinary(file);\n  }\n  throw 'both async and sync fetching of the wasm failed';\n}\n\nasync function getWasmBinary(binaryFile) {\n  // If we don't have the binary yet, load it asynchronously using readAsync.\n  if (!wasmBinary) {\n    // Fetch the binary using readAsync\n    try {\n      var response = await readAsync(binaryFile);\n      return new Uint8Array(response);\n    } catch {\n      // Fall back to getBinarySync below;\n    }\n  }\n\n  // Otherwise, getBinarySync should be able to get it synchronously\n  return getBinarySync(binaryFile);\n}\n\nasync function instantiateArrayBuffer(binaryFile, imports) {\n  try {\n    var binary = await getWasmBinary(binaryFile);\n    var instance = await WebAssembly.instantiate(binary, imports);\n    return instance;\n  } catch (reason) {\n    err(`failed to asynchronously prepare wasm: ${reason}`);\n\n    abort(reason);\n  }\n}\n\nasync function instantiateAsync(binary, binaryFile, imports) {\n  if (!binary && typeof WebAssembly.instantiateStreaming == 'function'\n     ) {\n    try {\n      var response = fetch(binaryFile, { credentials: 'same-origin' });\n      var instantiationResult = await WebAssembly.instantiateStreaming(response, imports);\n      return instantiationResult;\n    } catch (reason) {\n      // We expect the most common failure cause to be a bad MIME type for the binary,\n      // in which case falling back to ArrayBuffer instantiation should work.\n      err(`wasm streaming compile failed: ${reason}`);\n      err('falling back to ArrayBuffer instantiation');\n      // fall back of instantiateArrayBuffer below\n    };\n  }\n  return instantiateArrayBuffer(binaryFile, imports);\n}\n\nfunction getWasmImports() {\n  // prepare imports\n  return {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  }\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nasync function createWasm() {\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    wasmExports = instance.exports;\n\n    wasmExports = Asyncify.instrumentWasmExports(wasmExports);\n\n    \n\n    wasmMemory = wasmExports['memory'];\n    \n    updateMemoryViews();\n\n    wasmTable = wasmExports['__indirect_function_table'];\n    \n\n    removeRunDependency('wasm-instantiate');\n    return wasmExports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    return receiveInstance(result['instance']);\n  }\n\n  var info = getWasmImports();\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n    return new Promise((resolve, reject) => {\n        Module['instantiateWasm'](info, (mod, inst) => {\n          resolve(receiveInstance(mod, inst));\n        });\n    });\n  }\n\n  wasmBinaryFile ??= findWasmBinary();\n  try {\n    var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info);\n    var exports = receiveInstantiationResult(result);\n    return exports;\n  } catch (e) {\n    // If instantiation fails, reject the module ready promise.\n    readyPromiseReject(e);\n    return Promise.reject(e);\n  }\n}\n\n// end include: preamble.js\n\n// Begin JS library code\n\n\n  class ExitStatus {\n      name = 'ExitStatus';\n      constructor(status) {\n        this.message = `Program terminated with exit(${status})`;\n        this.status = status;\n      }\n    }\n\n  var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    };\n  var onPostRuns = [];\n  var addOnPostRun = (cb) => onPostRuns.push(cb);\n\n  var onPreRuns = [];\n  var addOnPreRun = (cb) => onPreRuns.push(cb);\n\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[ptr];\n      case 'i8': return HEAP8[ptr];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP64[((ptr)>>3)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort(`invalid type for getValue: ${type}`);\n    }\n  }\n\n  var noExitRuntime = true;\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[ptr] = value; break;\n      case 'i8': HEAP8[ptr] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': HEAP64[((ptr)>>3)] = BigInt(value); break;\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort(`invalid type for setValue: ${type}`);\n    }\n  }\n\n  var stackRestore = (val) => __emscripten_stack_restore(val);\n\n  var stackSave = () => _emscripten_stack_get_current();\n\n  var PATH = {\n  isAbs:(path) => path.charAt(0) === '/',\n  splitPath:(filename) => {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n  normalizeArray:(parts, allowAboveRoot) => {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n  normalize:(path) => {\n        var isAbsolute = PATH.isAbs(path),\n            trailingSlash = path.slice(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n  dirname:(path) => {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.slice(0, -1);\n        }\n        return root + dir;\n      },\n  basename:(path) => path && path.match(/([^\\/]+|\\/)\\/*$/)[1],\n  join:(...paths) => PATH.normalize(paths.join('/')),\n  join2:(l, r) => PATH.normalize(l + '/' + r),\n  };\n  \n  var initRandomFill = () => {\n  \n      return (view) => crypto.getRandomValues(view);\n    };\n  var randomFill = (view) => {\n      // Lazily init on the first invocation.\n      (randomFill = initRandomFill())(view);\n    };\n  \n  \n  \n  var PATH_FS = {\n  resolve:(...args) => {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = (i >= 0) ? args[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n      },\n  relative:(from, to) => {\n        from = PATH_FS.resolve(from).slice(1);\n        to = PATH_FS.resolve(to).slice(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n  };\n  \n  \n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder() : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number=} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined/NaN means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    };\n  \n  var FS_stdin_getChar_buffer = [];\n  \n  var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n  \n  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n  /** @type {function(string, boolean=, number=)} */\n  var intArrayFromString = (stringy, dontAddNull, length) => {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    };\n  var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (typeof window != 'undefined' &&\n          typeof window.prompt == 'function') {\n          // Browser.\n          result = window.prompt('Input: ');  // returns null on cancel\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else\n        {}\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n  var TTY = {\n  ttys:[],\n  init() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process.stdin.setEncoding('utf8');\n        // }\n      },\n  shutdown() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process.stdin.pause();\n        // }\n      },\n  register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n  stream_ops:{\n  open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n  close(stream) {\n          // flush any pending line data\n          stream.tty.ops.fsync(stream.tty);\n        },\n  fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n  read(stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset+i] = result;\n          }\n          if (bytesRead) {\n            stream.node.atime = Date.now();\n          }\n          return bytesRead;\n        },\n  write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.mtime = stream.node.ctime = Date.now();\n          }\n          return i;\n        },\n  },\n  default_tty_ops:{\n  get_char(tty) {\n          return FS_stdin_getChar();\n        },\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },\n  fsync(tty) {\n          if (tty.output?.length > 0) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n  ioctl_tcgets(tty) {\n          // typical setting\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,\n              0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            ]\n          };\n        },\n  ioctl_tcsets(tty, optional_actions, data) {\n          // currently just ignore\n          return 0;\n        },\n  ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n  },\n  default_tty1_ops:{\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n  fsync(tty) {\n          if (tty.output?.length > 0) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n  },\n  };\n  \n  \n  var mmapAlloc = (size) => {\n      abort();\n    };\n  var MEMFS = {\n  ops_table:null,\n  mount(mount) {\n        return MEMFS.createNode(null, '/', 16895, 0);\n      },\n  createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek\n            }\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync\n            }\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink\n            },\n            stream: {}\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: FS.chrdev_stream_ops\n          }\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null; \n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.atime = node.mtime = node.ctime = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n          parent.atime = parent.mtime = parent.ctime = node.atime;\n        }\n        return node;\n      },\n  getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },\n  expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n        // avoid overshooting the allocation cap by a very large margin.\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n      },\n  resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n        }\n      },\n  node_ops:{\n  getattr(node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.atime);\n          attr.mtime = new Date(node.mtime);\n          attr.ctime = new Date(node.ctime);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n  setattr(node, attr) {\n          for (const key of [\"mode\", \"atime\", \"mtime\", \"ctime\"]) {\n            if (attr[key] != null) {\n              node[key] = attr[key];\n            }\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n  lookup(parent, name) {\n          throw MEMFS.doesNotExistError;\n        },\n  mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n  rename(old_node, new_dir, new_name) {\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {}\n          if (new_node) {\n            if (FS.isDir(old_node.mode)) {\n              // if we're overwriting a directory at new_name, make sure it's empty.\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n            FS.hashRemoveNode(new_node);\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          new_dir.contents[new_name] = old_node;\n          old_node.name = new_name;\n          new_dir.ctime = new_dir.mtime = old_node.parent.ctime = old_node.parent.mtime = Date.now();\n        },\n  unlink(parent, name) {\n          delete parent.contents[name];\n          parent.ctime = parent.mtime = Date.now();\n        },\n  rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.ctime = parent.mtime = Date.now();\n        },\n  readdir(node) {\n          return ['.', '..', ...Object.keys(node.contents)];\n        },\n  symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 0o777 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n  readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n  write(stream, buffer, offset, length, position, canOwn) {\n          // If the buffer is located in main memory (HEAP), and if\n          // memory can grow, we can't hold on to references of the\n          // memory buffer, as they may get invalidated. That means we\n          // need to do copy its contents.\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n  \n          if (!length) return 0;\n          var node = stream.node;\n          node.mtime = node.ctime = Date.now();\n  \n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n  \n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position+length);\n          if (node.contents.subarray && buffer.subarray) {\n            // Use typed array write which is available.\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\n            // We can't emulate MAP_SHARED when the file is not backed by the\n            // buffer we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            if (contents) {\n              // Try to avoid unnecessary slices.\n              if (position > 0 || position + length < contents.length) {\n                if (contents.subarray) {\n                  contents = contents.subarray(position, position + length);\n                } else {\n                  contents = Array.prototype.slice.call(contents, position, position + length);\n                }\n              }\n              HEAP8.set(contents, ptr);\n            }\n          }\n          return { ptr, allocated };\n        },\n  msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        },\n  },\n  };\n  \n  var asyncLoad = async (url) => {\n      var arrayBuffer = await readAsync(url);\n      return new Uint8Array(arrayBuffer);\n    };\n  asyncLoad.isAsync = true;\n  \n  \n  var FS_createDataFile = (...args) => FS.createDataFile(...args);\n  \n  var preloadPlugins = [];\n  var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      // Ensure plugins are ready.\n      if (typeof Browser != 'undefined') Browser.init();\n  \n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n  var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\n      // TODO we should allow people to just pass in a complete filename instead\n      // of parent and name being that we just join them anyways\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n          onerror?.();\n          removeRunDependency(dep);\n        })) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url).then(processData, onerror);\n      } else {\n        processData(url);\n      }\n    };\n  \n  var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        'r': 0,\n        'r+': 2,\n        'w': 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        'a': 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n  \n  var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n  \n  \n  \n  \n  \n  \n  var IDBFS = {\n  dbs:{\n  },\n  indexedDB:() => {\n        if (typeof indexedDB != 'undefined') return indexedDB;\n        var ret = null;\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        return ret;\n      },\n  DB_VERSION:21,\n  DB_STORE_NAME:\"FILE_DATA\",\n  queuePersist:(mount) => {\n        function onPersistComplete() {\n          if (mount.idbPersistState === 'again') startPersist(); // If a new sync request has appeared in between, kick off a new sync\n          else mount.idbPersistState = 0; // Otherwise reset sync state back to idle to wait for a new sync later\n        }\n        function startPersist() {\n          mount.idbPersistState = 'idb'; // Mark that we are currently running a sync operation\n          IDBFS.syncfs(mount, /*populate:*/false, onPersistComplete);\n        }\n  \n        if (!mount.idbPersistState) {\n          // Programs typically write/copy/move multiple files in the in-memory\n          // filesystem within a single app frame, so when a filesystem sync\n          // command is triggered, do not start it immediately, but only after\n          // the current frame is finished. This way all the modified files\n          // inside the main loop tick will be batched up to the same sync.\n          mount.idbPersistState = setTimeout(startPersist, 0);\n        } else if (mount.idbPersistState === 'idb') {\n          // There is an active IndexedDB sync operation in-flight, but we now\n          // have accumulated more files to sync. We should therefore queue up\n          // a new sync after the current one finishes so that all writes\n          // will be properly persisted.\n          mount.idbPersistState = 'again';\n        }\n      },\n  mount:(mount) => {\n        // reuse core MEMFS functionality\n        var mnt = MEMFS.mount(mount);\n        // If the automatic IDBFS persistence option has been selected, then automatically persist\n        // all modifications to the filesystem as they occur.\n        if (mount?.opts?.autoPersist) {\n          mnt.idbPersistState = 0; // IndexedDB sync starts in idle state\n          var memfs_node_ops = mnt.node_ops;\n          mnt.node_ops = {...mnt.node_ops}; // Clone node_ops to inject write tracking\n          mnt.node_ops.mknod = (parent, name, mode, dev) => {\n            var node = memfs_node_ops.mknod(parent, name, mode, dev);\n            // Propagate injected node_ops to the newly created child node\n            node.node_ops = mnt.node_ops;\n            // Remember for each IDBFS node which IDBFS mount point they came from so we know which mount to persist on modification.\n            node.idbfs_mount = mnt.mount;\n            // Remember original MEMFS stream_ops for this node\n            node.memfs_stream_ops = node.stream_ops;\n            // Clone stream_ops to inject write tracking\n            node.stream_ops = {...node.stream_ops};\n  \n            // Track all file writes\n            node.stream_ops.write = (stream, buffer, offset, length, position, canOwn) => {\n              // This file has been modified, we must persist IndexedDB when this file closes\n              stream.node.isModified = true;\n              return node.memfs_stream_ops.write(stream, buffer, offset, length, position, canOwn);\n            };\n  \n            // Persist IndexedDB on file close\n            node.stream_ops.close = (stream) => {\n              var n = stream.node;\n              if (n.isModified) {\n                IDBFS.queuePersist(n.idbfs_mount);\n                n.isModified = false;\n              }\n              if (n.memfs_stream_ops.close) return n.memfs_stream_ops.close(stream);\n            };\n  \n            return node;\n          };\n          // Also kick off persisting the filesystem on other operations that modify the filesystem.\n          mnt.node_ops.mkdir   = (...args) => (IDBFS.queuePersist(mnt.mount), memfs_node_ops.mkdir(...args));\n          mnt.node_ops.rmdir   = (...args) => (IDBFS.queuePersist(mnt.mount), memfs_node_ops.rmdir(...args));\n          mnt.node_ops.symlink = (...args) => (IDBFS.queuePersist(mnt.mount), memfs_node_ops.symlink(...args));\n          mnt.node_ops.unlink  = (...args) => (IDBFS.queuePersist(mnt.mount), memfs_node_ops.unlink(...args));\n          mnt.node_ops.rename  = (...args) => (IDBFS.queuePersist(mnt.mount), memfs_node_ops.rename(...args));\n        }\n        return mnt;\n      },\n  syncfs:(mount, populate, callback) => {\n        IDBFS.getLocalSet(mount, (err, local) => {\n          if (err) return callback(err);\n  \n          IDBFS.getRemoteSet(mount, (err, remote) => {\n            if (err) return callback(err);\n  \n            var src = populate ? remote : local;\n            var dst = populate ? local : remote;\n  \n            IDBFS.reconcile(src, dst, callback);\n          });\n        });\n      },\n  quit:() => {\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\n        IDBFS.dbs = {};\n      },\n  getDB:(name, callback) => {\n        // check the cache first\n        var db = IDBFS.dbs[name];\n        if (db) {\n          return callback(null, db);\n        }\n  \n        var req;\n        try {\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\n        } catch (e) {\n          return callback(e);\n        }\n        if (!req) {\n          return callback(\"Unable to connect to IndexedDB\");\n        }\n        req.onupgradeneeded = (e) => {\n          var db = /** @type {IDBDatabase} */ (e.target.result);\n          var transaction = e.target.transaction;\n  \n          var fileStore;\n  \n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\n          } else {\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\n          }\n  \n          if (!fileStore.indexNames.contains('timestamp')) {\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\n          }\n        };\n        req.onsuccess = () => {\n          db = /** @type {IDBDatabase} */ (req.result);\n  \n          // add to the cache\n          IDBFS.dbs[name] = db;\n          callback(null, db);\n        };\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  getLocalSet:(mount, callback) => {\n        var entries = {};\n  \n        function isRealDir(p) {\n          return p !== '.' && p !== '..';\n        };\n        function toAbsolute(root) {\n          return (p) => PATH.join2(root, p);\n        };\n  \n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\n  \n        while (check.length) {\n          var path = check.pop();\n          var stat;\n  \n          try {\n            stat = FS.stat(path);\n          } catch (e) {\n            return callback(e);\n          }\n  \n          if (FS.isDir(stat.mode)) {\n            check.push(...FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\n          }\n  \n          entries[path] = { 'timestamp': stat.mtime };\n        }\n  \n        return callback(null, { type: 'local', entries: entries });\n      },\n  getRemoteSet:(mount, callback) => {\n        var entries = {};\n  \n        IDBFS.getDB(mount.mountpoint, (err, db) => {\n          if (err) return callback(err);\n  \n          try {\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\n            transaction.onerror = (e) => {\n              callback(e.target.error);\n              e.preventDefault();\n            };\n  \n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n            var index = store.index('timestamp');\n  \n            index.openKeyCursor().onsuccess = (event) => {\n              var cursor = event.target.result;\n  \n              if (!cursor) {\n                return callback(null, { type: 'remote', db, entries });\n              }\n  \n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\n  \n              cursor.continue();\n            };\n          } catch (e) {\n            return callback(e);\n          }\n        });\n      },\n  loadLocalEntry:(path, callback) => {\n        var stat, node;\n  \n        try {\n          var lookup = FS.lookupPath(path);\n          node = lookup.node;\n          stat = FS.stat(path);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        if (FS.isDir(stat.mode)) {\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\n        } else if (FS.isFile(stat.mode)) {\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\n        } else {\n          return callback(new Error('node type not supported'));\n        }\n      },\n  storeLocalEntry:(path, entry, callback) => {\n        try {\n          if (FS.isDir(entry['mode'])) {\n            FS.mkdirTree(path, entry['mode']);\n          } else if (FS.isFile(entry['mode'])) {\n            FS.writeFile(path, entry['contents'], { canOwn: true });\n          } else {\n            return callback(new Error('node type not supported'));\n          }\n  \n          FS.chmod(path, entry['mode']);\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },\n  removeLocalEntry:(path, callback) => {\n        try {\n          var stat = FS.stat(path);\n  \n          if (FS.isDir(stat.mode)) {\n            FS.rmdir(path);\n          } else if (FS.isFile(stat.mode)) {\n            FS.unlink(path);\n          }\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },\n  loadRemoteEntry:(store, path, callback) => {\n        var req = store.get(path);\n        req.onsuccess = (event) => callback(null, event.target.result);\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  storeRemoteEntry:(store, path, entry, callback) => {\n        try {\n          var req = store.put(entry, path);\n        } catch (e) {\n          callback(e);\n          return;\n        }\n        req.onsuccess = (event) => callback();\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  removeRemoteEntry:(store, path, callback) => {\n        var req = store.delete(path);\n        req.onsuccess = (event) => callback();\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  reconcile:(src, dst, callback) => {\n        var total = 0;\n  \n        var create = [];\n        Object.keys(src.entries).forEach((key) => {\n          var e = src.entries[key];\n          var e2 = dst.entries[key];\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\n            create.push(key);\n            total++;\n          }\n        });\n  \n        var remove = [];\n        Object.keys(dst.entries).forEach((key) => {\n          if (!src.entries[key]) {\n            remove.push(key);\n            total++;\n          }\n        });\n  \n        if (!total) {\n          return callback(null);\n        }\n  \n        var errored = false;\n        var db = src.type === 'remote' ? src.db : dst.db;\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n  \n        function done(err) {\n          if (err && !errored) {\n            errored = true;\n            return callback(err);\n          }\n        };\n  \n        // transaction may abort if (for example) there is a QuotaExceededError\n        transaction.onerror = transaction.onabort = (e) => {\n          done(e.target.error);\n          e.preventDefault();\n        };\n  \n        transaction.oncomplete = (e) => {\n          if (!errored) {\n            callback(null);\n          }\n        };\n  \n        // sort paths in ascending order so directory entries are created\n        // before the files inside them\n        create.sort().forEach((path) => {\n          if (dst.type === 'local') {\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\n              if (err) return done(err);\n              IDBFS.storeLocalEntry(path, entry, done);\n            });\n          } else {\n            IDBFS.loadLocalEntry(path, (err, entry) => {\n              if (err) return done(err);\n              IDBFS.storeRemoteEntry(store, path, entry, done);\n            });\n          }\n        });\n  \n        // sort paths in descending order so files are deleted before their\n        // parent directories\n        remove.sort().reverse().forEach((path) => {\n          if (dst.type === 'local') {\n            IDBFS.removeLocalEntry(path, done);\n          } else {\n            IDBFS.removeRemoteEntry(store, path, done);\n          }\n        });\n      },\n  };\n  \n  \n  var LZ4 = {\n  DIR_MODE:16895,\n  FILE_MODE:33279,\n  CHUNK_SIZE:-1,\n  codec:null,\n  init() {\n        if (LZ4.codec) return;\n        LZ4.codec = (() => {\n          /*\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\n  \n  based off of node-lz4, https://github.com/pierrec/node-lz4\n  \n  ====\n  Copyright (c) 2012 Pierre Curto\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n  ====\n  \n  changes have the same license\n  */\n  \n  var MiniLZ4 = (function() {\n  \n  var exports = {};\n  \n  /**\n   * Decode a block. Assumptions: input contains all sequences of a \n   * chunk, output is large enough to receive the decoded data.\n   * If the output buffer is too small, an error will be thrown.\n   * If the returned value is negative, an error occured at the returned offset.\n   *\n   * @param {ArrayBufferView} input input data\n   * @param {ArrayBufferView} output output data\n   * @param {number=} sIdx\n   * @param {number=} eIdx\n   * @return {number} number of decoded bytes\n   * @private\n   */\n  exports.uncompress = function (input, output, sIdx, eIdx) {\n  \tsIdx = sIdx || 0\n  \teIdx = eIdx || (input.length - sIdx)\n  \t// Process each sequence in the incoming data\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\n  \t\tvar token = input[i++]\n  \n  \t\t// Literals\n  \t\tvar literals_length = (token >> 4)\n  \t\tif (literals_length > 0) {\n  \t\t\t// length of literals\n  \t\t\tvar l = literals_length + 240\n  \t\t\twhile (l === 255) {\n  \t\t\t\tl = input[i++]\n  \t\t\t\tliterals_length += l\n  \t\t\t}\n  \n  \t\t\t// Copy the literals\n  \t\t\tvar end = i + literals_length\n  \t\t\twhile (i < end) output[j++] = input[i++]\n  \n  \t\t\t// End of buffer?\n  \t\t\tif (i === n) return j\n  \t\t}\n  \n  \t\t// Match copy\n  \t\t// 2 bytes offset (little endian)\n  \t\tvar offset = input[i++] | (input[i++] << 8)\n  \n  \t\t// XXX 0 is an invalid offset value\n  \t\tif (offset === 0) return j\n  \t\tif (offset > j) return -(i-2)\n  \n  \t\t// length of match copy\n  \t\tvar match_length = (token & 0xf)\n  \t\tvar l = match_length + 240\n  \t\twhile (l === 255) {\n  \t\t\tl = input[i++]\n  \t\t\tmatch_length += l\n  \t\t}\n  \n  \t\t// Copy the match\n  \t\tvar pos = j - offset // position of the match copy in the current output\n  \t\tvar end = j + match_length + 4 // minmatch = 4\n  \t\twhile (j < end) output[j++] = output[pos++]\n  \t}\n  \n  \treturn j\n  }\n  \n  var\n  \tmaxInputSize\t= 0x7E000000\n  ,\tminMatch\t\t= 4\n  // uint32() optimization\n  ,\thashLog\t\t\t= 16\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\n  ,\thashSize\t\t= 1 << hashLog\n  \n  ,\tcopyLength\t\t= 8\n  ,\tlastLiterals\t= 5\n  ,\tmfLimit\t\t\t= copyLength + minMatch\n  ,\tskipStrength\t= 6\n  \n  ,\tmlBits  \t\t= 4\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\n  ,\trunBits \t\t= 8 - mlBits\n  ,\trunMask \t\t= (1 << runBits) - 1\n  \n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\n  \n  assert(hashShift === 16);\n  var hashTable = new Int16Array(1<<16);\n  var empty = new Int16Array(hashTable.length);\n  \n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\n  exports.compressBound = function (isize) {\n  \treturn isize > maxInputSize\n  \t\t? 0\n  \t\t: (isize + (isize/255) + 16) | 0\n  }\n  \n  /** @param {number=} sIdx\n  \t@param {number=} eIdx */\n  exports.compress = function (src, dst, sIdx, eIdx) {\n  \thashTable.set(empty);\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\n  }\n  \n  function compressBlock (src, dst, pos, sIdx, eIdx) {\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\n  \tvar dpos = sIdx\n  \tvar dlen = eIdx - sIdx\n  \tvar anchor = 0\n  \n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\n  \n  \t// Minimum of input bytes for compression (LZ4 specs)\n  \tif (src.length > mfLimit) {\n  \t\tvar n = exports.compressBound(src.length)\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\n  \n  \t\tvar \n  \t\t\tstep  = 1\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\n  \t\t// last 5 bytes must be literals\n  \t\t,\tsrcLength = src.length - mfLimit\n  \n  \t\twhile (pos + minMatch < srcLength) {\n  \t\t\t// Find a match\n  \t\t\t// min match of 4 bytes aka sequence\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\n  \t\t\t// compute hash for the current sequence\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\n  \t\t\t\t\t\t\t.multiply(hasher)\n  \t\t\t\t\t\t\t.shiftr(hashShift)\n  \t\t\t\t\t\t\t.toNumber() */\n  \t\t\t// get the position of the sequence matching the hash\n  \t\t\t// NB. since 2 different sequences may have the same hash\n  \t\t\t// it is double-checked below\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\n  \t\t\tvar ref = hashTable[hash] - 1\n  \t\t\t// save position of current sequence in hash table\n  \t\t\thashTable[hash] = pos + 1\n  \n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\n  \t\t\tif ( ref < 0 ||\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\n  \t\t\t\t(\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\n  \t\t\t\t)\n  \t\t\t) {\n  \t\t\t\t// increase step if nothing found within limit\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\n  \t\t\t\tpos += step\n  \t\t\t\tcontinue\n  \t\t\t}\n  \n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\n  \n  \t\t\t// got a match\n  \t\t\tvar literals_length = pos - anchor\n  \t\t\tvar offset = pos - ref\n  \n  \t\t\t// minMatch already verified\n  \t\t\tpos += minMatch\n  \t\t\tref += minMatch\n  \n  \t\t\t// move to the end of the match (>=minMatch)\n  \t\t\tvar match_length = pos\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\n  \t\t\t\tpos++\n  \t\t\t\tref++\n  \t\t\t}\n  \n  \t\t\t// match length\n  \t\t\tmatch_length = pos - match_length\n  \n  \t\t\t// token\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\n  \n  \t\t\t// encode literals length\n  \t\t\tif (literals_length >= runMask) {\n  \t\t\t\t// add match length to the token\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\n  \t\t\t\t\tdst[dpos++] = 255\n  \t\t\t\t}\n  \t\t\t\tdst[dpos++] = len\n  \t\t\t} else {\n  \t\t\t\t// add match length to the token\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\n  \t\t\t}\n  \n  \t\t\t// write literals\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\n  \t\t\t\tdst[dpos++] = src[anchor+i]\n  \t\t\t}\n  \n  \t\t\t// encode offset\n  \t\t\tdst[dpos++] = offset\n  \t\t\tdst[dpos++] = (offset >> 8)\n  \n  \t\t\t// encode match length\n  \t\t\tif (match_length >= mlMask) {\n  \t\t\t\tmatch_length -= mlMask\n  \t\t\t\twhile (match_length >= 255) {\n  \t\t\t\t\tmatch_length -= 255\n  \t\t\t\t\tdst[dpos++] = 255\n  \t\t\t\t}\n  \n  \t\t\t\tdst[dpos++] = match_length\n  \t\t\t}\n  \n  \t\t\tanchor = pos\n  \t\t}\n  \t}\n  \n  \t// cannot compress input\n  \tif (anchor == 0) return 0\n  \n  \t// Write last literals\n  \t// encode literals length\n  \tliterals_length = src.length - anchor\n  \tif (literals_length >= runMask) {\n  \t\t// add match length to the token\n  \t\tdst[dpos++] = (runMask << mlBits)\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\n  \t\t\tdst[dpos++] = 255\n  \t\t}\n  \t\tdst[dpos++] = ln\n  \t} else {\n  \t\t// add match length to the token\n  \t\tdst[dpos++] = (literals_length << mlBits)\n  \t}\n  \n  \t// write literals\n  \tpos = anchor\n  \twhile (pos < src.length) {\n  \t\tdst[dpos++] = src[pos++]\n  \t}\n  \n  \treturn dpos\n  }\n  \n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\n  \n  exports.compressPackage = function(data, verify) {\n    if (verify) {\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\n    }\n    // compress the data in chunks\n    assert(data instanceof ArrayBuffer);\n    data = new Uint8Array(data);\n    console.log('compressing package of size ' + data.length);\n    var compressedChunks = [];\n    var successes = [];\n    var offset = 0;\n    var total = 0;\n    while (offset < data.length) {\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\n      //console.log('compress a chunk ' + [offset, total, data.length]);\n      offset += exports.CHUNK_SIZE;\n      var bound = exports.compressBound(chunk.length);\n      var compressed = new Uint8Array(bound);\n      var compressedSize = exports.compress(chunk, compressed);\n      if (compressedSize > 0) {\n        assert(compressedSize <= bound);\n        compressed = compressed.subarray(0, compressedSize);\n        compressedChunks.push(compressed);\n        total += compressedSize;\n        successes.push(1);\n        if (verify) {\n          var back = exports.uncompress(compressed, temp);\n          assert(back === chunk.length, [back, chunk.length]);\n          for (var i = 0; i < chunk.length; i++) {\n            assert(chunk[i] === temp[i]);\n          }\n        }\n      } else {\n        assert(compressedSize === 0);\n        // failure to compress :(\n        compressedChunks.push(chunk);\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\n        successes.push(0);\n      }\n    }\n    data = null; // XXX null out pack['data'] too?\n    var compressedData = {\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\n      'cachedOffset': total,\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\n      'cachedChunks': [null, null],\n      'offsets': [], // chunk# => start in compressed data\n      'sizes': [],\n      'successes': successes, // 1 if chunk is compressed\n    };\n    offset = 0;\n    for (var i = 0; i < compressedChunks.length; i++) {\n      compressedData['data'].set(compressedChunks[i], offset);\n      compressedData['offsets'][i] = offset;\n      compressedData['sizes'][i] = compressedChunks[i].length\n      offset += compressedChunks[i].length;\n    }\n    console.log('compressed package into ' + [compressedData['data'].length]);\n    assert(offset === total);\n    return compressedData;\n  };\n  \n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\n  \n  return exports;\n  \n  })();\n  \n  if (typeof module != 'undefined') {\n    module.exports = MiniLZ4;\n  }\n  ;\n          return MiniLZ4;\n        })();\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\n      },\n  loadPackage(pack, preloadPlugin) {\n        LZ4.init();\n        var compressedData = pack['compressedData'] || LZ4.codec.compressPackage(pack['data']);\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\n          compressedData['cachedIndexes'][i] = -1;\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\n        }\n        pack['metadata'].files.forEach((file) => {\n          var dir = PATH.dirname(file.filename);\n          var name = PATH.basename(file.filename);\n          FS.createPath('', dir, true, true);\n          var parent = FS.analyzePath(dir).object;\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\n            compressedData,\n            start: file.start,\n            end: file.end,\n          });\n        });\n        // Preload files if necessary. This code is largely similar to\n        // createPreloadedFile in library_fs.js. However, a main difference here\n        // is that we only decompress the file if it can be preloaded.\n        // Abstracting out the common parts seems to be more effort than it is\n        // worth.\n        if (preloadPlugin) {\n          Browser.init();\n          pack['metadata'].files.forEach((file) => {\n            var handled = false;\n            var fullname = file.filename;\n            preloadPlugins.forEach((plugin) => {\n              if (handled) return;\n              if (plugin['canHandle'](fullname)) {\n                var dep = getUniqueRunDependency('fp ' + fullname);\n                addRunDependency(dep);\n                var finish = () => removeRunDependency(dep);\n                var byteArray = FS.readFile(fullname);\n                plugin['handle'](byteArray, fullname, finish, finish);\n                handled = true;\n              }\n            });\n          });\n        }\n      },\n  createNode(parent, name, mode, dev, contents, mtime) {\n        var node = FS.createNode(parent, name, mode);\n        node.mode = mode;\n        node.node_ops = LZ4.node_ops;\n        node.stream_ops = LZ4.stream_ops;\n        this.atime = this.mtime = this.ctime = (mtime || new Date).getTime();\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\n        if (mode === LZ4.FILE_MODE) {\n          node.size = contents.end - contents.start;\n          node.contents = contents;\n        } else {\n          node.size = 4096;\n          node.contents = {};\n        }\n        if (parent) {\n          parent.contents[name] = node;\n        }\n        return node;\n      },\n  node_ops:{\n  getattr(node) {\n          return {\n            dev: 1,\n            ino: node.id,\n            mode: node.mode,\n            nlink: 1,\n            uid: 0,\n            gid: 0,\n            rdev: 0,\n            size: node.size,\n            atime: new Date(node.atime),\n            mtime: new Date(node.mtime),\n            ctime: new Date(node.ctime),\n            blksize: 4096,\n            blocks: Math.ceil(node.size / 4096),\n          };\n        },\n  setattr(node, attr) {\n          for (const key of ['mode', 'atime', 'mtime', 'ctime']) {\n            if (attr[key]) {\n              node[key] = attr[key];\n            }\n          }\n        },\n  lookup(parent, name) {\n          throw new FS.ErrnoError(44);\n        },\n  mknod(parent, name, mode, dev) {\n          throw new FS.ErrnoError(63);\n        },\n  rename(oldNode, newDir, newName) {\n          throw new FS.ErrnoError(63);\n        },\n  unlink(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n  rmdir(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n  readdir(node) {\n          throw new FS.ErrnoError(63);\n        },\n  symlink(parent, newName, oldPath) {\n          throw new FS.ErrnoError(63);\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          //out('LZ4 read ' + [offset, length, position]);\n          length = Math.min(length, stream.node.size - position);\n          if (length <= 0) return 0;\n          var contents = stream.node.contents;\n          var compressedData = contents.compressedData;\n          var written = 0;\n          while (written < length) {\n            var start = contents.start + position + written; // start index in uncompressed data\n            var desired = length - written;\n            //out('current read: ' + ['start', start, 'desired', desired]);\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\n            var compressedStart = compressedData['offsets'][chunkIndex];\n            var compressedSize = compressedData['sizes'][chunkIndex];\n            var currChunk;\n            if (compressedData['successes'][chunkIndex]) {\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\n              if (found >= 0) {\n                currChunk = compressedData['cachedChunks'][found];\n              } else {\n                // decompress the chunk\n                compressedData['cachedIndexes'].pop();\n                compressedData['cachedIndexes'].unshift(chunkIndex);\n                currChunk = compressedData['cachedChunks'].pop();\n                compressedData['cachedChunks'].unshift(currChunk);\n                if (compressedData['debug']) {\n                  out('decompressing chunk ' + chunkIndex);\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\n                }\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\n                //var t = Date.now();\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\n                //out('decompress time: ' + (Date.now() - t));\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\n              }\n            } else {\n              // uncompressed\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\n            }\n            var startInChunk = start % LZ4.CHUNK_SIZE;\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\n            var currWritten = endInChunk - startInChunk;\n            written += currWritten;\n          }\n          return written;\n        },\n  write(stream, buffer, offset, length, position) {\n          throw new FS.ErrnoError(29);\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.size;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  },\n  };\n  var FS = {\n  root:null,\n  mounts:[],\n  devices:{\n  },\n  streams:[],\n  nextInode:1,\n  nameTable:null,\n  currentPath:\"/\",\n  initialized:false,\n  ignorePermissions:true,\n  filesystems:null,\n  syncFSRequests:0,\n  readFiles:{\n  },\n  ErrnoError:class {\n        name = 'ErrnoError';\n        // We set the `name` property to be able to identify `FS.ErrnoError`\n        // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\n        // - when using PROXYFS, an error can come from an underlying FS\n        // as different FS objects have their own FS.ErrnoError each,\n        // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\n        // we'll use the reliable test `err.name == \"ErrnoError\"` instead\n        constructor(errno) {\n          this.errno = errno;\n        }\n      },\n  FSStream:class {\n        shared = {};\n        get object() {\n          return this.node;\n        }\n        set object(val) {\n          this.node = val;\n        }\n        get isRead() {\n          return (this.flags & 2097155) !== 1;\n        }\n        get isWrite() {\n          return (this.flags & 2097155) !== 0;\n        }\n        get isAppend() {\n          return (this.flags & 1024);\n        }\n        get flags() {\n          return this.shared.flags;\n        }\n        set flags(val) {\n          this.shared.flags = val;\n        }\n        get position() {\n          return this.shared.position;\n        }\n        set position(val) {\n          this.shared.position = val;\n        }\n      },\n  FSNode:class {\n        node_ops = {};\n        stream_ops = {};\n        readMode = 292 | 73;\n        writeMode = 146;\n        mounted = null;\n        constructor(parent, name, mode, rdev) {\n          if (!parent) {\n            parent = this;  // root node sets parent to itself\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.id = FS.nextInode++;\n          this.name = name;\n          this.mode = mode;\n          this.rdev = rdev;\n          this.atime = this.mtime = this.ctime = Date.now();\n        }\n        get read() {\n          return (this.mode & this.readMode) === this.readMode;\n        }\n        set read(val) {\n          val ? this.mode |= this.readMode : this.mode &= ~this.readMode;\n        }\n        get write() {\n          return (this.mode & this.writeMode) === this.writeMode;\n        }\n        set write(val) {\n          val ? this.mode |= this.writeMode : this.mode &= ~this.writeMode;\n        }\n        get isFolder() {\n          return FS.isDir(this.mode);\n        }\n        get isDevice() {\n          return FS.isChrdev(this.mode);\n        }\n      },\n  lookupPath(path, opts = {}) {\n        if (!path) {\n          throw new FS.ErrnoError(44);\n        }\n        opts.follow_mount ??= true\n  \n        if (!PATH.isAbs(path)) {\n          path = FS.cwd() + '/' + path;\n        }\n  \n        // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\n        linkloop: for (var nlinks = 0; nlinks < 40; nlinks++) {\n          // split the absolute path\n          var parts = path.split('/').filter((p) => !!p);\n  \n          // start at the root\n          var current = FS.root;\n          var current_path = '/';\n  \n          for (var i = 0; i < parts.length; i++) {\n            var islast = (i === parts.length-1);\n            if (islast && opts.parent) {\n              // stop resolving\n              break;\n            }\n  \n            if (parts[i] === '.') {\n              continue;\n            }\n  \n            if (parts[i] === '..') {\n              current_path = PATH.dirname(current_path);\n              if (FS.isRoot(current)) {\n                path = current_path + '/' + parts.slice(i + 1).join('/');\n                continue linkloop;\n              } else {\n                current = current.parent;\n              }\n              continue;\n            }\n  \n            current_path = PATH.join2(current_path, parts[i]);\n            try {\n              current = FS.lookupNode(current, parts[i]);\n            } catch (e) {\n              // if noent_okay is true, suppress a ENOENT in the last component\n              // and return an object with an undefined node. This is needed for\n              // resolving symlinks in the path when creating a file.\n              if ((e?.errno === 44) && islast && opts.noent_okay) {\n                return { path: current_path };\n              }\n              throw e;\n            }\n  \n            // jump to the mount's root node if this is a mountpoint\n            if (FS.isMountpoint(current) && (!islast || opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n  \n            // by default, lookupPath will not follow a symlink if it is the final path component.\n            // setting opts.follow = true will override this behavior.\n            if (FS.isLink(current.mode) && (!islast || opts.follow)) {\n              if (!current.node_ops.readlink) {\n                throw new FS.ErrnoError(52);\n              }\n              var link = current.node_ops.readlink(current);\n              if (!PATH.isAbs(link)) {\n                link = PATH.dirname(current_path) + '/' + link;\n              }\n              path = link + '/' + parts.slice(i + 1).join('/');\n              continue linkloop;\n            }\n          }\n          return { path: current_path, node: current };\n        }\n        throw new FS.ErrnoError(32);\n      },\n  getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length-1] !== '/' ? `${mount}/${path}` : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n  hashName(parentid, name) {\n        var hash = 0;\n  \n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n  hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n  hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n  lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        // if we failed to find it in the cache, call into the VFS\n        return FS.lookup(parent, name);\n      },\n  createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n  \n        FS.hashAddNode(node);\n  \n        return node;\n      },\n  destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n  isRoot(node) {\n        return node === node.parent;\n      },\n  isMountpoint(node) {\n        return !!node.mounted;\n      },\n  isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n  isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n  isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n  isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n  isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n  isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n  isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n  flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if ((flag & 512)) {\n          perms += 'w';\n        }\n        return perms;\n      },\n  nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        // return 0 if any user, group or owner bits are set.\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n  mayLookup(dir) {\n        if (!FS.isDir(dir.mode)) return 54;\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n  mayCreate(dir, name) {\n        if (!FS.isDir(dir.mode)) {\n          return 54;\n        }\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {\n        }\n        return FS.nodePermissions(dir, 'wx');\n      },\n  mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n  mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' // opening for write\n              || (flags & (512 | 64))) { // TODO: check for O_SEARCH? (== search for dir only)\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n  checkOpExists(op, err) {\n        if (!op) {\n          throw new FS.ErrnoError(err);\n        }\n        return op;\n      },\n  MAX_OPEN_FDS:4096,\n  nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n  getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n  getStream:(fd) => FS.streams[fd],\n  createStream(stream, fd = -1) {\n  \n        // clone it, so we can return an instance of FSStream\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n  closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n  dupStream(origStream, fd = -1) {\n        var stream = FS.createStream(origStream, fd);\n        stream.stream_ops?.dup?.(stream);\n        return stream;\n      },\n  doSetAttr(stream, node, attr) {\n        var setattr = stream?.stream_ops.setattr;\n        var arg = setattr ? stream : node;\n        setattr ??= node.node_ops.setattr;\n        FS.checkOpExists(setattr, 63)\n        setattr(arg, attr);\n      },\n  chrdev_stream_ops:{\n  open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          // override node's stream ops with the device's\n          stream.stream_ops = device.stream_ops;\n          // forward the open call\n          stream.stream_ops.open?.(stream);\n        },\n  llseek() {\n          throw new FS.ErrnoError(70);\n        },\n  },\n  major:(dev) => ((dev) >> 8),\n  minor:(dev) => ((dev) & 0xff),\n  makedev:(ma, mi) => ((ma) << 8 | (mi)),\n  registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n  getDevice:(dev) => FS.devices[dev],\n  getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n  \n        while (check.length) {\n          var m = check.pop();\n  \n          mounts.push(m);\n  \n          check.push(...m.mounts);\n        }\n  \n        return mounts;\n      },\n  syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n  \n        FS.syncFSRequests++;\n  \n        if (FS.syncFSRequests > 1) {\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\n        }\n  \n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n  \n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n  \n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        };\n  \n        // sync all mounts\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n  mount(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n  \n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n          mountpoint = lookup.path;  // use the absolute path\n          node = lookup.node;\n  \n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n  \n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n  \n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: []\n        };\n  \n        // create a root node for the fs\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n  \n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          // set as a mountpoint\n          node.mounted = mount;\n  \n          // add the new mount to the current mount's children\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n  \n        return mountRoot;\n      },\n  unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n  \n        // destroy the nodes for this mount, and all its child mounts\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n  \n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n  \n          while (current) {\n            var next = current.name_next;\n  \n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n  \n            current = next;\n          }\n        });\n  \n        // no longer a mountpoint\n        node.mounted = null;\n  \n        // remove this mount from the child mounts\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n  lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n  mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name) {\n          throw new FS.ErrnoError(28);\n        }\n        if (name === '.' || name === '..') {\n          throw new FS.ErrnoError(20);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n  statfs(path) {\n        return FS.statfsNode(FS.lookupPath(path, {follow: true}).node);\n      },\n  statfsStream(stream) {\n        // We keep a separate statfsStream function because noderawfs overrides\n        // it. In noderawfs, stream.node is sometimes null. Instead, we need to\n        // look at stream.path.\n        return FS.statfsNode(stream.node);\n      },\n  statfsNode(node) {\n        // NOTE: None of the defaults here are true. We're just returning safe and\n        //       sane values. Currently nodefs and rawfs replace these defaults,\n        //       other file systems leave them alone.\n        var rtn = {\n          bsize: 4096,\n          frsize: 4096,\n          blocks: 1e6,\n          bfree: 5e5,\n          bavail: 5e5,\n          files: FS.nextInode,\n          ffree: FS.nextInode - 1,\n          fsid: 42,\n          flags: 2,\n          namelen: 255,\n        };\n  \n        if (node.node_ops.statfs) {\n          Object.assign(rtn, node.node_ops.statfs(node.mount.opts.root));\n        }\n        return rtn;\n      },\n  create(path, mode = 0o666) {\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdir(path, mode = 0o777) {\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var dir of dirs) {\n          if (!dir) continue;\n          if (d || PATH.isAbs(path)) d += '/';\n          d += dir;\n          try {\n            FS.mkdir(d, mode);\n          } catch(e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n  mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 0o666;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n  symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n  rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        // parents must exist\n        var lookup, old_dir, new_dir;\n  \n        // let the errors from non existent directories percolate up\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n  \n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        // need to be part of the same mount\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        // source must exist\n        var old_node = FS.lookupNode(old_dir, old_name);\n        // old path should not be an ancestor of the new path\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n        // new path should not be an ancestor of the old path\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n        // see if the new path already exists\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {\n          // not fatal\n        }\n        // early out if nothing needs to change\n        if (old_node === new_node) {\n          return;\n        }\n        // we'll need to delete the old entry\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        // need delete permissions if we'll be overwriting.\n        // need create permissions if new doesn't already exist.\n        errCode = new_node ?\n          FS.mayDelete(new_dir, new_name, isdir) :\n          FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n          throw new FS.ErrnoError(10);\n        }\n        // if we are going to change the parent, check write permissions\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // remove the node from the lookup hash\n        FS.hashRemoveNode(old_node);\n        // do the underlying fs rename\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n          // update old node (we do this here to avoid each backend\n          // needing to)\n          old_node.parent = new_dir;\n        } catch (e) {\n          throw e;\n        } finally {\n          // add the node back to the hash (in case node_ops.rename\n          // changed its name)\n          FS.hashAddNode(old_node);\n        }\n      },\n  rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n  readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        var readdir = FS.checkOpExists(node.node_ops.readdir, 54);\n        return readdir(node);\n      },\n  unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          // According to POSIX, we should map EISDIR to EPERM, but\n          // we instead do what Linux does (and we must, as we use\n          // the musl linux libc).\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n  readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return link.node_ops.readlink(link);\n      },\n  stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        var getattr = FS.checkOpExists(node.node_ops.getattr, 63);\n        return getattr(node);\n      },\n  fstat(fd) {\n        var stream = FS.getStreamChecked(fd);\n        var node = stream.node;\n        var getattr = stream.stream_ops.getattr;\n        var arg = getattr ? stream : node;\n        getattr ??= node.node_ops.getattr;\n        FS.checkOpExists(getattr, 63)\n        return getattr(arg);\n      },\n  lstat(path) {\n        return FS.stat(path, true);\n      },\n  doChmod(stream, node, mode, dontFollow) {\n        FS.doSetAttr(stream, node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          ctime: Date.now(),\n          dontFollow\n        });\n      },\n  chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        FS.doChmod(null, node, mode, dontFollow);\n      },\n  lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n  fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.doChmod(stream, stream.node, mode, false);\n      },\n  doChown(stream, node, dontFollow) {\n        FS.doSetAttr(stream, node, {\n          timestamp: Date.now(),\n          dontFollow\n          // we ignore the uid / gid for now\n        });\n      },\n  chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        FS.doChown(null, node, dontFollow);\n      },\n  lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n  fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.doChown(stream, stream.node, false);\n      },\n  doTruncate(stream, node, len) {\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.doSetAttr(stream, node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n  truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        FS.doTruncate(null, node, len);\n      },\n  ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if (len < 0 || (stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.doTruncate(stream, stream.node, len);\n      },\n  utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        var setattr = FS.checkOpExists(node.node_ops.setattr, 63);\n        setattr(node, {\n          atime: atime,\n          mtime: mtime\n        });\n      },\n  open(path, flags, mode = 0o666) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        if ((flags & 64)) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        var isDirPath;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          isDirPath = path.endsWith(\"/\");\n          // noent_okay makes it so that if the final component of the path\n          // doesn't exist, lookupPath returns `node: undefined`. `path` will be\n          // updated to point to the target of all symlinks.\n          var lookup = FS.lookupPath(path, {\n            follow: !(flags & 131072),\n            noent_okay: true\n          });\n          node = lookup.node;\n          path = lookup.path;\n        }\n        // perhaps we need to create the node\n        var created = false;\n        if ((flags & 64)) {\n          if (node) {\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\n            if ((flags & 128)) {\n              throw new FS.ErrnoError(20);\n            }\n          } else if (isDirPath) {\n            throw new FS.ErrnoError(31);\n          } else {\n            // node doesn't exist, try to create it\n            // Ignore the permission bits here to ensure we can `open` this new\n            // file below. We use chmod below the apply the permissions once the\n            // file is open.\n            node = FS.mknod(path, mode | 0o777, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        // can't truncate a device\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        // if asked only for a directory, then this must be one\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        // check permissions, if this is not a file we just created now (it is ok to\n        // create and write to a file with read-only permissions; it is read-only\n        // for later use)\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // do truncation if necessary\n        if ((flags & 512) && !created) {\n          FS.truncate(node, 0);\n        }\n        // we've already handled these, don't pass down to the underlying vfs\n        flags &= ~(128 | 512 | 131072);\n  \n        // register the stream with the filesystem\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),  // we want the absolute path to the node\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n          ungotten: [],\n          error: false\n        });\n        // call the new stream's open function\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (created) {\n          FS.chmod(node, mode & 0o777);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n  close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null; // free readdir state\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n  isClosed(stream) {\n        return stream.fd === null;\n      },\n  llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n  read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n  write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          // seek to the end before writing in append mode\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n  mmap(stream, length, position, prot, flags) {\n        // User requests writing to file (prot & PROT_WRITE != 0).\n        // Checking if we have permissions to write to the file unless\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\n        // as all modifications will be visible only in the memory of\n        // the current process.\n        if ((prot & 2) !== 0\n            && (flags & 2) === 0\n            && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!length) {\n          throw new FS.ErrnoError(28);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n  msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n  ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n  readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n  writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n  cwd:() => FS.currentPath,\n  chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n  createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n  createDefaultDevices() {\n        // create /dev\n        FS.mkdir('/dev');\n        // setup /dev/null\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n          llseek: () => 0,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n        // setup /dev/tty and /dev/tty1\n        // stderr needs to print output using err() rather than out()\n        // so we register a second tty just for it.\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n        // setup /dev/[u]random\n        // use a buffer to avoid overhead of individual crypto calls per byte\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomFill(randomBuffer);\n            randomLeft = randomBuffer.byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n        // we're not going to emulate the actual shm device,\n        // just create the tmp dirs that reside in it commonly\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n  createSpecialDirectories() {\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\n        // name of the stream for fd 6 (see test_unistd_ttyname)\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount({\n          mount() {\n            var node = FS.createNode(proc_self, 'fd', 16895, 73);\n            node.stream_ops = {\n              llseek: MEMFS.stream_ops.llseek,\n            };\n            node.node_ops = {\n              lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStreamChecked(fd);\n                var ret = {\n                  parent: null,\n                  mount: { mountpoint: 'fake' },\n                  node_ops: { readlink: () => stream.path },\n                  id: fd + 1,\n                };\n                ret.parent = ret; // make it look like a simple root node\n                return ret;\n              },\n              readdir() {\n                return Array.from(FS.streams.entries())\n                  .filter(([k, v]) => v)\n                  .map(([k, v]) => k.toString());\n              }\n            };\n            return node;\n          }\n        }, {}, '/proc/self/fd');\n      },\n  createStandardStreams(input, output, error) {\n        // TODO deprecate the old functionality of a single\n        // input / output callback and that utilizes FS.createDevice\n        // and instead require a unique set of stream ops\n  \n        // by default, we symlink the standard streams to the\n        // default tty devices. however, if the standard streams\n        // have been overwritten we create a unique device for\n        // them instead.\n        if (input) {\n          FS.createDevice('/dev', 'stdin', input);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (output) {\n          FS.createDevice('/dev', 'stdout', null, output);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (error) {\n          FS.createDevice('/dev', 'stderr', null, error);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n  \n        // open default streams for the stdin, stdout and stderr devices\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n  staticInit() {\n        FS.nameTable = new Array(4096);\n  \n        FS.mount(MEMFS, {}, '/');\n  \n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n  \n        FS.filesystems = {\n          'MEMFS': MEMFS,\n          'IDBFS': IDBFS,\n        };\n      },\n  init(input, output, error) {\n        FS.initialized = true;\n  \n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n        input ??= Module['stdin'];\n        output ??= Module['stdout'];\n        error ??= Module['stderr'];\n  \n        FS.createStandardStreams(input, output, error);\n      },\n  quit() {\n        FS.initialized = false;\n        // force-flush all streams, so we get musl std streams printed out\n        // close all of our streams\n        for (var stream of FS.streams) {\n          if (stream) {\n            FS.close(stream);\n          }\n        }\n      },\n  findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n  analyzePath(path, dontResolveLastLink) {\n        // operate from within the context of the symlink's target\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {\n        }\n        var ret = {\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\n          parentExists: false, parentPath: null, parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        };\n        return ret;\n      },\n  createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n          parent = current;\n        }\n        return current;\n      },\n  createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n  createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          // make sure we can write to the file\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n  createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(!!input, !!output);\n        FS.createDevice.major ??= 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        // Create a fake device that a set of stream ops to emulate\n        // the old behavior.\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            // flush any pending line data\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos /* ignored */) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset+i] = result;\n            }\n            if (bytesRead) {\n              stream.node.atime = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset+i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.mtime = stream.node.ctime = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n  forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else { // Command-line.\n          try {\n            obj.contents = readBinary(obj.url);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        }\n      },\n  createLazyFile(parent, name, url, canRead, canWrite) {\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array).\n        // Actual getting is abstracted away for eventual reuse.\n        class LazyUint8Array {\n          lengthKnown = false;\n          chunks = []; // Loaded chunks. Index is the chunk number\n          get(idx) {\n            if (idx > this.length-1 || idx < 0) {\n              return undefined;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = (idx / this.chunkSize)|0;\n            return this.getter(chunkNum)[chunkOffset];\n          }\n          setDataGetter(getter) {\n            this.getter = getter;\n          }\n          cacheLength() {\n            // Find length\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n  \n            var chunkSize = 1024*1024; // Chunk size in bytes\n  \n            if (!hasByteServing) chunkSize = datalength;\n  \n            // Function to get a range from the remote URL.\n            var doXHR = (from, to) => {\n              if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n  \n              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n  \n              // Some hints to the browser that we want binary data.\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n  \n              xhr.send(null);\n              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n              if (xhr.response !== undefined) {\n                return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum+1) * chunkSize - 1; // including this byte\n              end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n  \n            if (usesGzip || !datalength) {\n              // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n              chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n  \n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          }\n          get length() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._length;\n          }\n          get chunkSize() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._chunkSize;\n          }\n        }\n  \n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n  \n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        // This is a total hack, but I want to get this lazy file code out of the\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\n        // be its own thin LAZYFS proxying calls to MEMFS.\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        // Add a function that defers querying the file size until it is asked the first time.\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function() { return this.contents.length; }\n          }\n        });\n        // override each stream op with one that tries to force load the lazy file first\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = (...args) => {\n            FS.forceLoadFile(node);\n            return fn(...args);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length)\n            return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) { // normal array\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n        // use a custom read function\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position)\n        };\n        // use a custom mmap function\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n  };\n  \n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */\n  var UTF8ToString = (ptr, maxBytesToRead) => {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n  var SYSCALLS = {\n  DEFAULT_POLLMASK:5,\n  calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n        // relative path\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);;\n          }\n          return dir;\n        }\n        return dir + '/' + path;\n      },\n  writeStat(buf, stat) {\n        HEAP32[((buf)>>2)] = stat.dev;\n        HEAP32[(((buf)+(4))>>2)] = stat.mode;\n        HEAPU32[(((buf)+(8))>>2)] = stat.nlink;\n        HEAP32[(((buf)+(12))>>2)] = stat.uid;\n        HEAP32[(((buf)+(16))>>2)] = stat.gid;\n        HEAP32[(((buf)+(20))>>2)] = stat.rdev;\n        HEAP64[(((buf)+(24))>>3)] = BigInt(stat.size);\n        HEAP32[(((buf)+(32))>>2)] = 4096;\n        HEAP32[(((buf)+(36))>>2)] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        HEAP64[(((buf)+(40))>>3)] = BigInt(Math.floor(atime / 1000));\n        HEAPU32[(((buf)+(48))>>2)] = (atime % 1000) * 1000 * 1000;\n        HEAP64[(((buf)+(56))>>3)] = BigInt(Math.floor(mtime / 1000));\n        HEAPU32[(((buf)+(64))>>2)] = (mtime % 1000) * 1000 * 1000;\n        HEAP64[(((buf)+(72))>>3)] = BigInt(Math.floor(ctime / 1000));\n        HEAPU32[(((buf)+(80))>>2)] = (ctime % 1000) * 1000 * 1000;\n        HEAP64[(((buf)+(88))>>3)] = BigInt(stat.ino);\n        return 0;\n      },\n  writeStatFs(buf, stats) {\n        HEAP32[(((buf)+(4))>>2)] = stats.bsize;\n        HEAP32[(((buf)+(40))>>2)] = stats.bsize;\n        HEAP32[(((buf)+(8))>>2)] = stats.blocks;\n        HEAP32[(((buf)+(12))>>2)] = stats.bfree;\n        HEAP32[(((buf)+(16))>>2)] = stats.bavail;\n        HEAP32[(((buf)+(20))>>2)] = stats.files;\n        HEAP32[(((buf)+(24))>>2)] = stats.ffree;\n        HEAP32[(((buf)+(28))>>2)] = stats.fsid;\n        HEAP32[(((buf)+(44))>>2)] = stats.flags;  // ST_NOSUID\n        HEAP32[(((buf)+(36))>>2)] = stats.namelen;\n      },\n  doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n  getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n  varargs:undefined,\n  getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n  };\n  function ___syscall_dup3(fd, newfd, flags) {\n  try {\n  \n      var old = SYSCALLS.getStreamFromFD(fd);\n      if (old.fd === newfd) return -28;\n      // Check newfd is within range of valid open file descriptors.\n      if (newfd < 0 || newfd >= FS.MAX_OPEN_FDS) return -8;\n      var existing = FS.getStream(newfd);\n      if (existing) FS.close(existing);\n      return FS.dupStream(old, newfd).fd;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_faccessat(dirfd, path, amode, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (amode & ~7) {\n        // need a valid mode\n        return -28;\n      }\n      var lookup = FS.lookupPath(path, { follow: true });\n      var node = lookup.node;\n      if (!node) {\n        return -44;\n      }\n      var perms = '';\n      if (amode & 4) perms += 'r';\n      if (amode & 2) perms += 'w';\n      if (amode & 1) perms += 'x';\n      if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {\n        return -2;\n      }\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  /** @suppress {duplicate } */\n  var syscallGetVarargI = () => {\n      // the `+` prepended here is necessary to convince the JSCompiler that varargs is indeed a number.\n      var ret = HEAP32[((+SYSCALLS.varargs)>>2)];\n      SYSCALLS.varargs += 4;\n      return ret;\n    };\n  var syscallGetVarargP = syscallGetVarargI;\n  \n  \n  function ___syscall_fcntl64(fd, cmd, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (cmd) {\n        case 0: {\n          var arg = syscallGetVarargI();\n          if (arg < 0) {\n            return -28;\n          }\n          while (FS.streams[arg]) {\n            arg++;\n          }\n          var newStream;\n          newStream = FS.dupStream(stream, arg);\n          return newStream.fd;\n        }\n        case 1:\n        case 2:\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\n        case 3:\n          return stream.flags;\n        case 4: {\n          var arg = syscallGetVarargI();\n          stream.flags |= arg;\n          return 0;\n        }\n        case 12: {\n          var arg = syscallGetVarargP();\n          var offset = 0;\n          // We're always unlocked.\n          HEAP16[(((arg)+(offset))>>1)] = 2;\n          return 0;\n        }\n        case 13:\n        case 14:\n          // Pretend that the locking is successful. These are process-level locks,\n          // and Emscripten programs are a single process. If we supported linking a\n          // filesystem between programs, we'd need to do more here.\n          // See https://github.com/emscripten-core/emscripten/issues/23697\n          return 0;\n      }\n      return -28;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_fstat64(fd, buf) {\n  try {\n  \n      return SYSCALLS.writeStat(buf, FS.fstat(fd));\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n  \n  function ___syscall_getdents64(fd, dirp, count) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd)\n      stream.getdents ||= FS.readdir(stream.path);\n  \n      var struct_size = 280;\n      var pos = 0;\n      var off = FS.llseek(stream, 0, 1);\n  \n      var startIdx = Math.floor(off / struct_size);\n      var endIdx = Math.min(stream.getdents.length, startIdx + Math.floor(count/struct_size))\n      for (var idx = startIdx; idx < endIdx; idx++) {\n        var id;\n        var type;\n        var name = stream.getdents[idx];\n        if (name === '.') {\n          id = stream.node.id;\n          type = 4; // DT_DIR\n        }\n        else if (name === '..') {\n          var lookup = FS.lookupPath(stream.path, { parent: true });\n          id = lookup.node.id;\n          type = 4; // DT_DIR\n        }\n        else {\n          var child;\n          try {\n            child = FS.lookupNode(stream.node, name);\n          } catch (e) {\n            // If the entry is not a directory, file, or symlink, nodefs\n            // lookupNode will raise EINVAL. Skip these and continue.\n            if (e?.errno === 28) {\n              continue;\n            }\n            throw e;\n          }\n          id = child.id;\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\n                 8;                             // DT_REG, regular file.\n        }\n        HEAP64[((dirp + pos)>>3)] = BigInt(id);\n        HEAP64[(((dirp + pos)+(8))>>3)] = BigInt((idx + 1) * struct_size);\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\n        HEAP8[(dirp + pos)+(18)] = type;\n        stringToUTF8(name, dirp + pos + 19, 256);\n        pos += struct_size;\n      }\n      FS.llseek(stream, idx * struct_size, 0);\n      return pos;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  function ___syscall_ioctl(fd, op, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (op) {\n        case 21509: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21505: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcgets) {\n            var termios = stream.tty.ops.ioctl_tcgets(stream);\n            var argp = syscallGetVarargP();\n            HEAP32[((argp)>>2)] = termios.c_iflag || 0;\n            HEAP32[(((argp)+(4))>>2)] = termios.c_oflag || 0;\n            HEAP32[(((argp)+(8))>>2)] = termios.c_cflag || 0;\n            HEAP32[(((argp)+(12))>>2)] = termios.c_lflag || 0;\n            for (var i = 0; i < 32; i++) {\n              HEAP8[(argp + i)+(17)] = termios.c_cc[i] || 0;\n            }\n            return 0;\n          }\n          return 0;\n        }\n        case 21510:\n        case 21511:\n        case 21512: {\n          if (!stream.tty) return -59;\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21506:\n        case 21507:\n        case 21508: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcsets) {\n            var argp = syscallGetVarargP();\n            var c_iflag = HEAP32[((argp)>>2)];\n            var c_oflag = HEAP32[(((argp)+(4))>>2)];\n            var c_cflag = HEAP32[(((argp)+(8))>>2)];\n            var c_lflag = HEAP32[(((argp)+(12))>>2)];\n            var c_cc = []\n            for (var i = 0; i < 32; i++) {\n              c_cc.push(HEAP8[(argp + i)+(17)]);\n            }\n            return stream.tty.ops.ioctl_tcsets(stream.tty, op, { c_iflag, c_oflag, c_cflag, c_lflag, c_cc });\n          }\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21519: {\n          if (!stream.tty) return -59;\n          var argp = syscallGetVarargP();\n          HEAP32[((argp)>>2)] = 0;\n          return 0;\n        }\n        case 21520: {\n          if (!stream.tty) return -59;\n          return -28; // not supported\n        }\n        case 21531: {\n          var argp = syscallGetVarargP();\n          return FS.ioctl(stream, op, argp);\n        }\n        case 21523: {\n          // TODO: in theory we should write to the winsize struct that gets\n          // passed in, but for now musl doesn't read anything on it\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tiocgwinsz) {\n            var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n            var argp = syscallGetVarargP();\n            HEAP16[((argp)>>1)] = winsize[0];\n            HEAP16[(((argp)+(2))>>1)] = winsize[1];\n          }\n          return 0;\n        }\n        case 21524: {\n          // TODO: technically, this ioctl call should change the window size.\n          // but, since emscripten doesn't have any concept of a terminal window\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21515: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        default: return -28; // not supported\n      }\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_lstat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.writeStat(buf, FS.lstat(path));\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_mkdirat(dirfd, path, mode) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      FS.mkdir(path, mode, 0);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      var nofollow = flags & 256;\n      var allowEmpty = flags & 4096;\n      flags = flags & (~6400);\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n      return SYSCALLS.writeStat(buf, nofollow ? FS.lstat(path) : FS.stat(path));\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  function ___syscall_openat(dirfd, path, flags, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      var mode = varargs ? syscallGetVarargI() : 0;\n      return FS.open(path, flags, mode).fd;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  \n  function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (bufsize <= 0) return -28;\n      var ret = FS.readlink(path);\n  \n      var len = Math.min(bufsize, lengthBytesUTF8(ret));\n      var endChar = HEAP8[buf+len];\n      stringToUTF8(ret, buf, bufsize+1);\n      // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)\n      // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.\n      HEAP8[buf+len] = endChar;\n      return len;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_renameat(olddirfd, oldpath, newdirfd, newpath) {\n  try {\n  \n      oldpath = SYSCALLS.getStr(oldpath);\n      newpath = SYSCALLS.getStr(newpath);\n      oldpath = SYSCALLS.calculateAt(olddirfd, oldpath);\n      newpath = SYSCALLS.calculateAt(newdirfd, newpath);\n      FS.rename(oldpath, newpath);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_rmdir(path) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.rmdir(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_stat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.writeStat(buf, FS.stat(path));\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_unlinkat(dirfd, path, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (flags === 0) {\n        FS.unlink(path);\n      } else if (flags === 512) {\n        FS.rmdir(path);\n      } else {\n        abort('Invalid flags passed to unlinkat');\n      }\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var __abort_js = () =>\n      abort('');\n\n  var __emscripten_system = (command) => {\n      // int system(const char *command);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/system.html\n      // Can't call external programs.\n      if (!command) return 0; // no shell available\n      return -52;\n    };\n\n  var __emscripten_throw_longjmp = () => {\n      throw Infinity;\n    };\n\n  var INT53_MAX = 9007199254740992;\n  \n  var INT53_MIN = -9007199254740992;\n  var bigintToI53Checked = (num) => (num < INT53_MIN || num > INT53_MAX) ? NaN : Number(num);\n  function __gmtime_js(time, tmPtr) {\n    time = bigintToI53Checked(time);\n  \n  \n      var date = new Date(time * 1000);\n      HEAP32[((tmPtr)>>2)] = date.getUTCSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getUTCMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getUTCHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getUTCDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getUTCMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getUTCFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getUTCDay();\n      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n      var yday = ((date.getTime() - start) / (1000 * 60 * 60 * 24))|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n    ;\n  }\n\n  var isLeapYear = (year) => year%4 === 0 && (year%100 !== 0 || year%400 === 0);\n  \n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\n  \n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\n  var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\n  \n      return yday;\n    };\n  \n  function __localtime_js(time, tmPtr) {\n    time = bigintToI53Checked(time);\n  \n  \n      var date = new Date(time*1000);\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n  \n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\n  \n      // Attention: DST is in December in South, and some regions don't have DST at all.\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\n    ;\n  }\n\n  \n  var __mktime_js = function(tmPtr) {\n  \n  var ret = (() => { \n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\n                          HEAP32[(((tmPtr)+(16))>>2)],\n                          HEAP32[(((tmPtr)+(12))>>2)],\n                          HEAP32[(((tmPtr)+(8))>>2)],\n                          HEAP32[(((tmPtr)+(4))>>2)],\n                          HEAP32[((tmPtr)>>2)],\n                          0);\n  \n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\n      var guessedOffset = date.getTimezoneOffset();\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\n      if (dst < 0) {\n        // Attention: some regions don't have DST at all.\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\n      }\n  \n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      // To match expected behavior, update fields from date\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\n  \n      var timeMs = date.getTime();\n      if (isNaN(timeMs)) {\n        return -1;\n      }\n      // Return time in microseconds\n      return timeMs / 1000;\n     })();\n  return BigInt(ret);\n  };\n\n  var __tzset_js = (timezone, daylight, std_name, dst_name) => {\n      // TODO: Use (malleable) environment variables instead of system settings.\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n  \n      // Local standard timezone offset. Local standard time is not adjusted for\n      // daylight savings.  This code uses the fact that getTimezoneOffset returns\n      // a greater value during Standard Time versus Daylight Saving Time (DST).\n      // Thus it determines the expected output during Standard Time, and it\n      // compares whether the output of the given date the same (Standard) or less\n      // (DST).\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n  \n      // timezone is specified as seconds west of UTC (\"The external variable\n      // `timezone` shall be set to the difference, in seconds, between\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\n      // as returned by stdTimezoneOffset.\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\n  \n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\n  \n      var extractZone = (timezoneOffset) => {\n        // Why inverse sign?\n        // Read here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\n        var sign = timezoneOffset >= 0 ? \"-\" : \"+\";\n  \n        var absOffset = Math.abs(timezoneOffset)\n        var hours = String(Math.floor(absOffset / 60)).padStart(2, \"0\");\n        var minutes = String(absOffset % 60).padStart(2, \"0\");\n  \n        return `UTC${sign}${hours}${minutes}`;\n      }\n  \n      var winterName = extractZone(winterOffset);\n      var summerName = extractZone(summerOffset);\n      if (summerOffset < winterOffset) {\n        // Northern hemisphere\n        stringToUTF8(winterName, std_name, 17);\n        stringToUTF8(summerName, dst_name, 17);\n      } else {\n        stringToUTF8(winterName, dst_name, 17);\n        stringToUTF8(summerName, std_name, 17);\n      }\n    };\n\n  var _emscripten_get_now = () => performance.now();\n  \n  var _emscripten_date_now = () => Date.now();\n  \n  var nowIsMonotonic = 1;\n  \n  var checkWasiClock = (clock_id) => clock_id >= 0 && clock_id <= 3;\n  \n  function _clock_time_get(clk_id, ignored_precision, ptime) {\n    ignored_precision = bigintToI53Checked(ignored_precision);\n  \n  \n      if (!checkWasiClock(clk_id)) {\n        return 28;\n      }\n      var now;\n      // all wasi clocks but realtime are monotonic\n      if (clk_id === 0) {\n        now = _emscripten_date_now();\n      } else if (nowIsMonotonic) {\n        now = _emscripten_get_now();\n      } else {\n        return 52;\n      }\n      // \"now\" is in ms, and wasi times are in ns.\n      var nsec = Math.round(now * 1000 * 1000);\n      HEAP64[((ptime)>>3)] = BigInt(nsec);\n      return 0;\n    ;\n  }\n\n  var handleException = (e) => {\n      // Certain exception types we do not treat as errors since they are used for\n      // internal control flow.\n      // 1. ExitStatus, which is thrown by exit()\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\n      //    that wish to return to JS event loop.\n      if (e instanceof ExitStatus || e == 'unwind') {\n        return EXITSTATUS;\n      }\n      quit_(1, e);\n    };\n  \n  \n  var runtimeKeepaliveCounter = 0;\n  var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n  var _proc_exit = (code) => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        Module['onExit']?.(code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n  /** @suppress {duplicate } */\n  /** @param {boolean|number=} implicit */\n  var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n  \n      _proc_exit(status);\n    };\n  var _exit = exitJS;\n  \n  \n  var maybeExit = () => {\n      if (!keepRuntimeAlive()) {\n        try {\n          _exit(EXITSTATUS);\n        } catch (e) {\n          handleException(e);\n        }\n      }\n    };\n  var callUserCallback = (func) => {\n      if (ABORT) {\n        return;\n      }\n      try {\n        func();\n        maybeExit();\n      } catch (e) {\n        handleException(e);\n      }\n    };\n  \n  /** @param {number=} timeout */\n  var safeSetTimeout = (func, timeout) => {\n      \n      return setTimeout(() => {\n        \n        callUserCallback(func);\n      }, timeout);\n    };\n  \n  var warnOnce = (text) => {\n      warnOnce.shown ||= {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        err(text);\n      }\n    };\n  \n  \n  var Browser = {\n  useWebGL:false,\n  isFullscreen:false,\n  pointerLock:false,\n  moduleContextCreatedCallbacks:[],\n  workers:[],\n  preloadedImages:{\n  },\n  preloadedAudios:{\n  },\n  getCanvas:() => Module['canvas'],\n  init() {\n        if (Browser.initted) return;\n        Browser.initted = true;\n  \n        // Support for plugins that can process preloaded files. You can add more of these to\n        // your app by creating and appending to preloadPlugins.\n        //\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\n        // might create some side data structure for use later (like an Image element, etc.).\n  \n        var imagePlugin = {};\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\n          return !Module['noImageDecoding'] && /\\.(jpg|jpeg|png|bmp|webp)$/i.test(name);\n        };\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          if (b.size !== byteArray.length) { // Safari bug #118630\n            // Safari's Blob can only take an ArrayBuffer\n            b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\n          }\n          var url = URL.createObjectURL(b);\n          var img = new Image();\n          img.onload = () => {\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\n            canvas.width = img.width;\n            canvas.height = img.height;\n            var ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            Browser.preloadedImages[name] = canvas;\n            URL.revokeObjectURL(url);\n            onload?.(byteArray);\n          };\n          img.onerror = (event) => {\n            err(`Image ${url} could not be decoded`);\n            onerror?.();\n          };\n          img.src = url;\n        };\n        preloadPlugins.push(imagePlugin);\n  \n        var audioPlugin = {};\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\n          return !Module['noAudioDecoding'] && name.slice(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\n        };\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\n          var done = false;\n          function finish(audio) {\n            if (done) return;\n            done = true;\n            Browser.preloadedAudios[name] = audio;\n            onload?.(byteArray);\n          }\n          function fail() {\n            if (done) return;\n            done = true;\n            Browser.preloadedAudios[name] = new Audio(); // empty shim\n            onerror?.();\n          }\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          var url = URL.createObjectURL(b); // XXX we never revoke this!\n          var audio = new Audio();\n          audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\n          audio.onerror = function audio_onerror(event) {\n            if (done) return;\n            err(`warning: browser could not fully decode audio ${name}, trying slower base64 approach`);\n            function encode64(data) {\n              var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n              var PAD = '=';\n              var ret = '';\n              var leftchar = 0;\n              var leftbits = 0;\n              for (var i = 0; i < data.length; i++) {\n                leftchar = (leftchar << 8) | data[i];\n                leftbits += 8;\n                while (leftbits >= 6) {\n                  var curr = (leftchar >> (leftbits-6)) & 0x3f;\n                  leftbits -= 6;\n                  ret += BASE[curr];\n                }\n              }\n              if (leftbits == 2) {\n                ret += BASE[(leftchar&3) << 4];\n                ret += PAD + PAD;\n              } else if (leftbits == 4) {\n                ret += BASE[(leftchar&0xf) << 2];\n                ret += PAD;\n              }\n              return ret;\n            }\n            audio.src = 'data:audio/x-' + name.slice(-3) + ';base64,' + encode64(byteArray);\n            finish(audio); // we don't wait for confirmation this worked - but it's worth trying\n          };\n          audio.src = url;\n          // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\n          safeSetTimeout(() => {\n            finish(audio); // try to use it even though it is not necessarily ready to play\n          }, 10000);\n        };\n        preloadPlugins.push(audioPlugin);\n  \n        // Canvas event setup\n  \n        function pointerLockChange() {\n          var canvas = Browser.getCanvas();\n          Browser.pointerLock = document['pointerLockElement'] === canvas ||\n                                document['mozPointerLockElement'] === canvas ||\n                                document['webkitPointerLockElement'] === canvas ||\n                                document['msPointerLockElement'] === canvas;\n        }\n        var canvas = Browser.getCanvas();\n        if (canvas) {\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\n          // Module['forcedAspectRatio'] = 4 / 3;\n  \n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\n                                      canvas['mozRequestPointerLock'] ||\n                                      canvas['webkitRequestPointerLock'] ||\n                                      canvas['msRequestPointerLock'] ||\n                                      (() => {});\n          canvas.exitPointerLock = document['exitPointerLock'] ||\n                                   document['mozExitPointerLock'] ||\n                                   document['webkitExitPointerLock'] ||\n                                   document['msExitPointerLock'] ||\n                                   (() => {}); // no-op if function does not exist\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\n  \n          document.addEventListener('pointerlockchange', pointerLockChange, false);\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\n  \n          if (Module['elementPointerLock']) {\n            canvas.addEventListener(\"click\", (ev) => {\n              if (!Browser.pointerLock && Browser.getCanvas().requestPointerLock) {\n                Browser.getCanvas().requestPointerLock();\n                ev.preventDefault();\n              }\n            }, false);\n          }\n        }\n      },\n  createContext(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\n        if (useWebGL && Module['ctx'] && canvas == Browser.getCanvas()) return Module['ctx']; // no need to recreate GL context if it's already been created for this canvas.\n  \n        var ctx;\n        var contextHandle;\n        if (useWebGL) {\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\n          var contextAttributes = {\n            antialias: false,\n            alpha: false,\n            majorVersion: 2,\n          };\n  \n          if (webGLContextAttributes) {\n            for (var attribute in webGLContextAttributes) {\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\n            }\n          }\n  \n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\n          // Browser.createContext() should not even be emitted.\n          if (typeof GL != 'undefined') {\n            contextHandle = GL.createContext(canvas, contextAttributes);\n            if (contextHandle) {\n              ctx = GL.getContext(contextHandle).GLctx;\n            }\n          }\n        } else {\n          ctx = canvas.getContext('2d');\n        }\n  \n        if (!ctx) return null;\n  \n        if (setInModule) {\n          Module['ctx'] = ctx;\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\n          Browser.useWebGL = useWebGL;\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\n          Browser.init();\n        }\n        return ctx;\n      },\n  fullscreenHandlersInstalled:false,\n  lockPointer:undefined,\n  resizeCanvas:undefined,\n  requestFullscreen(lockPointer, resizeCanvas) {\n        Browser.lockPointer = lockPointer;\n        Browser.resizeCanvas = resizeCanvas;\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\n  \n        var canvas = Browser.getCanvas();\n        function fullscreenChange() {\n          Browser.isFullscreen = false;\n          var canvasContainer = canvas.parentNode;\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\n            canvas.exitFullscreen = Browser.exitFullscreen;\n            if (Browser.lockPointer) canvas.requestPointerLock();\n            Browser.isFullscreen = true;\n            if (Browser.resizeCanvas) {\n              Browser.setFullscreenCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          } else {\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\n            canvasContainer.parentNode.removeChild(canvasContainer);\n  \n            if (Browser.resizeCanvas) {\n              Browser.setWindowedCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          }\n          Module['onFullScreen']?.(Browser.isFullscreen);\n          Module['onFullscreen']?.(Browser.isFullscreen);\n        }\n  \n        if (!Browser.fullscreenHandlersInstalled) {\n          Browser.fullscreenHandlersInstalled = true;\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\n        }\n  \n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\n        var canvasContainer = document.createElement(\"div\");\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\n        canvasContainer.appendChild(canvas);\n  \n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\n                                            canvasContainer['mozRequestFullScreen'] ||\n                                            canvasContainer['msRequestFullscreen'] ||\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\n  \n        canvasContainer.requestFullscreen();\n      },\n  exitFullscreen() {\n        // This is workaround for chrome. Trying to exit from fullscreen\n        // not in fullscreen state will cause \"TypeError: Document not active\"\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\n        if (!Browser.isFullscreen) {\n          return false;\n        }\n  \n        var CFS = document['exitFullscreen'] ||\n                  document['cancelFullScreen'] ||\n                  document['mozCancelFullScreen'] ||\n                  document['msExitFullscreen'] ||\n                  document['webkitCancelFullScreen'] ||\n            (() => {});\n        CFS.apply(document, []);\n        return true;\n      },\n  safeSetTimeout(func, timeout) {\n        // Legacy function, this is used by the SDL2 port so we need to keep it\n        // around at least until that is updated.\n        // See https://github.com/libsdl-org/SDL/pull/6304\n        return safeSetTimeout(func, timeout);\n      },\n  getMimetype(name) {\n        return {\n          'jpg': 'image/jpeg',\n          'jpeg': 'image/jpeg',\n          'png': 'image/png',\n          'bmp': 'image/bmp',\n          'ogg': 'audio/ogg',\n          'wav': 'audio/wav',\n          'mp3': 'audio/mpeg'\n        }[name.slice(name.lastIndexOf('.')+1)];\n      },\n  getUserMedia(func) {\n        window.getUserMedia ||= navigator['getUserMedia'] ||\n                                navigator['mozGetUserMedia'];\n        window.getUserMedia(func);\n      },\n  getMovementX(event) {\n        return event['movementX'] ||\n               event['mozMovementX'] ||\n               event['webkitMovementX'] ||\n               0;\n      },\n  getMovementY(event) {\n        return event['movementY'] ||\n               event['mozMovementY'] ||\n               event['webkitMovementY'] ||\n               0;\n      },\n  getMouseWheelDelta(event) {\n        var delta = 0;\n        switch (event.type) {\n          case 'DOMMouseScroll':\n            // 3 lines make up a step\n            delta = event.detail / 3;\n            break;\n          case 'mousewheel':\n            // 120 units make up a step\n            delta = event.wheelDelta / 120;\n            break;\n          case 'wheel':\n            delta = event.deltaY\n            switch (event.deltaMode) {\n              case 0:\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\n                delta /= 100;\n                break;\n              case 1:\n                // DOM_DELTA_LINE: 3 lines make up a step\n                delta /= 3;\n                break;\n              case 2:\n                // DOM_DELTA_PAGE: A page makes up 80 steps\n                delta *= 80;\n                break;\n              default:\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\n            }\n            break;\n          default:\n            throw 'unrecognized mouse wheel event: ' + event.type;\n        }\n        return delta;\n      },\n  mouseX:0,\n  mouseY:0,\n  mouseMovementX:0,\n  mouseMovementY:0,\n  touches:{\n  },\n  lastTouches:{\n  },\n  calculateMouseCoords(pageX, pageY) {\n        // Calculate the movement based on the changes\n        // in the coordinates.\n        var canvas = Browser.getCanvas();\n        var rect = canvas.getBoundingClientRect();\n  \n        // Neither .scrollX or .pageXOffset are defined in a spec, but\n        // we prefer .scrollX because it is currently in a spec draft.\n        // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\n        var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\n        var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\n        var adjustedX = pageX - (scrollX + rect.left);\n        var adjustedY = pageY - (scrollY + rect.top);\n  \n        // the canvas might be CSS-scaled compared to its backbuffer;\n        // SDL-using content will want mouse coordinates in terms\n        // of backbuffer units.\n        adjustedX = adjustedX * (canvas.width / rect.width);\n        adjustedY = adjustedY * (canvas.height / rect.height);\n  \n        return { x: adjustedX, y: adjustedY };\n      },\n  setMouseCoords(pageX, pageY) {\n        const {x, y} = Browser.calculateMouseCoords(pageX, pageY);\n        Browser.mouseMovementX = x - Browser.mouseX;\n        Browser.mouseMovementY = y - Browser.mouseY;\n        Browser.mouseX = x;\n        Browser.mouseY = y;\n      },\n  calculateMouseEvent(event) { // event should be mousemove, mousedown or mouseup\n        if (Browser.pointerLock) {\n          // When the pointer is locked, calculate the coordinates\n          // based on the movement of the mouse.\n          // Workaround for Firefox bug 764498\n          if (event.type != 'mousemove' &&\n              ('mozMovementX' in event)) {\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\n          } else {\n            Browser.mouseMovementX = Browser.getMovementX(event);\n            Browser.mouseMovementY = Browser.getMovementY(event);\n          }\n  \n          // add the mouse delta to the current absolute mouse position\n          Browser.mouseX += Browser.mouseMovementX;\n          Browser.mouseY += Browser.mouseMovementY;\n        } else {\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\n            var touch = event.touch;\n            if (touch === undefined) {\n              return; // the \"touch\" property is only defined in SDL\n  \n            }\n            var coords = Browser.calculateMouseCoords(touch.pageX, touch.pageY);\n  \n            if (event.type === 'touchstart') {\n              Browser.lastTouches[touch.identifier] = coords;\n              Browser.touches[touch.identifier] = coords;\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\n              var last = Browser.touches[touch.identifier];\n              last ||= coords;\n              Browser.lastTouches[touch.identifier] = last;\n              Browser.touches[touch.identifier] = coords;\n            }\n            return;\n          }\n  \n          Browser.setMouseCoords(event.pageX, event.pageY);\n        }\n      },\n  resizeListeners:[],\n  updateResizeListeners() {\n        var canvas = Browser.getCanvas();\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\n      },\n  setCanvasSize(width, height, noUpdates) {\n        var canvas = Browser.getCanvas();\n        Browser.updateCanvasDimensions(canvas, width, height);\n        if (!noUpdates) Browser.updateResizeListeners();\n      },\n  windowedWidth:0,\n  windowedHeight:0,\n  setFullscreenCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Browser.getCanvas());\n        Browser.updateResizeListeners();\n      },\n  setWindowedCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Browser.getCanvas());\n        Browser.updateResizeListeners();\n      },\n  updateCanvasDimensions(canvas, wNative, hNative) {\n        if (wNative && hNative) {\n          canvas.widthNative = wNative;\n          canvas.heightNative = hNative;\n        } else {\n          wNative = canvas.widthNative;\n          hNative = canvas.heightNative;\n        }\n        var w = wNative;\n        var h = hNative;\n        if (Module['forcedAspectRatio'] > 0) {\n          if (w/h < Module['forcedAspectRatio']) {\n            w = Math.round(h * Module['forcedAspectRatio']);\n          } else {\n            h = Math.round(w / Module['forcedAspectRatio']);\n          }\n        }\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\n           var factor = Math.min(screen.width / w, screen.height / h);\n           w = Math.round(w * factor);\n           h = Math.round(h * factor);\n        }\n        if (Browser.resizeCanvas) {\n          if (canvas.width  != w) canvas.width  = w;\n          if (canvas.height != h) canvas.height = h;\n          if (typeof canvas.style != 'undefined') {\n            canvas.style.removeProperty( \"width\");\n            canvas.style.removeProperty(\"height\");\n          }\n        } else {\n          if (canvas.width  != wNative) canvas.width  = wNative;\n          if (canvas.height != hNative) canvas.height = hNative;\n          if (typeof canvas.style != 'undefined') {\n            if (w != wNative || h != hNative) {\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\n            } else {\n              canvas.style.removeProperty( \"width\");\n              canvas.style.removeProperty(\"height\");\n            }\n          }\n        }\n      },\n  };\n  \n  var EGL = {\n  errorCode:12288,\n  defaultDisplayInitialized:false,\n  currentContext:0,\n  currentReadSurface:0,\n  currentDrawSurface:0,\n  contextAttributes:{\n  alpha:false,\n  depth:false,\n  stencil:false,\n  antialias:false,\n  },\n  stringCache:{\n  },\n  setErrorCode(code) {\n        EGL.errorCode = code;\n      },\n  chooseConfig(display, attribList, config, config_size, numConfigs) {\n        if (display != 62000) {\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n          return 0;\n        }\n  \n        if (attribList) {\n          // read attribList if it is non-null\n          for (;;) {\n            var param = HEAP32[((attribList)>>2)];\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.alpha = (alphaSize > 0);\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.depth = (depthSize > 0);\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.stencil = (stencilSize > 0);\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples > 0);\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples == 1);\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\n            } else if (param == 0x3038 /*EGL_NONE*/) {\n                break;\n            }\n            attribList += 8;\n          }\n        }\n  \n        if ((!config || !config_size) && !numConfigs) {\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n        }\n        if (numConfigs) {\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\n        }\n        if (config && config_size > 0) {\n          HEAPU32[((config)>>2)] = 62002;\n        }\n  \n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      },\n  };\n  var _eglBindAPI = (api) => {\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      }\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n      return 0;\n    };\n\n  var _eglChooseConfig = (display, attrib_list, configs, config_size, numConfigs) =>\n      EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\n\n  var GLctx;\n  \n  var webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance = (ctx) =>\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\n      !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\n  \n  var webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance = (ctx) => {\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\n    };\n  \n  var webgl_enable_EXT_polygon_offset_clamp = (ctx) =>\n      !!(ctx.extPolygonOffsetClamp = ctx.getExtension('EXT_polygon_offset_clamp'));\n  \n  var webgl_enable_EXT_clip_control = (ctx) =>\n      !!(ctx.extClipControl = ctx.getExtension('EXT_clip_control'));\n  \n  var webgl_enable_WEBGL_polygon_mode = (ctx) =>\n      !!(ctx.webglPolygonMode = ctx.getExtension('WEBGL_polygon_mode'));\n  \n  var webgl_enable_WEBGL_multi_draw = (ctx) =>\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\n      !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\n  \n  var getEmscriptenSupportedExtensions = (ctx) => {\n      // Restrict the list of advertised extensions to those that we actually\n      // support.\n      var supportedExtensions = [\n        // WebGL 2 extensions\n        'EXT_color_buffer_float',\n        'EXT_conservative_depth',\n        'EXT_disjoint_timer_query_webgl2',\n        'EXT_texture_norm16',\n        'NV_shader_noperspective_interpolation',\n        'WEBGL_clip_cull_distance',\n        // WebGL 1 and WebGL 2 extensions\n        'EXT_clip_control',\n        'EXT_color_buffer_half_float',\n        'EXT_depth_clamp',\n        'EXT_float_blend',\n        'EXT_polygon_offset_clamp',\n        'EXT_texture_compression_bptc',\n        'EXT_texture_compression_rgtc',\n        'EXT_texture_filter_anisotropic',\n        'KHR_parallel_shader_compile',\n        'OES_texture_float_linear',\n        'WEBGL_blend_func_extended',\n        'WEBGL_compressed_texture_astc',\n        'WEBGL_compressed_texture_etc',\n        'WEBGL_compressed_texture_etc1',\n        'WEBGL_compressed_texture_s3tc',\n        'WEBGL_compressed_texture_s3tc_srgb',\n        'WEBGL_debug_renderer_info',\n        'WEBGL_debug_shaders',\n        'WEBGL_lose_context',\n        'WEBGL_multi_draw',\n        'WEBGL_polygon_mode'\n      ];\n      // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n      return (ctx.getSupportedExtensions() || []).filter(ext => supportedExtensions.includes(ext));\n    };\n  \n  \n  var GL = {\n  counter:1,\n  buffers:[],\n  programs:[],\n  framebuffers:[],\n  renderbuffers:[],\n  textures:[],\n  shaders:[],\n  vaos:[],\n  contexts:[],\n  offscreenCanvases:{\n  },\n  queries:[],\n  samplers:[],\n  transformFeedbacks:[],\n  syncs:[],\n  stringCache:{\n  },\n  stringiCache:{\n  },\n  unpackAlignment:4,\n  unpackRowLength:0,\n  recordError:(errorCode) => {\n        if (!GL.lastError) {\n          GL.lastError = errorCode;\n        }\n      },\n  getNewId:(table) => {\n        var ret = GL.counter++;\n        for (var i = table.length; i < ret; i++) {\n          table[i] = null;\n        }\n        return ret;\n      },\n  genObject:(n, buffers, createFunction, objectTable\n        ) => {\n        for (var i = 0; i < n; i++) {\n          var buffer = GLctx[createFunction]();\n          var id = buffer && GL.getNewId(objectTable);\n          if (buffer) {\n            buffer.name = id;\n            objectTable[id] = buffer;\n          } else {\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n          }\n          HEAP32[(((buffers)+(i*4))>>2)] = id;\n        }\n      },\n  getSource:(shader, count, string, length) => {\n        var source = '';\n        for (var i = 0; i < count; ++i) {\n          var len = length ? HEAPU32[(((length)+(i*4))>>2)] : undefined;\n          source += UTF8ToString(HEAPU32[(((string)+(i*4))>>2)], len);\n        }\n        return source;\n      },\n  createContext:(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) => {\n  \n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL\n        // context on a canvas, calling .getContext() will always return that\n        // context independent of which 'webgl' or 'webgl2'\n        // context version was passed. See:\n        //   https://bugs.webkit.org/show_bug.cgi?id=222758\n        // and:\n        //   https://github.com/emscripten-core/emscripten/issues/13295.\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari\n        // version field in above check.\n        if (!canvas.getContextSafariWebGL2Fixed) {\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\n          function fixedGetContext(ver, attrs) {\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\n          }\n          canvas.getContext = fixedGetContext;\n        }\n  \n        var ctx = canvas.getContext(\"webgl2\", webGLContextAttributes);\n  \n        if (!ctx) return 0;\n  \n        var handle = GL.registerContext(ctx, webGLContextAttributes);\n  \n        return handle;\n      },\n  registerContext:(ctx, webGLContextAttributes) => {\n        // without pthreads a context is just an integer ID\n        var handle = GL.getNewId(GL.contexts);\n  \n        var context = {\n          handle,\n          attributes: webGLContextAttributes,\n          version: webGLContextAttributes.majorVersion,\n          GLctx: ctx\n        };\n  \n        // Store the created context object so that we can access the context\n        // given a canvas without having to pass the parameters again.\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\n        GL.contexts[handle] = context;\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\n          GL.initExtensions(context);\n        }\n  \n        return handle;\n      },\n  makeContextCurrent:(contextHandle) => {\n  \n        // Active Emscripten GL layer context object.\n        GL.currentContext = GL.contexts[contextHandle];\n        // Active WebGL context object.\n        Module['ctx'] = GLctx = GL.currentContext?.GLctx;\n        return !(contextHandle && !GLctx);\n      },\n  getContext:(contextHandle) => {\n        return GL.contexts[contextHandle];\n      },\n  deleteContext:(contextHandle) => {\n        if (GL.currentContext === GL.contexts[contextHandle]) {\n          GL.currentContext = null;\n        }\n        if (typeof JSEvents == 'object') {\n          // Release all JS event handlers on the DOM element that the GL context is\n          // associated with since the context is now deleted.\n          JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\n        }\n        // Make sure the canvas object no longer refers to the context object so\n        // there are no GC surprises.\n        if (GL.contexts[contextHandle]?.GLctx.canvas) {\n          GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined;\n        }\n        GL.contexts[contextHandle] = null;\n      },\n  initExtensions:(context) => {\n        // If this function is called without a specific context object, init the\n        // extensions of the currently active context.\n        context ||= GL.currentContext;\n  \n        if (context.initExtensionsDone) return;\n        context.initExtensionsDone = true;\n  \n        var GLctx = context.GLctx;\n  \n        // Detect the presence of a few extensions manually, ction GL interop\n        // layer itself will need to know if they exist.\n  \n        // Extensions that are available in both WebGL 1 and WebGL 2\n        webgl_enable_WEBGL_multi_draw(GLctx);\n        webgl_enable_EXT_polygon_offset_clamp(GLctx);\n        webgl_enable_EXT_clip_control(GLctx);\n        webgl_enable_WEBGL_polygon_mode(GLctx);\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\n  \n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\n        // that's based on core APIs, and exposes only the queryCounterEXT()\n        // entrypoint.\n        if (context.version >= 2) {\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\n        }\n  \n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\n        {\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\n        }\n  \n        getEmscriptenSupportedExtensions(GLctx).forEach((ext) => {\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders\n          // are not enabled by default.\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\n            // Call .getExtension() to enable that extension permanently.\n            GLctx.getExtension(ext);\n          }\n        });\n      },\n  };\n  \n  var _eglCreateContext = (display, config, hmm, contextAttribs) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n  \n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\n      var glesContextVersion = 1;\n      for (;;) {\n        var param = HEAP32[((contextAttribs)>>2)];\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\n        } else if (param == 0x3038 /*EGL_NONE*/) {\n          break;\n        } else {\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\n          return 0;\n        }\n        contextAttribs += 8;\n      }\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0; /* EGL_NO_CONTEXT */\n      }\n  \n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\n      EGL.contextAttributes.minorVersion = 0;\n  \n      EGL.context = GL.createContext(Browser.getCanvas(), EGL.contextAttributes);\n  \n      if (EGL.context != 0) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n  \n        // Run callbacks so that GL emulation works\n        GL.makeContextCurrent(EGL.context);\n        Browser.useWebGL = true;\n        Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\n  \n        // Note: This function only creates a context, but it shall not make it active.\n        GL.makeContextCurrent(null);\n        return 62004;\n      } else {\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\n        return 0; /* EGL_NO_CONTEXT */\n      }\n    };\n\n  var _eglCreateWindowSurface = (display, config, win, attrib_list) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      // TODO: Examine attrib_list! Parameters that can be present there are:\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\n      // - EGL_VG_COLORSPACE (can't be set)\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 62006; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  \n  var _eglDestroyContext = (display, context) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (context != 62004) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n  \n      GL.deleteContext(EGL.context);\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.currentContext == context) {\n        EGL.currentContext = 0;\n      }\n      return 1 /* EGL_TRUE */;\n    };\n\n  var _eglDestroySurface = (display, surface) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 1;\n      }\n      if (EGL.currentReadSurface == surface) {\n        EGL.currentReadSurface = 0;\n      }\n      if (EGL.currentDrawSurface == surface) {\n        EGL.currentDrawSurface = 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  var _eglGetConfigAttrib = (display, config, attribute, value) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      if (!value) {\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n        return 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      switch (attribute) {\n      case 0x3020: // EGL_BUFFER_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\n        return 1;\n      case 0x3021: // EGL_ALPHA_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\n        return 1;\n      case 0x3022: // EGL_BLUE_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3023: // EGL_GREEN_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3024: // EGL_RED_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3025: // EGL_DEPTH_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\n        return 1;\n      case 0x3026: // EGL_STENCIL_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\n        return 1;\n      case 0x3027: // EGL_CONFIG_CAVEAT\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3028: // EGL_CONFIG_ID\n        HEAP32[((value)>>2)] = 62002;\n        return 1;\n      case 0x3029: // EGL_LEVEL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\n        HEAP32[((value)>>2)] = 16777216;\n        return 1;\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302D: // EGL_NATIVE_RENDERABLE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3031: // EGL_SAMPLES\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\n        return 1;\n      case 0x3032: // EGL_SAMPLE_BUFFERS\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\n        return 1;\n      case 0x3033: // EGL_SURFACE_TYPE\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3034: // EGL_TRANSPARENT_TYPE\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\n        HEAP32[((value)>>2)] = -1;\n        return 1;\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 1;\n        return 1;\n      case 0x303D: // EGL_LUMINANCE_SIZE\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\n        HEAP32[((value)>>2)] = 0x308E;\n        return 1;\n      case 0x3040: // EGL_RENDERABLE_TYPE\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3042: // EGL_CONFORMANT\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      default:\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\n        return 0;\n      }\n    };\n\n  var _eglGetDisplay = (nativeDisplayType) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      // Emscripten EGL implementation \"emulates\" X11, and eglGetDisplay is\n      // expected to accept/receive a pointer to an X11 Display object (or\n      // EGL_DEFAULT_DISPLAY).\n      if (nativeDisplayType != 0 /* EGL_DEFAULT_DISPLAY */ && nativeDisplayType != 1 /* see library_xlib.js */) {\n        return 0; // EGL_NO_DISPLAY\n      }\n      return 62000;\n    };\n\n  var _eglGetError = () => EGL.errorCode;\n\n  var _eglInitialize = (display, majorVersion, minorVersion) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (majorVersion) {\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\n      }\n      if (minorVersion) {\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\n      }\n      EGL.defaultDisplayInitialized = true;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  var _eglMakeCurrent = (display, draw, read, context) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0 /* EGL_FALSE */;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      if (context != 0 && context != 62004) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 0;\n      }\n  \n      GL.makeContextCurrent(context ? EGL.context : null);\n  \n      EGL.currentContext = context;\n      EGL.currentDrawSurface = draw;\n      EGL.currentReadSurface = read;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1 /* EGL_TRUE */;\n    };\n\n  \n  \n  var stringToNewUTF8 = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8(str, ret, size);\n      return ret;\n    };\n  \n  var _eglQueryString = (display, name) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\n      var ret;\n      switch (name) {\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\n        default:\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n      }\n      EGL.stringCache[name] = ret;\n      return ret;\n    };\n\n  \n  var _eglSwapBuffers = (dpy, surface) => {\n  \n      if (!EGL.defaultDisplayInitialized) {\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\n      } else if (!GLctx) {\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\n      } else if (GLctx.isContextLost()) {\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\n      } else {\n        // According to documentation this does an implicit flush.\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\n        // the flush was removed since this _may_ result in slowing code down.\n        //_glFlush();\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1 /* EGL_TRUE */;\n      }\n      return 0 /* EGL_FALSE */;\n    };\n\n  \n  \n  \n  \n    /**\n     * @param {number=} arg\n     * @param {boolean=} noSetTiming\n     */\n  var setMainLoop = (iterFunc, fps, simulateInfiniteLoop, arg, noSetTiming) => {\n      MainLoop.func = iterFunc;\n      MainLoop.arg = arg;\n  \n      var thisMainLoopId = MainLoop.currentlyRunningMainloop;\n      function checkIsRunning() {\n        if (thisMainLoopId < MainLoop.currentlyRunningMainloop) {\n          \n          maybeExit();\n          return false;\n        }\n        return true;\n      }\n  \n      // We create the loop runner here but it is not actually running until\n      // _emscripten_set_main_loop_timing is called (which might happen a\n      // later time).  This member signifies that the current runner has not\n      // yet been started so that we can call runtimeKeepalivePush when it\n      // gets it timing set for the first time.\n      MainLoop.running = false;\n      MainLoop.runner = function MainLoop_runner() {\n        if (ABORT) return;\n        if (MainLoop.queue.length > 0) {\n          var start = Date.now();\n          var blocker = MainLoop.queue.shift();\n          blocker.func(blocker.arg);\n          if (MainLoop.remainingBlockers) {\n            var remaining = MainLoop.remainingBlockers;\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\n            if (blocker.counted) {\n              MainLoop.remainingBlockers = next;\n            } else {\n              // not counted, but move the progress along a tiny bit\n              next = next + 0.5; // do not steal all the next one's progress\n              MainLoop.remainingBlockers = (8*remaining + next)/9;\n            }\n          }\n          MainLoop.updateStatus();\n  \n          // catches pause/resume main loop from blocker execution\n          if (!checkIsRunning()) return;\n  \n          setTimeout(MainLoop.runner, 0);\n          return;\n        }\n  \n        // catch pauses from non-main loop sources\n        if (!checkIsRunning()) return;\n  \n        // Implement very basic swap interval control\n        MainLoop.currentFrameNumber = MainLoop.currentFrameNumber + 1 | 0;\n        if (MainLoop.timingMode == 1 && MainLoop.timingValue > 1 && MainLoop.currentFrameNumber % MainLoop.timingValue != 0) {\n          // Not the scheduled time to render this frame - skip.\n          MainLoop.scheduler();\n          return;\n        } else if (MainLoop.timingMode == 0) {\n          MainLoop.tickStartTime = _emscripten_get_now();\n        }\n  \n        MainLoop.runIter(iterFunc);\n  \n        // catch pauses from the main loop itself\n        if (!checkIsRunning()) return;\n  \n        MainLoop.scheduler();\n      }\n  \n      if (!noSetTiming) {\n        if (fps > 0) {\n          _emscripten_set_main_loop_timing(0, 1000.0 / fps);\n        } else {\n          // Do rAF by rendering each frame (no decimating)\n          _emscripten_set_main_loop_timing(1, 1);\n        }\n  \n        MainLoop.scheduler();\n      }\n  \n      if (simulateInfiniteLoop) {\n        throw 'unwind';\n      }\n    };\n  \n  \n  var MainLoop = {\n  running:false,\n  scheduler:null,\n  method:\"\",\n  currentlyRunningMainloop:0,\n  func:null,\n  arg:0,\n  timingMode:0,\n  timingValue:0,\n  currentFrameNumber:0,\n  queue:[],\n  preMainLoop:[],\n  postMainLoop:[],\n  pause() {\n        MainLoop.scheduler = null;\n        // Incrementing this signals the previous main loop that it's now become old, and it must return.\n        MainLoop.currentlyRunningMainloop++;\n      },\n  resume() {\n        MainLoop.currentlyRunningMainloop++;\n        var timingMode = MainLoop.timingMode;\n        var timingValue = MainLoop.timingValue;\n        var func = MainLoop.func;\n        MainLoop.func = null;\n        // do not set timing and call scheduler, we will do it on the next lines\n        setMainLoop(func, 0, false, MainLoop.arg, true);\n        _emscripten_set_main_loop_timing(timingMode, timingValue);\n        MainLoop.scheduler();\n      },\n  updateStatus() {\n        if (Module['setStatus']) {\n          var message = Module['statusMessage'] || 'Please wait...';\n          var remaining = MainLoop.remainingBlockers ?? 0;\n          var expected = MainLoop.expectedBlockers ?? 0;\n          if (remaining) {\n            if (remaining < expected) {\n              Module['setStatus'](`{message} ({expected - remaining}/{expected})`);\n            } else {\n              Module['setStatus'](message);\n            }\n          } else {\n            Module['setStatus']('');\n          }\n        }\n      },\n  init() {\n        Module['preMainLoop'] && MainLoop.preMainLoop.push(Module['preMainLoop']);\n        Module['postMainLoop'] && MainLoop.postMainLoop.push(Module['postMainLoop']);\n      },\n  runIter(func) {\n        if (ABORT) return;\n        for (var pre of MainLoop.preMainLoop) {\n          if (pre() === false) {\n            return; // |return false| skips a frame\n          }\n        }\n        callUserCallback(func);\n        for (var post of MainLoop.postMainLoop) {\n          post();\n        }\n      },\n  nextRAF:0,\n  fakeRequestAnimationFrame(func) {\n        // try to keep 60fps between calls to here\n        var now = Date.now();\n        if (MainLoop.nextRAF === 0) {\n          MainLoop.nextRAF = now + 1000/60;\n        } else {\n          while (now + 2 >= MainLoop.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\n            MainLoop.nextRAF += 1000/60;\n          }\n        }\n        var delay = Math.max(MainLoop.nextRAF - now, 0);\n        setTimeout(func, delay);\n      },\n  requestAnimationFrame(func) {\n        if (typeof requestAnimationFrame == 'function') {\n          requestAnimationFrame(func);\n          return;\n        }\n        var RAF = MainLoop.fakeRequestAnimationFrame;\n        RAF(func);\n      },\n  };\n  var _emscripten_set_main_loop_timing = (mode, value) => {\n      MainLoop.timingMode = mode;\n      MainLoop.timingValue = value;\n  \n      if (!MainLoop.func) {\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\n      }\n  \n      if (!MainLoop.running) {\n        \n        MainLoop.running = true;\n      }\n      if (mode == 0) {\n        MainLoop.scheduler = function MainLoop_scheduler_setTimeout() {\n          var timeUntilNextTick = Math.max(0, MainLoop.tickStartTime + value - _emscripten_get_now())|0;\n          setTimeout(MainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\n        };\n        MainLoop.method = 'timeout';\n      } else if (mode == 1) {\n        MainLoop.scheduler = function MainLoop_scheduler_rAF() {\n          MainLoop.requestAnimationFrame(MainLoop.runner);\n        };\n        MainLoop.method = 'rAF';\n      } else if (mode == 2) {\n        if (typeof MainLoop.setImmediate == 'undefined') {\n          if (typeof setImmediate == 'undefined') {\n            // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\n            var setImmediates = [];\n            var emscriptenMainLoopMessageId = 'setimmediate';\n            /** @param {Event} event */\n            var MainLoop_setImmediate_messageHandler = (event) => {\n              // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\n              // so check for both cases.\n              if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\n                event.stopPropagation();\n                setImmediates.shift()();\n              }\n            };\n            addEventListener(\"message\", MainLoop_setImmediate_messageHandler, true);\n            MainLoop.setImmediate = /** @type{function(function(): ?, ...?): number} */((func) => {\n              setImmediates.push(func);\n              if (ENVIRONMENT_IS_WORKER) {\n                Module['setImmediates'] ??= [];\n                Module['setImmediates'].push(func);\n                postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\n              } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\n            });\n          } else {\n            MainLoop.setImmediate = setImmediate;\n          }\n        }\n        MainLoop.scheduler = function MainLoop_scheduler_setImmediate() {\n          MainLoop.setImmediate(MainLoop.runner);\n        };\n        MainLoop.method = 'immediate';\n      }\n      return 0;\n    };\n  \n  var _eglSwapInterval = (display, interval) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (interval == 0) _emscripten_set_main_loop_timing(0, 0);\n      else _emscripten_set_main_loop_timing(1, interval);\n  \n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var _eglTerminate = (display) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      EGL.currentContext = 0;\n      EGL.currentReadSurface = 0;\n      EGL.currentDrawSurface = 0;\n      EGL.defaultDisplayInitialized = false;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  /** @suppress {duplicate } */\n  var _eglWaitClient = () => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n  var _eglWaitGL = _eglWaitClient;\n\n  var _eglWaitNative = (nativeEngineId) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var readEmAsmArgsArray = [];\n  var readEmAsmArgs = (sigPtr, buf) => {\n      readEmAsmArgsArray.length = 0;\n      var ch;\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\n      // index into HEAP32.\n      while (ch = HEAPU8[sigPtr++]) {\n        // Floats are always passed as doubles, so all types except for 'i'\n        // are 8 bytes and require alignment.\n        var wide = (ch != 105);\n        wide &= (ch != 112);\n        buf += wide && (buf % 8) ? 4 : 0;\n        readEmAsmArgsArray.push(\n          // Special case for pointers under wasm64 or CAN_ADDRESS_2GB mode.\n          ch == 112 ? HEAPU32[((buf)>>2)] :\n          ch == 106 ? HEAP64[((buf)>>3)] :\n          ch == 105 ?\n            HEAP32[((buf)>>2)] :\n            HEAPF64[((buf)>>3)]\n        );\n        buf += wide ? 8 : 4;\n      }\n      return readEmAsmArgsArray;\n    };\n  var runEmAsmFunction = (code, sigPtr, argbuf) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      return ASM_CONSTS[code](...args);\n    };\n  var _emscripten_asm_const_int = (code, sigPtr, argbuf) => {\n      return runEmAsmFunction(code, sigPtr, argbuf);\n    };\n\n  var runMainThreadEmAsm = (emAsmAddr, sigPtr, argbuf, sync) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      return ASM_CONSTS[emAsmAddr](...args);\n    };\n  var _emscripten_asm_const_int_sync_on_main_thread = (emAsmAddr, sigPtr, argbuf) => runMainThreadEmAsm(emAsmAddr, sigPtr, argbuf, 1);\n\n  var _emscripten_asm_const_ptr_sync_on_main_thread = (emAsmAddr, sigPtr, argbuf) => runMainThreadEmAsm(emAsmAddr, sigPtr, argbuf, 1);\n\n\n  var onExits = [];\n  var addOnExit = (cb) => onExits.push(cb);\n  var JSEvents = {\n  memcpy(target, src, size) {\n        HEAP8.set(HEAP8.subarray(src, src + size), target);\n      },\n  removeAllEventListeners() {\n        while (JSEvents.eventHandlers.length) {\n          JSEvents._removeHandler(JSEvents.eventHandlers.length - 1);\n        }\n        JSEvents.deferredCalls = [];\n      },\n  inEventHandler:0,\n  deferredCalls:[],\n  deferCall(targetFunction, precedence, argsList) {\n        function arraysHaveEqualContent(arrA, arrB) {\n          if (arrA.length != arrB.length) return false;\n  \n          for (var i in arrA) {\n            if (arrA[i] != arrB[i]) return false;\n          }\n          return true;\n        }\n        // Test if the given call was already queued, and if so, don't add it again.\n        for (var call of JSEvents.deferredCalls) {\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n            return;\n          }\n        }\n        JSEvents.deferredCalls.push({\n          targetFunction,\n          precedence,\n          argsList\n        });\n  \n        JSEvents.deferredCalls.sort((x,y) => x.precedence < y.precedence);\n      },\n  removeDeferredCalls(targetFunction) {\n        JSEvents.deferredCalls = JSEvents.deferredCalls.filter((call) => call.targetFunction != targetFunction);\n      },\n  canPerformEventHandlerRequests() {\n        if (navigator.userActivation) {\n          // Verify against transient activation status from UserActivation API\n          // whether it is possible to perform a request here without needing to defer. See\n          // https://developer.mozilla.org/en-US/docs/Web/Security/User_activation#transient_activation\n          // and https://caniuse.com/mdn-api_useractivation\n          // At the time of writing, Firefox does not support this API: https://bugzilla.mozilla.org/show_bug.cgi?id=1791079\n          return navigator.userActivation.isActive;\n        }\n  \n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n      },\n  runDeferredCalls() {\n        if (!JSEvents.canPerformEventHandlerRequests()) {\n          return;\n        }\n        var deferredCalls = JSEvents.deferredCalls;\n        JSEvents.deferredCalls = [];\n        for (var call of deferredCalls) {\n          call.targetFunction(...call.argsList);\n        }\n      },\n  eventHandlers:[],\n  removeAllHandlersOnTarget:(target, eventTypeString) => {\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n          if (JSEvents.eventHandlers[i].target == target &&\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n             JSEvents._removeHandler(i--);\n           }\n        }\n      },\n  _removeHandler(i) {\n        var h = JSEvents.eventHandlers[i];\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n        JSEvents.eventHandlers.splice(i, 1);\n      },\n  registerOrRemoveHandler(eventHandler) {\n        if (!eventHandler.target) {\n          return -4;\n        }\n        if (eventHandler.callbackfunc) {\n          eventHandler.eventListenerFunc = function(event) {\n            // Increment nesting count for the event handler.\n            ++JSEvents.inEventHandler;\n            JSEvents.currentEventHandler = eventHandler;\n            // Process any old deferred calls the user has placed.\n            JSEvents.runDeferredCalls();\n            // Process the actual event, calls back to user C code handler.\n            eventHandler.handlerFunc(event);\n            // Process any new deferred calls that were placed right now from this event handler.\n            JSEvents.runDeferredCalls();\n            // Out of event handler - restore nesting count.\n            --JSEvents.inEventHandler;\n          };\n  \n          eventHandler.target.addEventListener(eventHandler.eventTypeString,\n                                               eventHandler.eventListenerFunc,\n                                               eventHandler.useCapture);\n          JSEvents.eventHandlers.push(eventHandler);\n        } else {\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n               JSEvents._removeHandler(i--);\n             }\n          }\n        }\n        return 0;\n      },\n  getNodeNameForTarget(target) {\n        if (!target) return '';\n        if (target == window) return '#window';\n        if (target == screen) return '#screen';\n        return target?.nodeName || '';\n      },\n  fullscreenEnabled() {\n        return document.fullscreenEnabled\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\n        || document.webkitFullscreenEnabled\n         ;\n      },\n  };\n  \n  var hideEverythingExceptGivenElement = (onlyVisibleElement) => {\n      var child = onlyVisibleElement;\n      var parent = child.parentNode;\n      var hiddenElements = [];\n      while (child != document.body) {\n        var children = parent.children;\n        for (var currChild of children) {\n          if (currChild != child) {\n            hiddenElements.push({ node: currChild, displayState: currChild.style.display });\n            currChild.style.display = 'none';\n          }\n        }\n        child = parent;\n        parent = parent.parentNode;\n      }\n      return hiddenElements;\n    };\n  \n  var restoreOldWindowedStyle = null;\n  \n  var restoreHiddenElements = (hiddenElements) => {\n      for (var elem of hiddenElements) {\n        elem.node.style.display = elem.displayState;\n      }\n    };\n  \n  var currentFullscreenStrategy = {\n  };\n  \n  var setLetterbox = (element, topBottom, leftRight) => {\n      // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\n      element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\n      element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\n    };\n  \n  \n  var maybeCStringToJsString = (cString) => {\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\n      // In other words, if cString > 2 then it's a pointer to a valid place in\n      // memory, and points to a C string.\n      return cString > 2 ? UTF8ToString(cString) : cString;\n    };\n  \n  /** @type {Object} */\n  var specialHTMLTargets = [0, document, window];\n  /** @suppress {duplicate } */\n  var findEventTarget = (target) => {\n      target = maybeCStringToJsString(target);\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\n      return domElement;\n    };\n  var findCanvasEventTarget = findEventTarget;\n  var _emscripten_get_canvas_element_size = (target, width, height) => {\n      var canvas = findCanvasEventTarget(target);\n      if (!canvas) return -4;\n      HEAP32[((width)>>2)] = canvas.width;\n      HEAP32[((height)>>2)] = canvas.height;\n    };\n  \n  \n  \n  \n  \n  var stackAlloc = (sz) => __emscripten_stack_alloc(sz);\n  var stringToUTF8OnStack = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    };\n  var getCanvasElementSize = (target) => {\n      var sp = stackSave();\n      var w = stackAlloc(8);\n      var h = w + 4;\n  \n      var targetInt = stringToUTF8OnStack(target.id);\n      var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\n      var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\n      stackRestore(sp);\n      return size;\n    };\n  \n  var _emscripten_set_canvas_element_size = (target, width, height) => {\n      var canvas = findCanvasEventTarget(target);\n      if (!canvas) return -4;\n      canvas.width = width;\n      canvas.height = height;\n      return 0;\n    };\n  \n  \n  \n  var setCanvasElementSize = (target, width, height) => {\n      if (!target.controlTransferredOffscreen) {\n        target.width = width;\n        target.height = height;\n      } else {\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\n        var sp = stackSave();\n        var targetInt = stringToUTF8OnStack(target.id);\n        _emscripten_set_canvas_element_size(targetInt, width, height);\n        stackRestore(sp);\n      }\n    };\n  \n  /** @suppress {checkTypes} */\n  var jstoi_q = (str) => parseInt(str);\n  var softFullscreenResizeWebGLRenderTarget = () => {\n      var dpr = devicePixelRatio;\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\n      var w = screenWidth;\n      var h = screenHeight;\n      var canvas = currentFullscreenStrategy.target;\n      var canvasSize = getCanvasElementSize(canvas);\n      var x = canvasSize[0];\n      var y = canvasSize[1];\n      var topMargin;\n  \n      if (inAspectRatioFixedFullscreenMode) {\n        if (w*y < x*h) h = (w * y / x) | 0;\n        else if (w*y > x*h) w = (h * x / y) | 0;\n        topMargin = ((screenHeight - h) / 2) | 0;\n      }\n  \n      if (inPixelPerfectFullscreenMode) {\n        setCanvasElementSize(canvas, w, h);\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\n      }\n  \n      // Back to CSS pixels.\n      if (inHiDPIFullscreenMode) {\n        topMargin /= dpr;\n        w /= dpr;\n        h /= dpr;\n        // Round to nearest 4 digits of precision.\n        w = Math.round(w*1e4)/1e4;\n        h = Math.round(h*1e4)/1e4;\n        topMargin = Math.round(topMargin*1e4)/1e4;\n      }\n  \n      if (inCenteredWithoutScalingFullscreenMode) {\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\n        setLetterbox(canvas, t, b);\n      } else {\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        var b = (innerWidth - w) / 2;\n        setLetterbox(canvas, topMargin, b);\n      }\n  \n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii(currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\n      }\n    };\n  \n  \n  \n  var registerRestoreOldStyle = (canvas) => {\n      var canvasSize = getCanvasElementSize(canvas);\n      var oldWidth = canvasSize[0];\n      var oldHeight = canvasSize[1];\n      var oldCssWidth = canvas.style.width;\n      var oldCssHeight = canvas.style.height;\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\n      // Firefox always has black background color.\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\n      var oldPaddingRight = canvas.style.paddingRight;\n      var oldPaddingTop = canvas.style.paddingTop;\n      var oldPaddingBottom = canvas.style.paddingBottom;\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\n      var oldMarginRight = canvas.style.marginRight;\n      var oldMarginTop = canvas.style.marginTop;\n      var oldMarginBottom = canvas.style.marginBottom;\n      var oldDocumentBodyMargin = document.body.style.margin;\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\n      var oldDocumentScroll = document.body.scroll; // IE\n      var oldImageRendering = canvas.style.imageRendering;\n  \n      function restoreOldStyle() {\n        var fullscreenElement = document.fullscreenElement\n          || document.webkitFullscreenElement\n          ;\n        if (!fullscreenElement) {\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\n  \n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\n  \n          setCanvasElementSize(canvas, oldWidth, oldHeight);\n  \n          canvas.style.width = oldCssWidth;\n          canvas.style.height = oldCssHeight;\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\n          canvas.style.paddingRight = oldPaddingRight;\n          canvas.style.paddingTop = oldPaddingTop;\n          canvas.style.paddingBottom = oldPaddingBottom;\n          canvas.style.marginLeft = oldMarginLeft; // IE11\n          canvas.style.marginRight = oldMarginRight;\n          canvas.style.marginTop = oldMarginTop;\n          canvas.style.marginBottom = oldMarginBottom;\n          document.body.style.margin = oldDocumentBodyMargin;\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\n          document.body.scroll = oldDocumentScroll; // IE\n          canvas.style.imageRendering = oldImageRendering;\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\n  \n          if (currentFullscreenStrategy.canvasResizedCallback) {\n            ((a1, a2, a3) => dynCall_iiii(currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\n          }\n        }\n      }\n      document.addEventListener('fullscreenchange', restoreOldStyle);\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\n      return restoreOldStyle;\n    };\n  \n  \n  \n  \n  var getBoundingClientRect = (e) => specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\n  var JSEvents_resizeCanvasForFullscreen = (target, strategy) => {\n      var restoreOldStyle = registerRestoreOldStyle(target);\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\n      var rect = getBoundingClientRect(target);\n      var windowedCssWidth = rect.width;\n      var windowedCssHeight = rect.height;\n      var canvasSize = getCanvasElementSize(target);\n      var windowedRttWidth = canvasSize[0];\n      var windowedRttHeight = canvasSize[1];\n  \n      if (strategy.scaleMode == 3) {\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\n        cssWidth = windowedCssWidth;\n        cssHeight = windowedCssHeight;\n      } else if (strategy.scaleMode == 2) {\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\n          cssHeight = desiredCssHeight;\n        } else {\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\n          cssWidth = desiredCssWidth;\n        }\n      }\n  \n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\n      // padding a default white color. Do it only if user has not customized their own background color.\n      target.style.backgroundColor ||= 'black';\n      // IE11 does the same, but requires the color to be set in the document body.\n      document.body.style.backgroundColor ||= 'black'; // IE11\n      // Firefox always shows black letterboxes independent of style color.\n  \n      target.style.width = cssWidth + 'px';\n      target.style.height = cssHeight + 'px';\n  \n      if (strategy.filteringMode == 1) {\n        target.style.imageRendering = 'optimizeSpeed';\n        target.style.imageRendering = '-moz-crisp-edges';\n        target.style.imageRendering = '-o-crisp-edges';\n        target.style.imageRendering = '-webkit-optimize-contrast';\n        target.style.imageRendering = 'optimize-contrast';\n        target.style.imageRendering = 'crisp-edges';\n        target.style.imageRendering = 'pixelated';\n      }\n  \n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\n      if (strategy.canvasResolutionScaleMode != 0) {\n        var newWidth = (cssWidth * dpiScale)|0;\n        var newHeight = (cssHeight * dpiScale)|0;\n        setCanvasElementSize(target, newWidth, newHeight);\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\n      }\n      return restoreOldStyle;\n    };\n  \n  var _emscripten_enter_soft_fullscreen = (target, fullscreenStrategy) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      var strategy = {\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\n          target,\n          softFullscreen: true\n      };\n  \n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\n  \n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\n      document.body.scroll = \"no\"; // IE11\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\n  \n      var hiddenElements = hideEverythingExceptGivenElement(target);\n  \n      function restoreWindowedState() {\n        restoreOldStyle();\n        restoreHiddenElements(hiddenElements);\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\n        if (strategy.canvasResizedCallback) {\n          ((a1, a2, a3) => dynCall_iiii(strategy.canvasResizedCallback, a1, a2, a3))(37, 0, strategy.canvasResizedCallbackUserData);\n        }\n        currentFullscreenStrategy = 0;\n      }\n      restoreOldWindowedStyle = restoreWindowedState;\n      currentFullscreenStrategy = strategy;\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\n  \n      // Inform the caller that the canvas size has changed.\n      if (strategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii(strategy.canvasResizedCallback, a1, a2, a3))(37, 0, strategy.canvasResizedCallbackUserData);\n      }\n  \n      return 0;\n    };\n\n  var _emscripten_err = (str) => err(UTF8ToString(str));\n\n  \n  \n  \n  var JSEvents_requestFullscreen = (target, strategy) => {\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\n      }\n  \n      if (target.requestFullscreen) {\n        target.requestFullscreen();\n      } else if (target.webkitRequestFullscreen) {\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else {\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\n      }\n  \n      currentFullscreenStrategy = strategy;\n  \n      if (strategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii(strategy.canvasResizedCallback, a1, a2, a3))(37, 0, strategy.canvasResizedCallbackUserData);\n      }\n  \n      return 0;\n    };\n  var _emscripten_exit_fullscreen = () => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      // Make sure no queued up calls will fire after this.\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\n  \n      var d = specialHTMLTargets[1];\n      if (d.exitFullscreen) {\n        d.fullscreenElement && d.exitFullscreen();\n      } else if (d.webkitExitFullscreen) {\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\n      } else {\n        return -1;\n      }\n  \n      return 0;\n    };\n\n  \n  var requestPointerLock = (target) => {\n      if (target.requestPointerLock) {\n        target.requestPointerLock();\n      } else {\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\n        // or if the whole browser just doesn't support the feature.\n        if (document.body.requestPointerLock\n          ) {\n          return -3;\n        }\n        return -1;\n      }\n      return 0;\n    };\n  var _emscripten_exit_pointerlock = () => {\n      // Make sure no queued up calls will fire after this.\n      JSEvents.removeDeferredCalls(requestPointerLock);\n  \n      if (document.exitPointerLock) {\n        document.exitPointerLock();\n      } else {\n        return -1;\n      }\n      return 0;\n    };\n\n  var _emscripten_exit_soft_fullscreen = () => {\n      restoreOldWindowedStyle?.();\n      restoreOldWindowedStyle = null;\n  \n      return 0;\n    };\n\n  var _emscripten_get_device_pixel_ratio = () => {\n      return devicePixelRatio;\n    };\n\n  \n  var _emscripten_get_element_css_size = (target, width, height) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      var rect = getBoundingClientRect(target);\n      HEAPF64[((width)>>3)] = rect.width;\n      HEAPF64[((height)>>3)] = rect.height;\n  \n      return 0;\n    };\n\n  \n  var fillGamepadEventData = (eventStruct, e) => {\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\n      for (var i = 0; i < e.axes.length; ++i) {\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\n      }\n      for (var i = 0; i < e.buttons.length; ++i) {\n        if (typeof e.buttons[i] == 'object') {\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\n        } else {\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\n        }\n      }\n      for (var i = 0; i < e.buttons.length; ++i) {\n        if (typeof e.buttons[i] == 'object') {\n          HEAP8[(eventStruct+i)+(1040)] = e.buttons[i].pressed;\n        } else {\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\n          /** @suppress {checkTypes} */\n          HEAP8[(eventStruct+i)+(1040)] = e.buttons[i] == 1;\n        }\n      }\n      HEAP8[(eventStruct)+(1104)] = e.connected;\n      HEAP32[(((eventStruct)+(1108))>>2)] = e.index;\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\n      stringToUTF8(e.id, eventStruct + 1112, 64);\n      stringToUTF8(e.mapping, eventStruct + 1176, 64);\n    };\n  var _emscripten_get_gamepad_status = (index, gamepadState) => {\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\n  \n      // NO_DATA is returned on a Gamepad index that was removed.\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\n      // This is because gamepads must keep their original position in the array.\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\n      if (!JSEvents.lastGamepadState[index]) return -7;\n  \n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\n      return 0;\n    };\n\n\n  var _emscripten_get_num_gamepads = () => {\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\n      // Otherwise the following line will throw an exception.\n      return JSEvents.lastGamepadState.length;\n    };\n\n  var _emscripten_get_screen_size = (width, height) => {\n      HEAP32[((width)>>2)] = screen.width;\n      HEAP32[((height)>>2)] = screen.height;\n    };\n\n  /** @suppress {duplicate } */\n  var _glActiveTexture = (x0) => GLctx.activeTexture(x0);\n  var _emscripten_glActiveTexture = _glActiveTexture;\n\n  /** @suppress {duplicate } */\n  var _glAttachShader = (program, shader) => {\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glAttachShader = _glAttachShader;\n\n  /** @suppress {duplicate } */\n  var _glBeginQuery = (target, id) => {\n      GLctx.beginQuery(target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQuery = _glBeginQuery;\n\n  /** @suppress {duplicate } */\n  var _glBeginQueryEXT = (target, id) => {\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\n\n  /** @suppress {duplicate } */\n  var _glBeginTransformFeedback = (x0) => GLctx.beginTransformFeedback(x0);\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindAttribLocation = (program, index, name) => {\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\n    };\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\n\n  /** @suppress {duplicate } */\n  var _glBindBuffer = (target, buffer) => {\n  \n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2\n        // API function call when a buffer is bound to\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelPackBufferBinding = buffer;\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\n        // use a different WebGL 2 API function call when a buffer is bound to\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelUnpackBufferBinding = buffer;\n      }\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBuffer = _glBindBuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferBase = (target, index, buffer) => {\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferRange = (target, index, buffer, offset, ptrsize) => {\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\n    };\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\n\n  /** @suppress {duplicate } */\n  var _glBindFramebuffer = (target, framebuffer) => {\n  \n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\n  \n    };\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindRenderbuffer = (target, renderbuffer) => {\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindSampler = (unit, sampler) => {\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\n    };\n  var _emscripten_glBindSampler = _glBindSampler;\n\n  /** @suppress {duplicate } */\n  var _glBindTexture = (target, texture) => {\n      GLctx.bindTexture(target, GL.textures[texture]);\n    };\n  var _emscripten_glBindTexture = _glBindTexture;\n\n  /** @suppress {duplicate } */\n  var _glBindTransformFeedback = (target, id) => {\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\n    };\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glBindVertexArray = (vao) => {\n      GLctx.bindVertexArray(GL.vaos[vao]);\n    };\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindVertexArrayOES = _glBindVertexArray;\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  var _glBlendColor = (x0, x1, x2, x3) => GLctx.blendColor(x0, x1, x2, x3);\n  var _emscripten_glBlendColor = _glBlendColor;\n\n  /** @suppress {duplicate } */\n  var _glBlendEquation = (x0) => GLctx.blendEquation(x0);\n  var _emscripten_glBlendEquation = _glBlendEquation;\n\n  /** @suppress {duplicate } */\n  var _glBlendEquationSeparate = (x0, x1) => GLctx.blendEquationSeparate(x0, x1);\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\n\n  /** @suppress {duplicate } */\n  var _glBlendFunc = (x0, x1) => GLctx.blendFunc(x0, x1);\n  var _emscripten_glBlendFunc = _glBlendFunc;\n\n  /** @suppress {duplicate } */\n  var _glBlendFuncSeparate = (x0, x1, x2, x3) => GLctx.blendFuncSeparate(x0, x1, x2, x3);\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\n\n  /** @suppress {duplicate } */\n  var _glBlitFramebuffer = (x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) => GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9);\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBufferData = (target, size, data, usage) => {\n  \n      if (true) {\n        // If size is zero, WebGL would interpret uploading the whole input\n        // arraybuffer (starting from given offset), which would not make sense in\n        // WebAssembly, so avoid uploading if size is zero. However we must still\n        // call bufferData to establish a backing storage of zero bytes.\n        if (data && size) {\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\n        } else {\n          GLctx.bufferData(target, size, usage);\n        }\n        return;\n      }\n    };\n  var _emscripten_glBufferData = _glBufferData;\n\n  /** @suppress {duplicate } */\n  var _glBufferSubData = (target, offset, size, data) => {\n      if (true) {\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\n        return;\n      }\n    };\n  var _emscripten_glBufferSubData = _glBufferSubData;\n\n  /** @suppress {duplicate } */\n  var _glCheckFramebufferStatus = (x0) => GLctx.checkFramebufferStatus(x0);\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\n\n  /** @suppress {duplicate } */\n  var _glClear = (x0) => GLctx.clear(x0);\n  var _emscripten_glClear = _glClear;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferfi = (x0, x1, x2, x3) => GLctx.clearBufferfi(x0, x1, x2, x3);\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferfv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, ((value)>>2));\n    };\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, ((value)>>2));\n    };\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferuiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, ((value)>>2));\n    };\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\n\n  /** @suppress {duplicate } */\n  var _glClearColor = (x0, x1, x2, x3) => GLctx.clearColor(x0, x1, x2, x3);\n  var _emscripten_glClearColor = _glClearColor;\n\n  /** @suppress {duplicate } */\n  var _glClearDepthf = (x0) => GLctx.clearDepth(x0);\n  var _emscripten_glClearDepthf = _glClearDepthf;\n\n  /** @suppress {duplicate } */\n  var _glClearStencil = (x0) => GLctx.clearStencil(x0);\n  var _emscripten_glClearStencil = _glClearStencil;\n\n  /** @suppress {duplicate } */\n  var _glClientWaitSync = (sync, flags, timeout) => {\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\n      timeout = Number(timeout);\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\n\n  /** @suppress {duplicate } */\n  var _glClipControlEXT = (origin, depth) => {\n      GLctx.extClipControl['clipControlEXT'](origin, depth);\n    };\n  var _emscripten_glClipControlEXT = _glClipControlEXT;\n\n  /** @suppress {duplicate } */\n  var _glColorMask = (red, green, blue, alpha) => {\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\n    };\n  var _emscripten_glColorMask = _glColorMask;\n\n  /** @suppress {duplicate } */\n  var _glCompileShader = (shader) => {\n      GLctx.compileShader(GL.shaders[shader]);\n    };\n  var _emscripten_glCompileShader = _glCompileShader;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage2D = (target, level, internalFormat, width, height, border, imageSize, data) => {\n      // `data` may be null here, which means \"allocate uniniitalized space but\n      // don't upload\" in GLES parlance, but `compressedTexImage2D` requires the\n      // final data parameter, so we simply pass a heap view starting at zero\n      // effectively uploading whatever happens to be near address zero.  See\n      // https://github.com/emscripten-core/emscripten/issues/19300.\n      if (true) {\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\n          return;\n        }\n        GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\n        return;\n      }\n    };\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage3D = (target, level, internalFormat, width, height, depth, border, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\n      } else {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, imageSize, data) => {\n      if (true) {\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\n          return;\n        }\n        GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\n        return;\n      }\n    };\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\n      } else {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCopyBufferSubData = (x0, x1, x2, x3, x4) => GLctx.copyBufferSubData(x0, x1, x2, x3, x4);\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\n\n  /** @suppress {duplicate } */\n  var _glCopyTexImage2D = (x0, x1, x2, x3, x4, x5, x6, x7) => GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7);\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCopyTexSubImage2D = (x0, x1, x2, x3, x4, x5, x6, x7) => GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7);\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCopyTexSubImage3D = (x0, x1, x2, x3, x4, x5, x6, x7, x8) => GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8);\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCreateProgram = () => {\n      var id = GL.getNewId(GL.programs);\n      var program = GLctx.createProgram();\n      // Store additional information needed for each shader program:\n      program.name = id;\n      // Lazy cache results of\n      // glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\n      program.uniformIdCounter = 1;\n      GL.programs[id] = program;\n      return id;\n    };\n  var _emscripten_glCreateProgram = _glCreateProgram;\n\n  /** @suppress {duplicate } */\n  var _glCreateShader = (shaderType) => {\n      var id = GL.getNewId(GL.shaders);\n      GL.shaders[id] = GLctx.createShader(shaderType);\n  \n      return id;\n    };\n  var _emscripten_glCreateShader = _glCreateShader;\n\n  /** @suppress {duplicate } */\n  var _glCullFace = (x0) => GLctx.cullFace(x0);\n  var _emscripten_glCullFace = _glCullFace;\n\n  /** @suppress {duplicate } */\n  var _glDeleteBuffers = (n, buffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\n        var buffer = GL.buffers[id];\n  \n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\n        // correspond to existing buffer objects.\"\n        if (!buffer) continue;\n  \n        GLctx.deleteBuffer(buffer);\n        buffer.name = 0;\n        GL.buffers[id] = null;\n  \n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\n      }\n    };\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteFramebuffers = (n, framebuffers) => {\n      for (var i = 0; i < n; ++i) {\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\n        var framebuffer = GL.framebuffers[id];\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\n        GLctx.deleteFramebuffer(framebuffer);\n        framebuffer.name = 0;\n        GL.framebuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteProgram = (id) => {\n      if (!id) return;\n      var program = GL.programs[id];\n      if (!program) {\n        // glDeleteProgram actually signals an error when deleting a nonexisting\n        // object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteProgram(program);\n      program.name = 0;\n      GL.programs[id] = null;\n    };\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueries = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteQuery(query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\n\n  /** @suppress {duplicate } */\n  var _glDeleteRenderbuffers = (n, renderbuffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\n        var renderbuffer = GL.renderbuffers[id];\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\n        GLctx.deleteRenderbuffer(renderbuffer);\n        renderbuffer.name = 0;\n        GL.renderbuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSamplers = (n, samplers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\n        var sampler = GL.samplers[id];\n        if (!sampler) continue;\n        GLctx.deleteSampler(sampler);\n        sampler.name = 0;\n        GL.samplers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteShader = (id) => {\n      if (!id) return;\n      var shader = GL.shaders[id];\n      if (!shader) {\n        // glDeleteShader actually signals an error when deleting a nonexisting\n        // object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteShader(shader);\n      GL.shaders[id] = null;\n    };\n  var _emscripten_glDeleteShader = _glDeleteShader;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSync = (id) => {\n      if (!id) return;\n      var sync = GL.syncs[id];\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteSync(sync);\n      sync.name = 0;\n      GL.syncs[id] = null;\n    };\n  var _emscripten_glDeleteSync = _glDeleteSync;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTextures = (n, textures) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((textures)+(i*4))>>2)];\n        var texture = GL.textures[id];\n        // GL spec: \"glDeleteTextures silently ignores 0s and names that do not\n        // correspond to existing textures\".\n        if (!texture) continue;\n        GLctx.deleteTexture(texture);\n        texture.name = 0;\n        GL.textures[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTransformFeedbacks = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var transformFeedback = GL.transformFeedbacks[id];\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteTransformFeedback(transformFeedback);\n        transformFeedback.name = 0;\n        GL.transformFeedbacks[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\n\n  /** @suppress {duplicate } */\n  var _glDeleteVertexArrays = (n, vaos) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\n        GLctx.deleteVertexArray(GL.vaos[id]);\n        GL.vaos[id] = null;\n      }\n    };\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  var _glDepthFunc = (x0) => GLctx.depthFunc(x0);\n  var _emscripten_glDepthFunc = _glDepthFunc;\n\n  /** @suppress {duplicate } */\n  var _glDepthMask = (flag) => {\n      GLctx.depthMask(!!flag);\n    };\n  var _emscripten_glDepthMask = _glDepthMask;\n\n  /** @suppress {duplicate } */\n  var _glDepthRangef = (x0, x1) => GLctx.depthRange(x0, x1);\n  var _emscripten_glDepthRangef = _glDepthRangef;\n\n  /** @suppress {duplicate } */\n  var _glDetachShader = (program, shader) => {\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glDetachShader = _glDetachShader;\n\n  /** @suppress {duplicate } */\n  var _glDisable = (x0) => GLctx.disable(x0);\n  var _emscripten_glDisable = _glDisable;\n\n  /** @suppress {duplicate } */\n  var _glDisableVertexAttribArray = (index) => {\n      GLctx.disableVertexAttribArray(index);\n    };\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  var _glDrawArrays = (mode, first, count) => {\n  \n      GLctx.drawArrays(mode, first, count);\n  \n    };\n  var _emscripten_glDrawArrays = _glDrawArrays;\n\n  /** @suppress {duplicate } */\n  var _glDrawArraysInstanced = (mode, first, count, primcount) => {\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\n    };\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\n\n  var tempFixedLengthArray = [];\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffers = (n, bufs) => {\n  \n      var bufArray = tempFixedLengthArray[n];\n      for (var i = 0; i < n; i++) {\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\n      }\n  \n      GLctx.drawBuffers(bufArray);\n    };\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersEXT = _glDrawBuffers;\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\n\n  /** @suppress {duplicate } */\n  var _glDrawElements = (mode, count, type, indices) => {\n  \n      GLctx.drawElements(mode, count, type, indices);\n  \n    };\n  var _emscripten_glDrawElements = _glDrawElements;\n\n  /** @suppress {duplicate } */\n  var _glDrawElementsInstanced = (mode, count, type, indices, primcount) => {\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\n    };\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\n\n  /** @suppress {duplicate } */\n  var _glDrawRangeElements = (mode, start, end, count, type, indices) => {\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\n      // glFuncs[6][1] += ' drawRangeElements';\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\n      // we work around by ignoring the range.\n      _glDrawElements(mode, count, type, indices);\n    };\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\n\n  /** @suppress {duplicate } */\n  var _glEnable = (x0) => GLctx.enable(x0);\n  var _emscripten_glEnable = _glEnable;\n\n  /** @suppress {duplicate } */\n  var _glEnableVertexAttribArray = (index) => {\n      GLctx.enableVertexAttribArray(index);\n    };\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  var _glEndQuery = (x0) => GLctx.endQuery(x0);\n  var _emscripten_glEndQuery = _glEndQuery;\n\n  /** @suppress {duplicate } */\n  var _glEndQueryEXT = (target) => {\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\n    };\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\n\n  /** @suppress {duplicate } */\n  var _glEndTransformFeedback = () => GLctx.endTransformFeedback();\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glFenceSync = (condition, flags) => {\n      var sync = GLctx.fenceSync(condition, flags);\n      if (sync) {\n        var id = GL.getNewId(GL.syncs);\n        sync.name = id;\n        GL.syncs[id] = sync;\n        return id;\n      }\n      return 0; // Failed to create a sync object\n    };\n  var _emscripten_glFenceSync = _glFenceSync;\n\n  /** @suppress {duplicate } */\n  var _glFinish = () => GLctx.finish();\n  var _emscripten_glFinish = _glFinish;\n\n  /** @suppress {duplicate } */\n  var _glFlush = () => GLctx.flush();\n  var _emscripten_glFlush = _glFlush;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferRenderbuffer = (target, attachment, renderbuffertarget, renderbuffer) => {\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\n                                         GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTexture2D = (target, attachment, textarget, texture, level) => {\n      GLctx.framebufferTexture2D(target, attachment, textarget,\n                                      GL.textures[texture], level);\n    };\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTextureLayer = (target, attachment, texture, level, layer) => {\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\n    };\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\n\n  /** @suppress {duplicate } */\n  var _glFrontFace = (x0) => GLctx.frontFace(x0);\n  var _emscripten_glFrontFace = _glFrontFace;\n\n  /** @suppress {duplicate } */\n  var _glGenBuffers = (n, buffers) => {\n      GL.genObject(n, buffers, 'createBuffer', GL.buffers\n        );\n    };\n  var _emscripten_glGenBuffers = _glGenBuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenFramebuffers = (n, ids) => {\n      GL.genObject(n, ids, 'createFramebuffer', GL.framebuffers\n        );\n    };\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenQueries = (n, ids) => {\n      GL.genObject(n, ids, 'createQuery', GL.queries\n        );\n    };\n  var _emscripten_glGenQueries = _glGenQueries;\n\n  /** @suppress {duplicate } */\n  var _glGenQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\n        if (!query) {\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\n          return;\n        }\n        var id = GL.getNewId(GL.queries);\n        query.name = id;\n        GL.queries[id] = query;\n        HEAP32[(((ids)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\n\n  /** @suppress {duplicate } */\n  var _glGenRenderbuffers = (n, renderbuffers) => {\n      GL.genObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\n        );\n    };\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenSamplers = (n, samplers) => {\n      GL.genObject(n, samplers, 'createSampler', GL.samplers\n        );\n    };\n  var _emscripten_glGenSamplers = _glGenSamplers;\n\n  /** @suppress {duplicate } */\n  var _glGenTextures = (n, textures) => {\n      GL.genObject(n, textures, 'createTexture', GL.textures\n        );\n    };\n  var _emscripten_glGenTextures = _glGenTextures;\n\n  /** @suppress {duplicate } */\n  var _glGenTransformFeedbacks = (n, ids) => {\n      GL.genObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\n        );\n    };\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\n\n  /** @suppress {duplicate } */\n  var _glGenVertexArrays = (n, arrays) => {\n      GL.genObject(n, arrays, 'createVertexArray', GL.vaos\n        );\n    };\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenVertexArraysOES = _glGenVertexArrays;\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  var _glGenerateMipmap = (x0) => GLctx.generateMipmap(x0);\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\n\n  \n  var __glGetActiveAttribOrUniform = (funcName, program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx[funcName](program, index);\n      if (info) {\n        // If an error occurs, nothing will be written to length, size and type and name.\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n        if (size) HEAP32[((size)>>2)] = info.size;\n        if (type) HEAP32[((type)>>2)] = info.type;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveAttrib = (program, index, bufSize, length, size, type, name) =>\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveUniform = (program, index, bufSize, length, size, type, name) =>\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockName = (program, uniformBlockIndex, bufSize, length, uniformBlockName) => {\n      program = GL.programs[program];\n  \n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\n      if (uniformBlockName && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockiv = (program, uniformBlockIndex, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n  \n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n        HEAP32[((params)>>2)] = name.length+1;\n        return;\n      }\n  \n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\n      if (result === null) return; // If an error occurs, nothing should be written to params.\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\n        for (var i = 0; i < result.length; i++) {\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\n        }\n      } else {\n        HEAP32[((params)>>2)] = result;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformsiv = (program, uniformCount, uniformIndices, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && uniformIndices == 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var ids = [];\n      for (var i = 0; i < uniformCount; i++) {\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\n      }\n  \n      var result = GLctx.getActiveUniforms(program, ids, pname);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\n\n  /** @suppress {duplicate } */\n  var _glGetAttachedShaders = (program, maxCount, count, shaders) => {\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\n      var len = result.length;\n      if (len > maxCount) {\n        len = maxCount;\n      }\n      HEAP32[((count)>>2)] = len;\n      for (var i = 0; i < len; ++i) {\n        var id = GL.shaders.indexOf(result[i]);\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetAttribLocation = (program, name) =>\n      GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\n\n  var writeI53ToI64 = (ptr, num) => {\n      HEAPU32[((ptr)>>2)] = num;\n      var lower = HEAPU32[((ptr)>>2)];\n      HEAPU32[(((ptr)+(4))>>2)] = (num - lower)/4294967296;\n    };\n  \n  \n  var webglGetExtensions = () => {\n      var exts = getEmscriptenSupportedExtensions(GLctx);\n      exts = exts.concat(exts.map((e) => \"GL_\" + e));\n      return exts;\n    };\n  \n  var emscriptenWebGLGet = (name_, p, type) => {\n      // Guard against user passing a null pointer.\n      // Note that GLES2 spec does not say anything about how passing a null\n      // pointer should be treated.  Testing on desktop core GL 3, the application\n      // crashes on glGetIntegerv to a null pointer, but better to report an error\n      // instead of doing anything random.\n      if (!p) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = undefined;\n      switch (name_) { // Handle a few trivial GLES values\n        case 0x8DFA: // GL_SHADER_COMPILER\n          ret = 1;\n          break;\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\n          if (type != 0 && type != 1) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n          }\n          // Do not write anything to the out pointer, since no binary formats are\n          // supported.\n          return;\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\n          ret = 0;\n          break;\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete\n          // since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be\n          // queried for length), so implement it ourselves to allow C++ GLES2\n          // code get the length.\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\n          ret = formats ? formats.length : 0;\n          break;\n  \n        case 0x821D: // GL_NUM_EXTENSIONS\n          if (GL.currentContext.version < 2) {\n            // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n            return;\n          }\n          ret = webglGetExtensions().length;\n          break;\n        case 0x821B: // GL_MAJOR_VERSION\n        case 0x821C: // GL_MINOR_VERSION\n          if (GL.currentContext.version < 2) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\n          break;\n      }\n  \n      if (ret === undefined) {\n        var result = GLctx.getParameter(name_);\n        switch (typeof result) {\n          case \"number\":\n            ret = result;\n            break;\n          case \"boolean\":\n            ret = result ? 1 : 0;\n            break;\n          case \"string\":\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          case \"object\":\n            if (result === null) {\n              // null is a valid result for some (e.g., which buffer is bound -\n              // perhaps nothing is bound), but otherwise can mean an invalid\n              // name_, which we need to report as an error\n              switch (name_) {\n                case 0x8894: // ARRAY_BUFFER_BINDING\n                case 0x8B8D: // CURRENT_PROGRAM\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\n                case 0x8CA7: // RENDERBUFFER_BINDING\n                case 0x8069: // TEXTURE_BINDING_2D\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\n                case 0x8919: // SAMPLER_BINDING\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\n                case 0x806A: // TEXTURE_BINDING_3D\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\n                  ret = 0;\n                  break;\n                }\n                default: {\n                  GL.recordError(0x500); // GL_INVALID_ENUM\n                  return;\n                }\n              }\n            } else if (result instanceof Float32Array ||\n                       result instanceof Uint32Array ||\n                       result instanceof Int32Array ||\n                       result instanceof Array) {\n              for (var i = 0; i < result.length; ++i) {\n                switch (type) {\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 4: HEAP8[(p)+(i)] = result[i] ? 1 : 0; break;\n                }\n              }\n              return;\n            } else {\n              try {\n                ret = result.name | 0;\n              } catch(e) {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                err(`GL_INVALID_ENUM in glGet${type}v: Unknown object returned from WebGL getParameter(${name_})! (error: ${e})`);\n                return;\n              }\n            }\n            break;\n          default:\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            err(`GL_INVALID_ENUM in glGet${type}v: Native code calling glGet${type}v(${name_}) and it returns ${result} of type ${typeof(result)}!`);\n            return;\n        }\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(p, ret); break;\n        case 0: HEAP32[((p)>>2)] = ret; break;\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\n        case 4: HEAP8[p] = ret ? 1 : 0; break;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetBooleanv = (name_, p) => emscriptenWebGLGet(name_, p, 4);\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteri64v = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\n    };\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteriv = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null\n        // pointer. Since calling this function does not make sense if data ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\n    };\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetError = () => {\n      var error = GLctx.getError() || GL.lastError;\n      GL.lastError = 0/*GL_NO_ERROR*/;\n      return error;\n    };\n  var _emscripten_glGetError = _glGetError;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetFloatv = (name_, p) => emscriptenWebGLGet(name_, p, 2);\n  var _emscripten_glGetFloatv = _glGetFloatv;\n\n  /** @suppress {duplicate } */\n  var _glGetFragDataLocation = (program, name) => {\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\n    };\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\n\n  /** @suppress {duplicate } */\n  var _glGetFramebufferAttachmentParameteriv = (target, attachment, pname, params) => {\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\n      if (result instanceof WebGLRenderbuffer ||\n          result instanceof WebGLTexture) {\n        result = result.name | 0;\n      }\n      HEAP32[((params)>>2)] = result;\n    };\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\n\n  var emscriptenWebGLGetIndexed = (target, index, data, type) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var result = GLctx.getIndexedParameter(target, index);\n      var ret;\n      switch (typeof result) {\n        case 'boolean':\n          ret = result ? 1 : 0;\n          break;\n        case 'number':\n          ret = result;\n          break;\n        case 'object':\n          if (result === null) {\n            switch (target) {\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\n                ret = 0;\n                break;\n              default: {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                return;\n              }\n            }\n          } else if (result instanceof WebGLBuffer) {\n            ret = result.name | 0;\n          } else {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          break;\n        default:\n          GL.recordError(0x500); // GL_INVALID_ENUM\n          return;\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(data, ret); break;\n        case 0: HEAP32[((data)>>2)] = ret; break;\n        case 2: HEAPF32[((data)>>2)] = ret; break;\n        case 4: HEAP8[data] = ret ? 1 : 0; break;\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetInteger64i_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 1);\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\n\n  /** @suppress {duplicate } */\n  var _glGetInteger64v = (name_, p) => {\n      emscriptenWebGLGet(name_, p, 1);\n    };\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\n\n  /** @suppress {duplicate } */\n  var _glGetIntegeri_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 0);\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetIntegerv = (name_, p) => emscriptenWebGLGet(name_, p, 0);\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\n\n  /** @suppress {duplicate } */\n  var _glGetInternalformativ = (target, internalformat, pname, bufSize, params) => {\n      if (bufSize < 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!params) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\n      if (ret === null) return;\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\n      }\n    };\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramBinary = (program, bufSize, length, binaryFormat, binary) => {\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n    };\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramInfoLog = (program, maxLength, length, infoLog) => {\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramiv = (program, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      if (program >= GL.counter) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      program = GL.programs[program];\n  \n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getProgramInfoLog(program);\n        if (log === null) log = '(unknown error)';\n        HEAP32[((p)>>2)] = log.length + 1;\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\n        if (!program.maxUniformLength) {\n          var numActiveUniforms = GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/);\n          for (var i = 0; i < numActiveUniforms; ++i) {\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformLength;\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\n        if (!program.maxAttributeLength) {\n          var numActiveAttributes = GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/);\n          for (var i = 0; i < numActiveAttributes; ++i) {\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\n        if (!program.maxUniformBlockNameLength) {\n          var numActiveUniformBlocks = GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/);\n          for (var i = 0; i < numActiveUniformBlocks; ++i) {\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\n      }\n    };\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjecti64vEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param;\n      if (GL.currentContext.version < 2)\n      {\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      }\n      else {\n        param = GLctx.getQueryParameter(query, pname);\n      }\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      writeI53ToI64(params, ret);\n    };\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectivEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuiv = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.getQueryParameter(query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryiv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\n    };\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryivEXT = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\n    };\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetRenderbufferParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\n    };\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameterfv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameteriv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetShaderInfoLog = (shader, maxLength, length, infoLog) => {\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderPrecisionFormat = (shaderType, precisionType, range, precision) => {\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\n      HEAP32[((range)>>2)] = result.rangeMin;\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\n      HEAP32[((precision)>>2)] = result.precision;\n    };\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderSource = (shader, bufSize, length, source) => {\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderiv = (shader, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n        if (log === null) log = '(unknown error)';\n        // The GLES2 specification says that if the shader has an empty info log,\n        // a value of 0 is returned. Otherwise the log has a null char appended.\n        // (An empty string is falsey, so we can just check that instead of\n        // looking at log.length.)\n        var logLength = log ? log.length + 1 : 0;\n        HEAP32[((p)>>2)] = logLength;\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\n        // source may be a null, or the empty string, both of which are falsey\n        // values that we report a 0 length for.\n        var sourceLength = source ? source.length + 1 : 0;\n        HEAP32[((p)>>2)] = sourceLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\n      }\n    };\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glGetString = (name_) => {\n      var ret = GL.stringCache[name_];\n      if (!ret) {\n        switch (name_) {\n          case 0x1F03 /* GL_EXTENSIONS */:\n            ret = stringToNewUTF8(webglGetExtensions().join(' '));\n            break;\n          case 0x1F00 /* GL_VENDOR */:\n          case 0x1F01 /* GL_RENDERER */:\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\n            var s = GLctx.getParameter(name_);\n            if (!s) {\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            }\n            ret = s ? stringToNewUTF8(s) : 0;\n            break;\n  \n          case 0x1F02 /* GL_VERSION */:\n            var webGLVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\n            // return GLES version string corresponding to the version of the WebGL context\n            var glVersion = `OpenGL ES 2.0 (${webGLVersion})`;\n            if (true) glVersion = `OpenGL ES 3.0 (${webGLVersion})`;\n            ret = stringToNewUTF8(glVersion);\n            break;\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\n            var ver_num = glslVersion.match(ver_re);\n            if (ver_num !== null) {\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\n              glslVersion = `OpenGL ES GLSL ES ${ver_num[1]} (${glslVersion})`;\n            }\n            ret = stringToNewUTF8(glslVersion);\n            break;\n          default:\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            // fall through\n        }\n        GL.stringCache[name_] = ret;\n      }\n      return ret;\n    };\n  var _emscripten_glGetString = _glGetString;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetStringi = (name, index) => {\n      if (GL.currentContext.version < 2) {\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n        return 0;\n      }\n      var stringiCache = GL.stringiCache[name];\n      if (stringiCache) {\n        if (index < 0 || index >= stringiCache.length) {\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\n          return 0;\n        }\n        return stringiCache[index];\n      }\n      switch (name) {\n        case 0x1F03 /* GL_EXTENSIONS */:\n          var exts = webglGetExtensions().map(stringToNewUTF8);\n          stringiCache = GL.stringiCache[name] = exts;\n          if (index < 0 || index >= stringiCache.length) {\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\n            return 0;\n          }\n          return stringiCache[index];\n        default:\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\n          return 0;\n      }\n    };\n  var _emscripten_glGetStringi = _glGetStringi;\n\n  /** @suppress {duplicate } */\n  var _glGetSynciv = (sync, pname, bufSize, length, values) => {\n      if (bufSize < 0) {\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\n        // so raise GL_INVALID_VALUE here as well.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!values) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\n      if (ret !== null) {\n        HEAP32[((values)>>2)] = ret;\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\n      }\n    };\n  var _emscripten_glGetSynciv = _glGetSynciv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameterfv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetTransformFeedbackVarying = (program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx.getTransformFeedbackVarying(program, index);\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\n  \n      if (name && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n  \n      if (size) HEAP32[((size)>>2)] = info.size;\n      if (type) HEAP32[((type)>>2)] = info.type;\n    };\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformBlockIndex = (program, uniformBlockName) => {\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\n    };\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformIndices = (program, uniformCount, uniformNames, uniformIndices) => {\n      if (!uniformIndices) {\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\n        // if uniformIndices == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var names = [];\n      for (var i = 0; i < uniformCount; i++)\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\n  \n      var result = GLctx.getUniformIndices(program, names);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\n\n  \n  /** @noinline */\n  var webglGetLeftBracePos = (name) => name.slice(-1) == ']' && name.lastIndexOf('[');\n  \n  var webglPrepareUniformLocationsBeforeFirstUse = (program) => {\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\n        i, j;\n  \n      // On the first time invocation of glGetUniformLocation on this shader program:\n      // initialize cache data structures and discover which uniforms are arrays.\n      if (!uniformLocsById) {\n        // maps GLint integer locations to WebGLUniformLocations\n        program.uniformLocsById = uniformLocsById = {};\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\n        program.uniformArrayNamesById = {};\n  \n        var numActiveUniforms = GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/);\n        for (i = 0; i < numActiveUniforms; ++i) {\n          var u = GLctx.getActiveUniform(program, i);\n          var nm = u.name;\n          var sz = u.size;\n          var lb = webglGetLeftBracePos(nm);\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\n  \n          // Assign a new location.\n          var id = program.uniformIdCounter;\n          program.uniformIdCounter += sz;\n          // Eagerly get the location of the uniformArray[0] base element.\n          // The remaining indices >0 will be left for lazy evaluation to\n          // improve performance. Those may never be needed to fetch, if the\n          // application fills arrays always in full starting from the first\n          // element of the array.\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\n  \n          // Store placeholder integers in place that highlight that these\n          // >0 index locations are array indices pending population.\n          for (j = 0; j < sz; ++j) {\n            uniformLocsById[id] = j;\n            program.uniformArrayNamesById[id++] = arrayName;\n          }\n        }\n      }\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glGetUniformLocation = (program, name) => {\n  \n      name = UTF8ToString(name);\n  \n      if (program = GL.programs[program]) {\n        webglPrepareUniformLocationsBeforeFirstUse(program);\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\n        var arrayIndex = 0;\n        var uniformBaseName = name;\n  \n        // Invariant: when populating integer IDs for uniform locations, we must\n        // maintain the precondition that arrays reside in contiguous addresses,\n        // i.e. for a 'vec4 colors[10];', colors[4] must be at location\n        // colors[0]+4.  However, user might call glGetUniformLocation(program,\n        // \"colors\") for an array, so we cannot discover based on the user input\n        // arguments whether the uniform we are dealing with is an array. The only\n        // way to discover which uniforms are arrays is to enumerate over all the\n        // active uniforms in the program.\n        var leftBrace = webglGetLeftBracePos(name);\n  \n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\n        if (leftBrace > 0) {\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\n          uniformBaseName = name.slice(0, leftBrace);\n        }\n  \n        // Have we cached the location of this uniform before?\n        // A pair [array length, GLint of the uniform location]\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName];\n  \n        // If an uniform with this name exists, and if its index is within the\n        // array limits (if it's even an array), query the WebGLlocation, or\n        // return an existing cached location.\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\n            return arrayIndex;\n          }\n        }\n      }\n      else {\n        // N.b. we are currently unable to distinguish between GL program IDs that\n        // never existed vs GL program IDs that have been deleted, so report\n        // GL_INVALID_VALUE in both cases.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n      }\n      return -1;\n    };\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\n\n  var webglGetUniformLocation = (location) => {\n      var p = GLctx.currentProgram;\n  \n      if (p) {\n        var webglLoc = p.uniformLocsById[location];\n        // p.uniformLocsById[location] stores either an integer, or a\n        // WebGLUniformLocation.\n        // If an integer, we have not yet bound the location, so do it now. The\n        // integer value specifies the array index we should bind to.\n        if (typeof webglLoc == 'number') {\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? `[${webglLoc}]` : ''));\n        }\n        // Else an already cached WebGLUniformLocation, return it.\n        return webglLoc;\n      } else {\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n      }\n    };\n  \n  \n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetUniform = (program, location, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if params ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      webglPrepareUniformLocationsBeforeFirstUse(program);\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\n      if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n          }\n        }\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformfv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 2);\n    };\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformiv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 0);\n    };\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformuiv = (program, location, params) =>\n      emscriptenWebGLGetUniform(program, location, params, 0);\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\n\n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetVertexAttrib = (index, pname, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if params ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var data = GLctx.getVertexAttrib(index, pname);\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\n        HEAP32[((params)>>2)] = data && data[\"name\"];\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\n          }\n        }\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\n    };\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\n\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribPointerv = (index, pname, pointer) => {\n      if (!pointer) {\n        // GLES2 specification does not specify how to behave if pointer is a null\n        // pointer. Since calling this function does not make sense if pointer ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\n    };\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribfv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was\n      // specified using the function glVertexAttrib*f(), otherwise the results\n      // are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\n    };\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was\n      // specified using the function glVertexAttrib*f(), otherwise the results\n      // are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\n    };\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\n\n  /** @suppress {duplicate } */\n  var _glHint = (x0, x1) => GLctx.hint(x0, x1);\n  var _emscripten_glHint = _glHint;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateFramebuffer = (target, numAttachments, attachments) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateFramebuffer(target, list);\n    };\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateSubFramebuffer = (target, numAttachments, attachments, x, y, width, height) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\n    };\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsBuffer = (buffer) => {\n      var b = GL.buffers[buffer];\n      if (!b) return 0;\n      return GLctx.isBuffer(b);\n    };\n  var _emscripten_glIsBuffer = _glIsBuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsEnabled = (x0) => GLctx.isEnabled(x0);\n  var _emscripten_glIsEnabled = _glIsEnabled;\n\n  /** @suppress {duplicate } */\n  var _glIsFramebuffer = (framebuffer) => {\n      var fb = GL.framebuffers[framebuffer];\n      if (!fb) return 0;\n      return GLctx.isFramebuffer(fb);\n    };\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsProgram = (program) => {\n      program = GL.programs[program];\n      if (!program) return 0;\n      return GLctx.isProgram(program);\n    };\n  var _emscripten_glIsProgram = _glIsProgram;\n\n  /** @suppress {duplicate } */\n  var _glIsQuery = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.isQuery(query);\n    };\n  var _emscripten_glIsQuery = _glIsQuery;\n\n  /** @suppress {duplicate } */\n  var _glIsQueryEXT = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\n    };\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\n\n  /** @suppress {duplicate } */\n  var _glIsRenderbuffer = (renderbuffer) => {\n      var rb = GL.renderbuffers[renderbuffer];\n      if (!rb) return 0;\n      return GLctx.isRenderbuffer(rb);\n    };\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsSampler = (id) => {\n      var sampler = GL.samplers[id];\n      if (!sampler) return 0;\n      return GLctx.isSampler(sampler);\n    };\n  var _emscripten_glIsSampler = _glIsSampler;\n\n  /** @suppress {duplicate } */\n  var _glIsShader = (shader) => {\n      var s = GL.shaders[shader];\n      if (!s) return 0;\n      return GLctx.isShader(s);\n    };\n  var _emscripten_glIsShader = _glIsShader;\n\n  /** @suppress {duplicate } */\n  var _glIsSync = (sync) => GLctx.isSync(GL.syncs[sync]);\n  var _emscripten_glIsSync = _glIsSync;\n\n  /** @suppress {duplicate } */\n  var _glIsTexture = (id) => {\n      var texture = GL.textures[id];\n      if (!texture) return 0;\n      return GLctx.isTexture(texture);\n    };\n  var _emscripten_glIsTexture = _glIsTexture;\n\n  /** @suppress {duplicate } */\n  var _glIsTransformFeedback = (id) => GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glIsVertexArray = (array) => {\n  \n      var vao = GL.vaos[array];\n      if (!vao) return 0;\n      return GLctx.isVertexArray(vao);\n    };\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glIsVertexArrayOES = _glIsVertexArray;\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  var _glLineWidth = (x0) => GLctx.lineWidth(x0);\n  var _emscripten_glLineWidth = _glLineWidth;\n\n  /** @suppress {duplicate } */\n  var _glLinkProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.linkProgram(program);\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\n      program.uniformSizeAndIdsByName = {};\n  \n    };\n  var _emscripten_glLinkProgram = _glLinkProgram;\n\n  /** @suppress {duplicate } */\n  var _glPauseTransformFeedback = () => GLctx.pauseTransformFeedback();\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glPixelStorei = (pname, param) => {\n      if (pname == 3317) {\n        GL.unpackAlignment = param;\n      } else if (pname == 3314) {\n        GL.unpackRowLength = param;\n      }\n      GLctx.pixelStorei(pname, param);\n    };\n  var _emscripten_glPixelStorei = _glPixelStorei;\n\n  /** @suppress {duplicate } */\n  var _glPolygonModeWEBGL = (face, mode) => {\n      GLctx.webglPolygonMode['polygonModeWEBGL'](face, mode);\n    };\n  var _emscripten_glPolygonModeWEBGL = _glPolygonModeWEBGL;\n\n  /** @suppress {duplicate } */\n  var _glPolygonOffset = (x0, x1) => GLctx.polygonOffset(x0, x1);\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\n\n  /** @suppress {duplicate } */\n  var _glPolygonOffsetClampEXT = (factor, units, clamp) => {\n      GLctx.extPolygonOffsetClamp['polygonOffsetClampEXT'](factor, units, clamp);\n    };\n  var _emscripten_glPolygonOffsetClampEXT = _glPolygonOffsetClampEXT;\n\n  /** @suppress {duplicate } */\n  var _glProgramBinary = (program, binaryFormat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramBinary = _glProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glProgramParameteri = (program, pname, value) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\n\n  /** @suppress {duplicate } */\n  var _glQueryCounterEXT = (id, target) => {\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\n    };\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\n\n  /** @suppress {duplicate } */\n  var _glReadBuffer = (x0) => GLctx.readBuffer(x0);\n  var _emscripten_glReadBuffer = _glReadBuffer;\n\n  var heapObjectForWebGLType = (type) => {\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\n      // smaller values for the heap, for shorter generated code size.\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\n      // (since most types are HEAPU16)\n      type -= 0x1400;\n      if (type == 0) return HEAP8;\n  \n      if (type == 1) return HEAPU8;\n  \n      if (type == 2) return HEAP16;\n  \n      if (type == 4) return HEAP32;\n  \n      if (type == 6) return HEAPF32;\n  \n      if (type == 5\n        || type == 28922\n        || type == 28520\n        || type == 30779\n        || type == 30782\n        )\n        return HEAPU32;\n  \n      return HEAPU16;\n    };\n  \n  var toTypedArrayIndex = (pointer, heap) =>\n      pointer >>> (31 - Math.clz32(heap.BYTES_PER_ELEMENT));\n  \n  /** @suppress {duplicate } */\n  var _glReadPixels = (x, y, width, height, format, type, pixels) => {\n      if (true) {\n        if (GLctx.currentPixelPackBufferBinding) {\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\n          return;\n        }\n        var heap = heapObjectForWebGLType(type);\n        var target = toTypedArrayIndex(pixels, heap);\n        GLctx.readPixels(x, y, width, height, format, type, heap, target);\n        return;\n      }\n    };\n  var _emscripten_glReadPixels = _glReadPixels;\n\n  /** @suppress {duplicate } */\n  var _glReleaseShaderCompiler = () => {\n      // NOP (as allowed by GLES 2.0 spec)\n    };\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\n\n  /** @suppress {duplicate } */\n  var _glRenderbufferStorage = (x0, x1, x2, x3) => GLctx.renderbufferStorage(x0, x1, x2, x3);\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\n\n  /** @suppress {duplicate } */\n  var _glRenderbufferStorageMultisample = (x0, x1, x2, x3, x4) => GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4);\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\n\n  /** @suppress {duplicate } */\n  var _glResumeTransformFeedback = () => GLctx.resumeTransformFeedback();\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glSampleCoverage = (value, invert) => {\n      GLctx.sampleCoverage(value, !!invert);\n    };\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterf = (sampler, pname, param) => {\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterfv = (sampler, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteri = (sampler, pname, param) => {\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteriv = (sampler, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glScissor = (x0, x1, x2, x3) => GLctx.scissor(x0, x1, x2, x3);\n  var _emscripten_glScissor = _glScissor;\n\n  /** @suppress {duplicate } */\n  var _glShaderBinary = (count, shaders, binaryformat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glShaderBinary = _glShaderBinary;\n\n  /** @suppress {duplicate } */\n  var _glShaderSource = (shader, count, string, length) => {\n      var source = GL.getSource(shader, count, string, length);\n  \n      GLctx.shaderSource(GL.shaders[shader], source);\n    };\n  var _emscripten_glShaderSource = _glShaderSource;\n\n  /** @suppress {duplicate } */\n  var _glStencilFunc = (x0, x1, x2) => GLctx.stencilFunc(x0, x1, x2);\n  var _emscripten_glStencilFunc = _glStencilFunc;\n\n  /** @suppress {duplicate } */\n  var _glStencilFuncSeparate = (x0, x1, x2, x3) => GLctx.stencilFuncSeparate(x0, x1, x2, x3);\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\n\n  /** @suppress {duplicate } */\n  var _glStencilMask = (x0) => GLctx.stencilMask(x0);\n  var _emscripten_glStencilMask = _glStencilMask;\n\n  /** @suppress {duplicate } */\n  var _glStencilMaskSeparate = (x0, x1) => GLctx.stencilMaskSeparate(x0, x1);\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\n\n  /** @suppress {duplicate } */\n  var _glStencilOp = (x0, x1, x2) => GLctx.stencilOp(x0, x1, x2);\n  var _emscripten_glStencilOp = _glStencilOp;\n\n  /** @suppress {duplicate } */\n  var _glStencilOpSeparate = (x0, x1, x2, x3) => GLctx.stencilOpSeparate(x0, x1, x2, x3);\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\n\n  var computeUnpackAlignedImageSize = (width, height, sizePerPixel) => {\n      function roundedToNextMultipleOf(x, y) {\n        return (x + y - 1) & -y;\n      }\n      var plainRowSize = (GL.unpackRowLength || width) * sizePerPixel;\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, GL.unpackAlignment);\n      return height * alignedRowSize;\n    };\n  \n  var colorChannelsInGlTextureFormat = (format) => {\n      // Micro-optimizations for size: map format to size by subtracting smallest\n      // enum value (0x1902) from all values first.  Also omit the most common\n      // size value (1) from the list, which is assumed by formats not on the\n      // list.\n      var colorChannels = {\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\n        5: 3,\n        6: 4,\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\n        8: 2,\n        29502: 3,\n        29504: 4,\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\n        26917: 2,\n        26918: 2,\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\n        29846: 3,\n        29847: 4\n      };\n      return colorChannels[format - 0x1902]||1;\n    };\n  \n  \n  \n  var emscriptenWebGLGetTexPixelData = (type, format, width, height, pixels, internalFormat) => {\n      var heap = heapObjectForWebGLType(type);\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * heap.BYTES_PER_ELEMENT;\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel);\n      return heap.subarray(toTypedArrayIndex(pixels, heap), toTypedArrayIndex(pixels + bytes, heap));\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexImage2D = (target, level, internalFormat, width, height, border, format, type, pixels) => {\n      if (true) {\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\n          return;\n        }\n        if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          var index = toTypedArrayIndex(pixels, heap);\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, index);\n          return;\n        }\n      }\n      var pixelData = pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null;\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixelData);\n    };\n  var _emscripten_glTexImage2D = _glTexImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexImage3D = (target, level, internalFormat, width, height, depth, border, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, toTypedArrayIndex(pixels, heap));\n      } else {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\n      }\n    };\n  var _emscripten_glTexImage3D = _glTexImage3D;\n\n  /** @suppress {duplicate } */\n  var _glTexParameterf = (x0, x1, x2) => GLctx.texParameterf(x0, x1, x2);\n  var _emscripten_glTexParameterf = _glTexParameterf;\n\n  /** @suppress {duplicate } */\n  var _glTexParameterfv = (target, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.texParameterf(target, pname, param);\n    };\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glTexParameteri = (x0, x1, x2) => GLctx.texParameteri(x0, x1, x2);\n  var _emscripten_glTexParameteri = _glTexParameteri;\n\n  /** @suppress {duplicate } */\n  var _glTexParameteriv = (target, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.texParameteri(target, pname, param);\n    };\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glTexStorage2D = (x0, x1, x2, x3, x4) => GLctx.texStorage2D(x0, x1, x2, x3, x4);\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\n\n  /** @suppress {duplicate } */\n  var _glTexStorage3D = (x0, x1, x2, x3, x4, x5) => GLctx.texStorage3D(x0, x1, x2, x3, x4, x5);\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\n\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, type, pixels) => {\n      if (true) {\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\n          return;\n        }\n        if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, toTypedArrayIndex(pixels, heap));\n          return;\n        }\n      }\n      var pixelData = pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0) : null;\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\n    };\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, toTypedArrayIndex(pixels, heap));\n      } else {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\n      }\n    };\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glTransformFeedbackVaryings = (program, count, varyings, bufferMode) => {\n      program = GL.programs[program];\n      var vars = [];\n      for (var i = 0; i < count; i++)\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\n  \n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\n    };\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1f = (location, v0) => {\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1f = _glUniform1f;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1fv = (location, count, value) => {\n  \n      count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, ((value)>>2), count);\n    };\n  var _emscripten_glUniform1fv = _glUniform1fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1i = (location, v0) => {\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1i = _glUniform1i;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1iv = (location, count, value) => {\n  \n      count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, ((value)>>2), count);\n    };\n  var _emscripten_glUniform1iv = _glUniform1iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform1ui = (location, v0) => {\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1ui = _glUniform1ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform1uiv = (location, count, value) => {\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, ((value)>>2), count);\n    };\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2f = (location, v0, v1) => {\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2f = _glUniform2f;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2fv = (location, count, value) => {\n  \n      count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, ((value)>>2), count*2);\n    };\n  var _emscripten_glUniform2fv = _glUniform2fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2i = (location, v0, v1) => {\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2i = _glUniform2i;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2iv = (location, count, value) => {\n  \n      count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, ((value)>>2), count*2);\n    };\n  var _emscripten_glUniform2iv = _glUniform2iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform2ui = (location, v0, v1) => {\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2ui = _glUniform2ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform2uiv = (location, count, value) => {\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, ((value)>>2), count*2);\n    };\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3f = (location, v0, v1, v2) => {\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3f = _glUniform3f;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3fv = (location, count, value) => {\n  \n      count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, ((value)>>2), count*3);\n    };\n  var _emscripten_glUniform3fv = _glUniform3fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3i = (location, v0, v1, v2) => {\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3i = _glUniform3i;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3iv = (location, count, value) => {\n  \n      count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, ((value)>>2), count*3);\n    };\n  var _emscripten_glUniform3iv = _glUniform3iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform3ui = (location, v0, v1, v2) => {\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3ui = _glUniform3ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform3uiv = (location, count, value) => {\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, ((value)>>2), count*3);\n    };\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4f = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4f = _glUniform4f;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4fv = (location, count, value) => {\n  \n      count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, ((value)>>2), count*4);\n    };\n  var _emscripten_glUniform4fv = _glUniform4fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4i = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4i = _glUniform4i;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4iv = (location, count, value) => {\n  \n      count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, ((value)>>2), count*4);\n    };\n  var _emscripten_glUniform4iv = _glUniform4iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform4ui = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4ui = _glUniform4ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform4uiv = (location, count, value) => {\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, ((value)>>2), count*4);\n    };\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\n\n  /** @suppress {duplicate } */\n  var _glUniformBlockBinding = (program, uniformBlockIndex, uniformBlockBinding) => {\n      program = GL.programs[program];\n  \n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\n    };\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix2fv = (location, count, transpose, value) => {\n  \n      count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*4);\n    };\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*6);\n    };\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*8);\n    };\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix3fv = (location, count, transpose, value) => {\n  \n      count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*9);\n    };\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*6);\n    };\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*12);\n    };\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix4fv = (location, count, transpose, value) => {\n  \n      count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*16);\n    };\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*8);\n    };\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, ((value)>>2), count*12);\n    };\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUseProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.useProgram(program);\n      // Record the currently active program so that we can access the uniform\n      // mapping table of that program.\n      GLctx.currentProgram = program;\n    };\n  var _emscripten_glUseProgram = _glUseProgram;\n\n  /** @suppress {duplicate } */\n  var _glValidateProgram = (program) => {\n      GLctx.validateProgram(GL.programs[program]);\n    };\n  var _emscripten_glValidateProgram = _glValidateProgram;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib1f = (x0, x1) => GLctx.vertexAttrib1f(x0, x1);\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib1fv = (index, v) => {\n  \n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\n    };\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib2f = (x0, x1, x2) => GLctx.vertexAttrib2f(x0, x1, x2);\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib2fv = (index, v) => {\n  \n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\n    };\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib3f = (x0, x1, x2, x3) => GLctx.vertexAttrib3f(x0, x1, x2, x3);\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib3fv = (index, v) => {\n  \n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\n    };\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib4f = (x0, x1, x2, x3, x4) => GLctx.vertexAttrib4f(x0, x1, x2, x3, x4);\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib4fv = (index, v) => {\n  \n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisor = (index, divisor) => {\n      GLctx.vertexAttribDivisor(index, divisor);\n    };\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4i = (x0, x1, x2, x3, x4) => GLctx.vertexAttribI4i(x0, x1, x2, x3, x4);\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4iv = (index, v) => {\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4ui = (x0, x1, x2, x3, x4) => GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4);\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4uiv = (index, v) => {\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribIPointer = (index, size, type, stride, ptr) => {\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\n    };\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribPointer = (index, size, type, normalized, stride, ptr) => {\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\n    };\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\n\n  /** @suppress {duplicate } */\n  var _glViewport = (x0, x1, x2, x3) => GLctx.viewport(x0, x1, x2, x3);\n  var _emscripten_glViewport = _glViewport;\n\n  /** @suppress {duplicate } */\n  var _glWaitSync = (sync, flags, timeout) => {\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\n      timeout = Number(timeout);\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glWaitSync = _glWaitSync;\n\n  var _emscripten_has_asyncify = () => 1;\n\n  \n  \n  var doRequestFullscreen = (target, strategy) => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      if (!target.requestFullscreen\n        && !target.webkitRequestFullscreen\n        ) {\n        return -3;\n      }\n  \n      // Queue this function call if we're not currently in an event handler and\n      // the user saw it appropriate to do so.\n      if (!JSEvents.canPerformEventHandlerRequests()) {\n        if (strategy.deferUntilInEventHandler) {\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\n          return 1;\n        }\n        return -2;\n      }\n  \n      return JSEvents_requestFullscreen(target, strategy);\n    };\n  var _emscripten_request_fullscreen_strategy = (target, deferUntilInEventHandler, fullscreenStrategy) => {\n      var strategy = {\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\n        deferUntilInEventHandler,\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\n      };\n  \n      return doRequestFullscreen(target, strategy);\n    };\n\n  \n  \n  var _emscripten_request_pointerlock = (target, deferUntilInEventHandler) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n      if (!target.requestPointerLock\n        ) {\n        return -1;\n      }\n  \n      // Queue this function call if we're not currently in an event handler and\n      // the user saw it appropriate to do so.\n      if (!JSEvents.canPerformEventHandlerRequests()) {\n        if (deferUntilInEventHandler) {\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\n          return 1;\n        }\n        return -2;\n      }\n  \n      return requestPointerLock(target);\n    };\n\n  var getHeapMax = () =>\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n      // for any code that deals with heap sizes, which would require special\n      // casing all heap size related code to treat 0 specially.\n      2147483648;\n  \n  var alignMemory = (size, alignment) => {\n      return Math.ceil(size / alignment) * alignment;\n    };\n  \n  var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = ((size - b.byteLength + 65535) / 65536) | 0;\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size\n        updateMemoryViews();\n        return 1 /*success*/;\n      } catch(e) {\n      }\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\n      // anyhow)\n    };\n  var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      requestedSize >>>= 0;\n      // With multithreaded builds, races can happen (another thread might increase the size\n      // in between), so return a failure, and let the caller retry.\n  \n      // Memory resize rules:\n      // 1.  Always increase heap size to at least the requested size, rounded up\n      //     to next page multiple.\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n      //     geometrically: increase the heap size according to\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n      //     linearly: increase the heap size by at least\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n      // 4.  If we were unable to allocate as much memory, it may be due to\n      //     over-eager decision to excessively reserve due to (3) above.\n      //     Hence if an allocation fails, cut down on the amount of excess\n      //     growth, in an attempt to succeed to perform a smaller allocation.\n  \n      // A limit is set for how much we can grow. We should not exceed that\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n  \n      // Loop through potential heap size increases. If we attempt a too eager\n      // reservation that fails, cut down on the attempted size and reserve a\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\n  \n        var newSize = Math.min(maxHeapSize, alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536));\n  \n        var replacement = growMemory(newSize);\n        if (replacement) {\n  \n          return true;\n        }\n      }\n      return false;\n    };\n\n  /** @suppress {checkTypes} */\n  var _emscripten_sample_gamepad_data = () => {\n      try {\n        if (navigator.getGamepads) return (JSEvents.lastGamepadState = navigator.getGamepads())\n          ? 0 : -1;\n      } catch(e) {\n        navigator.getGamepads = null; // Disable getGamepads() so that it won't be attempted to be used again.\n      }\n      return -1;\n    };\n\n  \n  \n  var registerBeforeUnloadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) => {\n      var beforeUnloadEventHandlerFunc = (e = event) => {\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, 0, userData);\n  \n        if (confirmationMessage) {\n          confirmationMessage = UTF8ToString(confirmationMessage);\n        }\n        if (confirmationMessage) {\n          e.preventDefault();\n          e.returnValue = confirmationMessage;\n          return confirmationMessage;\n        }\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: beforeUnloadEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_beforeunload_callback_on_thread = (userData, callbackfunc, targetThread) => {\n      if (typeof onbeforeunload == 'undefined') return -1;\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\n      // and there is no time to start proxying it anywhere.\n      if (targetThread !== 1) return -5;\n      return registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\n    };\n\n  \n  \n  \n  var registerFocusEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.focusEvent ||= _malloc(256);\n  \n      var focusEventHandlerFunc = (e = event) => {\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\n        var id = e.target.id ? e.target.id : '';\n  \n        var focusEvent = JSEvents.focusEvent;\n        stringToUTF8(nodeName, focusEvent + 0, 128);\n        stringToUTF8(id, focusEvent + 128, 128);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, focusEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: focusEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_blur_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\n\n\n  var _emscripten_set_element_css_size = (target, width, height) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      target.style.width = width + \"px\";\n      target.style.height = height + \"px\";\n  \n      return 0;\n    };\n\n  var _emscripten_set_focus_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\n\n  \n  \n  \n  var fillFullscreenChangeEventData = (eventStruct) => {\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\n      var isFullscreen = !!fullscreenElement;\n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP8[eventStruct] = isFullscreen;\n      HEAP8[(eventStruct)+(1)] = JSEvents.fullscreenEnabled();\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\n      var id = reportedElement?.id || '';\n      stringToUTF8(nodeName, eventStruct + 2, 128);\n      stringToUTF8(id, eventStruct + 130, 128);\n      HEAP32[(((eventStruct)+(260))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\n      HEAP32[(((eventStruct)+(268))>>2)] = screen.width;\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.height;\n      if (isFullscreen) {\n        JSEvents.previousFullscreenElement = fullscreenElement;\n      }\n    };\n  \n  var registerFullscreenChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.fullscreenChangeEvent ||= _malloc(276);\n  \n      var fullscreenChangeEventhandlerFunc = (e = event) => {\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\n  \n        fillFullscreenChangeEventData(fullscreenChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: fullscreenChangeEventhandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_fullscreenchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\n  \n      return registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\n    };\n\n  \n  \n  \n  var registerGamepadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.gamepadEvent ||= _malloc(1240);\n  \n      var gamepadEventHandlerFunc = (e = event) => {\n        var gamepadEvent = JSEvents.gamepadEvent;\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: gamepadEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_gamepadconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      if (_emscripten_sample_gamepad_data()) return -1;\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\n    };\n\n  \n  var _emscripten_set_gamepaddisconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      if (_emscripten_sample_gamepad_data()) return -1;\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\n    };\n\n  \n  \n  \n  var registerKeyEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.keyEvent ||= _malloc(160);\n  \n      var keyEventHandlerFunc = (e) => {\n  \n        var keyEventData = JSEvents.keyEvent;\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\n  \n        var idx = ((keyEventData)>>2);\n  \n        HEAP32[idx + 2] = e.location;\n        HEAP8[keyEventData + 12] = e.ctrlKey;\n        HEAP8[keyEventData + 13] = e.shiftKey;\n        HEAP8[keyEventData + 14] = e.altKey;\n        HEAP8[keyEventData + 15] = e.metaKey;\n        HEAP8[keyEventData + 16] = e.repeat;\n        HEAP32[idx + 5] = e.charCode;\n        HEAP32[idx + 6] = e.keyCode;\n        HEAP32[idx + 7] = e.which;\n        stringToUTF8(e.key || '', keyEventData + 32, 32);\n        stringToUTF8(e.code || '', keyEventData + 64, 32);\n        stringToUTF8(e.char || '', keyEventData + 96, 32);\n        stringToUTF8(e.locale || '', keyEventData + 128, 32);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, keyEventData, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: keyEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_keydown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\n\n  var _emscripten_set_keypress_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\n\n  var _emscripten_set_keyup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\n\n  var _emscripten_set_main_loop = (func, fps, simulateInfiniteLoop) => {\n      var iterFunc = (() => dynCall_v(func));\n      setMainLoop(iterFunc, fps, simulateInfiniteLoop);\n    };\n\n  \n  var fillMouseEventData = (eventStruct, e, target) => {\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\n      var idx = ((eventStruct)>>2);\n      HEAP32[idx + 2] = e.screenX;\n      HEAP32[idx + 3] = e.screenY;\n      HEAP32[idx + 4] = e.clientX;\n      HEAP32[idx + 5] = e.clientY;\n      HEAP8[eventStruct + 24] = e.ctrlKey;\n      HEAP8[eventStruct + 25] = e.shiftKey;\n      HEAP8[eventStruct + 26] = e.altKey;\n      HEAP8[eventStruct + 27] = e.metaKey;\n      HEAP16[idx*2 + 14] = e.button;\n      HEAP16[idx*2 + 15] = e.buttons;\n  \n      HEAP32[idx + 8] = e[\"movementX\"]\n        ;\n  \n      HEAP32[idx + 9] = e[\"movementY\"]\n        ;\n  \n      // Note: rect contains doubles (truncated to placate SAFE_HEAP, which is the same behaviour when writing to HEAP32 anyway)\n      var rect = getBoundingClientRect(target);\n      HEAP32[idx + 10] = e.clientX - (rect.left | 0);\n      HEAP32[idx + 11] = e.clientY - (rect.top  | 0);\n    };\n  \n  \n  var registerMouseEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.mouseEvent ||= _malloc(64);\n      target = findEventTarget(target);\n  \n      var mouseEventHandlerFunc = (e = event) => {\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: mouseEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_mousedown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\n\n  var _emscripten_set_mouseenter_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\n\n  var _emscripten_set_mouseleave_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\n\n  var _emscripten_set_mousemove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\n\n  var _emscripten_set_mouseup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\n\n  \n  \n  var fillPointerlockChangeEventData = (eventStruct) => {\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\n      var isPointerlocked = !!pointerLockElement;\n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP8[eventStruct] = isPointerlocked;\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\n      var id = pointerLockElement?.id || '';\n      stringToUTF8(nodeName, eventStruct + 1, 128);\n      stringToUTF8(id, eventStruct + 129, 128);\n    };\n  \n  var registerPointerlockChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.pointerlockChangeEvent ||= _malloc(257);\n  \n      var pointerlockChangeEventHandlerFunc = (e = event) => {\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: pointerlockChangeEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  /** @suppress {missingProperties} */\n  var _emscripten_set_pointerlockchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\n        return -1;\n      }\n  \n      target = findEventTarget(target);\n      if (!target) return -4;\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\n      return registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\n    };\n\n  \n  \n  var registerUiEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.uiEvent ||= _malloc(36);\n  \n      target = findEventTarget(target);\n  \n      var uiEventHandlerFunc = (e = event) => {\n        if (e.target != target) {\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\n          // causing a new scroll, etc..\n          return;\n        }\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\n        if (!b) {\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\n          return;\n        }\n        var uiEvent = JSEvents.uiEvent;\n        HEAP32[((uiEvent)>>2)] = 0; // always zero for resize and scroll\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset | 0; // scroll offsets are float\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset | 0;\n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, uiEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: uiEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_resize_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\n\n  \n  \n  \n  var registerTouchEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.touchEvent ||= _malloc(1552);\n  \n      target = findEventTarget(target);\n  \n      var touchEventHandlerFunc = (e) => {\n        var t, touches = {}, et = e.touches;\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches,\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\n  \n        for (let t of et) {\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\n          // changed/target states we may have set from previous frame.\n          t.isChanged = t.onTarget = 0;\n          touches[t.identifier] = t;\n        }\n        // Mark which touches are part of the changedTouches list.\n        for (let t of e.changedTouches) {\n          t.isChanged = 1;\n          touches[t.identifier] = t;\n        }\n        // Mark which touches are part of the targetTouches list.\n        for (let t of e.targetTouches) {\n          touches[t.identifier].onTarget = 1;\n        }\n  \n        var touchEvent = JSEvents.touchEvent;\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\n        HEAP8[touchEvent + 12] = e.ctrlKey;\n        HEAP8[touchEvent + 13] = e.shiftKey;\n        HEAP8[touchEvent + 14] = e.altKey;\n        HEAP8[touchEvent + 15] = e.metaKey;\n        var idx = touchEvent + 16;\n        var targetRect = getBoundingClientRect(target);\n        var numTouches = 0;\n        for (let t of Object.values(touches)) {\n          var idx32 = ((idx)>>2); // Pre-shift the ptr to index to HEAP32 to save code size\n          HEAP32[idx32 + 0] = t.identifier;\n          HEAP32[idx32 + 1] = t.screenX;\n          HEAP32[idx32 + 2] = t.screenY;\n          HEAP32[idx32 + 3] = t.clientX;\n          HEAP32[idx32 + 4] = t.clientY;\n          HEAP32[idx32 + 5] = t.pageX;\n          HEAP32[idx32 + 6] = t.pageY;\n          HEAP8[idx + 28] = t.isChanged;\n          HEAP8[idx + 29] = t.onTarget;\n          HEAP32[idx32 + 8] = t.clientX - (targetRect.left | 0);\n          HEAP32[idx32 + 9] = t.clientY - (targetRect.top  | 0);\n  \n          idx += 48;\n  \n          if (++numTouches > 31) {\n            break;\n          }\n        }\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, touchEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: touchEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_touchcancel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\n\n  var _emscripten_set_touchend_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\n\n  var _emscripten_set_touchmove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\n\n  var _emscripten_set_touchstart_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\n\n  \n  var fillVisibilityChangeEventData = (eventStruct) => {\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\n  \n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP8[eventStruct] = document.hidden;\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\n    };\n  \n  var registerVisibilityChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.visibilityChangeEvent ||= _malloc(8);\n  \n      var visibilityChangeEventHandlerFunc = (e = event) => {\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\n  \n        fillVisibilityChangeEventData(visibilityChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: visibilityChangeEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_visibilitychange_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      return registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\n    };\n\n  \n  \n  var registerWheelEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      JSEvents.wheelEvent ||= _malloc(96);\n  \n      // The DOM Level 3 events spec event 'wheel'\n      var wheelHandlerFunc = (e = event) => {\n        var wheelEvent = JSEvents.wheelEvent;\n        fillMouseEventData(wheelEvent, e, target);\n        HEAPF64[(((wheelEvent)+(64))>>3)] = e[\"deltaX\"];\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaY\"];\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaZ\"];\n        HEAP32[(((wheelEvent)+(88))>>2)] = e[\"deltaMode\"];\n        if (((a1, a2, a3) => dynCall_iiii(callbackfunc, a1, a2, a3))(eventTypeId, wheelEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: wheelHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_wheel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n      if (typeof target.onwheel != 'undefined') {\n        return registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\n      } else {\n        return -1;\n      }\n    };\n\n  \n  var _emscripten_set_window_title = (title) => document.title = UTF8ToString(title);\n\n  var _emscripten_sleep = (ms) => {\n      // emscripten_sleep() does not return a value, but we still need a |return|\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\n      // returns a Promise instead of nothing, and that Promise is what tells the\n      // wasm VM to pause the stack.\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\n    };\n  _emscripten_sleep.isAsync = true;\n\n  var ENV = {\n  };\n  \n  var getExecutableName = () => thisProgram || './this.program';\n  var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        // Default values.\n        // Browser language detection #8751\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\n        var env = {\n          'USER': 'web_user',\n          'LOGNAME': 'web_user',\n          'PATH': '/',\n          'PWD': '/',\n          'HOME': '/home/web_user',\n          'LANG': lang,\n          '_': getExecutableName()\n        };\n        // Apply the user-provided values, if any.\n        for (var x in ENV) {\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\n          // explicitly set to be so. We allow user code to do that to\n          // force variables with default values to remain unset.\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n  \n  var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      var envp = 0;\n      for (var string of getEnvStrings()) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(((__environ)+(envp))>>2)] = ptr;\n        bufSize += stringToUTF8(string, ptr, Infinity) + 1;\n        envp += 4;\n      }\n      return 0;\n    };\n\n  \n  var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[((penviron_count)>>2)] = strings.length;\n      var bufSize = 0;\n      for (var string of strings) {\n        bufSize += lengthBytesUTF8(string) + 1;\n      }\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\n      return 0;\n    };\n\n\n  function _fd_close(fd) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  /** @param {number=} offset */\n  var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break; // nothing more to read\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_read(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doReadv(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  \n  function _fd_seek(fd, offset, whence, newOffset) {\n    offset = bigintToI53Checked(offset);\n  \n  \n  try {\n  \n      if (isNaN(offset)) return 61;\n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.llseek(stream, offset, whence);\n      HEAP64[((newOffset)>>3)] = BigInt(stream.position);\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  ;\n  }\n\n  /** @param {number=} offset */\n  var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) {\n          // No more space to write.\n          break;\n        }\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_write(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doWritev(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  function _random_get(buffer, size) {\n  try {\n  \n      randomFill(HEAPU8.subarray(buffer, buffer + size));\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n\n\n\n  var listenOnce = (object, event, func) =>\n      object.addEventListener(event, func, { 'once': true });\n  /** @param {Object=} elements */\n  var autoResumeAudioContext = (ctx, elements) => {\n      if (!elements) {\n        elements = [document, document.getElementById('canvas')];\n      }\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\n        elements.forEach((element) => {\n          if (element) {\n            listenOnce(element, event, () => {\n              if (ctx.state === 'suspended') ctx.resume();\n            });\n          }\n        });\n      });\n    };\n\n  var dynCallLegacy = (sig, ptr, args) => {\n      sig = sig.replace(/p/g, 'i')\n      var f = Module['dynCall_' + sig];\n      return f(ptr, ...args);\n    };\n  var dynCall = (sig, ptr, args = [], promising = false) => {\n      var rtn = dynCallLegacy(sig, ptr, args);\n      return rtn;\n    };\n\n\n\n\n  var ptrToString = (ptr) => {\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      ptr >>>= 0;\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    };\n\n  var wasmTableMirror = [];\n  \n  /** @type {WebAssembly.Table} */\n  var wasmTable;\n  var getWasmTableEntry = (funcPtr) => {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        /** @suppress {checkTypes} */\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    };\n\n\n  var runAndAbortIfError = (func) => {\n      try {\n        return func();\n      } catch (e) {\n        abort(e);\n      }\n    };\n  \n  \n  var sigToWasmTypes = (sig) => {\n      var typeNames = {\n        'i': 'i32',\n        'j': 'i64',\n        'f': 'f32',\n        'd': 'f64',\n        'e': 'externref',\n        'p': 'i32',\n      };\n      var type = {\n        parameters: [],\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\n      };\n      for (var i = 1; i < sig.length; ++i) {\n        type.parameters.push(typeNames[sig[i]]);\n      }\n      return type;\n    };\n  \n  var runtimeKeepalivePush = () => {\n      runtimeKeepaliveCounter += 1;\n    };\n  \n  var runtimeKeepalivePop = () => {\n      runtimeKeepaliveCounter -= 1;\n    };\n  \n  \n  var Asyncify = {\n  instrumentWasmImports(imports) {\n        var importPattern = /^(invoke_.*|__asyncjs__.*)$/;\n  \n        for (let [x, original] of Object.entries(imports)) {\n          if (typeof original == 'function') {\n            let isAsyncifyImport = original.isAsync || importPattern.test(x);\n          }\n        }\n      },\n  instrumentWasmExports(exports) {\n        var ret = {};\n        for (let [x, original] of Object.entries(exports)) {\n          if (typeof original == 'function') {\n            ret[x] = (...args) => {\n              Asyncify.exportCallStack.push(x);\n              try {\n                return original(...args);\n              } finally {\n                if (!ABORT) {\n                  var y = Asyncify.exportCallStack.pop();\n                  Asyncify.maybeStopUnwind();\n                }\n              }\n            };\n          } else {\n            ret[x] = original;\n          }\n        }\n        return ret;\n      },\n  State:{\n  Normal:0,\n  Unwinding:1,\n  Rewinding:2,\n  Disabled:3,\n  },\n  state:0,\n  StackSize:4096,\n  currData:null,\n  handleSleepReturnValue:0,\n  exportCallStack:[],\n  callStackNameToId:{\n  },\n  callStackIdToName:{\n  },\n  callStackId:0,\n  asyncPromiseHandlers:null,\n  sleepCallbacks:[],\n  getCallStackId(funcName) {\n        var id = Asyncify.callStackNameToId[funcName];\n        if (id === undefined) {\n          id = Asyncify.callStackId++;\n          Asyncify.callStackNameToId[funcName] = id;\n          Asyncify.callStackIdToName[id] = funcName;\n        }\n        return id;\n      },\n  maybeStopUnwind() {\n        if (Asyncify.currData &&\n            Asyncify.state === Asyncify.State.Unwinding &&\n            Asyncify.exportCallStack.length === 0) {\n          // We just finished unwinding.\n          // Be sure to set the state before calling any other functions to avoid\n          // possible infinite recursion here (For example in debug pthread builds\n          // the dbg() function itself can call back into WebAssembly to get the\n          // current pthread_self() pointer).\n          Asyncify.state = Asyncify.State.Normal;\n          \n          // Keep the runtime alive so that a re-wind can be done later.\n          runAndAbortIfError(_asyncify_stop_unwind);\n          if (typeof Fibers != 'undefined') {\n            Fibers.trampoline();\n          }\n        }\n      },\n  whenDone() {\n        return new Promise((resolve, reject) => {\n          Asyncify.asyncPromiseHandlers = { resolve, reject };\n        });\n      },\n  allocateData() {\n        // An asyncify data structure has three fields:\n        //  0  current stack pos\n        //  4  max stack pos\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\n        //\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\n        // We also embed a stack in the same memory region here, right next to the structure.\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\n        var ptr = _malloc(12 + Asyncify.StackSize);\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\n        Asyncify.setDataRewindFunc(ptr);\n        return ptr;\n      },\n  setDataHeader(ptr, stack, stackSize) {\n        HEAPU32[((ptr)>>2)] = stack;\n        HEAPU32[(((ptr)+(4))>>2)] = stack + stackSize;\n      },\n  setDataRewindFunc(ptr) {\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\n      },\n  getDataRewindFuncName(ptr) {\n        var id = HEAP32[(((ptr)+(8))>>2)];\n        var name = Asyncify.callStackIdToName[id];\n        return name;\n      },\n  getDataRewindFunc(name) {\n        var func = wasmExports[name];\n        return func;\n      },\n  doRewind(ptr) {\n        var name = Asyncify.getDataRewindFuncName(ptr);\n        var func = Asyncify.getDataRewindFunc(name);\n        // Once we have rewound and the stack we no longer need to artificially\n        // keep the runtime alive.\n        \n        return func();\n      },\n  handleSleep(startAsync) {\n        if (ABORT) return;\n        if (Asyncify.state === Asyncify.State.Normal) {\n          // Prepare to sleep. Call startAsync, and see what happens:\n          // if the code decided to call our callback synchronously,\n          // then no async operation was in fact begun, and we don't\n          // need to do anything.\n          var reachedCallback = false;\n          var reachedAfterCallback = false;\n          startAsync((handleSleepReturnValue = 0) => {\n            if (ABORT) return;\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\n            reachedCallback = true;\n            if (!reachedAfterCallback) {\n              // We are happening synchronously, so no need for async.\n              return;\n            }\n            Asyncify.state = Asyncify.State.Rewinding;\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\n            if (typeof MainLoop != 'undefined' && MainLoop.func) {\n              MainLoop.resume();\n            }\n            var asyncWasmReturnValue, isError = false;\n            try {\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\n            } catch (err) {\n              asyncWasmReturnValue = err;\n              isError = true;\n            }\n            // Track whether the return value was handled by any promise handlers.\n            var handled = false;\n            if (!Asyncify.currData) {\n              // All asynchronous execution has finished.\n              // `asyncWasmReturnValue` now contains the final\n              // return value of the exported async WASM function.\n              //\n              // Note: `asyncWasmReturnValue` is distinct from\n              // `Asyncify.handleSleepReturnValue`.\n              // `Asyncify.handleSleepReturnValue` contains the return\n              // value of the last C function to have executed\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\n              // contains the return value of the exported WASM function\n              // that may have called C functions that\n              // call `Asyncify.handleSleep()`.\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\n              if (asyncPromiseHandlers) {\n                Asyncify.asyncPromiseHandlers = null;\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\n                handled = true;\n              }\n            }\n            if (isError && !handled) {\n              // If there was an error and it was not handled by now, we have no choice but to\n              // rethrow that error into the global scope where it can be caught only by\n              // `onerror` or `onunhandledpromiserejection`.\n              throw asyncWasmReturnValue;\n            }\n          });\n          reachedAfterCallback = true;\n          if (!reachedCallback) {\n            // A true async operation was begun; start a sleep.\n            Asyncify.state = Asyncify.State.Unwinding;\n            // TODO: reuse, don't alloc/free every sleep\n            Asyncify.currData = Asyncify.allocateData();\n            if (typeof MainLoop != 'undefined' && MainLoop.func) {\n              MainLoop.pause();\n            }\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\n          }\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\n          // Stop a resume.\n          Asyncify.state = Asyncify.State.Normal;\n          runAndAbortIfError(_asyncify_stop_rewind);\n          _free(Asyncify.currData);\n          Asyncify.currData = null;\n          // Call all sleep callbacks now that the sleep-resume is all done.\n          Asyncify.sleepCallbacks.forEach(callUserCallback);\n        } else {\n          abort(`invalid state: ${Asyncify.state}`);\n        }\n        return Asyncify.handleSleepReturnValue;\n      },\n  handleAsync(startAsync) {\n        return Asyncify.handleSleep((wakeUp) => {\n          // TODO: add error handling as a second param when handleSleep implements it.\n          startAsync().then(wakeUp);\n        });\n      },\n  };\n\n\n  var FS_createPath = (...args) => FS.createPath(...args);\n\n\n\n  var FS_unlink = (...args) => FS.unlink(...args);\n\n  var FS_createLazyFile = (...args) => FS.createLazyFile(...args);\n\n  var FS_createDevice = (...args) => FS.createDevice(...args);\n\n  FS.createPreloadedFile = FS_createPreloadedFile;\n  FS.staticInit();;\n\n      // This error may happen quite a bit. To avoid overhead we reuse it (and\n      // suffer a lack of stack info).\n      MEMFS.doesNotExistError = new FS.ErrnoError(44);\n      /** @suppress {checkTypes} */\n      MEMFS.doesNotExistError.stack = '<generic error, no stack>';\n      ;\n\n      // exports\n      Module['requestFullscreen'] = Browser.requestFullscreen;\n      Module['setCanvasSize'] = Browser.setCanvasSize;\n      Module['getUserMedia'] = Browser.getUserMedia;\n      Module['createContext'] = Browser.createContext;\n    ;\n\n      Module['requestAnimationFrame'] = MainLoop.requestAnimationFrame;\n      Module['pauseMainLoop'] = MainLoop.pause;\n      Module['resumeMainLoop'] = MainLoop.resume;\n      MainLoop.init();;\nfor (let i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\n// End JS library code\n\n// include: postlibrary.js\n// This file is included after the automatically-generated JS library code\n// but before the wasm module is created.\n\n{\n\n  // Begin ATMODULES hooks\n  if (Module['noExitRuntime']) noExitRuntime = Module['noExitRuntime'];\nif (Module['preloadPlugins']) preloadPlugins = Module['preloadPlugins'];\nif (Module['print']) out = Module['print'];\nif (Module['printErr']) err = Module['printErr'];\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n  // End ATMODULES hooks\n\n  if (Module['arguments']) arguments_ = Module['arguments'];\n  if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n}\n\n// Begin runtime exports\n  Module['addRunDependency'] = addRunDependency;\n  Module['removeRunDependency'] = removeRunDependency;\n  Module['FS_createPreloadedFile'] = FS_createPreloadedFile;\n  Module['FS_unlink'] = FS_unlink;\n  Module['FS_createPath'] = FS_createPath;\n  Module['FS_createDevice'] = FS_createDevice;\n  Module['FS_createDataFile'] = FS_createDataFile;\n  Module['FS_createLazyFile'] = FS_createLazyFile;\n  Module['LZ4'] = LZ4;\n  // End runtime exports\n  // Begin JS library exports\n  // End JS library exports\n\n// end include: postlibrary.js\n\nvar ASM_CONSTS = {\n  561072: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \n 561128: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line : $ { args }`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs( true, function(err) { if (err) { console.error(`Error mounting home dir $ { err }`); return; } Module._WebMain($0, $1); }); },  \n 561723: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \n 561779: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs( $0, function(err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \n 561928: ($0, $1, $2, $3, $4) => { if (typeof window === 'undefined' || (window.AudioContext || window.webkitAudioContext) === undefined) { return 0; } if (typeof(window.miniaudio) === 'undefined') { window.miniaudio = { referenceCount: 0 }; window.miniaudio.device_type = {}; window.miniaudio.device_type.playback = $0; window.miniaudio.device_type.capture = $1; window.miniaudio.device_type.duplex = $2; window.miniaudio.device_state = {}; window.miniaudio.device_state.stopped = $3; window.miniaudio.device_state.started = $4; let miniaudio = window.miniaudio; miniaudio.devices = []; miniaudio.track_device = function(device) { for (var iDevice = 0; iDevice < miniaudio.devices.length; ++iDevice) { if (miniaudio.devices[iDevice] == null) { miniaudio.devices[iDevice] = device; return iDevice; } } miniaudio.devices.push(device); return miniaudio.devices.length - 1; }; miniaudio.untrack_device_by_index = function(deviceIndex) { miniaudio.devices[deviceIndex] = null; while (miniaudio.devices.length > 0) { if (miniaudio.devices[miniaudio.devices.length-1] == null) { miniaudio.devices.pop(); } else { break; } } }; miniaudio.untrack_device = function(device) { for (var iDevice = 0; iDevice < miniaudio.devices.length; ++iDevice) { if (miniaudio.devices[iDevice] == device) { return miniaudio.untrack_device_by_index(iDevice); } } }; miniaudio.get_device_by_index = function(deviceIndex) { return miniaudio.devices[deviceIndex]; }; miniaudio.unlock_event_types = (function(){ return ['touchend', 'click']; })(); miniaudio.unlock = function() { for(var i = 0; i < miniaudio.devices.length; ++i) { var device = miniaudio.devices[i]; if (device != null && device.webaudio != null && device.state === miniaudio.device_state.started) { device.webaudio.resume().then(() => { _ma_device__on_notification_unlocked(device.pDevice); }, (error) => {console.error(\"Failed to resume audiocontext\", error); }); } } miniaudio.unlock_event_types.map(function(event_type) { document.removeEventListener(event_type, miniaudio.unlock, true); }); }; miniaudio.unlock_event_types.map(function(event_type) { document.addEventListener(event_type, miniaudio.unlock, true); }); } window.miniaudio.referenceCount += 1; return 1; },  \n 564106: () => { if (typeof(window.miniaudio) !== 'undefined') { miniaudio.unlock_event_types.map(function(event_type) { document.removeEventListener(event_type, miniaudio.unlock, true); }); window.miniaudio.referenceCount -= 1; if (window.miniaudio.referenceCount === 0) { delete window.miniaudio; } } },  \n 564396: () => { return (navigator.mediaDevices !== undefined && navigator.mediaDevices.getUserMedia !== undefined); },  \n 564500: () => { try { var temp = new (window.AudioContext || window.webkitAudioContext)(); var sampleRate = temp.sampleRate; temp.close(); return sampleRate; } catch(e) { return 0; } },  \n 564671: ($0, $1, $2, $3, $4, $5) => { var deviceType = $0; var channels = $1; var sampleRate = $2; var bufferSize = $3; var pIntermediaryBuffer = $4; var pDevice = $5; if (typeof(window.miniaudio) === 'undefined') { return -1; } var device = {}; var audioContextOptions = {}; if (deviceType == window.miniaudio.device_type.playback && sampleRate != 0) { audioContextOptions.sampleRate = sampleRate; } device.webaudio = new (window.AudioContext || window.webkitAudioContext)(audioContextOptions); device.webaudio.suspend(); device.state = window.miniaudio.device_state.stopped; var channelCountIn = 0; var channelCountOut = channels; if (deviceType != window.miniaudio.device_type.playback) { channelCountIn = channels; } device.scriptNode = device.webaudio.createScriptProcessor(bufferSize, channelCountIn, channelCountOut); device.scriptNode.onaudioprocess = function(e) { if (device.intermediaryBufferView == null || device.intermediaryBufferView.length == 0) { device.intermediaryBufferView = new Float32Array(HEAPF32.buffer, pIntermediaryBuffer, bufferSize * channels); } if (deviceType == window.miniaudio.device_type.capture || deviceType == window.miniaudio.device_type.duplex) { for (var iChannel = 0; iChannel < channels; iChannel += 1) { var inputBuffer = e.inputBuffer.getChannelData(iChannel); var intermediaryBuffer = device.intermediaryBufferView; for (var iFrame = 0; iFrame < bufferSize; iFrame += 1) { intermediaryBuffer[iFrame*channels + iChannel] = inputBuffer[iFrame]; } } _ma_device_process_pcm_frames_capture__webaudio(pDevice, bufferSize, pIntermediaryBuffer); } if (deviceType == window.miniaudio.device_type.playback || deviceType == window.miniaudio.device_type.duplex) { _ma_device_process_pcm_frames_playback__webaudio(pDevice, bufferSize, pIntermediaryBuffer); for (var iChannel = 0; iChannel < e.outputBuffer.numberOfChannels; ++iChannel) { var outputBuffer = e.outputBuffer.getChannelData(iChannel); var intermediaryBuffer = device.intermediaryBufferView; for (var iFrame = 0; iFrame < bufferSize; iFrame += 1) { outputBuffer[iFrame] = intermediaryBuffer[iFrame*channels + iChannel]; } } } else { for (var iChannel = 0; iChannel < e.outputBuffer.numberOfChannels; ++iChannel) { e.outputBuffer.getChannelData(iChannel).fill(0.0); } } }; if (deviceType == window.miniaudio.device_type.capture || deviceType == window.miniaudio.device_type.duplex) { navigator.mediaDevices.getUserMedia({audio:true, video:false}) .then(function(stream) { device.streamNode = device.webaudio.createMediaStreamSource(stream); device.streamNode.connect(device.scriptNode); device.scriptNode.connect(device.webaudio.destination); }) .catch(function(error) { console.log(\"Failed to get user media: \" + error); }); } if (deviceType == window.miniaudio.device_type.playback) { device.scriptNode.connect(device.webaudio.destination); } device.pDevice = pDevice; return window.miniaudio.track_device(device); },  \n 567548: ($0) => { return window.miniaudio.get_device_by_index($0).webaudio.sampleRate; },  \n 567621: ($0) => { var device = window.miniaudio.get_device_by_index($0); if (device.scriptNode !== undefined) { device.scriptNode.onaudioprocess = function(e) {}; device.scriptNode.disconnect(); device.scriptNode = undefined; } if (device.streamNode !== undefined) { device.streamNode.disconnect(); device.streamNode = undefined; } device.webaudio.close(); device.webaudio = undefined; device.pDevice = undefined; },  \n 568021: ($0) => { window.miniaudio.untrack_device_by_index($0); },  \n 568071: ($0) => { var device = window.miniaudio.get_device_by_index($0); device.webaudio.resume(); device.state = window.miniaudio.device_state.started; },  \n 568210: ($0) => { var device = window.miniaudio.get_device_by_index($0); device.webaudio.suspend(); device.state = window.miniaudio.device_state.stopped; },  \n 568350: ($0) => { var str = UTF8ToString($0) + '\\n\\n' + 'Abort/Retry/Ignore/AlwaysIgnore? [ariA] :'; var reply = window.prompt(str, \"i\"); if (reply === null) { reply = \"i\"; } return allocate(intArrayFromString(reply), 'i8', ALLOC_NORMAL); },  \n 568575: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \n 568722: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \n 568956: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { if ((typeof navigator.userActivation) === 'undefined') { autoResumeAudioContext(SDL2.audioContext); } } } return SDL2.audioContext === undefined ? -1 : 0; },  \n 569508: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \n 569576: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearInterval(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; SDL2.capture.silenceBuffer = undefined } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setInterval(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \n 571269: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } if (SDL2.audio.silenceTimer !== undefined) { clearInterval(SDL2.audio.silenceTimer); SDL2.audio.silenceTimer = undefined; SDL2.audio.silenceBuffer = undefined; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); if (SDL2.audioContext.state === 'suspended') { SDL2.audio.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.audio.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { if ((typeof navigator.userActivation) !== 'undefined') { if (navigator.userActivation.hasBeenActive) { SDL2.audioContext.resume(); } } SDL2.audio.currentOutputBuffer = SDL2.audio.silenceBuffer; dynCall('vi', $2, [$3]); SDL2.audio.currentOutputBuffer = undefined; }; SDL2.audio.silenceTimer = setInterval(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); } },  \n 572444: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \n 573049: ($0, $1) => { var SDL2 = Module['SDL2']; var buf = $0 >>> 2; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[buf + (j*numChannels + c)]; } } },  \n 573538: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearInterval(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); } if (SDL2.audio.silenceTimer !== undefined) { clearInterval(SDL2.audio.silenceTimer); } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \n 574544: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels / 4; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \n 576012: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels / 4; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \n 577000: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \n 577083: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \n 577152: () => { return window.innerWidth; },  \n 577182: () => { return window.innerHeight; },  \n 577213: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\n};\nfunction slog_js_log(level,c_str) { const str = UTF8ToString(c_str); switch (level) { case 0: console.error(str); break; case 1: console.error(str); break; case 2: console.warn(str); break; default: console.info(str); break; } }\nvar wasmImports = {\n  /** @export */\n  __syscall_dup3: ___syscall_dup3,\n  /** @export */\n  __syscall_faccessat: ___syscall_faccessat,\n  /** @export */\n  __syscall_fcntl64: ___syscall_fcntl64,\n  /** @export */\n  __syscall_fstat64: ___syscall_fstat64,\n  /** @export */\n  __syscall_getdents64: ___syscall_getdents64,\n  /** @export */\n  __syscall_ioctl: ___syscall_ioctl,\n  /** @export */\n  __syscall_lstat64: ___syscall_lstat64,\n  /** @export */\n  __syscall_mkdirat: ___syscall_mkdirat,\n  /** @export */\n  __syscall_newfstatat: ___syscall_newfstatat,\n  /** @export */\n  __syscall_openat: ___syscall_openat,\n  /** @export */\n  __syscall_readlinkat: ___syscall_readlinkat,\n  /** @export */\n  __syscall_renameat: ___syscall_renameat,\n  /** @export */\n  __syscall_rmdir: ___syscall_rmdir,\n  /** @export */\n  __syscall_stat64: ___syscall_stat64,\n  /** @export */\n  __syscall_unlinkat: ___syscall_unlinkat,\n  /** @export */\n  _abort_js: __abort_js,\n  /** @export */\n  _emscripten_system: __emscripten_system,\n  /** @export */\n  _emscripten_throw_longjmp: __emscripten_throw_longjmp,\n  /** @export */\n  _gmtime_js: __gmtime_js,\n  /** @export */\n  _localtime_js: __localtime_js,\n  /** @export */\n  _mktime_js: __mktime_js,\n  /** @export */\n  _tzset_js: __tzset_js,\n  /** @export */\n  clock_time_get: _clock_time_get,\n  /** @export */\n  eglBindAPI: _eglBindAPI,\n  /** @export */\n  eglChooseConfig: _eglChooseConfig,\n  /** @export */\n  eglCreateContext: _eglCreateContext,\n  /** @export */\n  eglCreateWindowSurface: _eglCreateWindowSurface,\n  /** @export */\n  eglDestroyContext: _eglDestroyContext,\n  /** @export */\n  eglDestroySurface: _eglDestroySurface,\n  /** @export */\n  eglGetConfigAttrib: _eglGetConfigAttrib,\n  /** @export */\n  eglGetDisplay: _eglGetDisplay,\n  /** @export */\n  eglGetError: _eglGetError,\n  /** @export */\n  eglInitialize: _eglInitialize,\n  /** @export */\n  eglMakeCurrent: _eglMakeCurrent,\n  /** @export */\n  eglQueryString: _eglQueryString,\n  /** @export */\n  eglSwapBuffers: _eglSwapBuffers,\n  /** @export */\n  eglSwapInterval: _eglSwapInterval,\n  /** @export */\n  eglTerminate: _eglTerminate,\n  /** @export */\n  eglWaitGL: _eglWaitGL,\n  /** @export */\n  eglWaitNative: _eglWaitNative,\n  /** @export */\n  emscripten_asm_const_int: _emscripten_asm_const_int,\n  /** @export */\n  emscripten_asm_const_int_sync_on_main_thread: _emscripten_asm_const_int_sync_on_main_thread,\n  /** @export */\n  emscripten_asm_const_ptr_sync_on_main_thread: _emscripten_asm_const_ptr_sync_on_main_thread,\n  /** @export */\n  emscripten_date_now: _emscripten_date_now,\n  /** @export */\n  emscripten_enter_soft_fullscreen: _emscripten_enter_soft_fullscreen,\n  /** @export */\n  emscripten_err: _emscripten_err,\n  /** @export */\n  emscripten_exit_fullscreen: _emscripten_exit_fullscreen,\n  /** @export */\n  emscripten_exit_pointerlock: _emscripten_exit_pointerlock,\n  /** @export */\n  emscripten_exit_soft_fullscreen: _emscripten_exit_soft_fullscreen,\n  /** @export */\n  emscripten_get_device_pixel_ratio: _emscripten_get_device_pixel_ratio,\n  /** @export */\n  emscripten_get_element_css_size: _emscripten_get_element_css_size,\n  /** @export */\n  emscripten_get_gamepad_status: _emscripten_get_gamepad_status,\n  /** @export */\n  emscripten_get_now: _emscripten_get_now,\n  /** @export */\n  emscripten_get_num_gamepads: _emscripten_get_num_gamepads,\n  /** @export */\n  emscripten_get_screen_size: _emscripten_get_screen_size,\n  /** @export */\n  emscripten_glActiveTexture: _emscripten_glActiveTexture,\n  /** @export */\n  emscripten_glAttachShader: _emscripten_glAttachShader,\n  /** @export */\n  emscripten_glBeginQuery: _emscripten_glBeginQuery,\n  /** @export */\n  emscripten_glBeginQueryEXT: _emscripten_glBeginQueryEXT,\n  /** @export */\n  emscripten_glBeginTransformFeedback: _emscripten_glBeginTransformFeedback,\n  /** @export */\n  emscripten_glBindAttribLocation: _emscripten_glBindAttribLocation,\n  /** @export */\n  emscripten_glBindBuffer: _emscripten_glBindBuffer,\n  /** @export */\n  emscripten_glBindBufferBase: _emscripten_glBindBufferBase,\n  /** @export */\n  emscripten_glBindBufferRange: _emscripten_glBindBufferRange,\n  /** @export */\n  emscripten_glBindFramebuffer: _emscripten_glBindFramebuffer,\n  /** @export */\n  emscripten_glBindRenderbuffer: _emscripten_glBindRenderbuffer,\n  /** @export */\n  emscripten_glBindSampler: _emscripten_glBindSampler,\n  /** @export */\n  emscripten_glBindTexture: _emscripten_glBindTexture,\n  /** @export */\n  emscripten_glBindTransformFeedback: _emscripten_glBindTransformFeedback,\n  /** @export */\n  emscripten_glBindVertexArray: _emscripten_glBindVertexArray,\n  /** @export */\n  emscripten_glBindVertexArrayOES: _emscripten_glBindVertexArrayOES,\n  /** @export */\n  emscripten_glBlendColor: _emscripten_glBlendColor,\n  /** @export */\n  emscripten_glBlendEquation: _emscripten_glBlendEquation,\n  /** @export */\n  emscripten_glBlendEquationSeparate: _emscripten_glBlendEquationSeparate,\n  /** @export */\n  emscripten_glBlendFunc: _emscripten_glBlendFunc,\n  /** @export */\n  emscripten_glBlendFuncSeparate: _emscripten_glBlendFuncSeparate,\n  /** @export */\n  emscripten_glBlitFramebuffer: _emscripten_glBlitFramebuffer,\n  /** @export */\n  emscripten_glBufferData: _emscripten_glBufferData,\n  /** @export */\n  emscripten_glBufferSubData: _emscripten_glBufferSubData,\n  /** @export */\n  emscripten_glCheckFramebufferStatus: _emscripten_glCheckFramebufferStatus,\n  /** @export */\n  emscripten_glClear: _emscripten_glClear,\n  /** @export */\n  emscripten_glClearBufferfi: _emscripten_glClearBufferfi,\n  /** @export */\n  emscripten_glClearBufferfv: _emscripten_glClearBufferfv,\n  /** @export */\n  emscripten_glClearBufferiv: _emscripten_glClearBufferiv,\n  /** @export */\n  emscripten_glClearBufferuiv: _emscripten_glClearBufferuiv,\n  /** @export */\n  emscripten_glClearColor: _emscripten_glClearColor,\n  /** @export */\n  emscripten_glClearDepthf: _emscripten_glClearDepthf,\n  /** @export */\n  emscripten_glClearStencil: _emscripten_glClearStencil,\n  /** @export */\n  emscripten_glClientWaitSync: _emscripten_glClientWaitSync,\n  /** @export */\n  emscripten_glClipControlEXT: _emscripten_glClipControlEXT,\n  /** @export */\n  emscripten_glColorMask: _emscripten_glColorMask,\n  /** @export */\n  emscripten_glCompileShader: _emscripten_glCompileShader,\n  /** @export */\n  emscripten_glCompressedTexImage2D: _emscripten_glCompressedTexImage2D,\n  /** @export */\n  emscripten_glCompressedTexImage3D: _emscripten_glCompressedTexImage3D,\n  /** @export */\n  emscripten_glCompressedTexSubImage2D: _emscripten_glCompressedTexSubImage2D,\n  /** @export */\n  emscripten_glCompressedTexSubImage3D: _emscripten_glCompressedTexSubImage3D,\n  /** @export */\n  emscripten_glCopyBufferSubData: _emscripten_glCopyBufferSubData,\n  /** @export */\n  emscripten_glCopyTexImage2D: _emscripten_glCopyTexImage2D,\n  /** @export */\n  emscripten_glCopyTexSubImage2D: _emscripten_glCopyTexSubImage2D,\n  /** @export */\n  emscripten_glCopyTexSubImage3D: _emscripten_glCopyTexSubImage3D,\n  /** @export */\n  emscripten_glCreateProgram: _emscripten_glCreateProgram,\n  /** @export */\n  emscripten_glCreateShader: _emscripten_glCreateShader,\n  /** @export */\n  emscripten_glCullFace: _emscripten_glCullFace,\n  /** @export */\n  emscripten_glDeleteBuffers: _emscripten_glDeleteBuffers,\n  /** @export */\n  emscripten_glDeleteFramebuffers: _emscripten_glDeleteFramebuffers,\n  /** @export */\n  emscripten_glDeleteProgram: _emscripten_glDeleteProgram,\n  /** @export */\n  emscripten_glDeleteQueries: _emscripten_glDeleteQueries,\n  /** @export */\n  emscripten_glDeleteQueriesEXT: _emscripten_glDeleteQueriesEXT,\n  /** @export */\n  emscripten_glDeleteRenderbuffers: _emscripten_glDeleteRenderbuffers,\n  /** @export */\n  emscripten_glDeleteSamplers: _emscripten_glDeleteSamplers,\n  /** @export */\n  emscripten_glDeleteShader: _emscripten_glDeleteShader,\n  /** @export */\n  emscripten_glDeleteSync: _emscripten_glDeleteSync,\n  /** @export */\n  emscripten_glDeleteTextures: _emscripten_glDeleteTextures,\n  /** @export */\n  emscripten_glDeleteTransformFeedbacks: _emscripten_glDeleteTransformFeedbacks,\n  /** @export */\n  emscripten_glDeleteVertexArrays: _emscripten_glDeleteVertexArrays,\n  /** @export */\n  emscripten_glDeleteVertexArraysOES: _emscripten_glDeleteVertexArraysOES,\n  /** @export */\n  emscripten_glDepthFunc: _emscripten_glDepthFunc,\n  /** @export */\n  emscripten_glDepthMask: _emscripten_glDepthMask,\n  /** @export */\n  emscripten_glDepthRangef: _emscripten_glDepthRangef,\n  /** @export */\n  emscripten_glDetachShader: _emscripten_glDetachShader,\n  /** @export */\n  emscripten_glDisable: _emscripten_glDisable,\n  /** @export */\n  emscripten_glDisableVertexAttribArray: _emscripten_glDisableVertexAttribArray,\n  /** @export */\n  emscripten_glDrawArrays: _emscripten_glDrawArrays,\n  /** @export */\n  emscripten_glDrawArraysInstanced: _emscripten_glDrawArraysInstanced,\n  /** @export */\n  emscripten_glDrawArraysInstancedANGLE: _emscripten_glDrawArraysInstancedANGLE,\n  /** @export */\n  emscripten_glDrawArraysInstancedARB: _emscripten_glDrawArraysInstancedARB,\n  /** @export */\n  emscripten_glDrawArraysInstancedEXT: _emscripten_glDrawArraysInstancedEXT,\n  /** @export */\n  emscripten_glDrawArraysInstancedNV: _emscripten_glDrawArraysInstancedNV,\n  /** @export */\n  emscripten_glDrawBuffers: _emscripten_glDrawBuffers,\n  /** @export */\n  emscripten_glDrawBuffersEXT: _emscripten_glDrawBuffersEXT,\n  /** @export */\n  emscripten_glDrawBuffersWEBGL: _emscripten_glDrawBuffersWEBGL,\n  /** @export */\n  emscripten_glDrawElements: _emscripten_glDrawElements,\n  /** @export */\n  emscripten_glDrawElementsInstanced: _emscripten_glDrawElementsInstanced,\n  /** @export */\n  emscripten_glDrawElementsInstancedANGLE: _emscripten_glDrawElementsInstancedANGLE,\n  /** @export */\n  emscripten_glDrawElementsInstancedARB: _emscripten_glDrawElementsInstancedARB,\n  /** @export */\n  emscripten_glDrawElementsInstancedEXT: _emscripten_glDrawElementsInstancedEXT,\n  /** @export */\n  emscripten_glDrawElementsInstancedNV: _emscripten_glDrawElementsInstancedNV,\n  /** @export */\n  emscripten_glDrawRangeElements: _emscripten_glDrawRangeElements,\n  /** @export */\n  emscripten_glEnable: _emscripten_glEnable,\n  /** @export */\n  emscripten_glEnableVertexAttribArray: _emscripten_glEnableVertexAttribArray,\n  /** @export */\n  emscripten_glEndQuery: _emscripten_glEndQuery,\n  /** @export */\n  emscripten_glEndQueryEXT: _emscripten_glEndQueryEXT,\n  /** @export */\n  emscripten_glEndTransformFeedback: _emscripten_glEndTransformFeedback,\n  /** @export */\n  emscripten_glFenceSync: _emscripten_glFenceSync,\n  /** @export */\n  emscripten_glFinish: _emscripten_glFinish,\n  /** @export */\n  emscripten_glFlush: _emscripten_glFlush,\n  /** @export */\n  emscripten_glFramebufferRenderbuffer: _emscripten_glFramebufferRenderbuffer,\n  /** @export */\n  emscripten_glFramebufferTexture2D: _emscripten_glFramebufferTexture2D,\n  /** @export */\n  emscripten_glFramebufferTextureLayer: _emscripten_glFramebufferTextureLayer,\n  /** @export */\n  emscripten_glFrontFace: _emscripten_glFrontFace,\n  /** @export */\n  emscripten_glGenBuffers: _emscripten_glGenBuffers,\n  /** @export */\n  emscripten_glGenFramebuffers: _emscripten_glGenFramebuffers,\n  /** @export */\n  emscripten_glGenQueries: _emscripten_glGenQueries,\n  /** @export */\n  emscripten_glGenQueriesEXT: _emscripten_glGenQueriesEXT,\n  /** @export */\n  emscripten_glGenRenderbuffers: _emscripten_glGenRenderbuffers,\n  /** @export */\n  emscripten_glGenSamplers: _emscripten_glGenSamplers,\n  /** @export */\n  emscripten_glGenTextures: _emscripten_glGenTextures,\n  /** @export */\n  emscripten_glGenTransformFeedbacks: _emscripten_glGenTransformFeedbacks,\n  /** @export */\n  emscripten_glGenVertexArrays: _emscripten_glGenVertexArrays,\n  /** @export */\n  emscripten_glGenVertexArraysOES: _emscripten_glGenVertexArraysOES,\n  /** @export */\n  emscripten_glGenerateMipmap: _emscripten_glGenerateMipmap,\n  /** @export */\n  emscripten_glGetActiveAttrib: _emscripten_glGetActiveAttrib,\n  /** @export */\n  emscripten_glGetActiveUniform: _emscripten_glGetActiveUniform,\n  /** @export */\n  emscripten_glGetActiveUniformBlockName: _emscripten_glGetActiveUniformBlockName,\n  /** @export */\n  emscripten_glGetActiveUniformBlockiv: _emscripten_glGetActiveUniformBlockiv,\n  /** @export */\n  emscripten_glGetActiveUniformsiv: _emscripten_glGetActiveUniformsiv,\n  /** @export */\n  emscripten_glGetAttachedShaders: _emscripten_glGetAttachedShaders,\n  /** @export */\n  emscripten_glGetAttribLocation: _emscripten_glGetAttribLocation,\n  /** @export */\n  emscripten_glGetBooleanv: _emscripten_glGetBooleanv,\n  /** @export */\n  emscripten_glGetBufferParameteri64v: _emscripten_glGetBufferParameteri64v,\n  /** @export */\n  emscripten_glGetBufferParameteriv: _emscripten_glGetBufferParameteriv,\n  /** @export */\n  emscripten_glGetError: _emscripten_glGetError,\n  /** @export */\n  emscripten_glGetFloatv: _emscripten_glGetFloatv,\n  /** @export */\n  emscripten_glGetFragDataLocation: _emscripten_glGetFragDataLocation,\n  /** @export */\n  emscripten_glGetFramebufferAttachmentParameteriv: _emscripten_glGetFramebufferAttachmentParameteriv,\n  /** @export */\n  emscripten_glGetInteger64i_v: _emscripten_glGetInteger64i_v,\n  /** @export */\n  emscripten_glGetInteger64v: _emscripten_glGetInteger64v,\n  /** @export */\n  emscripten_glGetIntegeri_v: _emscripten_glGetIntegeri_v,\n  /** @export */\n  emscripten_glGetIntegerv: _emscripten_glGetIntegerv,\n  /** @export */\n  emscripten_glGetInternalformativ: _emscripten_glGetInternalformativ,\n  /** @export */\n  emscripten_glGetProgramBinary: _emscripten_glGetProgramBinary,\n  /** @export */\n  emscripten_glGetProgramInfoLog: _emscripten_glGetProgramInfoLog,\n  /** @export */\n  emscripten_glGetProgramiv: _emscripten_glGetProgramiv,\n  /** @export */\n  emscripten_glGetQueryObjecti64vEXT: _emscripten_glGetQueryObjecti64vEXT,\n  /** @export */\n  emscripten_glGetQueryObjectivEXT: _emscripten_glGetQueryObjectivEXT,\n  /** @export */\n  emscripten_glGetQueryObjectui64vEXT: _emscripten_glGetQueryObjectui64vEXT,\n  /** @export */\n  emscripten_glGetQueryObjectuiv: _emscripten_glGetQueryObjectuiv,\n  /** @export */\n  emscripten_glGetQueryObjectuivEXT: _emscripten_glGetQueryObjectuivEXT,\n  /** @export */\n  emscripten_glGetQueryiv: _emscripten_glGetQueryiv,\n  /** @export */\n  emscripten_glGetQueryivEXT: _emscripten_glGetQueryivEXT,\n  /** @export */\n  emscripten_glGetRenderbufferParameteriv: _emscripten_glGetRenderbufferParameteriv,\n  /** @export */\n  emscripten_glGetSamplerParameterfv: _emscripten_glGetSamplerParameterfv,\n  /** @export */\n  emscripten_glGetSamplerParameteriv: _emscripten_glGetSamplerParameteriv,\n  /** @export */\n  emscripten_glGetShaderInfoLog: _emscripten_glGetShaderInfoLog,\n  /** @export */\n  emscripten_glGetShaderPrecisionFormat: _emscripten_glGetShaderPrecisionFormat,\n  /** @export */\n  emscripten_glGetShaderSource: _emscripten_glGetShaderSource,\n  /** @export */\n  emscripten_glGetShaderiv: _emscripten_glGetShaderiv,\n  /** @export */\n  emscripten_glGetString: _emscripten_glGetString,\n  /** @export */\n  emscripten_glGetStringi: _emscripten_glGetStringi,\n  /** @export */\n  emscripten_glGetSynciv: _emscripten_glGetSynciv,\n  /** @export */\n  emscripten_glGetTexParameterfv: _emscripten_glGetTexParameterfv,\n  /** @export */\n  emscripten_glGetTexParameteriv: _emscripten_glGetTexParameteriv,\n  /** @export */\n  emscripten_glGetTransformFeedbackVarying: _emscripten_glGetTransformFeedbackVarying,\n  /** @export */\n  emscripten_glGetUniformBlockIndex: _emscripten_glGetUniformBlockIndex,\n  /** @export */\n  emscripten_glGetUniformIndices: _emscripten_glGetUniformIndices,\n  /** @export */\n  emscripten_glGetUniformLocation: _emscripten_glGetUniformLocation,\n  /** @export */\n  emscripten_glGetUniformfv: _emscripten_glGetUniformfv,\n  /** @export */\n  emscripten_glGetUniformiv: _emscripten_glGetUniformiv,\n  /** @export */\n  emscripten_glGetUniformuiv: _emscripten_glGetUniformuiv,\n  /** @export */\n  emscripten_glGetVertexAttribIiv: _emscripten_glGetVertexAttribIiv,\n  /** @export */\n  emscripten_glGetVertexAttribIuiv: _emscripten_glGetVertexAttribIuiv,\n  /** @export */\n  emscripten_glGetVertexAttribPointerv: _emscripten_glGetVertexAttribPointerv,\n  /** @export */\n  emscripten_glGetVertexAttribfv: _emscripten_glGetVertexAttribfv,\n  /** @export */\n  emscripten_glGetVertexAttribiv: _emscripten_glGetVertexAttribiv,\n  /** @export */\n  emscripten_glHint: _emscripten_glHint,\n  /** @export */\n  emscripten_glInvalidateFramebuffer: _emscripten_glInvalidateFramebuffer,\n  /** @export */\n  emscripten_glInvalidateSubFramebuffer: _emscripten_glInvalidateSubFramebuffer,\n  /** @export */\n  emscripten_glIsBuffer: _emscripten_glIsBuffer,\n  /** @export */\n  emscripten_glIsEnabled: _emscripten_glIsEnabled,\n  /** @export */\n  emscripten_glIsFramebuffer: _emscripten_glIsFramebuffer,\n  /** @export */\n  emscripten_glIsProgram: _emscripten_glIsProgram,\n  /** @export */\n  emscripten_glIsQuery: _emscripten_glIsQuery,\n  /** @export */\n  emscripten_glIsQueryEXT: _emscripten_glIsQueryEXT,\n  /** @export */\n  emscripten_glIsRenderbuffer: _emscripten_glIsRenderbuffer,\n  /** @export */\n  emscripten_glIsSampler: _emscripten_glIsSampler,\n  /** @export */\n  emscripten_glIsShader: _emscripten_glIsShader,\n  /** @export */\n  emscripten_glIsSync: _emscripten_glIsSync,\n  /** @export */\n  emscripten_glIsTexture: _emscripten_glIsTexture,\n  /** @export */\n  emscripten_glIsTransformFeedback: _emscripten_glIsTransformFeedback,\n  /** @export */\n  emscripten_glIsVertexArray: _emscripten_glIsVertexArray,\n  /** @export */\n  emscripten_glIsVertexArrayOES: _emscripten_glIsVertexArrayOES,\n  /** @export */\n  emscripten_glLineWidth: _emscripten_glLineWidth,\n  /** @export */\n  emscripten_glLinkProgram: _emscripten_glLinkProgram,\n  /** @export */\n  emscripten_glPauseTransformFeedback: _emscripten_glPauseTransformFeedback,\n  /** @export */\n  emscripten_glPixelStorei: _emscripten_glPixelStorei,\n  /** @export */\n  emscripten_glPolygonModeWEBGL: _emscripten_glPolygonModeWEBGL,\n  /** @export */\n  emscripten_glPolygonOffset: _emscripten_glPolygonOffset,\n  /** @export */\n  emscripten_glPolygonOffsetClampEXT: _emscripten_glPolygonOffsetClampEXT,\n  /** @export */\n  emscripten_glProgramBinary: _emscripten_glProgramBinary,\n  /** @export */\n  emscripten_glProgramParameteri: _emscripten_glProgramParameteri,\n  /** @export */\n  emscripten_glQueryCounterEXT: _emscripten_glQueryCounterEXT,\n  /** @export */\n  emscripten_glReadBuffer: _emscripten_glReadBuffer,\n  /** @export */\n  emscripten_glReadPixels: _emscripten_glReadPixels,\n  /** @export */\n  emscripten_glReleaseShaderCompiler: _emscripten_glReleaseShaderCompiler,\n  /** @export */\n  emscripten_glRenderbufferStorage: _emscripten_glRenderbufferStorage,\n  /** @export */\n  emscripten_glRenderbufferStorageMultisample: _emscripten_glRenderbufferStorageMultisample,\n  /** @export */\n  emscripten_glResumeTransformFeedback: _emscripten_glResumeTransformFeedback,\n  /** @export */\n  emscripten_glSampleCoverage: _emscripten_glSampleCoverage,\n  /** @export */\n  emscripten_glSamplerParameterf: _emscripten_glSamplerParameterf,\n  /** @export */\n  emscripten_glSamplerParameterfv: _emscripten_glSamplerParameterfv,\n  /** @export */\n  emscripten_glSamplerParameteri: _emscripten_glSamplerParameteri,\n  /** @export */\n  emscripten_glSamplerParameteriv: _emscripten_glSamplerParameteriv,\n  /** @export */\n  emscripten_glScissor: _emscripten_glScissor,\n  /** @export */\n  emscripten_glShaderBinary: _emscripten_glShaderBinary,\n  /** @export */\n  emscripten_glShaderSource: _emscripten_glShaderSource,\n  /** @export */\n  emscripten_glStencilFunc: _emscripten_glStencilFunc,\n  /** @export */\n  emscripten_glStencilFuncSeparate: _emscripten_glStencilFuncSeparate,\n  /** @export */\n  emscripten_glStencilMask: _emscripten_glStencilMask,\n  /** @export */\n  emscripten_glStencilMaskSeparate: _emscripten_glStencilMaskSeparate,\n  /** @export */\n  emscripten_glStencilOp: _emscripten_glStencilOp,\n  /** @export */\n  emscripten_glStencilOpSeparate: _emscripten_glStencilOpSeparate,\n  /** @export */\n  emscripten_glTexImage2D: _emscripten_glTexImage2D,\n  /** @export */\n  emscripten_glTexImage3D: _emscripten_glTexImage3D,\n  /** @export */\n  emscripten_glTexParameterf: _emscripten_glTexParameterf,\n  /** @export */\n  emscripten_glTexParameterfv: _emscripten_glTexParameterfv,\n  /** @export */\n  emscripten_glTexParameteri: _emscripten_glTexParameteri,\n  /** @export */\n  emscripten_glTexParameteriv: _emscripten_glTexParameteriv,\n  /** @export */\n  emscripten_glTexStorage2D: _emscripten_glTexStorage2D,\n  /** @export */\n  emscripten_glTexStorage3D: _emscripten_glTexStorage3D,\n  /** @export */\n  emscripten_glTexSubImage2D: _emscripten_glTexSubImage2D,\n  /** @export */\n  emscripten_glTexSubImage3D: _emscripten_glTexSubImage3D,\n  /** @export */\n  emscripten_glTransformFeedbackVaryings: _emscripten_glTransformFeedbackVaryings,\n  /** @export */\n  emscripten_glUniform1f: _emscripten_glUniform1f,\n  /** @export */\n  emscripten_glUniform1fv: _emscripten_glUniform1fv,\n  /** @export */\n  emscripten_glUniform1i: _emscripten_glUniform1i,\n  /** @export */\n  emscripten_glUniform1iv: _emscripten_glUniform1iv,\n  /** @export */\n  emscripten_glUniform1ui: _emscripten_glUniform1ui,\n  /** @export */\n  emscripten_glUniform1uiv: _emscripten_glUniform1uiv,\n  /** @export */\n  emscripten_glUniform2f: _emscripten_glUniform2f,\n  /** @export */\n  emscripten_glUniform2fv: _emscripten_glUniform2fv,\n  /** @export */\n  emscripten_glUniform2i: _emscripten_glUniform2i,\n  /** @export */\n  emscripten_glUniform2iv: _emscripten_glUniform2iv,\n  /** @export */\n  emscripten_glUniform2ui: _emscripten_glUniform2ui,\n  /** @export */\n  emscripten_glUniform2uiv: _emscripten_glUniform2uiv,\n  /** @export */\n  emscripten_glUniform3f: _emscripten_glUniform3f,\n  /** @export */\n  emscripten_glUniform3fv: _emscripten_glUniform3fv,\n  /** @export */\n  emscripten_glUniform3i: _emscripten_glUniform3i,\n  /** @export */\n  emscripten_glUniform3iv: _emscripten_glUniform3iv,\n  /** @export */\n  emscripten_glUniform3ui: _emscripten_glUniform3ui,\n  /** @export */\n  emscripten_glUniform3uiv: _emscripten_glUniform3uiv,\n  /** @export */\n  emscripten_glUniform4f: _emscripten_glUniform4f,\n  /** @export */\n  emscripten_glUniform4fv: _emscripten_glUniform4fv,\n  /** @export */\n  emscripten_glUniform4i: _emscripten_glUniform4i,\n  /** @export */\n  emscripten_glUniform4iv: _emscripten_glUniform4iv,\n  /** @export */\n  emscripten_glUniform4ui: _emscripten_glUniform4ui,\n  /** @export */\n  emscripten_glUniform4uiv: _emscripten_glUniform4uiv,\n  /** @export */\n  emscripten_glUniformBlockBinding: _emscripten_glUniformBlockBinding,\n  /** @export */\n  emscripten_glUniformMatrix2fv: _emscripten_glUniformMatrix2fv,\n  /** @export */\n  emscripten_glUniformMatrix2x3fv: _emscripten_glUniformMatrix2x3fv,\n  /** @export */\n  emscripten_glUniformMatrix2x4fv: _emscripten_glUniformMatrix2x4fv,\n  /** @export */\n  emscripten_glUniformMatrix3fv: _emscripten_glUniformMatrix3fv,\n  /** @export */\n  emscripten_glUniformMatrix3x2fv: _emscripten_glUniformMatrix3x2fv,\n  /** @export */\n  emscripten_glUniformMatrix3x4fv: _emscripten_glUniformMatrix3x4fv,\n  /** @export */\n  emscripten_glUniformMatrix4fv: _emscripten_glUniformMatrix4fv,\n  /** @export */\n  emscripten_glUniformMatrix4x2fv: _emscripten_glUniformMatrix4x2fv,\n  /** @export */\n  emscripten_glUniformMatrix4x3fv: _emscripten_glUniformMatrix4x3fv,\n  /** @export */\n  emscripten_glUseProgram: _emscripten_glUseProgram,\n  /** @export */\n  emscripten_glValidateProgram: _emscripten_glValidateProgram,\n  /** @export */\n  emscripten_glVertexAttrib1f: _emscripten_glVertexAttrib1f,\n  /** @export */\n  emscripten_glVertexAttrib1fv: _emscripten_glVertexAttrib1fv,\n  /** @export */\n  emscripten_glVertexAttrib2f: _emscripten_glVertexAttrib2f,\n  /** @export */\n  emscripten_glVertexAttrib2fv: _emscripten_glVertexAttrib2fv,\n  /** @export */\n  emscripten_glVertexAttrib3f: _emscripten_glVertexAttrib3f,\n  /** @export */\n  emscripten_glVertexAttrib3fv: _emscripten_glVertexAttrib3fv,\n  /** @export */\n  emscripten_glVertexAttrib4f: _emscripten_glVertexAttrib4f,\n  /** @export */\n  emscripten_glVertexAttrib4fv: _emscripten_glVertexAttrib4fv,\n  /** @export */\n  emscripten_glVertexAttribDivisor: _emscripten_glVertexAttribDivisor,\n  /** @export */\n  emscripten_glVertexAttribDivisorANGLE: _emscripten_glVertexAttribDivisorANGLE,\n  /** @export */\n  emscripten_glVertexAttribDivisorARB: _emscripten_glVertexAttribDivisorARB,\n  /** @export */\n  emscripten_glVertexAttribDivisorEXT: _emscripten_glVertexAttribDivisorEXT,\n  /** @export */\n  emscripten_glVertexAttribDivisorNV: _emscripten_glVertexAttribDivisorNV,\n  /** @export */\n  emscripten_glVertexAttribI4i: _emscripten_glVertexAttribI4i,\n  /** @export */\n  emscripten_glVertexAttribI4iv: _emscripten_glVertexAttribI4iv,\n  /** @export */\n  emscripten_glVertexAttribI4ui: _emscripten_glVertexAttribI4ui,\n  /** @export */\n  emscripten_glVertexAttribI4uiv: _emscripten_glVertexAttribI4uiv,\n  /** @export */\n  emscripten_glVertexAttribIPointer: _emscripten_glVertexAttribIPointer,\n  /** @export */\n  emscripten_glVertexAttribPointer: _emscripten_glVertexAttribPointer,\n  /** @export */\n  emscripten_glViewport: _emscripten_glViewport,\n  /** @export */\n  emscripten_glWaitSync: _emscripten_glWaitSync,\n  /** @export */\n  emscripten_has_asyncify: _emscripten_has_asyncify,\n  /** @export */\n  emscripten_request_fullscreen_strategy: _emscripten_request_fullscreen_strategy,\n  /** @export */\n  emscripten_request_pointerlock: _emscripten_request_pointerlock,\n  /** @export */\n  emscripten_resize_heap: _emscripten_resize_heap,\n  /** @export */\n  emscripten_sample_gamepad_data: _emscripten_sample_gamepad_data,\n  /** @export */\n  emscripten_set_beforeunload_callback_on_thread: _emscripten_set_beforeunload_callback_on_thread,\n  /** @export */\n  emscripten_set_blur_callback_on_thread: _emscripten_set_blur_callback_on_thread,\n  /** @export */\n  emscripten_set_canvas_element_size: _emscripten_set_canvas_element_size,\n  /** @export */\n  emscripten_set_element_css_size: _emscripten_set_element_css_size,\n  /** @export */\n  emscripten_set_focus_callback_on_thread: _emscripten_set_focus_callback_on_thread,\n  /** @export */\n  emscripten_set_fullscreenchange_callback_on_thread: _emscripten_set_fullscreenchange_callback_on_thread,\n  /** @export */\n  emscripten_set_gamepadconnected_callback_on_thread: _emscripten_set_gamepadconnected_callback_on_thread,\n  /** @export */\n  emscripten_set_gamepaddisconnected_callback_on_thread: _emscripten_set_gamepaddisconnected_callback_on_thread,\n  /** @export */\n  emscripten_set_keydown_callback_on_thread: _emscripten_set_keydown_callback_on_thread,\n  /** @export */\n  emscripten_set_keypress_callback_on_thread: _emscripten_set_keypress_callback_on_thread,\n  /** @export */\n  emscripten_set_keyup_callback_on_thread: _emscripten_set_keyup_callback_on_thread,\n  /** @export */\n  emscripten_set_main_loop: _emscripten_set_main_loop,\n  /** @export */\n  emscripten_set_mousedown_callback_on_thread: _emscripten_set_mousedown_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseenter_callback_on_thread: _emscripten_set_mouseenter_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseleave_callback_on_thread: _emscripten_set_mouseleave_callback_on_thread,\n  /** @export */\n  emscripten_set_mousemove_callback_on_thread: _emscripten_set_mousemove_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseup_callback_on_thread: _emscripten_set_mouseup_callback_on_thread,\n  /** @export */\n  emscripten_set_pointerlockchange_callback_on_thread: _emscripten_set_pointerlockchange_callback_on_thread,\n  /** @export */\n  emscripten_set_resize_callback_on_thread: _emscripten_set_resize_callback_on_thread,\n  /** @export */\n  emscripten_set_touchcancel_callback_on_thread: _emscripten_set_touchcancel_callback_on_thread,\n  /** @export */\n  emscripten_set_touchend_callback_on_thread: _emscripten_set_touchend_callback_on_thread,\n  /** @export */\n  emscripten_set_touchmove_callback_on_thread: _emscripten_set_touchmove_callback_on_thread,\n  /** @export */\n  emscripten_set_touchstart_callback_on_thread: _emscripten_set_touchstart_callback_on_thread,\n  /** @export */\n  emscripten_set_visibilitychange_callback_on_thread: _emscripten_set_visibilitychange_callback_on_thread,\n  /** @export */\n  emscripten_set_wheel_callback_on_thread: _emscripten_set_wheel_callback_on_thread,\n  /** @export */\n  emscripten_set_window_title: _emscripten_set_window_title,\n  /** @export */\n  emscripten_sleep: _emscripten_sleep,\n  /** @export */\n  environ_get: _environ_get,\n  /** @export */\n  environ_sizes_get: _environ_sizes_get,\n  /** @export */\n  exit: _exit,\n  /** @export */\n  fd_close: _fd_close,\n  /** @export */\n  fd_read: _fd_read,\n  /** @export */\n  fd_seek: _fd_seek,\n  /** @export */\n  fd_write: _fd_write,\n  /** @export */\n  glActiveTexture: _glActiveTexture,\n  /** @export */\n  glAttachShader: _glAttachShader,\n  /** @export */\n  glBindBuffer: _glBindBuffer,\n  /** @export */\n  glBindBufferBase: _glBindBufferBase,\n  /** @export */\n  glBindFramebuffer: _glBindFramebuffer,\n  /** @export */\n  glBindRenderbuffer: _glBindRenderbuffer,\n  /** @export */\n  glBindSampler: _glBindSampler,\n  /** @export */\n  glBindTexture: _glBindTexture,\n  /** @export */\n  glBindVertexArray: _glBindVertexArray,\n  /** @export */\n  glBlendColor: _glBlendColor,\n  /** @export */\n  glBlendEquationSeparate: _glBlendEquationSeparate,\n  /** @export */\n  glBlendFuncSeparate: _glBlendFuncSeparate,\n  /** @export */\n  glBlitFramebuffer: _glBlitFramebuffer,\n  /** @export */\n  glBufferData: _glBufferData,\n  /** @export */\n  glBufferSubData: _glBufferSubData,\n  /** @export */\n  glClearBufferfi: _glClearBufferfi,\n  /** @export */\n  glClearBufferfv: _glClearBufferfv,\n  /** @export */\n  glClearBufferiv: _glClearBufferiv,\n  /** @export */\n  glColorMask: _glColorMask,\n  /** @export */\n  glCompileShader: _glCompileShader,\n  /** @export */\n  glCompressedTexImage2D: _glCompressedTexImage2D,\n  /** @export */\n  glCompressedTexImage3D: _glCompressedTexImage3D,\n  /** @export */\n  glCreateProgram: _glCreateProgram,\n  /** @export */\n  glCreateShader: _glCreateShader,\n  /** @export */\n  glCullFace: _glCullFace,\n  /** @export */\n  glDeleteBuffers: _glDeleteBuffers,\n  /** @export */\n  glDeleteFramebuffers: _glDeleteFramebuffers,\n  /** @export */\n  glDeleteProgram: _glDeleteProgram,\n  /** @export */\n  glDeleteRenderbuffers: _glDeleteRenderbuffers,\n  /** @export */\n  glDeleteSamplers: _glDeleteSamplers,\n  /** @export */\n  glDeleteShader: _glDeleteShader,\n  /** @export */\n  glDeleteTextures: _glDeleteTextures,\n  /** @export */\n  glDeleteVertexArrays: _glDeleteVertexArrays,\n  /** @export */\n  glDepthFunc: _glDepthFunc,\n  /** @export */\n  glDepthMask: _glDepthMask,\n  /** @export */\n  glDisable: _glDisable,\n  /** @export */\n  glDisableVertexAttribArray: _glDisableVertexAttribArray,\n  /** @export */\n  glDrawArrays: _glDrawArrays,\n  /** @export */\n  glDrawArraysInstanced: _glDrawArraysInstanced,\n  /** @export */\n  glDrawElements: _glDrawElements,\n  /** @export */\n  glDrawElementsInstanced: _glDrawElementsInstanced,\n  /** @export */\n  glEnable: _glEnable,\n  /** @export */\n  glEnableVertexAttribArray: _glEnableVertexAttribArray,\n  /** @export */\n  glFrontFace: _glFrontFace,\n  /** @export */\n  glGenBuffers: _glGenBuffers,\n  /** @export */\n  glGenRenderbuffers: _glGenRenderbuffers,\n  /** @export */\n  glGenSamplers: _glGenSamplers,\n  /** @export */\n  glGenTextures: _glGenTextures,\n  /** @export */\n  glGenVertexArrays: _glGenVertexArrays,\n  /** @export */\n  glGetAttribLocation: _glGetAttribLocation,\n  /** @export */\n  glGetIntegerv: _glGetIntegerv,\n  /** @export */\n  glGetProgramInfoLog: _glGetProgramInfoLog,\n  /** @export */\n  glGetProgramiv: _glGetProgramiv,\n  /** @export */\n  glGetShaderInfoLog: _glGetShaderInfoLog,\n  /** @export */\n  glGetShaderiv: _glGetShaderiv,\n  /** @export */\n  glGetStringi: _glGetStringi,\n  /** @export */\n  glGetUniformLocation: _glGetUniformLocation,\n  /** @export */\n  glInvalidateFramebuffer: _glInvalidateFramebuffer,\n  /** @export */\n  glLinkProgram: _glLinkProgram,\n  /** @export */\n  glPixelStorei: _glPixelStorei,\n  /** @export */\n  glPolygonOffset: _glPolygonOffset,\n  /** @export */\n  glReadBuffer: _glReadBuffer,\n  /** @export */\n  glReadPixels: _glReadPixels,\n  /** @export */\n  glRenderbufferStorageMultisample: _glRenderbufferStorageMultisample,\n  /** @export */\n  glSamplerParameterf: _glSamplerParameterf,\n  /** @export */\n  glSamplerParameteri: _glSamplerParameteri,\n  /** @export */\n  glScissor: _glScissor,\n  /** @export */\n  glShaderSource: _glShaderSource,\n  /** @export */\n  glStencilFunc: _glStencilFunc,\n  /** @export */\n  glStencilFuncSeparate: _glStencilFuncSeparate,\n  /** @export */\n  glStencilMask: _glStencilMask,\n  /** @export */\n  glStencilOp: _glStencilOp,\n  /** @export */\n  glStencilOpSeparate: _glStencilOpSeparate,\n  /** @export */\n  glTexImage2D: _glTexImage2D,\n  /** @export */\n  glTexImage3D: _glTexImage3D,\n  /** @export */\n  glTexParameteri: _glTexParameteri,\n  /** @export */\n  glTexStorage2D: _glTexStorage2D,\n  /** @export */\n  glTexStorage3D: _glTexStorage3D,\n  /** @export */\n  glTexSubImage2D: _glTexSubImage2D,\n  /** @export */\n  glTexSubImage3D: _glTexSubImage3D,\n  /** @export */\n  glUniform1fv: _glUniform1fv,\n  /** @export */\n  glUniform1i: _glUniform1i,\n  /** @export */\n  glUniform1iv: _glUniform1iv,\n  /** @export */\n  glUniform2fv: _glUniform2fv,\n  /** @export */\n  glUniform2iv: _glUniform2iv,\n  /** @export */\n  glUniform3fv: _glUniform3fv,\n  /** @export */\n  glUniform3iv: _glUniform3iv,\n  /** @export */\n  glUniform4fv: _glUniform4fv,\n  /** @export */\n  glUniform4iv: _glUniform4iv,\n  /** @export */\n  glUniformMatrix4fv: _glUniformMatrix4fv,\n  /** @export */\n  glUseProgram: _glUseProgram,\n  /** @export */\n  glVertexAttribDivisor: _glVertexAttribDivisor,\n  /** @export */\n  glVertexAttribIPointer: _glVertexAttribIPointer,\n  /** @export */\n  glVertexAttribPointer: _glVertexAttribPointer,\n  /** @export */\n  glViewport: _glViewport,\n  /** @export */\n  invoke_vii,\n  /** @export */\n  random_get: _random_get,\n  /** @export */\n  slog_js_log\n};\nvar wasmExports = await createWasm();\nvar ___wasm_call_ctors = wasmExports['__wasm_call_ctors']\nvar __ZdaPv = Module['__ZdaPv'] = wasmExports['_ZdaPv']\nvar __ZdlPvm = Module['__ZdlPvm'] = wasmExports['_ZdlPvm']\nvar __ZdaPvm = Module['__ZdaPvm'] = wasmExports['_ZdaPvm']\nvar _malloc = wasmExports['malloc']\nvar _free = wasmExports['free']\nvar _calloc = Module['_calloc'] = wasmExports['calloc']\nvar _realloc = Module['_realloc'] = wasmExports['realloc']\nvar _WebSetFullscreen = Module['_WebSetFullscreen'] = wasmExports['WebSetFullscreen']\nvar _WebOpenGameMenu = Module['_WebOpenGameMenu'] = wasmExports['WebOpenGameMenu']\nvar _WebSyncScreenSize = Module['_WebSyncScreenSize'] = wasmExports['WebSyncScreenSize']\nvar _WebMain = Module['_WebMain'] = wasmExports['WebMain']\nvar _main = Module['_main'] = wasmExports['__main_argc_argv']\nvar _ma_device__on_notification_unlocked = Module['_ma_device__on_notification_unlocked'] = wasmExports['ma_device__on_notification_unlocked']\nvar _ma_malloc_emscripten = Module['_ma_malloc_emscripten'] = wasmExports['ma_malloc_emscripten']\nvar _ma_free_emscripten = Module['_ma_free_emscripten'] = wasmExports['ma_free_emscripten']\nvar _ma_device_process_pcm_frames_capture__webaudio = Module['_ma_device_process_pcm_frames_capture__webaudio'] = wasmExports['ma_device_process_pcm_frames_capture__webaudio']\nvar _ma_device_process_pcm_frames_playback__webaudio = Module['_ma_device_process_pcm_frames_playback__webaudio'] = wasmExports['ma_device_process_pcm_frames_playback__webaudio']\nvar ___libc_free = Module['___libc_free'] = wasmExports['__libc_free']\nvar ___libc_malloc = Module['___libc_malloc'] = wasmExports['__libc_malloc']\nvar _emscripten_builtin_malloc = Module['_emscripten_builtin_malloc'] = wasmExports['emscripten_builtin_malloc']\nvar _strndup = Module['_strndup'] = wasmExports['strndup']\nvar __ZdlPv = Module['__ZdlPv'] = wasmExports['_ZdlPv']\nvar __Znaj = Module['__Znaj'] = wasmExports['_Znaj']\nvar __ZnajSt11align_val_t = Module['__ZnajSt11align_val_t'] = wasmExports['_ZnajSt11align_val_t']\nvar __Znwj = Module['__Znwj'] = wasmExports['_Znwj']\nvar __ZnwjSt11align_val_t = Module['__ZnwjSt11align_val_t'] = wasmExports['_ZnwjSt11align_val_t']\nvar ___libc_calloc = Module['___libc_calloc'] = wasmExports['__libc_calloc']\nvar ___libc_realloc = Module['___libc_realloc'] = wasmExports['__libc_realloc']\nvar _emscripten_builtin_calloc = Module['_emscripten_builtin_calloc'] = wasmExports['emscripten_builtin_calloc']\nvar _emscripten_builtin_free = Module['_emscripten_builtin_free'] = wasmExports['emscripten_builtin_free']\nvar _emscripten_builtin_realloc = Module['_emscripten_builtin_realloc'] = wasmExports['emscripten_builtin_realloc']\nvar _malloc_size = Module['_malloc_size'] = wasmExports['malloc_size']\nvar _malloc_usable_size = Module['_malloc_usable_size'] = wasmExports['malloc_usable_size']\nvar _reallocf = Module['_reallocf'] = wasmExports['reallocf']\nvar _setThrew = wasmExports['setThrew']\nvar __emscripten_stack_restore = wasmExports['_emscripten_stack_restore']\nvar __emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc']\nvar _emscripten_stack_get_current = wasmExports['emscripten_stack_get_current']\nvar dynCall_viii = Module['dynCall_viii'] = wasmExports['dynCall_viii']\nvar dynCall_vi = Module['dynCall_vi'] = wasmExports['dynCall_vi']\nvar dynCall_iii = Module['dynCall_iii'] = wasmExports['dynCall_iii']\nvar dynCall_ii = Module['dynCall_ii'] = wasmExports['dynCall_ii']\nvar dynCall_vii = Module['dynCall_vii'] = wasmExports['dynCall_vii']\nvar dynCall_fi = Module['dynCall_fi'] = wasmExports['dynCall_fi']\nvar dynCall_fii = Module['dynCall_fii'] = wasmExports['dynCall_fii']\nvar dynCall_v = Module['dynCall_v'] = wasmExports['dynCall_v']\nvar dynCall_viifff = Module['dynCall_viifff'] = wasmExports['dynCall_viifff']\nvar dynCall_viifffii = Module['dynCall_viifffii'] = wasmExports['dynCall_viifffii']\nvar dynCall_viiiifiiiii = Module['dynCall_viiiifiiiii'] = wasmExports['dynCall_viiiifiiiii']\nvar dynCall_viiiiiii = Module['dynCall_viiiiiii'] = wasmExports['dynCall_viiiiiii']\nvar dynCall_iiiiiiiii = Module['dynCall_iiiiiiiii'] = wasmExports['dynCall_iiiiiiiii']\nvar dynCall_iiiiiii = Module['dynCall_iiiiiii'] = wasmExports['dynCall_iiiiiii']\nvar dynCall_iiiji = Module['dynCall_iiiji'] = wasmExports['dynCall_iiiji']\nvar dynCall_iij = Module['dynCall_iij'] = wasmExports['dynCall_iij']\nvar dynCall_iiiii = Module['dynCall_iiiii'] = wasmExports['dynCall_iiiii']\nvar dynCall_iiji = Module['dynCall_iiji'] = wasmExports['dynCall_iiji']\nvar dynCall_i = Module['dynCall_i'] = wasmExports['dynCall_i']\nvar dynCall_iiii = Module['dynCall_iiii'] = wasmExports['dynCall_iiii']\nvar dynCall_viiiii = Module['dynCall_viiiii'] = wasmExports['dynCall_viiiii']\nvar dynCall_viif = Module['dynCall_viif'] = wasmExports['dynCall_viif']\nvar dynCall_viff = Module['dynCall_viff'] = wasmExports['dynCall_viff']\nvar dynCall_vif = Module['dynCall_vif'] = wasmExports['dynCall_vif']\nvar dynCall_viiiiiiiiiii = Module['dynCall_viiiiiiiiiii'] = wasmExports['dynCall_viiiiiiiiiii']\nvar dynCall_viiiiiiii = Module['dynCall_viiiiiiii'] = wasmExports['dynCall_viiiiiiii']\nvar dynCall_viiii = Module['dynCall_viiii'] = wasmExports['dynCall_viiii']\nvar dynCall_viiffi = Module['dynCall_viiffi'] = wasmExports['dynCall_viiffi']\nvar dynCall_iiiiii = Module['dynCall_iiiiii'] = wasmExports['dynCall_iiiiii']\nvar dynCall_iiid = Module['dynCall_iiid'] = wasmExports['dynCall_iiid']\nvar dynCall_jii = Module['dynCall_jii'] = wasmExports['dynCall_jii']\nvar dynCall_iijii = Module['dynCall_iijii'] = wasmExports['dynCall_iijii']\nvar dynCall_viiiiii = Module['dynCall_viiiiii'] = wasmExports['dynCall_viiiiii']\nvar dynCall_diii = Module['dynCall_diii'] = wasmExports['dynCall_diii']\nvar dynCall_viiid = Module['dynCall_viiid'] = wasmExports['dynCall_viiid']\nvar dynCall_viiiddd = Module['dynCall_viiiddd'] = wasmExports['dynCall_viiiddd']\nvar dynCall_vid = Module['dynCall_vid'] = wasmExports['dynCall_vid']\nvar dynCall_jiji = Module['dynCall_jiji'] = wasmExports['dynCall_jiji']\nvar dynCall_ji = Module['dynCall_ji'] = wasmExports['dynCall_ji']\nvar dynCall_vffff = Module['dynCall_vffff'] = wasmExports['dynCall_vffff']\nvar dynCall_vf = Module['dynCall_vf'] = wasmExports['dynCall_vf']\nvar dynCall_viiiiiiiii = Module['dynCall_viiiiiiiii'] = wasmExports['dynCall_viiiiiiiii']\nvar dynCall_vff = Module['dynCall_vff'] = wasmExports['dynCall_vff']\nvar dynCall_vfi = Module['dynCall_vfi'] = wasmExports['dynCall_vfi']\nvar dynCall_vifff = Module['dynCall_vifff'] = wasmExports['dynCall_vifff']\nvar dynCall_viffff = Module['dynCall_viffff'] = wasmExports['dynCall_viffff']\nvar dynCall_vfff = Module['dynCall_vfff'] = wasmExports['dynCall_vfff']\nvar dynCall_viiiiiiiiii = Module['dynCall_viiiiiiiiii'] = wasmExports['dynCall_viiiiiiiiii']\nvar dynCall_viifi = Module['dynCall_viifi'] = wasmExports['dynCall_viifi']\nvar dynCall_iidiiii = Module['dynCall_iidiiii'] = wasmExports['dynCall_iidiiii']\nvar _asyncify_start_unwind = wasmExports['asyncify_start_unwind']\nvar _asyncify_stop_unwind = wasmExports['asyncify_stop_unwind']\nvar _asyncify_start_rewind = wasmExports['asyncify_start_rewind']\nvar _asyncify_stop_rewind = wasmExports['asyncify_stop_rewind']\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    dynCall_vii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nfunction callMain(args = []) {\n\n  var entryFunction = _main;\n\n  args.unshift(thisProgram);\n\n  var argc = args.length;\n  var argv = stackAlloc((argc + 1) * 4);\n  var argv_ptr = argv;\n  args.forEach((arg) => {\n    HEAPU32[((argv_ptr)>>2)] = stringToUTF8OnStack(arg);\n    argv_ptr += 4;\n  });\n  HEAPU32[((argv_ptr)>>2)] = 0;\n\n  try {\n\n    var ret = entryFunction(argc, argv);\n\n    // if we're not running an evented main loop, it's time to exit\n    exitJS(ret, /* implicit = */ true);\n    return ret;\n  } catch (e) {\n    return handleException(e);\n  }\n}\n\nfunction run(args = arguments_) {\n\n  if (runDependencies > 0) {\n    dependenciesFulfilled = run;\n    return;\n  }\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    dependenciesFulfilled = run;\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    readyPromiseResolve(Module);\n    Module['onRuntimeInitialized']?.();\n\n    var noInitialRun = Module['noInitialRun'] || false;\n    if (!noInitialRun) callMain(args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(() => {\n      setTimeout(() => Module['setStatus'](''), 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n}\n\nfunction preInit() {\n  if (Module['preInit']) {\n    if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n    while (Module['preInit'].length > 0) {\n      Module['preInit'].shift()();\n    }\n  }\n}\n\npreInit();\nrun();\n\n// end include: postamble.js\n\n// include: postamble_modularize.js\n// In MODULARIZE mode we wrap the generated code in a factory function\n// and return either the Module itself, or a promise of the module.\n//\n// We assign to the `moduleRtn` global here and configure closure to see\n// this as and extern so it won't get minified.\n\nmoduleRtn = readyPromise;\n\n// end include: postamble_modularize.js\n\n\n\n  return moduleRtn;\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object') {\n  module.exports = createEdgeModule;\n  // This default export looks redundant, but it allows TS to import this\n  // commonjs style module.\n  module.exports.default = createEdgeModule;\n} else if (typeof define === 'function' && define['amd'])\n  define([], () => createEdgeModule);\n","import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] == UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n","/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState != this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce != options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index == -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor == UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex != -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original == null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original == NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\t// When the array of children is growing we need to decrease the skew\n\t\t\t\t// as we are adding a new element to the array.\n\t\t\t\t// Example:\n\t\t\t\t// [1, 2, 3] --> [0, 1, 2, 3]\n\t\t\t\t// oldChildren   newChildren\n\t\t\t\t//\n\t\t\t\t// The new element is at index 0, so our skew is 0,\n\t\t\t\t// we need to decrease the skew as we are adding a new element.\n\t\t\t\t// The decrease will cause us to compare the element at position 1\n\t\t\t\t// with value 1 with the element at position 0 with value 0.\n\t\t\t\t//\n\t\t\t\t// A linear concept is applied when the array is shrinking,\n\t\t\t\t// if the length is unchanged we can assume that no skew\n\t\t\t\t// changes are needed.\n\t\t\t\tif (newChildrenLength > oldChildrenLength) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else if (newChildrenLength < oldChildrenLength) {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren >\n\t\t(oldVNode != NULL && (oldVNode._flags & MATCHED) == 0 ? 1 : 0);\n\n\tif (\n\t\t(oldVNode === NULL && childVNode.key == null) ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype == oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) == 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype == oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype == oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n","import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] != oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname == 'onFocusOut' ||\n\t\t\tname == 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n","import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor != UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original == oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\trenderResult = cloneNode(tmp.props.children);\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\nfunction cloneNode(node) {\n\tif (\n\t\ttypeof node != 'object' ||\n\t\tnode == NULL ||\n\t\t(node._depth && node._depth > 0)\n\t) {\n\t\treturn node;\n\t}\n\n\tif (isArray(node)) {\n\t\treturn node.map(cloneNode);\n\t}\n\n\treturn assign({}, node);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType == NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data != newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html != oldHtml.__html && newHtml.__html != dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type == 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue != UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue != oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked != UNDEFINED && checked != dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current == vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = hookState._component.props !== p;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn prevScu\n\t\t\t\t\t? prevScu.call(this, p, s, c) || shouldUpdate\n\t\t\t\t\t: shouldUpdate;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tconst result = ref(createHandle());\n\t\t\t\treturn () => {\n\t\t\t\t\tref(null);\n\t\t\t\t\tif (result && typeof result == 'function') result();\n\t\t\t\t};\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","// An named symbol/brand for detecting Signal instances even when they weren't\n// created using the same signals library version.\nconst BRAND_SYMBOL = Symbol.for(\"preact-signals\");\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * Combine multiple value updates into one \"commit\" at the end of the provided callback.\n *\n * Batches can be nested and changes are only flushed once the outermost batch callback\n * completes.\n *\n * Accessing a signal that has been modified within a batch will reflect its updated\n * value.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction batch<T>(fn: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn fn();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n/**\n * Run a callback function that can access signal values without\n * subscribing to the signal updates.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction untracked<T>(fn: () => T): T {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n}\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n/**\n * The base class for plain and computed signals.\n */\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\n//\n// A function with the same name is defined later, so we need to ignore TypeScript's\n// warning about a redeclared variable.\n//\n// The class is declared here, but later implemented with ES5-style prototypes.\n// This enables better control of the transpiled output size.\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\ttoJSON(): T;\n\n\tpeek(): T;\n\n\tbrand: typeof BRAND_SYMBOL;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\n//\n// A class with the same name has already been declared, so we need to ignore\n// TypeScript's warning about a redeclared variable.\n//\n// The previously declared class is implemented here with ES5-style prototypes.\n// This enables better control of the transpiled output size.\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype.brand = BRAND_SYMBOL;\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\treturn effect(() => {\n\t\tconst value = this.value;\n\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.toJSON = function () {\n\treturn this.value;\n};\n\nSignal.prototype.peek = function () {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn this.value;\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget(this: Signal) {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(this: Signal, value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tthrow new Error(\"Cycle detected\");\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\n/**\n * Create a new plain signal.\n *\n * @param value The initial value for the signal.\n * @returns A new signal.\n */\nexport function signal<T>(value: T): Signal<T>;\nexport function signal<T = undefined>(): Signal<T | undefined>;\nexport function signal<T>(value?: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_fn: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(fn: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, fn: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._fn = fn;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._fn();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget(this: Computed) {\n\t\tif (this._flags & RUNNING) {\n\t\t\tthrow new Error(\"Cycle detected\");\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\n/**\n * An interface for read-only signals.\n */\ninterface ReadonlySignal<T = any> {\n\treadonly value: T;\n\tpeek(): T;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\tvalueOf(): T;\n\ttoString(): string;\n\ttoJSON(): T;\n\tbrand: typeof BRAND_SYMBOL;\n}\n\n/**\n * Create a new signal that is computed based on the values of other signals.\n *\n * The returned computed signal is read-only, and its value is automatically\n * updated when any signals accessed from within the callback function change.\n *\n * @param fn The effect callback.\n * @returns A new read-only signal.\n */\nfunction computed<T>(fn: () => T): ReadonlySignal<T> {\n\treturn new Computed(fn);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._fn = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ntype EffectFn = () => void | (() => void);\n\ndeclare class Effect {\n\t_fn?: EffectFn;\n\t_cleanup?: () => void;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(fn: EffectFn);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, fn: EffectFn) {\n\tthis._fn = fn;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (this._flags & DISPOSED) return;\n\t\tif (this._fn === undefined) return;\n\n\t\tconst cleanup = this._fn();\n\t\tif (typeof cleanup === \"function\") {\n\t\t\tthis._cleanup = cleanup;\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tthrow new Error(\"Cycle detected\");\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\n/**\n * Create an effect to run arbitrary code in response to signal changes.\n *\n * An effect tracks which signals are accessed within the given callback\n * function `fn`, and re-runs the callback when those signals change.\n *\n * The callback may return a cleanup function. The cleanup function gets\n * run once, either when the callback is next called or when the effect\n * gets disposed, whichever happens first.\n *\n * @param fn The effect callback.\n * @returns A function for disposing the effect.\n */\nfunction effect(fn: EffectFn): () => void {\n\tconst effect = new Effect(fn);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { computed, effect, batch, untracked, Signal, ReadonlySignal };\n","import { options, Component, isValidElement } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n};\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\nlet oldNotify: (this: Effect) => void,\n\teffectsQueue: Array<Effect> = [],\n\tdomQueue: Array<Effect> = [];\n\n// Capture the original `Effect.prototype._notify` method so that we can install\n// custom `._notify`s for each different use-case but still call the original\n// implementation in the end. Dispose the temporary effect immediately afterwards.\neffect(function (this: Effect) {\n\toldNotify = this._notify;\n})();\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction SignalValue(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst [isText, s] = useMemo(() => {\n\t\tlet self = this;\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst wrappedSignal = computed(() => {\n\t\t\tlet s = currentSignal.value.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\n\t\tconst isText = computed(\n\t\t\t() =>\n\t\t\t\t!Array.isArray(wrappedSignal.value) &&\n\t\t\t\t!isValidElement(wrappedSignal.value)\n\t\t);\n\t\t// Update text nodes directly without rerendering when the new value\n\t\t// is also text.\n\t\tconst dispose = effect(function (this: Effect) {\n\t\t\tthis._notify = notifyDomUpdates;\n\n\t\t\t// Subscribe to wrappedSignal updates only when its values are text...\n\t\t\tif (isText.value) {\n\t\t\t\t// ...but regardless of `self.base`'s current value, as it can be\n\t\t\t\t// undefined before mounting or a non-text node. In both of those cases\n\t\t\t\t// the update gets handled by a full rerender.\n\t\t\t\tconst value = wrappedSignal.value;\n\t\t\t\tif (self.__v && self.__v.__e && self.__v.__e.nodeType === 3) {\n\t\t\t\t\t(self.__v.__e as Text).data = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Piggyback this._updater's disposal to ensure that the text updater effect\n\t\t// above also gets disposed on unmount.\n\t\tconst oldDispose = this._updater!._dispose;\n\t\tthis._updater!._dispose = function () {\n\t\t\tdispose();\n\t\t\toldDispose.call(this);\n\t\t};\n\n\t\treturn [isText, wrappedSignal];\n\t}, []);\n\n\t// Rerender the component whenever `data.value` changes from a VNode\n\t// to another VNode, from text to a VNode, or from a VNode to text.\n\t// That is, everything else except text-to-text updates.\n\t//\n\t// This also ensures that the backing DOM node types gets updated to\n\t// text nodes and back when needed.\n\t//\n\t// For text-to-text updates, `.peek()` is used to skip full rerenders,\n\t// leaving them to the optimized path above.\n\treturn isText.value ? s.peek() : s.value;\n}\nSignalValue.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: SignalValue },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(function (this: Effect) {\n\t\t\tthis._notify = notifyDomUpdates;\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3 || type === 9)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// If this is a component using state, rerender\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\tif (this.__f || (typeof this.u == \"boolean\" && this.u === true)) {\n\t\tconst hasHooksState = this._updateFlags & HAS_HOOK_STATE;\n\t\t// if this component used no signals or computeds and no hooks state, update:\n\t\tif (!hasSignals && !hasHooksState && !(this._updateFlags & HAS_COMPUTEDS))\n\t\t\treturn true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & HAS_PENDING_UPDATE) return true;\n\t} else {\n\t\t// if this component used no signals or computeds, update:\n\t\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\t}\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T): Signal<T>;\nexport function useSignal<T = undefined>(): Signal<T | undefined>;\nexport function useSignal<T>(value?: T) {\n\treturn useMemo(() => signal<T | undefined>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nfunction safeRaf(callback: () => void) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tcancelAnimationFrame(raf);\n\t\tcallback();\n\t};\n\n\tconst timeout = setTimeout(done, 100);\n\tconst raf = requestAnimationFrame(done);\n}\n\nconst deferEffects =\n\ttypeof requestAnimationFrame === \"undefined\" ? setTimeout : safeRaf;\n\nconst deferDomUpdates = (cb: any) => {\n\tqueueMicrotask(() => {\n\t\tqueueMicrotask(cb);\n\t});\n};\n\nfunction flushEffects() {\n\tbatch(() => {\n\t\tlet inst: Effect | undefined;\n\t\twhile ((inst = effectsQueue.shift())) {\n\t\t\toldNotify.call(inst);\n\t\t}\n\t});\n}\n\nfunction notifyEffects(this: Effect) {\n\tif (effectsQueue.push(this) === 1) {\n\t\t(options.requestAnimationFrame || deferEffects)(flushEffects);\n\t}\n}\n\nfunction flushDomUpdates() {\n\tbatch(() => {\n\t\tlet inst: Effect | undefined;\n\t\twhile ((inst = domQueue.shift())) {\n\t\t\toldNotify.call(inst);\n\t\t}\n\t});\n}\n\nfunction notifyDomUpdates(this: Effect) {\n\tif (domQueue.push(this) === 1) {\n\t\t(options.requestAnimationFrame || deferDomUpdates)(flushDomUpdates);\n\t}\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(function (this: Effect) {\n\t\t\tthis._notify = notifyEffects;\n\t\t\treturn callback.current();\n\t\t});\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","import { Signal, signal } from '@preact/signals';\nimport { h } from 'preact';\nimport style from './style.css';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport createEdgeModule from '../../edge-classic';\nimport LicenseModal from '../licenses';\n\nconst defaultDoomIWad = \"/freedoom2.wad\"\nconst defaultHereticIWad = \"/blasphem.wad\";\n\ntype PlayerConfig = {\n\tindexDBName: string;\n}\n\ntype WadState = {\n\terror?: string;\n\twadName?: string;\n\tisIWAD?: boolean;\n}\n\nconst config: PlayerConfig = {\n\tindexDBName: '/edge-classic'\n}\n\nfunction getCookie(cname: string): string {\n\tlet name = cname + \"=\";\n\tlet ca;\n\t// prerender guard\n\tif (typeof window !== 'undefined') {\n\t\tca = document.cookie.split(';');\n\t}\n\tif (!ca) {\n\t\treturn \"\";\n\t}\n\tfor (let i = 0; i < ca.length; i++) {\n\t\tlet c = ca[i];\n\t\twhile (c.charAt(0) == ' ') {\n\t\t\tc = c.substring(1);\n\t\t}\n\t\tif (c.indexOf(name) == 0) {\n\t\t\treturn c.substring(name.length, c.length);\n\t\t}\n\t}\n\treturn \"\";\n}\n\nclass WadHandler {\n\n\tconstructor(config: PlayerConfig) {\n\t\tthis.config = config;\n\t}\n\n\tprivate error(message: string) {\n\t\talert(message);\n\t\tconsole.error(message);\n\t\tconsole.trace();\n\t}\n\n\tsetWads(wads: WadState[] | undefined) {\n\t\tthis.wadState.value = wads;\n\t}\n\n\tasync uploadWads(files: File[]) {\n\n\t\tconst wads: WadState[] = [];\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\n\t\t\tconst file = files[i];\n\n\t\t\tlet database: IDBDatabase | undefined;\n\n\t\t\ttry {\n\t\t\t\tdatabase = await this.openDatabase();\n\t\t\t\tif (!database) {\n\t\t\t\t\tthis.error(\"Unable to open database\")\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis.error(e);\n\t\t\t\tdatabase?.close();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst upload = new Promise<WadState>((resolve, reject) => {\n\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.readAsArrayBuffer(file);\n\n\t\t\t\treader.onload = (e) => {\n\n\t\t\t\t\tconst bits = e.target.result;\n\t\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\n\n\t\t\t\t\tconst iwad = contents[0] === 73;\n\n\t\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\n\t\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\n\t\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\n\n\t\t\t\t\taddReq.onerror = (e) => {\n\t\t\t\t\t\treject(\"Error storing wad data\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttrans.oncomplete = (e) => {\n\t\t\t\t\t\tresolve({ wadName: file.name, isIWAD: iwad });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treader.onerror = (e) => {\n\t\t\t\t\treject(\"Error reading wad\");\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttry {\n\t\t\t\tconst wad = await upload;\n\t\t\t\tdatabase?.close();\n\t\t\t\tdatabase = undefined;\n\t\t\t\twads.push(wad)\n\t\t\t} catch (e) {\n\t\t\t\tthis.error(e);\n\t\t\t} finally {\n\t\t\t\tdatabase?.close();\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setWads(wads.length ? wads : undefined);\n\n\t}\n\n\tprivate async openDatabase() {\n\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\n\n\t\t\t// build pre-render guard\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\n\n\t\t\t\tdbrequest.onerror = (e) => {\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\n\t\t\t\t}\n\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\n\n\t\t\t\t\tconsole.log(\"upgrade needed\");\n\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tdbrequest.onsuccess = (e) => {\n\t\t\t\t\tconsole.log(\"db open\");\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\n\t\t\t\t\tresolve(db);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\twadState: Signal<WadState[] | undefined> = signal(undefined);\n\n\tconfig: PlayerConfig;\n\n\tstatic get singleton(): WadHandler {\n\t\tif (!WadHandler.instance) {\n\t\t\tWadHandler.instance = new WadHandler(config);\n\t\t}\n\t\treturn WadHandler.instance;\n\t}\n\n\tprivate static instance?: WadHandler;\n}\n\ntype Project = {\n\tname: string;\n\timage: string;\n\tlink: string;\n}\n\nconst projects: Project[] = [\n\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\n]\n\nconst WadChooser = () => {\n\n\tconst [showLicense, setShowLicense] = useState(false);\n\n\tconst pelements = projects.map(p => {\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\n\t\t\t</div>\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\n\t\t\t</div>\n\t\t</a>\n\t});\n\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\n\t\t{showLicense && <LicenseModal onClose={() => setShowLicense(false)} />}\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tWadHandler.singleton.setWads([{ wadName: defaultDoomIWad, isIWAD: true }])\n\t\t\t\t\t\t}}>Play Freedoom 2</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tWadHandler.singleton.setWads([{ wadName: defaultHereticIWad, isIWAD: true }])\n\t\t\t\t\t\t}}>Play Blasphemer</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\n\t\t\t\t\t\t}}>Play Wad, EPK, or Zip files</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\n\n\t\t\t\t\t<textarea style=\"font-size:12px;width:292px;height:48px\" placeholder=\"Enter custom command line\" spellcheck={false} onChange={(ev: any) => {\n\n\t\t\t\t\t\tconst value = (ev?.target?.value?.length ? ev?.target?.value : undefined)?.trim().replace(\"\\n\", \" \");\n\t\t\t\t\t\tif (value?.length) {\n\t\t\t\t\t\t\tdocument.cookie = `customCommandLineCookie=${value}; SameSite=None; Secure`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdocument.cookie = `customCommandLineCookie=; SameSite=None; Secure`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}}>{getCookie(\"customCommandLineCookie\")?.trim() ?? \"\"}</textarea>\n\n\n\t\t\t\t\t<div style={{ paddingTop: 128 }} />\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tsetShowLicense(true);\n\t\t\t\t\t\t}}>Show Licenses</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" multiple onChange={(e) => {\n\t\t\t\t\tconst files = Array.from((e.target as any).files as File[]);\n\t\t\t\t\tif (files.length === 0) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst badFile = files.find(f => {\n\t\t\t\t\t\tconst check = f.name.toLowerCase();\n\t\t\t\t\t\tif (!check.endsWith(\".wad\") && !check.endsWith(\".zip\") && !check.endsWith(\".epk\") && !check.endsWith(\".7z\")) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t})\n\n\t\t\t\t\tif (badFile) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\talert(`Please select wad, epk, or zip files, ${badFile.name} is invalid`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\n\t\t\t\t\twadHandler.uploadWads(files);\n\n\t\t\t\t}} />\n\t\t\t</div>\n\t\t</div>\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\n\t\t\t</div>\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\n\t\t\t\t{pelements}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n}\n\nconst EdgeClassic = () => {\n\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\n\tconst wadState = WadHandler.singleton.wadState.value;\n\n\n\tconst pointerLockChange = () => {\n\t\tconst canvas = canvasRef?.current;\n\t\tconst lock = canvas === document.pointerLockElement;\n\n\t\t// disabled for embedded classic site\n\t\t//Module._WebSetFullscreen(lock ? 1 : 0);\n\n\t\t/*\n\t\t// It feels good to open the menu when releasing pointer lock\n\t\t// though, it makes the interaction tricky to close the menu\n\t\tif (!lock) {\n\t\t\tModule._WebOpenGameMenu(1);\n\t\t}\n\t\t*/\n\t}\n\n\tuseEffect(() => {\n\n\t\tconst canvas = canvasRef?.current;\n\t\tconst canvasContainer = canvasContainerRef?.current;\n\n\t\tlet iwad = wadState?.find(w => w.isIWAD);\n\n\t\tif (!iwad) {\n\t\t\tiwad = { wadName: defaultDoomIWad, isIWAD: true };\n\t\t}\n\t\t\n\t\tconsole.log(\"WadState\", wadState);\n\n\t\t/*\n\t\tlet iwad = defaultDoomIWad;\n\t\tif (wadState.wadName === defaultHereticIWad) {\n\t\t\tiwad = defaultHereticIWad;\n\t\t}\n\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\n\t\t\tiwad = `edge-classic/${wadName}`;\n\t\t}\n\t\t*/\n\n\t\tif (!iwad) {\n\t\t\tthrow \"Unable to get iwad\";\n\t\t}\n\n\n\t\tif (!canvasContainer) {\n\t\t\tthrow \"Unable to get canvas container\";\n\t\t}\n\n\t\tif (!canvas) {\n\t\t\tthrow \"Unable to get canvas\";\n\t\t}\n\n\t\tconst syncCanvasSize = () => {\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\n\t\t\tcanvas.style.width = `${w}px`;\n\t\t\tcanvas.style.height = `${h}px`;\n\t\t\tcanvas.width = w;\n\t\t\tcanvas.height = h;\n\t\t}\n\n\t\t// initial update\n\t\tsyncCanvasSize();\n\n\t\tconst canvasSync = () => {\n\t\t\tsyncCanvasSize();\n\t\t\tModule._WebSyncScreenSize();\n\t\t};\n\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\n\n\t\tlet doSyncTimeout;\n\t\twindow.addEventListener(\"resize\", (ev) => {\n\n\t\t\tclearTimeout(doSyncTimeout);\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\n\n\t\t});\n\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\n\n\t\tlet iwadPath = iwad.wadName!;\n\t\tif (iwadPath !== defaultDoomIWad && iwadPath !== defaultHereticIWad) {\n\t\t\tiwadPath = `edge-classic/${iwadPath}`;\n\t\t}\n\n\t\tconst args = [\"-home\", \"/edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwadPath];\n\n\t\twadState.forEach(w => {\n\t\t\tif (w.isIWAD) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\targs.push(\"-file\")\n\t\t\targs.push(`edge-classic/${w.wadName}`);\n\t\t})\n\n\t\tlet customCommandLine = getCookie(\"customCommandLineCookie\");\n\t\tif (customCommandLine?.length) {\n\t\t\targs.push(...customCommandLine.split(\" \"));\n\t\t}\n\n\n\n\t\tcreateEdgeModule({\n\t\t\tedgePostInit: () => {\n\t\t\t\tconsole.log(\"Post-Init!\");\n\t\t\t\t// jump\n\t\t\t\tif (!args.find(a => a.startsWith(\"-warp\"))) {\n\t\t\t\t\tModule._WebOpenGameMenu(1);\n\t\t\t\t}\n\n\t\t\t\tsetState({ ...state, loading: false });\n\t\t\t},\n\t\t\tonFullscreen: () => {\n\t\t\t\t/*\n\t\t\t\tconsole.log(\"On fullscreen\");\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\n\t\t\t\telements?.forEach(e => {\n\t\t\t\t\t(e as any).style.display = \"flex\";\n\t\t\t\t});\n\t\t\t\t*/\n\t\t\t},\n\t\t\tpreEdgeSyncFS: () => {\n\t\t\t},\n\t\t\tpostEdgeSyncFS: () => {\n\t\t\t},\n\t\t\targuments: args,\n\t\t\tpreInit: () => {\n\t\t\t\tconsole.log(\"Pre-Init\");\n\t\t\t},\n\t\t\tpreRun: [],\n\t\t\tpostRun: [],\n\t\t\tprint: (function () {\n\t\t\t\treturn function (text) {\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\n\t\t\t\t\tconsole.log(text);\n\t\t\t\t};\n\t\t\t})(),\n\t\t\tprintErr: function (text) {\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\n\t\t\t\tconsole.error(text);\n\t\t\t},\n\t\t\tcanvas: canvas,\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\n\t\t}).then(module => {\n\t\t\tglobalThis.Module = module;\n\t\t\tmodule.canvas = canvas;\n\t\t});\n\n\n\t\treturn () => {\n\n\t\t};\n\n\t}, []);\n\n\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\n\t\t\tonClick={async (ev) => {\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\n\t\t\t\tif (!lock) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}} />\n\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\n\t\t\t<div class={style.loading}>\n\t\t\t\t<span style=\"--i:1\">L</span>\n\t\t\t\t<span style=\"--i:2\">O</span>\n\t\t\t\t<span style=\"--i:3\">A</span>\n\t\t\t\t<span style=\"--i:4\">D</span>\n\t\t\t\t<span style=\"--i:5\">I</span>\n\t\t\t\t<span style=\"--i:6\">N</span>\n\t\t\t\t<span style=\"--i:7\">G</span>\n\t\t\t\t<span style=\"--i:8\">.</span>\n\t\t\t\t<span style=\"--i:9\">.</span>\n\t\t\t\t<span style=\"--i:10\">.</span>\n\t\t\t</div>\n\t\t</div>}\n\n\t</div>\n}\n// floating player controls, not currently used\n// {!state.loading && <PlayerControls />}\n\nconst PlayerControls = () => {\n\tconst [fullscreen, setFullscreen] = useState(false);\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\n\t\t</div>\n\t</div>\n}\n\nconst Player = () => {\n\n\tconst wadHandler = WadHandler.singleton;\n\tconst wadState = wadHandler.wadState.value;\n\n\treturn (\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\n\t\t\t{!wadState?.length && <WadChooser />}\n\t\t\t{!!wadState?.length && <EdgeClassic />}\n\t\t</div>\n\t);\n};\n\nexport default Player;\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal__bCOJk\",\"modal_content\":\"modal_content__O8DzT\",\"animatetop\":\"animatetop__1b7Bz\",\"close\":\"close__jJbSs\",\"modal_header\":\"modal_header__7dLiC\",\"modal_body\":\"modal_body__8R0ze\",\"modal_footer\":\"modal_footer__P6GcC\"};","import { FunctionComponent, h } from 'preact';\nimport style from './style.css';\n\nconst LicenseModal = ({ onClose }) => (\n    <div id=\"myModal\" class={style.modal}>\n        <div class={style.modal_content}>\n            <div class={style.modal_header}>\n                <span class={style.close} onClick={() => onClose()}>&times;</span>\n                <h2>EDGE-Classic Licenses</h2>\n            </div>\n            <div class={style.modal_body}>\n                <div style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"512px\" }}>\n                    <div style={{ fontFamily: \"monospace\", whiteSpace: \"pre\", fontSize: 11 }}>{license}</div>\n                </div>\n            </div>\n            <div class={style.modal_footer}>\n            </div>\n        </div>\n    </div>\n\n);\n\nconst license = `===========================================================================================\nApache License 2.0\n===========================================================================================\n\nglad2 Loader Generator (generated output) - Copyright (c) 2013-2020 The Khronos Group Inc. \n\n===========================================================================================\nBSD 3-Clause License\n===========================================================================================\n\n\"16-Bit Game Station\" soundfont (select melodic instruments) - Copyright (c) 2009 Beatnik, Inc\n\nAlmostEquals Google Test Framework Component - Copyright (c) 2005 Google, Inc.\n\nBlasphemer (various assets) - Copyright (c) 2021 Contributors to the Blasphemer project\n\nFreedoom (various assets) - Copyright (c) 2001-2019 Contributors to the Freedoom project\n\nminivorbis library - Copyright (c) 2020 Eduardo Bart\n  Copyright (c) 2002-2020 Xiph.org Foundation\n\nMod4Play library - \tCopyright (c) 2024-2025 dashodanger\n\t\t\t\t\tCopyright (c) 2022 Olav Sørensen\n\nOpalMIDI library - Copyright (c) 2025, Dashodanger\n\t\t\t\t   Copyright (c) 2021-2024, Devin Acker\n\t\t\t\t   Opal Emulation released into Public Domain by Reality Productions\n\n===========================================================================================\nCC 1.0 Universal License\n===========================================================================================\n\nHandmadeMath.h - Ben Visness\n\n\"ProtoSquare!\" soundfont - Yingchun Soul\n\n===========================================================================================\nCC-BY-3.0 Unported License\n===========================================================================================\n\nGerman Shepherd Dog Sprites - Copyright (c) 2017 Nash Muhandes\n\n===========================================================================================\nCC-BY-NC-4.0 International License\n===========================================================================================\n\nREKKR (various assets) - Copyright (c) 2021 Mockingbird Softworks\n\n===========================================================================================\nCC-BY-SA-4.0 International License\n===========================================================================================\n\n\"ChipFreak\" soundfont - Copyright (c) Jayvee Enaguas\n\n===========================================================================================\nGPL3 License\n===========================================================================================\n\nAJBSP - Copyright (c) 2000-2023 Andrew Apted, et al\n\t \tCopyright (c) 1994-1998 Colin Reed\n\t \tCopyright (c) 1997-1998 Lee Killough\n\nCOAL - Copyright (c) 2021-2024 The EDGE Team\n\t   Copyright (c) 2009-2021 Andrew Apted, et al\n       Copyright (c) 1996-1997 Id Software, Inc.\n\nDDF library - Copyright (c) 1999-2024 The EDGE Team\n\nDEH_EDGE library - Copyright (c) 2004-2024 The EDGE Team\n\nEDGE-Classic - Copyright (c) 1999-2024 The EDGE Team\n\nEPI library - Copyright (c) 2002-2024 The EDGE Team\n\nFluidlite - Copyright (c) 2016 Robin Lobel\n\nSLADE (IMF->WAV conversion and sky drawing routines) - Copyright (c) 2008 - 2023 Simon Judd\n\nXMIDI library (MIDI conversion) - Copyright (c) 2015-2022 Vitaly Novichkov\n\t\t\t\t\t\t\t\t  Copyright (c) 2015-2016 WildMIDI Developers\n\t\t\t\t\t\t\t\t  Copyright (c) 2014 Bret Curtis\n\t\t\t\t\t\t\t\t  Copyright (c) 2001 Ryan Nunn\n\n===========================================================================================\nHacX License\n===========================================================================================\n\nHacX 1.2/2.0 (various assets) - Copyright (c) 1997-2012 Banjo Software, et al\n\n===========================================================================================\nMIT License\n===========================================================================================\n\n3dreamEngine Lua Math Libraries - Copyright (c) 2019 Luke100000 \n\n\"16-Bit Game Station\" soundfont (percussion and select melodic instruments) - Copyright (c) 2022 Yingchun Soul\n\nbase64.lua - Copyright (c) 2018 Ilya Kolbin \n\nBW_Midi_Sequencer library - Copyright (c) 2015-2022 Vitaly Novichkov\n\n\"C++ implementation of a fast Gaussian blur algorithm by Ivan Kutskir - Integer Version\"\n\t- Copyright (C) 2017 Basile Fraboni\n\t- Copyright (C) 2014 Ivan Kutskir\n\nDear ImGUI - Copyright (c) 2014-2023 Omar Cornut\n\ndebugger.lua -Copyright (c) 2023 Scott Lembcke and Howling Moon Software\n\njson.lua - Copyright (c) 2020 rxi\n\nLua - Copyright (C) 1994-2023 Lua.org, PUC-Rio.\n\nminiz library - Copyright (c) 2013-2014 RAD Game Tools and Valve Software\n\t\t\t\tCopyright (c) 2010-2014 Rich Geldreich and Tenacious Software LLC\n\nPL_MPEG library - Copyright(c) 2019 Dominic Szablewski\n\nPNPOLY algorithm - Copyright (c) 1970-2003 Wm. Randolph Franklin\n\nStringHash class - Copyright (c) 2024-2024 the rbfx project\n\t\t\t       Copyright (c) 2008-2022 the Urho3D project.\n\n===========================================================================================\nPublic Domain\n===========================================================================================\n\nFraction.hpp - Bisqwit\n\nMiniaudio library - David Reid\n\nprns.h - Marc B. Reynolds\n\n\"sf_GMbank\" soundfont (renamed to Default.sf2) - The Csound Developers\n\nstb_image, stb_rect_pack, stb_sprintf and stb_truetype libraries - Sean Barrett\n\n===========================================================================================\nSIL Open Font License\n===========================================================================================\n\nFira Code (renamed to ECFONT02.ttf) - Copyright 2014-2020 The Fira Code Project Authors\n\nGermania One (renamed to ECFONT03.ttf) - Copyright (c) 2011, John Vargas Beltrán,\n\t\t\t\t\t\t\t\t\t\t with Reserved Font Name \"Germania One\"\n\nRusso One (renamed to ECFONT01.ttf) - Copyright (c) 2011-2012, Jovanny Lemonad,\n\t\t\t\t\t\t\t\t\t  with Reserved Font Name \"Russo\"\n\n===========================================================================================\nWidePix License\n===========================================================================================\n\nWidePix (various assets) - Copyright (c) 2020-2021 Nash Muhandes\n\n===========================================================================================\nzlib License\n===========================================================================================\n\nSDL2 library - Copyright (c) 1997-2020 Sam Lantinga\n\nSokol libraries - Copyright (c) 2018 Andre Weissflog\n`\n\nexport default LicenseModal;\n","import './style/index.css';\nimport App from './components/app';\n\nexport default App;\n","import { h } from 'preact';\n\nimport Player from './player';\n\nconst App = () => (\n\t<div id=\"app\">\n\t\t<main>\n\t\t\t<Player/>\n\t\t</main>\n\t</div>\n);\n\nexport default App;\n"],"sourceRoot":""}